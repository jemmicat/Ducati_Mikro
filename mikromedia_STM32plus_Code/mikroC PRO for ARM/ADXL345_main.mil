ADXL345_main_Accel_Average:
  begin   (midx: 0)
//ADXL345_main.c,44 :: 		static void Accel_Average() {
ADXL345_main_Accel_Average:
  begin   (midx: 0)
//ADXL345_main.c,48 :: 		sx = sy = sz = 0;
   (midx: 0)
	R4 <2> <- 0   (midx: 0)
   (midx: 0)
	R5 <2> <- 0   (midx: 0)
   (midx: 0)
	R6 <2> <- 0   (midx: 0)
//ADXL345_main.c,51 :: 		for (i=0; i<16; i++) {
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <2> <- 0   (midx: 0)
	R4 <2> <- R4   (midx: 0)
	R5 <2> <- R5   (midx: 0)
	R6 <2> <- R6   (midx: 0)
	R3 <2> <- R3   (midx: 0)
0:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R3 >= 16) then goto 1   (midx: 5)
//ADXL345_main.c,52 :: 		ADXL345_Read(&xx, &yy, &zz);
	R2 <4> <- addr(ADXL345_main_Accel_Average_zz_L0)   (midx: 0)
	R1 <4> <- addr(ADXL345_main_Accel_Average_yy_L0)   (midx: 0)
	R0 <4> <- addr(ADXL345_main_Accel_Average_xx_L0)   (midx: 0)
	R4 <2> <- PUSH(R4)   (midx: 255)
	R5 <2> <- PUSH(R5)   (midx: 255)
	R6 <2> <- PUSH(R6)   (midx: 255)
	R3 <2> <- PUSH(R3)   (midx: 255)
	R2 <4> <- R2   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _ADXL345_Read   (midx: 0)
	R3 <2> <- POP   (midx: 255)
	R6 <2> <- POP   (midx: 255)
	R5 <2> <- POP   (midx: 255)
	R4 <2> <- POP   (midx: 255)
//ADXL345_main.c,53 :: 		sx += xx;
	R0 <2> <- ADXL345_main_Accel_Average_xx_L0   (midx: 0)
	R6 <2> <-  R6 + R0   (midx: 5)
	R6 <2> <- R6   (midx: 0)
//ADXL345_main.c,54 :: 		sy += yy;
	R0 <2> <- ADXL345_main_Accel_Average_yy_L0   (midx: 0)
	R5 <2> <-  R5 + R0   (midx: 5)
	R5 <2> <- R5   (midx: 0)
//ADXL345_main.c,55 :: 		sz += zz;
	R0 <2> <- ADXL345_main_Accel_Average_zz_L0   (midx: 0)
	R4 <2> <-  R4 + R0   (midx: 5)
	R4 <2> <- R4   (midx: 0)
//ADXL345_main.c,51 :: 		for (i=0; i<16; i++) {
	R3 <2> <-  R3 + 1   (midx: 1)
	R3 <2> <- R3   (midx: 0)
//ADXL345_main.c,56 :: 		}
   (midx: 0)
	R4 <2> <- R4   (midx: 0)
	R5 <2> <- R5   (midx: 0)
	R6 <2> <- R6   (midx: 0)
	R3 <2> <- R3   (midx: 0)
	goto	0   (midx: 0)
1:   (midx: 0)
//ADXL345_main.c,58 :: 		readings[0] = sx >> 4;
   (midx: 0)
	R1 <2> <-  R6 shr 4   (midx: 5)
	R0 <4> <- addr(_readings)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//ADXL345_main.c,59 :: 		readings[1] = sy >> 4;
   (midx: 0)
	R1 <2> <-  R5 shr 4   (midx: 5)
	R0 <4> <- addr(_readings+2)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//ADXL345_main.c,60 :: 		readings[2] = sz >> 4;
   (midx: 0)
	R1 <2> <-  R4 shr 4   (midx: 5)
	R0 <4> <- addr(_readings+4)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
  end
   (midx: 0)
ADXL345_main_Display_Value:
  begin   (midx: 0)
//ADXL345_main.c,70 :: 		static void Display_Value(TLabel *label, int val) {
ADXL345_main_Display_Value:
  begin   (midx: 0)
   (midx: 0)
	FARG_ADXL345_main_Display_Value_label <4> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
	R7 <2> <- R1   (midx: 0)
   (midx: 0)
//ADXL345_main.c,74 :: 		ptr = label->Caption;
	R2 <4> <- FARG_ADXL345_main_Display_Value_label   (midx: 0)
	R2 <4> <-  R2 + 16   (midx: 2)
	R2 <4> <- *R2   (midx: 0)
	ADXL345_main_Display_Value_ptr_L0 <4> <- R2   (midx: 0)
//ADXL345_main.c,75 :: 		TFT_Set_Pen(Accelerometer.Color,  0);
	R2 <4> <- addr(_Accelerometer+0)   (midx: 0)
	R2 <2> <- [R2]   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <2> <- R2   (midx: 0)
	CALL _TFT_Set_Pen   (midx: 0)
//ADXL345_main.c,76 :: 		TFT_Set_Brush(1, Accelerometer.Color, 0, 0, 0, 0);
	R4 <2> <- 0   (midx: 0)
	R3 <2> <- 0   (midx: 0)
	R2 <4> <- addr(_Accelerometer+0)   (midx: 0)
	R2 <2> <- [R2]   (midx: 0)
	FARG_TFT_Set_Brush_gradient_color_to <2> <- PUSH(R4)   (midx: 0)
	FARG_TFT_Set_Brush_gradient_color_from <2> <- PUSH(R3)   (midx: 0)
	R3 <1> <- 0   (midx: 0)
	R1 <2> <- R2   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R0 <1> <- 1   (midx: 0)
	CALL _TFT_Set_Brush   (midx: 0)
//ADXL345_main.c,77 :: 		IntToStr(val & 0xFE, text);
	R3 <4> <- addr(ADXL345_main_Display_Value_text_L0)   (midx: 0)
   (midx: 0)
	R2 <2> <-  R7 & 254   (midx: 5)
	R1 <4> <- R3   (midx: 0)
	R0 <2> <- R2   (midx: 0)
	CALL _IntToStr   (midx: 0)
//ADXL345_main.c,78 :: 		strcpy(text1, ptr);
	R2 <4> <- addr(ADXL345_main_Display_Value_text1_L0)   (midx: 0)
	R1 <4> <- ADXL345_main_Display_Value_ptr_L0   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	CALL _strcpy   (midx: 0)
//ADXL345_main.c,79 :: 		strcat(text1, text);
	R3 <4> <- addr(ADXL345_main_Display_Value_text_L0)   (midx: 0)
	R2 <4> <- addr(ADXL345_main_Display_Value_text1_L0)   (midx: 0)
	R1 <4> <- R3   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	CALL _strcat   (midx: 0)
//ADXL345_main.c,80 :: 		TFT_Rectangle(label->Left, Label->Top, label->Left + 55, Label->Top + 20);
	R2 <4> <- FARG_ADXL345_main_Display_Value_label   (midx: 0)
	R2 <4> <-  R2 + 8   (midx: 2)
	R3 <2> <- *R2   (midx: 0)
	R5 <2> <-  R3 + 20   (midx: 1)
	R2 <4> <- FARG_ADXL345_main_Display_Value_label   (midx: 0)
	R2 <4> <-  R2 + 6   (midx: 2)
	R2 <2> <- *R2   (midx: 0)
	R4 <2> <-  R2 + 55   (midx: 1)
	R3 <2> <- R3   (midx: 0)
	R2 <2> <- R2   (midx: 0)
	R1 <2> <- R3   (midx: 0)
	R3 <2> <- R5   (midx: 0)
	R0 <2> <- R2   (midx: 0)
	R2 <2> <- R4   (midx: 0)
	CALL _TFT_Rectangle   (midx: 0)
//ADXL345_main.c,81 :: 		label->Caption = text1;
	R2 <4> <- FARG_ADXL345_main_Display_Value_label   (midx: 0)
	R3 <4> <-  R2 + 16   (midx: 2)
	R2 <4> <- addr(ADXL345_main_Display_Value_text1_L0)   (midx: 0)
	[R3] <4> <- R2   (midx: 0)
//ADXL345_main.c,82 :: 		Drawlabel(label);
	R0 <4> <- FARG_ADXL345_main_Display_Value_label   (midx: 0)
	CALL _DrawLabel   (midx: 0)
//ADXL345_main.c,83 :: 		label->Caption = ptr;
	R2 <4> <- FARG_ADXL345_main_Display_Value_label   (midx: 0)
	R3 <4> <-  R2 + 16   (midx: 2)
	R2 <4> <- ADXL345_main_Display_Value_ptr_L0   (midx: 0)
	[R3] <4> <- R2   (midx: 0)
  end
   (midx: 0)
ADXL345_main_Scroll_ACCEL:
  begin   (midx: 0)
//ADXL345_main.c,95 :: 		static void Scroll_ACCEL(char Adir) {
ADXL345_main_Scroll_ACCEL:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
   (midx: 0)
//ADXL345_main.c,98 :: 		if (Adir == _ACCEL_UP) {
   (midx: 0)
	if ( R0 != 1) then goto 3   (midx: 5)
//ADXL345_main.c,99 :: 		if (_disp_accel_scroll != _SCROLL_ACCEL_FIRST_LINE)
	R1 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	if ( R1 = 41) then goto 4   (midx: 5)
//ADXL345_main.c,100 :: 		_disp_accel_scroll--;
	R2 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 - 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
	goto	5   (midx: 0)
4:   (midx: 0)
//ADXL345_main.c,102 :: 		_disp_accel_scroll = _SCROLL_ACCEL_LAST_LINE - 1;
	R2 <2> <- 245   (midx: 0)
	R1 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	[R1] <2> <- R2   (midx: 0)
//ADXL345_main.c,103 :: 		}
5:   (midx: 0)
//ADXL345_main.c,104 :: 		}
	goto	6   (midx: 0)
3:   (midx: 0)
//ADXL345_main.c,106 :: 		if (_disp_accel_scroll != _SCROLL_ACCEL_LAST_LINE - 1)
	R1 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	if ( R1 = 245) then goto 7   (midx: 5)
//ADXL345_main.c,107 :: 		_disp_accel_scroll++;
	R2 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 + 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
	goto	8   (midx: 0)
7:   (midx: 0)
//ADXL345_main.c,109 :: 		_disp_accel_scroll = _SCROLL_ACCEL_FIRST_LINE;
	R2 <2> <- 41   (midx: 0)
	R1 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	[R1] <2> <- R2   (midx: 0)
//ADXL345_main.c,110 :: 		}
8:   (midx: 0)
//ADXL345_main.c,111 :: 		}
6:   (midx: 0)
//ADXL345_main.c,113 :: 		Scroll(_disp_accel_scroll);
	R1 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	R0 <2> <- R1   (midx: 0)
	CALL _Scroll   (midx: 0)
  end
   (midx: 0)
ADXL345_main_WriteGraph:
  begin   (midx: 0)
//ADXL345_main.c,123 :: 		static void WriteGraph(TAccel_values *old, TAccel_values *new){
ADXL345_main_WriteGraph:
  begin   (midx: 0)
	FARG_ADXL345_main_WriteGraph_old <4> <- R0   (midx: 0)
   (midx: 0)
	FARG_ADXL345_main_WriteGraph_new <4> <- R1   (midx: 0)
//ADXL345_main.c,125 :: 		if ((_disp_accel_scroll < _SCROLL_ACCEL_LAST_LINE - 2) && (_disp_accel_scroll > _SCROLL_ACCEL_FIRST_LINE)){
	R2 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	R2 <2> <- [R2]   (midx: 0)
	if ( R2 >= 244) then goto 26   (midx: 5)
	R2 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	R2 <2> <- [R2]   (midx: 0)
	if ( R2 <= 41) then goto 25   (midx: 5)
24:   (midx: 0)
//ADXL345_main.c,126 :: 		TFT_Set_Pen(CL_RED, 2);
	R1 <1> <- 2   (midx: 0)
	R0 <2> <- 63488   (midx: 0)
	CALL _TFT_Set_Pen   (midx: 0)
//ADXL345_main.c,127 :: 		temp1 = (old->Xvalue * 30) / 256 + 90;
	R2 <4> <- FARG_ADXL345_main_WriteGraph_old   (midx: 0)
	R3 <2> <- *R2   (midx: 0)
	R2 <2> <- 30   (midx: 0)
	R0 <2> <-  R3 * R2   (midx: 5)
	R0 <2> <-  R0 shr 8   (midx: 5)
	R0 <2> <-  R0 + 90   (midx: 5)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
//ADXL345_main.c,128 :: 		temp2 = (new->Xvalue * 30) / 256 + 90;
	R2 <4> <- FARG_ADXL345_main_WriteGraph_new   (midx: 0)
	R3 <2> <- *R2   (midx: 0)
	R2 <2> <- 30   (midx: 0)
	R2 <2> <-  R3 * R2   (midx: 5)
	R2 <2> <-  R2 shr 8   (midx: 5)
	R5 <2> <-  R2 + 90   (midx: 5)
//ADXL345_main.c,129 :: 		TFT_Line(temp1, _disp_accel_scroll + 2, temp2, _disp_accel_scroll + 1);
	R4 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	R2 <2> <- [R4]   (midx: 0)
	R3 <2> <-  R2 + 1   (midx: 5)
	R2 <4> <- R4   (midx: 0)
	R2 <2> <- [R2]   (midx: 0)
	R2 <2> <-  R2 + 2   (midx: 5)
	R3 <2> <- R3   (midx: 0)
	R1 <2> <- R2   (midx: 0)
	R2 <2> <- R5   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_Line   (midx: 0)
//ADXL345_main.c,131 :: 		TFT_Set_Pen(CL_BLUE, 2);
	R1 <1> <- 2   (midx: 0)
	R0 <2> <- 31   (midx: 0)
	CALL _TFT_Set_Pen   (midx: 0)
//ADXL345_main.c,132 :: 		temp1 = (old->Yvalue * 30) / 256 + 240;
	R2 <4> <- FARG_ADXL345_main_WriteGraph_old   (midx: 0)
	R2 <4> <-  R2 + 2   (midx: 2)
	R3 <2> <- *R2   (midx: 0)
	R2 <2> <- 30   (midx: 0)
	R0 <2> <-  R3 * R2   (midx: 5)
	R0 <2> <-  R0 shr 8   (midx: 5)
	R0 <2> <-  R0 + 240   (midx: 5)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
//ADXL345_main.c,133 :: 		temp2 = (new->Yvalue * 30) / 256 + 240;
	R2 <4> <- FARG_ADXL345_main_WriteGraph_new   (midx: 0)
	R2 <4> <-  R2 + 2   (midx: 2)
	R3 <2> <- *R2   (midx: 0)
	R2 <2> <- 30   (midx: 0)
	R2 <2> <-  R3 * R2   (midx: 5)
	R2 <2> <-  R2 shr 8   (midx: 5)
	R5 <2> <-  R2 + 240   (midx: 5)
//ADXL345_main.c,134 :: 		TFT_Line(temp1, _disp_accel_scroll + 2, temp2, _disp_accel_scroll + 1);
	R4 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	R2 <2> <- [R4]   (midx: 0)
	R3 <2> <-  R2 + 1   (midx: 5)
	R2 <4> <- R4   (midx: 0)
	R2 <2> <- [R2]   (midx: 0)
	R2 <2> <-  R2 + 2   (midx: 5)
	R3 <2> <- R3   (midx: 0)
	R1 <2> <- R2   (midx: 0)
	R2 <2> <- R5   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_Line   (midx: 0)
//ADXL345_main.c,136 :: 		TFT_Set_Pen(CL_GREEN, 2);
	R1 <1> <- 2   (midx: 0)
	R0 <2> <- 1024   (midx: 0)
	CALL _TFT_Set_Pen   (midx: 0)
//ADXL345_main.c,137 :: 		temp1 = (old->Zvalue * 30) / 256 + 390;
	R2 <4> <- FARG_ADXL345_main_WriteGraph_old   (midx: 0)
	R2 <4> <-  R2 + 4   (midx: 2)
	R3 <2> <- *R2   (midx: 0)
	R2 <2> <- 30   (midx: 0)
	R2 <2> <-  R3 * R2   (midx: 5)
	R2 <2> <-  R2 shr 8   (midx: 5)
	R2 <2> <-  R2 + 390   (midx: 5)
   (midx: 0)
	R0 <2> <- R2   (midx: 0)
//ADXL345_main.c,138 :: 		temp2 = (new->Zvalue * 30) / 256 + 390;
	R2 <4> <- FARG_ADXL345_main_WriteGraph_new   (midx: 0)
	R2 <4> <-  R2 + 4   (midx: 2)
	R3 <2> <- *R2   (midx: 0)
	R2 <2> <- 30   (midx: 0)
	R2 <2> <-  R3 * R2   (midx: 5)
	R2 <2> <-  R2 shr 8   (midx: 5)
	R5 <2> <-  R2 + 390   (midx: 5)
//ADXL345_main.c,139 :: 		TFT_Line(temp1, _disp_accel_scroll + 2, temp2, _disp_accel_scroll + 1);
	R4 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	R2 <2> <- [R4]   (midx: 0)
	R3 <2> <-  R2 + 1   (midx: 5)
	R2 <4> <- R4   (midx: 0)
	R2 <2> <- [R2]   (midx: 0)
	R2 <2> <-  R2 + 2   (midx: 5)
	R3 <2> <- R3   (midx: 0)
	R1 <2> <- R2   (midx: 0)
	R2 <2> <- R5   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_Line   (midx: 0)
//ADXL345_main.c,125 :: 		if ((_disp_accel_scroll < _SCROLL_ACCEL_LAST_LINE - 2) && (_disp_accel_scroll > _SCROLL_ACCEL_FIRST_LINE)){
26:   (midx: 0)
25:   (midx: 0)
  end
   (midx: 0)
ADXL345_main_Scroll_Add_Line:
  begin   (midx: 0)
//ADXL345_main.c,150 :: 		static void Scroll_Add_Line(char ScrollDiection){
ADXL345_main_Scroll_Add_Line:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
   (midx: 0)
//ADXL345_main.c,152 :: 		if (ScrollDiection > 0){
   (midx: 0)
	if ( R0 <= 0) then goto 12   (midx: 0)
//ADXL345_main.c,153 :: 		temp = _disp_accel_scroll + 1;
	R1 <4> <- addr(__disp_accel_scroll)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	R1 <2> <-  R1 + 1   (midx: 5)
   (midx: 0)
	R0 <2> <- R1   (midx: 0)
//ADXL345_main.c,154 :: 		if (temp > _SCROLL_ACCEL_LAST_LINE - 1)
	if ( R1 <= 245) then goto 27   (midx: 5)
//ADXL345_main.c,155 :: 		temp = _SCROLL_ACCEL_FIRST_LINE;
   (midx: 0)
	R0 <2> <- 41   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	goto	13   (midx: 0)
27:   (midx: 0)
//ADXL345_main.c,154 :: 		if (temp > _SCROLL_ACCEL_LAST_LINE - 1)
	R0 <2> <- R0   (midx: 0)
//ADXL345_main.c,155 :: 		temp = _SCROLL_ACCEL_FIRST_LINE;
13:   (midx: 0)
//ADXL345_main.c,156 :: 		TFT_CS = 0;
   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R1 <4> <- addr(TFT_CS)   (midx: 0)
	[R1] <0> <- R2   (midx: 0)
//ADXL345_main.c,157 :: 		TFT_SSD1963_Set_Address_Ptr(0, temp, 480, temp);
	R3 <2> <- R0   (midx: 0)
	R2 <2> <- 480   (midx: 0)
   (midx: 0)
	R1 <2> <- R0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	R4 <4> <- addr(_TFT_SSD1963_Set_Address_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
//ADXL345_main.c,158 :: 		for (i = 0; i < 480; i++)
   (midx: 0)
   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	R0 <2> <- R0   (midx: 0)
14:   (midx: 0)
   (midx: 0)
	if ( R0 >= 480) then goto 15   (midx: 5)
//ADXL345_main.c,159 :: 		if ((i == 90) | (i == 240) | (i == 390))
	R2 <1> <-  R0 = 90   (midx: 5)
	R1 <1> <-  R0 = 240   (midx: 5)
	R2 <1> <-  R2 | R1   (midx: 0)
	R1 <1> <-  R0 = 390   (midx: 5)
	R1 <1> <-  R2 | R1   (midx: 0)
	if (!R1) then goto 17   (midx: 0)
//ADXL345_main.c,160 :: 		TFT_Write_Data_Ptr(CL_SILVER);
	R0 <2> <- PUSH(R0)   (midx: 255)
	R0 <2> <- 50712   (midx: 0)
	R4 <4> <- addr(_TFT_Write_Data_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
	R0 <2> <- POP   (midx: 255)
	goto	18   (midx: 0)
17:   (midx: 0)
//ADXL345_main.c,162 :: 		TFT_Write_Data_Ptr(CL_WHITE);
	R0 <2> <- PUSH(R0)   (midx: 255)
	R0 <2> <- 65535   (midx: 0)
	R4 <4> <- addr(_TFT_Write_Data_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
	R0 <2> <- POP   (midx: 255)
18:   (midx: 0)
//ADXL345_main.c,158 :: 		for (i = 0; i < 480; i++)
	R0 <2> <-  R0 + 1   (midx: 1)
	R0 <2> <- R0   (midx: 0)
//ADXL345_main.c,162 :: 		TFT_Write_Data_Ptr(CL_WHITE);
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	goto	14   (midx: 0)
15:   (midx: 0)
//ADXL345_main.c,163 :: 		TFT_CS = 1;
	R2 <1> <- 1   (midx: 0)
	R1 <4> <- addr(TFT_CS)   (midx: 0)
	[R1] <0> <- R2   (midx: 0)
//ADXL345_main.c,164 :: 		}
12:   (midx: 0)
  end
   (midx: 0)
_Accel_Stop:
  begin   (midx: 0)
//ADXL345_main.c,174 :: 		void Accel_Stop(){
_Accel_Stop:
  begin   (midx: 0)
//ADXL345_main.c,175 :: 		Scroll_Undone(_SCROLL_ACCEL_FIRST_LINE, _SCROLL_ACCEL_LAST_LINE);
	R1 <2> <- 246   (midx: 0)
	R0 <2> <- 41   (midx: 0)
	CALL _Scroll_Undone   (midx: 0)
  end
   (midx: 0)
_ACCEL_Start:
  begin   (midx: 0)
//ADXL345_main.c,185 :: 		void ACCEL_Start(char *test) {
_ACCEL_Start:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R2 <4> <- R0   (midx: 0)
   (midx: 0)
//ADXL345_main.c,187 :: 		*test = 0;
	R1 <1> <- 0   (midx: 0)
	[R2] <1> <- R1   (midx: 0)
//ADXL345_main.c,190 :: 		I2C1_Init_Advanced(400000, &_GPIO_MODULE_I2C1_PB67);
	R2 <4> <- PUSH(R2)   (midx: 255)
	R1 <4> <- #__GPIO_MODULE_I2C1_PB67   (midx: 0)
	R0 <4> <- 400000   (midx: 0)
	CALL _I2C1_Init_Advanced   (midx: 0)
	R2 <4> <- POP   (midx: 255)
//ADXL345_main.c,191 :: 		Delay_ms(100);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//ADXL345_main.c,193 :: 		if (ADXL345_Init() == 0) {
	R2 <4> <- PUSH(R2)   (midx: 255)
	CALL _ADXL345_Init   (midx: 0)
	R2 <4> <- POP   (midx: 255)
	if ( R0 != 0) then goto 20   (midx: 0)
//ADXL345_main.c,194 :: 		*test = 1;
	R1 <1> <- 1   (midx: 0)
   (midx: 0)
	[R2] <1> <- R1   (midx: 0)
//ADXL345_main.c,195 :: 		Delay_ms(500);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//ADXL345_main.c,196 :: 		}
	goto	22   (midx: 0)
20:   (midx: 0)
//ADXL345_main.c,198 :: 		*test = 2;
   (midx: 0)
	R1 <1> <- 2   (midx: 0)
   (midx: 0)
	[R2] <1> <- R1   (midx: 0)
//ADXL345_main.c,199 :: 		}
22:   (midx: 0)
//ADXL345_main.c,200 :: 		Scroll_Undone(_SCROLL_ACCEL_FIRST_LINE, _SCROLL_ACCEL_LAST_LINE);
	R1 <2> <- 246   (midx: 0)
	R0 <2> <- 41   (midx: 0)
	CALL _Scroll_Undone   (midx: 0)
  end
   (midx: 0)
ADXL345_main_ACCEL_Test:
  begin   (midx: 0)
//ADXL345_main.c,210 :: 		static void ACCEL_Test(TAccel_values *values) {
ADXL345_main_ACCEL_Test:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <4> <- R0   (midx: 0)
   (midx: 0)
//ADXL345_main.c,211 :: 		Accel_Average();               // Calculate average X, Y and Z reads
	R0 <4> <- PUSH(R0)   (midx: 255)
	CALL ADXL345_main_Accel_Average   (midx: 0)
	R0 <4> <- POP   (midx: 255)
//ADXL345_main.c,213 :: 		values->Xvalue = readings[0];
	R1 <4> <- addr(_readings)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//ADXL345_main.c,214 :: 		values->Yvalue = readings[1];
	R2 <4> <-  R0 + 2   (midx: 2)
	R1 <4> <- addr(_readings+2)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	[R2] <2> <- R1   (midx: 0)
//ADXL345_main.c,215 :: 		values->Zvalue = readings[2];
   (midx: 0)
	R2 <4> <-  R0 + 4   (midx: 2)
	R1 <4> <- addr(_readings+4)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	[R2] <2> <- R1   (midx: 0)
  end
   (midx: 0)
_doAccel:
  begin   (midx: 0)
//ADXL345_main.c,227 :: 		void doAccel(){
_doAccel:
  begin   (midx: 0)
//ADXL345_main.c,228 :: 		ACCEL_Test(&Accel_vals);
	R0 <4> <- #_Accel_vals   (midx: 0)
	CALL ADXL345_main_ACCEL_Test   (midx: 0)
//ADXL345_main.c,229 :: 		Scroll_ACCEL(_ACCEL_UP);
	R0 <1> <- 1   (midx: 0)
	CALL ADXL345_main_Scroll_ACCEL   (midx: 0)
//ADXL345_main.c,230 :: 		Scroll_Add_Line(_ACCEL_UP);
	R0 <1> <- 1   (midx: 0)
	CALL ADXL345_main_Scroll_Add_Line   (midx: 0)
//ADXL345_main.c,231 :: 		WriteGraph(&Old_Accel_vals, &Accel_vals);
	R1 <4> <- #_Accel_vals   (midx: 0)
	R0 <4> <- #_Old_Accel_vals   (midx: 0)
	CALL ADXL345_main_WriteGraph   (midx: 0)
//ADXL345_main.c,232 :: 		Old_accel_vals = Accel_vals;
	R3 <1> <- 6   (midx: 0)
	R2 <4> <- addr(_Old_Accel_vals)   (midx: 0)
	R1 <4> <- addr(_Accel_vals)   (midx: 0)
23:   (midx: 0)
	R0 <1> <- *R1   (midx: 0)
	[R2] <1> <- R0   (midx: 0)
	R3 <1> <-  R3 - 1   (midx: 0)
	R3 <1> <- R3   (midx: 0)
	R1 <4> <-  R1 + 1   (midx: 0)
	R2 <4> <-  R2 + 1   (midx: 0)
	if (R3) then goto 23   (midx: 0)
//ADXL345_main.c,234 :: 		Display_Value(&LAbel2, Accel_vals.Xvalue);
	R0 <4> <- addr(_Accel_vals+0)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <2> <- R0   (midx: 0)
	R0 <4> <- #_Label2   (midx: 0)
	CALL ADXL345_main_Display_Value   (midx: 0)
//ADXL345_main.c,235 :: 		Display_Value(&LAbel3, Accel_vals.Yvalue);
	R0 <4> <- addr(_Accel_vals+2)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <2> <- R0   (midx: 0)
	R0 <4> <- #_Label3   (midx: 0)
	CALL ADXL345_main_Display_Value   (midx: 0)
//ADXL345_main.c,236 :: 		Display_Value(&LAbel4, Accel_vals.Zvalue);
	R0 <4> <- addr(_Accel_vals+4)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <2> <- R0   (midx: 0)
	R0 <4> <- #_Label4   (midx: 0)
	CALL ADXL345_main_Display_Value   (midx: 0)
  end
   (midx: 0)
