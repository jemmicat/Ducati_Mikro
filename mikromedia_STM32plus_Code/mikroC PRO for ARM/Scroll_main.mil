_Dummy_Set_address:
  begin   (midx: 0)
//Scroll_main.c,67 :: 		void Dummy_Set_address(unsigned int x1, unsigned int y1, unsigned int x2, unsigned int y2){
_Dummy_Set_address:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
//Scroll_main.c,68 :: 		if (current_text_column == y1)
	R4 <4> <- addr(_current_text_column)   (midx: 0)
	R4 <1> <- [R4]   (midx: 0)
   (midx: 0)
	if ( R4 != R1) then goto 0   (midx: 1)
//Scroll_main.c,69 :: 		pix_array[x1] = 1;
	R4 <4> <- #_pix_array   (midx: 0)
   (midx: 0)
	R5 <4> <-  R4 + R0   (midx: 2)
	R4 <1> <- 1   (midx: 0)
	[R5] <1> <- R4   (midx: 0)
0:   (midx: 0)
  end
   (midx: 0)
_Dummy_Write_data:
  begin   (midx: 0)
  end
   (midx: 0)
_Scroll_Get_One_Text_Line:
  begin   (midx: 0)
//Scroll_main.c,83 :: 		void Scroll_Get_One_Text_Line(char line, char *text){
_Scroll_Get_One_Text_Line:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
	R7 <1> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <4> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
//Scroll_main.c,84 :: 		memset(pix_array, 0, 165);
	R2 <2> <- 165   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- #_pix_array   (midx: 0)
	CALL _memset   (midx: 0)
//Scroll_main.c,85 :: 		current_text_column = line;
	R2 <4> <- addr(_current_text_column)   (midx: 0)
   (midx: 0)
	[R2] <1> <- R7   (midx: 0)
//Scroll_main.c,86 :: 		TFT_Write_Data_Ptr =  Dummy_Write_data;
	R3 <4> <- #_Dummy_Write_data   (midx: 0)
	R2 <4> <- addr(_TFT_Write_Data_Ptr)   (midx: 0)
	FLOC_Scroll_Get_One_Text_Line+8 <4> <- R2   (midx: 0)
	[R2] <4> <- R3   (midx: 0)
//Scroll_main.c,87 :: 		TFT_SSD1963_Set_Address_Ptr = Dummy_Set_address;
	R3 <4> <- #_Dummy_Set_address   (midx: 0)
	R2 <4> <- addr(_TFT_SSD1963_Set_Address_Ptr)   (midx: 0)
	[R2] <4> <- R3   (midx: 0)
//Scroll_main.c,88 :: 		TFT_Set_Font(MP3_Font, _MP3_FONT_COLOR, FO_HORIZONTAL);
	R2 <4> <- addr(_MP3_Font)   (midx: 0)
	R2 <4> <- [R2]   (midx: 0)
	R1 <2> <- 65535   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	CALL _TFT_Set_Font   (midx: 0)
//Scroll_main.c,89 :: 		TFT_Write_Text(text, _MP3_TEXT_VLINE, 0);
	R2 <2> <- 0   (midx: 0)
	R1 <2> <- 100   (midx: 0)
   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//Scroll_main.c,90 :: 		TFT_SSD1963_Set_Address_Ptr = TFT_Set_Address_SSD1963II;
	R3 <4> <- #_TFT_Set_Address_SSD1963II   (midx: 0)
	R2 <4> <- addr(_TFT_SSD1963_Set_Address_Ptr)   (midx: 0)
	[R2] <4> <- R3   (midx: 0)
//Scroll_main.c,91 :: 		TFT_Write_Data_Ptr = TFT_Write_to_16bitPort;
	R3 <4> <- #_TFT_Write_to_16bitPort   (midx: 0)
	R2 <4> <- FLOC_Scroll_Get_One_Text_Line+8   (midx: 0)
	[R2] <4> <- R3   (midx: 0)
  end
   (midx: 0)
_Scroll_New_Tex_From_List:
  begin   (midx: 0)
//Scroll_main.c,101 :: 		char Scroll_New_Tex_From_List(char text_number, char *Text){
_Scroll_New_Tex_From_List:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R2 <4> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
//Scroll_main.c,103 :: 		dptr = Text;
   (midx: 0)
   (midx: 0)
	R1 <4> <- R2   (midx: 0)
//Scroll_main.c,104 :: 		ptr = File_List[text_number].FIleName;
	R2 <4> <- 14   (midx: 0)
	R3 <4> <-  R2 * R0   (midx: 2)
	R2 <4> <- #_File_List   (midx: 0)
	R2 <4> <-  R2 + R3   (midx: 2)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R3 <4> <- R2   (midx: 0)
	R3 <4> <- PUSH(R3)   (midx: 254)
	R0 <1> <- R0   (midx: 0)
	R3 <4> <- R1   (midx: 0)
	R1 <4> <- POP   (midx: 254)
//Scroll_main.c,106 :: 		while (*dptr++ = *ptr++)
1:   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R4 <4> <- R3   (midx: 0)
   (midx: 0)
	R2 <4> <-  R3 + 1   (midx: 2)
   (midx: 0)
   (midx: 0)
	R5 <4> <- R2   (midx: 0)
	R3 <4> <- R1   (midx: 0)
	R2 <4> <-  R1 + 1   (midx: 2)
   (midx: 0)
	R1 <4> <- R2   (midx: 0)
	R2 <1> <- *R3   (midx: 0)
	[R4] <1> <- R2   (midx: 0)
	R2 <1> <- *R4   (midx: 0)
   (midx: 0)
   (midx: 0)
	if (!R2) then goto 2   (midx: 0)
//Scroll_main.c,107 :: 		;
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	R3 <4> <- R5   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	goto	1   (midx: 0)
2:   (midx: 0)
//Scroll_main.c,109 :: 		return File_List[text_number].FIleType;
	R2 <4> <- 14   (midx: 0)
   (midx: 0)
	R3 <4> <-  R2 * R0   (midx: 2)
	R2 <4> <- #_File_List   (midx: 0)
	R2 <4> <-  R2 + R3   (midx: 2)
	R2 <4> <-  R2 + 13   (midx: 2)
	R2 <1> <- *R2   (midx: 0)
	R0 <1> <- R2   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_Get_Next_File_Name:
  begin   (midx: 0)
//Scroll_main.c,121 :: 		char Get_Next_File_Name(signed short number, char *Text){
_Get_Next_File_Name:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R1 <4> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
//Scroll_main.c,123 :: 		if ((number > Total_Entries) || (number < 0))
	R2 <4> <- addr(_Total_Entries)   (midx: 0)
	R2 <1> <- [R2]   (midx: 0)
	if ( R0 > R2) then goto 105   (midx: 5)
	if ( R0 < 0) then goto 104   (midx: 4)
   (midx: 0)
   (midx: 0)
	goto	5   (midx: 0)
105:   (midx: 0)
104:   (midx: 0)
//Scroll_main.c,124 :: 		return 2;
	R0 <1> <- 2   (midx: 0)
	return   (midx: 0)
5:   (midx: 0)
//Scroll_main.c,125 :: 		temp = Scroll_New_Tex_From_List(number, Text);
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R1 <4> <- R1   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	CALL _Scroll_New_Tex_From_List   (midx: 0)
   (midx: 0)
	R1 <1> <- R0   (midx: 0)
//Scroll_main.c,126 :: 		if (temp == 1)
   (midx: 0)
	if ( R0 != 1) then goto 6   (midx: 0)
//Scroll_main.c,127 :: 		return 1;
	R0 <1> <- 1   (midx: 0)
	return   (midx: 0)
6:   (midx: 0)
//Scroll_main.c,128 :: 		else if (temp == 2)
   (midx: 0)
   (midx: 0)
	if ( R1 != 2) then goto 8   (midx: 0)
//Scroll_main.c,129 :: 		return 0;
	R0 <1> <- 0   (midx: 0)
	return   (midx: 0)
8:   (midx: 0)
  end
   (midx: 0)
_Scrool_Get_new_text:
  begin   (midx: 0)
//Scroll_main.c,140 :: 		char Scrool_Get_new_text(char Text_no){
_Scrool_Get_new_text:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
   (midx: 0)
//Scroll_main.c,141 :: 		if (current_loaded_text != Text_no){
	R1 <4> <- addr(_current_loaded_text)   (midx: 0)
	R1 <1> <- [R1]   (midx: 0)
	if ( R1 = R0) then goto 9   (midx: 0)
//Scroll_main.c,142 :: 		current_loaded_text = Text_no;
	R1 <4> <- addr(_current_loaded_text)   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
//Scroll_main.c,143 :: 		Scroll_New_Tex_From_List(Text_no, Scroll_Text);
	R0 <1> <- PUSH(R0)   (midx: 255)
	R1 <4> <- #_Scroll_text   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	CALL _Scroll_New_Tex_From_List   (midx: 0)
	R0 <1> <- POP   (midx: 255)
//Scroll_main.c,144 :: 		}
9:   (midx: 0)
//Scroll_main.c,145 :: 		return File_List[Text_no].FileType;
	R1 <4> <- 14   (midx: 0)
   (midx: 0)
	R2 <4> <-  R1 * R0   (midx: 2)
	R1 <4> <- #_File_List   (midx: 0)
	R1 <4> <-  R1 + R2   (midx: 2)
	R1 <4> <-  R1 + 13   (midx: 2)
	R1 <1> <- *R1   (midx: 0)
	R0 <1> <- R1   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_Scroll_Write_One_Line:
  begin   (midx: 0)
//Scroll_main.c,155 :: 		void Scroll_Write_One_Line(unsigned int HO_Line, TImage *Img){
_Scroll_Write_One_Line:
  begin   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
	FARG_Scroll_Write_One_Line_Img <4> <- R1   (midx: 0)
   (midx: 0)
//Scroll_main.c,160 :: 		ptr = Img->Picture_Name + 6;
	R2 <4> <- FARG_Scroll_Write_One_Line_Img   (midx: 0)
	R2 <4> <-  R2 + 16   (midx: 2)
	R2 <4> <- *R2   (midx: 0)
	R2 <4> <-  R2 + 6   (midx: 2)
	Scroll_Write_One_Line_ptr_L0 <4> <- R2   (midx: 0)
//Scroll_main.c,161 :: 		ptr += (long)(Img->Width) * (current_text_column) * 2;
	R2 <4> <- FARG_Scroll_Write_One_Line_Img   (midx: 0)
	R2 <4> <-  R2 + 10   (midx: 2)
	R2 <2> <- *R2   (midx: 0)
	R3 <4> <- R2   (midx: 0)
	R2 <4> <- addr(_current_text_column)   (midx: 0)
	R2 <4> <- [R2]   (midx: 0)
	R2 <4> <-  R3 * R2   (midx: 6)
	R3 <4> <-  R2 shl 1   (midx: 6)
	R2 <4> <- Scroll_Write_One_Line_ptr_L0   (midx: 0)
	R2 <4> <-  R2 + R3   (midx: 2)
	Scroll_Write_One_Line_ptr_L0 <4> <- R2   (midx: 0)
//Scroll_main.c,163 :: 		TFT_CS = 0;
	R3 <1> <- 0   (midx: 0)
	R2 <4> <- addr(TFT_CS)   (midx: 0)
	[R2] <0> <- R3   (midx: 0)
//Scroll_main.c,165 :: 		TFT_SSD1963_Set_Address_Ptr(0, HO_Line, 479, HO_Line);
	R3 <2> <- R0   (midx: 0)
	R2 <2> <- 479   (midx: 0)
   (midx: 0)
	R1 <2> <- R0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	R4 <4> <- addr(_TFT_SSD1963_Set_Address_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
//Scroll_main.c,166 :: 		for (i = 0; i < 479; i++)
	R2 <2> <- 0   (midx: 0)
	Scroll_Write_One_Line_i_L0 <2> <- R2   (midx: 0)
10:   (midx: 0)
	R3 <2> <- Scroll_Write_One_Line_i_L0   (midx: 0)
	R2 <4> <- 479   (midx: 0)
	if ( R3 >= R2) then goto 11   (midx: 1)
//Scroll_main.c,167 :: 		if ((i > _MP3_IMAGE_VLINE - 1) && (i < _MP3_IMAGE_VLINE + Img->Width)){
	R2 <2> <- Scroll_Write_One_Line_i_L0   (midx: 0)
	if ( R2 <= 79) then goto 108   (midx: 1)
	R2 <4> <- FARG_Scroll_Write_One_Line_Img   (midx: 0)
	R2 <4> <-  R2 + 10   (midx: 2)
	R2 <2> <- *R2   (midx: 0)
	R3 <2> <-  80 + R2   (midx: 1)
	R2 <2> <- Scroll_Write_One_Line_i_L0   (midx: 0)
	if ( R2 >= R3) then goto 107   (midx: 1)
106:   (midx: 0)
//Scroll_main.c,169 :: 		if (current_text_column < Img->Height){
	R2 <4> <- FARG_Scroll_Write_One_Line_Img   (midx: 0)
	R2 <4> <-  R2 + 12   (midx: 2)
	R3 <2> <- *R2   (midx: 0)
	R2 <4> <- addr(_current_text_column)   (midx: 0)
	R2 <1> <- [R2]   (midx: 0)
	if ( R2 >= R3) then goto 16   (midx: 1)
//Scroll_main.c,170 :: 		color = (*ptr++);
	R2 <4> <- Scroll_Write_One_Line_ptr_L0   (midx: 0)
	R2 <1> <- *R2   (midx: 0)
	Scroll_Write_One_Line_color_L0_10 <2> <- R2   (midx: 0)
	R2 <4> <- Scroll_Write_One_Line_ptr_L0   (midx: 0)
	R5 <4> <-  R2 + 1   (midx: 2)
//Scroll_main.c,171 :: 		color += (*ptr++) << 8;
	R2 <1> <- *R5   (midx: 0)
	R3 <2> <-  R2 shl 8   (midx: 1)
	R2 <2> <- Scroll_Write_One_Line_color_L0_10   (midx: 0)
	R4 <2> <-  R2 + R3   (midx: 1)
	Scroll_Write_One_Line_color_L0_12 <2> <- R4   (midx: 0)
	R2 <4> <-  R5 + 1   (midx: 2)
	Scroll_Write_One_Line_ptr_L0 <4> <- R2   (midx: 0)
//Scroll_main.c,172 :: 		TFT_Write_Data_Ptr(color);
	R0 <2> <- R4   (midx: 0)
	R4 <4> <- addr(_TFT_Write_Data_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
//Scroll_main.c,173 :: 		}
	goto	17   (midx: 0)
16:   (midx: 0)
//Scroll_main.c,175 :: 		TFT_Write_Data_Ptr(_MP3_BACKGOUND_COLOR);
	R0 <2> <- 11057   (midx: 0)
	R4 <4> <- addr(_TFT_Write_Data_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
17:   (midx: 0)
//Scroll_main.c,176 :: 		}
	goto	18   (midx: 0)
//Scroll_main.c,167 :: 		if ((i > _MP3_IMAGE_VLINE - 1) && (i < _MP3_IMAGE_VLINE + Img->Width)){
108:   (midx: 0)
107:   (midx: 0)
//Scroll_main.c,178 :: 		else if (pix_array[i])
	R3 <4> <- Scroll_Write_One_Line_i_L0   (midx: 0)
	R2 <4> <- #_pix_array   (midx: 0)
	R2 <4> <-  R2 + R3   (midx: 2)
	R2 <1> <- *R2   (midx: 0)
	if (!R2) then goto 19   (midx: 0)
//Scroll_main.c,179 :: 		TFT_Write_Data_Ptr(_MP3_FONT_COLOR);
	R0 <2> <- 65535   (midx: 0)
	R4 <4> <- addr(_TFT_Write_Data_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
	goto	20   (midx: 0)
19:   (midx: 0)
//Scroll_main.c,181 :: 		TFT_Write_Data_Ptr(_MP3_BACKGOUND_COLOR);
	R0 <2> <- 11057   (midx: 0)
	R4 <4> <- addr(_TFT_Write_Data_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
20:   (midx: 0)
18:   (midx: 0)
//Scroll_main.c,166 :: 		for (i = 0; i < 479; i++)
	R2 <2> <- Scroll_Write_One_Line_i_L0   (midx: 0)
	R2 <2> <-  R2 + 1   (midx: 1)
	Scroll_Write_One_Line_i_L0 <2> <- R2   (midx: 0)
//Scroll_main.c,181 :: 		TFT_Write_Data_Ptr(_MP3_BACKGOUND_COLOR);
	goto	10   (midx: 0)
11:   (midx: 0)
//Scroll_main.c,182 :: 		TFT_CS = 1;
	R3 <1> <- 1   (midx: 0)
	R2 <4> <- addr(TFT_CS)   (midx: 0)
	[R2] <0> <- R3   (midx: 0)
  end
   (midx: 0)
_Add_Image_Line:
  begin   (midx: 0)
//Scroll_main.c,193 :: 		void Add_Image_Line(const unsigned long image, int line, int disp_scroll){
_Add_Image_Line:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <2> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R2 <2> <- R2   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
//Scroll_main.c,198 :: 		TFT_CS = 0;
	R4 <1> <- 0   (midx: 0)
	R3 <4> <- addr(TFT_CS)   (midx: 0)
	[R3] <0> <- R4   (midx: 0)
//Scroll_main.c,199 :: 		offset = image + 6 + (unsigned long)line*238;
   (midx: 0)
	R5 <4> <-  R0 + 6   (midx: 2)
   (midx: 0)
	R4 <4> <- R1   (midx: 0)
	R3 <4> <- 238   (midx: 0)
	R3 <4> <-  R4 * R3   (midx: 2)
	R3 <4> <-  R5 + R3   (midx: 2)
	Add_Image_Line_offset_L0 <4> <- R3   (midx: 0)
//Scroll_main.c,200 :: 		count = 238;
	R3 <2> <- 238   (midx: 0)
	Add_Image_Line_count_L0 <2> <- R3   (midx: 0)
//Scroll_main.c,201 :: 		TFT_SSD1963_Set_Address_Ptr(_MP3_BIGIMAGE_VLINE, disp_scroll, _MP3_BIGIMAGE_VLINE + 118, disp_scroll);
	R3 <2> <- R2   (midx: 0)
	R2 <2> <- 418   (midx: 0)
   (midx: 0)
	R1 <2> <- R2   (midx: 0)
	R0 <2> <- 300   (midx: 0)
	R4 <4> <- addr(_TFT_SSD1963_Set_Address_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
//Scroll_main.c,202 :: 		while(count>0){
21:   (midx: 0)
	R3 <2> <- Add_Image_Line_count_L0   (midx: 0)
	if ( R3 <= 0) then goto 22   (midx: 1)
//Scroll_main.c,203 :: 		ptr = MyTFT_Get_Data(offset,count,&readed);
	R3 <4> <- addr(Add_Image_Line_readed_L0)   (midx: 0)
	R2 <4> <- R3   (midx: 0)
	R1 <4> <- Add_Image_Line_count_L0   (midx: 0)
	R0 <4> <- Add_Image_Line_offset_L0   (midx: 0)
	CALL _MyTFT_Get_Data   (midx: 0)
	Add_Image_Line_ptr_L0 <4> <- R0   (midx: 0)
//Scroll_main.c,204 :: 		count -= readed;
	R4 <4> <- Add_Image_Line_readed_L0   (midx: 0)
	R3 <4> <- Add_Image_Line_count_L0   (midx: 0)
	R3 <4> <-  R3 - R4   (midx: 2)
	Add_Image_Line_count_L0 <2> <- R3   (midx: 0)
//Scroll_main.c,205 :: 		offset += readed;
	R4 <4> <- Add_Image_Line_readed_L0   (midx: 0)
	R3 <4> <- Add_Image_Line_offset_L0   (midx: 0)
	R3 <4> <-  R3 + R4   (midx: 2)
	Add_Image_Line_offset_L0 <4> <- R3   (midx: 0)
//Scroll_main.c,206 :: 		readed /= 2;
	R3 <4> <- Add_Image_Line_readed_L0   (midx: 0)
	R3 <4> <-  R3 shr 1   (midx: 2)
	Add_Image_Line_readed_L0 <4> <- R3   (midx: 0)
//Scroll_main.c,207 :: 		for (i = 0;i<readed;i++){
	R3 <2> <- 0   (midx: 0)
	Add_Image_Line_i_L0 <2> <- R3   (midx: 0)
23:   (midx: 0)
	R4 <4> <- Add_Image_Line_readed_L0   (midx: 0)
	R3 <2> <- Add_Image_Line_i_L0   (midx: 0)
	if ( R3 >= R4) then goto 24   (midx: 2)
//Scroll_main.c,208 :: 		color = *ptr++;
	R3 <4> <- Add_Image_Line_ptr_L0   (midx: 0)
	R3 <1> <- *R3   (midx: 0)
   (midx: 0)
	R0 <2> <- R3   (midx: 0)
	R3 <4> <- Add_Image_Line_ptr_L0   (midx: 0)
	R5 <4> <-  R3 + 1   (midx: 2)
//Scroll_main.c,209 :: 		color += (*ptr++) << 8;
	R3 <1> <- *R5   (midx: 0)
	R3 <2> <-  R3 shl 8   (midx: 1)
   (midx: 0)
	R4 <2> <-  R0 + R3   (midx: 1)
	R3 <4> <-  R5 + 1   (midx: 2)
	Add_Image_Line_ptr_L0 <4> <- R3   (midx: 0)
//Scroll_main.c,210 :: 		TFT_Write_Data_Ptr(color);
	R0 <2> <- R4   (midx: 0)
	R4 <4> <- addr(_TFT_Write_Data_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
//Scroll_main.c,207 :: 		for (i = 0;i<readed;i++){
	R3 <2> <- Add_Image_Line_i_L0   (midx: 0)
	R3 <2> <-  R3 + 1   (midx: 1)
	Add_Image_Line_i_L0 <2> <- R3   (midx: 0)
//Scroll_main.c,211 :: 		}
	goto	23   (midx: 0)
24:   (midx: 0)
//Scroll_main.c,212 :: 		}
	goto	21   (midx: 0)
22:   (midx: 0)
//Scroll_main.c,214 :: 		TFT_CS = 1;
	R4 <1> <- 1   (midx: 0)
	R3 <4> <- addr(TFT_CS)   (midx: 0)
	[R3] <0> <- R4   (midx: 0)
  end
   (midx: 0)
_Scroll_Fill_Area:
  begin   (midx: 0)
//Scroll_main.c,224 :: 		void Scroll_Fill_Area(){
_Scroll_Fill_Area:
  begin   (midx: 0)
//Scroll_main.c,227 :: 		dptr = Scroll_text;
	R0 <4> <- #_Scroll_text   (midx: 0)
	Scroll_Fill_Area_dptr_L0 <4> <- R0   (midx: 0)
//Scroll_main.c,228 :: 		i = 0;
	R0 <1> <- 0   (midx: 0)
	Scroll_Fill_Area_i_L0 <1> <- R0   (midx: 0)
//Scroll_main.c,229 :: 		ptr = File_List[i].FileName;
	R1 <4> <- 0   (midx: 2)
	R0 <4> <- #_File_List   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	Scroll_Fill_Area_ptr_L0 <4> <- R0   (midx: 0)
//Scroll_main.c,232 :: 		while (*ptr != 0xFF){
26:   (midx: 0)
	R0 <4> <- Scroll_Fill_Area_ptr_L0   (midx: 0)
	R0 <1> <- *R0   (midx: 0)
	if ( R0 = 255) then goto 27   (midx: 0)
//Scroll_main.c,233 :: 		while(*dptr++ = *ptr++)
28:   (midx: 0)
	R2 <4> <- Scroll_Fill_Area_dptr_L0   (midx: 0)
	R0 <4> <- Scroll_Fill_Area_dptr_L0   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	Scroll_Fill_Area_dptr_L0 <4> <- R0   (midx: 0)
	R1 <4> <- Scroll_Fill_Area_ptr_L0   (midx: 0)
	R0 <4> <- Scroll_Fill_Area_ptr_L0   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	Scroll_Fill_Area_ptr_L0 <4> <- R0   (midx: 0)
	R0 <1> <- *R1   (midx: 0)
	[R2] <1> <- R0   (midx: 0)
	R0 <1> <- *R2   (midx: 0)
	if (!R0) then goto 29   (midx: 0)
//Scroll_main.c,234 :: 		;
	goto	28   (midx: 0)
29:   (midx: 0)
//Scroll_main.c,235 :: 		temp = i * (_FONT_HEIGHT + _FONT_VERTICAL_SPACING);
	R1 <2> <- Scroll_Fill_Area_i_L0   (midx: 0)
	R0 <2> <- 34   (midx: 0)
	R0 <2> <-  R1 * R0   (midx: 0)
	Scroll_Fill_Area_temp_L0 <2> <- R0   (midx: 0)
//Scroll_main.c,236 :: 		ptr = File_List[i+1].FileName;
	R0 <2> <- Scroll_Fill_Area_i_L0   (midx: 0)
	R1 <2> <-  R0 + 1   (midx: 0)
	R0 <4> <- 14   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_File_List   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	Scroll_Fill_Area_ptr_L0 <4> <- R0   (midx: 0)
//Scroll_main.c,237 :: 		if (temp < _SCROLL_LAST_LINE - _SCROLL_FIRST_LINE - _FONT_HEIGHT){
	R0 <2> <- Scroll_Fill_Area_temp_L0   (midx: 0)
	if ( R0 >= 171) then goto 30   (midx: 1)
//Scroll_main.c,238 :: 		if (File_List[i].FileType == 1)
	R1 <4> <- Scroll_Fill_Area_i_L0   (midx: 0)
	R0 <4> <- 14   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_File_List   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <-  R0 + 13   (midx: 2)
	R0 <1> <- *R0   (midx: 0)
	if ( R0 != 1) then goto 31   (midx: 0)
//Scroll_main.c,239 :: 		TFT_Image(_MP3_IMAGE_VLINE, _SCROLL_FIRST_LINE + temp, file_icon.Picture_Name, 1);
	R0 <4> <- addr(_file_icon+16)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <2> <- Scroll_Fill_Area_temp_L0   (midx: 0)
	R0 <2> <-  48 + R0   (midx: 1)
	R3 <1> <- 1   (midx: 0)
	R2 <4> <- R1   (midx: 0)
	R1 <2> <- R0   (midx: 0)
	R0 <2> <- 80   (midx: 0)
	CALL _TFT_Image   (midx: 0)
31:   (midx: 0)
//Scroll_main.c,240 :: 		if (File_List[i].FileType == 2)
	R1 <4> <- Scroll_Fill_Area_i_L0   (midx: 0)
	R0 <4> <- 14   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_File_List   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <-  R0 + 13   (midx: 2)
	R0 <1> <- *R0   (midx: 0)
	if ( R0 != 2) then goto 32   (midx: 0)
//Scroll_main.c,241 :: 		TFT_Image(_MP3_IMAGE_VLINE, _SCROLL_FIRST_LINE + temp, folder_icon.Picture_Name, 1);
	R0 <4> <- addr(_folder_icon+16)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <2> <- Scroll_Fill_Area_temp_L0   (midx: 0)
	R0 <2> <-  48 + R0   (midx: 1)
	R3 <1> <- 1   (midx: 0)
	R2 <4> <- R1   (midx: 0)
	R1 <2> <- R0   (midx: 0)
	R0 <2> <- 80   (midx: 0)
	CALL _TFT_Image   (midx: 0)
32:   (midx: 0)
//Scroll_main.c,242 :: 		TFT_Set_Font(MP3_Font, _MP3_FONT_COLOR, FO_HORIZONTAL);
	R0 <4> <- addr(_MP3_Font)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R2 <1> <- 0   (midx: 0)
	R1 <2> <- 65535   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Set_Font   (midx: 0)
//Scroll_main.c,243 :: 		TFT_Write_Text(Scroll_text, _MP3_TEXT_VLINE, _SCROLL_FIRST_LINE + temp);
	R0 <2> <- Scroll_Fill_Area_temp_L0   (midx: 0)
	R0 <2> <-  48 + R0   (midx: 1)
	R2 <2> <- R0   (midx: 0)
	R1 <2> <- 100   (midx: 0)
	R0 <4> <- #_Scroll_text   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//Scroll_main.c,244 :: 		i ++;
	R0 <1> <- Scroll_Fill_Area_i_L0   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	Scroll_Fill_Area_i_L0 <1> <- R0   (midx: 0)
//Scroll_main.c,245 :: 		dptr = Scroll_text;
	R0 <4> <- #_Scroll_text   (midx: 0)
	Scroll_Fill_Area_dptr_L0 <4> <- R0   (midx: 0)
//Scroll_main.c,246 :: 		temp1 = _SCROLL_FIRST_LINE + temp;
	R0 <2> <- Scroll_Fill_Area_temp_L0   (midx: 0)
	R0 <2> <-  48 + R0   (midx: 1)
	Scroll_Fill_Area_temp1_L0 <2> <- R0   (midx: 0)
//Scroll_main.c,247 :: 		}
	goto	33   (midx: 0)
30:   (midx: 0)
//Scroll_main.c,249 :: 		i ++;
	R0 <1> <- Scroll_Fill_Area_i_L0   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	Scroll_Fill_Area_i_L0 <1> <- R0   (midx: 0)
//Scroll_main.c,250 :: 		dptr = Scroll_text;
	R0 <4> <- #_Scroll_text   (midx: 0)
	Scroll_Fill_Area_dptr_L0 <4> <- R0   (midx: 0)
//Scroll_main.c,251 :: 		}
33:   (midx: 0)
//Scroll_main.c,252 :: 		}
	goto	26   (midx: 0)
27:   (midx: 0)
//Scroll_main.c,253 :: 		Scroll_total_columns = temp + (_FONT_HEIGHT + _FONT_VERTICAL_SPACING);
	R0 <2> <- Scroll_Fill_Area_temp_L0   (midx: 0)
	R1 <2> <-  R0 + 34   (midx: 1)
	R0 <4> <- addr(_Scroll_total_columns)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//Scroll_main.c,256 :: 		temp1 = temp1 + _FONT_HEIGHT + _FONT_VERTICAL_SPACING - 1;
	R0 <2> <- Scroll_Fill_Area_temp1_L0   (midx: 0)
	R0 <2> <-  R0 + 19   (midx: 1)
	R0 <2> <-  R0 + 15   (midx: 1)
	R0 <2> <-  R0 - 1   (midx: 1)
	Scroll_Fill_Area_temp1_L0 <2> <- R0   (midx: 0)
//Scroll_main.c,257 :: 		if (temp1 < _SCROLL_LAST_LINE)
	if ( R0 >= 238) then goto 34   (midx: 1)
//Scroll_main.c,258 :: 		current_text_column = 1;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_current_text_column)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
34:   (midx: 0)
//Scroll_main.c,259 :: 		if (temp1 <= temp){
	R1 <2> <- Scroll_Fill_Area_temp_L0   (midx: 0)
	R0 <2> <- Scroll_Fill_Area_temp1_L0   (midx: 0)
	if ( R0 > R1) then goto 35   (midx: 1)
//Scroll_main.c,260 :: 		while (temp1 < _SCROLL_LAST_LINE){
36:   (midx: 0)
	R0 <2> <- Scroll_Fill_Area_temp1_L0   (midx: 0)
	if ( R0 >= 238) then goto 37   (midx: 1)
//Scroll_main.c,261 :: 		memset(pix_array, 0, 479);
	R2 <2> <- 479   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- #_pix_array   (midx: 0)
	CALL _memset   (midx: 0)
//Scroll_main.c,262 :: 		i = Scrool_Get_new_text(last_window_column / (_FONT_HEIGHT + _FONT_VERTICAL_SPACING));
	R0 <4> <- addr(_last_window_column)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <2> <- 34   (midx: 0)
	R0 <2> <-  R1 / R0   (midx: 5)
	R0 <1> <- R0   (midx: 0)
	CALL _Scrool_Get_new_text   (midx: 0)
	Scroll_Fill_Area_i_L0 <1> <- R0   (midx: 0)
//Scroll_main.c,263 :: 		Scroll_Get_One_Text_Line(current_text_column, Scroll_text);
	R0 <4> <- addr(_current_text_column)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	R1 <4> <- #_Scroll_text   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	CALL _Scroll_Get_One_Text_Line   (midx: 0)
//Scroll_main.c,265 :: 		if (File_List[i].FileType == 1)
	R1 <4> <- Scroll_Fill_Area_i_L0   (midx: 0)
	R0 <4> <- 14   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_File_List   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <-  R0 + 13   (midx: 2)
	R0 <1> <- *R0   (midx: 0)
	if ( R0 != 1) then goto 38   (midx: 0)
//Scroll_main.c,266 :: 		Scroll_Write_One_Line(temp1, &file_icon);
	R1 <4> <- #_file_icon   (midx: 0)
	R0 <2> <- Scroll_Fill_Area_temp1_L0   (midx: 0)
	CALL _Scroll_Write_One_Line   (midx: 0)
38:   (midx: 0)
//Scroll_main.c,267 :: 		if (File_List[i].FileType == 2)
	R1 <4> <- Scroll_Fill_Area_i_L0   (midx: 0)
	R0 <4> <- 14   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_File_List   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <-  R0 + 13   (midx: 2)
	R0 <1> <- *R0   (midx: 0)
	if ( R0 != 2) then goto 39   (midx: 0)
//Scroll_main.c,268 :: 		Scroll_Write_One_Line(temp1, &folder_icon);
	R1 <4> <- #_folder_icon   (midx: 0)
	R0 <2> <- Scroll_Fill_Area_temp1_L0   (midx: 0)
	CALL _Scroll_Write_One_Line   (midx: 0)
39:   (midx: 0)
//Scroll_main.c,270 :: 		current_text_column ++;
	R1 <4> <- addr(_current_text_column)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	R0 <1> <-  R0 + 1   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
//Scroll_main.c,271 :: 		temp1 ++;
	R0 <2> <- Scroll_Fill_Area_temp1_L0   (midx: 0)
	R0 <2> <-  R0 + 1   (midx: 1)
	Scroll_Fill_Area_temp1_L0 <2> <- R0   (midx: 0)
//Scroll_main.c,272 :: 		}
	goto	36   (midx: 0)
37:   (midx: 0)
//Scroll_main.c,273 :: 		}
35:   (midx: 0)
//Scroll_main.c,275 :: 		TFT_Ext_Image(_MP3_BIGIMAGE_VLINE, _SCROLL_FIRST_LINE, mp3_player_note_bmp, 1);
	R3 <1> <- 1   (midx: 0)
	R2 <4> <- 0   (midx: 0)
	R1 <2> <- 48   (midx: 0)
	R0 <2> <- 300   (midx: 0)
	CALL _TFT_Ext_Image   (midx: 0)
  end
   (midx: 0)
_Scroll_Add_newTextLine:
  begin   (midx: 0)
//Scroll_main.c,285 :: 		void Scroll_Add_newTextLine(char ScrollDiection){
_Scroll_Add_newTextLine:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R6 <1> <- R0   (midx: 0)
   (midx: 0)
//Scroll_main.c,289 :: 		memset(pix_array, 0, 479);
	R2 <2> <- 479   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- #_pix_array   (midx: 0)
	CALL _memset   (midx: 0)
//Scroll_main.c,290 :: 		if (ScrollDiection == 0){
   (midx: 0)
	if ( R6 != 0) then goto 40   (midx: 0)
//Scroll_main.c,291 :: 		current_text_column = last_window_column % (_FONT_HEIGHT + _FONT_VERTICAL_SPACING);
	R1 <4> <- addr(_last_window_column)   (midx: 0)
	R3 <2> <- [R1]   (midx: 0)
	R1 <2> <- 34   (midx: 0)
	R2 <2> <-  R3 mod R1   (midx: 5)
	R1 <4> <- addr(_current_text_column)   (midx: 0)
	[R1] <1> <- R2   (midx: 0)
//Scroll_main.c,292 :: 		if (current_text_column < _FONT_HEIGHT + 1){
	R1 <1> <- R2   (midx: 0)
	if ( R1 >= 20) then goto 41   (midx: 0)
//Scroll_main.c,293 :: 		temp_file_type = Scrool_Get_new_text(last_window_column / (_FONT_HEIGHT + _FONT_VERTICAL_SPACING));
	R1 <4> <- addr(_last_window_column)   (midx: 0)
	R2 <2> <- [R1]   (midx: 0)
	R1 <2> <- 34   (midx: 0)
	R1 <2> <-  R2 / R1   (midx: 5)
	R0 <1> <- R1   (midx: 0)
	CALL _Scrool_Get_new_text   (midx: 0)
	Scroll_Add_newTextLine_temp_file_type_L0 <1> <- R0   (midx: 0)
//Scroll_main.c,294 :: 		Scroll_Get_One_Text_Line(current_text_column, Scroll_text);
	R1 <4> <- addr(_current_text_column)   (midx: 0)
	R1 <1> <- [R1]   (midx: 0)
	R0 <1> <- R1   (midx: 0)
	R1 <4> <- #_Scroll_text   (midx: 0)
	CALL _Scroll_Get_One_Text_Line   (midx: 0)
//Scroll_main.c,296 :: 		temp = _disp_scroll - 1;
	R1 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	R1 <2> <-  R1 - 1   (midx: 5)
	Scroll_Add_newTextLine_temp_L0 <2> <- R1   (midx: 0)
//Scroll_main.c,297 :: 		if (temp < _SCROLL_FIRST_LINE)
	R1 <2> <- R1   (midx: 0)
	if ( R1 >= 48) then goto 42   (midx: 1)
//Scroll_main.c,298 :: 		temp = _SCROLL_LAST_LINE - 1;
	R1 <2> <- 237   (midx: 0)
	Scroll_Add_newTextLine_temp_L0 <2> <- R1   (midx: 0)
42:   (midx: 0)
//Scroll_main.c,300 :: 		if (temp_file_type == 1)
	R1 <1> <- Scroll_Add_newTextLine_temp_file_type_L0   (midx: 0)
	if ( R1 != 1) then goto 43   (midx: 0)
//Scroll_main.c,301 :: 		Scroll_Write_One_Line(temp, &file_icon);
	R1 <4> <- #_file_icon   (midx: 0)
	R0 <2> <- Scroll_Add_newTextLine_temp_L0   (midx: 0)
	CALL _Scroll_Write_One_Line   (midx: 0)
43:   (midx: 0)
//Scroll_main.c,302 :: 		if (temp_file_type == 2)
	R1 <1> <- Scroll_Add_newTextLine_temp_file_type_L0   (midx: 0)
	if ( R1 != 2) then goto 44   (midx: 0)
//Scroll_main.c,303 :: 		Scroll_Write_One_Line(temp, &folder_icon);
	R1 <4> <- #_folder_icon   (midx: 0)
	R0 <2> <- Scroll_Add_newTextLine_temp_L0   (midx: 0)
	CALL _Scroll_Write_One_Line   (midx: 0)
44:   (midx: 0)
//Scroll_main.c,304 :: 		}
	goto	45   (midx: 0)
41:   (midx: 0)
//Scroll_main.c,306 :: 		temp = _disp_scroll - 1;
	R1 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	R1 <2> <-  R1 - 1   (midx: 5)
	Scroll_Add_newTextLine_temp_L0 <2> <- R1   (midx: 0)
//Scroll_main.c,307 :: 		if (temp < _SCROLL_FIRST_LINE)
	R1 <2> <- R1   (midx: 0)
	if ( R1 >= 48) then goto 46   (midx: 1)
//Scroll_main.c,308 :: 		temp = _SCROLL_LAST_LINE - 1;
	R1 <2> <- 237   (midx: 0)
	Scroll_Add_newTextLine_temp_L0 <2> <- R1   (midx: 0)
46:   (midx: 0)
//Scroll_main.c,310 :: 		TFT_CS = 0;
	R2 <1> <- 0   (midx: 0)
	R1 <4> <- addr(TFT_CS)   (midx: 0)
	[R1] <0> <- R2   (midx: 0)
//Scroll_main.c,311 :: 		TFT_SSD1963_Set_Address_Ptr(0, temp, 479, temp);
	R3 <2> <- Scroll_Add_newTextLine_temp_L0   (midx: 0)
	R2 <2> <- 479   (midx: 0)
	R1 <2> <- Scroll_Add_newTextLine_temp_L0   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	R4 <4> <- addr(_TFT_SSD1963_Set_Address_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
//Scroll_main.c,312 :: 		for (i = 0; i < 479; i++)
   (midx: 0)
   (midx: 0)
	R2 <2> <- 0   (midx: 0)
	R0 <2> <- R2   (midx: 0)
47:   (midx: 0)
   (midx: 0)
	R1 <4> <- 479   (midx: 0)
	if ( R0 >= R1) then goto 48   (midx: 1)
//Scroll_main.c,313 :: 		TFT_Write_Data_Ptr(_MP3_BACKGOUND_COLOR);
	R0 <2> <- PUSH(R0)   (midx: 255)
	R0 <2> <- 11057   (midx: 0)
	R4 <4> <- addr(_TFT_Write_Data_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
	R0 <2> <- POP   (midx: 255)
//Scroll_main.c,312 :: 		for (i = 0; i < 479; i++)
   (midx: 0)
	R1 <2> <-  R0 + 1   (midx: 1)
   (midx: 0)
	R2 <2> <- R1   (midx: 0)
//Scroll_main.c,313 :: 		TFT_Write_Data_Ptr(_MP3_BACKGOUND_COLOR);
   (midx: 0)
	R0 <2> <- R2   (midx: 0)
	goto	47   (midx: 0)
48:   (midx: 0)
//Scroll_main.c,314 :: 		TFT_CS = 1;
	R2 <1> <- 1   (midx: 0)
	R1 <4> <- addr(TFT_CS)   (midx: 0)
	[R1] <0> <- R2   (midx: 0)
//Scroll_main.c,315 :: 		}
45:   (midx: 0)
//Scroll_main.c,316 :: 		Add_Image_LIne(mp3_player_note_bmp, imageLine, temp);
	R1 <4> <- addr(Scroll_main_imageLine)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	R2 <2> <- Scroll_Add_newTextLine_temp_L0   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <4> <- 0   (midx: 0)
	CALL _Add_Image_Line   (midx: 0)
//Scroll_main.c,317 :: 		}
	goto	50   (midx: 0)
40:   (midx: 0)
//Scroll_main.c,319 :: 		current_text_column = first_window_column % (_FONT_HEIGHT + _FONT_VERTICAL_SPACING);
	R1 <4> <- addr(_first_window_column)   (midx: 0)
	R3 <2> <- [R1]   (midx: 0)
	R1 <2> <- 34   (midx: 0)
	R2 <2> <-  R3 mod R1   (midx: 5)
	R1 <4> <- addr(_current_text_column)   (midx: 0)
	[R1] <1> <- R2   (midx: 0)
//Scroll_main.c,320 :: 		if (current_text_column < _FONT_HEIGHT + 1){
	R1 <1> <- R2   (midx: 0)
	if ( R1 >= 20) then goto 51   (midx: 0)
//Scroll_main.c,321 :: 		temp_file_type = Scrool_Get_new_text(first_window_column / (_FONT_HEIGHT + _FONT_VERTICAL_SPACING));
	R1 <4> <- addr(_first_window_column)   (midx: 0)
	R2 <2> <- [R1]   (midx: 0)
	R1 <2> <- 34   (midx: 0)
	R1 <2> <-  R2 / R1   (midx: 5)
	R0 <1> <- R1   (midx: 0)
	CALL _Scrool_Get_new_text   (midx: 0)
	Scroll_Add_newTextLine_temp_file_type_L0 <1> <- R0   (midx: 0)
//Scroll_main.c,322 :: 		Scroll_Get_One_Text_Line(current_text_column, Scroll_text);
	R1 <4> <- addr(_current_text_column)   (midx: 0)
	R1 <1> <- [R1]   (midx: 0)
	R0 <1> <- R1   (midx: 0)
	R1 <4> <- #_Scroll_text   (midx: 0)
	CALL _Scroll_Get_One_Text_Line   (midx: 0)
//Scroll_main.c,324 :: 		if (temp_file_type == 1)
	R1 <1> <- Scroll_Add_newTextLine_temp_file_type_L0   (midx: 0)
	if ( R1 != 1) then goto 52   (midx: 0)
//Scroll_main.c,325 :: 		Scroll_Write_One_Line(_disp_scroll, &file_icon);
	R1 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	R0 <2> <- R1   (midx: 0)
	R1 <4> <- #_file_icon   (midx: 0)
	CALL _Scroll_Write_One_Line   (midx: 0)
52:   (midx: 0)
//Scroll_main.c,326 :: 		if (temp_file_type == 2)
	R1 <1> <- Scroll_Add_newTextLine_temp_file_type_L0   (midx: 0)
	if ( R1 != 2) then goto 53   (midx: 0)
//Scroll_main.c,327 :: 		Scroll_Write_One_Line(_disp_scroll, &folder_icon);
	R1 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	R0 <2> <- R1   (midx: 0)
	R1 <4> <- #_folder_icon   (midx: 0)
	CALL _Scroll_Write_One_Line   (midx: 0)
53:   (midx: 0)
//Scroll_main.c,328 :: 		}
	goto	54   (midx: 0)
51:   (midx: 0)
//Scroll_main.c,330 :: 		TFT_CS = 0;
	R2 <1> <- 0   (midx: 0)
	R1 <4> <- addr(TFT_CS)   (midx: 0)
	[R1] <0> <- R2   (midx: 0)
//Scroll_main.c,331 :: 		TFT_SSD1963_Set_Address_Ptr(0, _disp_scroll, 479, _disp_scroll);
	R1 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	R4 <2> <- [R1]   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	R3 <2> <- R4   (midx: 0)
	R2 <2> <- 479   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	R4 <4> <- addr(_TFT_SSD1963_Set_Address_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
//Scroll_main.c,332 :: 		for (i = 0; i < 479; i++)
   (midx: 0)
   (midx: 0)
	R0 <2> <- 0   (midx: 0)
	R0 <2> <- R0   (midx: 0)
55:   (midx: 0)
   (midx: 0)
	R1 <4> <- 479   (midx: 0)
	if ( R0 >= R1) then goto 56   (midx: 1)
//Scroll_main.c,333 :: 		TFT_Write_Data_Ptr(_MP3_BACKGOUND_COLOR);
	R0 <2> <- PUSH(R0)   (midx: 255)
	R0 <2> <- 11057   (midx: 0)
	R4 <4> <- addr(_TFT_Write_Data_Ptr)   (midx: 0)
	R4 <4> <- [R4]   (midx: 0)
	CALL (*R4)   (midx: 0)
	R0 <2> <- POP   (midx: 255)
//Scroll_main.c,332 :: 		for (i = 0; i < 479; i++)
   (midx: 0)
	R1 <2> <-  R0 + 1   (midx: 1)
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
//Scroll_main.c,333 :: 		TFT_Write_Data_Ptr(_MP3_BACKGOUND_COLOR);
   (midx: 0)
	R0 <2> <- R1   (midx: 0)
	goto	55   (midx: 0)
56:   (midx: 0)
//Scroll_main.c,334 :: 		TFT_CS = 1;
	R2 <1> <- 1   (midx: 0)
	R1 <4> <- addr(TFT_CS)   (midx: 0)
	[R1] <0> <- R2   (midx: 0)
//Scroll_main.c,335 :: 		}
54:   (midx: 0)
//Scroll_main.c,336 :: 		Add_Image_LIne(mp3_player_note_bmp, imageLine, _disp_scroll);
	R1 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	R2 <2> <- [R1]   (midx: 0)
	R1 <4> <- addr(Scroll_main_imageLine)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	R2 <2> <- R2   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <4> <- 0   (midx: 0)
	CALL _Add_Image_Line   (midx: 0)
//Scroll_main.c,337 :: 		}
50:   (midx: 0)
  end
   (midx: 0)
_Scroll_Menu:
  begin   (midx: 0)
//Scroll_main.c,347 :: 		void Scroll_Menu(char Adir) {
_Scroll_Menu:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
   (midx: 0)
//Scroll_main.c,349 :: 		if (Adir == _Up) {
   (midx: 0)
	if ( R0 != 1) then goto 58   (midx: 5)
//Scroll_main.c,350 :: 		if (_disp_scroll != _SCROLL_FIRST_LINE)
	R1 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	if ( R1 = 48) then goto 59   (midx: 5)
//Scroll_main.c,351 :: 		_disp_scroll--;
	R2 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 - 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
	goto	60   (midx: 0)
59:   (midx: 0)
//Scroll_main.c,353 :: 		_disp_scroll = _SCROLL_LAST_LINE - 1;
	R2 <2> <- 237   (midx: 0)
	R1 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	[R1] <2> <- R2   (midx: 0)
//Scroll_main.c,354 :: 		_disp_scroll_rollover --;
	R2 <4> <- addr(Scroll_main__disp_scroll_rollover)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 - 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
//Scroll_main.c,355 :: 		}
60:   (midx: 0)
//Scroll_main.c,356 :: 		}
	goto	61   (midx: 0)
58:   (midx: 0)
//Scroll_main.c,358 :: 		if (_disp_scroll != _SCROLL_LAST_LINE - 1)
	R1 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	if ( R1 = 237) then goto 62   (midx: 5)
//Scroll_main.c,359 :: 		_disp_scroll++;
	R2 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 + 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
	goto	63   (midx: 0)
62:   (midx: 0)
//Scroll_main.c,361 :: 		_disp_scroll = _SCROLL_FIRST_LINE;
	R2 <2> <- 48   (midx: 0)
	R1 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	[R1] <2> <- R2   (midx: 0)
//Scroll_main.c,362 :: 		_disp_scroll_rollover ++;
	R2 <4> <- addr(Scroll_main__disp_scroll_rollover)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 + 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
//Scroll_main.c,363 :: 		}
63:   (midx: 0)
//Scroll_main.c,364 :: 		}
61:   (midx: 0)
//Scroll_main.c,366 :: 		Scroll(_disp_scroll);
	R1 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	R0 <2> <- R1   (midx: 0)
	CALL _Scroll   (midx: 0)
  end
   (midx: 0)
_ScrollUp:
  begin   (midx: 0)
//Scroll_main.c,376 :: 		void ScrollUp(int scroll){
_ScrollUp:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
   (midx: 0)
//Scroll_main.c,377 :: 		while(scroll--){
64:   (midx: 0)
   (midx: 0)
	R2 <2> <- R0   (midx: 0)
	R1 <2> <-  R0 - 1   (midx: 1)
   (midx: 0)
	R0 <2> <- R1   (midx: 0)
   (midx: 0)
	if (!R2) then goto 65   (midx: 0)
//Scroll_main.c,378 :: 		last_window_column --;
   (midx: 0)
	R2 <4> <- addr(_last_window_column)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 - 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
//Scroll_main.c,379 :: 		first_window_column --;
	R2 <4> <- addr(_first_window_column)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 - 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
//Scroll_main.c,380 :: 		if (first_window_column >= 0){
	if ( R1 < 0) then goto 66   (midx: 5)
//Scroll_main.c,381 :: 		imageLine--;
	R2 <4> <- addr(Scroll_main_imageLine)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 - 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
//Scroll_main.c,382 :: 		if (imageline < 0)
	if ( R1 >= 0) then goto 67   (midx: 5)
//Scroll_main.c,383 :: 		imageline = 188;
	R2 <2> <- 188   (midx: 0)
	R1 <4> <- addr(Scroll_main_imageLine)   (midx: 0)
	[R1] <2> <- R2   (midx: 0)
67:   (midx: 0)
//Scroll_main.c,384 :: 		Scroll_Menu(_Up);              // Scroll image
	R0 <2> <- PUSH(R0)   (midx: 255)
	R0 <1> <- 1   (midx: 0)
	CALL _Scroll_Menu   (midx: 0)
	R0 <2> <- POP   (midx: 255)
//Scroll_main.c,385 :: 		Scroll_Add_newTextLine(_Up);
	R0 <2> <- PUSH(R0)   (midx: 255)
	R0 <1> <- 1   (midx: 0)
	CALL _Scroll_Add_newTextLine   (midx: 0)
	R0 <2> <- POP   (midx: 255)
//Scroll_main.c,386 :: 		}
	goto	68   (midx: 0)
66:   (midx: 0)
//Scroll_main.c,388 :: 		last_window_column ++;
	R2 <4> <- addr(_last_window_column)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 + 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
//Scroll_main.c,389 :: 		first_window_column ++;
	R2 <4> <- addr(_first_window_column)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 + 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
//Scroll_main.c,390 :: 		}
68:   (midx: 0)
//Scroll_main.c,391 :: 		}
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	goto	64   (midx: 0)
65:   (midx: 0)
  end
   (midx: 0)
_ScrollDown:
  begin   (midx: 0)
//Scroll_main.c,401 :: 		void ScrollDown(int scroll){
_ScrollDown:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
   (midx: 0)
//Scroll_main.c,402 :: 		while(scroll--){
69:   (midx: 0)
   (midx: 0)
	R2 <2> <- R0   (midx: 0)
	R1 <2> <-  R0 - 1   (midx: 1)
   (midx: 0)
	R0 <2> <- R1   (midx: 0)
   (midx: 0)
	if (!R2) then goto 70   (midx: 0)
//Scroll_main.c,403 :: 		last_window_column ++;
   (midx: 0)
	R2 <4> <- addr(_last_window_column)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R3 <2> <-  R1 + 1   (midx: 1)
	[R2] <2> <- R3   (midx: 0)
//Scroll_main.c,404 :: 		first_window_column ++;
	R2 <4> <- addr(_first_window_column)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 + 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
//Scroll_main.c,405 :: 		if (last_window_column < Scroll_total_columns){
	R1 <4> <- addr(_Scroll_total_columns)   (midx: 0)
	R1 <2> <- [R1]   (midx: 0)
	if ( R3 >= R1) then goto 71   (midx: 1)
//Scroll_main.c,406 :: 		imageLine++;
	R2 <4> <- addr(Scroll_main_imageLine)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 + 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
//Scroll_main.c,407 :: 		if (imageline > 188)
	if ( R1 <= 188) then goto 72   (midx: 5)
//Scroll_main.c,408 :: 		imageline = 0;
	R2 <2> <- 0   (midx: 0)
	R1 <4> <- addr(Scroll_main_imageLine)   (midx: 0)
	[R1] <2> <- R2   (midx: 0)
72:   (midx: 0)
//Scroll_main.c,409 :: 		Scroll_Menu(_Down);
	R0 <2> <- PUSH(R0)   (midx: 255)
	R0 <1> <- 0   (midx: 0)
	CALL _Scroll_Menu   (midx: 0)
	R0 <2> <- POP   (midx: 255)
//Scroll_main.c,410 :: 		Scroll_Add_newTextLine(_Down);
	R0 <2> <- PUSH(R0)   (midx: 255)
	R0 <1> <- 0   (midx: 0)
	CALL _Scroll_Add_newTextLine   (midx: 0)
	R0 <2> <- POP   (midx: 255)
//Scroll_main.c,411 :: 		}
	goto	73   (midx: 0)
71:   (midx: 0)
//Scroll_main.c,413 :: 		last_window_column --;
	R2 <4> <- addr(_last_window_column)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 - 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
//Scroll_main.c,414 :: 		first_window_column --;
	R2 <4> <- addr(_first_window_column)   (midx: 0)
	R1 <2> <- [R2]   (midx: 0)
	R1 <2> <-  R1 - 1   (midx: 1)
	[R2] <2> <- R1   (midx: 0)
//Scroll_main.c,415 :: 		}
73:   (midx: 0)
//Scroll_main.c,416 :: 		}
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	goto	69   (midx: 0)
70:   (midx: 0)
  end
   (midx: 0)
_Scroll_Disp:
  begin   (midx: 0)
//Scroll_main.c,426 :: 		void Scroll_Disp(unsigned int Apos, char Adir) {
_Scroll_Disp:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R1 <1> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
//Scroll_main.c,427 :: 		if (Adir == _Up) {
   (midx: 0)
	if ( R1 != 1) then goto 74   (midx: 5)
//Scroll_main.c,428 :: 		ScrollUP(Apos);
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _ScrollUp   (midx: 0)
//Scroll_main.c,429 :: 		}
	goto	75   (midx: 0)
74:   (midx: 0)
//Scroll_main.c,431 :: 		ScrollDown(Apos);
   (midx: 0)
   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _ScrollDown   (midx: 0)
//Scroll_main.c,432 :: 		}
75:   (midx: 0)
  end
   (midx: 0)
_ScrollPress:
  begin   (midx: 0)
//Scroll_main.c,444 :: 		void ScrollPress(){
_ScrollPress:
  begin   (midx: 0)
//Scroll_main.c,449 :: 		if (Xcoord > 240){
	R0 <4> <- addr(_Xcoord)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	if ( R0 <= 240) then goto 76   (midx: 1)
//Scroll_main.c,450 :: 		if (Scroll_Flag == 0){
	R0 <4> <- addr(_Scroll_Flag)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 != 0) then goto 77   (midx: 0)
//Scroll_main.c,451 :: 		Scroll_Flag = 1;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_Scroll_Flag)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//Scroll_main.c,452 :: 		ScrollOldYcoo = Ycoord;
	R0 <4> <- addr(_Ycoord)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ScrollOldYcoo)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//Scroll_main.c,453 :: 		return;
	return   (midx: 0)
//Scroll_main.c,454 :: 		}
77:   (midx: 0)
//Scroll_main.c,455 :: 		delta = Ycoord - ScrollOldYcoo;
	R0 <4> <- addr(_ScrollOldYcoo)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <4> <- addr(_Ycoord)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R0 <2> <-  R0 - R1   (midx: 1)
   (midx: 0)
	R1 <2> <- R0   (midx: 0)
//Scroll_main.c,456 :: 		if (delta > 0){
	R0 <2> <- R0   (midx: 0)
	if ( R0 <= 0) then goto 78   (midx: 5)
//Scroll_main.c,457 :: 		dir = 0;
	R0 <1> <- 0   (midx: 0)
	ScrollPress_dir_L0_2 <1> <- R0   (midx: 0)
//Scroll_main.c,458 :: 		}
78:   (midx: 0)
//Scroll_main.c,459 :: 		if (delta < 0){
	if ( R1 >= 0) then goto 109   (midx: 5)
//Scroll_main.c,460 :: 		dir = 1;
	R0 <1> <- 1   (midx: 0)
	ScrollPress_dir_L0_4 <1> <- R0   (midx: 0)
//Scroll_main.c,461 :: 		delta = - delta;
	R1 <2> <-  0 - R1   (midx: 5)
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R1 <2> <- R1   (midx: 0)
//Scroll_main.c,462 :: 		}
	goto	79   (midx: 0)
109:   (midx: 0)
//Scroll_main.c,459 :: 		if (delta < 0){
	R1 <2> <- R1   (midx: 0)
//Scroll_main.c,462 :: 		}
79:   (midx: 0)
//Scroll_main.c,463 :: 		if (delta < 4)
   (midx: 0)
   (midx: 0)
	if ( R1 >= 4) then goto 80   (midx: 5)
//Scroll_main.c,464 :: 		return;
	return   (midx: 0)
80:   (midx: 0)
//Scroll_main.c,465 :: 		if (delta > 7)
   (midx: 0)
	if ( R1 <= 7) then goto 110   (midx: 5)
//Scroll_main.c,466 :: 		delta = 7;
   (midx: 0)
	R1 <2> <- 7   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	goto	81   (midx: 0)
110:   (midx: 0)
//Scroll_main.c,465 :: 		if (delta > 7)
	R1 <2> <- R1   (midx: 0)
//Scroll_main.c,466 :: 		delta = 7;
81:   (midx: 0)
//Scroll_main.c,467 :: 		for (Scrollcnt = 0; Scrollcnt < delta; Scrollcnt ++){
   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- 0   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R2 <1> <- R0   (midx: 0)
82:   (midx: 0)
   (midx: 0)
   (midx: 0)
	if ( R2 >= R1) then goto 83   (midx: 5)
//Scroll_main.c,468 :: 		if (dir == 1)
	R0 <1> <- ScrollPress_dir_L0_13   (midx: 0)
	if ( R0 != 1) then goto 85   (midx: 0)
//Scroll_main.c,469 :: 		Scroll_Disp(1, _DOWN);
	R1 <2> <- PUSH(R1)   (midx: 255)
	R2 <1> <- PUSH(R2)   (midx: 255)
	R1 <1> <- 0   (midx: 0)
	R0 <2> <- 1   (midx: 0)
	CALL _Scroll_Disp   (midx: 0)
	R2 <1> <- POP   (midx: 255)
	R1 <2> <- POP   (midx: 255)
	goto	86   (midx: 0)
85:   (midx: 0)
//Scroll_main.c,471 :: 		Scroll_Disp(1, _UP);
	R1 <2> <- PUSH(R1)   (midx: 255)
	R2 <1> <- PUSH(R2)   (midx: 255)
	R1 <1> <- 1   (midx: 0)
	R0 <2> <- 1   (midx: 0)
	CALL _Scroll_Disp   (midx: 0)
	R2 <1> <- POP   (midx: 255)
	R1 <2> <- POP   (midx: 255)
86:   (midx: 0)
//Scroll_main.c,467 :: 		for (Scrollcnt = 0; Scrollcnt < delta; Scrollcnt ++){
	R2 <1> <-  R2 + 1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
//Scroll_main.c,472 :: 		}
   (midx: 0)
   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R2 <1> <- R2   (midx: 0)
	goto	82   (midx: 0)
83:   (midx: 0)
//Scroll_main.c,473 :: 		ScrollOldYcoo = Ycoord;
	R0 <4> <- addr(_Ycoord)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ScrollOldYcoo)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//Scroll_main.c,474 :: 		}
76:   (midx: 0)
  end
   (midx: 0)
_Stop_Scroll:
  begin   (midx: 0)
//Scroll_main.c,570 :: 		void Stop_Scroll(){
_Stop_Scroll:
  begin   (midx: 0)
//Scroll_main.c,571 :: 		_disp_scroll = _SCROLL_FIRST_LINE;
	R1 <2> <- 48   (midx: 0)
	R0 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//Scroll_main.c,572 :: 		_disp_scroll_rollover = 0;
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(Scroll_main__disp_scroll_rollover)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//Scroll_main.c,573 :: 		first_window_column = 0;
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_first_window_column)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//Scroll_main.c,574 :: 		last_window_column = _SCROLL_HEIGHT;
	R1 <2> <- 190   (midx: 0)
	R0 <4> <- addr(_last_window_column)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//Scroll_main.c,575 :: 		Scroll_Undone(_SCROLL_FIRST_LINE, _SCROLL_LAST_LINE);
	R1 <2> <- 238   (midx: 0)
	R0 <2> <- 48   (midx: 0)
	CALL _Scroll_Undone   (midx: 0)
  end
   (midx: 0)
_Process_file:
  begin   (midx: 0)
//Scroll_main.c,488 :: 		void Process_file(char File_No){
_Process_file:
  begin   (midx: 0)
   (midx: 0)
	FARG_Process_file_File_No <1> <- R0   (midx: 0)
//Scroll_main.c,489 :: 		BLED_Fade_Out();
	CALL _BLED_Fade_Out   (midx: 0)
//Scroll_main.c,490 :: 		Stop_Scroll();
	CALL _Stop_Scroll   (midx: 0)
//Scroll_main.c,491 :: 		Start_MP3_Player(File_List[File_No].FileName, File_no);
	R2 <4> <- FARG_Process_file_File_No   (midx: 0)
	R1 <4> <- 14   (midx: 0)
	R2 <4> <-  R1 * R2   (midx: 2)
	R1 <4> <- #_File_List   (midx: 0)
	R1 <4> <-  R1 + R2   (midx: 2)
	R0 <4> <- R1   (midx: 0)
	R1 <1> <- FARG_Process_file_File_No   (midx: 0)
	CALL _Start_MP3_Player   (midx: 0)
//Scroll_main.c,492 :: 		BLED_Fade_In();
	CALL _BLED_Fade_In   (midx: 0)
  end
   (midx: 0)
_Fill_List:
  begin   (midx: 0)
//Scroll_main.c,535 :: 		char Fill_List(TScroll_List *List){
_Fill_List:
  begin   (midx: 0)
//Scroll_main.c,537 :: 		char MyError = 1;
   (midx: 0)
//Scroll_main.c,535 :: 		char Fill_List(TScroll_List *List){
   (midx: 0)
//Scroll_main.c,537 :: 		char MyError = 1;
   (midx: 0)
//Scroll_main.c,535 :: 		char Fill_List(TScroll_List *List){
	FARG_Fill_List_List <4> <- R0   (midx: 0)
//Scroll_main.c,537 :: 		char MyError = 1;
   (midx: 0)
   (midx: 0)
	R6 <-initialize(1)   (midx: 0)
//Scroll_main.c,538 :: 		char File_List_cnt = 0;
   (midx: 0)
	R1 <4> <- 0   (midx: 0)
	Fill_List_File_List_cnt_L0 <-initialize(0)   (midx: 0)
//Scroll_main.c,539 :: 		memset((char *)List, 0, 100 * (13 + 1));
	R2 <2> <- 1400   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- FARG_Fill_List_List   (midx: 0)
   (midx: 0)
	CALL _memset   (midx: 0)
	R0 <1> <- R6   (midx: 0)
//Scroll_main.c,540 :: 		while ((MyError != 0) && (MyError != 0xFF)){
90:   (midx: 0)
   (midx: 0)
	if ( R0 = 0) then goto 119   (midx: 0)
   (midx: 0)
	if ( R0 = 255) then goto 118   (midx: 0)
113:   (midx: 0)
//Scroll_main.c,541 :: 		MyError = FAT32_FindNext(&MyDir);
	R0 <4> <- #_MyDir   (midx: 0)
	CALL _FAT32_FindNext   (midx: 0)
   (midx: 0)
	R7 <1> <- R0   (midx: 0)
//Scroll_main.c,542 :: 		if ((MyDir.NameExt[0] != 0) && MyError != 0){
	R1 <4> <- addr(_MyDir+0)   (midx: 0)
	R1 <1> <- [R1]   (midx: 0)
	if ( R1 = 0) then goto 117   (midx: 0)
	if ( R7 = 0) then goto 116   (midx: 0)
112:   (midx: 0)
//Scroll_main.c,543 :: 		if (MyDir.Attrib & ATTR_FILE_MASK){
	R1 <4> <- addr(_MyDir+13)   (midx: 0)
	R1 <1> <- [R1]   (midx: 0)
	R1 <1> <-  R1 & 39   (midx: 0)
	if (!R1) then goto 97   (midx: 0)
//Scroll_main.c,544 :: 		if ((strstr(MyDir.NameExt, ".MP3") != 0) || (strstr(MyDir.NameExt, ".WAV") != 0)){
	R1 <4> <- #?lstr1_Scroll_main   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R0 <4> <- #_MyDir+0   (midx: 0)
	CALL _strstr   (midx: 0)
	if ( R0 != 0) then goto 115   (midx: 2)
	R1 <4> <- #?lstr2_Scroll_main   (midx: 0)
	R1 <4> <- R1   (midx: 0)
	R0 <4> <- #_MyDir+0   (midx: 0)
	CALL _strstr   (midx: 0)
	if ( R0 != 0) then goto 114   (midx: 2)
	goto	100   (midx: 0)
115:   (midx: 0)
114:   (midx: 0)
//Scroll_main.c,545 :: 		strcat(List->FileName, MyDir.NameExt);
	R1 <4> <- #_MyDir+0   (midx: 0)
	R0 <4> <- FARG_Fill_List_List   (midx: 0)
	CALL _strcat   (midx: 0)
//Scroll_main.c,546 :: 		List->FileType = 1;
	R1 <4> <- FARG_Fill_List_List   (midx: 0)
	R2 <4> <-  R1 + 13   (midx: 2)
	R1 <1> <- 1   (midx: 0)
	[R2] <1> <- R1   (midx: 0)
//Scroll_main.c,547 :: 		File_List_cnt ++;
	R1 <1> <- Fill_List_File_List_cnt_L0   (midx: 0)
	R1 <1> <-  R1 + 1   (midx: 0)
	Fill_List_File_List_cnt_L0 <1> <- R1   (midx: 0)
//Scroll_main.c,548 :: 		List ++;
	R1 <4> <- FARG_Fill_List_List   (midx: 0)
	R1 <4> <-  R1 + 14   (midx: 2)
	FARG_Fill_List_List <4> <- R1   (midx: 0)
//Scroll_main.c,549 :: 		}
100:   (midx: 0)
//Scroll_main.c,550 :: 		}
	goto	101   (midx: 0)
97:   (midx: 0)
//Scroll_main.c,551 :: 		else if (MyDir.Attrib == ATTR_DIRECTORY){
	R1 <4> <- addr(_MyDir+13)   (midx: 0)
	R1 <1> <- [R1]   (midx: 0)
	if ( R1 != 16) then goto 102   (midx: 0)
//Scroll_main.c,552 :: 		strcat(List->FileName, MyDir.NameExt);
	R1 <4> <- #_MyDir+0   (midx: 0)
	R0 <4> <- FARG_Fill_List_List   (midx: 0)
	CALL _strcat   (midx: 0)
//Scroll_main.c,553 :: 		List->FileType = 2;
	R1 <4> <- FARG_Fill_List_List   (midx: 0)
	R2 <4> <-  R1 + 13   (midx: 2)
	R1 <1> <- 2   (midx: 0)
	[R2] <1> <- R1   (midx: 0)
//Scroll_main.c,554 :: 		File_List_cnt ++;
	R1 <1> <- Fill_List_File_List_cnt_L0   (midx: 0)
	R1 <1> <-  R1 + 1   (midx: 0)
	Fill_List_File_List_cnt_L0 <1> <- R1   (midx: 0)
//Scroll_main.c,555 :: 		List ++;
	R1 <4> <- FARG_Fill_List_List   (midx: 0)
	R1 <4> <-  R1 + 14   (midx: 2)
	FARG_Fill_List_List <4> <- R1   (midx: 0)
//Scroll_main.c,556 :: 		}
102:   (midx: 0)
101:   (midx: 0)
//Scroll_main.c,542 :: 		if ((MyDir.NameExt[0] != 0) && MyError != 0){
117:   (midx: 0)
116:   (midx: 0)
//Scroll_main.c,558 :: 		}
   (midx: 0)
	R0 <1> <- R7   (midx: 0)
	goto	90   (midx: 0)
//Scroll_main.c,540 :: 		while ((MyError != 0) && (MyError != 0xFF)){
119:   (midx: 0)
118:   (midx: 0)
//Scroll_main.c,559 :: 		List->FileName[0] = 0xFF;
	R2 <1> <- 255   (midx: 0)
	R1 <4> <- FARG_Fill_List_List   (midx: 0)
	[R1] <1> <- R2   (midx: 0)
//Scroll_main.c,560 :: 		return File_List_cnt;
	R0 <1> <- Fill_List_File_List_cnt_L0   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_Initialize_Scroll:
  begin   (midx: 0)
//Scroll_main.c,585 :: 		void Initialize_Scroll(){
_Initialize_Scroll:
  begin   (midx: 0)
//Scroll_main.c,586 :: 		Stop_Scroll();
	CALL _Stop_Scroll   (midx: 0)
//Scroll_main.c,587 :: 		FAT32_FindFirst(&MyDir);
	R0 <4> <- #_MyDir   (midx: 0)
	CALL _FAT32_FindFirst   (midx: 0)
//Scroll_main.c,588 :: 		Total_Entries = Fill_List(File_List);
	R0 <4> <- #_File_List   (midx: 0)
	CALL _Fill_List   (midx: 0)
	R1 <4> <- addr(_Total_Entries)   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
//Scroll_main.c,589 :: 		Scroll_Fill_Area();
	CALL _Scroll_Fill_Area   (midx: 0)
//Scroll_main.c,590 :: 		imageLine = 188;
	R1 <2> <- 188   (midx: 0)
	R0 <4> <- addr(Scroll_main_imageLine)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
  end
   (midx: 0)
_Process_folder:
  begin   (midx: 0)
//Scroll_main.c,502 :: 		void Process_folder(char File_No){
_Process_folder:
  begin   (midx: 0)
   (midx: 0)
   (midx: 0)
   (midx: 0)
	R0 <1> <- R0   (midx: 0)
   (midx: 0)
//Scroll_main.c,503 :: 		FAT32_ChangeDir(File_List[File_No].FileName);
	R1 <4> <- 14   (midx: 0)
   (midx: 0)
	R2 <4> <-  R1 * R0   (midx: 2)
	R1 <4> <- #_File_List   (midx: 0)
	R1 <4> <-  R1 + R2   (midx: 2)
	R0 <4> <- R1   (midx: 0)
	CALL _FAT32_ChangeDir   (midx: 0)
//Scroll_main.c,504 :: 		DrawBox(&Box6);
	R0 <4> <- #_Box6   (midx: 0)
	CALL _DrawBox   (midx: 0)
//Scroll_main.c,505 :: 		Initialize_Scroll();
	CALL _Initialize_Scroll   (midx: 0)
  end
   (midx: 0)
_ScrollOnClick:
  begin   (midx: 0)
//Scroll_main.c,515 :: 		void ScrollOnClick(){
_ScrollOnClick:
  begin   (midx: 0)
//Scroll_main.c,517 :: 		if (Xcoord < 241){
	R0 <4> <- addr(_Xcoord)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	if ( R0 >= 241) then goto 87   (midx: 1)
//Scroll_main.c,518 :: 		temp = (Ycoord - _SCROLL_FIRST_LINE + _disp_scroll - _SCROLL_FIRST_LINE + _disp_scroll_rollover * (_SCROLL_LAST_LINE - _SCROLL_FIRST_LINE)) / (_FONT_HEIGHT + _FONT_VERTICAL_SPACING);
	R0 <4> <- addr(_Ycoord)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <2> <-  R0 - 48   (midx: 1)
	R0 <4> <- addr(Scroll_main__disp_scroll)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R0 <2> <-  R1 + R0   (midx: 1)
	R2 <2> <-  R0 - 48   (midx: 1)
	R0 <4> <- addr(Scroll_main__disp_scroll_rollover)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <2> <- 190   (midx: 0)
	R0 <2> <-  R1 * R0   (midx: 5)
	R1 <2> <-  R2 + R0   (midx: 1)
	R0 <2> <- 34   (midx: 0)
	R0 <2> <-  R1 / R0   (midx: 1)
	ScrollOnClick_temp_L0 <1> <- R0   (midx: 0)
//Scroll_main.c,519 :: 		file_type = Scrool_Get_new_text(temp);
	R0 <1> <- R0   (midx: 0)
	CALL _Scrool_Get_new_text   (midx: 0)
	ScrollOnClick_file_type_L0 <1> <- R0   (midx: 0)
//Scroll_main.c,521 :: 		if (file_type == 1)
	if ( R0 != 1) then goto 88   (midx: 0)
//Scroll_main.c,522 :: 		Process_file(temp);
	R0 <1> <- ScrollOnClick_temp_L0   (midx: 0)
	CALL _Process_file   (midx: 0)
88:   (midx: 0)
//Scroll_main.c,523 :: 		if (file_type == 2)
	R0 <1> <- ScrollOnClick_file_type_L0   (midx: 0)
	if ( R0 != 2) then goto 89   (midx: 0)
//Scroll_main.c,524 :: 		Process_folder(temp);
	R0 <1> <- ScrollOnClick_temp_L0   (midx: 0)
	CALL _Process_folder   (midx: 0)
89:   (midx: 0)
//Scroll_main.c,525 :: 		}
87:   (midx: 0)
  end
   (midx: 0)
Scroll_main____?ag:
  begin   (midx: 0)
  end
   (midx: 0)
