_Timer4_interrupt:
  begin   (midx: 0)
//mikromedia_STM32plus_main.c,91 :: 		void Timer4_interrupt() iv IVT_INT_TIM4{
_Timer4_interrupt:
  begin   (midx: 0)
//mikromedia_STM32plus_main.c,92 :: 		TIM4_SR.UIF = 0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(TIM4_SR)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//mikromedia_STM32plus_main.c,94 :: 		Timer4_SoftPWM_ISR();
	CALL _Timer4_SoftPWM_ISR   (midx: 0)
  end
   (midx: 0)
_Timer2_interrupt:
  begin   (midx: 0)
//mikromedia_STM32plus_main.c,101 :: 		void Timer2_interrupt() iv IVT_INT_TIM2 ics ICS_AUTO
_Timer2_interrupt:
  begin   (midx: 0)
//mikromedia_STM32plus_main.c,103 :: 		TIM2_SR.UIF = 0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(TIM2_SR)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//mikromedia_STM32plus_main.c,105 :: 		TIM2_CR1.CEN = 0;
	R0 <4> <- addr(TIM2_CR1)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//mikromedia_STM32plus_main.c,106 :: 		TIMER2_IRQ();
	CALL _TIMER2_IRQ   (midx: 0)
//mikromedia_STM32plus_main.c,107 :: 		TIM2_CR1.CEN = 0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(TIM2_CR1)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
  end
   (midx: 0)
_ExtInt:
  begin   (midx: 0)
//mikromedia_STM32plus_main.c,114 :: 		void ExtInt() iv IVT_INT_EXTI15_10 ics ICS_AUTO
_ExtInt:
  begin   (midx: 0)
//mikromedia_STM32plus_main.c,116 :: 		EXTI_PR.B10 = 1;                      // clear flag
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(EXTI_PR)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//mikromedia_STM32plus_main.c,117 :: 		nRF24L01_IRQ();
	CALL _nRF24L01_IRQ   (midx: 0)
  end
   (midx: 0)
_Timer5_interrupt:
  begin   (midx: 0)
//mikromedia_STM32plus_main.c,125 :: 		void Timer5_interrupt() iv IVT_INT_TIM5 {
_Timer5_interrupt:
  begin   (midx: 0)
//mikromedia_STM32plus_main.c,126 :: 		TIM5_SR.UIF = 0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(TIM5_SR)   (midx: 0)
	[R0] <0> <- R1   (midx: 20)
//mikromedia_STM32plus_main.c,129 :: 		TTT_flag = 1;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_TTT_flag)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
  end
   (midx: 0)
_main:
  begin   (midx: 0)
//mikromedia_STM32plus_main.c,136 :: 		void main() {
_main:
  begin   (midx: 0)
//mikromedia_STM32plus_main.c,137 :: 		Start_TP();
	CALL _Start_TP   (midx: 0)
//mikromedia_STM32plus_main.c,139 :: 		Init_GPIO();
	CALL _Init_GPIO   (midx: 0)
//mikromedia_STM32plus_main.c,140 :: 		Init_SDIO();
	CALL _Init_SDIO   (midx: 0)
//mikromedia_STM32plus_main.c,141 :: 		Init_FAT();
	CALL _Init_FAT   (midx: 0)
//mikromedia_STM32plus_main.c,142 :: 		RTC_Init();
	CALL _RTC_Init   (midx: 0)
//mikromedia_STM32plus_main.c,144 :: 		while (1) {
0:   (midx: 0)
//mikromedia_STM32plus_main.c,145 :: 		DisableInterrupts();
	CALL _DisableInterrupts   (midx: 0)
//mikromedia_STM32plus_main.c,146 :: 		Check_TP();
	CALL _Check_TP   (midx: 0)
//mikromedia_STM32plus_main.c,147 :: 		EnableInterrupts();
	CALL _EnableInterrupts   (midx: 0)
//mikromedia_STM32plus_main.c,148 :: 		Run_Example();
	CALL _Run_Example   (midx: 0)
//mikromedia_STM32plus_main.c,149 :: 		}
	goto	0   (midx: 0)
  end
   (midx: 0)
