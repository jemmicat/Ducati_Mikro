;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/8/2014 7:53:42 PM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x7C690001  	97385
0x0008	0x78B10001  	96433
0x000C	0x78B10001  	96433
0x0010	0x78B10001  	96433
0x0014	0x78B10001  	96433
0x0018	0x78B10001  	96433
0x001C	0x78B10001  	96433
0x0020	0x78B10001  	96433
0x0024	0x78B10001  	96433
0x0028	0x78B10001  	96433
0x002C	0x78B10001  	96433
0x0030	0x78B10001  	96433
0x0034	0x78B10001  	96433
0x0038	0x78B10001  	96433
0x003C	0x78B10001  	96433
0x0040	0x78B10001  	96433
0x0044	0x78B10001  	96433
0x0048	0x78B10001  	96433
0x004C	0x78B10001  	96433
0x0050	0x78B10001  	96433
0x0054	0x78B10001  	96433
0x0058	0x78B10001  	96433
0x005C	0x78B10001  	96433
0x0060	0x78B10001  	96433
0x0064	0x78B10001  	96433
0x0068	0x78B10001  	96433
0x006C	0x78B10001  	96433
0x0070	0x78B10001  	96433
0x0074	0x78B10001  	96433
0x0078	0x78B10001  	96433
0x007C	0x78B10001  	96433
0x0080	0x78B10001  	96433
0x0084	0x78B10001  	96433
0x0088	0x78B10001  	96433
0x008C	0x78B10001  	96433
0x0090	0x78B10001  	96433
0x0094	0x78B10001  	96433
0x0098	0x78B10001  	96433
0x009C	0x78B10001  	96433
0x00A0	0x78B10001  	96433
0x00A4	0x78B10001  	96433
0x00A8	0x78B10001  	96433
0x00AC	0x78B10001  	96433
0x00B0	0x78B10001  	96433
0x00B4	0x78B10001  	96433
0x00B8	0x78B10001  	96433
0x00BC	0x78B10001  	96433
0x00C0	0x78B10001  	96433
0x00C4	0x78B10001  	96433
0x00C8	0x78B10001  	96433
0x00CC	0x78B10001  	96433
0x00D0	0x78B10001  	96433
0x00D4	0x78B10001  	96433
0x00D8	0x78B10001  	96433
0x00DC	0x78B10001  	96433
0x00E0	0x78B10001  	96433
0x00E4	0x78B10001  	96433
0x00E8	0x78B10001  	96433
0x00EC	0x78B10001  	96433
0x00F0	0x78B10001  	96433
0x00F4	0x78B10001  	96433
0x00F8	0x78B10001  	96433
0x00FC	0x78B10001  	96433
0x0100	0x78B10001  	96433
0x0104	0x78B10001  	96433
0x0108	0x78B10001  	96433
0x010C	0x78B10001  	96433
0x0110	0x78B10001  	96433
0x0114	0x78B10001  	96433
0x0118	0x78B10001  	96433
0x011C	0x78B10001  	96433
0x0120	0x78B10001  	96433
0x0124	0x78B10001  	96433
0x0128	0x78B10001  	96433
0x012C	0x78B10001  	96433
0x0130	0x78B10001  	96433
0x0134	0x78B10001  	96433
0x0138	0x78B10001  	96433
0x013C	0x78B10001  	96433
0x0140	0x78B10001  	96433
0x0144	0x78B10001  	96433
0x0148	0x78B10001  	96433
0x014C	0x78B10001  	96433
0x0150	0x78B10001  	96433
0x0154	0x78B10001  	96433
0x0158	0x78B10001  	96433
0x015C	0x78B10001  	96433
0x0160	0x78B10001  	96433
0x0164	0x78B10001  	96433
0x0168	0x78B10001  	96433
0x016C	0x78B10001  	96433
0x0170	0x78B10001  	96433
0x0174	0x78B10001  	96433
0x0178	0x78B10001  	96433
0x017C	0x78B10001  	96433
0x0180	0x78B10001  	96433
0x0184	0x78B10001  	96433
; end of ____SysVT
_main:
;Ducati_logger_main.c, 43 :: 		void main() {
0x17C68	0xF7FFFE4E  BL	96520
0x17C6C	0xF7FFFE24  BL	96440
0x17C70	0xF001F93A  BL	102120
0x17C74	0xF7FFFE36  BL	96484
0x17C78	0xF001F8F6  BL	101992
;Ducati_logger_main.c, 45 :: 		Start_TP();
0x17C7C	0xF7FFFCE4  BL	_Start_TP+0
;Ducati_logger_main.c, 47 :: 		Init_GPIO();
0x17C80	0xF7FFFDB4  BL	_Init_GPIO+0
;Ducati_logger_main.c, 48 :: 		Init_SDIO();
0x17C84	0xF7FFFC0C  BL	_Init_SDIO+0
;Ducati_logger_main.c, 49 :: 		Init_FAT();
0x17C88	0xF7FFFC50  BL	_Init_FAT+0
;Ducati_logger_main.c, 50 :: 		RTC_Init();
0x17C8C	0xF7FFFDDC  BL	_RTC_Init+0
;Ducati_logger_main.c, 52 :: 		while (1) {
L_main0:
;Ducati_logger_main.c, 53 :: 		DisableInterrupts();
0x17C90	0xF7FFFDD2  BL	_DisableInterrupts+0
;Ducati_logger_main.c, 54 :: 		Check_TP();
0x17C94	0xF7FFFD16  BL	_Check_TP+0
;Ducati_logger_main.c, 55 :: 		EnableInterrupts();
0x17C98	0xF7FFFD4A  BL	_EnableInterrupts+0
;Ducati_logger_main.c, 56 :: 		DrawScreen(&Boot);
0x17C9C	0x4804    LDR	R0, [PC, #16]
0x17C9E	0xF7F7FDD5  BL	_DrawScreen+0
;Ducati_logger_main.c, 57 :: 		DrawScreen(&Speedometer_graphics);
0x17CA2	0x4804    LDR	R0, [PC, #16]
0x17CA4	0xF7F7FDD2  BL	_DrawScreen+0
;Ducati_logger_main.c, 58 :: 		Run_logger();
0x17CA8	0xF7FFFD4A  BL	_Run_Logger+0
;Ducati_logger_main.c, 60 :: 		}
0x17CAC	0xE7F0    B	L_main0
;Ducati_logger_main.c, 61 :: 		}
L_end_main:
L__main_end_loop:
0x17CAE	0xE7FE    B	L__main_end_loop
0x17CB0	0x22982000  	_Boot+0
0x17CB4	0x08742000  	_Speedometer_graphics+0
; end of _main
_Start_TP:
;Ducati_logger_driver.c, 4708 :: 		void Start_TP() {
0x17648	0xB081    SUB	SP, SP, #4
0x1764A	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_driver.c, 4709 :: 		Init_MCU();
0x1764E	0xF7F7FBAF  BL	_Init_MCU+0
;Ducati_logger_driver.c, 4711 :: 		Init_Ext_Mem();
0x17652	0xF7F7FA49  BL	_Init_Ext_Mem+0
;Ducati_logger_driver.c, 4713 :: 		InitializeTouchPanel();
0x17656	0xF7F7F89B  BL	Ducati_logger_driver_InitializeTouchPanel+0
;Ducati_logger_driver.c, 4714 :: 		if (STMPE610_Config() == STMPE610_OK) {
0x1765A	0xF7F7FC05  BL	_STMPE610_Config+0
0x1765E	0x2800    CMP	R0, #0
0x17660	0xD100    BNE	L_Start_TP256
;Ducati_logger_driver.c, 4715 :: 		} else {
0x17662	0xE000    B	L_Start_TP257
L_Start_TP256:
;Ducati_logger_driver.c, 4716 :: 		while(1);
L_Start_TP258:
0x17664	0xE7FE    B	L_Start_TP258
;Ducati_logger_driver.c, 4717 :: 		}
L_Start_TP257:
;Ducati_logger_driver.c, 4720 :: 		Delay_ms(1000);
0x17666	0xF24F077E  MOVW	R7, #61566
0x1766A	0xF2C027FA  MOVT	R7, #762
0x1766E	0xBF00    NOP
0x17670	0xBF00    NOP
L_Start_TP260:
0x17672	0x1E7F    SUBS	R7, R7, #1
0x17674	0xD1FD    BNE	L_Start_TP260
0x17676	0xBF00    NOP
0x17678	0xBF00    NOP
0x1767A	0xBF00    NOP
;Ducati_logger_driver.c, 4721 :: 		TFT_Fill_Screen(0);
0x1767C	0x2000    MOVS	R0, #0
0x1767E	0xF7F8FBED  BL	_TFT_Fill_Screen+0
;Ducati_logger_driver.c, 4722 :: 		Calibrate();
0x17682	0xF7F8FAD5  BL	_Calibrate+0
;Ducati_logger_driver.c, 4723 :: 		TFT_Fill_Screen(0);
0x17686	0x2000    MOVS	R0, #0
0x17688	0xF7F8FBE8  BL	_TFT_Fill_Screen+0
;Ducati_logger_driver.c, 4725 :: 		InitializeObjects();
0x1768C	0xF7F8FC2E  BL	Ducati_logger_driver_InitializeObjects+0
;Ducati_logger_driver.c, 4726 :: 		display_width = Tachometer_graphics.Width;
0x17690	0x4807    LDR	R0, [PC, #28]
0x17692	0x8801    LDRH	R1, [R0, #0]
0x17694	0x4807    LDR	R0, [PC, #28]
0x17696	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 4727 :: 		display_height = Tachometer_graphics.Height;
0x17698	0x4807    LDR	R0, [PC, #28]
0x1769A	0x8801    LDRH	R1, [R0, #0]
0x1769C	0x4807    LDR	R0, [PC, #28]
0x1769E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 4728 :: 		DrawScreen(&Tachometer_graphics);
0x176A0	0x4807    LDR	R0, [PC, #28]
0x176A2	0xF7F8F8D3  BL	_DrawScreen+0
;Ducati_logger_driver.c, 4729 :: 		}
L_end_Start_TP:
0x176A6	0xF8DDE000  LDR	LR, [SP, #0]
0x176AA	0xB001    ADD	SP, SP, #4
0x176AC	0x4770    BX	LR
0x176AE	0xBF00    NOP
0x176B0	0x0C8A2000  	_Tachometer_graphics+2
0x176B4	0x22922000  	_display_width+0
0x176B8	0x0C8C2000  	_Tachometer_graphics+4
0x176BC	0x22942000  	_display_height+0
0x176C0	0x0C882000  	_Tachometer_graphics+0
; end of _Start_TP
_Init_MCU:
;Ducati_logger_driver.c, 4628 :: 		void Init_MCU() {
0xEDB0	0xB081    SUB	SP, SP, #4
0xEDB2	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_driver.c, 4630 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6);
0xEDB6	0xF2400140  MOVW	R1, #64
0xEDBA	0x4824    LDR	R0, [PC, #144]
0xEDBC	0xF7FEF8E2  BL	_GPIO_Digital_Output+0
;Ducati_logger_driver.c, 4631 :: 		for (_cnt = 0; _cnt < 20; _cnt++) {
; _cnt start address is: 8 (R2)
0xEDC0	0x2200    MOVS	R2, #0
; _cnt end address is: 8 (R2)
L_Init_MCU247:
; _cnt start address is: 8 (R2)
0xEDC2	0x2A14    CMP	R2, #20
0xEDC4	0xD220    BCS	L_Init_MCU248
;Ducati_logger_driver.c, 4632 :: 		GPIOB_ODR.B6 = 0;
0xEDC6	0x2100    MOVS	R1, #0
0xEDC8	0xB249    SXTB	R1, R1
0xEDCA	0x4821    LDR	R0, [PC, #132]
0xEDCC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 4633 :: 		Delay_ms(1);
0xEDCE	0xF24C374E  MOVW	R7, #49998
0xEDD2	0xF2C00700  MOVT	R7, #0
0xEDD6	0xBF00    NOP
0xEDD8	0xBF00    NOP
L_Init_MCU250:
0xEDDA	0x1E7F    SUBS	R7, R7, #1
0xEDDC	0xD1FD    BNE	L_Init_MCU250
0xEDDE	0xBF00    NOP
0xEDE0	0xBF00    NOP
0xEDE2	0xBF00    NOP
;Ducati_logger_driver.c, 4634 :: 		GPIOB_ODR.B6 = 1;
0xEDE4	0x2101    MOVS	R1, #1
0xEDE6	0xB249    SXTB	R1, R1
0xEDE8	0x4819    LDR	R0, [PC, #100]
0xEDEA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 4635 :: 		Delay_ms(1);
0xEDEC	0xF24C374E  MOVW	R7, #49998
0xEDF0	0xF2C00700  MOVT	R7, #0
0xEDF4	0xBF00    NOP
0xEDF6	0xBF00    NOP
L_Init_MCU252:
0xEDF8	0x1E7F    SUBS	R7, R7, #1
0xEDFA	0xD1FD    BNE	L_Init_MCU252
0xEDFC	0xBF00    NOP
0xEDFE	0xBF00    NOP
0xEE00	0xBF00    NOP
;Ducati_logger_driver.c, 4631 :: 		for (_cnt = 0; _cnt < 20; _cnt++) {
0xEE02	0x1C52    ADDS	R2, R2, #1
0xEE04	0xB2D2    UXTB	R2, R2
;Ducati_logger_driver.c, 4636 :: 		}
; _cnt end address is: 8 (R2)
0xEE06	0xE7DC    B	L_Init_MCU247
L_Init_MCU248:
;Ducati_logger_driver.c, 4638 :: 		I2C1_Init_Advanced(400000, &_GPIO_MODULE_I2C1_PB67);
0xEE08	0x4912    LDR	R1, [PC, #72]
0xEE0A	0x4813    LDR	R0, [PC, #76]
0xEE0C	0xF7FEF8AC  BL	_I2C1_Init_Advanced+0
;Ducati_logger_driver.c, 4639 :: 		TFT_Set_Default_Mode();
0xEE10	0xF7FEF8C6  BL	_TFT_Set_Default_Mode+0
;Ducati_logger_driver.c, 4640 :: 		GPIO_Digital_Output(&GPIOG_BASE, 0x00FF);
0xEE14	0x21FF    MOVS	R1, #255
0xEE16	0x4811    LDR	R0, [PC, #68]
0xEE18	0xF7FEF8B4  BL	_GPIO_Digital_Output+0
;Ducati_logger_driver.c, 4641 :: 		GPIO_Digital_Output(&GPIOE_BASE, 0xFF00);
0xEE1C	0xF64F7100  MOVW	R1, #65280
0xEE20	0x480F    LDR	R0, [PC, #60]
0xEE22	0xF7FEF8AF  BL	_GPIO_Digital_Output+0
;Ducati_logger_driver.c, 4642 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_4);
0xEE26	0xF2400110  MOVW	R1, #16
0xEE2A	0x4808    LDR	R0, [PC, #32]
0xEE2C	0xF7FEF8AA  BL	_GPIO_Digital_Output+0
;Ducati_logger_driver.c, 4643 :: 		GPIOB_ODR.B4 = 0;
0xEE30	0x2100    MOVS	R1, #0
0xEE32	0xB249    SXTB	R1, R1
0xEE34	0x480B    LDR	R0, [PC, #44]
0xEE36	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 4644 :: 		TFT_Set_Default_Mode();
0xEE38	0xF7FEF8B2  BL	_TFT_Set_Default_Mode+0
;Ducati_logger_driver.c, 4645 :: 		TFT_Set_MM_Plus();
0xEE3C	0xF7FEF8DA  BL	_TFT_Set_MM_Plus+0
;Ducati_logger_driver.c, 4646 :: 		STMPE610_SetDefaultMode();
0xEE40	0xF7FEF8C0  BL	_STMPE610_SetDefaultMode+0
;Ducati_logger_driver.c, 4647 :: 		}
L_end_Init_MCU:
0xEE44	0xF8DDE000  LDR	LR, [SP, #0]
0xEE48	0xB001    ADD	SP, SP, #4
0xEE4A	0x4770    BX	LR
0xEE4C	0x04004002  	GPIOB_BASE+0
0xEE50	0x82984240  	GPIOB_ODR+0
0xEE54	0x8A940001  	__GPIO_MODULE_I2C1_PB67+0
0xEE58	0x1A800006  	#400000
0xEE5C	0x18004002  	GPIOG_BASE+0
0xEE60	0x10004002  	GPIOE_BASE+0
0xEE64	0x82904240  	GPIOB_ODR+0
; end of _Init_MCU
_GPIO_Digital_Output:
;__Lib_GPIO_32F4xx.c, 233 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0xCF84	0xB081    SUB	SP, SP, #4
0xCF86	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 234 :: 		
0xCF8A	0x4A04    LDR	R2, [PC, #16]
0xCF8C	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0xCF8E	0xF7FCF87B  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 235 :: 		
L_end_GPIO_Digital_Output:
0xCF92	0xF8DDE000  LDR	LR, [SP, #0]
0xCF96	0xB001    ADD	SP, SP, #4
0xCF98	0x4770    BX	LR
0xCF9A	0xBF00    NOP
0xCF9C	0x00140008  	#524308
; end of _GPIO_Digital_Output
_GPIO_Config:
;__Lib_GPIO_32F4xx.c, 74 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x9088	0xB084    SUB	SP, SP, #16
0x908A	0xF8CDE000  STR	LR, [SP, #0]
0x908E	0xB28D    UXTH	R5, R1
0x9090	0x4616    MOV	R6, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 20 (R5)
; config start address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 75 :: 		
;__Lib_GPIO_32F4xx.c, 76 :: 		
;__Lib_GPIO_32F4xx.c, 80 :: 		
0x9092	0x4B86    LDR	R3, [PC, #536]
0x9094	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 28 (R7)
0x9098	0x461F    MOV	R7, R3
;__Lib_GPIO_32F4xx.c, 82 :: 		
0x909A	0x4618    MOV	R0, R3
0x909C	0xF7FDF9C0  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F4xx.c, 85 :: 		
0x90A0	0xF1B50FFF  CMP	R5, #255
0x90A4	0xD120    BNE	L_GPIO_Config22
;__Lib_GPIO_32F4xx.c, 86 :: 		
0x90A6	0x683C    LDR	R4, [R7, #0]
;__Lib_GPIO_32F4xx.c, 87 :: 		
0x90A8	0x4B81    LDR	R3, [PC, #516]
0x90AA	0xEA040303  AND	R3, R4, R3, LSL #0
; tmp start address is: 0 (R0)
0x90AE	0x4618    MOV	R0, R3
;__Lib_GPIO_32F4xx.c, 88 :: 		
0x90B0	0x4B80    LDR	R3, [PC, #512]
0x90B2	0x429E    CMP	R6, R3
0x90B4	0xD114    BNE	L_GPIO_Config23
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 89 :: 		
0x90B6	0xF2455355  MOVW	R3, #21845
0x90BA	0xEA400303  ORR	R3, R0, R3, LSL #0
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 90 :: 		
0x90BE	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 91 :: 		
0x90C0	0x1D3D    ADDS	R5, R7, #4
0x90C2	0x682C    LDR	R4, [R5, #0]
0x90C4	0xF06F03FF  MVN	R3, #255
0x90C8	0xEA040303  AND	R3, R4, R3, LSL #0
0x90CC	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 92 :: 		
0x90CE	0xF2070508  ADDW	R5, R7, #8
; port end address is: 28 (R7)
0x90D2	0x682C    LDR	R4, [R5, #0]
0x90D4	0xF64F73FF  MOVW	R3, #65535
0x90D8	0xEA440303  ORR	R3, R4, R3, LSL #0
0x90DC	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 93 :: 		
0x90DE	0xE0E1    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 94 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F4xx.c, 95 :: 		
; port start address is: 28 (R7)
; tmp start address is: 0 (R0)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x90E0	0x2E42    CMP	R6, #66
0x90E2	0xD101    BNE	L_GPIO_Config24
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 96 :: 		
0x90E4	0x6038    STR	R0, [R7, #0]
; tmp end address is: 0 (R0)
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 97 :: 		
0x90E6	0xE0DD    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 98 :: 		
L_GPIO_Config24:
;__Lib_GPIO_32F4xx.c, 99 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config22:
;__Lib_GPIO_32F4xx.c, 101 :: 		
0x90E8	0xF64F73FF  MOVW	R3, #65535
0x90EC	0x429D    CMP	R5, R3
0x90EE	0xD113    BNE	L_GPIO_Config25
;__Lib_GPIO_32F4xx.c, 102 :: 		
0x90F0	0x4B70    LDR	R3, [PC, #448]
0x90F2	0x429E    CMP	R6, R3
0x90F4	0xD10B    BNE	L_GPIO_Config26
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 103 :: 		
0x90F6	0xF04F3355  MOV	R3, #1431655765
0x90FA	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 104 :: 		
0x90FC	0x1D3C    ADDS	R4, R7, #4
0x90FE	0x2300    MOVS	R3, #0
0x9100	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 105 :: 		
0x9102	0xF2070408  ADDW	R4, R7, #8
; port end address is: 28 (R7)
0x9106	0xF04F33FF  MOV	R3, #-1
0x910A	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 106 :: 		
0x910C	0xE0CA    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 107 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32F4xx.c, 108 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x910E	0x2E42    CMP	R6, #66
0x9110	0xD102    BNE	L_GPIO_Config27
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 109 :: 		
0x9112	0x2300    MOVS	R3, #0
0x9114	0x603B    STR	R3, [R7, #0]
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 110 :: 		
0x9116	0xE0C5    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 111 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32F4xx.c, 112 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config25:
;__Lib_GPIO_32F4xx.c, 114 :: 		
0x9118	0xF0060301  AND	R3, R6, #1
0x911C	0xB10B    CBZ	R3, L_GPIO_Config28
;__Lib_GPIO_32F4xx.c, 115 :: 		
; mode start address is: 0 (R0)
0x911E	0x2003    MOVS	R0, #3
; mode end address is: 0 (R0)
0x9120	0xE00A    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32F4xx.c, 116 :: 		
0x9122	0xF0060308  AND	R3, R6, #8
0x9126	0xB10B    CBZ	R3, L_GPIO_Config30
;__Lib_GPIO_32F4xx.c, 117 :: 		
; mode start address is: 0 (R0)
0x9128	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x912A	0xE005    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32F4xx.c, 118 :: 		
0x912C	0xF0060304  AND	R3, R6, #4
0x9130	0xB10B    CBZ	R3, L_GPIO_Config32
;__Lib_GPIO_32F4xx.c, 119 :: 		
; mode start address is: 0 (R0)
0x9132	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x9134	0xE000    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32F4xx.c, 121 :: 		
; mode start address is: 0 (R0)
0x9136	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config33:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config31:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config29:
;__Lib_GPIO_32F4xx.c, 123 :: 		
; mode start address is: 0 (R0)
0x9138	0xF4062301  AND	R3, R6, #528384
0x913C	0xB10B    CBZ	R3, L_GPIO_Config34
;__Lib_GPIO_32F4xx.c, 124 :: 		
; speed start address is: 4 (R1)
0x913E	0x2103    MOVS	R1, #3
; speed end address is: 4 (R1)
0x9140	0xE00A    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F4xx.c, 125 :: 		
0x9142	0xF4066300  AND	R3, R6, #2048
0x9146	0xB10B    CBZ	R3, L_GPIO_Config36
;__Lib_GPIO_32F4xx.c, 126 :: 		
; speed start address is: 4 (R1)
0x9148	0x2102    MOVS	R1, #2
; speed end address is: 4 (R1)
0x914A	0xE005    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F4xx.c, 127 :: 		
0x914C	0xF4066380  AND	R3, R6, #1024
0x9150	0xB10B    CBZ	R3, L_GPIO_Config38
;__Lib_GPIO_32F4xx.c, 128 :: 		
; speed start address is: 4 (R1)
0x9152	0x2101    MOVS	R1, #1
; speed end address is: 4 (R1)
0x9154	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32F4xx.c, 130 :: 		
; speed start address is: 4 (R1)
0x9156	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
L_GPIO_Config39:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config37:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config35:
;__Lib_GPIO_32F4xx.c, 132 :: 		
; speed start address is: 4 (R1)
0x9158	0xF0060320  AND	R3, R6, #32
0x915C	0xB10B    CBZ	R3, L_GPIO_Config40
;__Lib_GPIO_32F4xx.c, 133 :: 		
; otype start address is: 8 (R2)
0x915E	0x2201    MOVS	R2, #1
; otype end address is: 8 (R2)
0x9160	0xE000    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32F4xx.c, 135 :: 		
; otype start address is: 8 (R2)
0x9162	0x2200    MOVS	R2, #0
; otype end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32F4xx.c, 137 :: 		
; otype start address is: 8 (R2)
0x9164	0xF4067380  AND	R3, R6, #256
0x9168	0xB10B    CBZ	R3, L_GPIO_Config42
;__Lib_GPIO_32F4xx.c, 138 :: 		
; pull start address is: 12 (R3)
0x916A	0x2302    MOVS	R3, #2
; pull end address is: 12 (R3)
0x916C	0xE005    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32F4xx.c, 139 :: 		
0x916E	0xF0060380  AND	R3, R6, #128
0x9172	0xB10B    CBZ	R3, L_GPIO_Config44
;__Lib_GPIO_32F4xx.c, 140 :: 		
; pull start address is: 12 (R3)
0x9174	0x2301    MOVS	R3, #1
; pull end address is: 12 (R3)
0x9176	0xE000    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F4xx.c, 142 :: 		
; pull start address is: 12 (R3)
0x9178	0x2300    MOVS	R3, #0
; pull end address is: 12 (R3)
L_GPIO_Config45:
; pull start address is: 12 (R3)
; pull end address is: 12 (R3)
L_GPIO_Config43:
;__Lib_GPIO_32F4xx.c, 146 :: 		
; pull start address is: 12 (R3)
; pinpos start address is: 40 (R10)
0x917A	0xF2400A00  MOVW	R10, #0
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
; mode end address is: 0 (R0)
; speed end address is: 4 (R1)
; otype end address is: 8 (R2)
; pull end address is: 12 (R3)
; pinpos end address is: 40 (R10)
0x917E	0x9201    STR	R2, [SP, #4]
0x9180	0xFA1FF985  UXTH	R9, R5
0x9184	0x46B0    MOV	R8, R6
0x9186	0x4606    MOV	R6, R0
0x9188	0x4618    MOV	R0, R3
0x918A	0x460A    MOV	R2, R1
0x918C	0x9901    LDR	R1, [SP, #4]
L_GPIO_Config46:
; pinpos start address is: 40 (R10)
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 24 (R6)
; mode end address is: 24 (R6)
; port start address is: 28 (R7)
; port end address is: 28 (R7)
; config start address is: 32 (R8)
; config end address is: 32 (R8)
; pin_mask start address is: 36 (R9)
; pin_mask end address is: 36 (R9)
0x918E	0xF1BA0F10  CMP	R10, #16
0x9192	0xF0808087  BCS	L_GPIO_Config47
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
;__Lib_GPIO_32F4xx.c, 148 :: 		
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; port start address is: 28 (R7)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x9196	0xF04F0301  MOV	R3, #1
0x919A	0xFA03F40A  LSL	R4, R3, R10
;__Lib_GPIO_32F4xx.c, 150 :: 		
0x919E	0xEA090304  AND	R3, R9, R4, LSL #0
;__Lib_GPIO_32F4xx.c, 152 :: 		
0x91A2	0x42A3    CMP	R3, R4
0x91A4	0xF040807B  BNE	L_GPIO_Config49
;__Lib_GPIO_32F4xx.c, 154 :: 		
0x91A8	0xEA4F044A  LSL	R4, R10, #1
0x91AC	0xF04F0303  MOV	R3, #3
0x91B0	0x40A3    LSLS	R3, R4
0x91B2	0x43DC    MVN	R4, R3
0x91B4	0x683B    LDR	R3, [R7, #0]
0x91B6	0x4023    ANDS	R3, R4
0x91B8	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 155 :: 		
0x91BA	0xEA4F034A  LSL	R3, R10, #1
0x91BE	0xFA06F403  LSL	R4, R6, R3
0x91C2	0x683B    LDR	R3, [R7, #0]
0x91C4	0x4323    ORRS	R3, R4
0x91C6	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 157 :: 		
0x91C8	0xF008030C  AND	R3, R8, #12
0x91CC	0xB33B    CBZ	R3, L_GPIO_Config50
;__Lib_GPIO_32F4xx.c, 160 :: 		
0x91CE	0xF2070508  ADDW	R5, R7, #8
0x91D2	0xEA4F044A  LSL	R4, R10, #1
0x91D6	0xF04F0303  MOV	R3, #3
0x91DA	0x40A3    LSLS	R3, R4
0x91DC	0x43DC    MVN	R4, R3
0x91DE	0x682B    LDR	R3, [R5, #0]
0x91E0	0x4023    ANDS	R3, R4
0x91E2	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 161 :: 		
0x91E4	0xF2070508  ADDW	R5, R7, #8
0x91E8	0xEA4F034A  LSL	R3, R10, #1
0x91EC	0xFA02F403  LSL	R4, R2, R3
0x91F0	0x682B    LDR	R3, [R5, #0]
0x91F2	0x4323    ORRS	R3, R4
0x91F4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 164 :: 		
0x91F6	0x1D3D    ADDS	R5, R7, #4
0x91F8	0xFA1FF48A  UXTH	R4, R10
0x91FC	0xF04F0301  MOV	R3, #1
0x9200	0x40A3    LSLS	R3, R4
0x9202	0x43DC    MVN	R4, R3
0x9204	0x682B    LDR	R3, [R5, #0]
0x9206	0x4023    ANDS	R3, R4
0x9208	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 165 :: 		
0x920A	0x1D3D    ADDS	R5, R7, #4
0x920C	0xFA1FF48A  UXTH	R4, R10
0x9210	0xB28B    UXTH	R3, R1
0x9212	0xFA03F404  LSL	R4, R3, R4
0x9216	0xB2A4    UXTH	R4, R4
0x9218	0x682B    LDR	R3, [R5, #0]
0x921A	0x4323    ORRS	R3, R4
0x921C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 166 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F4xx.c, 169 :: 		
0x921E	0xF207050C  ADDW	R5, R7, #12
0x9222	0xFA1FF38A  UXTH	R3, R10
0x9226	0x005C    LSLS	R4, R3, #1
0x9228	0xB2A4    UXTH	R4, R4
0x922A	0xF04F0303  MOV	R3, #3
0x922E	0x40A3    LSLS	R3, R4
0x9230	0x43DC    MVN	R4, R3
0x9232	0x682B    LDR	R3, [R5, #0]
0x9234	0x4023    ANDS	R3, R4
0x9236	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 170 :: 		
0x9238	0xF207050C  ADDW	R5, R7, #12
0x923C	0xEA4F034A  LSL	R3, R10, #1
0x9240	0xFA00F403  LSL	R4, R0, R3
0x9244	0x682B    LDR	R3, [R5, #0]
0x9246	0x4323    ORRS	R3, R4
0x9248	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 172 :: 		
0x924A	0xF0080308  AND	R3, R8, #8
0x924E	0xB333    CBZ	R3, L_GPIO_Config51
;__Lib_GPIO_32F4xx.c, 173 :: 		
0x9250	0xF4080370  AND	R3, R8, #15728640
0x9254	0x0D1B    LSRS	R3, R3, #20
0x9256	0xF88D300C  STRB	R3, [SP, #12]
;__Lib_GPIO_32F4xx.c, 174 :: 		
0x925A	0xF1BA0F07  CMP	R10, #7
0x925E	0xD905    BLS	L_GPIO_Config52
;__Lib_GPIO_32F4xx.c, 175 :: 		
0x9260	0xF2070324  ADDW	R3, R7, #36
0x9264	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 176 :: 		
0x9266	0xF1AA0508  SUB	R5, R10, #8
; pos start address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 177 :: 		
; pos end address is: 20 (R5)
0x926A	0xE003    B	L_GPIO_Config53
L_GPIO_Config52:
;__Lib_GPIO_32F4xx.c, 178 :: 		
0x926C	0xF2070320  ADDW	R3, R7, #32
0x9270	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 179 :: 		
; pos start address is: 20 (R5)
0x9272	0x4655    MOV	R5, R10
; pos end address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 180 :: 		
L_GPIO_Config53:
;__Lib_GPIO_32F4xx.c, 181 :: 		
; pos start address is: 20 (R5)
0x9274	0x00AC    LSLS	R4, R5, #2
0x9276	0xF04F030F  MOV	R3, #15
0x927A	0x40A3    LSLS	R3, R4
0x927C	0x43DC    MVN	R4, R3
0x927E	0x9B02    LDR	R3, [SP, #8]
0x9280	0x681B    LDR	R3, [R3, #0]
0x9282	0xEA030404  AND	R4, R3, R4, LSL #0
0x9286	0x9B02    LDR	R3, [SP, #8]
0x9288	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 182 :: 		
0x928A	0xF89D400C  LDRB	R4, [SP, #12]
0x928E	0x00AB    LSLS	R3, R5, #2
; pos end address is: 20 (R5)
0x9290	0x409C    LSLS	R4, R3
0x9292	0x9B02    LDR	R3, [SP, #8]
0x9294	0x681B    LDR	R3, [R3, #0]
0x9296	0xEA430404  ORR	R4, R3, R4, LSL #0
0x929A	0x9B02    LDR	R3, [SP, #8]
0x929C	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 183 :: 		
L_GPIO_Config51:
;__Lib_GPIO_32F4xx.c, 185 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F4xx.c, 146 :: 		
0x929E	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F4xx.c, 186 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
; pinpos end address is: 40 (R10)
0x92A2	0xE774    B	L_GPIO_Config46
L_GPIO_Config47:
;__Lib_GPIO_32F4xx.c, 187 :: 		
L_end_GPIO_Config:
0x92A4	0xF8DDE000  LDR	LR, [SP, #0]
0x92A8	0xB004    ADD	SP, SP, #16
0x92AA	0x4770    BX	LR
0x92AC	0xFC00FFFF  	#-1024
0x92B0	0x0000FFFF  	#-65536
0x92B4	0x00140008  	#524308
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F4xx.c, 26 :: 		
; gpio_port start address is: 0 (R0)
0x6420	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 28 :: 		
0x6422	0x491E    LDR	R1, [PC, #120]
0x6424	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x6428	0x4608    MOV	R0, R1
;__Lib_GPIO_32F4xx.c, 29 :: 		
; pos start address is: 8 (R2)
0x642A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F4xx.c, 30 :: 		
0x642C	0xE012    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F4xx.c, 31 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x642E	0x2001    MOVS	R0, #1
; pos end address is: 0 (R0)
0x6430	0xE02C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 32 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x6432	0x2002    MOVS	R0, #2
; pos end address is: 0 (R0)
0x6434	0xE02A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 33 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x6436	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x6438	0xE028    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 34 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x643A	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x643C	0xE026    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 35 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x643E	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x6440	0xE024    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 36 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x6442	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x6444	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 37 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x6446	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x6448	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 38 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 0 (R0)
0x644A	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x644C	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 39 :: 		
L_GPIO_Clk_Enable10:
; pos start address is: 0 (R0)
0x644E	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x6452	0xE01B    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 40 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x6454	0x4912    LDR	R1, [PC, #72]
0x6456	0x4288    CMP	R0, R1
0x6458	0xD0E9    BEQ	L_GPIO_Clk_Enable2
0x645A	0x4912    LDR	R1, [PC, #72]
0x645C	0x4288    CMP	R0, R1
0x645E	0xD0E8    BEQ	L_GPIO_Clk_Enable3
0x6460	0x4911    LDR	R1, [PC, #68]
0x6462	0x4288    CMP	R0, R1
0x6464	0xD0E7    BEQ	L_GPIO_Clk_Enable4
0x6466	0x4911    LDR	R1, [PC, #68]
0x6468	0x4288    CMP	R0, R1
0x646A	0xD0E6    BEQ	L_GPIO_Clk_Enable5
0x646C	0x4910    LDR	R1, [PC, #64]
0x646E	0x4288    CMP	R0, R1
0x6470	0xD0E5    BEQ	L_GPIO_Clk_Enable6
0x6472	0x4910    LDR	R1, [PC, #64]
0x6474	0x4288    CMP	R0, R1
0x6476	0xD0E4    BEQ	L_GPIO_Clk_Enable7
0x6478	0x490F    LDR	R1, [PC, #60]
0x647A	0x4288    CMP	R0, R1
0x647C	0xD0E3    BEQ	L_GPIO_Clk_Enable8
0x647E	0x490F    LDR	R1, [PC, #60]
0x6480	0x4288    CMP	R0, R1
0x6482	0xD0E2    BEQ	L_GPIO_Clk_Enable9
0x6484	0x490E    LDR	R1, [PC, #56]
0x6486	0x4288    CMP	R0, R1
0x6488	0xD0E1    BEQ	L_GPIO_Clk_Enable10
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x648A	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F4xx.c, 42 :: 		
; pos start address is: 0 (R0)
0x648C	0x490D    LDR	R1, [PC, #52]
0x648E	0x6809    LDR	R1, [R1, #0]
0x6490	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x6494	0x490B    LDR	R1, [PC, #44]
0x6496	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 43 :: 		
L_end_GPIO_Clk_Enable:
0x6498	0xB001    ADD	SP, SP, #4
0x649A	0x4770    BX	LR
0x649C	0xFC00FFFF  	#-1024
0x64A0	0x00004002  	#1073872896
0x64A4	0x04004002  	#1073873920
0x64A8	0x08004002  	#1073874944
0x64AC	0x0C004002  	#1073875968
0x64B0	0x10004002  	#1073876992
0x64B4	0x14004002  	#1073878016
0x64B8	0x18004002  	#1073879040
0x64BC	0x1C004002  	#1073880064
0x64C0	0x20004002  	#1073881088
0x64C4	0x38304002  	RCC_AHB1ENR+0
; end of _GPIO_Clk_Enable
_I2C1_Init_Advanced:
;__Lib_I2C_123.c, 305 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0xCF68	0xB081    SUB	SP, SP, #4
0xCF6A	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_123.c, 306 :: 		
0xCF6E	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0xCF70	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0xCF72	0x4803    LDR	R0, [PC, #12]
0xCF74	0xF7FCFF62  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_123.c, 307 :: 		
L_end_I2C1_Init_Advanced:
0xCF78	0xF8DDE000  LDR	LR, [SP, #0]
0xCF7C	0xB001    ADD	SP, SP, #4
0xCF7E	0x4770    BX	LR
0xCF80	0x54004000  	I2C1_CR1+0
; end of _I2C1_Init_Advanced
_I2Cx_Init_Advanced:
;__Lib_I2C_123.c, 385 :: 		
; module start address is: 8 (R2)
; I2C_ClockSpeed start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x9E3C	0xB088    SUB	SP, SP, #32
0x9E3E	0xF8CDE000  STR	LR, [SP, #0]
0x9E42	0x460E    MOV	R6, R1
; module end address is: 8 (R2)
; I2C_ClockSpeed end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; I2C_ClockSpeed start address is: 24 (R6)
; module start address is: 8 (R2)
;__Lib_I2C_123.c, 387 :: 		
;__Lib_I2C_123.c, 394 :: 		
0x9E44	0x4B5E    LDR	R3, [PC, #376]
0x9E46	0x4298    CMP	R0, R3
0x9E48	0xD10D    BNE	L_I2Cx_Init_Advanced61
;__Lib_I2C_123.c, 395 :: 		
0x9E4A	0x2401    MOVS	R4, #1
0x9E4C	0xB264    SXTB	R4, R4
0x9E4E	0x4B5D    LDR	R3, [PC, #372]
0x9E50	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 396 :: 		
0x9E52	0x4C5D    LDR	R4, [PC, #372]
0x9E54	0x4B5D    LDR	R3, [PC, #372]
0x9E56	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 397 :: 		
0x9E58	0x4C5D    LDR	R4, [PC, #372]
0x9E5A	0x4B5E    LDR	R3, [PC, #376]
0x9E5C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 398 :: 		
0x9E5E	0x4C5E    LDR	R4, [PC, #376]
0x9E60	0x4B5E    LDR	R3, [PC, #376]
0x9E62	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 399 :: 		
0x9E64	0xE020    B	L_I2Cx_Init_Advanced62
L_I2Cx_Init_Advanced61:
;__Lib_I2C_123.c, 400 :: 		
0x9E66	0x4B5E    LDR	R3, [PC, #376]
0x9E68	0x4298    CMP	R0, R3
0x9E6A	0xD10D    BNE	L_I2Cx_Init_Advanced63
;__Lib_I2C_123.c, 401 :: 		
0x9E6C	0x2401    MOVS	R4, #1
0x9E6E	0xB264    SXTB	R4, R4
0x9E70	0x4B5C    LDR	R3, [PC, #368]
0x9E72	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 402 :: 		
0x9E74	0x4C5C    LDR	R4, [PC, #368]
0x9E76	0x4B55    LDR	R3, [PC, #340]
0x9E78	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 403 :: 		
0x9E7A	0x4C5C    LDR	R4, [PC, #368]
0x9E7C	0x4B55    LDR	R3, [PC, #340]
0x9E7E	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 404 :: 		
0x9E80	0x4C5B    LDR	R4, [PC, #364]
0x9E82	0x4B56    LDR	R3, [PC, #344]
0x9E84	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 405 :: 		
0x9E86	0xE00F    B	L_I2Cx_Init_Advanced64
L_I2Cx_Init_Advanced63:
0x9E88	0x4B5A    LDR	R3, [PC, #360]
0x9E8A	0x4298    CMP	R0, R3
0x9E8C	0xD10C    BNE	L_I2Cx_Init_Advanced65
;__Lib_I2C_123.c, 406 :: 		
0x9E8E	0x2401    MOVS	R4, #1
0x9E90	0xB264    SXTB	R4, R4
0x9E92	0x4B59    LDR	R3, [PC, #356]
0x9E94	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 407 :: 		
0x9E96	0x4C59    LDR	R4, [PC, #356]
0x9E98	0x4B4C    LDR	R3, [PC, #304]
0x9E9A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 408 :: 		
0x9E9C	0x4C58    LDR	R4, [PC, #352]
0x9E9E	0x4B4D    LDR	R3, [PC, #308]
0x9EA0	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 409 :: 		
0x9EA2	0x4C58    LDR	R4, [PC, #352]
0x9EA4	0x4B4D    LDR	R3, [PC, #308]
0x9EA6	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 410 :: 		
L_I2Cx_Init_Advanced65:
L_I2Cx_Init_Advanced64:
L_I2Cx_Init_Advanced62:
;__Lib_I2C_123.c, 411 :: 		
0x9EA8	0x9601    STR	R6, [SP, #4]
; module end address is: 8 (R2)
0x9EAA	0x9002    STR	R0, [SP, #8]
0x9EAC	0x4610    MOV	R0, R2
0x9EAE	0xF7FCFCAD  BL	_GPIO_Alternate_Function_Enable+0
0x9EB2	0x9802    LDR	R0, [SP, #8]
0x9EB4	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_123.c, 416 :: 		
0x9EB6	0x1D03    ADDS	R3, R0, #4
0x9EB8	0x681B    LDR	R3, [R3, #0]
;__Lib_I2C_123.c, 418 :: 		
0x9EBA	0xB29C    UXTH	R4, R3
0x9EBC	0xF06F033F  MVN	R3, #63
0x9EC0	0xEA040303  AND	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x9EC4	0xB29D    UXTH	R5, R3
;__Lib_I2C_123.c, 420 :: 		
0x9EC6	0xAB03    ADD	R3, SP, #12
0x9EC8	0x9001    STR	R0, [SP, #4]
0x9ECA	0x4618    MOV	R0, R3
0x9ECC	0xF7FCFC5C  BL	_RCC_GetClocksFrequency+0
0x9ED0	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_123.c, 421 :: 		
; pclk1 start address is: 28 (R7)
0x9ED2	0x9F05    LDR	R7, [SP, #20]
;__Lib_I2C_123.c, 423 :: 		
0x9ED4	0x9C05    LDR	R4, [SP, #20]
0x9ED6	0x4B4C    LDR	R3, [PC, #304]
0x9ED8	0xFBB4F3F3  UDIV	R3, R4, R3
; freqrange start address is: 4 (R1)
0x9EDC	0xB299    UXTH	R1, R3
;__Lib_I2C_123.c, 424 :: 		
0x9EDE	0xB29B    UXTH	R3, R3
0x9EE0	0xEA450403  ORR	R4, R5, R3, LSL #0
0x9EE4	0xB2A4    UXTH	R4, R4
; tmpreg end address is: 20 (R5)
;__Lib_I2C_123.c, 426 :: 		
0x9EE6	0x1D03    ADDS	R3, R0, #4
0x9EE8	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_123.c, 430 :: 		
0x9EEA	0x2400    MOVS	R4, #0
0x9EEC	0x6803    LDR	R3, [R0, #0]
0x9EEE	0xF3640300  BFI	R3, R4, #0, #1
0x9EF2	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_123.c, 433 :: 		
; tmpreg start address is: 8 (R2)
0x9EF4	0x2200    MOVS	R2, #0
;__Lib_I2C_123.c, 436 :: 		
0x9EF6	0x4B45    LDR	R3, [PC, #276]
0x9EF8	0x429E    CMP	R6, R3
0x9EFA	0xD812    BHI	L_I2Cx_Init_Advanced66
;__Lib_I2C_123.c, 439 :: 		
0x9EFC	0x0073    LSLS	R3, R6, #1
; I2C_ClockSpeed end address is: 24 (R6)
0x9EFE	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x9F02	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 441 :: 		
0x9F04	0x2C04    CMP	R4, #4
0x9F06	0xD202    BCS	L__I2Cx_Init_Advanced72
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 444 :: 		
; result start address is: 12 (R3)
0x9F08	0x2304    MOVS	R3, #4
; result end address is: 12 (R3)
0x9F0A	0x461C    MOV	R4, R3
;__Lib_I2C_123.c, 445 :: 		
0x9F0C	0xE7FF    B	L_I2Cx_Init_Advanced67
L__I2Cx_Init_Advanced72:
;__Lib_I2C_123.c, 441 :: 		
;__Lib_I2C_123.c, 445 :: 		
L_I2Cx_Init_Advanced67:
;__Lib_I2C_123.c, 447 :: 		
; result start address is: 16 (R4)
0x9F0E	0xEA420304  ORR	R3, R2, R4, LSL #0
; result end address is: 16 (R4)
0x9F12	0xB29A    UXTH	R2, R3
;__Lib_I2C_123.c, 449 :: 		
0x9F14	0xF2000420  ADDW	R4, R0, #32
0x9F18	0x1C4B    ADDS	R3, R1, #1
0x9F1A	0xB29B    UXTH	R3, R3
; freqrange end address is: 4 (R1)
0x9F1C	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_123.c, 450 :: 		
0x9F1E	0xB291    UXTH	R1, R2
0x9F20	0xE040    B	L_I2Cx_Init_Advanced68
L_I2Cx_Init_Advanced66:
;__Lib_I2C_123.c, 455 :: 		
; freqrange start address is: 4 (R1)
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x9F22	0x2303    MOVS	R3, #3
0x9F24	0xFB06F503  MUL	R5, R6, R3
0x9F28	0xFBB7F3F5  UDIV	R3, R7, R5
; result start address is: 36 (R9)
0x9F2C	0xFA1FF983  UXTH	R9, R3
;__Lib_I2C_123.c, 458 :: 		
0x9F30	0x2319    MOVS	R3, #25
0x9F32	0xFB06F403  MUL	R4, R6, R3
0x9F36	0xFBB7F3F4  UDIV	R3, R7, R4
; result25 start address is: 32 (R8)
0x9F3A	0xFA1FF883  UXTH	R8, R3
;__Lib_I2C_123.c, 460 :: 		
0x9F3E	0xFB09F305  MUL	R3, R9, R5
; result end address is: 36 (R9)
; result start address is: 20 (R5)
0x9F42	0x461D    MOV	R5, R3
;__Lib_I2C_123.c, 462 :: 		
0x9F44	0xFB08F304  MUL	R3, R8, R4
; result25 end address is: 32 (R8)
;__Lib_I2C_123.c, 464 :: 		
0x9F48	0x1B7C    SUB	R4, R7, R5
; result end address is: 20 (R5)
0x9F4A	0x1AFB    SUB	R3, R7, R3
0x9F4C	0x429C    CMP	R4, R3
0x9F4E	0xD205    BCS	L_I2Cx_Init_Advanced69
;__Lib_I2C_123.c, 465 :: 		
0x9F50	0x2303    MOVS	R3, #3
0x9F52	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x9F54	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x9F58	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 466 :: 		
; result end address is: 16 (R4)
0x9F5A	0xE006    B	L_I2Cx_Init_Advanced70
L_I2Cx_Init_Advanced69:
;__Lib_I2C_123.c, 468 :: 		
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x9F5C	0x2319    MOVS	R3, #25
0x9F5E	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x9F60	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x9F64	0xB2A4    UXTH	R4, R4
;__Lib_I2C_123.c, 469 :: 		
0x9F66	0xF4444480  ORR	R4, R4, #16384
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 470 :: 		
L_I2Cx_Init_Advanced70:
;__Lib_I2C_123.c, 473 :: 		
; result start address is: 16 (R4)
0x9F6A	0xF64073FF  MOVW	R3, #4095
0x9F6E	0xEA040303  AND	R3, R4, R3, LSL #0
0x9F72	0xB913    CBNZ	R3, L__I2Cx_Init_Advanced73
;__Lib_I2C_123.c, 476 :: 		
0x9F74	0xF0440401  ORR	R4, R4, #1
; result end address is: 16 (R4)
;__Lib_I2C_123.c, 477 :: 		
0x9F78	0xE7FF    B	L_I2Cx_Init_Advanced71
L__I2Cx_Init_Advanced73:
;__Lib_I2C_123.c, 473 :: 		
;__Lib_I2C_123.c, 477 :: 		
L_I2Cx_Init_Advanced71:
;__Lib_I2C_123.c, 479 :: 		
; result start address is: 16 (R4)
0x9F7A	0xF4444300  ORR	R3, R4, #32768
; result end address is: 16 (R4)
0x9F7E	0xB29B    UXTH	R3, R3
0x9F80	0x431A    ORRS	R2, R3
0x9F82	0xB292    UXTH	R2, R2
;__Lib_I2C_123.c, 481 :: 		
0x9F84	0xF2000520  ADDW	R5, R0, #32
0x9F88	0xF240132C  MOVW	R3, #300
0x9F8C	0xFB01F403  MUL	R4, R1, R3
0x9F90	0xB2A4    UXTH	R4, R4
; freqrange end address is: 4 (R1)
0x9F92	0xF24033E8  MOVW	R3, #1000
0x9F96	0xFBB4F3F3  UDIV	R3, R4, R3
0x9F9A	0xB29B    UXTH	R3, R3
0x9F9C	0x1C5B    ADDS	R3, R3, #1
0x9F9E	0xB29B    UXTH	R3, R3
0x9FA0	0x602B    STR	R3, [R5, #0]
; tmpreg end address is: 8 (R2)
0x9FA2	0xB291    UXTH	R1, R2
;__Lib_I2C_123.c, 482 :: 		
L_I2Cx_Init_Advanced68:
;__Lib_I2C_123.c, 484 :: 		
; tmpreg start address is: 4 (R1)
0x9FA4	0xF200031C  ADDW	R3, R0, #28
0x9FA8	0x6019    STR	R1, [R3, #0]
; tmpreg end address is: 4 (R1)
;__Lib_I2C_123.c, 486 :: 		
0x9FAA	0x2300    MOVS	R3, #0
0x9FAC	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_123.c, 487 :: 		
0x9FAE	0x2401    MOVS	R4, #1
0x9FB0	0x6803    LDR	R3, [R0, #0]
0x9FB2	0xF3640300  BFI	R3, R4, #0, #1
0x9FB6	0x6003    STR	R3, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_123.c, 488 :: 		
L_end_I2Cx_Init_Advanced:
0x9FB8	0xF8DDE000  LDR	LR, [SP, #0]
0x9FBC	0xB008    ADD	SP, SP, #32
0x9FBE	0x4770    BX	LR
0x9FC0	0x54004000  	I2C1_CR1+0
0x9FC4	0x08544247  	RCC_APB1ENR+0
0x9FC8	0x686D0000  	_I2C1_Start+0
0x9FCC	0x2A942000  	_I2C_Start_Ptr+0
0x9FD0	0x24F90000  	_I2C1_Read+0
0x9FD4	0x2A982000  	_I2C_Read_Ptr+0
0x9FD8	0x24590000  	_I2C1_Write+0
0x9FDC	0x2A9C2000  	_I2C_Write_Ptr+0
0x9FE0	0x58004000  	I2C2_CR1+0
0x9FE4	0x08584247  	RCC_APB1ENR+0
0x9FE8	0x68550000  	_I2C2_Start+0
0x9FEC	0x24A10000  	_I2C2_Read+0
0x9FF0	0x241D0000  	_I2C2_Write+0
0x9FF4	0x5C004000  	I2C3_CR1+0
0x9FF8	0x085C4247  	RCC_APB1ENR+0
0x9FFC	0x66990000  	_I2C3_Start+0
0xA000	0x23310000  	_I2C3_Read+0
0xA004	0x247D0000  	_I2C3_Write+0
0xA008	0x4240000F  	#1000000
0xA00C	0x86A00001  	#100000
; end of _I2Cx_Init_Advanced
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F4xx.c, 223 :: 		
; module start address is: 0 (R0)
0x680C	0xB083    SUB	SP, SP, #12
0x680E	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 226 :: 		
; i start address is: 16 (R4)
0x6812	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32F4xx.c, 227 :: 		
L_GPIO_Alternate_Function_Enable66:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x6814	0x00A1    LSLS	R1, R4, #2
0x6816	0x1841    ADDS	R1, R0, R1
0x6818	0x6809    LDR	R1, [R1, #0]
0x681A	0xF1B13FFF  CMP	R1, #-1
0x681E	0xD014    BEQ	L_GPIO_Alternate_Function_Enable67
;__Lib_GPIO_32F4xx.c, 228 :: 		
0x6820	0xF2000134  ADDW	R1, R0, #52
0x6824	0x00A3    LSLS	R3, R4, #2
0x6826	0x18C9    ADDS	R1, R1, R3
0x6828	0x6809    LDR	R1, [R1, #0]
0x682A	0x460A    MOV	R2, R1
0x682C	0x18C1    ADDS	R1, R0, R3
0x682E	0x6809    LDR	R1, [R1, #0]
0x6830	0x9001    STR	R0, [SP, #4]
0x6832	0xF8AD4008  STRH	R4, [SP, #8]
0x6836	0x4608    MOV	R0, R1
0x6838	0x4611    MOV	R1, R2
0x683A	0xF7FCFB0B  BL	__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function+0
0x683E	0xF8BD4008  LDRH	R4, [SP, #8]
0x6842	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 229 :: 		
0x6844	0x1C64    ADDS	R4, R4, #1
0x6846	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32F4xx.c, 230 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x6848	0xE7E4    B	L_GPIO_Alternate_Function_Enable66
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F4xx.c, 231 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x684A	0xF8DDE000  LDR	LR, [SP, #0]
0x684E	0xB003    ADD	SP, SP, #12
0x6850	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32F4xx.c, 190 :: 		
; configs start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x2E54	0xB083    SUB	SP, SP, #12
0x2E56	0xF8CDE000  STR	LR, [SP, #0]
0x2E5A	0x4604    MOV	R4, R0
; configs end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 16 (R4)
; configs start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 195 :: 		
0x2E5C	0xF00403FF  AND	R3, R4, #255
0x2E60	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x2E62	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 196 :: 		
0x2E64	0xF003020F  AND	R2, R3, #15
; pin start address is: 48 (R12)
0x2E68	0x4694    MOV	R12, R2
;__Lib_GPIO_32F4xx.c, 197 :: 		
0x2E6A	0x0A22    LSRS	R2, R4, #8
; af_pin end address is: 16 (R4)
0x2E6C	0xF002020F  AND	R2, R2, #15
; af start address is: 44 (R11)
0x2E70	0x4693    MOV	R11, R2
;__Lib_GPIO_32F4xx.c, 199 :: 		
0x2E72	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54
; port end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 200 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56:
0x2E74	0x4A2D    LDR	R2, [PC, #180]
0x2E76	0x9202    STR	R2, [SP, #8]
0x2E78	0xE029    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 201 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57:
0x2E7A	0x4A2D    LDR	R2, [PC, #180]
0x2E7C	0x9202    STR	R2, [SP, #8]
0x2E7E	0xE026    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 202 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58:
0x2E80	0x4A2C    LDR	R2, [PC, #176]
0x2E82	0x9202    STR	R2, [SP, #8]
0x2E84	0xE023    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 203 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59:
0x2E86	0x4A2C    LDR	R2, [PC, #176]
0x2E88	0x9202    STR	R2, [SP, #8]
0x2E8A	0xE020    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 204 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60:
0x2E8C	0x4A2B    LDR	R2, [PC, #172]
0x2E8E	0x9202    STR	R2, [SP, #8]
0x2E90	0xE01D    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 205 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61:
0x2E92	0x4A2B    LDR	R2, [PC, #172]
0x2E94	0x9202    STR	R2, [SP, #8]
0x2E96	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 206 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62:
0x2E98	0x4A2A    LDR	R2, [PC, #168]
0x2E9A	0x9202    STR	R2, [SP, #8]
0x2E9C	0xE017    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 207 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63:
0x2E9E	0x4A2A    LDR	R2, [PC, #168]
0x2EA0	0x9202    STR	R2, [SP, #8]
0x2EA2	0xE014    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 208 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64:
0x2EA4	0x4A29    LDR	R2, [PC, #164]
0x2EA6	0x9202    STR	R2, [SP, #8]
0x2EA8	0xE011    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 209 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54:
; port start address is: 0 (R0)
0x2EAA	0x2800    CMP	R0, #0
0x2EAC	0xD0E2    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56
0x2EAE	0x2801    CMP	R0, #1
0x2EB0	0xD0E3    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57
0x2EB2	0x2802    CMP	R0, #2
0x2EB4	0xD0E4    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58
0x2EB6	0x2803    CMP	R0, #3
0x2EB8	0xD0E5    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59
0x2EBA	0x2804    CMP	R0, #4
0x2EBC	0xD0E6    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60
0x2EBE	0x2805    CMP	R0, #5
0x2EC0	0xD0E7    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61
0x2EC2	0x2806    CMP	R0, #6
0x2EC4	0xD0E8    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62
0x2EC6	0x2807    CMP	R0, #7
0x2EC8	0xD0E9    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63
0x2ECA	0x2808    CMP	R0, #8
0x2ECC	0xD0EA    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64
; port end address is: 0 (R0)
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55:
;__Lib_GPIO_32F4xx.c, 211 :: 		
0x2ECE	0x2201    MOVS	R2, #1
0x2ED0	0xB212    SXTH	R2, R2
0x2ED2	0xFA02F20C  LSL	R2, R2, R12
0x2ED6	0xF8AD2004  STRH	R2, [SP, #4]
; configs end address is: 4 (R1)
0x2EDA	0x9802    LDR	R0, [SP, #8]
0x2EDC	0x460A    MOV	R2, R1
0x2EDE	0xF8BD1004  LDRH	R1, [SP, #4]
0x2EE2	0xF006F8D1  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 213 :: 		
0x2EE6	0x9A02    LDR	R2, [SP, #8]
0x2EE8	0xF2020120  ADDW	R1, R2, #32
; tmp_ptr start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x2EEC	0xF1BC0F07  CMP	R12, #7
0x2EF0	0xD908    BLS	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90
;__Lib_GPIO_32F4xx.c, 215 :: 		
0x2EF2	0x1D0A    ADDS	R2, R1, #4
; tmp_ptr end address is: 4 (R1)
; tmp_ptr start address is: 0 (R0)
0x2EF4	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 216 :: 		
0x2EF6	0xF1AC0208  SUB	R2, R12, #8
; pin end address is: 48 (R12)
; pin start address is: 4 (R1)
0x2EFA	0x4611    MOV	R1, R2
; tmp_ptr end address is: 0 (R0)
; pin end address is: 4 (R1)
0x2EFC	0x9101    STR	R1, [SP, #4]
0x2EFE	0x4601    MOV	R1, R0
0x2F00	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 217 :: 		
0x2F02	0xE000    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90:
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x2F04	0x4660    MOV	R0, R12
;__Lib_GPIO_32F4xx.c, 217 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65:
;__Lib_GPIO_32F4xx.c, 218 :: 		
; pin start address is: 0 (R0)
; tmp_ptr start address is: 4 (R1)
0x2F06	0x0083    LSLS	R3, R0, #2
0x2F08	0xF04F020F  MOV	R2, #15
0x2F0C	0x409A    LSLS	R2, R3
0x2F0E	0x43D3    MVN	R3, R2
0x2F10	0x680A    LDR	R2, [R1, #0]
0x2F12	0x401A    ANDS	R2, R3
0x2F14	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 219 :: 		
0x2F16	0x0082    LSLS	R2, R0, #2
; pin end address is: 0 (R0)
0x2F18	0xFA0BF302  LSL	R3, R11, R2
; af end address is: 44 (R11)
0x2F1C	0x680A    LDR	R2, [R1, #0]
0x2F1E	0x431A    ORRS	R2, R3
0x2F20	0x600A    STR	R2, [R1, #0]
; tmp_ptr end address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 220 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x2F22	0xF8DDE000  LDR	LR, [SP, #0]
0x2F26	0xB003    ADD	SP, SP, #12
0x2F28	0x4770    BX	LR
0x2F2A	0xBF00    NOP
0x2F2C	0x00004002  	#1073872896
0x2F30	0x04004002  	#1073873920
0x2F34	0x08004002  	#1073874944
0x2F38	0x0C004002  	#1073875968
0x2F3C	0x10004002  	#1073876992
0x2F40	0x14004002  	#1073878016
0x2F44	0x18004002  	#1073879040
0x2F48	0x1C004002  	#1073880064
0x2F4C	0x20004002  	#1073881088
; end of __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
_RCC_GetClocksFrequency:
;__Lib_System_4XX.c, 341 :: 		
; RCC_Clocks start address is: 0 (R0)
0x6788	0xB082    SUB	SP, SP, #8
0x678A	0xF8CDE000  STR	LR, [SP, #0]
0x678E	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_4XX.c, 343 :: 		
;__Lib_System_4XX.c, 345 :: 		
0x6790	0x4619    MOV	R1, R3
0x6792	0x9101    STR	R1, [SP, #4]
0x6794	0xF7FCFCBC  BL	_Get_Fosc_kHz+0
0x6798	0xF24031E8  MOVW	R1, #1000
0x679C	0xFB00F201  MUL	R2, R0, R1
0x67A0	0x9901    LDR	R1, [SP, #4]
0x67A2	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 348 :: 		
0x67A4	0x4917    LDR	R1, [PC, #92]
0x67A6	0x6809    LDR	R1, [R1, #0]
0x67A8	0xF00101F0  AND	R1, R1, #240
;__Lib_System_4XX.c, 349 :: 		
0x67AC	0x090A    LSRS	R2, R1, #4
;__Lib_System_4XX.c, 350 :: 		
0x67AE	0x4916    LDR	R1, [PC, #88]
0x67B0	0x1889    ADDS	R1, R1, R2
0x67B2	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x67B4	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 352 :: 		
0x67B6	0x1D1A    ADDS	R2, R3, #4
0x67B8	0x6819    LDR	R1, [R3, #0]
0x67BA	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x67BC	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 355 :: 		
0x67BE	0x4911    LDR	R1, [PC, #68]
0x67C0	0x6809    LDR	R1, [R1, #0]
0x67C2	0xF40151E0  AND	R1, R1, #7168
;__Lib_System_4XX.c, 356 :: 		
0x67C6	0x0A8A    LSRS	R2, R1, #10
;__Lib_System_4XX.c, 357 :: 		
0x67C8	0x490F    LDR	R1, [PC, #60]
0x67CA	0x1889    ADDS	R1, R1, R2
0x67CC	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x67CE	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 359 :: 		
0x67D0	0xF2030208  ADDW	R2, R3, #8
0x67D4	0x1D19    ADDS	R1, R3, #4
0x67D6	0x6809    LDR	R1, [R1, #0]
0x67D8	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x67DA	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 362 :: 		
0x67DC	0x4909    LDR	R1, [PC, #36]
0x67DE	0x6809    LDR	R1, [R1, #0]
0x67E0	0xF4014160  AND	R1, R1, #57344
;__Lib_System_4XX.c, 363 :: 		
0x67E4	0x0B4A    LSRS	R2, R1, #13
;__Lib_System_4XX.c, 364 :: 		
0x67E6	0x4908    LDR	R1, [PC, #32]
0x67E8	0x1889    ADDS	R1, R1, R2
0x67EA	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x67EC	0xB2C8    UXTB	R0, R1
;__Lib_System_4XX.c, 366 :: 		
0x67EE	0xF203020C  ADDW	R2, R3, #12
0x67F2	0x1D19    ADDS	R1, R3, #4
; RCC_Clocks end address is: 12 (R3)
0x67F4	0x6809    LDR	R1, [R1, #0]
0x67F6	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x67F8	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 367 :: 		
L_end_RCC_GetClocksFrequency:
0x67FA	0xF8DDE000  LDR	LR, [SP, #0]
0x67FE	0xB002    ADD	SP, SP, #8
0x6800	0x4770    BX	LR
0x6802	0xBF00    NOP
0x6804	0x38084002  	RCC_CFGR+0
0x6808	0x03312000  	__Lib_System_4XX_APBAHBPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x3110	0x4801    LDR	R0, [PC, #4]
0x3112	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x3114	0x4770    BX	LR
0x3116	0xBF00    NOP
0x3118	0x27A42000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_TFT_Set_Default_Mode:
;__Lib_TFT.c, 4284 :: 		
0xCFA0	0xB081    SUB	SP, SP, #4
;__Lib_TFT.c, 4285 :: 		
0xCFA2	0x2100    MOVS	R1, #0
0xCFA4	0x4804    LDR	R0, [PC, #16]
0xCFA6	0x8001    STRH	R1, [R0, #0]
;__Lib_TFT.c, 4286 :: 		
0xCFA8	0x2100    MOVS	R1, #0
0xCFAA	0x4804    LDR	R0, [PC, #16]
0xCFAC	0x7001    STRB	R1, [R0, #0]
;__Lib_TFT.c, 4287 :: 		
0xCFAE	0x2100    MOVS	R1, #0
0xCFB0	0x4803    LDR	R0, [PC, #12]
0xCFB2	0x7001    STRB	R1, [R0, #0]
;__Lib_TFT.c, 4288 :: 		
L_end_TFT_Set_Default_Mode:
0xCFB4	0xB001    ADD	SP, SP, #4
0xCFB6	0x4770    BX	LR
0xCFB8	0x03422000  	__Lib_TFT_Ptr_Set+0
0xCFBC	0x03442000  	__Lib_TFT___no_acceleration+0
0xCFC0	0x03412000  	__Lib_TFT___MM_plus+0
; end of _TFT_Set_Default_Mode
_TFT_Set_MM_Plus:
;__Lib_TFT.c, 150 :: 		
0xCFF4	0xB081    SUB	SP, SP, #4
;__Lib_TFT.c, 151 :: 		
0xCFF6	0x2101    MOVS	R1, #1
0xCFF8	0x4801    LDR	R0, [PC, #4]
0xCFFA	0x7001    STRB	R1, [R0, #0]
;__Lib_TFT.c, 152 :: 		
L_end_TFT_Set_MM_Plus:
0xCFFC	0xB001    ADD	SP, SP, #4
0xCFFE	0x4770    BX	LR
0xD000	0x03412000  	__Lib_TFT___MM_plus+0
; end of _TFT_Set_MM_Plus
_STMPE610_SetDefaultMode:
;__Lib_STMPE610.c, 880 :: 		
0xCFC4	0xB081    SUB	SP, SP, #4
;__Lib_STMPE610.c, 881 :: 		
0xCFC6	0x2100    MOVS	R1, #0
0xCFC8	0x4806    LDR	R0, [PC, #24]
0xCFCA	0x7001    STRB	R1, [R0, #0]
;__Lib_STMPE610.c, 882 :: 		
0xCFCC	0x2100    MOVS	R1, #0
0xCFCE	0x4806    LDR	R0, [PC, #24]
0xCFD0	0x7001    STRB	R1, [R0, #0]
;__Lib_STMPE610.c, 883 :: 		
0xCFD2	0x2100    MOVS	R1, #0
0xCFD4	0x4805    LDR	R0, [PC, #20]
0xCFD6	0x7001    STRB	R1, [R0, #0]
;__Lib_STMPE610.c, 884 :: 		
0xCFD8	0x212D    MOVS	R1, #45
0xCFDA	0x4805    LDR	R0, [PC, #20]
0xCFDC	0x7001    STRB	R1, [R0, #0]
;__Lib_STMPE610.c, 885 :: 		
L_end_STMPE610_SetDefaultMode:
0xCFDE	0xB001    ADD	SP, SP, #4
0xCFE0	0x4770    BX	LR
0xCFE2	0xBF00    NOP
0xCFE4	0x2DBC2000  	__Lib_STMPE610_TPOrientation+4
0xCFE8	0x2DBE2000  	__Lib_STMPE610_TPOrientation+6
0xCFEC	0x03302000  	__Lib_STMPE610_pressed+0
0xCFF0	0x2D592000  	__Lib_STMPE610_STMPE610_PRESSURE_THRESHOLD+0
; end of _STMPE610_SetDefaultMode
_Init_Ext_Mem:
;Ducati_logger_driver.c, 4649 :: 		void Init_Ext_Mem() {
0xEAE8	0xB081    SUB	SP, SP, #4
0xEAEA	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_driver.c, 4651 :: 		SDIO_Reset();
0xEAEE	0xF7FEFA27  BL	_SDIO_Reset+0
;Ducati_logger_driver.c, 4654 :: 		| _SDIO_CFG_CLOCK_RISING_EDGE | _SDIO_CFG_HW_FLOW_DISABLE, 125, &_GPIO_MODULE_SDIO_D0_D3);
0xEAF2	0x4A1D    LDR	R2, [PC, #116]
0xEAF4	0x217D    MOVS	R1, #125
0xEAF6	0xF6400000  MOVW	R0, #2048
0xEAFA	0xF7FEF971  BL	_SDIO_Init+0
;Ducati_logger_driver.c, 4657 :: 		GPIOD_PUPDRbits.PUPDR2 = 1;
0xEAFE	0x2201    MOVS	R2, #1
0xEB00	0x491A    LDR	R1, [PC, #104]
0xEB02	0x7808    LDRB	R0, [R1, #0]
0xEB04	0xF3621005  BFI	R0, R2, #4, #2
0xEB08	0x7008    STRB	R0, [R1, #0]
;Ducati_logger_driver.c, 4658 :: 		GPIOC_PUPDRbits.PUPDR8 = 1;
0xEB0A	0x2201    MOVS	R2, #1
0xEB0C	0x4918    LDR	R1, [PC, #96]
0xEB0E	0x6808    LDR	R0, [R1, #0]
0xEB10	0xF3624011  BFI	R0, R2, #16, #2
0xEB14	0x6008    STR	R0, [R1, #0]
;Ducati_logger_driver.c, 4659 :: 		GPIOC_PUPDRbits.PUPDR9 = 1;
0xEB16	0x2201    MOVS	R2, #1
0xEB18	0x4915    LDR	R1, [PC, #84]
0xEB1A	0x6808    LDR	R0, [R1, #0]
0xEB1C	0xF3624093  BFI	R0, R2, #18, #2
0xEB20	0x6008    STR	R0, [R1, #0]
;Ducati_logger_driver.c, 4660 :: 		GPIOC_PUPDRbits.PUPDR10 = 1;
0xEB22	0x2201    MOVS	R2, #1
0xEB24	0x4912    LDR	R1, [PC, #72]
0xEB26	0x6808    LDR	R0, [R1, #0]
0xEB28	0xF3625015  BFI	R0, R2, #20, #2
0xEB2C	0x6008    STR	R0, [R1, #0]
;Ducati_logger_driver.c, 4661 :: 		GPIOC_PUPDRbits.PUPDR11 = 1;
0xEB2E	0x2201    MOVS	R2, #1
0xEB30	0x490F    LDR	R1, [PC, #60]
0xEB32	0x6808    LDR	R0, [R1, #0]
0xEB34	0xF3625097  BFI	R0, R2, #22, #2
0xEB38	0x6008    STR	R0, [R1, #0]
;Ducati_logger_driver.c, 4663 :: 		Mmc_Set_Interface(_MMC_INTERFACE_SDIO);
0xEB3A	0x2001    MOVS	R0, #1
0xEB3C	0xF7FEF8C4  BL	_Mmc_Set_Interface+0
;Ducati_logger_driver.c, 4666 :: 		if (!Mmc_Fat_Init()) {
0xEB40	0xF7FEF978  BL	_Mmc_Fat_Init+0
0xEB44	0xB960    CBNZ	R0, L_Init_Ext_Mem254
;Ducati_logger_driver.c, 4669 :: 		| _SDIO_CFG_CLOCK_RISING_EDGE | _SDIO_CFG_HW_FLOW_DISABLE, 1, &_GPIO_MODULE_SDIO_D0_D3);
0xEB46	0x4A08    LDR	R2, [PC, #32]
0xEB48	0x2101    MOVS	R1, #1
0xEB4A	0xF6400000  MOVW	R0, #2048
0xEB4E	0xF7FEF947  BL	_SDIO_Init+0
;Ducati_logger_driver.c, 4672 :: 		Mmc_Fat_Assign("Ducati_l.RES", 0);
0xEB52	0x4808    LDR	R0, [PC, #32]
0xEB54	0x2100    MOVS	R1, #0
0xEB56	0xF7FEF9AD  BL	_Mmc_Fat_Assign+0
;Ducati_logger_driver.c, 4673 :: 		Mmc_Fat_Reset(&res_file_size);
0xEB5A	0x4807    LDR	R0, [PC, #28]
0xEB5C	0xF7FEF988  BL	_Mmc_Fat_Reset+0
;Ducati_logger_driver.c, 4674 :: 		}
L_Init_Ext_Mem254:
;Ducati_logger_driver.c, 4675 :: 		}
L_end_Init_Ext_Mem:
0xEB60	0xF8DDE000  LDR	LR, [SP, #0]
0xEB64	0xB001    ADD	SP, SP, #4
0xEB66	0x4770    BX	LR
0xEB68	0x8A280001  	__GPIO_MODULE_SDIO_D0_D3+0
0xEB6C	0x0C0C4002  	GPIOD_PUPDRbits+0
0xEB70	0x080C4002  	GPIOC_PUPDRbits+0
0xEB74	0x00582000  	?lstr3_Ducati_logger_driver+0
0xEB78	0x228C2000  	_res_file_size+0
; end of _Init_Ext_Mem
_SDIO_Reset:
;__Lib_SDIO.c, 433 :: 		
0xCF40	0xB081    SUB	SP, SP, #4
0xCF42	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_SDIO.c, 434 :: 		
0xCF46	0x2101    MOVS	R1, #1
0xCF48	0xB249    SXTB	R1, R1
0xCF4A	0x4806    LDR	R0, [PC, #24]
0xCF4C	0x6001    STR	R1, [R0, #0]
;__Lib_SDIO.c, 437 :: 		
0xCF4E	0xF7FAFF87  BL	_Delay_1ms+0
;__Lib_SDIO.c, 439 :: 		
0xCF52	0x2100    MOVS	R1, #0
0xCF54	0xB249    SXTB	R1, R1
0xCF56	0x4803    LDR	R0, [PC, #12]
0xCF58	0x6001    STR	R1, [R0, #0]
;__Lib_SDIO.c, 440 :: 		
L_end_SDIO_Reset:
0xCF5A	0xF8DDE000  LDR	LR, [SP, #0]
0xCF5E	0xB001    ADD	SP, SP, #4
0xCF60	0x4770    BX	LR
0xCF62	0xBF00    NOP
0xCF64	0x04AC4247  	RCC_APB2RSTR+0
; end of _SDIO_Reset
_Delay_1ms:
;__Lib_Delays.c, 41 :: 		void Delay_1ms() {
;__Lib_Delays.c, 42 :: 		Delay_ms(1);
0x7E60	0xF24C374E  MOVW	R7, #49998
0x7E64	0xF2C00700  MOVT	R7, #0
L_Delay_1ms14:
0x7E68	0x1E7F    SUBS	R7, R7, #1
0x7E6A	0xD1FD    BNE	L_Delay_1ms14
0x7E6C	0xBF00    NOP
0x7E6E	0xBF00    NOP
0x7E70	0xBF00    NOP
0x7E72	0xBF00    NOP
0x7E74	0xBF00    NOP
;__Lib_Delays.c, 43 :: 		}
L_end_Delay_1ms:
0x7E76	0x4770    BX	LR
; end of _Delay_1ms
_SDIO_Init:
;__Lib_SDIO.c, 454 :: 		
; module start address is: 8 (R2)
0xCDE0	0xB083    SUB	SP, SP, #12
0xCDE2	0xF8CDE000  STR	LR, [SP, #0]
0xCDE6	0x9001    STR	R0, [SP, #4]
0xCDE8	0xF88D1008  STRB	R1, [SP, #8]
; module end address is: 8 (R2)
; module start address is: 8 (R2)
;__Lib_SDIO.c, 455 :: 		
;__Lib_SDIO.c, 459 :: 		
0xCDEC	0x2401    MOVS	R4, #1
0xCDEE	0xB264    SXTB	R4, R4
0xCDF0	0x4B0C    LDR	R3, [PC, #48]
0xCDF2	0x601C    STR	R4, [R3, #0]
;__Lib_SDIO.c, 468 :: 		
0xCDF4	0x4B0C    LDR	R3, [PC, #48]
0xCDF6	0x781B    LDRB	R3, [R3, #0]
0xCDF8	0xB92B    CBNZ	R3, L_SDIO_Init0
;__Lib_SDIO.c, 469 :: 		
0xCDFA	0x4610    MOV	R0, R2
; module end address is: 8 (R2)
0xCDFC	0xF7F9FD06  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_SDIO.c, 470 :: 		
0xCE00	0x2401    MOVS	R4, #1
0xCE02	0x4B09    LDR	R3, [PC, #36]
0xCE04	0x701C    STRB	R4, [R3, #0]
;__Lib_SDIO.c, 471 :: 		
L_SDIO_Init0:
;__Lib_SDIO.c, 476 :: 		
0xCE06	0x4B09    LDR	R3, [PC, #36]
; tmpreg start address is: 0 (R0)
0xCE08	0x6818    LDR	R0, [R3, #0]
;__Lib_SDIO.c, 479 :: 		
0xCE0A	0x4B09    LDR	R3, [PC, #36]
0xCE0C	0x4018    ANDS	R0, R3
;__Lib_SDIO.c, 480 :: 		
0xCE0E	0xF89D4008  LDRB	R4, [SP, #8]
0xCE12	0x9B01    LDR	R3, [SP, #4]
0xCE14	0x4323    ORRS	R3, R4
0xCE16	0x4318    ORRS	R0, R3
;__Lib_SDIO.c, 483 :: 		
0xCE18	0x4B04    LDR	R3, [PC, #16]
0xCE1A	0x6018    STR	R0, [R3, #0]
; tmpreg end address is: 0 (R0)
;__Lib_SDIO.c, 484 :: 		
L_end_SDIO_Init:
0xCE1C	0xF8DDE000  LDR	LR, [SP, #0]
0xCE20	0xB003    ADD	SP, SP, #12
0xCE22	0x4770    BX	LR
0xCE24	0x08AC4247  	RCC_APB2ENR+0
0xCE28	0x03492000  	SDIO_Init_firstCall_mark_L0+0
0xCE2C	0x2C044001  	SDIO_CLKCR+0
0xCE30	0x8100FFFF  	#-32512
; end of _SDIO_Init
_Mmc_Set_Interface:
;__Lib_Mmc_SDIO.c, 148 :: 		
; interface start address is: 0 (R0)
0xCCC8	0xB081    SUB	SP, SP, #4
; interface end address is: 0 (R0)
; interface start address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 149 :: 		
0xCCCA	0x2800    CMP	R0, #0
0xCCCC	0xD121    BNE	L_Mmc_Set_Interface0
; interface end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 150 :: 		
0xCCCE	0x4A23    LDR	R2, [PC, #140]
0xCCD0	0x4923    LDR	R1, [PC, #140]
0xCCD2	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 151 :: 		
0xCCD4	0x4A23    LDR	R2, [PC, #140]
0xCCD6	0x4924    LDR	R1, [PC, #144]
0xCCD8	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 152 :: 		
0xCCDA	0x4A24    LDR	R2, [PC, #144]
0xCCDC	0x4924    LDR	R1, [PC, #144]
0xCCDE	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 153 :: 		
0xCCE0	0x4A24    LDR	R2, [PC, #144]
0xCCE2	0x4925    LDR	R1, [PC, #148]
0xCCE4	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 154 :: 		
0xCCE6	0x4A25    LDR	R2, [PC, #148]
0xCCE8	0x4925    LDR	R1, [PC, #148]
0xCCEA	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 155 :: 		
0xCCEC	0x4A25    LDR	R2, [PC, #148]
0xCCEE	0x4926    LDR	R1, [PC, #152]
0xCCF0	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 156 :: 		
0xCCF2	0x4A26    LDR	R2, [PC, #152]
0xCCF4	0x4926    LDR	R1, [PC, #152]
0xCCF6	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 157 :: 		
0xCCF8	0x4A26    LDR	R2, [PC, #152]
0xCCFA	0x4927    LDR	R1, [PC, #156]
0xCCFC	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 158 :: 		
0xCCFE	0x4A27    LDR	R2, [PC, #156]
0xCD00	0x4927    LDR	R1, [PC, #156]
0xCD02	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 159 :: 		
0xCD04	0x4A27    LDR	R2, [PC, #156]
0xCD06	0x4928    LDR	R1, [PC, #160]
0xCD08	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 160 :: 		
0xCD0A	0x4A28    LDR	R2, [PC, #160]
0xCD0C	0x4928    LDR	R1, [PC, #160]
0xCD0E	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 161 :: 		
0xCD10	0xE022    B	L_Mmc_Set_Interface1
L_Mmc_Set_Interface0:
;__Lib_Mmc_SDIO.c, 162 :: 		
; interface start address is: 0 (R0)
0xCD12	0x2801    CMP	R0, #1
0xCD14	0xD120    BNE	L_Mmc_Set_Interface2
; interface end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 163 :: 		
0xCD16	0x4A27    LDR	R2, [PC, #156]
0xCD18	0x4911    LDR	R1, [PC, #68]
0xCD1A	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 164 :: 		
0xCD1C	0x4A26    LDR	R2, [PC, #152]
0xCD1E	0x4912    LDR	R1, [PC, #72]
0xCD20	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 165 :: 		
0xCD22	0x4A26    LDR	R2, [PC, #152]
0xCD24	0x4912    LDR	R1, [PC, #72]
0xCD26	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 166 :: 		
0xCD28	0x4A25    LDR	R2, [PC, #148]
0xCD2A	0x4913    LDR	R1, [PC, #76]
0xCD2C	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 167 :: 		
0xCD2E	0x4A25    LDR	R2, [PC, #148]
0xCD30	0x4913    LDR	R1, [PC, #76]
0xCD32	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 168 :: 		
0xCD34	0x4A24    LDR	R2, [PC, #144]
0xCD36	0x4914    LDR	R1, [PC, #80]
0xCD38	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 169 :: 		
0xCD3A	0x4A24    LDR	R2, [PC, #144]
0xCD3C	0x4914    LDR	R1, [PC, #80]
0xCD3E	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 170 :: 		
0xCD40	0x4A23    LDR	R2, [PC, #140]
0xCD42	0x4915    LDR	R1, [PC, #84]
0xCD44	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 171 :: 		
0xCD46	0x4A23    LDR	R2, [PC, #140]
0xCD48	0x4915    LDR	R1, [PC, #84]
0xCD4A	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 172 :: 		
0xCD4C	0x4A22    LDR	R2, [PC, #136]
0xCD4E	0x4916    LDR	R1, [PC, #88]
0xCD50	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 173 :: 		
0xCD52	0x4A22    LDR	R2, [PC, #136]
0xCD54	0x4916    LDR	R1, [PC, #88]
0xCD56	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 174 :: 		
L_Mmc_Set_Interface2:
L_Mmc_Set_Interface1:
;__Lib_Mmc_SDIO.c, 175 :: 		
L_end_Mmc_Set_Interface:
0xCD58	0xB001    ADD	SP, SP, #4
0xCD5A	0x4770    BX	LR
0xCD5C	0x5D110000  	__Lib_Mmc_SDIO_Mmc_Init_SPI+0
0xCD60	0x02F82000  	__Lib_Mmc_SDIO_Mmc_Init_Ptr+0
0xCD64	0x1EA10000  	__Lib_Mmc_SDIO_Mmc_Read_Sector_SPI+0
0xCD68	0x02FC2000  	__Lib_Mmc_SDIO_Mmc_Read_Sector_Ptr+0
0xCD6C	0x21490000  	__Lib_Mmc_SDIO_Mmc_Write_Sector_SPI+0
0xCD70	0x03002000  	__Lib_Mmc_SDIO_Mmc_Write_Sector_Ptr+0
0xCD74	0x1B5D0000  	__Lib_Mmc_SDIO_Mmc_Read_Cid_SPI+0
0xCD78	0x03042000  	__Lib_Mmc_SDIO_Mmc_Read_Cid_Ptr+0
0xCD7C	0x1BD90000  	__Lib_Mmc_SDIO_Mmc_Read_Csd_SPI+0
0xCD80	0x03082000  	__Lib_Mmc_SDIO_Mmc_Read_Csd_Ptr+0
0xCD84	0x0D210000  	__Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SPI+0
0xCD88	0x030C2000  	__Lib_Mmc_SDIO_Mmc_Multi_Read_Start_Ptr+0
0xCD8C	0x197D0000  	__Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SPI+0
0xCD90	0x03102000  	__Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_Ptr+0
0xCD94	0x5E490000  	__Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI+0
0xCD98	0x03142000  	__Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_Ptr+0
0xCD9C	0x192D0000  	__Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SPI+0
0xCDA0	0x03182000  	__Lib_Mmc_SDIO_Mmc_Multi_Write_Start_Ptr+0
0xCDA4	0x1D9D0000  	__Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI+0
0xCDA8	0x031C2000  	__Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_Ptr+0
0xCDAC	0x5E190000  	__Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SPI+0
0xCDB0	0x03202000  	__Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_Ptr+0
0xCDB4	0x5B690000  	__Lib_Mmc_SDIO_Mmc_Init_SDIO+0
0xCDB8	0x1F310000  	__Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO+0
0xCDBC	0x27210000  	__Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO+0
0xCDC0	0x1E210000  	__Lib_Mmc_SDIO_Mmc_Read_Cid_SDIO+0
0xCDC4	0x1E610000  	__Lib_Mmc_SDIO_Mmc_Read_Csd_SDIO+0
0xCDC8	0x17D10000  	__Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO+0
0xCDCC	0x1C550000  	__Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO+0
0xCDD0	0x5AE10000  	__Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SDIO+0
0xCDD4	0x19D50000  	__Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO+0
0xCDD8	0x0E950000  	__Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO+0
0xCDDC	0x5BD10000  	__Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO+0
; end of _Mmc_Set_Interface
_Mmc_Fat_Init:
;__Lib_MmcFat16.c, 2134 :: 		
0xCE34	0xB082    SUB	SP, SP, #8
0xCE36	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MmcFat16.c, 2136 :: 		
; rslt start address is: 8 (R2)
0xCE3A	0x2200    MOVS	R2, #0
; rslt end address is: 8 (R2)
;__Lib_MmcFat16.c, 2139 :: 		
L_Mmc_Fat_Init326:
;__Lib_MmcFat16.c, 2141 :: 		
; rslt start address is: 8 (R2)
0xCE3C	0xF88D2004  STRB	R2, [SP, #4]
0xCE40	0xF7FAFFB8  BL	_Mmc_Init+0
0xCE44	0xF89D2004  LDRB	R2, [SP, #4]
;__Lib_MmcFat16.c, 2142 :: 		
0xCE48	0x1C52    ADDS	R2, R2, #1
0xCE4A	0xB2D2    UXTB	R2, R2
;__Lib_MmcFat16.c, 2144 :: 		
0xCE4C	0xB2C0    UXTB	R0, R0
0xCE4E	0xB110    CBZ	R0, L__Mmc_Fat_Init461
0xCE50	0x2A32    CMP	R2, #50
0xCE52	0xD200    BCS	L__Mmc_Fat_Init460
0xCE54	0xE7F2    B	L_Mmc_Fat_Init326
L__Mmc_Fat_Init461:
L__Mmc_Fat_Init460:
;__Lib_MmcFat16.c, 2146 :: 		
0xCE56	0x2A32    CMP	R2, #50
0xCE58	0xD301    BCC	L_Mmc_Fat_Init331
; rslt end address is: 8 (R2)
;__Lib_MmcFat16.c, 2147 :: 		
0xCE5A	0x20FF    MOVS	R0, #255
0xCE5C	0xE003    B	L_end_Mmc_Fat_Init
L_Mmc_Fat_Init331:
;__Lib_MmcFat16.c, 2148 :: 		
0xCE5E	0xF7FCFF71  BL	_Mmc_Init_Vars+0
;__Lib_MmcFat16.c, 2151 :: 		
0xCE62	0xF7FDF8D5  BL	__Lib_MmcFat16_Mmc_Fat_Get_Info+0
;__Lib_MmcFat16.c, 2152 :: 		
;__Lib_MmcFat16.c, 2153 :: 		
L_end_Mmc_Fat_Init:
0xCE66	0xF8DDE000  LDR	LR, [SP, #0]
0xCE6A	0xB002    ADD	SP, SP, #8
0xCE6C	0x4770    BX	LR
; end of _Mmc_Fat_Init
_Mmc_Init:
;__Lib_Mmc_SDIO.c, 100 :: 		
0x7DB4	0xB081    SUB	SP, SP, #4
0x7DB6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 101 :: 		
0x7DBA	0x4C03    LDR	R4, [PC, #12]
0x7DBC	0x6824    LDR	R4, [R4, #0]
0x7DBE	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 102 :: 		
L_end_Mmc_Init:
0x7DC0	0xF8DDE000  LDR	LR, [SP, #0]
0x7DC4	0xB001    ADD	SP, SP, #4
0x7DC6	0x4770    BX	LR
0x7DC8	0x02F82000  	__Lib_Mmc_SDIO_Mmc_Init_Ptr+0
; end of _Mmc_Init
_I2C1_Start:
;__Lib_I2C_123.c, 297 :: 		
0x686C	0xB081    SUB	SP, SP, #4
0x686E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_123.c, 298 :: 		
0x6872	0x4803    LDR	R0, [PC, #12]
0x6874	0xF7FCFC6A  BL	_I2Cx_Start+0
;__Lib_I2C_123.c, 299 :: 		
L_end_I2C1_Start:
0x6878	0xF8DDE000  LDR	LR, [SP, #0]
0x687C	0xB001    ADD	SP, SP, #4
0x687E	0x4770    BX	LR
0x6880	0x54004000  	I2C1_CR1+0
; end of _I2C1_Start
_I2Cx_Start:
;__Lib_I2C_123.c, 157 :: 		
; I2C_BASE start address is: 0 (R0)
0x314C	0xB081    SUB	SP, SP, #4
0x314E	0xF8CDE000  STR	LR, [SP, #0]
0x3152	0x4604    MOV	R4, R0
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 16 (R4)
;__Lib_I2C_123.c, 158 :: 		
0x3154	0x4620    MOV	R0, R4
0x3156	0xF7FEFE13  BL	__Lib_I2C_123_I2Cx_Wait_For_Idle+0
;__Lib_I2C_123.c, 161 :: 		
0x315A	0x2201    MOVS	R2, #1
0x315C	0x6821    LDR	R1, [R4, #0]
0x315E	0xF3622108  BFI	R1, R2, #8, #1
0x3162	0x6021    STR	R1, [R4, #0]
;__Lib_I2C_123.c, 163 :: 		
0x3164	0xF2040114  ADDW	R1, R4, #20
0x3168	0x680A    LDR	R2, [R1, #0]
0x316A	0xF3C22140  UBFX	R1, R2, #9, #1
0x316E	0xB111    CBZ	R1, L_I2Cx_Start2
; I2C_BASE end address is: 16 (R4)
;__Lib_I2C_123.c, 164 :: 		
0x3170	0xF64F70FF  MOVW	R0, #65535
0x3174	0xE006    B	L_end_I2Cx_Start
;__Lib_I2C_123.c, 165 :: 		
L_I2Cx_Start2:
;__Lib_I2C_123.c, 166 :: 		
; I2C_BASE start address is: 16 (R4)
L_I2Cx_Start3:
; I2C_BASE end address is: 16 (R4)
; I2C_BASE start address is: 16 (R4)
0x3176	0x4905    LDR	R1, [PC, #20]
0x3178	0x4620    MOV	R0, R4
0x317A	0xF7FEFDEF  BL	_ChekXForEvent+0
0x317E	0xB900    CBNZ	R0, L_I2Cx_Start4
;__Lib_I2C_123.c, 167 :: 		
; I2C_BASE end address is: 16 (R4)
0x3180	0xE7F9    B	L_I2Cx_Start3
L_I2Cx_Start4:
;__Lib_I2C_123.c, 168 :: 		
0x3182	0x2000    MOVS	R0, #0
;__Lib_I2C_123.c, 169 :: 		
L_end_I2Cx_Start:
0x3184	0xF8DDE000  LDR	LR, [SP, #0]
0x3188	0xB001    ADD	SP, SP, #4
0x318A	0x4770    BX	LR
0x318C	0x00010003  	#196609
; end of _I2Cx_Start
__Lib_I2C_123_I2Cx_Wait_For_Idle:
;__Lib_I2C_123.c, 147 :: 		
; I2C_BASE start address is: 0 (R0)
0x1D80	0xB081    SUB	SP, SP, #4
0x1D82	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
0x1D86	0x4603    MOV	R3, R0
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_123.c, 148 :: 		
L___Lib_I2C_123_I2Cx_Wait_For_Idle0:
; I2C_BASE start address is: 12 (R3)
0x1D88	0x4618    MOV	R0, R3
0x1D8A	0xF7FEFB93  BL	_I2Cx_Is_Idle+0
0x1D8E	0xB900    CBNZ	R0, L___Lib_I2C_123_I2Cx_Wait_For_Idle1
;__Lib_I2C_123.c, 149 :: 		
; I2C_BASE end address is: 12 (R3)
0x1D90	0xE7FA    B	L___Lib_I2C_123_I2Cx_Wait_For_Idle0
L___Lib_I2C_123_I2Cx_Wait_For_Idle1:
;__Lib_I2C_123.c, 150 :: 		
L_end_I2Cx_Wait_For_Idle:
0x1D92	0xF8DDE000  LDR	LR, [SP, #0]
0x1D96	0xB001    ADD	SP, SP, #4
0x1D98	0x4770    BX	LR
; end of __Lib_I2C_123_I2Cx_Wait_For_Idle
_I2Cx_Is_Idle:
;__Lib_I2C_123.c, 142 :: 		
; I2C_BASE start address is: 0 (R0)
0x04B4	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_123.c, 143 :: 		
0x04B6	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x04BA	0x680A    LDR	R2, [R1, #0]
0x04BC	0xF3C20140  UBFX	R1, R2, #1, #1
0x04C0	0xF0810101  EOR	R1, R1, #1
0x04C4	0xB2C9    UXTB	R1, R1
0x04C6	0xB2C8    UXTB	R0, R1
;__Lib_I2C_123.c, 144 :: 		
L_end_I2Cx_Is_Idle:
0x04C8	0xB001    ADD	SP, SP, #4
0x04CA	0x4770    BX	LR
; end of _I2Cx_Is_Idle
_ChekXForEvent:
;__Lib_I2C_123.c, 152 :: 		
; Event start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x1D5C	0xB081    SUB	SP, SP, #4
0x1D5E	0xF8CDE000  STR	LR, [SP, #0]
0x1D62	0x460B    MOV	R3, R1
; Event end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; Event start address is: 12 (R3)
;__Lib_I2C_123.c, 153 :: 		
; I2C_BASE end address is: 0 (R0)
0x1D64	0xF7FEFC78  BL	_I2Cx_Get_Status+0
0x1D68	0xEA000203  AND	R2, R0, R3, LSL #0
0x1D6C	0x429A    CMP	R2, R3
0x1D6E	0xF2400200  MOVW	R2, #0
0x1D72	0xD100    BNE	L__ChekXForEvent82
0x1D74	0x2201    MOVS	R2, #1
L__ChekXForEvent82:
; Event end address is: 12 (R3)
0x1D76	0xB2D0    UXTB	R0, R2
;__Lib_I2C_123.c, 154 :: 		
L_end_ChekXForEvent:
0x1D78	0xF8DDE000  LDR	LR, [SP, #0]
0x1D7C	0xB001    ADD	SP, SP, #4
0x1D7E	0x4770    BX	LR
; end of _ChekXForEvent
_I2Cx_Get_Status:
;__Lib_I2C_123.c, 129 :: 		
; I2C_BASE start address is: 0 (R0)
0x0658	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_123.c, 132 :: 		
0x065A	0xF2000114  ADDW	R1, R0, #20
0x065E	0x680A    LDR	R2, [R1, #0]
;__Lib_I2C_123.c, 133 :: 		
0x0660	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x0664	0x6809    LDR	R1, [R1, #0]
;__Lib_I2C_123.c, 135 :: 		
0x0666	0x0409    LSLS	R1, R1, #16
0x0668	0xEA420101  ORR	R1, R2, R1, LSL #0
0x066C	0x4608    MOV	R0, R1
;__Lib_I2C_123.c, 136 :: 		
L_end_I2Cx_Get_Status:
0x066E	0xB001    ADD	SP, SP, #4
0x0670	0x4770    BX	LR
; end of _I2Cx_Get_Status
_I2C2_Start:
;__Lib_I2C_123.c, 327 :: 		
0x6854	0xB081    SUB	SP, SP, #4
0x6856	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_123.c, 328 :: 		
0x685A	0x4803    LDR	R0, [PC, #12]
0x685C	0xF7FCFC76  BL	_I2Cx_Start+0
;__Lib_I2C_123.c, 329 :: 		
L_end_I2C2_Start:
0x6860	0xF8DDE000  LDR	LR, [SP, #0]
0x6864	0xB001    ADD	SP, SP, #4
0x6866	0x4770    BX	LR
0x6868	0x58004000  	I2C2_CR1+0
; end of _I2C2_Start
_I2C3_Start:
;__Lib_I2C_123.c, 358 :: 		
0x6698	0xB081    SUB	SP, SP, #4
0x669A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_123.c, 359 :: 		
0x669E	0x4803    LDR	R0, [PC, #12]
0x66A0	0xF7FCFD54  BL	_I2Cx_Start+0
;__Lib_I2C_123.c, 360 :: 		
L_end_I2C3_Start:
0x66A4	0xF8DDE000  LDR	LR, [SP, #0]
0x66A8	0xB001    ADD	SP, SP, #4
0x66AA	0x4770    BX	LR
0x66AC	0x5C004000  	I2C3_CR1+0
; end of _I2C3_Start
_UART1_Read:
;__Lib_UART_123_45_6.c, 110 :: 		
0x6680	0xB081    SUB	SP, SP, #4
0x6682	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 111 :: 		
0x6686	0x4803    LDR	R0, [PC, #12]
0x6688	0xF7FCFDB4  BL	__Lib_UART_123_45_6_UARTx_Read+0
;__Lib_UART_123_45_6.c, 112 :: 		
L_end_UART1_Read:
0x668C	0xF8DDE000  LDR	LR, [SP, #0]
0x6690	0xB001    ADD	SP, SP, #4
0x6692	0x4770    BX	LR
0x6694	0x10004001  	USART1_SR+0
; end of _UART1_Read
__Lib_UART_123_45_6_UARTx_Read:
;__Lib_UART_123_45_6.c, 102 :: 		
; UART_Base start address is: 0 (R0)
0x31F4	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 104 :: 		
L___Lib_UART_123_45_6_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x31F6	0x6802    LDR	R2, [R0, #0]
0x31F8	0xF3C21140  UBFX	R1, R2, #5, #1
0x31FC	0xB901    CBNZ	R1, L___Lib_UART_123_45_6_UARTx_Read5
0x31FE	0xE7FA    B	L___Lib_UART_123_45_6_UARTx_Read4
L___Lib_UART_123_45_6_UARTx_Read5:
;__Lib_UART_123_45_6.c, 107 :: 		
0x3200	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x3202	0x6809    LDR	R1, [R1, #0]
0x3204	0xB288    UXTH	R0, R1
;__Lib_UART_123_45_6.c, 108 :: 		
L_end_UARTx_Read:
0x3206	0xB001    ADD	SP, SP, #4
0x3208	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Read
_UART1_Data_Ready:
;__Lib_UART_123_45_6.c, 140 :: 		
0x66B0	0xB081    SUB	SP, SP, #4
0x66B2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 141 :: 		
0x66B6	0x4803    LDR	R0, [PC, #12]
0x66B8	0xF7FCFD84  BL	__Lib_UART_123_45_6_UARTx_Data_Ready+0
;__Lib_UART_123_45_6.c, 142 :: 		
L_end_UART1_Data_Ready:
0x66BC	0xF8DDE000  LDR	LR, [SP, #0]
0x66C0	0xB001    ADD	SP, SP, #4
0x66C2	0x4770    BX	LR
0x66C4	0x10004001  	USART1_SR+0
; end of _UART1_Data_Ready
__Lib_UART_123_45_6_UARTx_Data_Ready:
;__Lib_UART_123_45_6.c, 135 :: 		
; UART_Base start address is: 0 (R0)
0x31C4	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 137 :: 		
0x31C6	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x31C8	0xF3C11040  UBFX	R0, R1, #5, #1
;__Lib_UART_123_45_6.c, 138 :: 		
L_end_UARTx_Data_Ready:
0x31CC	0xB001    ADD	SP, SP, #4
0x31CE	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_123_45_6.c, 227 :: 		
0x66E0	0xB081    SUB	SP, SP, #4
0x66E2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 228 :: 		
0x66E6	0x4803    LDR	R0, [PC, #12]
0x66E8	0xF7FCFC96  BL	__Lib_UART_123_45_6_UARTx_Tx_Idle+0
;__Lib_UART_123_45_6.c, 229 :: 		
L_end_UART1_Tx_Idle:
0x66EC	0xF8DDE000  LDR	LR, [SP, #0]
0x66F0	0xB001    ADD	SP, SP, #4
0x66F2	0x4770    BX	LR
0x66F4	0x10004001  	USART1_SR+0
; end of _UART1_Tx_Idle
__Lib_UART_123_45_6_UARTx_Tx_Idle:
;__Lib_UART_123_45_6.c, 223 :: 		
; UART_Base start address is: 0 (R0)
0x3018	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 224 :: 		
0x301A	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x301C	0xF3C11080  UBFX	R0, R1, #6, #1
;__Lib_UART_123_45_6.c, 225 :: 		
L_end_UARTx_Tx_Idle:
0x3020	0xB001    ADD	SP, SP, #4
0x3022	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Tx_Idle
_UART2_Read:
;__Lib_UART_123_45_6.c, 114 :: 		
0x66C8	0xB081    SUB	SP, SP, #4
0x66CA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 115 :: 		
0x66CE	0x4803    LDR	R0, [PC, #12]
0x66D0	0xF7FCFD90  BL	__Lib_UART_123_45_6_UARTx_Read+0
;__Lib_UART_123_45_6.c, 116 :: 		
L_end_UART2_Read:
0x66D4	0xF8DDE000  LDR	LR, [SP, #0]
0x66D8	0xB001    ADD	SP, SP, #4
0x66DA	0x4770    BX	LR
0x66DC	0x44004000  	USART2_SR+0
; end of _UART2_Read
_UART2_Data_Ready:
;__Lib_UART_123_45_6.c, 144 :: 		
0x6884	0xB081    SUB	SP, SP, #4
0x6886	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 145 :: 		
0x688A	0x4803    LDR	R0, [PC, #12]
0x688C	0xF7FCFC9A  BL	__Lib_UART_123_45_6_UARTx_Data_Ready+0
;__Lib_UART_123_45_6.c, 146 :: 		
L_end_UART2_Data_Ready:
0x6890	0xF8DDE000  LDR	LR, [SP, #0]
0x6894	0xB001    ADD	SP, SP, #4
0x6896	0x4770    BX	LR
0x6898	0x44004000  	USART2_SR+0
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
;__Lib_UART_123_45_6.c, 231 :: 		
0x692C	0xB081    SUB	SP, SP, #4
0x692E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 232 :: 		
0x6932	0x4803    LDR	R0, [PC, #12]
0x6934	0xF7FCFB70  BL	__Lib_UART_123_45_6_UARTx_Tx_Idle+0
;__Lib_UART_123_45_6.c, 233 :: 		
L_end_UART2_Tx_Idle:
0x6938	0xF8DDE000  LDR	LR, [SP, #0]
0x693C	0xB001    ADD	SP, SP, #4
0x693E	0x4770    BX	LR
0x6940	0x44004000  	USART2_SR+0
; end of _UART2_Tx_Idle
_UART3_Read:
;__Lib_UART_123_45_6.c, 118 :: 		
0x6914	0xB081    SUB	SP, SP, #4
0x6916	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 119 :: 		
0x691A	0x4803    LDR	R0, [PC, #12]
0x691C	0xF7FCFC6A  BL	__Lib_UART_123_45_6_UARTx_Read+0
;__Lib_UART_123_45_6.c, 120 :: 		
L_end_UART3_Read:
0x6920	0xF8DDE000  LDR	LR, [SP, #0]
0x6924	0xB001    ADD	SP, SP, #4
0x6926	0x4770    BX	LR
0x6928	0x48004000  	USART3_SR+0
; end of _UART3_Read
_UART3_Data_Ready:
;__Lib_UART_123_45_6.c, 148 :: 		
0x6944	0xB081    SUB	SP, SP, #4
0x6946	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 149 :: 		
0x694A	0x4803    LDR	R0, [PC, #12]
0x694C	0xF7FCFC3A  BL	__Lib_UART_123_45_6_UARTx_Data_Ready+0
;__Lib_UART_123_45_6.c, 150 :: 		
L_end_UART3_Data_Ready:
0x6950	0xF8DDE000  LDR	LR, [SP, #0]
0x6954	0xB001    ADD	SP, SP, #4
0x6956	0x4770    BX	LR
0x6958	0x48004000  	USART3_SR+0
; end of _UART3_Data_Ready
_UART3_Tx_Idle:
;__Lib_UART_123_45_6.c, 235 :: 		
0x6974	0xB081    SUB	SP, SP, #4
0x6976	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 236 :: 		
0x697A	0x4803    LDR	R0, [PC, #12]
0x697C	0xF7FCFB4C  BL	__Lib_UART_123_45_6_UARTx_Tx_Idle+0
;__Lib_UART_123_45_6.c, 237 :: 		
L_end_UART3_Tx_Idle:
0x6980	0xF8DDE000  LDR	LR, [SP, #0]
0x6984	0xB001    ADD	SP, SP, #4
0x6986	0x4770    BX	LR
0x6988	0x48004000  	USART3_SR+0
; end of _UART3_Tx_Idle
_UART4_Read:
;__Lib_UART_123_45_6.c, 122 :: 		
0x695C	0xB081    SUB	SP, SP, #4
0x695E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 123 :: 		
0x6962	0x4803    LDR	R0, [PC, #12]
0x6964	0xF7FCFC46  BL	__Lib_UART_123_45_6_UARTx_Read+0
;__Lib_UART_123_45_6.c, 124 :: 		
L_end_UART4_Read:
0x6968	0xF8DDE000  LDR	LR, [SP, #0]
0x696C	0xB001    ADD	SP, SP, #4
0x696E	0x4770    BX	LR
0x6970	0x4C004000  	UART4_SR+0
; end of _UART4_Read
_UART4_Data_Ready:
;__Lib_UART_123_45_6.c, 152 :: 		
0x68B4	0xB081    SUB	SP, SP, #4
0x68B6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 153 :: 		
0x68BA	0x4803    LDR	R0, [PC, #12]
0x68BC	0xF7FCFC82  BL	__Lib_UART_123_45_6_UARTx_Data_Ready+0
;__Lib_UART_123_45_6.c, 154 :: 		
L_end_UART4_Data_Ready:
0x68C0	0xF8DDE000  LDR	LR, [SP, #0]
0x68C4	0xB001    ADD	SP, SP, #4
0x68C6	0x4770    BX	LR
0x68C8	0x4C004000  	UART4_SR+0
; end of _UART4_Data_Ready
_UART4_Tx_Idle:
;__Lib_UART_123_45_6.c, 239 :: 		
0x689C	0xB081    SUB	SP, SP, #4
0x689E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 240 :: 		
0x68A2	0x4803    LDR	R0, [PC, #12]
0x68A4	0xF7FCFBB8  BL	__Lib_UART_123_45_6_UARTx_Tx_Idle+0
;__Lib_UART_123_45_6.c, 241 :: 		
L_end_UART4_Tx_Idle:
0x68A8	0xF8DDE000  LDR	LR, [SP, #0]
0x68AC	0xB001    ADD	SP, SP, #4
0x68AE	0x4770    BX	LR
0x68B0	0x4C004000  	UART4_SR+0
; end of _UART4_Tx_Idle
_UART5_Read:
;__Lib_UART_123_45_6.c, 126 :: 		
0x68CC	0xB081    SUB	SP, SP, #4
0x68CE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 127 :: 		
0x68D2	0x4803    LDR	R0, [PC, #12]
0x68D4	0xF7FCFC8E  BL	__Lib_UART_123_45_6_UARTx_Read+0
;__Lib_UART_123_45_6.c, 128 :: 		
L_end_UART5_Read:
0x68D8	0xF8DDE000  LDR	LR, [SP, #0]
0x68DC	0xB001    ADD	SP, SP, #4
0x68DE	0x4770    BX	LR
0x68E0	0x50004000  	UART5_SR+0
; end of _UART5_Read
_UART5_Data_Ready:
;__Lib_UART_123_45_6.c, 156 :: 		
0x68FC	0xB081    SUB	SP, SP, #4
0x68FE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 157 :: 		
0x6902	0x4803    LDR	R0, [PC, #12]
0x6904	0xF7FCFC5E  BL	__Lib_UART_123_45_6_UARTx_Data_Ready+0
;__Lib_UART_123_45_6.c, 158 :: 		
L_end_UART5_Data_Ready:
0x6908	0xF8DDE000  LDR	LR, [SP, #0]
0x690C	0xB001    ADD	SP, SP, #4
0x690E	0x4770    BX	LR
0x6910	0x50004000  	UART5_SR+0
; end of _UART5_Data_Ready
_UART5_Tx_Idle:
;__Lib_UART_123_45_6.c, 243 :: 		
0x68E4	0xB081    SUB	SP, SP, #4
0x68E6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 244 :: 		
0x68EA	0x4803    LDR	R0, [PC, #12]
0x68EC	0xF7FCFB94  BL	__Lib_UART_123_45_6_UARTx_Tx_Idle+0
;__Lib_UART_123_45_6.c, 245 :: 		
L_end_UART5_Tx_Idle:
0x68F0	0xF8DDE000  LDR	LR, [SP, #0]
0x68F4	0xB001    ADD	SP, SP, #4
0x68F6	0x4770    BX	LR
0x68F8	0x50004000  	UART5_SR+0
; end of _UART5_Tx_Idle
_UART6_Read:
;__Lib_UART_123_45_6.c, 130 :: 		
0x6668	0xB081    SUB	SP, SP, #4
0x666A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 131 :: 		
0x666E	0x4803    LDR	R0, [PC, #12]
0x6670	0xF7FCFDC0  BL	__Lib_UART_123_45_6_UARTx_Read+0
;__Lib_UART_123_45_6.c, 132 :: 		
L_end_UART6_Read:
0x6674	0xF8DDE000  LDR	LR, [SP, #0]
0x6678	0xB001    ADD	SP, SP, #4
0x667A	0x4770    BX	LR
0x667C	0x14004001  	USART6_SR+0
; end of _UART6_Read
_UART6_Data_Ready:
;__Lib_UART_123_45_6.c, 160 :: 		
0x5CF8	0xB081    SUB	SP, SP, #4
0x5CFA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 161 :: 		
0x5CFE	0x4803    LDR	R0, [PC, #12]
0x5D00	0xF7FDFA60  BL	__Lib_UART_123_45_6_UARTx_Data_Ready+0
;__Lib_UART_123_45_6.c, 162 :: 		
L_end_UART6_Data_Ready:
0x5D04	0xF8DDE000  LDR	LR, [SP, #0]
0x5D08	0xB001    ADD	SP, SP, #4
0x5D0A	0x4770    BX	LR
0x5D0C	0x14004001  	USART6_SR+0
; end of _UART6_Data_Ready
_UART6_Tx_Idle:
;__Lib_UART_123_45_6.c, 247 :: 		
0x5CE0	0xB081    SUB	SP, SP, #4
0x5CE2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 248 :: 		
0x5CE6	0x4803    LDR	R0, [PC, #12]
0x5CE8	0xF7FDF996  BL	__Lib_UART_123_45_6_UARTx_Tx_Idle+0
;__Lib_UART_123_45_6.c, 249 :: 		
L_end_UART6_Tx_Idle:
0x5CEC	0xF8DDE000  LDR	LR, [SP, #0]
0x5CF0	0xB001    ADD	SP, SP, #4
0x5CF2	0x4770    BX	LR
0x5CF4	0x14004001  	USART6_SR+0
; end of _UART6_Tx_Idle
__Lib_Mmc_SDIO_Mmc_Init_SPI:
;__Lib_Mmc_SDIO.c, 312 :: 		
0x5D10	0xB083    SUB	SP, SP, #12
0x5D12	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 316 :: 		
0x5D16	0x2105    MOVS	R1, #5
0x5D18	0x483C    LDR	R0, [PC, #240]
0x5D1A	0x7001    STRB	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 319 :: 		
0x5D1C	0xF6404014  MOVW	R0, #lo_addr(Mmc_Chip_Select+0)
;__Lib_Mmc_SDIO.c, 320 :: 		
0x5D20	0xF2C40002  MOVT	R0, #hi_addr(Mmc_Chip_Select+0)
;__Lib_Mmc_SDIO.c, 321 :: 		
0x5D24	0xF04F0101  MOV	R1, #1
;__Lib_Mmc_SDIO.c, 322 :: 		
0x5D28	0xEA4F01C1  LSL	R1, R1, BitPos(Mmc_Chip_Select+0)
;__Lib_Mmc_SDIO.c, 324 :: 		
0x5D2C	0x4A38    LDR	R2, [PC, #224]
0x5D2E	0xB289    UXTH	R1, R1
0x5D30	0xF003F9AA  BL	_GPIO_Config+0
;__Lib_Mmc_SDIO.c, 326 :: 		
0x5D34	0xF7FDFE66  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 329 :: 		
; cnt start address is: 4 (R1)
0x5D38	0x2100    MOVS	R1, #0
; cnt end address is: 4 (R1)
L___Lib_Mmc_SDIO_Mmc_Init_SPI22:
; cnt start address is: 4 (R1)
0x5D3A	0x290A    CMP	R1, #10
0x5D3C	0xD20A    BCS	L___Lib_Mmc_SDIO_Mmc_Init_SPI23
;__Lib_Mmc_SDIO.c, 330 :: 		
0x5D3E	0xF8AD1004  STRH	R1, [SP, #4]
0x5D42	0x20FF    MOVS	R0, #255
0x5D44	0x4C33    LDR	R4, [PC, #204]
0x5D46	0x6824    LDR	R4, [R4, #0]
0x5D48	0x47A0    BLX	R4
0x5D4A	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_Mmc_SDIO.c, 329 :: 		
0x5D4E	0x1C48    ADDS	R0, R1, #1
; cnt end address is: 4 (R1)
; cnt start address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 330 :: 		
0x5D50	0xB281    UXTH	R1, R0
; cnt end address is: 0 (R0)
0x5D52	0xE7F2    B	L___Lib_Mmc_SDIO_Mmc_Init_SPI22
L___Lib_Mmc_SDIO_Mmc_Init_SPI23:
;__Lib_Mmc_SDIO.c, 334 :: 		
0x5D54	0xF7FDFE8A  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 336 :: 		
0x5D58	0x2295    MOVS	R2, #149
0x5D5A	0x2100    MOVS	R1, #0
0x5D5C	0x2000    MOVS	R0, #0
0x5D5E	0xF7FDFC5F  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
0x5D62	0xF8AD0008  STRH	R0, [SP, #8]
;__Lib_Mmc_SDIO.c, 337 :: 		
0x5D66	0xF7FDFE4D  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 340 :: 		
0x5D6A	0xF8BD0008  LDRH	R0, [SP, #8]
0x5D6E	0x2801    CMP	R0, #1
0x5D70	0xD001    BEQ	L___Lib_Mmc_SDIO_Mmc_Init_SPI25
;__Lib_Mmc_SDIO.c, 341 :: 		
0x5D72	0x2001    MOVS	R0, #1
0x5D74	0xE046    B	L_end_Mmc_Init_SPI
L___Lib_Mmc_SDIO_Mmc_Init_SPI25:
;__Lib_Mmc_SDIO.c, 343 :: 		
0x5D76	0xF7FDFE79  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 344 :: 		
0x5D7A	0x2287    MOVS	R2, #135
0x5D7C	0xF24011AA  MOVW	R1, #426
0x5D80	0x2008    MOVS	R0, #8
0x5D82	0xF7FDFC4D  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
0x5D86	0xF8AD0008  STRH	R0, [SP, #8]
;__Lib_Mmc_SDIO.c, 346 :: 		
0x5D8A	0x20FF    MOVS	R0, #255
0x5D8C	0x4C21    LDR	R4, [PC, #132]
0x5D8E	0x6824    LDR	R4, [R4, #0]
0x5D90	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 347 :: 		
0x5D92	0x20FF    MOVS	R0, #255
0x5D94	0x4C1F    LDR	R4, [PC, #124]
0x5D96	0x6824    LDR	R4, [R4, #0]
0x5D98	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 348 :: 		
0x5D9A	0x20FF    MOVS	R0, #255
0x5D9C	0x4C1D    LDR	R4, [PC, #116]
0x5D9E	0x6824    LDR	R4, [R4, #0]
0x5DA0	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 349 :: 		
0x5DA2	0x20FF    MOVS	R0, #255
0x5DA4	0x4C1B    LDR	R4, [PC, #108]
0x5DA6	0x6824    LDR	R4, [R4, #0]
0x5DA8	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 350 :: 		
0x5DAA	0xF7FDFE2B  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 353 :: 		
0x5DAE	0xF8BD0008  LDRH	R0, [SP, #8]
0x5DB2	0x2801    CMP	R0, #1
0x5DB4	0xD007    BEQ	L___Lib_Mmc_SDIO_Mmc_Init_SPI26
;__Lib_Mmc_SDIO.c, 355 :: 		
0x5DB6	0x2001    MOVS	R0, #1
0x5DB8	0xF7FDFC7C  BL	__Lib_Mmc_SDIO_Mmc_UnIdle_SPI+0
0x5DBC	0xB110    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Init_SPI27
;__Lib_Mmc_SDIO.c, 356 :: 		
0x5DBE	0x2000    MOVS	R0, #0
0x5DC0	0xF7FDFC78  BL	__Lib_Mmc_SDIO_Mmc_UnIdle_SPI+0
L___Lib_Mmc_SDIO_Mmc_Init_SPI27:
;__Lib_Mmc_SDIO.c, 357 :: 		
0x5DC4	0xE002    B	L___Lib_Mmc_SDIO_Mmc_Init_SPI28
L___Lib_Mmc_SDIO_Mmc_Init_SPI26:
;__Lib_Mmc_SDIO.c, 360 :: 		
0x5DC6	0x2002    MOVS	R0, #2
0x5DC8	0xF7FDFC74  BL	__Lib_Mmc_SDIO_Mmc_UnIdle_SPI+0
;__Lib_Mmc_SDIO.c, 361 :: 		
L___Lib_Mmc_SDIO_Mmc_Init_SPI28:
;__Lib_Mmc_SDIO.c, 364 :: 		
0x5DCC	0x480F    LDR	R0, [PC, #60]
0x5DCE	0x7800    LDRB	R0, [R0, #0]
0x5DD0	0x2805    CMP	R0, #5
0x5DD2	0xD101    BNE	L___Lib_Mmc_SDIO_Mmc_Init_SPI29
;__Lib_Mmc_SDIO.c, 365 :: 		
0x5DD4	0x2002    MOVS	R0, #2
0x5DD6	0xE015    B	L_end_Mmc_Init_SPI
L___Lib_Mmc_SDIO_Mmc_Init_SPI29:
;__Lib_Mmc_SDIO.c, 367 :: 		
0x5DD8	0x480C    LDR	R0, [PC, #48]
0x5DDA	0x7800    LDRB	R0, [R0, #0]
0x5DDC	0x2804    CMP	R0, #4
0x5DDE	0xD010    BEQ	L___Lib_Mmc_SDIO_Mmc_Init_SPI30
;__Lib_Mmc_SDIO.c, 369 :: 		
0x5DE0	0xF7FDFE44  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 371 :: 		
0x5DE4	0x22FF    MOVS	R2, #255
0x5DE6	0xF2402100  MOVW	R1, #512
0x5DEA	0x2010    MOVS	R0, #16
0x5DEC	0xF7FDFC18  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
0x5DF0	0xF8AD0008  STRH	R0, [SP, #8]
;__Lib_Mmc_SDIO.c, 372 :: 		
0x5DF4	0xF7FDFE06  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 374 :: 		
0x5DF8	0xF8BD0008  LDRH	R0, [SP, #8]
0x5DFC	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Init_SPI31
;__Lib_Mmc_SDIO.c, 375 :: 		
0x5DFE	0x2003    MOVS	R0, #3
0x5E00	0xE000    B	L_end_Mmc_Init_SPI
L___Lib_Mmc_SDIO_Mmc_Init_SPI31:
;__Lib_Mmc_SDIO.c, 376 :: 		
L___Lib_Mmc_SDIO_Mmc_Init_SPI30:
;__Lib_Mmc_SDIO.c, 378 :: 		
0x5E02	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 379 :: 		
L_end_Mmc_Init_SPI:
0x5E04	0xF8DDE000  LDR	LR, [SP, #0]
0x5E08	0xB003    ADD	SP, SP, #12
0x5E0A	0x4770    BX	LR
0x5E0C	0x02F72000  	__Lib_Mmc_SDIO_cardType+0
0x5E10	0x00140008  	#524308
0x5E14	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_Init_SPI
__Lib_Mmc_SDIO_Mmc_DeSelect_SPI:
;__Lib_Mmc_SDIO.c, 203 :: 		
0x3A04	0xB081    SUB	SP, SP, #4
0x3A06	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 205 :: 		
0x3A0A	0x2101    MOVS	R1, #1
0x3A0C	0xB249    SXTB	R1, R1
0x3A0E	0x4805    LDR	R0, [PC, #20]
0x3A10	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 209 :: 		
0x3A12	0x20FF    MOVS	R0, #255
0x3A14	0x4C04    LDR	R4, [PC, #16]
0x3A16	0x6824    LDR	R4, [R4, #0]
0x3A18	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 210 :: 		
L_end_Mmc_DeSelect_SPI:
0x3A1A	0xF8DDE000  LDR	LR, [SP, #0]
0x3A1E	0xB001    ADD	SP, SP, #4
0x3A20	0x4770    BX	LR
0x3A22	0xBF00    NOP
0x3A24	0x828C4241  	Mmc_Chip_Select+0
0x3A28	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_DeSelect_SPI
_ADC1_Get_Sample:
;__Lib_ADC_123_32F20x_24ch.c, 188 :: 		
; channel start address is: 0 (R0)
0x0CCC	0xB081    SUB	SP, SP, #4
0x0CCE	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
;__Lib_ADC_123_32F20x_24ch.c, 189 :: 		
0x0CD2	0xB281    UXTH	R1, R0
; channel end address is: 0 (R0)
0x0CD4	0x4803    LDR	R0, [PC, #12]
0x0CD6	0xF7FFFBA9  BL	__Lib_ADC_123_32F20x_24ch_ADCx_Get_Sample+0
;__Lib_ADC_123_32F20x_24ch.c, 196 :: 		
L_end_ADC1_Get_Sample:
0x0CDA	0xF8DDE000  LDR	LR, [SP, #0]
0x0CDE	0xB001    ADD	SP, SP, #4
0x0CE0	0x4770    BX	LR
0x0CE2	0xBF00    NOP
0x0CE4	0x20004001  	ADC1_SR+0
; end of _ADC1_Get_Sample
__Lib_ADC_123_32F20x_24ch_ADCx_Get_Sample:
;__Lib_ADC_123_32F20x_24ch.c, 175 :: 		
; channel start address is: 4 (R1)
; base start address is: 0 (R0)
0x042C	0xB081    SUB	SP, SP, #4
0x042E	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; channel start address is: 4 (R1)
;__Lib_ADC_123_32F20x_24ch.c, 176 :: 		
0x0432	0xF2000434  ADDW	R4, R0, #52
0x0436	0x090A    LSRS	R2, R1, #4
0x0438	0xB292    UXTH	R2, R2
0x043A	0xB293    UXTH	R3, R2
0x043C	0x6822    LDR	R2, [R4, #0]
0x043E	0xF3631204  BFI	R2, R3, #4, #1
0x0442	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F20x_24ch.c, 177 :: 		
0x0444	0xF2000434  ADDW	R4, R0, #52
0x0448	0x08CA    LSRS	R2, R1, #3
0x044A	0xB292    UXTH	R2, R2
0x044C	0xB293    UXTH	R3, R2
0x044E	0x6822    LDR	R2, [R4, #0]
0x0450	0xF36302C3  BFI	R2, R3, #3, #1
0x0454	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F20x_24ch.c, 178 :: 		
0x0456	0xF2000434  ADDW	R4, R0, #52
0x045A	0x088A    LSRS	R2, R1, #2
0x045C	0xB292    UXTH	R2, R2
0x045E	0xB293    UXTH	R3, R2
0x0460	0x6822    LDR	R2, [R4, #0]
0x0462	0xF3630282  BFI	R2, R3, #2, #1
0x0466	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F20x_24ch.c, 179 :: 		
0x0468	0xF2000434  ADDW	R4, R0, #52
0x046C	0x084A    LSRS	R2, R1, #1
0x046E	0xB292    UXTH	R2, R2
0x0470	0xB293    UXTH	R3, R2
0x0472	0x6822    LDR	R2, [R4, #0]
0x0474	0xF3630241  BFI	R2, R3, #1, #1
0x0478	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F20x_24ch.c, 180 :: 		
0x047A	0xF2000434  ADDW	R4, R0, #52
0x047E	0xB28B    UXTH	R3, R1
; channel end address is: 4 (R1)
0x0480	0x6822    LDR	R2, [R4, #0]
0x0482	0xF3630200  BFI	R2, R3, #0, #1
0x0486	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F20x_24ch.c, 181 :: 		
0x0488	0xF2000408  ADDW	R4, R0, #8
0x048C	0x2301    MOVS	R3, #1
0x048E	0x6822    LDR	R2, [R4, #0]
0x0490	0xF363729E  BFI	R2, R3, #30, #1
0x0494	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F20x_24ch.c, 182 :: 		
0x0496	0xF7FFFF63  BL	_Delay_1us+0
; base end address is: 0 (R0)
;__Lib_ADC_123_32F20x_24ch.c, 183 :: 		
L___Lib_ADC_123_32F20x_24ch_ADCx_Get_Sample22:
; base start address is: 0 (R0)
0x049A	0x6803    LDR	R3, [R0, #0]
0x049C	0xF3C30240  UBFX	R2, R3, #1, #1
0x04A0	0xB902    CBNZ	R2, L___Lib_ADC_123_32F20x_24ch_ADCx_Get_Sample23
0x04A2	0xE7FA    B	L___Lib_ADC_123_32F20x_24ch_ADCx_Get_Sample22
L___Lib_ADC_123_32F20x_24ch_ADCx_Get_Sample23:
;__Lib_ADC_123_32F20x_24ch.c, 184 :: 		
0x04A4	0xF200024C  ADDW	R2, R0, #76
; base end address is: 0 (R0)
0x04A8	0x6812    LDR	R2, [R2, #0]
0x04AA	0xB290    UXTH	R0, R2
;__Lib_ADC_123_32F20x_24ch.c, 185 :: 		
L_end_ADCx_Get_Sample:
0x04AC	0xF8DDE000  LDR	LR, [SP, #0]
0x04B0	0xB001    ADD	SP, SP, #4
0x04B2	0x4770    BX	LR
; end of __Lib_ADC_123_32F20x_24ch_ADCx_Get_Sample
_Delay_1us:
;__Lib_Delays.c, 13 :: 		void Delay_1us() {
;__Lib_Delays.c, 14 :: 		Delay_us(1);
0x0360	0xF2400730  MOVW	R7, #48
0x0364	0xF2C00700  MOVT	R7, #0
L_Delay_1us0:
0x0368	0x1E7F    SUBS	R7, R7, #1
0x036A	0xD1FD    BNE	L_Delay_1us0
0x036C	0xBF00    NOP
0x036E	0xBF00    NOP
0x0370	0xBF00    NOP
0x0372	0xBF00    NOP
0x0374	0xBF00    NOP
;__Lib_Delays.c, 15 :: 		}
L_end_Delay_1us:
0x0376	0x4770    BX	LR
; end of _Delay_1us
_ADC2_Get_Sample:
;__Lib_ADC_123_32F20x_24ch.c, 270 :: 		
; channel start address is: 0 (R0)
0x0D04	0xB081    SUB	SP, SP, #4
0x0D06	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
;__Lib_ADC_123_32F20x_24ch.c, 271 :: 		
0x0D0A	0xB281    UXTH	R1, R0
; channel end address is: 0 (R0)
0x0D0C	0x4803    LDR	R0, [PC, #12]
0x0D0E	0xF7FFFB8D  BL	__Lib_ADC_123_32F20x_24ch_ADCx_Get_Sample+0
;__Lib_ADC_123_32F20x_24ch.c, 278 :: 		
L_end_ADC2_Get_Sample:
0x0D12	0xF8DDE000  LDR	LR, [SP, #0]
0x0D16	0xB001    ADD	SP, SP, #4
0x0D18	0x4770    BX	LR
0x0D1A	0xBF00    NOP
0x0D1C	0x21004001  	ADC2_SR+0
; end of _ADC2_Get_Sample
_ADC3_Get_Sample:
;__Lib_ADC_123_32F20x_24ch.c, 353 :: 		
; channel start address is: 0 (R0)
0x0CE8	0xB081    SUB	SP, SP, #4
0x0CEA	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
;__Lib_ADC_123_32F20x_24ch.c, 354 :: 		
0x0CEE	0xB281    UXTH	R1, R0
; channel end address is: 0 (R0)
0x0CF0	0x4803    LDR	R0, [PC, #12]
0x0CF2	0xF7FFFB9B  BL	__Lib_ADC_123_32F20x_24ch_ADCx_Get_Sample+0
;__Lib_ADC_123_32F20x_24ch.c, 361 :: 		
L_end_ADC3_Get_Sample:
0x0CF6	0xF8DDE000  LDR	LR, [SP, #0]
0x0CFA	0xB001    ADD	SP, SP, #4
0x0CFC	0x4770    BX	LR
0x0CFE	0xBF00    NOP
0x0D00	0x22004001  	ADC3_SR+0
; end of _ADC3_Get_Sample
_SPI1_Read:
;__Lib_SPI_123.c, 74 :: 		
; data_out start address is: 0 (R0)
0x0B60	0xB081    SUB	SP, SP, #4
0x0B62	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 75 :: 		
0x0B66	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0B68	0x4803    LDR	R0, [PC, #12]
0x0B6A	0xF7FFFC45  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 76 :: 		
L_end_SPI1_Read:
0x0B6E	0xF8DDE000  LDR	LR, [SP, #0]
0x0B72	0xB001    ADD	SP, SP, #4
0x0B74	0x4770    BX	LR
0x0B76	0xBF00    NOP
0x0B78	0x30004001  	SPI1_CR1+0
; end of _SPI1_Read
__Lib_SPI_123_SPIx_Read:
;__Lib_SPI_123.c, 67 :: 		
; data_out start address is: 4 (R1)
; base start address is: 0 (R0)
0x03F8	0xB081    SUB	SP, SP, #4
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; data_out start address is: 4 (R1)
;__Lib_SPI_123.c, 68 :: 		
0x03FA	0xF200020C  ADDW	R2, R0, #12
0x03FE	0x6011    STR	R1, [R2, #0]
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 69 :: 		
L___Lib_SPI_123_SPIx_Read0:
; base start address is: 0 (R0)
0x0400	0xF2000208  ADDW	R2, R0, #8
0x0404	0x6813    LDR	R3, [R2, #0]
0x0406	0xF3C30200  UBFX	R2, R3, #0, #1
0x040A	0xB902    CBNZ	R2, L___Lib_SPI_123_SPIx_Read1
;__Lib_SPI_123.c, 70 :: 		
0x040C	0xE7F8    B	L___Lib_SPI_123_SPIx_Read0
L___Lib_SPI_123_SPIx_Read1:
;__Lib_SPI_123.c, 71 :: 		
0x040E	0xF200020C  ADDW	R2, R0, #12
; base end address is: 0 (R0)
0x0412	0x6812    LDR	R2, [R2, #0]
0x0414	0xB290    UXTH	R0, R2
;__Lib_SPI_123.c, 72 :: 		
L_end_SPIx_Read:
0x0416	0xB001    ADD	SP, SP, #4
0x0418	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Read
_SPI2_Read:
;__Lib_SPI_123.c, 99 :: 		
; data_out start address is: 0 (R0)
0x0B14	0xB081    SUB	SP, SP, #4
0x0B16	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 100 :: 		
0x0B1A	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0B1C	0x4803    LDR	R0, [PC, #12]
0x0B1E	0xF7FFFC6B  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 101 :: 		
L_end_SPI2_Read:
0x0B22	0xF8DDE000  LDR	LR, [SP, #0]
0x0B26	0xB001    ADD	SP, SP, #4
0x0B28	0x4770    BX	LR
0x0B2A	0xBF00    NOP
0x0B2C	0x38004000  	SPI2_CR1+0
; end of _SPI2_Read
_SPI3_Read:
;__Lib_SPI_123.c, 125 :: 		
; data_out start address is: 0 (R0)
0x0AF8	0xB081    SUB	SP, SP, #4
0x0AFA	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 126 :: 		
0x0AFE	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0B00	0x4803    LDR	R0, [PC, #12]
0x0B02	0xF7FFFC79  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 127 :: 		
L_end_SPI3_Read:
0x0B06	0xF8DDE000  LDR	LR, [SP, #0]
0x0B0A	0xB001    ADD	SP, SP, #4
0x0B0C	0x4770    BX	LR
0x0B0E	0xBF00    NOP
0x0B10	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Read
__Lib_Mmc_SDIO_Mmc_Select_SPI:
;__Lib_Mmc_SDIO.c, 185 :: 		
0x3A6C	0xB081    SUB	SP, SP, #4
;__Lib_Mmc_SDIO.c, 187 :: 		
0x3A6E	0x2100    MOVS	R1, #0
0x3A70	0xB249    SXTB	R1, R1
0x3A72	0x4802    LDR	R0, [PC, #8]
0x3A74	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 197 :: 		
L_end_Mmc_Select_SPI:
0x3A76	0xB001    ADD	SP, SP, #4
0x3A78	0x4770    BX	LR
0x3A7A	0xBF00    NOP
0x3A7C	0x828C4241  	Mmc_Chip_Select+0
; end of __Lib_Mmc_SDIO_Mmc_Select_SPI
__Lib_Mmc_SDIO_Mmc_Send_Command_SPI:
;__Lib_Mmc_SDIO.c, 217 :: 		
; partial_cmm start address is: 0 (R0)
0x3620	0xB084    SUB	SP, SP, #16
0x3622	0xF8CDE000  STR	LR, [SP, #0]
0x3626	0x9102    STR	R1, [SP, #8]
0x3628	0xF88D200C  STRB	R2, [SP, #12]
; partial_cmm end address is: 0 (R0)
; partial_cmm start address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 221 :: 		
0x362C	0xF2000440  ADDW	R4, R0, #64
; partial_cmm end address is: 0 (R0)
0x3630	0xB2A0    UXTH	R0, R4
0x3632	0x4C1F    LDR	R4, [PC, #124]
0x3634	0x6824    LDR	R4, [R4, #0]
0x3636	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 222 :: 		
0x3638	0xAB02    ADD	R3, SP, #8
0x363A	0x1CDB    ADDS	R3, R3, #3
0x363C	0x781B    LDRB	R3, [R3, #0]
0x363E	0xB2DC    UXTB	R4, R3
0x3640	0xB2A0    UXTH	R0, R4
0x3642	0x4C1B    LDR	R4, [PC, #108]
0x3644	0x6824    LDR	R4, [R4, #0]
0x3646	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 223 :: 		
0x3648	0xAB02    ADD	R3, SP, #8
0x364A	0x1C9B    ADDS	R3, R3, #2
0x364C	0x781B    LDRB	R3, [R3, #0]
0x364E	0xB2DC    UXTB	R4, R3
0x3650	0xB2A0    UXTH	R0, R4
0x3652	0x4C17    LDR	R4, [PC, #92]
0x3654	0x6824    LDR	R4, [R4, #0]
0x3656	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 224 :: 		
0x3658	0xAB02    ADD	R3, SP, #8
0x365A	0x1C5B    ADDS	R3, R3, #1
0x365C	0x781B    LDRB	R3, [R3, #0]
0x365E	0xB2DC    UXTB	R4, R3
0x3660	0xB2A0    UXTH	R0, R4
0x3662	0x4C13    LDR	R4, [PC, #76]
0x3664	0x6824    LDR	R4, [R4, #0]
0x3666	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 225 :: 		
0x3668	0xAB02    ADD	R3, SP, #8
0x366A	0x781B    LDRB	R3, [R3, #0]
0x366C	0xB2DC    UXTB	R4, R3
0x366E	0xB2A0    UXTH	R0, R4
0x3670	0x4C0F    LDR	R4, [PC, #60]
0x3672	0x6824    LDR	R4, [R4, #0]
0x3674	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 226 :: 		
0x3676	0xF89D000C  LDRB	R0, [SP, #12]
0x367A	0x4C0D    LDR	R4, [PC, #52]
0x367C	0x6824    LDR	R4, [R4, #0]
0x367E	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 229 :: 		
; timeout start address is: 4 (R1)
; timeout start address is: 4 (R1)
0x3680	0x2100    MOVS	R1, #0
; timeout end address is: 4 (R1)
;__Lib_Mmc_SDIO.c, 230 :: 		
L___Lib_Mmc_SDIO_Mmc_Send_Command_SPI3:
;__Lib_Mmc_SDIO.c, 231 :: 		
; timeout start address is: 4 (R1)
0x3682	0xF8AD1004  STRH	R1, [SP, #4]
0x3686	0x20FF    MOVS	R0, #255
0x3688	0x4C09    LDR	R4, [PC, #36]
0x368A	0x6824    LDR	R4, [R4, #0]
0x368C	0x47A0    BLX	R4
0x368E	0xF8BD1004  LDRH	R1, [SP, #4]
; response start address is: 8 (R2)
0x3692	0xB282    UXTH	R2, R0
;__Lib_Mmc_SDIO.c, 232 :: 		
0x3694	0x1C4B    ADDS	R3, R1, #1
0x3696	0xB299    UXTH	R1, R3
; timeout end address is: 4 (R1)
;__Lib_Mmc_SDIO.c, 233 :: 		
0x3698	0xF0000380  AND	R3, R0, #128
0x369C	0xB29B    UXTH	R3, R3
0x369E	0xB113    CBZ	R3, L___Lib_Mmc_SDIO_Mmc_Send_Command_SPI387
; timeout end address is: 4 (R1)
; timeout start address is: 4 (R1)
0x36A0	0x2964    CMP	R1, #100
0x36A2	0xD200    BCS	L___Lib_Mmc_SDIO_Mmc_Send_Command_SPI386
; timeout end address is: 4 (R1)
0x36A4	0xE7ED    B	L___Lib_Mmc_SDIO_Mmc_Send_Command_SPI3
L___Lib_Mmc_SDIO_Mmc_Send_Command_SPI387:
L___Lib_Mmc_SDIO_Mmc_Send_Command_SPI386:
;__Lib_Mmc_SDIO.c, 235 :: 		
0x36A6	0xB290    UXTH	R0, R2
; response end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 236 :: 		
L_end_Mmc_Send_Command_SPI:
0x36A8	0xF8DDE000  LDR	LR, [SP, #0]
0x36AC	0xB004    ADD	SP, SP, #16
0x36AE	0x4770    BX	LR
0x36B0	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_Send_Command_SPI
__Lib_Mmc_SDIO_Mmc_UnIdle_SPI:
;__Lib_Mmc_SDIO.c, 242 :: 		
0x36B4	0xB084    SUB	SP, SP, #16
0x36B6	0xF8CDE000  STR	LR, [SP, #0]
0x36BA	0xF88D000C  STRB	R0, [SP, #12]
;__Lib_Mmc_SDIO.c, 246 :: 		
0x36BE	0x2100    MOVS	R1, #0
0x36C0	0xF8AD1004  STRH	R1, [SP, #4]
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI8:
0x36C4	0xF8BD2004  LDRH	R2, [SP, #4]
0x36C8	0xF2427110  MOVW	R1, #10000
0x36CC	0x428A    CMP	R2, R1
0x36CE	0xF0808077  BCS	L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI9
;__Lib_Mmc_SDIO.c, 247 :: 		
0x36D2	0xF89D100C  LDRB	R1, [SP, #12]
0x36D6	0xB999    CBNZ	R1, L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI11
;__Lib_Mmc_SDIO.c, 248 :: 		
0x36D8	0xF000F9C8  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 250 :: 		
0x36DC	0x22FF    MOVS	R2, #255
0x36DE	0x2100    MOVS	R1, #0
0x36E0	0x2001    MOVS	R0, #1
0x36E2	0xF7FFFF9D  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
0x36E6	0xF8AD0006  STRH	R0, [SP, #6]
;__Lib_Mmc_SDIO.c, 251 :: 		
0x36EA	0xF000F98B  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 252 :: 		
0x36EE	0xF8BD1006  LDRH	R1, [SP, #6]
0x36F2	0xB921    CBNZ	R1, L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI12
;__Lib_Mmc_SDIO.c, 254 :: 		
0x36F4	0x2200    MOVS	R2, #0
0x36F6	0x4935    LDR	R1, [PC, #212]
0x36F8	0x700A    STRB	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 255 :: 		
0x36FA	0x2000    MOVS	R0, #0
0x36FC	0xE061    B	L_end_Mmc_UnIdle_SPI
;__Lib_Mmc_SDIO.c, 256 :: 		
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI12:
;__Lib_Mmc_SDIO.c, 257 :: 		
0x36FE	0xE059    B	L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI13
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI11:
;__Lib_Mmc_SDIO.c, 259 :: 		
0x3700	0xF000F9B4  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 262 :: 		
0x3704	0x22FF    MOVS	R2, #255
0x3706	0x2100    MOVS	R1, #0
0x3708	0x2037    MOVS	R0, #55
0x370A	0xF7FFFF89  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
0x370E	0xF8AD0006  STRH	R0, [SP, #6]
;__Lib_Mmc_SDIO.c, 263 :: 		
0x3712	0xF000F977  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 264 :: 		
0x3716	0xF8BD1006  LDRH	R1, [SP, #6]
0x371A	0x2901    CMP	R1, #1
0x371C	0xD149    BNE	L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI14
;__Lib_Mmc_SDIO.c, 266 :: 		
0x371E	0xF000F9A5  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 268 :: 		
0x3722	0x22FF    MOVS	R2, #255
0x3724	0xF04F4180  MOV	R1, #1073741824
0x3728	0x2029    MOVS	R0, #41
0x372A	0xF7FFFF79  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
0x372E	0xF8AD0006  STRH	R0, [SP, #6]
;__Lib_Mmc_SDIO.c, 269 :: 		
0x3732	0xF000F967  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 270 :: 		
0x3736	0xF8BD1006  LDRH	R1, [SP, #6]
0x373A	0x2900    CMP	R1, #0
0x373C	0xD138    BNE	L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI15
;__Lib_Mmc_SDIO.c, 271 :: 		
0x373E	0xF89D100C  LDRB	R1, [SP, #12]
0x3742	0x2902    CMP	R1, #2
0x3744	0xD12F    BNE	L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI16
;__Lib_Mmc_SDIO.c, 272 :: 		
0x3746	0xF000F991  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 273 :: 		
0x374A	0x22FF    MOVS	R2, #255
0x374C	0x2100    MOVS	R1, #0
0x374E	0x203A    MOVS	R0, #58
0x3750	0xF7FFFF66  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
0x3754	0xF8AD0006  STRH	R0, [SP, #6]
;__Lib_Mmc_SDIO.c, 274 :: 		
0x3758	0x20FF    MOVS	R0, #255
0x375A	0x4C1D    LDR	R4, [PC, #116]
0x375C	0x6824    LDR	R4, [R4, #0]
0x375E	0x47A0    BLX	R4
0x3760	0xF8AD0008  STRH	R0, [SP, #8]
;__Lib_Mmc_SDIO.c, 275 :: 		
0x3764	0x20FF    MOVS	R0, #255
0x3766	0x4C1A    LDR	R4, [PC, #104]
0x3768	0x6824    LDR	R4, [R4, #0]
0x376A	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 276 :: 		
0x376C	0x20FF    MOVS	R0, #255
0x376E	0x4C18    LDR	R4, [PC, #96]
0x3770	0x6824    LDR	R4, [R4, #0]
0x3772	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 277 :: 		
0x3774	0x20FF    MOVS	R0, #255
0x3776	0x4C16    LDR	R4, [PC, #88]
0x3778	0x6824    LDR	R4, [R4, #0]
0x377A	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 278 :: 		
0x377C	0xF000F942  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 279 :: 		
0x3780	0xF8BD1006  LDRH	R1, [SP, #6]
0x3784	0xB971    CBNZ	R1, L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI17
;__Lib_Mmc_SDIO.c, 280 :: 		
0x3786	0xF8BD1008  LDRH	R1, [SP, #8]
0x378A	0xF0010140  AND	R1, R1, #64
0x378E	0xB289    UXTH	R1, R1
0x3790	0xB119    CBZ	R1, L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI18
;__Lib_Mmc_SDIO.c, 282 :: 		
0x3792	0x2204    MOVS	R2, #4
0x3794	0x490D    LDR	R1, [PC, #52]
0x3796	0x700A    STRB	R2, [R1, #0]
0x3798	0xE002    B	L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI19
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI18:
;__Lib_Mmc_SDIO.c, 285 :: 		
0x379A	0x2203    MOVS	R2, #3
0x379C	0x490B    LDR	R1, [PC, #44]
0x379E	0x700A    STRB	R2, [R1, #0]
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI19:
;__Lib_Mmc_SDIO.c, 286 :: 		
0x37A0	0x2000    MOVS	R0, #0
0x37A2	0xE00E    B	L_end_Mmc_UnIdle_SPI
;__Lib_Mmc_SDIO.c, 287 :: 		
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI17:
;__Lib_Mmc_SDIO.c, 288 :: 		
0x37A4	0xE004    B	L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI20
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI16:
;__Lib_Mmc_SDIO.c, 290 :: 		
0x37A6	0x2201    MOVS	R2, #1
0x37A8	0x4908    LDR	R1, [PC, #32]
0x37AA	0x700A    STRB	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 291 :: 		
0x37AC	0x2000    MOVS	R0, #0
0x37AE	0xE008    B	L_end_Mmc_UnIdle_SPI
;__Lib_Mmc_SDIO.c, 292 :: 		
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI20:
;__Lib_Mmc_SDIO.c, 293 :: 		
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI15:
;__Lib_Mmc_SDIO.c, 294 :: 		
0x37B0	0xE000    B	L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI21
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI14:
;__Lib_Mmc_SDIO.c, 297 :: 		
0x37B2	0xE005    B	L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI9
;__Lib_Mmc_SDIO.c, 298 :: 		
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI21:
;__Lib_Mmc_SDIO.c, 299 :: 		
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI13:
;__Lib_Mmc_SDIO.c, 246 :: 		
0x37B4	0xF8BD1004  LDRH	R1, [SP, #4]
0x37B8	0x1C49    ADDS	R1, R1, #1
0x37BA	0xF8AD1004  STRH	R1, [SP, #4]
;__Lib_Mmc_SDIO.c, 300 :: 		
0x37BE	0xE781    B	L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI8
L___Lib_Mmc_SDIO_Mmc_UnIdle_SPI9:
;__Lib_Mmc_SDIO.c, 301 :: 		
0x37C0	0x2001    MOVS	R0, #1
;__Lib_Mmc_SDIO.c, 302 :: 		
L_end_Mmc_UnIdle_SPI:
0x37C2	0xF8DDE000  LDR	LR, [SP, #0]
0x37C6	0xB004    ADD	SP, SP, #16
0x37C8	0x4770    BX	LR
0x37CA	0xBF00    NOP
0x37CC	0x02F72000  	__Lib_Mmc_SDIO_cardType+0
0x37D0	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_UnIdle_SPI
__Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI:
;__Lib_Mmc_SDIO.c, 655 :: 		
0x5E48	0xB082    SUB	SP, SP, #8
0x5E4A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 659 :: 		
0x5E4E	0x204C    MOVS	R0, #76
0x5E50	0x4C21    LDR	R4, [PC, #132]
0x5E52	0x6824    LDR	R4, [R4, #0]
0x5E54	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 660 :: 		
0x5E56	0x2000    MOVS	R0, #0
0x5E58	0x4C1F    LDR	R4, [PC, #124]
0x5E5A	0x6824    LDR	R4, [R4, #0]
0x5E5C	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 661 :: 		
0x5E5E	0x2000    MOVS	R0, #0
0x5E60	0x4C1D    LDR	R4, [PC, #116]
0x5E62	0x6824    LDR	R4, [R4, #0]
0x5E64	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 662 :: 		
0x5E66	0x2000    MOVS	R0, #0
0x5E68	0x4C1B    LDR	R4, [PC, #108]
0x5E6A	0x6824    LDR	R4, [R4, #0]
0x5E6C	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 663 :: 		
0x5E6E	0x2000    MOVS	R0, #0
0x5E70	0x4C19    LDR	R4, [PC, #100]
0x5E72	0x6824    LDR	R4, [R4, #0]
0x5E74	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 664 :: 		
0x5E76	0x20FF    MOVS	R0, #255
0x5E78	0x4C17    LDR	R4, [PC, #92]
0x5E7A	0x6824    LDR	R4, [R4, #0]
0x5E7C	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 667 :: 		
; timeout start address is: 8 (R2)
; timeout start address is: 8 (R2)
0x5E7E	0x2200    MOVS	R2, #0
; timeout end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 668 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI69:
;__Lib_Mmc_SDIO.c, 669 :: 		
; timeout start address is: 8 (R2)
0x5E80	0xF8AD2004  STRH	R2, [SP, #4]
0x5E84	0x20FF    MOVS	R0, #255
0x5E86	0x4C14    LDR	R4, [PC, #80]
0x5E88	0x6824    LDR	R4, [R4, #0]
0x5E8A	0x47A0    BLX	R4
0x5E8C	0xF8BD2004  LDRH	R2, [SP, #4]
; response start address is: 12 (R3)
0x5E90	0xB283    UXTH	R3, R0
;__Lib_Mmc_SDIO.c, 670 :: 		
0x5E92	0x1C51    ADDS	R1, R2, #1
0x5E94	0xB28A    UXTH	R2, R1
; timeout end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 671 :: 		
0x5E96	0xF0000080  AND	R0, R0, #128
0x5E9A	0xB280    UXTH	R0, R0
0x5E9C	0xB110    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI390
; timeout end address is: 8 (R2)
; timeout start address is: 8 (R2)
0x5E9E	0x2A64    CMP	R2, #100
0x5EA0	0xD200    BCS	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI389
; timeout end address is: 8 (R2)
0x5EA2	0xE7ED    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI69
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI390:
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI389:
;__Lib_Mmc_SDIO.c, 673 :: 		
0x5EA4	0xF0030080  AND	R0, R3, #128
0x5EA8	0xB280    UXTH	R0, R0
0x5EAA	0xB138    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI74
;__Lib_Mmc_SDIO.c, 674 :: 		
0x5EAC	0xF8AD3004  STRH	R3, [SP, #4]
0x5EB0	0xF7FDFDA8  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
0x5EB4	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_Mmc_SDIO.c, 675 :: 		
0x5EB8	0xB298    UXTH	R0, R3
; response end address is: 12 (R3)
0x5EBA	0xE008    B	L_end_Mmc_Multi_Read_Stop_SPI
;__Lib_Mmc_SDIO.c, 676 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI74:
;__Lib_Mmc_SDIO.c, 679 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI75:
;__Lib_Mmc_SDIO.c, 680 :: 		
0x5EBC	0x20FF    MOVS	R0, #255
0x5EBE	0x4C06    LDR	R4, [PC, #24]
0x5EC0	0x6824    LDR	R4, [R4, #0]
0x5EC2	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 681 :: 		
0x5EC4	0x2800    CMP	R0, #0
0x5EC6	0xD0F9    BEQ	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI75
;__Lib_Mmc_SDIO.c, 683 :: 		
0x5EC8	0xF7FDFD9C  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 684 :: 		
0x5ECC	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 685 :: 		
L_end_Mmc_Multi_Read_Stop_SPI:
0x5ECE	0xF8DDE000  LDR	LR, [SP, #0]
0x5ED2	0xB002    ADD	SP, SP, #8
0x5ED4	0x4770    BX	LR
0x5ED6	0xBF00    NOP
0x5ED8	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI
__Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SPI:
;__Lib_Mmc_SDIO.c, 753 :: 		
0x5E18	0xB081    SUB	SP, SP, #4
0x5E1A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 756 :: 		
0x5E1E	0x20FD    MOVS	R0, #253
0x5E20	0x4C08    LDR	R4, [PC, #32]
0x5E22	0x6824    LDR	R4, [R4, #0]
0x5E24	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 758 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SPI87:
0x5E26	0x20FF    MOVS	R0, #255
0x5E28	0x4C06    LDR	R4, [PC, #24]
0x5E2A	0x6824    LDR	R4, [R4, #0]
0x5E2C	0x47A0    BLX	R4
0x5E2E	0xF1B00FFF  CMP	R0, #255
0x5E32	0xD000    BEQ	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SPI88
;__Lib_Mmc_SDIO.c, 759 :: 		
0x5E34	0xE7F7    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SPI87
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SPI88:
;__Lib_Mmc_SDIO.c, 760 :: 		
0x5E36	0xF7FDFDE5  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 763 :: 		
0x5E3A	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 764 :: 		
L_end_Mmc_Multi_Write_Stop_SPI:
0x5E3C	0xF8DDE000  LDR	LR, [SP, #0]
0x5E40	0xB001    ADD	SP, SP, #4
0x5E42	0x4770    BX	LR
0x5E44	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SPI
__Lib_Mmc_SDIO_Mmc_Init_SDIO:
;__Lib_Mmc_SDIO.c, 1886 :: 		
0x5B68	0xB082    SUB	SP, SP, #8
0x5B6A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 1889 :: 		
0x5B6E	0xF7FDFC5F  BL	__Lib_Mmc_SDIO_SD_PowerON+0
0x5B72	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Init_SDIO219
;__Lib_Mmc_SDIO.c, 1890 :: 		
0x5B74	0x2001    MOVS	R0, #1
0x5B76	0xE022    B	L_end_Mmc_Init_SDIO
;__Lib_Mmc_SDIO.c, 1891 :: 		
L___Lib_Mmc_SDIO_Mmc_Init_SDIO219:
;__Lib_Mmc_SDIO.c, 1892 :: 		
0x5B78	0xF7FDFB66  BL	__Lib_Mmc_SDIO_SD_InitializeCards+0
0x5B7C	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Init_SDIO220
;__Lib_Mmc_SDIO.c, 1893 :: 		
0x5B7E	0x2001    MOVS	R0, #1
0x5B80	0xE01D    B	L_end_Mmc_Init_SDIO
;__Lib_Mmc_SDIO.c, 1894 :: 		
L___Lib_Mmc_SDIO_Mmc_Init_SDIO220:
;__Lib_Mmc_SDIO.c, 1903 :: 		
0x5B82	0x4811    LDR	R0, [PC, #68]
0x5B84	0x6800    LDR	R0, [R0, #0]
0x5B86	0x9001    STR	R0, [SP, #4]
;__Lib_Mmc_SDIO.c, 1904 :: 		
0x5B88	0x480F    LDR	R0, [PC, #60]
0x5B8A	0x6801    LDR	R1, [R0, #0]
0x5B8C	0xF46F50C0  MVN	R0, #6144
0x5B90	0x4001    ANDS	R1, R0
0x5B92	0x480D    LDR	R0, [PC, #52]
0x5B94	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1907 :: 		
0x5B96	0x480D    LDR	R0, [PC, #52]
0x5B98	0x6800    LDR	R0, [R0, #0]
0x5B9A	0x0400    LSLS	R0, R0, #16
0x5B9C	0xF7FDFC20  BL	__Lib_Mmc_SDIO_SD_SelectDeselect+0
; errorStatus start address is: 4 (R1)
0x5BA0	0xB2C1    UXTB	R1, R0
;__Lib_Mmc_SDIO.c, 1908 :: 		
0x5BA2	0xB939    CBNZ	R1, L___Lib_Mmc_SDIO_Mmc_Init_SDIO438
; errorStatus end address is: 4 (R1)
;__Lib_Mmc_SDIO.c, 1910 :: 		
0x5BA4	0x9801    LDR	R0, [SP, #4]
0x5BA6	0xF40050C0  AND	R0, R0, #6144
0x5BAA	0xF7FDFEEB  BL	__Lib_Mmc_SDIO_SD_EnableWideBusOperation+0
; errorStatus start address is: 4 (R1)
0x5BAE	0xB2C1    UXTB	R1, R0
; errorStatus end address is: 4 (R1)
0x5BB0	0x460A    MOV	R2, R1
;__Lib_Mmc_SDIO.c, 1911 :: 		
0x5BB2	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Init_SDIO221
L___Lib_Mmc_SDIO_Mmc_Init_SDIO438:
;__Lib_Mmc_SDIO.c, 1908 :: 		
0x5BB4	0x460A    MOV	R2, R1
;__Lib_Mmc_SDIO.c, 1911 :: 		
L___Lib_Mmc_SDIO_Mmc_Init_SDIO221:
;__Lib_Mmc_SDIO.c, 1914 :: 		
; errorStatus start address is: 8 (R2)
0x5BB6	0x9901    LDR	R1, [SP, #4]
0x5BB8	0x4803    LDR	R0, [PC, #12]
0x5BBA	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1916 :: 		
0x5BBC	0xB290    UXTH	R0, R2
; errorStatus end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 1917 :: 		
L_end_Mmc_Init_SDIO:
0x5BBE	0xF8DDE000  LDR	LR, [SP, #0]
0x5BC2	0xB002    ADD	SP, SP, #8
0x5BC4	0x4770    BX	LR
0x5BC6	0xBF00    NOP
0x5BC8	0x2C044001  	SDIO_CLKCR+0
0x5BCC	0x032C2000  	__Lib_Mmc_SDIO_RCA+0
; end of __Lib_Mmc_SDIO_Mmc_Init_SDIO
__Lib_Mmc_SDIO_SD_PowerON:
;__Lib_Mmc_SDIO.c, 1354 :: 		
0x3430	0xB082    SUB	SP, SP, #8
0x3432	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 1356 :: 		
; SDType start address is: 28 (R7)
0x3436	0xF04F0700  MOV	R7, #0
;__Lib_Mmc_SDIO.c, 1358 :: 		
; validvoltage start address is: 16 (R4)
0x343A	0x2400    MOVS	R4, #0
;__Lib_Mmc_SDIO.c, 1360 :: 		
; count start address is: 20 (R5)
0x343C	0x2500    MOVS	R5, #0
;__Lib_Mmc_SDIO.c, 1361 :: 		
; response start address is: 24 (R6)
0x343E	0x2600    MOVS	R6, #0
;__Lib_Mmc_SDIO.c, 1364 :: 		
0x3440	0x2003    MOVS	R0, #3
0x3442	0xF7FDFB7D  BL	_SDIO_SetPowerState+0
;__Lib_Mmc_SDIO.c, 1367 :: 		
0x3446	0x2001    MOVS	R0, #1
0x3448	0xF7FDFB72  BL	_SDIO_ClockCmd+0
;__Lib_Mmc_SDIO.c, 1371 :: 		
0x344C	0x2100    MOVS	R1, #0
0x344E	0x486B    LDR	R0, [PC, #428]
0x3450	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1372 :: 		
0x3452	0x2100    MOVS	R1, #0
0x3454	0x486A    LDR	R0, [PC, #424]
0x3456	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1373 :: 		
0x3458	0xF04F0100  MOV	R1, #0
0x345C	0x4869    LDR	R0, [PC, #420]
0x345E	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1374 :: 		
0x3460	0xF04F0100  MOV	R1, #0
0x3464	0x4868    LDR	R0, [PC, #416]
0x3466	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1375 :: 		
0x3468	0xF44F6180  MOV	R1, #1024
0x346C	0x4867    LDR	R0, [PC, #412]
0x346E	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1376 :: 		
0x3470	0x4862    LDR	R0, [PC, #392]
0x3472	0xF7FDFC07  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1378 :: 		
0x3476	0xF7FDFA17  BL	__Lib_Mmc_SDIO_CmdError+0
0x347A	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_SD_PowerON160
; validvoltage end address is: 16 (R4)
; response end address is: 24 (R6)
; SDType end address is: 28 (R7)
; count end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 1381 :: 		
0x347C	0x2001    MOVS	R0, #1
0x347E	0xE0B9    B	L_end_SD_PowerON
;__Lib_Mmc_SDIO.c, 1382 :: 		
L___Lib_Mmc_SDIO_SD_PowerON160:
;__Lib_Mmc_SDIO.c, 1390 :: 		
; count start address is: 20 (R5)
; SDType start address is: 28 (R7)
; response start address is: 24 (R6)
; validvoltage start address is: 16 (R4)
0x3480	0xF44F71D5  MOV	R1, #426
0x3484	0x485D    LDR	R0, [PC, #372]
0x3486	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1391 :: 		
0x3488	0xF04F0108  MOV	R1, #8
0x348C	0x485C    LDR	R0, [PC, #368]
0x348E	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1392 :: 		
0x3490	0xF04F0140  MOV	R1, #64
0x3494	0x485B    LDR	R0, [PC, #364]
0x3496	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1393 :: 		
0x3498	0xF04F0100  MOV	R1, #0
0x349C	0x485A    LDR	R0, [PC, #360]
0x349E	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1394 :: 		
0x34A0	0xF44F6180  MOV	R1, #1024
0x34A4	0x4859    LDR	R0, [PC, #356]
0x34A6	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1395 :: 		
0x34A8	0x4854    LDR	R0, [PC, #336]
0x34AA	0xF7FDFBEB  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1397 :: 		
0x34AE	0xF7FDFAF5  BL	__Lib_Mmc_SDIO_CmdResp7Error+0
0x34B2	0xB930    CBNZ	R0, L___Lib_Mmc_SDIO_SD_PowerON161
; SDType end address is: 28 (R7)
;__Lib_Mmc_SDIO.c, 1399 :: 		
0x34B4	0xF04F0101  MOV	R1, #1
0x34B8	0x4855    LDR	R0, [PC, #340]
0x34BA	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1400 :: 		
; SDType start address is: 28 (R7)
0x34BC	0xF04F4780  MOV	R7, #1073741824
;__Lib_Mmc_SDIO.c, 1401 :: 		
0x34C0	0xE017    B	L___Lib_Mmc_SDIO_SD_PowerON162
L___Lib_Mmc_SDIO_SD_PowerON161:
;__Lib_Mmc_SDIO.c, 1405 :: 		
0x34C2	0x2100    MOVS	R1, #0
0x34C4	0x484D    LDR	R0, [PC, #308]
0x34C6	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1406 :: 		
0x34C8	0x2137    MOVS	R1, #55
0x34CA	0x484D    LDR	R0, [PC, #308]
0x34CC	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1407 :: 		
0x34CE	0xF04F0140  MOV	R1, #64
0x34D2	0x484C    LDR	R0, [PC, #304]
0x34D4	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1408 :: 		
0x34D6	0xF04F0100  MOV	R1, #0
0x34DA	0x484B    LDR	R0, [PC, #300]
0x34DC	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1409 :: 		
0x34DE	0xF44F6180  MOV	R1, #1024
0x34E2	0x484A    LDR	R0, [PC, #296]
0x34E4	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1410 :: 		
0x34E6	0x4845    LDR	R0, [PC, #276]
0x34E8	0xF7FDFBCC  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1411 :: 		
0x34EC	0x2037    MOVS	R0, #55
0x34EE	0xF7FDF9F7  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
; SDType end address is: 28 (R7)
;__Lib_Mmc_SDIO.c, 1412 :: 		
L___Lib_Mmc_SDIO_SD_PowerON162:
;__Lib_Mmc_SDIO.c, 1414 :: 		
; SDType start address is: 28 (R7)
0x34F2	0x2100    MOVS	R1, #0
0x34F4	0x4841    LDR	R0, [PC, #260]
0x34F6	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1415 :: 		
0x34F8	0x2137    MOVS	R1, #55
0x34FA	0x4841    LDR	R0, [PC, #260]
0x34FC	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1416 :: 		
0x34FE	0xF04F0140  MOV	R1, #64
0x3502	0x4840    LDR	R0, [PC, #256]
0x3504	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1417 :: 		
0x3506	0xF04F0100  MOV	R1, #0
0x350A	0x483F    LDR	R0, [PC, #252]
0x350C	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1418 :: 		
0x350E	0xF44F6180  MOV	R1, #1024
0x3512	0x483E    LDR	R0, [PC, #248]
0x3514	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1419 :: 		
0x3516	0x4839    LDR	R0, [PC, #228]
0x3518	0xF7FDFBB4  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1420 :: 		
0x351C	0x2037    MOVS	R0, #55
0x351E	0xF7FDF9DF  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
; errorstatus start address is: 8 (R2)
0x3522	0xB2C2    UXTB	R2, R0
;__Lib_Mmc_SDIO.c, 1425 :: 		
0x3524	0x2800    CMP	R0, #0
0x3526	0xF0408064  BNE	L___Lib_Mmc_SDIO_SD_PowerON427
; validvoltage end address is: 16 (R4)
; response end address is: 24 (R6)
; SDType end address is: 28 (R7)
; errorstatus end address is: 8 (R2)
; count end address is: 20 (R5)
0x352A	0xB2E0    UXTB	R0, R4
0x352C	0x463C    MOV	R4, R7
0x352E	0x4631    MOV	R1, R6
;__Lib_Mmc_SDIO.c, 1429 :: 		
L___Lib_Mmc_SDIO_SD_PowerON164:
; SDType start address is: 16 (R4)
; errorstatus start address is: 8 (R2)
; SDType start address is: 16 (R4)
; SDType end address is: 16 (R4)
; response start address is: 4 (R1)
; count start address is: 20 (R5)
; validvoltage start address is: 0 (R0)
0x3530	0x2800    CMP	R0, #0
0x3532	0xF0408050  BNE	L___Lib_Mmc_SDIO_SD_PowerON426
; SDType end address is: 16 (R4)
; validvoltage end address is: 0 (R0)
; SDType start address is: 16 (R4)
0x3536	0x4837    LDR	R0, [PC, #220]
0x3538	0x4285    CMP	R5, R0
0x353A	0xF080804C  BCS	L___Lib_Mmc_SDIO_SD_PowerON425
; errorstatus end address is: 8 (R2)
; response end address is: 4 (R1)
L___Lib_Mmc_SDIO_SD_PowerON424:
;__Lib_Mmc_SDIO.c, 1433 :: 		
0x353E	0x2100    MOVS	R1, #0
0x3540	0x482E    LDR	R0, [PC, #184]
0x3542	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1434 :: 		
0x3544	0x2137    MOVS	R1, #55
0x3546	0x482E    LDR	R0, [PC, #184]
0x3548	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1435 :: 		
0x354A	0xF04F0140  MOV	R1, #64
0x354E	0x482D    LDR	R0, [PC, #180]
0x3550	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1436 :: 		
0x3552	0xF04F0100  MOV	R1, #0
0x3556	0x482C    LDR	R0, [PC, #176]
0x3558	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1437 :: 		
0x355A	0xF44F6180  MOV	R1, #1024
0x355E	0x482B    LDR	R0, [PC, #172]
0x3560	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1438 :: 		
0x3562	0x4826    LDR	R0, [PC, #152]
0x3564	0xF7FDFB8E  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1440 :: 		
0x3568	0x2037    MOVS	R0, #55
0x356A	0xF7FDF9B9  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
; errorstatus start address is: 4 (R1)
0x356E	0xB2C1    UXTB	R1, R0
;__Lib_Mmc_SDIO.c, 1442 :: 		
0x3570	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_SD_PowerON168
; SDType end address is: 16 (R4)
; count end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 1444 :: 		
0x3572	0xB2C8    UXTB	R0, R1
; errorstatus end address is: 4 (R1)
0x3574	0xE03E    B	L_end_SD_PowerON
;__Lib_Mmc_SDIO.c, 1445 :: 		
L___Lib_Mmc_SDIO_SD_PowerON168:
;__Lib_Mmc_SDIO.c, 1446 :: 		
; count start address is: 20 (R5)
; SDType start address is: 16 (R4)
0x3576	0x4828    LDR	R0, [PC, #160]
0x3578	0xEA400104  ORR	R1, R0, R4, LSL #0
0x357C	0x481F    LDR	R0, [PC, #124]
0x357E	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1447 :: 		
0x3580	0x2129    MOVS	R1, #41
0x3582	0x481F    LDR	R0, [PC, #124]
0x3584	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1448 :: 		
0x3586	0xF04F0140  MOV	R1, #64
0x358A	0x481E    LDR	R0, [PC, #120]
0x358C	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1449 :: 		
0x358E	0xF04F0100  MOV	R1, #0
0x3592	0x481D    LDR	R0, [PC, #116]
0x3594	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1450 :: 		
0x3596	0xF44F6180  MOV	R1, #1024
0x359A	0x481C    LDR	R0, [PC, #112]
0x359C	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1451 :: 		
0x359E	0x4817    LDR	R0, [PC, #92]
0x35A0	0xF7FDFB70  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1453 :: 		
0x35A4	0xF7FDFD44  BL	__Lib_Mmc_SDIO_CmdResp3Error+0
; errorstatus start address is: 4 (R1)
0x35A8	0xB2C1    UXTB	R1, R0
;__Lib_Mmc_SDIO.c, 1454 :: 		
0x35AA	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_SD_PowerON169
; SDType end address is: 16 (R4)
; count end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 1456 :: 		
0x35AC	0xB2C8    UXTB	R0, R1
; errorstatus end address is: 4 (R1)
0x35AE	0xE021    B	L_end_SD_PowerON
;__Lib_Mmc_SDIO.c, 1457 :: 		
L___Lib_Mmc_SDIO_SD_PowerON169:
;__Lib_Mmc_SDIO.c, 1459 :: 		
; count start address is: 20 (R5)
; errorstatus start address is: 4 (R1)
; SDType start address is: 16 (R4)
0x35B0	0x481A    LDR	R0, [PC, #104]
; response start address is: 8 (R2)
0x35B2	0x6802    LDR	R2, [R0, #0]
;__Lib_Mmc_SDIO.c, 1460 :: 		
0x35B4	0x0FD0    LSRS	R0, R2, #31
0x35B6	0x2801    CMP	R0, #1
0x35B8	0xD102    BNE	L___Lib_Mmc_SDIO_SD_PowerON170
; ?FLOC____Lib_Mmc_SDIO_SD_PowerON?T282 start address is: 0 (R0)
0x35BA	0x2001    MOVS	R0, #1
0x35BC	0xB240    SXTB	R0, R0
; ?FLOC____Lib_Mmc_SDIO_SD_PowerON?T282 end address is: 0 (R0)
0x35BE	0xE001    B	L___Lib_Mmc_SDIO_SD_PowerON171
L___Lib_Mmc_SDIO_SD_PowerON170:
; ?FLOC____Lib_Mmc_SDIO_SD_PowerON?T282 start address is: 0 (R0)
0x35C0	0x2000    MOVS	R0, #0
0x35C2	0xB240    SXTB	R0, R0
; ?FLOC____Lib_Mmc_SDIO_SD_PowerON?T282 end address is: 0 (R0)
L___Lib_Mmc_SDIO_SD_PowerON171:
; ?FLOC____Lib_Mmc_SDIO_SD_PowerON?T282 start address is: 0 (R0)
; validvoltage start address is: 12 (R3)
0x35C4	0xB2C3    UXTB	R3, R0
; ?FLOC____Lib_Mmc_SDIO_SD_PowerON?T282 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1461 :: 		
0x35C6	0x1C6D    ADDS	R5, R5, #1
;__Lib_Mmc_SDIO.c, 1462 :: 		
0x35C8	0xF88D1004  STRB	R1, [SP, #4]
; SDType end address is: 16 (R4)
; errorstatus end address is: 4 (R1)
; response end address is: 8 (R2)
; validvoltage end address is: 12 (R3)
0x35CC	0xB2D8    UXTB	R0, R3
0x35CE	0x4611    MOV	R1, R2
0x35D0	0xF89D2004  LDRB	R2, [SP, #4]
0x35D4	0xE7AC    B	L___Lib_Mmc_SDIO_SD_PowerON164
;__Lib_Mmc_SDIO.c, 1429 :: 		
L___Lib_Mmc_SDIO_SD_PowerON426:
; response start address is: 4 (R1)
; errorstatus start address is: 8 (R2)
L___Lib_Mmc_SDIO_SD_PowerON425:
;__Lib_Mmc_SDIO.c, 1463 :: 		
0x35D6	0x480F    LDR	R0, [PC, #60]
0x35D8	0x4285    CMP	R5, R0
0x35DA	0xD301    BCC	L___Lib_Mmc_SDIO_SD_PowerON172
; errorstatus end address is: 8 (R2)
; response end address is: 4 (R1)
; count end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 1466 :: 		
0x35DC	0x2001    MOVS	R0, #1
0x35DE	0xE009    B	L_end_SD_PowerON
;__Lib_Mmc_SDIO.c, 1467 :: 		
L___Lib_Mmc_SDIO_SD_PowerON172:
;__Lib_Mmc_SDIO.c, 1469 :: 		
; response start address is: 4 (R1)
; errorstatus start address is: 8 (R2)
0x35E0	0xF0014080  AND	R0, R1, #1073741824
; response end address is: 4 (R1)
0x35E4	0xB118    CBZ	R0, L___Lib_Mmc_SDIO_SD_PowerON173
;__Lib_Mmc_SDIO.c, 1471 :: 		
0x35E6	0xF04F0102  MOV	R1, #2
0x35EA	0x4809    LDR	R0, [PC, #36]
0x35EC	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1472 :: 		
L___Lib_Mmc_SDIO_SD_PowerON173:
;__Lib_Mmc_SDIO.c, 1474 :: 		
0x35EE	0xB2D0    UXTB	R0, R2
0x35F0	0xE000    B	L___Lib_Mmc_SDIO_SD_PowerON163
; errorstatus end address is: 8 (R2)
L___Lib_Mmc_SDIO_SD_PowerON427:
;__Lib_Mmc_SDIO.c, 1425 :: 		
0x35F2	0xB2D0    UXTB	R0, R2
;__Lib_Mmc_SDIO.c, 1474 :: 		
L___Lib_Mmc_SDIO_SD_PowerON163:
;__Lib_Mmc_SDIO.c, 1475 :: 		
; errorstatus start address is: 0 (R0)
; errorstatus end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1476 :: 		
L_end_SD_PowerON:
0x35F4	0xF8DDE000  LDR	LR, [SP, #0]
0x35F8	0xB002    ADD	SP, SP, #8
0x35FA	0x4770    BX	LR
0x35FC	0x2D7C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+0
0x3600	0x2D802000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+4
0x3604	0x2D842000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+8
0x3608	0x2D882000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+12
0x360C	0x2D8C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+16
0x3610	0x03242000  	__Lib_Mmc_SDIO_CardTypeSdio+0
0x3614	0xFFFF0000  	#65535
0x3618	0x00008010  	#-2146435072
0x361C	0x2C144001  	SDIO_RESP1+0
; end of __Lib_Mmc_SDIO_SD_PowerON
_SDIO_SetPowerState:
;__Lib_SDIO.c, 542 :: 		
; powerState start address is: 0 (R0)
0x0B40	0xB081    SUB	SP, SP, #4
; powerState end address is: 0 (R0)
; powerState start address is: 0 (R0)
;__Lib_SDIO.c, 544 :: 		
0x0B42	0x4902    LDR	R1, [PC, #8]
0x0B44	0x6008    STR	R0, [R1, #0]
; powerState end address is: 0 (R0)
;__Lib_SDIO.c, 545 :: 		
L_end_SDIO_SetPowerState:
0x0B46	0xB001    ADD	SP, SP, #4
0x0B48	0x4770    BX	LR
0x0B4A	0xBF00    NOP
0x0B4C	0x2C004001  	SDIO_POWER+0
; end of _SDIO_SetPowerState
_SDIO_ClockCmd:
;__Lib_SDIO.c, 519 :: 		
; newState start address is: 0 (R0)
0x0B30	0xB081    SUB	SP, SP, #4
; newState end address is: 0 (R0)
; newState start address is: 0 (R0)
;__Lib_SDIO.c, 521 :: 		
0x0B32	0x4902    LDR	R1, [PC, #8]
0x0B34	0x6008    STR	R0, [R1, #0]
; newState end address is: 0 (R0)
;__Lib_SDIO.c, 522 :: 		
L_end_SDIO_ClockCmd:
0x0B36	0xB001    ADD	SP, SP, #4
0x0B38	0x4770    BX	LR
0x0B3A	0xBF00    NOP
0x0B3C	0x80A04225  	SDIO_CLKCR+0
; end of _SDIO_ClockCmd
_SDIO_SendCommand:
;__Lib_SDIO.c, 593 :: 		
; SDIO_CmdInitStruct start address is: 0 (R0)
0x0C84	0xB081    SUB	SP, SP, #4
; SDIO_CmdInitStruct end address is: 0 (R0)
; SDIO_CmdInitStruct start address is: 0 (R0)
;__Lib_SDIO.c, 594 :: 		
;__Lib_SDIO.c, 598 :: 		
0x0C86	0x6802    LDR	R2, [R0, #0]
0x0C88	0x490D    LDR	R1, [PC, #52]
0x0C8A	0x600A    STR	R2, [R1, #0]
;__Lib_SDIO.c, 602 :: 		
0x0C8C	0x490D    LDR	R1, [PC, #52]
; tmpreg start address is: 8 (R2)
0x0C8E	0x680A    LDR	R2, [R1, #0]
;__Lib_SDIO.c, 604 :: 		
0x0C90	0x490D    LDR	R1, [PC, #52]
0x0C92	0xEA020301  AND	R3, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_SDIO.c, 609 :: 		
0x0C96	0x1D01    ADDS	R1, R0, #4
0x0C98	0x680A    LDR	R2, [R1, #0]
0x0C9A	0xF2000108  ADDW	R1, R0, #8
0x0C9E	0x6809    LDR	R1, [R1, #0]
0x0CA0	0x430A    ORRS	R2, R1
;__Lib_SDIO.c, 610 :: 		
0x0CA2	0xF200010C  ADDW	R1, R0, #12
0x0CA6	0x6809    LDR	R1, [R1, #0]
0x0CA8	0x430A    ORRS	R2, R1
0x0CAA	0xF2000110  ADDW	R1, R0, #16
; SDIO_CmdInitStruct end address is: 0 (R0)
0x0CAE	0x6809    LDR	R1, [R1, #0]
0x0CB0	0xEA420101  ORR	R1, R2, R1, LSL #0
0x0CB4	0xEA430201  ORR	R2, R3, R1, LSL #0
;__Lib_SDIO.c, 613 :: 		
0x0CB8	0x4902    LDR	R1, [PC, #8]
0x0CBA	0x600A    STR	R2, [R1, #0]
;__Lib_SDIO.c, 614 :: 		
L_end_SDIO_SendCommand:
0x0CBC	0xB001    ADD	SP, SP, #4
0x0CBE	0x4770    BX	LR
0x0CC0	0x2C084001  	SDIO_ARG+0
0x0CC4	0x2C0C4001  	SDIO_CMD+0
0x0CC8	0xF800FFFF  	#-2048
; end of _SDIO_SendCommand
__Lib_Mmc_SDIO_CmdError:
;__Lib_Mmc_SDIO.c, 960 :: 		
0x08A8	0xB081    SUB	SP, SP, #4
0x08AA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 964 :: 		
; timeout start address is: 8 (R2)
0x08AE	0x4A0A    LDR	R2, [PC, #40]
; timeout end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 966 :: 		
L___Lib_Mmc_SDIO_CmdError89:
; timeout start address is: 8 (R2)
0x08B0	0x2A00    CMP	R2, #0
0x08B2	0xD906    BLS	L___Lib_Mmc_SDIO_CmdError393
0x08B4	0xF04F0080  MOV	R0, #128
0x08B8	0xF7FFFE20  BL	_SDIO_GetFlagStatus+0
0x08BC	0xB908    CBNZ	R0, L___Lib_Mmc_SDIO_CmdError392
L___Lib_Mmc_SDIO_CmdError391:
;__Lib_Mmc_SDIO.c, 968 :: 		
0x08BE	0x1E52    SUBS	R2, R2, #1
;__Lib_Mmc_SDIO.c, 969 :: 		
0x08C0	0xE7F6    B	L___Lib_Mmc_SDIO_CmdError89
;__Lib_Mmc_SDIO.c, 966 :: 		
L___Lib_Mmc_SDIO_CmdError393:
L___Lib_Mmc_SDIO_CmdError392:
;__Lib_Mmc_SDIO.c, 971 :: 		
0x08C2	0xB90A    CBNZ	R2, L___Lib_Mmc_SDIO_CmdError93
; timeout end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 973 :: 		
0x08C4	0x2001    MOVS	R0, #1
0x08C6	0xE003    B	L_end_CmdError
;__Lib_Mmc_SDIO.c, 974 :: 		
L___Lib_Mmc_SDIO_CmdError93:
;__Lib_Mmc_SDIO.c, 977 :: 		
0x08C8	0x4804    LDR	R0, [PC, #16]
0x08CA	0xF7FFFDFF  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 979 :: 		
0x08CE	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 980 :: 		
L_end_CmdError:
0x08D0	0xF8DDE000  LDR	LR, [SP, #0]
0x08D4	0xB001    ADD	SP, SP, #4
0x08D6	0x4770    BX	LR
0x08D8	0x27100000  	#10000
0x08DC	0x05FF0000  	#1535
; end of __Lib_Mmc_SDIO_CmdError
_SDIO_GetFlagStatus:
;__Lib_SDIO.c, 1127 :: 		
; flag start address is: 0 (R0)
0x04FC	0xB081    SUB	SP, SP, #4
; flag end address is: 0 (R0)
; flag start address is: 0 (R0)
;__Lib_SDIO.c, 1129 :: 		
;__Lib_SDIO.c, 1131 :: 		
0x04FE	0x4904    LDR	R1, [PC, #16]
0x0500	0x6809    LDR	R1, [R1, #0]
0x0502	0x4001    ANDS	R1, R0
; flag end address is: 0 (R0)
0x0504	0xB109    CBZ	R1, L_SDIO_GetFlagStatus3
;__Lib_SDIO.c, 1133 :: 		
; bitstatus start address is: 0 (R0)
0x0506	0x2001    MOVS	R0, #1
;__Lib_SDIO.c, 1134 :: 		
; bitstatus end address is: 0 (R0)
0x0508	0xE000    B	L_SDIO_GetFlagStatus4
L_SDIO_GetFlagStatus3:
;__Lib_SDIO.c, 1137 :: 		
; bitstatus start address is: 0 (R0)
0x050A	0x2000    MOVS	R0, #0
; bitstatus end address is: 0 (R0)
;__Lib_SDIO.c, 1138 :: 		
L_SDIO_GetFlagStatus4:
;__Lib_SDIO.c, 1139 :: 		
; bitstatus start address is: 0 (R0)
; bitstatus end address is: 0 (R0)
;__Lib_SDIO.c, 1140 :: 		
L_end_SDIO_GetFlagStatus:
0x050C	0xB001    ADD	SP, SP, #4
0x050E	0x4770    BX	LR
0x0510	0x2C344001  	SDIO_STA+0
; end of _SDIO_GetFlagStatus
_SDIO_ClearFlag:
;__Lib_SDIO.c, 1165 :: 		
; flags start address is: 0 (R0)
0x04CC	0xB081    SUB	SP, SP, #4
; flags end address is: 0 (R0)
; flags start address is: 0 (R0)
;__Lib_SDIO.c, 1167 :: 		
0x04CE	0x4902    LDR	R1, [PC, #8]
0x04D0	0x6008    STR	R0, [R1, #0]
; flags end address is: 0 (R0)
;__Lib_SDIO.c, 1168 :: 		
L_end_SDIO_ClearFlag:
0x04D2	0xB001    ADD	SP, SP, #4
0x04D4	0x4770    BX	LR
0x04D6	0xBF00    NOP
0x04D8	0x2C384001  	SDIO_ICR+0
; end of _SDIO_ClearFlag
__Lib_Mmc_SDIO_CmdResp7Error:
;__Lib_Mmc_SDIO.c, 994 :: 		
0x0A9C	0xB082    SUB	SP, SP, #8
0x0A9E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 998 :: 		
; timeout start address is: 4 (R1)
0x0AA2	0x4913    LDR	R1, [PC, #76]
;__Lib_Mmc_SDIO.c, 1000 :: 		
0x0AA4	0x4813    LDR	R0, [PC, #76]
; status start address is: 8 (R2)
0x0AA6	0x6802    LDR	R2, [R0, #0]
; timeout end address is: 4 (R1)
; status end address is: 8 (R2)
0x0AA8	0x9201    STR	R2, [SP, #4]
0x0AAA	0x460A    MOV	R2, R1
0x0AAC	0x9901    LDR	R1, [SP, #4]
;__Lib_Mmc_SDIO.c, 1002 :: 		
L___Lib_Mmc_SDIO_CmdResp7Error94:
; status start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x0AAE	0xF0010045  AND	R0, R1, #69
0x0AB2	0xB928    CBNZ	R0, L___Lib_Mmc_SDIO_CmdResp7Error397
0x0AB4	0x2A00    CMP	R2, #0
0x0AB6	0xD903    BLS	L___Lib_Mmc_SDIO_CmdResp7Error396
; status end address is: 4 (R1)
L___Lib_Mmc_SDIO_CmdResp7Error395:
;__Lib_Mmc_SDIO.c, 1004 :: 		
0x0AB8	0x1E52    SUBS	R2, R2, #1
;__Lib_Mmc_SDIO.c, 1005 :: 		
0x0ABA	0x480E    LDR	R0, [PC, #56]
; status start address is: 4 (R1)
0x0ABC	0x6801    LDR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1006 :: 		
0x0ABE	0xE7F6    B	L___Lib_Mmc_SDIO_CmdResp7Error94
;__Lib_Mmc_SDIO.c, 1002 :: 		
L___Lib_Mmc_SDIO_CmdResp7Error397:
L___Lib_Mmc_SDIO_CmdResp7Error396:
;__Lib_Mmc_SDIO.c, 1008 :: 		
0x0AC0	0xB11A    CBZ	R2, L___Lib_Mmc_SDIO_CmdResp7Error399
; timeout end address is: 8 (R2)
0x0AC2	0xF0010004  AND	R0, R1, #4
0x0AC6	0xB900    CBNZ	R0, L___Lib_Mmc_SDIO_CmdResp7Error398
0x0AC8	0xE005    B	L___Lib_Mmc_SDIO_CmdResp7Error100
; status end address is: 4 (R1)
L___Lib_Mmc_SDIO_CmdResp7Error399:
L___Lib_Mmc_SDIO_CmdResp7Error398:
;__Lib_Mmc_SDIO.c, 1012 :: 		
0x0ACA	0xF04F0004  MOV	R0, #4
0x0ACE	0xF7FFFCFD  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1013 :: 		
0x0AD2	0x2001    MOVS	R0, #1
0x0AD4	0xE007    B	L_end_CmdResp7Error
;__Lib_Mmc_SDIO.c, 1014 :: 		
L___Lib_Mmc_SDIO_CmdResp7Error100:
;__Lib_Mmc_SDIO.c, 1016 :: 		
; status start address is: 4 (R1)
0x0AD6	0xF0010040  AND	R0, R1, #64
; status end address is: 4 (R1)
0x0ADA	0xB118    CBZ	R0, L___Lib_Mmc_SDIO_CmdResp7Error101
;__Lib_Mmc_SDIO.c, 1020 :: 		
0x0ADC	0xF04F0040  MOV	R0, #64
0x0AE0	0xF7FFFCF4  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1022 :: 		
L___Lib_Mmc_SDIO_CmdResp7Error101:
;__Lib_Mmc_SDIO.c, 1023 :: 		
0x0AE4	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 1024 :: 		
L_end_CmdResp7Error:
0x0AE6	0xF8DDE000  LDR	LR, [SP, #0]
0x0AEA	0xB002    ADD	SP, SP, #8
0x0AEC	0x4770    BX	LR
0x0AEE	0xBF00    NOP
0x0AF0	0x27100000  	#10000
0x0AF4	0x2C344001  	SDIO_STA+0
; end of __Lib_Mmc_SDIO_CmdResp7Error
__Lib_Mmc_SDIO_CmdResp1Error:
;__Lib_Mmc_SDIO.c, 1038 :: 		
; cmd start address is: 0 (R0)
0x08E0	0xB082    SUB	SP, SP, #8
0x08E2	0xF8CDE000  STR	LR, [SP, #0]
; cmd end address is: 0 (R0)
; cmd start address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1043 :: 		
; timeout start address is: 8 (R2)
0x08E6	0x4A47    LDR	R2, [PC, #284]
;__Lib_Mmc_SDIO.c, 1045 :: 		
0x08E8	0x4947    LDR	R1, [PC, #284]
; status start address is: 12 (R3)
0x08EA	0x680B    LDR	R3, [R1, #0]
; cmd end address is: 0 (R0)
; timeout end address is: 8 (R2)
; status end address is: 12 (R3)
0x08EC	0x9301    STR	R3, [SP, #4]
0x08EE	0x4613    MOV	R3, R2
0x08F0	0xB2C2    UXTB	R2, R0
0x08F2	0x9801    LDR	R0, [SP, #4]
;__Lib_Mmc_SDIO.c, 1047 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error102:
; status start address is: 0 (R0)
; timeout start address is: 12 (R3)
; cmd start address is: 8 (R2)
0x08F4	0xF0000145  AND	R1, R0, #69
0x08F8	0xB929    CBNZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error403
0x08FA	0x2B00    CMP	R3, #0
0x08FC	0xD903    BLS	L___Lib_Mmc_SDIO_CmdResp1Error402
; status end address is: 0 (R0)
L___Lib_Mmc_SDIO_CmdResp1Error401:
;__Lib_Mmc_SDIO.c, 1049 :: 		
0x08FE	0x1E5B    SUBS	R3, R3, #1
;__Lib_Mmc_SDIO.c, 1050 :: 		
0x0900	0x4941    LDR	R1, [PC, #260]
; status start address is: 0 (R0)
0x0902	0x6808    LDR	R0, [R1, #0]
;__Lib_Mmc_SDIO.c, 1051 :: 		
0x0904	0xE7F6    B	L___Lib_Mmc_SDIO_CmdResp1Error102
;__Lib_Mmc_SDIO.c, 1047 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error403:
L___Lib_Mmc_SDIO_CmdResp1Error402:
;__Lib_Mmc_SDIO.c, 1053 :: 		
0x0906	0xF0000104  AND	R1, R0, #4
0x090A	0xB909    CBNZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error405
0x090C	0xB103    CBZ	R3, L___Lib_Mmc_SDIO_CmdResp1Error404
; timeout end address is: 12 (R3)
0x090E	0xE005    B	L___Lib_Mmc_SDIO_CmdResp1Error108
; cmd end address is: 8 (R2)
; status end address is: 0 (R0)
L___Lib_Mmc_SDIO_CmdResp1Error405:
L___Lib_Mmc_SDIO_CmdResp1Error404:
;__Lib_Mmc_SDIO.c, 1056 :: 		
0x0910	0xF04F0004  MOV	R0, #4
0x0914	0xF7FFFDDA  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1057 :: 		
0x0918	0x2001    MOVS	R0, #1
0x091A	0xE06F    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1058 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error108:
;__Lib_Mmc_SDIO.c, 1059 :: 		
; status start address is: 0 (R0)
; cmd start address is: 8 (R2)
0x091C	0xF0000101  AND	R1, R0, #1
; status end address is: 0 (R0)
0x0920	0xB129    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error110
; cmd end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 1062 :: 		
0x0922	0xF04F0001  MOV	R0, #1
0x0926	0xF7FFFDD1  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1063 :: 		
0x092A	0x2001    MOVS	R0, #1
0x092C	0xE066    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1064 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error110:
;__Lib_Mmc_SDIO.c, 1067 :: 		
; cmd start address is: 8 (R2)
0x092E	0xF7FFFD75  BL	_SDIO_GetCommandResponse+0
0x0932	0x4290    CMP	R0, R2
0x0934	0xD001    BEQ	L___Lib_Mmc_SDIO_CmdResp1Error111
; cmd end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 1070 :: 		
0x0936	0x2001    MOVS	R0, #1
0x0938	0xE060    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1071 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error111:
;__Lib_Mmc_SDIO.c, 1074 :: 		
0x093A	0x4834    LDR	R0, [PC, #208]
0x093C	0xF7FFFDC6  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1077 :: 		
0x0940	0x4933    LDR	R1, [PC, #204]
; response_r1 start address is: 0 (R0)
0x0942	0x6808    LDR	R0, [R1, #0]
;__Lib_Mmc_SDIO.c, 1079 :: 		
0x0944	0x4933    LDR	R1, [PC, #204]
0x0946	0xEA000101  AND	R1, R0, R1, LSL #0
0x094A	0xB909    CBNZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error112
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1081 :: 		
0x094C	0x2000    MOVS	R0, #0
0x094E	0xE055    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1082 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error112:
;__Lib_Mmc_SDIO.c, 1084 :: 		
; response_r1 start address is: 0 (R0)
0x0950	0xF0004100  AND	R1, R0, #-2147483648
0x0954	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error113
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1086 :: 		
0x0956	0x2001    MOVS	R0, #1
0x0958	0xE050    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1087 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error113:
;__Lib_Mmc_SDIO.c, 1089 :: 		
; response_r1 start address is: 0 (R0)
0x095A	0xF0004180  AND	R1, R0, #1073741824
0x095E	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error114
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1091 :: 		
0x0960	0x2001    MOVS	R0, #1
0x0962	0xE04B    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1092 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error114:
;__Lib_Mmc_SDIO.c, 1094 :: 		
; response_r1 start address is: 0 (R0)
0x0964	0xF0005100  AND	R1, R0, #536870912
0x0968	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error115
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1096 :: 		
0x096A	0x2001    MOVS	R0, #1
0x096C	0xE046    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1097 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error115:
;__Lib_Mmc_SDIO.c, 1099 :: 		
; response_r1 start address is: 0 (R0)
0x096E	0xF0005180  AND	R1, R0, #268435456
0x0972	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error116
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1101 :: 		
0x0974	0x2001    MOVS	R0, #1
0x0976	0xE041    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1102 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error116:
;__Lib_Mmc_SDIO.c, 1104 :: 		
; response_r1 start address is: 0 (R0)
0x0978	0xF0006100  AND	R1, R0, #134217728
0x097C	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error117
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1106 :: 		
0x097E	0x2001    MOVS	R0, #1
0x0980	0xE03C    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1107 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error117:
;__Lib_Mmc_SDIO.c, 1109 :: 		
; response_r1 start address is: 0 (R0)
0x0982	0xF0006180  AND	R1, R0, #67108864
0x0986	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error118
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1111 :: 		
0x0988	0x2001    MOVS	R0, #1
0x098A	0xE037    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1112 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error118:
;__Lib_Mmc_SDIO.c, 1114 :: 		
; response_r1 start address is: 0 (R0)
0x098C	0xF0007180  AND	R1, R0, #16777216
0x0990	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error119
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1116 :: 		
0x0992	0x2001    MOVS	R0, #1
0x0994	0xE032    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1117 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error119:
;__Lib_Mmc_SDIO.c, 1119 :: 		
; response_r1 start address is: 0 (R0)
0x0996	0xF4000100  AND	R1, R0, #8388608
0x099A	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error120
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1121 :: 		
0x099C	0x2001    MOVS	R0, #1
0x099E	0xE02D    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1122 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error120:
;__Lib_Mmc_SDIO.c, 1124 :: 		
; response_r1 start address is: 0 (R0)
0x09A0	0xF4000180  AND	R1, R0, #4194304
0x09A4	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error121
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1126 :: 		
0x09A6	0x2001    MOVS	R0, #1
0x09A8	0xE028    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1127 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error121:
;__Lib_Mmc_SDIO.c, 1129 :: 		
; response_r1 start address is: 0 (R0)
0x09AA	0xF4001100  AND	R1, R0, #2097152
0x09AE	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error122
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1131 :: 		
0x09B0	0x2001    MOVS	R0, #1
0x09B2	0xE023    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1132 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error122:
;__Lib_Mmc_SDIO.c, 1134 :: 		
; response_r1 start address is: 0 (R0)
0x09B4	0xF4001180  AND	R1, R0, #1048576
0x09B8	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error123
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1136 :: 		
0x09BA	0x2001    MOVS	R0, #1
0x09BC	0xE01E    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1137 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error123:
;__Lib_Mmc_SDIO.c, 1139 :: 		
; response_r1 start address is: 0 (R0)
0x09BE	0xF4002100  AND	R1, R0, #524288
0x09C2	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error124
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1141 :: 		
0x09C4	0x2001    MOVS	R0, #1
0x09C6	0xE019    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1142 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error124:
;__Lib_Mmc_SDIO.c, 1144 :: 		
; response_r1 start address is: 0 (R0)
0x09C8	0xF4002180  AND	R1, R0, #262144
0x09CC	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error125
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1146 :: 		
0x09CE	0x2001    MOVS	R0, #1
0x09D0	0xE014    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1147 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error125:
;__Lib_Mmc_SDIO.c, 1149 :: 		
; response_r1 start address is: 0 (R0)
0x09D2	0xF4003100  AND	R1, R0, #131072
0x09D6	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error126
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1151 :: 		
0x09D8	0x2001    MOVS	R0, #1
0x09DA	0xE00F    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1152 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error126:
;__Lib_Mmc_SDIO.c, 1154 :: 		
; response_r1 start address is: 0 (R0)
0x09DC	0xF4003180  AND	R1, R0, #65536
0x09E0	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error127
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1156 :: 		
0x09E2	0x2001    MOVS	R0, #1
0x09E4	0xE00A    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1157 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error127:
;__Lib_Mmc_SDIO.c, 1164 :: 		
; response_r1 start address is: 0 (R0)
0x09E6	0xF4004180  AND	R1, R0, #16384
0x09EA	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error128
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1166 :: 		
0x09EC	0x2001    MOVS	R0, #1
0x09EE	0xE005    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1167 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error128:
;__Lib_Mmc_SDIO.c, 1174 :: 		
; response_r1 start address is: 0 (R0)
0x09F0	0xF0000108  AND	R1, R0, #8
; response_r1 end address is: 0 (R0)
0x09F4	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_CmdResp1Error129
;__Lib_Mmc_SDIO.c, 1176 :: 		
0x09F6	0x2001    MOVS	R0, #1
0x09F8	0xE000    B	L_end_CmdResp1Error
;__Lib_Mmc_SDIO.c, 1177 :: 		
L___Lib_Mmc_SDIO_CmdResp1Error129:
;__Lib_Mmc_SDIO.c, 1178 :: 		
0x09FA	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 1179 :: 		
L_end_CmdResp1Error:
0x09FC	0xF8DDE000  LDR	LR, [SP, #0]
0x0A00	0xB002    ADD	SP, SP, #8
0x0A02	0x4770    BX	LR
0x0A04	0x27100000  	#10000
0x0A08	0x2C344001  	SDIO_STA+0
0x0A0C	0x05FF0000  	#1535
0x0A10	0x2C144001  	SDIO_RESP1+0
0x0A14	0xE008FDFF  	#-33562616
; end of __Lib_Mmc_SDIO_CmdResp1Error
_SDIO_GetCommandResponse:
;__Lib_SDIO.c, 644 :: 		
0x041C	0xB081    SUB	SP, SP, #4
;__Lib_SDIO.c, 645 :: 		
0x041E	0x4802    LDR	R0, [PC, #8]
0x0420	0x6800    LDR	R0, [R0, #0]
;__Lib_SDIO.c, 646 :: 		
L_end_SDIO_GetCommandResponse:
0x0422	0xB001    ADD	SP, SP, #4
0x0424	0x4770    BX	LR
0x0426	0xBF00    NOP
0x0428	0x2C104001  	SDIO_RESPCMD+0
; end of _SDIO_GetCommandResponse
__Lib_Mmc_SDIO_CmdResp3Error:
;__Lib_Mmc_SDIO.c, 1193 :: 		
0x1030	0xB082    SUB	SP, SP, #8
0x1032	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 1197 :: 		
; timeout start address is: 4 (R1)
0x1036	0x4911    LDR	R1, [PC, #68]
;__Lib_Mmc_SDIO.c, 1199 :: 		
0x1038	0x4811    LDR	R0, [PC, #68]
; status start address is: 8 (R2)
0x103A	0x6802    LDR	R2, [R0, #0]
; timeout end address is: 4 (R1)
; status end address is: 8 (R2)
0x103C	0x9201    STR	R2, [SP, #4]
0x103E	0x460A    MOV	R2, R1
0x1040	0x9901    LDR	R1, [SP, #4]
;__Lib_Mmc_SDIO.c, 1201 :: 		
L___Lib_Mmc_SDIO_CmdResp3Error130:
; status start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x1042	0xF0010045  AND	R0, R1, #69
0x1046	0xB928    CBNZ	R0, L___Lib_Mmc_SDIO_CmdResp3Error409
0x1048	0x2A00    CMP	R2, #0
0x104A	0xD903    BLS	L___Lib_Mmc_SDIO_CmdResp3Error408
; status end address is: 4 (R1)
L___Lib_Mmc_SDIO_CmdResp3Error407:
;__Lib_Mmc_SDIO.c, 1203 :: 		
0x104C	0x1E52    SUBS	R2, R2, #1
;__Lib_Mmc_SDIO.c, 1204 :: 		
0x104E	0x480C    LDR	R0, [PC, #48]
; status start address is: 4 (R1)
0x1050	0x6801    LDR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1205 :: 		
0x1052	0xE7F6    B	L___Lib_Mmc_SDIO_CmdResp3Error130
;__Lib_Mmc_SDIO.c, 1201 :: 		
L___Lib_Mmc_SDIO_CmdResp3Error409:
L___Lib_Mmc_SDIO_CmdResp3Error408:
;__Lib_Mmc_SDIO.c, 1207 :: 		
0x1054	0xB11A    CBZ	R2, L___Lib_Mmc_SDIO_CmdResp3Error411
; timeout end address is: 8 (R2)
0x1056	0xF0010004  AND	R0, R1, #4
; status end address is: 4 (R1)
0x105A	0xB900    CBNZ	R0, L___Lib_Mmc_SDIO_CmdResp3Error410
0x105C	0xE005    B	L___Lib_Mmc_SDIO_CmdResp3Error136
L___Lib_Mmc_SDIO_CmdResp3Error411:
L___Lib_Mmc_SDIO_CmdResp3Error410:
;__Lib_Mmc_SDIO.c, 1210 :: 		
0x105E	0xF04F0004  MOV	R0, #4
0x1062	0xF7FFFA33  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1211 :: 		
0x1066	0x2001    MOVS	R0, #1
0x1068	0xE003    B	L_end_CmdResp3Error
;__Lib_Mmc_SDIO.c, 1212 :: 		
L___Lib_Mmc_SDIO_CmdResp3Error136:
;__Lib_Mmc_SDIO.c, 1214 :: 		
0x106A	0x4806    LDR	R0, [PC, #24]
0x106C	0xF7FFFA2E  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1215 :: 		
0x1070	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 1216 :: 		
L_end_CmdResp3Error:
0x1072	0xF8DDE000  LDR	LR, [SP, #0]
0x1076	0xB002    ADD	SP, SP, #8
0x1078	0x4770    BX	LR
0x107A	0xBF00    NOP
0x107C	0x27100000  	#10000
0x1080	0x2C344001  	SDIO_STA+0
0x1084	0x05FF0000  	#1535
; end of __Lib_Mmc_SDIO_CmdResp3Error
__Lib_Mmc_SDIO_SD_InitializeCards:
;__Lib_Mmc_SDIO.c, 1511 :: 		
0x3248	0xB082    SUB	SP, SP, #8
0x324A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 1512 :: 		
;__Lib_Mmc_SDIO.c, 1513 :: 		
0x324E	0xF2400001  MOVW	R0, #1
0x3252	0xF8AD0004  STRH	R0, [SP, #4]
;__Lib_Mmc_SDIO.c, 1515 :: 		
0x3256	0xF7FDFD81  BL	_SDIO_GetPowerState+0
0x325A	0xB908    CBNZ	R0, L___Lib_Mmc_SDIO_SD_InitializeCards174
;__Lib_Mmc_SDIO.c, 1517 :: 		
0x325C	0x2001    MOVS	R0, #1
0x325E	0xE094    B	L_end_SD_InitializeCards
;__Lib_Mmc_SDIO.c, 1518 :: 		
L___Lib_Mmc_SDIO_SD_InitializeCards174:
;__Lib_Mmc_SDIO.c, 1520 :: 		
0x3260	0x484C    LDR	R0, [PC, #304]
0x3262	0x6800    LDR	R0, [R0, #0]
0x3264	0x2804    CMP	R0, #4
0x3266	0xD02C    BEQ	L___Lib_Mmc_SDIO_SD_InitializeCards175
;__Lib_Mmc_SDIO.c, 1523 :: 		
0x3268	0x2100    MOVS	R1, #0
0x326A	0x484B    LDR	R0, [PC, #300]
0x326C	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1524 :: 		
0x326E	0x2102    MOVS	R1, #2
0x3270	0x484A    LDR	R0, [PC, #296]
0x3272	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1525 :: 		
0x3274	0xF04F01C0  MOV	R1, #192
0x3278	0x4849    LDR	R0, [PC, #292]
0x327A	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1526 :: 		
0x327C	0xF04F0100  MOV	R1, #0
0x3280	0x4848    LDR	R0, [PC, #288]
0x3282	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1527 :: 		
0x3284	0xF44F6180  MOV	R1, #1024
0x3288	0x4847    LDR	R0, [PC, #284]
0x328A	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1528 :: 		
0x328C	0x4842    LDR	R0, [PC, #264]
0x328E	0xF7FDFCF9  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1530 :: 		
0x3292	0xF7FDFD6D  BL	__Lib_Mmc_SDIO_CmdResp2Error+0
0x3296	0x2801    CMP	R0, #1
0x3298	0xD101    BNE	L___Lib_Mmc_SDIO_SD_InitializeCards176
;__Lib_Mmc_SDIO.c, 1532 :: 		
0x329A	0x2001    MOVS	R0, #1
0x329C	0xE075    B	L_end_SD_InitializeCards
;__Lib_Mmc_SDIO.c, 1533 :: 		
L___Lib_Mmc_SDIO_SD_InitializeCards176:
;__Lib_Mmc_SDIO.c, 1535 :: 		
0x329E	0x4843    LDR	R0, [PC, #268]
0x32A0	0x6801    LDR	R1, [R0, #0]
0x32A2	0x4843    LDR	R0, [PC, #268]
0x32A4	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1536 :: 		
0x32A6	0x4843    LDR	R0, [PC, #268]
0x32A8	0x6801    LDR	R1, [R0, #0]
0x32AA	0x4843    LDR	R0, [PC, #268]
0x32AC	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1537 :: 		
0x32AE	0x4843    LDR	R0, [PC, #268]
0x32B0	0x6801    LDR	R1, [R0, #0]
0x32B2	0x4843    LDR	R0, [PC, #268]
0x32B4	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1538 :: 		
0x32B6	0x4843    LDR	R0, [PC, #268]
0x32B8	0x6800    LDR	R0, [R0, #0]
0x32BA	0xF0400101  ORR	R1, R0, #1
0x32BE	0x4842    LDR	R0, [PC, #264]
0x32C0	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1539 :: 		
L___Lib_Mmc_SDIO_SD_InitializeCards175:
;__Lib_Mmc_SDIO.c, 1540 :: 		
0x32C2	0x4834    LDR	R0, [PC, #208]
0x32C4	0x6800    LDR	R0, [R0, #0]
0x32C6	0xB160    CBZ	R0, L___Lib_Mmc_SDIO_SD_InitializeCards432
0x32C8	0x4832    LDR	R0, [PC, #200]
0x32CA	0x6800    LDR	R0, [R0, #0]
0x32CC	0x2801    CMP	R0, #1
0x32CE	0xD008    BEQ	L___Lib_Mmc_SDIO_SD_InitializeCards431
;__Lib_Mmc_SDIO.c, 1541 :: 		
0x32D0	0x4830    LDR	R0, [PC, #192]
0x32D2	0x6800    LDR	R0, [R0, #0]
0x32D4	0x2806    CMP	R0, #6
0x32D6	0xD004    BEQ	L___Lib_Mmc_SDIO_SD_InitializeCards430
0x32D8	0x482E    LDR	R0, [PC, #184]
0x32DA	0x6800    LDR	R0, [R0, #0]
0x32DC	0x2802    CMP	R0, #2
0x32DE	0xD000    BEQ	L___Lib_Mmc_SDIO_SD_InitializeCards429
0x32E0	0xE01C    B	L___Lib_Mmc_SDIO_SD_InitializeCards179
;__Lib_Mmc_SDIO.c, 1540 :: 		
L___Lib_Mmc_SDIO_SD_InitializeCards432:
L___Lib_Mmc_SDIO_SD_InitializeCards431:
;__Lib_Mmc_SDIO.c, 1541 :: 		
L___Lib_Mmc_SDIO_SD_InitializeCards430:
L___Lib_Mmc_SDIO_SD_InitializeCards429:
;__Lib_Mmc_SDIO.c, 1545 :: 		
0x32E2	0x2100    MOVS	R1, #0
0x32E4	0x482C    LDR	R0, [PC, #176]
0x32E6	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1546 :: 		
0x32E8	0x2103    MOVS	R1, #3
0x32EA	0x482C    LDR	R0, [PC, #176]
0x32EC	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1547 :: 		
0x32EE	0xF04F0140  MOV	R1, #64
0x32F2	0x482B    LDR	R0, [PC, #172]
0x32F4	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1548 :: 		
0x32F6	0xF04F0100  MOV	R1, #0
0x32FA	0x482A    LDR	R0, [PC, #168]
0x32FC	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1549 :: 		
0x32FE	0xF44F6180  MOV	R1, #1024
0x3302	0x4829    LDR	R0, [PC, #164]
0x3304	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1550 :: 		
0x3306	0x4824    LDR	R0, [PC, #144]
0x3308	0xF7FDFCBC  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1552 :: 		
0x330C	0xA801    ADD	R0, SP, #4
0x330E	0x4601    MOV	R1, R0
0x3310	0x2003    MOVS	R0, #3
0x3312	0xF7FDFD65  BL	__Lib_Mmc_SDIO_CmdResp6Error+0
0x3316	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_SD_InitializeCards180
;__Lib_Mmc_SDIO.c, 1554 :: 		
0x3318	0x2001    MOVS	R0, #1
0x331A	0xE036    B	L_end_SD_InitializeCards
;__Lib_Mmc_SDIO.c, 1555 :: 		
L___Lib_Mmc_SDIO_SD_InitializeCards180:
;__Lib_Mmc_SDIO.c, 1556 :: 		
L___Lib_Mmc_SDIO_SD_InitializeCards179:
;__Lib_Mmc_SDIO.c, 1557 :: 		
0x331C	0x481D    LDR	R0, [PC, #116]
0x331E	0x6800    LDR	R0, [R0, #0]
0x3320	0x2804    CMP	R0, #4
0x3322	0xD031    BEQ	L___Lib_Mmc_SDIO_SD_InitializeCards181
;__Lib_Mmc_SDIO.c, 1559 :: 		
0x3324	0xF8BD1004  LDRH	R1, [SP, #4]
0x3328	0x4828    LDR	R0, [PC, #160]
0x332A	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1562 :: 		
0x332C	0xF8BD0004  LDRH	R0, [SP, #4]
0x3330	0x0401    LSLS	R1, R0, #16
0x3332	0x4819    LDR	R0, [PC, #100]
0x3334	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1563 :: 		
0x3336	0x2109    MOVS	R1, #9
0x3338	0x4818    LDR	R0, [PC, #96]
0x333A	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1564 :: 		
0x333C	0xF04F01C0  MOV	R1, #192
0x3340	0x4817    LDR	R0, [PC, #92]
0x3342	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1565 :: 		
0x3344	0xF04F0100  MOV	R1, #0
0x3348	0x4816    LDR	R0, [PC, #88]
0x334A	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1566 :: 		
0x334C	0xF44F6180  MOV	R1, #1024
0x3350	0x4815    LDR	R0, [PC, #84]
0x3352	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1567 :: 		
0x3354	0x4810    LDR	R0, [PC, #64]
0x3356	0xF7FDFC95  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1569 :: 		
0x335A	0xF7FDFD09  BL	__Lib_Mmc_SDIO_CmdResp2Error+0
0x335E	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_SD_InitializeCards182
;__Lib_Mmc_SDIO.c, 1571 :: 		
0x3360	0x2001    MOVS	R0, #1
0x3362	0xE012    B	L_end_SD_InitializeCards
;__Lib_Mmc_SDIO.c, 1572 :: 		
L___Lib_Mmc_SDIO_SD_InitializeCards182:
;__Lib_Mmc_SDIO.c, 1574 :: 		
0x3364	0x4811    LDR	R0, [PC, #68]
0x3366	0x6801    LDR	R1, [R0, #0]
0x3368	0x4819    LDR	R0, [PC, #100]
0x336A	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1575 :: 		
0x336C	0x4811    LDR	R0, [PC, #68]
0x336E	0x6801    LDR	R1, [R0, #0]
0x3370	0x4818    LDR	R0, [PC, #96]
0x3372	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1576 :: 		
0x3374	0x4811    LDR	R0, [PC, #68]
0x3376	0x6801    LDR	R1, [R0, #0]
0x3378	0x4817    LDR	R0, [PC, #92]
0x337A	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1577 :: 		
0x337C	0x4811    LDR	R0, [PC, #68]
0x337E	0x6800    LDR	R0, [R0, #0]
0x3380	0xF0400101  ORR	R1, R0, #1
0x3384	0x4815    LDR	R0, [PC, #84]
0x3386	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1578 :: 		
L___Lib_Mmc_SDIO_SD_InitializeCards181:
;__Lib_Mmc_SDIO.c, 1580 :: 		
0x3388	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 1581 :: 		
L_end_SD_InitializeCards:
0x338A	0xF8DDE000  LDR	LR, [SP, #0]
0x338E	0xB002    ADD	SP, SP, #8
0x3390	0x4770    BX	LR
0x3392	0xBF00    NOP
0x3394	0x03242000  	__Lib_Mmc_SDIO_CardTypeSdio+0
0x3398	0x2D7C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+0
0x339C	0x2D802000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+4
0x33A0	0x2D842000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+8
0x33A4	0x2D882000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+12
0x33A8	0x2D8C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+16
0x33AC	0x2C144001  	SDIO_RESP1+0
0x33B0	0x2DA42000  	__Lib_Mmc_SDIO_CID_TabSdio+0
0x33B4	0x2C184001  	SDIO_RESP2+0
0x33B8	0x2DA82000  	__Lib_Mmc_SDIO_CID_TabSdio+4
0x33BC	0x2C1C4001  	SDIO_RESP3+0
0x33C0	0x2DAC2000  	__Lib_Mmc_SDIO_CID_TabSdio+8
0x33C4	0x2C204001  	SDIO_RESP4+0
0x33C8	0x2DB02000  	__Lib_Mmc_SDIO_CID_TabSdio+12
0x33CC	0x032C2000  	__Lib_Mmc_SDIO_RCA+0
0x33D0	0x2D942000  	__Lib_Mmc_SDIO_CSD_TabSdio+0
0x33D4	0x2D982000  	__Lib_Mmc_SDIO_CSD_TabSdio+4
0x33D8	0x2D9C2000  	__Lib_Mmc_SDIO_CSD_TabSdio+8
0x33DC	0x2DA02000  	__Lib_Mmc_SDIO_CSD_TabSdio+12
; end of __Lib_Mmc_SDIO_SD_InitializeCards
_SDIO_GetPowerState:
;__Lib_SDIO.c, 560 :: 		
0x0D5C	0xB081    SUB	SP, SP, #4
;__Lib_SDIO.c, 561 :: 		
0x0D5E	0x4803    LDR	R0, [PC, #12]
0x0D60	0x6800    LDR	R0, [R0, #0]
0x0D62	0xF0000003  AND	R0, R0, #3
;__Lib_SDIO.c, 562 :: 		
L_end_SDIO_GetPowerState:
0x0D66	0xB001    ADD	SP, SP, #4
0x0D68	0x4770    BX	LR
0x0D6A	0xBF00    NOP
0x0D6C	0x2C004001  	SDIO_POWER+0
; end of _SDIO_GetPowerState
__Lib_Mmc_SDIO_CmdResp2Error:
;__Lib_Mmc_SDIO.c, 1230 :: 		
0x0D70	0xB082    SUB	SP, SP, #8
0x0D72	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 1232 :: 		
; errorstatus start address is: 8 (R2)
0x0D76	0x2200    MOVS	R2, #0
;__Lib_Mmc_SDIO.c, 1233 :: 		
; timeout start address is: 4 (R1)
0x0D78	0x4916    LDR	R1, [PC, #88]
;__Lib_Mmc_SDIO.c, 1236 :: 		
0x0D7A	0x4817    LDR	R0, [PC, #92]
; status start address is: 12 (R3)
0x0D7C	0x6803    LDR	R3, [R0, #0]
; timeout end address is: 4 (R1)
; status end address is: 12 (R3)
; errorstatus end address is: 8 (R2)
0x0D7E	0x9301    STR	R3, [SP, #4]
0x0D80	0x460B    MOV	R3, R1
0x0D82	0x9901    LDR	R1, [SP, #4]
;__Lib_Mmc_SDIO.c, 1238 :: 		
L___Lib_Mmc_SDIO_CmdResp2Error137:
; status start address is: 4 (R1)
; timeout start address is: 12 (R3)
; errorstatus start address is: 8 (R2)
0x0D84	0xF0010045  AND	R0, R1, #69
0x0D88	0xB928    CBNZ	R0, L___Lib_Mmc_SDIO_CmdResp2Error415
0x0D8A	0x2B00    CMP	R3, #0
0x0D8C	0xD903    BLS	L___Lib_Mmc_SDIO_CmdResp2Error414
; status end address is: 4 (R1)
L___Lib_Mmc_SDIO_CmdResp2Error413:
;__Lib_Mmc_SDIO.c, 1240 :: 		
0x0D8E	0x1E5B    SUBS	R3, R3, #1
;__Lib_Mmc_SDIO.c, 1241 :: 		
0x0D90	0x4811    LDR	R0, [PC, #68]
; status start address is: 4 (R1)
0x0D92	0x6801    LDR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 1242 :: 		
0x0D94	0xE7F6    B	L___Lib_Mmc_SDIO_CmdResp2Error137
;__Lib_Mmc_SDIO.c, 1238 :: 		
L___Lib_Mmc_SDIO_CmdResp2Error415:
L___Lib_Mmc_SDIO_CmdResp2Error414:
;__Lib_Mmc_SDIO.c, 1244 :: 		
0x0D96	0xB11B    CBZ	R3, L___Lib_Mmc_SDIO_CmdResp2Error417
; timeout end address is: 12 (R3)
0x0D98	0xF0010004  AND	R0, R1, #4
0x0D9C	0xB900    CBNZ	R0, L___Lib_Mmc_SDIO_CmdResp2Error416
0x0D9E	0xE006    B	L___Lib_Mmc_SDIO_CmdResp2Error143
; status end address is: 4 (R1)
; errorstatus end address is: 8 (R2)
L___Lib_Mmc_SDIO_CmdResp2Error417:
L___Lib_Mmc_SDIO_CmdResp2Error416:
;__Lib_Mmc_SDIO.c, 1246 :: 		
; errorstatus start address is: 8 (R2)
0x0DA0	0x2201    MOVS	R2, #1
;__Lib_Mmc_SDIO.c, 1247 :: 		
0x0DA2	0xF04F0004  MOV	R0, #4
0x0DA6	0xF7FFFB91  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1248 :: 		
0x0DAA	0xB2D0    UXTB	R0, R2
; errorstatus end address is: 8 (R2)
0x0DAC	0xE00D    B	L_end_CmdResp2Error
;__Lib_Mmc_SDIO.c, 1249 :: 		
L___Lib_Mmc_SDIO_CmdResp2Error143:
;__Lib_Mmc_SDIO.c, 1250 :: 		
; errorstatus start address is: 8 (R2)
; status start address is: 4 (R1)
0x0DAE	0xF0010001  AND	R0, R1, #1
; status end address is: 4 (R1)
0x0DB2	0xB130    CBZ	R0, L___Lib_Mmc_SDIO_CmdResp2Error145
;__Lib_Mmc_SDIO.c, 1252 :: 		
0x0DB4	0x2201    MOVS	R2, #1
;__Lib_Mmc_SDIO.c, 1253 :: 		
0x0DB6	0xF04F0001  MOV	R0, #1
0x0DBA	0xF7FFFB87  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1254 :: 		
0x0DBE	0xB2D0    UXTB	R0, R2
; errorstatus end address is: 8 (R2)
0x0DC0	0xE003    B	L_end_CmdResp2Error
;__Lib_Mmc_SDIO.c, 1255 :: 		
L___Lib_Mmc_SDIO_CmdResp2Error145:
;__Lib_Mmc_SDIO.c, 1258 :: 		
; errorstatus start address is: 8 (R2)
0x0DC2	0x4806    LDR	R0, [PC, #24]
0x0DC4	0xF7FFFB82  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1260 :: 		
0x0DC8	0xB2D0    UXTB	R0, R2
; errorstatus end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 1261 :: 		
L_end_CmdResp2Error:
0x0DCA	0xF8DDE000  LDR	LR, [SP, #0]
0x0DCE	0xB002    ADD	SP, SP, #8
0x0DD0	0x4770    BX	LR
0x0DD2	0xBF00    NOP
0x0DD4	0x27100000  	#10000
0x0DD8	0x2C344001  	SDIO_STA+0
0x0DDC	0x05FF0000  	#1535
; end of __Lib_Mmc_SDIO_CmdResp2Error
__Lib_Mmc_SDIO_CmdResp6Error:
;__Lib_Mmc_SDIO.c, 1277 :: 		
; prca start address is: 4 (R1)
; cmd start address is: 0 (R0)
0x0DE0	0xB082    SUB	SP, SP, #8
0x0DE2	0xF8CDE000  STR	LR, [SP, #0]
; prca end address is: 4 (R1)
; cmd end address is: 0 (R0)
; cmd start address is: 0 (R0)
; prca start address is: 4 (R1)
;__Lib_Mmc_SDIO.c, 1279 :: 		
; errorstatus start address is: 12 (R3)
0x0DE6	0x2300    MOVS	R3, #0
;__Lib_Mmc_SDIO.c, 1282 :: 		
; timeout start address is: 16 (R4)
0x0DE8	0x4C26    LDR	R4, [PC, #152]
;__Lib_Mmc_SDIO.c, 1284 :: 		
0x0DEA	0x4A27    LDR	R2, [PC, #156]
; status start address is: 20 (R5)
0x0DEC	0x6815    LDR	R5, [R2, #0]
; cmd end address is: 0 (R0)
; prca end address is: 4 (R1)
; timeout end address is: 16 (R4)
; status end address is: 20 (R5)
; errorstatus end address is: 12 (R3)
0x0DEE	0x9501    STR	R5, [SP, #4]
0x0DF0	0x4625    MOV	R5, R4
0x0DF2	0x460C    MOV	R4, R1
0x0DF4	0xB2C1    UXTB	R1, R0
0x0DF6	0x9801    LDR	R0, [SP, #4]
;__Lib_Mmc_SDIO.c, 1286 :: 		
L___Lib_Mmc_SDIO_CmdResp6Error146:
; status start address is: 0 (R0)
; timeout start address is: 20 (R5)
; errorstatus start address is: 12 (R3)
; prca start address is: 16 (R4)
; cmd start address is: 4 (R1)
0x0DF8	0xF0000245  AND	R2, R0, #69
0x0DFC	0xB92A    CBNZ	R2, L___Lib_Mmc_SDIO_CmdResp6Error421
0x0DFE	0x2D00    CMP	R5, #0
0x0E00	0xD903    BLS	L___Lib_Mmc_SDIO_CmdResp6Error420
; status end address is: 0 (R0)
L___Lib_Mmc_SDIO_CmdResp6Error419:
;__Lib_Mmc_SDIO.c, 1288 :: 		
0x0E02	0x1E6D    SUBS	R5, R5, #1
;__Lib_Mmc_SDIO.c, 1289 :: 		
0x0E04	0x4A20    LDR	R2, [PC, #128]
; status start address is: 0 (R0)
0x0E06	0x6810    LDR	R0, [R2, #0]
;__Lib_Mmc_SDIO.c, 1290 :: 		
0x0E08	0xE7F6    B	L___Lib_Mmc_SDIO_CmdResp6Error146
;__Lib_Mmc_SDIO.c, 1286 :: 		
L___Lib_Mmc_SDIO_CmdResp6Error421:
L___Lib_Mmc_SDIO_CmdResp6Error420:
;__Lib_Mmc_SDIO.c, 1292 :: 		
0x0E0A	0xB11D    CBZ	R5, L___Lib_Mmc_SDIO_CmdResp6Error423
; timeout end address is: 20 (R5)
0x0E0C	0xF0000204  AND	R2, R0, #4
0x0E10	0xB902    CBNZ	R2, L___Lib_Mmc_SDIO_CmdResp6Error422
0x0E12	0xE006    B	L___Lib_Mmc_SDIO_CmdResp6Error152
; errorstatus end address is: 12 (R3)
; prca end address is: 16 (R4)
; cmd end address is: 4 (R1)
; status end address is: 0 (R0)
L___Lib_Mmc_SDIO_CmdResp6Error423:
L___Lib_Mmc_SDIO_CmdResp6Error422:
;__Lib_Mmc_SDIO.c, 1294 :: 		
; errorstatus start address is: 8 (R2)
0x0E14	0x2201    MOVS	R2, #1
;__Lib_Mmc_SDIO.c, 1295 :: 		
0x0E16	0xF04F0004  MOV	R0, #4
0x0E1A	0xF7FFFB57  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1296 :: 		
0x0E1E	0xB2D0    UXTB	R0, R2
; errorstatus end address is: 8 (R2)
0x0E20	0xE02C    B	L_end_CmdResp6Error
;__Lib_Mmc_SDIO.c, 1297 :: 		
L___Lib_Mmc_SDIO_CmdResp6Error152:
;__Lib_Mmc_SDIO.c, 1298 :: 		
; status start address is: 0 (R0)
; cmd start address is: 4 (R1)
; prca start address is: 16 (R4)
; errorstatus start address is: 12 (R3)
0x0E22	0xF0000201  AND	R2, R0, #1
; status end address is: 0 (R0)
0x0E26	0xB132    CBZ	R2, L___Lib_Mmc_SDIO_CmdResp6Error154
; errorstatus end address is: 12 (R3)
; prca end address is: 16 (R4)
; cmd end address is: 4 (R1)
;__Lib_Mmc_SDIO.c, 1300 :: 		
; errorstatus start address is: 8 (R2)
0x0E28	0x2201    MOVS	R2, #1
;__Lib_Mmc_SDIO.c, 1301 :: 		
0x0E2A	0xF04F0001  MOV	R0, #1
0x0E2E	0xF7FFFB4D  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1302 :: 		
0x0E32	0xB2D0    UXTB	R0, R2
; errorstatus end address is: 8 (R2)
0x0E34	0xE022    B	L_end_CmdResp6Error
;__Lib_Mmc_SDIO.c, 1303 :: 		
L___Lib_Mmc_SDIO_CmdResp6Error154:
;__Lib_Mmc_SDIO.c, 1306 :: 		
; cmd start address is: 4 (R1)
; prca start address is: 16 (R4)
; errorstatus start address is: 12 (R3)
0x0E36	0xF7FFFAF1  BL	_SDIO_GetCommandResponse+0
0x0E3A	0x4288    CMP	R0, R1
0x0E3C	0xD001    BEQ	L___Lib_Mmc_SDIO_CmdResp6Error155
; errorstatus end address is: 12 (R3)
; prca end address is: 16 (R4)
; cmd end address is: 4 (R1)
;__Lib_Mmc_SDIO.c, 1309 :: 		
0x0E3E	0x2001    MOVS	R0, #1
0x0E40	0xE01C    B	L_end_CmdResp6Error
;__Lib_Mmc_SDIO.c, 1310 :: 		
L___Lib_Mmc_SDIO_CmdResp6Error155:
;__Lib_Mmc_SDIO.c, 1313 :: 		
; prca start address is: 16 (R4)
; errorstatus start address is: 12 (R3)
0x0E42	0x4812    LDR	R0, [PC, #72]
0x0E44	0xF7FFFB42  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1316 :: 		
0x0E48	0x4A11    LDR	R2, [PC, #68]
; response_r1 start address is: 0 (R0)
0x0E4A	0x6810    LDR	R0, [R2, #0]
;__Lib_Mmc_SDIO.c, 1318 :: 		
0x0E4C	0xF4004260  AND	R2, R0, #57344
0x0E50	0xB922    CBNZ	R2, L___Lib_Mmc_SDIO_CmdResp6Error156
;__Lib_Mmc_SDIO.c, 1320 :: 		
0x0E52	0x0C02    LSRS	R2, R0, #16
; response_r1 end address is: 0 (R0)
0x0E54	0xB292    UXTH	R2, R2
0x0E56	0x8022    STRH	R2, [R4, #0]
; prca end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 1321 :: 		
0x0E58	0xB2D8    UXTB	R0, R3
; errorstatus end address is: 12 (R3)
0x0E5A	0xE00F    B	L_end_CmdResp6Error
;__Lib_Mmc_SDIO.c, 1322 :: 		
L___Lib_Mmc_SDIO_CmdResp6Error156:
;__Lib_Mmc_SDIO.c, 1324 :: 		
; response_r1 start address is: 0 (R0)
; errorstatus start address is: 12 (R3)
0x0E5C	0xF4005200  AND	R2, R0, #8192
0x0E60	0xB10A    CBZ	R2, L___Lib_Mmc_SDIO_CmdResp6Error157
; errorstatus end address is: 12 (R3)
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1326 :: 		
0x0E62	0x2001    MOVS	R0, #1
0x0E64	0xE00A    B	L_end_CmdResp6Error
;__Lib_Mmc_SDIO.c, 1327 :: 		
L___Lib_Mmc_SDIO_CmdResp6Error157:
;__Lib_Mmc_SDIO.c, 1329 :: 		
; response_r1 start address is: 0 (R0)
; errorstatus start address is: 12 (R3)
0x0E66	0xF4004280  AND	R2, R0, #16384
0x0E6A	0xB10A    CBZ	R2, L___Lib_Mmc_SDIO_CmdResp6Error158
; errorstatus end address is: 12 (R3)
; response_r1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1331 :: 		
0x0E6C	0x2001    MOVS	R0, #1
0x0E6E	0xE005    B	L_end_CmdResp6Error
;__Lib_Mmc_SDIO.c, 1332 :: 		
L___Lib_Mmc_SDIO_CmdResp6Error158:
;__Lib_Mmc_SDIO.c, 1334 :: 		
; response_r1 start address is: 0 (R0)
; errorstatus start address is: 12 (R3)
0x0E70	0xF4004200  AND	R2, R0, #32768
; response_r1 end address is: 0 (R0)
0x0E74	0xB10A    CBZ	R2, L___Lib_Mmc_SDIO_CmdResp6Error159
; errorstatus end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 1336 :: 		
0x0E76	0x2001    MOVS	R0, #1
0x0E78	0xE000    B	L_end_CmdResp6Error
;__Lib_Mmc_SDIO.c, 1337 :: 		
L___Lib_Mmc_SDIO_CmdResp6Error159:
;__Lib_Mmc_SDIO.c, 1339 :: 		
; errorstatus start address is: 12 (R3)
0x0E7A	0xB2D8    UXTB	R0, R3
; errorstatus end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 1340 :: 		
L_end_CmdResp6Error:
0x0E7C	0xF8DDE000  LDR	LR, [SP, #0]
0x0E80	0xB002    ADD	SP, SP, #8
0x0E82	0x4770    BX	LR
0x0E84	0x27100000  	#10000
0x0E88	0x2C344001  	SDIO_STA+0
0x0E8C	0x05FF0000  	#1535
0x0E90	0x2C144001  	SDIO_RESP1+0
; end of __Lib_Mmc_SDIO_CmdResp6Error
__Lib_Mmc_SDIO_SD_SelectDeselect:
;__Lib_Mmc_SDIO.c, 1594 :: 		
; addr start address is: 0 (R0)
0x33E0	0xB081    SUB	SP, SP, #4
0x33E2	0xF8CDE000  STR	LR, [SP, #0]
; addr end address is: 0 (R0)
; addr start address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1598 :: 		
0x33E6	0x490D    LDR	R1, [PC, #52]
0x33E8	0x6008    STR	R0, [R1, #0]
; addr end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1599 :: 		
0x33EA	0x2207    MOVS	R2, #7
0x33EC	0x490C    LDR	R1, [PC, #48]
0x33EE	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1600 :: 		
0x33F0	0xF04F0240  MOV	R2, #64
0x33F4	0x490B    LDR	R1, [PC, #44]
0x33F6	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1601 :: 		
0x33F8	0xF04F0200  MOV	R2, #0
0x33FC	0x490A    LDR	R1, [PC, #40]
0x33FE	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1602 :: 		
0x3400	0xF44F6280  MOV	R2, #1024
0x3404	0x4909    LDR	R1, [PC, #36]
0x3406	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1603 :: 		
0x3408	0x4804    LDR	R0, [PC, #16]
0x340A	0xF7FDFC3B  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1605 :: 		
0x340E	0x2007    MOVS	R0, #7
0x3410	0xF7FDFA66  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
;__Lib_Mmc_SDIO.c, 1606 :: 		
L_end_SD_SelectDeselect:
0x3414	0xF8DDE000  LDR	LR, [SP, #0]
0x3418	0xB001    ADD	SP, SP, #4
0x341A	0x4770    BX	LR
0x341C	0x2D7C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+0
0x3420	0x2D802000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+4
0x3424	0x2D842000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+8
0x3428	0x2D882000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+12
0x342C	0x2D8C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+16
; end of __Lib_Mmc_SDIO_SD_SelectDeselect
__Lib_Mmc_SDIO_SD_EnableWideBusOperation:
;__Lib_Mmc_SDIO.c, 1845 :: 		
; WideMode start address is: 0 (R0)
0x3984	0xB081    SUB	SP, SP, #4
0x3986	0xF8CDE000  STR	LR, [SP, #0]
; WideMode end address is: 0 (R0)
; WideMode start address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1847 :: 		
;__Lib_Mmc_SDIO.c, 1850 :: 		
0x398A	0x4919    LDR	R1, [PC, #100]
0x398C	0x6809    LDR	R1, [R1, #0]
0x398E	0x2903    CMP	R1, #3
0x3990	0xD106    BNE	L___Lib_Mmc_SDIO_SD_EnableWideBusOperation206
;__Lib_Mmc_SDIO.c, 1852 :: 		
0x3992	0xF5B05F80  CMP	R0, #4096
0x3996	0xD101    BNE	L___Lib_Mmc_SDIO_SD_EnableWideBusOperation207
; WideMode end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1853 :: 		
0x3998	0x2000    MOVS	R0, #0
0x399A	0xE024    B	L_end_SD_EnableWideBusOperation
L___Lib_Mmc_SDIO_SD_EnableWideBusOperation207:
;__Lib_Mmc_SDIO.c, 1855 :: 		
0x399C	0x2001    MOVS	R0, #1
0x399E	0xE022    B	L_end_SD_EnableWideBusOperation
;__Lib_Mmc_SDIO.c, 1856 :: 		
L___Lib_Mmc_SDIO_SD_EnableWideBusOperation206:
;__Lib_Mmc_SDIO.c, 1857 :: 		
; WideMode start address is: 0 (R0)
0x39A0	0x4913    LDR	R1, [PC, #76]
0x39A2	0x6809    LDR	R1, [R1, #0]
0x39A4	0xB141    CBZ	R1, L___Lib_Mmc_SDIO_SD_EnableWideBusOperation437
0x39A6	0x4912    LDR	R1, [PC, #72]
0x39A8	0x6809    LDR	R1, [R1, #0]
0x39AA	0x2901    CMP	R1, #1
0x39AC	0xD004    BEQ	L___Lib_Mmc_SDIO_SD_EnableWideBusOperation436
0x39AE	0x4910    LDR	R1, [PC, #64]
0x39B0	0x6809    LDR	R1, [R1, #0]
0x39B2	0x2902    CMP	R1, #2
0x39B4	0xD000    BEQ	L___Lib_Mmc_SDIO_SD_EnableWideBusOperation435
; WideMode end address is: 0 (R0)
0x39B6	0xE015    B	L___Lib_Mmc_SDIO_SD_EnableWideBusOperation212
L___Lib_Mmc_SDIO_SD_EnableWideBusOperation437:
; WideMode start address is: 0 (R0)
L___Lib_Mmc_SDIO_SD_EnableWideBusOperation436:
L___Lib_Mmc_SDIO_SD_EnableWideBusOperation435:
;__Lib_Mmc_SDIO.c, 1859 :: 		
0x39B8	0xF5B05F80  CMP	R0, #4096
0x39BC	0xD101    BNE	L___Lib_Mmc_SDIO_SD_EnableWideBusOperation213
; WideMode end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1861 :: 		
0x39BE	0x2001    MOVS	R0, #1
0x39C0	0xE011    B	L_end_SD_EnableWideBusOperation
;__Lib_Mmc_SDIO.c, 1862 :: 		
L___Lib_Mmc_SDIO_SD_EnableWideBusOperation213:
;__Lib_Mmc_SDIO.c, 1863 :: 		
; WideMode start address is: 0 (R0)
0x39C2	0xF5B06F00  CMP	R0, #2048
0x39C6	0xD107    BNE	L___Lib_Mmc_SDIO_SD_EnableWideBusOperation215
; WideMode end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1865 :: 		
0x39C8	0x2001    MOVS	R0, #1
0x39CA	0xF7FDFE35  BL	__Lib_Mmc_SDIO_SDEnWideBus+0
0x39CE	0x2800    CMP	R0, #0
0x39D0	0xD001    BEQ	L___Lib_Mmc_SDIO_SD_EnableWideBusOperation216
;__Lib_Mmc_SDIO.c, 1867 :: 		
0x39D2	0x2001    MOVS	R0, #1
0x39D4	0xE007    B	L_end_SD_EnableWideBusOperation
;__Lib_Mmc_SDIO.c, 1868 :: 		
L___Lib_Mmc_SDIO_SD_EnableWideBusOperation216:
;__Lib_Mmc_SDIO.c, 1869 :: 		
0x39D6	0xE005    B	L___Lib_Mmc_SDIO_SD_EnableWideBusOperation217
L___Lib_Mmc_SDIO_SD_EnableWideBusOperation215:
;__Lib_Mmc_SDIO.c, 1872 :: 		
0x39D8	0x2000    MOVS	R0, #0
0x39DA	0xF7FDFE2D  BL	__Lib_Mmc_SDIO_SDEnWideBus+0
0x39DE	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_SD_EnableWideBusOperation218
;__Lib_Mmc_SDIO.c, 1874 :: 		
0x39E0	0x2001    MOVS	R0, #1
0x39E2	0xE000    B	L_end_SD_EnableWideBusOperation
;__Lib_Mmc_SDIO.c, 1875 :: 		
L___Lib_Mmc_SDIO_SD_EnableWideBusOperation218:
;__Lib_Mmc_SDIO.c, 1876 :: 		
L___Lib_Mmc_SDIO_SD_EnableWideBusOperation217:
;__Lib_Mmc_SDIO.c, 1877 :: 		
L___Lib_Mmc_SDIO_SD_EnableWideBusOperation212:
;__Lib_Mmc_SDIO.c, 1879 :: 		
0x39E4	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 1880 :: 		
L_end_SD_EnableWideBusOperation:
0x39E6	0xF8DDE000  LDR	LR, [SP, #0]
0x39EA	0xB001    ADD	SP, SP, #4
0x39EC	0x4770    BX	LR
0x39EE	0xBF00    NOP
0x39F0	0x03242000  	__Lib_Mmc_SDIO_CardTypeSdio+0
; end of __Lib_Mmc_SDIO_SD_EnableWideBusOperation
__Lib_Mmc_SDIO_SDEnWideBus:
;__Lib_Mmc_SDIO.c, 1732 :: 		
; newState start address is: 0 (R0)
0x1638	0xB083    SUB	SP, SP, #12
0x163A	0xF8CDE000  STR	LR, [SP, #0]
0x163E	0xFA5FF880  UXTB	R8, R0
; newState end address is: 0 (R0)
; newState start address is: 32 (R8)
;__Lib_Mmc_SDIO.c, 1734 :: 		
;__Lib_Mmc_SDIO.c, 1736 :: 		
0x1642	0xF10D0B04  ADD	R11, SP, #4
0x1646	0xF10B0A08  ADD	R10, R11, #8
0x164A	0xF8DFC138  LDR	R12, [PC, #312]
0x164E	0xF7FEFDE1  BL	___CC2DW+0
;__Lib_Mmc_SDIO.c, 1738 :: 		
0x1652	0x494D    LDR	R1, [PC, #308]
0x1654	0x6809    LDR	R1, [R1, #0]
0x1656	0xF0017100  AND	R1, R1, #33554432
0x165A	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_SDEnWideBus196
; newState end address is: 32 (R8)
;__Lib_Mmc_SDIO.c, 1740 :: 		
0x165C	0x2001    MOVS	R0, #1
0x165E	0xE08C    B	L_end_SDEnWideBus
;__Lib_Mmc_SDIO.c, 1741 :: 		
L___Lib_Mmc_SDIO_SDEnWideBus196:
;__Lib_Mmc_SDIO.c, 1744 :: 		
; newState start address is: 32 (R8)
0x1660	0xAA01    ADD	R2, SP, #4
0x1662	0x494A    LDR	R1, [PC, #296]
0x1664	0x6809    LDR	R1, [R1, #0]
0x1666	0xB288    UXTH	R0, R1
0x1668	0x4611    MOV	R1, R2
0x166A	0xF7FFF803  BL	__Lib_Mmc_SDIO_FindSCR+0
; errorstatus start address is: 4 (R1)
0x166E	0xB2C1    UXTB	R1, R0
;__Lib_Mmc_SDIO.c, 1746 :: 		
0x1670	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_SDEnWideBus197
; newState end address is: 32 (R8)
;__Lib_Mmc_SDIO.c, 1748 :: 		
0x1672	0xB2C8    UXTB	R0, R1
; errorstatus end address is: 4 (R1)
0x1674	0xE081    B	L_end_SDEnWideBus
;__Lib_Mmc_SDIO.c, 1749 :: 		
L___Lib_Mmc_SDIO_SDEnWideBus197:
;__Lib_Mmc_SDIO.c, 1752 :: 		
; newState start address is: 32 (R8)
0x1676	0xF1B80F01  CMP	R8, #1
0x167A	0xD13F    BNE	L___Lib_Mmc_SDIO_SDEnWideBus198
; newState end address is: 32 (R8)
;__Lib_Mmc_SDIO.c, 1755 :: 		
0x167C	0xA901    ADD	R1, SP, #4
0x167E	0x1D09    ADDS	R1, R1, #4
0x1680	0x6809    LDR	R1, [R1, #0]
0x1682	0xF4012180  AND	R1, R1, #262144
0x1686	0x2900    CMP	R1, #0
0x1688	0xD036    BEQ	L___Lib_Mmc_SDIO_SDEnWideBus199
;__Lib_Mmc_SDIO.c, 1758 :: 		
0x168A	0x4940    LDR	R1, [PC, #256]
0x168C	0x6809    LDR	R1, [R1, #0]
0x168E	0x040A    LSLS	R2, R1, #16
0x1690	0x493F    LDR	R1, [PC, #252]
0x1692	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1759 :: 		
0x1694	0x2237    MOVS	R2, #55
0x1696	0x493F    LDR	R1, [PC, #252]
0x1698	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1760 :: 		
0x169A	0xF04F0240  MOV	R2, #64
0x169E	0x493E    LDR	R1, [PC, #248]
0x16A0	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1761 :: 		
0x16A2	0xF04F0200  MOV	R2, #0
0x16A6	0x493D    LDR	R1, [PC, #244]
0x16A8	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1762 :: 		
0x16AA	0xF44F6280  MOV	R2, #1024
0x16AE	0x493C    LDR	R1, [PC, #240]
0x16B0	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1763 :: 		
0x16B2	0x4837    LDR	R0, [PC, #220]
0x16B4	0xF7FFFAE6  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1765 :: 		
0x16B8	0x2037    MOVS	R0, #55
0x16BA	0xF7FFF911  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
; errorstatus start address is: 4 (R1)
0x16BE	0xB2C1    UXTB	R1, R0
;__Lib_Mmc_SDIO.c, 1767 :: 		
0x16C0	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_SDEnWideBus200
;__Lib_Mmc_SDIO.c, 1769 :: 		
0x16C2	0xB2C8    UXTB	R0, R1
; errorstatus end address is: 4 (R1)
0x16C4	0xE059    B	L_end_SDEnWideBus
;__Lib_Mmc_SDIO.c, 1770 :: 		
L___Lib_Mmc_SDIO_SDEnWideBus200:
;__Lib_Mmc_SDIO.c, 1773 :: 		
0x16C6	0x2202    MOVS	R2, #2
0x16C8	0x4931    LDR	R1, [PC, #196]
0x16CA	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1774 :: 		
0x16CC	0x2206    MOVS	R2, #6
0x16CE	0x4931    LDR	R1, [PC, #196]
0x16D0	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1775 :: 		
0x16D2	0xF04F0240  MOV	R2, #64
0x16D6	0x4930    LDR	R1, [PC, #192]
0x16D8	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1776 :: 		
0x16DA	0xF04F0200  MOV	R2, #0
0x16DE	0x492F    LDR	R1, [PC, #188]
0x16E0	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1777 :: 		
0x16E2	0xF44F6280  MOV	R2, #1024
0x16E6	0x492E    LDR	R1, [PC, #184]
0x16E8	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1778 :: 		
0x16EA	0x4829    LDR	R0, [PC, #164]
0x16EC	0xF7FFFACA  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1780 :: 		
0x16F0	0x2006    MOVS	R0, #6
0x16F2	0xF7FFF8F5  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
;__Lib_Mmc_SDIO.c, 1781 :: 		
0x16F6	0xE040    B	L_end_SDEnWideBus
;__Lib_Mmc_SDIO.c, 1782 :: 		
L___Lib_Mmc_SDIO_SDEnWideBus199:
;__Lib_Mmc_SDIO.c, 1785 :: 		
0x16F8	0x2001    MOVS	R0, #1
0x16FA	0xE03E    B	L_end_SDEnWideBus
;__Lib_Mmc_SDIO.c, 1787 :: 		
L___Lib_Mmc_SDIO_SDEnWideBus198:
;__Lib_Mmc_SDIO.c, 1791 :: 		
0x16FC	0xA901    ADD	R1, SP, #4
0x16FE	0x1D09    ADDS	R1, R1, #4
0x1700	0x6809    LDR	R1, [R1, #0]
0x1702	0xF4013180  AND	R1, R1, #65536
0x1706	0x2900    CMP	R1, #0
0x1708	0xD036    BEQ	L___Lib_Mmc_SDIO_SDEnWideBus203
;__Lib_Mmc_SDIO.c, 1794 :: 		
0x170A	0x4920    LDR	R1, [PC, #128]
0x170C	0x6809    LDR	R1, [R1, #0]
0x170E	0x040A    LSLS	R2, R1, #16
0x1710	0x491F    LDR	R1, [PC, #124]
0x1712	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1795 :: 		
0x1714	0x2237    MOVS	R2, #55
0x1716	0x491F    LDR	R1, [PC, #124]
0x1718	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1796 :: 		
0x171A	0xF04F0240  MOV	R2, #64
0x171E	0x491E    LDR	R1, [PC, #120]
0x1720	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1797 :: 		
0x1722	0xF04F0200  MOV	R2, #0
0x1726	0x491D    LDR	R1, [PC, #116]
0x1728	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1798 :: 		
0x172A	0xF44F6280  MOV	R2, #1024
0x172E	0x491C    LDR	R1, [PC, #112]
0x1730	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1799 :: 		
0x1732	0x4817    LDR	R0, [PC, #92]
0x1734	0xF7FFFAA6  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1802 :: 		
0x1738	0x2037    MOVS	R0, #55
0x173A	0xF7FFF8D1  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
; errorstatus start address is: 4 (R1)
0x173E	0xB2C1    UXTB	R1, R0
;__Lib_Mmc_SDIO.c, 1804 :: 		
0x1740	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_SDEnWideBus204
;__Lib_Mmc_SDIO.c, 1806 :: 		
0x1742	0xB2C8    UXTB	R0, R1
; errorstatus end address is: 4 (R1)
0x1744	0xE019    B	L_end_SDEnWideBus
;__Lib_Mmc_SDIO.c, 1807 :: 		
L___Lib_Mmc_SDIO_SDEnWideBus204:
;__Lib_Mmc_SDIO.c, 1810 :: 		
0x1746	0x2200    MOVS	R2, #0
0x1748	0x4911    LDR	R1, [PC, #68]
0x174A	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1811 :: 		
0x174C	0x2206    MOVS	R2, #6
0x174E	0x4911    LDR	R1, [PC, #68]
0x1750	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1812 :: 		
0x1752	0xF04F0240  MOV	R2, #64
0x1756	0x4910    LDR	R1, [PC, #64]
0x1758	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1813 :: 		
0x175A	0xF04F0200  MOV	R2, #0
0x175E	0x490F    LDR	R1, [PC, #60]
0x1760	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1814 :: 		
0x1762	0xF44F6280  MOV	R2, #1024
0x1766	0x490E    LDR	R1, [PC, #56]
0x1768	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1815 :: 		
0x176A	0x4809    LDR	R0, [PC, #36]
0x176C	0xF7FFFA8A  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1817 :: 		
0x1770	0x2006    MOVS	R0, #6
0x1772	0xF7FFF8B5  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
;__Lib_Mmc_SDIO.c, 1819 :: 		
0x1776	0xE000    B	L_end_SDEnWideBus
;__Lib_Mmc_SDIO.c, 1820 :: 		
L___Lib_Mmc_SDIO_SDEnWideBus203:
;__Lib_Mmc_SDIO.c, 1824 :: 		
0x1778	0x2001    MOVS	R0, #1
;__Lib_Mmc_SDIO.c, 1827 :: 		
L_end_SDEnWideBus:
0x177A	0xF8DDE000  LDR	LR, [SP, #0]
0x177E	0xB003    ADD	SP, SP, #12
0x1780	0x4770    BX	LR
0x1782	0xBF00    NOP
0x1784	0x8DF00001  	?ICS__Lib_Mmc_SDIO_SDEnWideBus_scr_L0+0
0x1788	0x2C144001  	SDIO_RESP1+0
0x178C	0x032C2000  	__Lib_Mmc_SDIO_RCA+0
0x1790	0x2D7C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+0
0x1794	0x2D802000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+4
0x1798	0x2D842000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+8
0x179C	0x2D882000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+12
0x17A0	0x2D8C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+16
; end of __Lib_Mmc_SDIO_SDEnWideBus
__Lib_Mmc_SDIO_FindSCR:
;__Lib_Mmc_SDIO.c, 1618 :: 		
; index start address is: 20 (R5)
; pscr start address is: 4 (R1)
0x0674	0xB085    SUB	SP, SP, #20
0x0676	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 1620 :: 		
;__Lib_Mmc_SDIO.c, 1618 :: 		
;__Lib_Mmc_SDIO.c, 1620 :: 		
;__Lib_Mmc_SDIO.c, 1618 :: 		
0x067A	0x460C    MOV	R4, R1
; index end address is: 20 (R5)
; pscr end address is: 4 (R1)
; pscr start address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 1620 :: 		
; index start address is: 20 (R5)
0x067C	0xF04F0500  MOV	R5, #0
;__Lib_Mmc_SDIO.c, 1621 :: 		
;__Lib_Mmc_SDIO.c, 1622 :: 		
0x0680	0xF10D0B04  ADD	R11, SP, #4
0x0684	0xF10B0A08  ADD	R10, R11, #8
0x0688	0xF8DFC1DC  LDR	R12, [PC, #476]
0x068C	0xF7FFFDC2  BL	___CC2DW+0
;__Lib_Mmc_SDIO.c, 1626 :: 		
0x0690	0x2308    MOVS	R3, #8
0x0692	0x4A76    LDR	R2, [PC, #472]
0x0694	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1627 :: 		
0x0696	0x2310    MOVS	R3, #16
0x0698	0x4A75    LDR	R2, [PC, #468]
0x069A	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1628 :: 		
0x069C	0xF04F0340  MOV	R3, #64
0x06A0	0x4A74    LDR	R2, [PC, #464]
0x06A2	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1629 :: 		
0x06A4	0xF04F0300  MOV	R3, #0
0x06A8	0x4A73    LDR	R2, [PC, #460]
0x06AA	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1630 :: 		
0x06AC	0xF44F6380  MOV	R3, #1024
0x06B0	0x4A72    LDR	R2, [PC, #456]
0x06B2	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1631 :: 		
0x06B4	0x486D    LDR	R0, [PC, #436]
0x06B6	0xF000FAE5  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1633 :: 		
0x06BA	0x2010    MOVS	R0, #16
0x06BC	0xF000F910  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
; errorstatus start address is: 4 (R1)
0x06C0	0xB2C1    UXTB	R1, R0
;__Lib_Mmc_SDIO.c, 1635 :: 		
0x06C2	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_FindSCR183
; pscr end address is: 16 (R4)
; index end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 1637 :: 		
0x06C4	0xB2C8    UXTB	R0, R1
; errorstatus end address is: 4 (R1)
0x06C6	0xE0CA    B	L_end_FindSCR
;__Lib_Mmc_SDIO.c, 1638 :: 		
L___Lib_Mmc_SDIO_FindSCR183:
;__Lib_Mmc_SDIO.c, 1641 :: 		
; index start address is: 20 (R5)
; pscr start address is: 16 (R4)
0x06C8	0x4A6D    LDR	R2, [PC, #436]
0x06CA	0x6812    LDR	R2, [R2, #0]
0x06CC	0x0413    LSLS	R3, R2, #16
0x06CE	0x4A67    LDR	R2, [PC, #412]
0x06D0	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1642 :: 		
0x06D2	0x2337    MOVS	R3, #55
0x06D4	0x4A66    LDR	R2, [PC, #408]
0x06D6	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1643 :: 		
0x06D8	0xF04F0340  MOV	R3, #64
0x06DC	0x4A65    LDR	R2, [PC, #404]
0x06DE	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1644 :: 		
0x06E0	0xF04F0300  MOV	R3, #0
0x06E4	0x4A64    LDR	R2, [PC, #400]
0x06E6	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1645 :: 		
0x06E8	0xF44F6380  MOV	R3, #1024
0x06EC	0x4A63    LDR	R2, [PC, #396]
0x06EE	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1646 :: 		
0x06F0	0x485E    LDR	R0, [PC, #376]
0x06F2	0xF000FAC7  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1648 :: 		
0x06F6	0x2037    MOVS	R0, #55
0x06F8	0xF000F8F2  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
; errorstatus start address is: 4 (R1)
0x06FC	0xB2C1    UXTB	R1, R0
;__Lib_Mmc_SDIO.c, 1650 :: 		
0x06FE	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_FindSCR184
; pscr end address is: 16 (R4)
; index end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 1652 :: 		
0x0700	0xB2C8    UXTB	R0, R1
; errorstatus end address is: 4 (R1)
0x0702	0xE0AC    B	L_end_FindSCR
;__Lib_Mmc_SDIO.c, 1653 :: 		
L___Lib_Mmc_SDIO_FindSCR184:
;__Lib_Mmc_SDIO.c, 1654 :: 		
; index start address is: 20 (R5)
; pscr start address is: 16 (R4)
0x0704	0x4B5F    LDR	R3, [PC, #380]
0x0706	0x4A60    LDR	R2, [PC, #384]
0x0708	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1655 :: 		
0x070A	0x2308    MOVS	R3, #8
0x070C	0x4A5F    LDR	R2, [PC, #380]
0x070E	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1656 :: 		
0x0710	0xF04F0330  MOV	R3, #48
0x0714	0x4A5E    LDR	R2, [PC, #376]
0x0716	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1657 :: 		
0x0718	0xF04F0302  MOV	R3, #2
0x071C	0x4A5D    LDR	R2, [PC, #372]
0x071E	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1658 :: 		
0x0720	0xF04F0300  MOV	R3, #0
0x0724	0x4A5C    LDR	R2, [PC, #368]
0x0726	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1659 :: 		
0x0728	0xF04F0301  MOV	R3, #1
0x072C	0x4A5B    LDR	R2, [PC, #364]
0x072E	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1660 :: 		
0x0730	0x4855    LDR	R0, [PC, #340]
0x0732	0xF7FFFDD9  BL	_SDIO_DataConfig+0
;__Lib_Mmc_SDIO.c, 1664 :: 		
0x0736	0x2300    MOVS	R3, #0
0x0738	0x4A4C    LDR	R2, [PC, #304]
0x073A	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1665 :: 		
0x073C	0x2333    MOVS	R3, #51
0x073E	0x4A4C    LDR	R2, [PC, #304]
0x0740	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1666 :: 		
0x0742	0xF04F0340  MOV	R3, #64
0x0746	0x4A4B    LDR	R2, [PC, #300]
0x0748	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1667 :: 		
0x074A	0xF04F0300  MOV	R3, #0
0x074E	0x4A4A    LDR	R2, [PC, #296]
0x0750	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1668 :: 		
0x0752	0xF44F6380  MOV	R3, #1024
0x0756	0x4A49    LDR	R2, [PC, #292]
0x0758	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 1669 :: 		
0x075A	0x4844    LDR	R0, [PC, #272]
0x075C	0xF000FA92  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1671 :: 		
0x0760	0x2033    MOVS	R0, #51
0x0762	0xF000F8BD  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
; errorstatus start address is: 4 (R1)
0x0766	0xB2C1    UXTB	R1, R0
;__Lib_Mmc_SDIO.c, 1673 :: 		
0x0768	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_FindSCR185
; pscr end address is: 16 (R4)
; index end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 1675 :: 		
0x076A	0xB2C8    UXTB	R0, R1
; errorstatus end address is: 4 (R1)
0x076C	0xE077    B	L_end_FindSCR
;__Lib_Mmc_SDIO.c, 1676 :: 		
L___Lib_Mmc_SDIO_FindSCR185:
;__Lib_Mmc_SDIO.c, 1678 :: 		
; index start address is: 20 (R5)
; pscr start address is: 16 (R4)
0x076E	0x4627    MOV	R7, R4
; index end address is: 20 (R5)
0x0770	0x462C    MOV	R4, R5
L___Lib_Mmc_SDIO_FindSCR186:
; pscr end address is: 16 (R4)
; index start address is: 16 (R4)
; pscr start address is: 28 (R7)
0x0772	0x4A4B    LDR	R2, [PC, #300]
0x0774	0x6813    LDR	R3, [R2, #0]
0x0776	0xF240622A  MOVW	R2, #1578
0x077A	0xEA030202  AND	R2, R3, R2, LSL #0
0x077E	0xB98A    CBNZ	R2, L___Lib_Mmc_SDIO_FindSCR187
;__Lib_Mmc_SDIO.c, 1680 :: 		
0x0780	0xF44F1000  MOV	R0, #2097152
0x0784	0xF7FFFEBA  BL	_SDIO_GetFlagStatus+0
0x0788	0xB158    CBZ	R0, L___Lib_Mmc_SDIO_FindSCR433
;__Lib_Mmc_SDIO.c, 1682 :: 		
0x078A	0xAB01    ADD	R3, SP, #4
0x078C	0x00A2    LSLS	R2, R4, #2
0x078E	0x189A    ADDS	R2, R3, R2
0x0790	0x9204    STR	R2, [SP, #16]
0x0792	0xF7FFFD55  BL	_SDIO_ReadData+0
0x0796	0x9A04    LDR	R2, [SP, #16]
0x0798	0x6010    STR	R0, [R2, #0]
;__Lib_Mmc_SDIO.c, 1683 :: 		
0x079A	0x1C62    ADDS	R2, R4, #1
; index end address is: 16 (R4)
; index start address is: 0 (R0)
0x079C	0x4610    MOV	R0, R2
; index end address is: 0 (R0)
0x079E	0x4604    MOV	R4, R0
;__Lib_Mmc_SDIO.c, 1684 :: 		
0x07A0	0xE7FF    B	L___Lib_Mmc_SDIO_FindSCR188
L___Lib_Mmc_SDIO_FindSCR433:
;__Lib_Mmc_SDIO.c, 1680 :: 		
;__Lib_Mmc_SDIO.c, 1684 :: 		
L___Lib_Mmc_SDIO_FindSCR188:
;__Lib_Mmc_SDIO.c, 1685 :: 		
; index start address is: 16 (R4)
; index end address is: 16 (R4)
0x07A2	0xE7E6    B	L___Lib_Mmc_SDIO_FindSCR186
L___Lib_Mmc_SDIO_FindSCR187:
;__Lib_Mmc_SDIO.c, 1687 :: 		
0x07A4	0xF04F0008  MOV	R0, #8
0x07A8	0xF7FFFEA8  BL	_SDIO_GetFlagStatus+0
0x07AC	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_FindSCR189
; pscr end address is: 28 (R7)
;__Lib_Mmc_SDIO.c, 1689 :: 		
0x07AE	0xF04F0008  MOV	R0, #8
0x07B2	0xF7FFFE8B  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1691 :: 		
0x07B6	0x2001    MOVS	R0, #1
0x07B8	0xE051    B	L_end_FindSCR
;__Lib_Mmc_SDIO.c, 1692 :: 		
L___Lib_Mmc_SDIO_FindSCR189:
;__Lib_Mmc_SDIO.c, 1693 :: 		
; pscr start address is: 28 (R7)
0x07BA	0xF04F0002  MOV	R0, #2
0x07BE	0xF7FFFE9D  BL	_SDIO_GetFlagStatus+0
0x07C2	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_FindSCR191
; pscr end address is: 28 (R7)
;__Lib_Mmc_SDIO.c, 1695 :: 		
0x07C4	0xF04F0002  MOV	R0, #2
0x07C8	0xF7FFFE80  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1697 :: 		
0x07CC	0x2001    MOVS	R0, #1
0x07CE	0xE046    B	L_end_FindSCR
;__Lib_Mmc_SDIO.c, 1698 :: 		
L___Lib_Mmc_SDIO_FindSCR191:
;__Lib_Mmc_SDIO.c, 1699 :: 		
; pscr start address is: 28 (R7)
0x07D0	0xF04F0020  MOV	R0, #32
0x07D4	0xF7FFFE92  BL	_SDIO_GetFlagStatus+0
0x07D8	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_FindSCR193
; pscr end address is: 28 (R7)
;__Lib_Mmc_SDIO.c, 1701 :: 		
0x07DA	0xF04F0020  MOV	R0, #32
0x07DE	0xF7FFFE75  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1703 :: 		
0x07E2	0x2001    MOVS	R0, #1
0x07E4	0xE03B    B	L_end_FindSCR
;__Lib_Mmc_SDIO.c, 1704 :: 		
L___Lib_Mmc_SDIO_FindSCR193:
;__Lib_Mmc_SDIO.c, 1705 :: 		
; pscr start address is: 28 (R7)
0x07E6	0xF44F7000  MOV	R0, #512
0x07EA	0xF7FFFE87  BL	_SDIO_GetFlagStatus+0
0x07EE	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_FindSCR195
; pscr end address is: 28 (R7)
;__Lib_Mmc_SDIO.c, 1707 :: 		
0x07F0	0xF44F7000  MOV	R0, #512
0x07F4	0xF7FFFE6A  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1709 :: 		
0x07F8	0x2001    MOVS	R0, #1
0x07FA	0xE030    B	L_end_FindSCR
;__Lib_Mmc_SDIO.c, 1710 :: 		
L___Lib_Mmc_SDIO_FindSCR195:
;__Lib_Mmc_SDIO.c, 1713 :: 		
; pscr start address is: 28 (R7)
0x07FC	0x4829    LDR	R0, [PC, #164]
0x07FE	0xF7FFFE65  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1715 :: 		
0x0802	0x1D3E    ADDS	R6, R7, #4
0x0804	0xAD01    ADD	R5, SP, #4
0x0806	0x682C    LDR	R4, [R5, #0]
0x0808	0xF00402FF  AND	R2, R4, #255
0x080C	0x0613    LSLS	R3, R2, #24
0x080E	0xF404427F  AND	R2, R4, #65280
0x0812	0x0212    LSLS	R2, R2, #8
0x0814	0x4313    ORRS	R3, R2
0x0816	0xF404027F  AND	R2, R4, #16711680
0x081A	0x0A12    LSRS	R2, R2, #8
0x081C	0x4313    ORRS	R3, R2
0x081E	0xF004427F  AND	R2, R4, #-16777216
0x0822	0x0E12    LSRS	R2, R2, #24
0x0824	0xEA430202  ORR	R2, R3, R2, LSL #0
0x0828	0x6032    STR	R2, [R6, #0]
;__Lib_Mmc_SDIO.c, 1717 :: 		
0x082A	0x1D2A    ADDS	R2, R5, #4
0x082C	0x6812    LDR	R2, [R2, #0]
0x082E	0xF00202FF  AND	R2, R2, #255
0x0832	0x0613    LSLS	R3, R2, #24
0x0834	0x1D2A    ADDS	R2, R5, #4
0x0836	0x6812    LDR	R2, [R2, #0]
0x0838	0xF402427F  AND	R2, R2, #65280
0x083C	0x0212    LSLS	R2, R2, #8
0x083E	0x4313    ORRS	R3, R2
0x0840	0x1D2A    ADDS	R2, R5, #4
0x0842	0x6812    LDR	R2, [R2, #0]
0x0844	0xF402027F  AND	R2, R2, #16711680
0x0848	0x0A12    LSRS	R2, R2, #8
0x084A	0x4313    ORRS	R3, R2
0x084C	0x1D2A    ADDS	R2, R5, #4
0x084E	0x6812    LDR	R2, [R2, #0]
0x0850	0xF002427F  AND	R2, R2, #-16777216
0x0854	0x0E12    LSRS	R2, R2, #24
0x0856	0xEA430202  ORR	R2, R3, R2, LSL #0
0x085A	0x603A    STR	R2, [R7, #0]
; pscr end address is: 28 (R7)
;__Lib_Mmc_SDIO.c, 1719 :: 		
0x085C	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 1720 :: 		
L_end_FindSCR:
0x085E	0xF8DDE000  LDR	LR, [SP, #0]
0x0862	0xB005    ADD	SP, SP, #20
0x0864	0x4770    BX	LR
0x0866	0xBF00    NOP
0x0868	0x8DBC0001  	?ICS__Lib_Mmc_SDIO_FindSCR_tempscr_L0+0
0x086C	0x2D7C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+0
0x0870	0x2D802000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+4
0x0874	0x2D842000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+8
0x0878	0x2D882000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+12
0x087C	0x2D8C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+16
0x0880	0x032C2000  	__Lib_Mmc_SDIO_RCA+0
0x0884	0xFFFF000F  	#1048575
0x0888	0x2D642000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+0
0x088C	0x2D682000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+4
0x0890	0x2D6C2000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+8
0x0894	0x2D702000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+12
0x0898	0x2D742000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+16
0x089C	0x2D782000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+20
0x08A0	0x2C344001  	SDIO_STA+0
0x08A4	0x05FF0000  	#1535
; end of __Lib_Mmc_SDIO_FindSCR
_SDIO_DataConfig:
;__Lib_SDIO.c, 702 :: 		
; SDIO_DataInitStruct start address is: 0 (R0)
0x02E8	0xB081    SUB	SP, SP, #4
; SDIO_DataInitStruct end address is: 0 (R0)
; SDIO_DataInitStruct start address is: 0 (R0)
;__Lib_SDIO.c, 704 :: 		
;__Lib_SDIO.c, 708 :: 		
0x02EA	0x6802    LDR	R2, [R0, #0]
0x02EC	0x4910    LDR	R1, [PC, #64]
0x02EE	0x600A    STR	R2, [R1, #0]
;__Lib_SDIO.c, 712 :: 		
0x02F0	0x1D01    ADDS	R1, R0, #4
0x02F2	0x680A    LDR	R2, [R1, #0]
0x02F4	0x490F    LDR	R1, [PC, #60]
0x02F6	0x600A    STR	R2, [R1, #0]
;__Lib_SDIO.c, 716 :: 		
0x02F8	0x490F    LDR	R1, [PC, #60]
; tmpreg start address is: 8 (R2)
0x02FA	0x680A    LDR	R2, [R1, #0]
;__Lib_SDIO.c, 718 :: 		
0x02FC	0xF06F01F7  MVN	R1, #247
0x0300	0xEA020301  AND	R3, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_SDIO.c, 723 :: 		
0x0304	0xF2000108  ADDW	R1, R0, #8
0x0308	0x680A    LDR	R2, [R1, #0]
0x030A	0xF200010C  ADDW	R1, R0, #12
0x030E	0x6809    LDR	R1, [R1, #0]
0x0310	0x430A    ORRS	R2, R1
;__Lib_SDIO.c, 724 :: 		
0x0312	0xF2000110  ADDW	R1, R0, #16
0x0316	0x6809    LDR	R1, [R1, #0]
0x0318	0x430A    ORRS	R2, R1
0x031A	0xF2000114  ADDW	R1, R0, #20
; SDIO_DataInitStruct end address is: 0 (R0)
0x031E	0x6809    LDR	R1, [R1, #0]
0x0320	0xEA420101  ORR	R1, R2, R1, LSL #0
0x0324	0xEA430201  ORR	R2, R3, R1, LSL #0
;__Lib_SDIO.c, 727 :: 		
0x0328	0x4903    LDR	R1, [PC, #12]
0x032A	0x600A    STR	R2, [R1, #0]
;__Lib_SDIO.c, 728 :: 		
L_end_SDIO_DataConfig:
0x032C	0xB001    ADD	SP, SP, #4
0x032E	0x4770    BX	LR
0x0330	0x2C244001  	SDIO_DTIMER+0
0x0334	0x2C284001  	SDIO_DLEN+0
0x0338	0x2C2C4001  	SDIO_DCTRL+0
; end of _SDIO_DataConfig
_SDIO_ReadData:
;__Lib_SDIO.c, 774 :: 		
0x0240	0xB081    SUB	SP, SP, #4
;__Lib_SDIO.c, 776 :: 		
0x0242	0x4802    LDR	R0, [PC, #8]
0x0244	0x6800    LDR	R0, [R0, #0]
;__Lib_SDIO.c, 777 :: 		
L_end_SDIO_ReadData:
0x0246	0xB001    ADD	SP, SP, #4
0x0248	0x4770    BX	LR
0x024A	0xBF00    NOP
0x024C	0x2C804001  	SDIO_FIFO+0
; end of _SDIO_ReadData
___CC2DW:
;__Lib_System_4XX.c, 25 :: 		
0x0214	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 27 :: 		
L_loopDW:
;__Lib_System_4XX.c, 28 :: 		
0x0216	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 29 :: 		
0x021A	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 30 :: 		
0x021E	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 31 :: 		
0x0222	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 33 :: 		
L_end___CC2DW:
0x0224	0xB001    ADD	SP, SP, #4
0x0226	0x4770    BX	LR
; end of ___CC2DW
__Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SDIO:
;__Lib_Mmc_SDIO.c, 2595 :: 		
0x5AE0	0xB081    SUB	SP, SP, #4
0x5AE2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 2599 :: 		
0x5AE6	0x2001    MOVS	R0, #1
0x5AE8	0xF7FDFF84  BL	_SDIO_StopSDIOReadWait+0
;__Lib_Mmc_SDIO.c, 2600 :: 		
0x5AEC	0x2000    MOVS	R0, #0
0x5AEE	0xF7FDFF41  BL	_SDIO_StartSDIOReadWait+0
;__Lib_Mmc_SDIO.c, 2602 :: 		
0x5AF2	0x2000    MOVS	R0, #0
0x5AF4	0xF7FDFE6E  BL	_SDIO_SetSDIOOperation+0
;__Lib_Mmc_SDIO.c, 2604 :: 		
0x5AF8	0xF04F0100  MOV	R1, #0
0x5AFC	0x4812    LDR	R0, [PC, #72]
0x5AFE	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 2605 :: 		
0x5B00	0x4812    LDR	R0, [PC, #72]
0x5B02	0xF7FAFBF1  BL	_SDIO_DataConfig+0
;__Lib_Mmc_SDIO.c, 2607 :: 		
0x5B06	0x2100    MOVS	R1, #0
0x5B08	0x4811    LDR	R0, [PC, #68]
0x5B0A	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 2608 :: 		
0x5B0C	0x210C    MOVS	R1, #12
0x5B0E	0x4811    LDR	R0, [PC, #68]
0x5B10	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 2609 :: 		
0x5B12	0xF04F0140  MOV	R1, #64
0x5B16	0x4810    LDR	R0, [PC, #64]
0x5B18	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 2610 :: 		
0x5B1A	0xF04F0100  MOV	R1, #0
0x5B1E	0x480F    LDR	R0, [PC, #60]
0x5B20	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 2611 :: 		
0x5B22	0xF44F6180  MOV	R1, #1024
0x5B26	0x480E    LDR	R0, [PC, #56]
0x5B28	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 2612 :: 		
0x5B2A	0x4809    LDR	R0, [PC, #36]
0x5B2C	0xF7FBF8AA  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2614 :: 		
0x5B30	0x200C    MOVS	R0, #12
0x5B32	0xF7FAFED5  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
; errorStatus start address is: 8 (R2)
0x5B36	0xB2C2    UXTB	R2, R0
;__Lib_Mmc_SDIO.c, 2615 :: 		
0x5B38	0x480A    LDR	R0, [PC, #40]
0x5B3A	0xF7FAFCC7  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2617 :: 		
0x5B3E	0xB2D0    UXTB	R0, R2
; errorStatus end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 2618 :: 		
L_end_Mmc_Multi_Read_Stop_SDIO:
0x5B40	0xF8DDE000  LDR	LR, [SP, #0]
0x5B44	0xB001    ADD	SP, SP, #4
0x5B46	0x4770    BX	LR
0x5B48	0x2D782000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+20
0x5B4C	0x2D642000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+0
0x5B50	0x2D7C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+0
0x5B54	0x2D802000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+4
0x5B58	0x2D842000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+8
0x5B5C	0x2D882000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+12
0x5B60	0x2D8C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+16
0x5B64	0x05FF0000  	#1535
; end of __Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SDIO
_SDIO_StopSDIOReadWait:
;__Lib_SDIO.c, 855 :: 		
; newState start address is: 0 (R0)
0x39F4	0xB081    SUB	SP, SP, #4
; newState end address is: 0 (R0)
; newState start address is: 0 (R0)
;__Lib_SDIO.c, 857 :: 		
0x39F6	0x4902    LDR	R1, [PC, #8]
0x39F8	0x6008    STR	R0, [R1, #0]
; newState end address is: 0 (R0)
;__Lib_SDIO.c, 859 :: 		
L_end_SDIO_StopSDIOReadWait:
0x39FA	0xB001    ADD	SP, SP, #4
0x39FC	0x4770    BX	LR
0x39FE	0xBF00    NOP
0x3A00	0x85A44225  	SDIO_DCTRL+0
; end of _SDIO_StopSDIOReadWait
_SDIO_StartSDIOReadWait:
;__Lib_SDIO.c, 837 :: 		
; newState start address is: 0 (R0)
0x3974	0xB081    SUB	SP, SP, #4
; newState end address is: 0 (R0)
; newState start address is: 0 (R0)
;__Lib_SDIO.c, 839 :: 		
0x3976	0x4902    LDR	R1, [PC, #8]
0x3978	0x6008    STR	R0, [R1, #0]
; newState end address is: 0 (R0)
;__Lib_SDIO.c, 841 :: 		
L_end_SDIO_StartSDIOReadWait:
0x397A	0xB001    ADD	SP, SP, #4
0x397C	0x4770    BX	LR
0x397E	0xBF00    NOP
0x3980	0x85A04225  	SDIO_DCTRL+0
; end of _SDIO_StartSDIOReadWait
_SDIO_SetSDIOOperation:
;__Lib_SDIO.c, 891 :: 		
; newState start address is: 0 (R0)
0x37D4	0xB081    SUB	SP, SP, #4
; newState end address is: 0 (R0)
; newState start address is: 0 (R0)
;__Lib_SDIO.c, 893 :: 		
0x37D6	0x4902    LDR	R1, [PC, #8]
0x37D8	0x6008    STR	R0, [R1, #0]
; newState end address is: 0 (R0)
;__Lib_SDIO.c, 895 :: 		
L_end_SDIO_SetSDIOOperation:
0x37DA	0xB001    ADD	SP, SP, #4
0x37DC	0x4770    BX	LR
0x37DE	0xBF00    NOP
0x37E0	0x85AC4225  	SDIO_DCTRL+0
; end of _SDIO_SetSDIOOperation
__Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO:
;__Lib_Mmc_SDIO.c, 2817 :: 		
0x5BD0	0xB082    SUB	SP, SP, #8
0x5BD2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 2818 :: 		
0x5BD6	0x2000    MOVS	R0, #0
0x5BD8	0xF88D0004  STRB	R0, [SP, #4]
;__Lib_Mmc_SDIO.c, 2821 :: 		
; timeOut start address is: 24 (R6)
0x5BDC	0x2600    MOVS	R6, #0
; timeOut end address is: 24 (R6)
;__Lib_Mmc_SDIO.c, 2826 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO372:
; timeOut start address is: 24 (R6)
0x5BDE	0x4829    LDR	R0, [PC, #164]
0x5BE0	0x6801    LDR	R1, [R0, #0]
0x5BE2	0xF06F407E  MVN	R0, #-33554432
0x5BE6	0x1A41    SUB	R1, R0, R1
0x5BE8	0x4827    LDR	R0, [PC, #156]
0x5BEA	0x6800    LDR	R0, [R0, #0]
0x5BEC	0x4288    CMP	R0, R1
0x5BEE	0xD904    BLS	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO469
0x5BF0	0x4826    LDR	R0, [PC, #152]
0x5BF2	0x4286    CMP	R6, R0
0x5BF4	0xD801    BHI	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO468
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO467:
;__Lib_Mmc_SDIO.c, 2827 :: 		
0x5BF6	0x1C76    ADDS	R6, R6, #1
0x5BF8	0xE7F1    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO372
;__Lib_Mmc_SDIO.c, 2826 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO469:
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO468:
;__Lib_Mmc_SDIO.c, 2830 :: 		
0x5BFA	0x4824    LDR	R0, [PC, #144]
0x5BFC	0x4286    CMP	R6, R0
0x5BFE	0xD801    BHI	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO474
;__Lib_Mmc_SDIO.c, 2831 :: 		
0x5C00	0x2600    MOVS	R6, #0
; timeOut end address is: 24 (R6)
0x5C02	0xE7FF    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO376
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO474:
;__Lib_Mmc_SDIO.c, 2830 :: 		
;__Lib_Mmc_SDIO.c, 2831 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO376:
;__Lib_Mmc_SDIO.c, 2833 :: 		
; timeOut start address is: 24 (R6)
0x5C04	0x2100    MOVS	R1, #0
0x5C06	0x4822    LDR	R0, [PC, #136]
0x5C08	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 2834 :: 		
0x5C0A	0x210C    MOVS	R1, #12
0x5C0C	0x4821    LDR	R0, [PC, #132]
0x5C0E	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 2835 :: 		
0x5C10	0xF04F0140  MOV	R1, #64
0x5C14	0x4820    LDR	R0, [PC, #128]
0x5C16	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 2836 :: 		
0x5C18	0xF04F0100  MOV	R1, #0
0x5C1C	0x481F    LDR	R0, [PC, #124]
0x5C1E	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 2837 :: 		
0x5C20	0xF44F6180  MOV	R1, #1024
0x5C24	0x481E    LDR	R0, [PC, #120]
0x5C26	0x6001    STR	R1, [R0, #0]
;__Lib_Mmc_SDIO.c, 2838 :: 		
0x5C28	0x4819    LDR	R0, [PC, #100]
0x5C2A	0xF7FBF82B  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2840 :: 		
0x5C2E	0x200C    MOVS	R0, #12
0x5C30	0xF7FAFE56  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
0x5C34	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO377
; timeOut end address is: 24 (R6)
;__Lib_Mmc_SDIO.c, 2841 :: 		
0x5C36	0x2001    MOVS	R0, #1
0x5C38	0xE01F    B	L_end_Mmc_Multi_Write_Stop_SDIO
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO377:
;__Lib_Mmc_SDIO.c, 2843 :: 		
; timeOut start address is: 24 (R6)
0x5C3A	0x481A    LDR	R0, [PC, #104]
0x5C3C	0xF7FAFC46  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2846 :: 		
0x5C40	0xA801    ADD	R0, SP, #4
0x5C42	0xF7FDFDCF  BL	__Lib_Mmc_SDIO_IsCardProgramming+0
; errorstatus start address is: 4 (R1)
0x5C46	0xB2C1    UXTB	R1, R0
; errorstatus end address is: 4 (R1)
; timeOut end address is: 24 (R6)
;__Lib_Mmc_SDIO.c, 2848 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO378:
; errorstatus start address is: 4 (R1)
; timeOut start address is: 24 (R6)
0x5C48	0xB989    CBNZ	R1, L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO473
0x5C4A	0xF89D0004  LDRB	R0, [SP, #4]
0x5C4E	0x2807    CMP	R0, #7
0x5C50	0xD004    BEQ	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO471
0x5C52	0xF89D0004  LDRB	R0, [SP, #4]
0x5C56	0x2806    CMP	R0, #6
0x5C58	0xD000    BEQ	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO470
0x5C5A	0xE008    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO379
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO471:
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO470:
0x5C5C	0x480B    LDR	R0, [PC, #44]
0x5C5E	0x4286    CMP	R6, R0
0x5C60	0xD805    BHI	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO472
; errorstatus end address is: 4 (R1)
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO465:
;__Lib_Mmc_SDIO.c, 2850 :: 		
0x5C62	0xA801    ADD	R0, SP, #4
0x5C64	0xF7FDFDBE  BL	__Lib_Mmc_SDIO_IsCardProgramming+0
; errorstatus start address is: 4 (R1)
0x5C68	0xB2C1    UXTB	R1, R0
;__Lib_Mmc_SDIO.c, 2851 :: 		
0x5C6A	0x1C76    ADDS	R6, R6, #1
;__Lib_Mmc_SDIO.c, 2852 :: 		
0x5C6C	0xE7EC    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO378
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO379:
;__Lib_Mmc_SDIO.c, 2848 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO473:
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO472:
;__Lib_Mmc_SDIO.c, 2853 :: 		
0x5C6E	0x4807    LDR	R0, [PC, #28]
0x5C70	0x4286    CMP	R6, R0
0x5C72	0xD901    BLS	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO475
; errorstatus end address is: 4 (R1)
; timeOut end address is: 24 (R6)
;__Lib_Mmc_SDIO.c, 2854 :: 		
; errorstatus start address is: 0 (R0)
0x5C74	0x2001    MOVS	R0, #1
; errorstatus end address is: 0 (R0)
0x5C76	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO384
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO475:
;__Lib_Mmc_SDIO.c, 2853 :: 		
0x5C78	0xB2C8    UXTB	R0, R1
;__Lib_Mmc_SDIO.c, 2854 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO384:
;__Lib_Mmc_SDIO.c, 2856 :: 		
; errorstatus start address is: 0 (R0)
; errorstatus end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2857 :: 		
L_end_Mmc_Multi_Write_Stop_SDIO:
0x5C7A	0xF8DDE000  LDR	LR, [SP, #0]
0x5C7E	0xB002    ADD	SP, SP, #8
0x5C80	0x4770    BX	LR
0x5C82	0xBF00    NOP
0x5C84	0x2D902000  	__Lib_Mmc_SDIO_numberOfBytesSent+0
0x5C88	0x2C304001  	SDIO_DCOUNT+0
0x5C8C	0xFFFF001F  	#2097151
0x5C90	0x2D7C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+0
0x5C94	0x2D802000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+4
0x5C98	0x2D842000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+8
0x5C9C	0x2D882000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+12
0x5CA0	0x2D8C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+16
0x5CA4	0x05FF0000  	#1535
; end of __Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO
__Lib_Mmc_SDIO_IsCardProgramming:
;__Lib_Mmc_SDIO.c, 1931 :: 		
; pstatus start address is: 0 (R0)
0x37E4	0xB081    SUB	SP, SP, #4
0x37E6	0xF8CDE000  STR	LR, [SP, #0]
0x37EA	0x4604    MOV	R4, R0
; pstatus end address is: 0 (R0)
; pstatus start address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 1933 :: 		
; errorstatus start address is: 20 (R5)
0x37EC	0x2500    MOVS	R5, #0
;__Lib_Mmc_SDIO.c, 1934 :: 		
;__Lib_Mmc_SDIO.c, 1936 :: 		
0x37EE	0x4957    LDR	R1, [PC, #348]
0x37F0	0x6809    LDR	R1, [R1, #0]
0x37F2	0x040A    LSLS	R2, R1, #16
0x37F4	0x4956    LDR	R1, [PC, #344]
0x37F6	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1937 :: 		
0x37F8	0x220D    MOVS	R2, #13
0x37FA	0x4956    LDR	R1, [PC, #344]
0x37FC	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1938 :: 		
0x37FE	0xF04F0240  MOV	R2, #64
0x3802	0x4955    LDR	R1, [PC, #340]
0x3804	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1939 :: 		
0x3806	0xF04F0200  MOV	R2, #0
0x380A	0x4954    LDR	R1, [PC, #336]
0x380C	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1940 :: 		
0x380E	0xF44F6280  MOV	R2, #1024
0x3812	0x4953    LDR	R1, [PC, #332]
0x3814	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 1941 :: 		
0x3816	0x484E    LDR	R0, [PC, #312]
0x3818	0xF7FDFA34  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 1943 :: 		
0x381C	0x4951    LDR	R1, [PC, #324]
; status start address is: 0 (R0)
0x381E	0x6808    LDR	R0, [R1, #0]
; pstatus end address is: 16 (R4)
; errorstatus end address is: 20 (R5)
; status end address is: 0 (R0)
0x3820	0x4623    MOV	R3, R4
0x3822	0xB2EA    UXTB	R2, R5
;__Lib_Mmc_SDIO.c, 1944 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming222:
; status start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
; pstatus start address is: 12 (R3)
0x3824	0xF0000145  AND	R1, R0, #69
0x3828	0xB911    CBNZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming223
; status end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1946 :: 		
0x382A	0x494E    LDR	R1, [PC, #312]
; status start address is: 0 (R0)
0x382C	0x6808    LDR	R0, [R1, #0]
;__Lib_Mmc_SDIO.c, 1947 :: 		
0x382E	0xE7F9    B	L___Lib_Mmc_SDIO_IsCardProgramming222
L___Lib_Mmc_SDIO_IsCardProgramming223:
;__Lib_Mmc_SDIO.c, 1949 :: 		
0x3830	0xF0000104  AND	R1, R0, #4
0x3834	0xB129    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming224
; errorstatus end address is: 8 (R2)
; pstatus end address is: 12 (R3)
; status end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1951 :: 		
0x3836	0xF04F0004  MOV	R0, #4
0x383A	0xF7FCFE47  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1952 :: 		
0x383E	0x2001    MOVS	R0, #1
0x3840	0xE07F    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 1953 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming224:
;__Lib_Mmc_SDIO.c, 1954 :: 		
; status start address is: 0 (R0)
; pstatus start address is: 12 (R3)
; errorstatus start address is: 8 (R2)
0x3842	0xF0000101  AND	R1, R0, #1
; status end address is: 0 (R0)
0x3846	0xB129    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming226
; errorstatus end address is: 8 (R2)
; pstatus end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 1956 :: 		
0x3848	0xF04F0001  MOV	R0, #1
0x384C	0xF7FCFE3E  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1957 :: 		
0x3850	0x2001    MOVS	R0, #1
0x3852	0xE076    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 1958 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming226:
;__Lib_Mmc_SDIO.c, 1960 :: 		
; pstatus start address is: 12 (R3)
; errorstatus start address is: 8 (R2)
0x3854	0xF7FCFDE2  BL	_SDIO_GetCommandResponse+0
0x3858	0xB2C1    UXTB	R1, R0
;__Lib_Mmc_SDIO.c, 1963 :: 		
0x385A	0x290D    CMP	R1, #13
0x385C	0xD001    BEQ	L___Lib_Mmc_SDIO_IsCardProgramming227
; errorstatus end address is: 8 (R2)
; pstatus end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 1965 :: 		
0x385E	0x2001    MOVS	R0, #1
0x3860	0xE06F    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 1966 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming227:
;__Lib_Mmc_SDIO.c, 1969 :: 		
; pstatus start address is: 12 (R3)
; errorstatus start address is: 8 (R2)
0x3862	0x4841    LDR	R0, [PC, #260]
0x3864	0xF7FCFE32  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 1973 :: 		
0x3868	0x4940    LDR	R1, [PC, #256]
; respR1 start address is: 0 (R0)
0x386A	0x6808    LDR	R0, [R1, #0]
;__Lib_Mmc_SDIO.c, 1976 :: 		
0x386C	0x0A41    LSRS	R1, R0, #9
0x386E	0xF001010F  AND	R1, R1, #15
0x3872	0xB2C9    UXTB	R1, R1
0x3874	0x7019    STRB	R1, [R3, #0]
; pstatus end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 1978 :: 		
0x3876	0x493E    LDR	R1, [PC, #248]
0x3878	0xEA000101  AND	R1, R0, R1, LSL #0
0x387C	0xB909    CBNZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming228
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1980 :: 		
0x387E	0x2000    MOVS	R0, #0
0x3880	0xE05F    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 1981 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming228:
;__Lib_Mmc_SDIO.c, 1983 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x3882	0xF0004100  AND	R1, R0, #-2147483648
0x3886	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming229
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1985 :: 		
0x3888	0x2001    MOVS	R0, #1
0x388A	0xE05A    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 1986 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming229:
;__Lib_Mmc_SDIO.c, 1988 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x388C	0xF0004180  AND	R1, R0, #1073741824
0x3890	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming230
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1990 :: 		
0x3892	0x2001    MOVS	R0, #1
0x3894	0xE055    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 1991 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming230:
;__Lib_Mmc_SDIO.c, 1993 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x3896	0xF0005100  AND	R1, R0, #536870912
0x389A	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming231
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 1995 :: 		
0x389C	0x2001    MOVS	R0, #1
0x389E	0xE050    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 1996 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming231:
;__Lib_Mmc_SDIO.c, 1998 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x38A0	0xF0005180  AND	R1, R0, #268435456
0x38A4	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming232
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2000 :: 		
0x38A6	0x2001    MOVS	R0, #1
0x38A8	0xE04B    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2001 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming232:
;__Lib_Mmc_SDIO.c, 2003 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x38AA	0xF0006100  AND	R1, R0, #134217728
0x38AE	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming233
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2005 :: 		
0x38B0	0x2001    MOVS	R0, #1
0x38B2	0xE046    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2006 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming233:
;__Lib_Mmc_SDIO.c, 2008 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x38B4	0xF0006180  AND	R1, R0, #67108864
0x38B8	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming234
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2010 :: 		
0x38BA	0x2001    MOVS	R0, #1
0x38BC	0xE041    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2011 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming234:
;__Lib_Mmc_SDIO.c, 2013 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x38BE	0xF0007180  AND	R1, R0, #16777216
0x38C2	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming235
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2015 :: 		
0x38C4	0x2001    MOVS	R0, #1
0x38C6	0xE03C    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2016 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming235:
;__Lib_Mmc_SDIO.c, 2018 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x38C8	0xF4000100  AND	R1, R0, #8388608
0x38CC	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming236
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2020 :: 		
0x38CE	0x2001    MOVS	R0, #1
0x38D0	0xE037    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2021 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming236:
;__Lib_Mmc_SDIO.c, 2023 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x38D2	0xF4000180  AND	R1, R0, #4194304
0x38D6	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming237
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2025 :: 		
0x38D8	0x2001    MOVS	R0, #1
0x38DA	0xE032    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2026 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming237:
;__Lib_Mmc_SDIO.c, 2028 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x38DC	0xF4001100  AND	R1, R0, #2097152
0x38E0	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming238
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2030 :: 		
0x38E2	0x2001    MOVS	R0, #1
0x38E4	0xE02D    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2031 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming238:
;__Lib_Mmc_SDIO.c, 2033 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x38E6	0xF4001180  AND	R1, R0, #1048576
0x38EA	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming239
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2035 :: 		
0x38EC	0x2001    MOVS	R0, #1
0x38EE	0xE028    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2036 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming239:
;__Lib_Mmc_SDIO.c, 2038 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x38F0	0xF4002100  AND	R1, R0, #524288
0x38F4	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming240
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2040 :: 		
0x38F6	0x2001    MOVS	R0, #1
0x38F8	0xE023    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2041 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming240:
;__Lib_Mmc_SDIO.c, 2043 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x38FA	0xF4002180  AND	R1, R0, #262144
0x38FE	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming241
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2045 :: 		
0x3900	0x2001    MOVS	R0, #1
0x3902	0xE01E    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2046 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming241:
;__Lib_Mmc_SDIO.c, 2048 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x3904	0xF4003100  AND	R1, R0, #131072
0x3908	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming242
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2050 :: 		
0x390A	0x2001    MOVS	R0, #1
0x390C	0xE019    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2051 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming242:
;__Lib_Mmc_SDIO.c, 2053 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x390E	0xF4003180  AND	R1, R0, #65536
0x3912	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming243
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2055 :: 		
0x3914	0x2001    MOVS	R0, #1
0x3916	0xE014    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2056 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming243:
;__Lib_Mmc_SDIO.c, 2058 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x3918	0xF4004100  AND	R1, R0, #32768
0x391C	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming244
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2060 :: 		
0x391E	0x2001    MOVS	R0, #1
0x3920	0xE00F    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2061 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming244:
;__Lib_Mmc_SDIO.c, 2063 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x3922	0xF4004180  AND	R1, R0, #16384
0x3926	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming245
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2065 :: 		
0x3928	0x2001    MOVS	R0, #1
0x392A	0xE00A    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2066 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming245:
;__Lib_Mmc_SDIO.c, 2068 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x392C	0xF4005100  AND	R1, R0, #8192
0x3930	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming246
; errorstatus end address is: 8 (R2)
; respR1 end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2070 :: 		
0x3932	0x2001    MOVS	R0, #1
0x3934	0xE005    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2071 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming246:
;__Lib_Mmc_SDIO.c, 2073 :: 		
; respR1 start address is: 0 (R0)
; errorstatus start address is: 8 (R2)
0x3936	0xF0000108  AND	R1, R0, #8
; respR1 end address is: 0 (R0)
0x393A	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_IsCardProgramming247
; errorstatus end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 2075 :: 		
0x393C	0x2001    MOVS	R0, #1
0x393E	0xE000    B	L_end_IsCardProgramming
;__Lib_Mmc_SDIO.c, 2076 :: 		
L___Lib_Mmc_SDIO_IsCardProgramming247:
;__Lib_Mmc_SDIO.c, 2078 :: 		
; errorstatus start address is: 8 (R2)
0x3940	0xB2D0    UXTB	R0, R2
; errorstatus end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 2079 :: 		
L_end_IsCardProgramming:
0x3942	0xF8DDE000  LDR	LR, [SP, #0]
0x3946	0xB001    ADD	SP, SP, #4
0x3948	0x4770    BX	LR
0x394A	0xBF00    NOP
0x394C	0x032C2000  	__Lib_Mmc_SDIO_RCA+0
0x3950	0x2D7C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+0
0x3954	0x2D802000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+4
0x3958	0x2D842000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+8
0x395C	0x2D882000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+12
0x3960	0x2D8C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+16
0x3964	0x2C344001  	SDIO_STA+0
0x3968	0x05FF0000  	#1535
0x396C	0x2C144001  	SDIO_RESP1+0
0x3970	0xE008FDFF  	#-33562616
; end of __Lib_Mmc_SDIO_IsCardProgramming
_Mmc_Init_Vars:
;__Lib_MmcFat16.c, 2093 :: 		
0x9D44	0xB081    SUB	SP, SP, #4
0x9D46	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MmcFat16.c, 2097 :: 		
0x9D4A	0x2101    MOVS	R1, #1
0x9D4C	0x482B    LDR	R0, [PC, #172]
0x9D4E	0x7001    STRB	R1, [R0, #0]
;__Lib_MmcFat16.c, 2098 :: 		
0x9D50	0xF2402200  MOVW	R2, #512
0x9D54	0xB212    SXTH	R2, R2
0x9D56	0x2100    MOVS	R1, #0
0x9D58	0x4829    LDR	R0, [PC, #164]
0x9D5A	0xF7FBFFB1  BL	_memset+0
;__Lib_MmcFat16.c, 2101 :: 		
; i start address is: 24 (R6)
0x9D5E	0x2600    MOVS	R6, #0
; i end address is: 24 (R6)
L_Mmc_Init_Vars320:
; i start address is: 24 (R6)
0x9D60	0x2E02    CMP	R6, _MAX_FILES
0x9D62	0xD20A    BCS	L_Mmc_Init_Vars321
;__Lib_MmcFat16.c, 2103 :: 		
0x9D64	0x0171    LSLS	R1, R6, #5
0x9D66	0x4827    LDR	R0, [PC, #156]
0x9D68	0x1840    ADDS	R0, R0, R1
0x9D6A	0x2220    MOVS	R2, #32
0x9D6C	0xB212    SXTH	R2, R2
0x9D6E	0x2100    MOVS	R1, #0
0x9D70	0xF7FBFFA6  BL	_memset+0
;__Lib_MmcFat16.c, 2101 :: 		
0x9D74	0x1C76    ADDS	R6, R6, #1
0x9D76	0xB2F6    UXTB	R6, R6
;__Lib_MmcFat16.c, 2104 :: 		
; i end address is: 24 (R6)
0x9D78	0xE7F2    B	L_Mmc_Init_Vars320
L_Mmc_Init_Vars321:
;__Lib_MmcFat16.c, 2105 :: 		
0x9D7A	0x2220    MOVS	R2, #32
0x9D7C	0xB212    SXTH	R2, R2
0x9D7E	0x2100    MOVS	R1, #0
0x9D80	0x4821    LDR	R0, [PC, #132]
0x9D82	0xF7FBFF9D  BL	_memset+0
;__Lib_MmcFat16.c, 2109 :: 		
; i start address is: 24 (R6)
0x9D86	0x2600    MOVS	R6, #0
; i end address is: 24 (R6)
L_Mmc_Init_Vars323:
; i start address is: 24 (R6)
0x9D88	0x2E04    CMP	R6, #4
0x9D8A	0xD20A    BCS	L_Mmc_Init_Vars324
;__Lib_MmcFat16.c, 2111 :: 		
0x9D8C	0x00F1    LSLS	R1, R6, #3
0x9D8E	0x481F    LDR	R0, [PC, #124]
0x9D90	0x1840    ADDS	R0, R0, R1
0x9D92	0x2208    MOVS	R2, #8
0x9D94	0xB212    SXTH	R2, R2
0x9D96	0x2100    MOVS	R1, #0
0x9D98	0xF7FBFF92  BL	_memset+0
;__Lib_MmcFat16.c, 2109 :: 		
0x9D9C	0x1C76    ADDS	R6, R6, #1
0x9D9E	0xB2F6    UXTB	R6, R6
;__Lib_MmcFat16.c, 2112 :: 		
; i end address is: 24 (R6)
0x9DA0	0xE7F2    B	L_Mmc_Init_Vars323
L_Mmc_Init_Vars324:
;__Lib_MmcFat16.c, 2115 :: 		
0x9DA2	0x2218    MOVS	R2, #24
0x9DA4	0xB212    SXTH	R2, R2
0x9DA6	0x2100    MOVS	R1, #0
0x9DA8	0x4819    LDR	R0, [PC, #100]
0x9DAA	0xF7FBFF89  BL	_memset+0
;__Lib_MmcFat16.c, 2118 :: 		
0x9DAE	0x4913    LDR	R1, [PC, #76]
0x9DB0	0x4818    LDR	R0, [PC, #96]
0x9DB2	0x6001    STR	R1, [R0, #0]
;__Lib_MmcFat16.c, 2119 :: 		
0x9DB4	0x2100    MOVS	R1, #0
0x9DB6	0x4818    LDR	R0, [PC, #96]
0x9DB8	0x7001    STRB	R1, [R0, #0]
;__Lib_MmcFat16.c, 2120 :: 		
0x9DBA	0x2100    MOVS	R1, #0
0x9DBC	0x4817    LDR	R0, [PC, #92]
0x9DBE	0x6001    STR	R1, [R0, #0]
;__Lib_MmcFat16.c, 2121 :: 		
0x9DC0	0x2100    MOVS	R1, #0
0x9DC2	0x4817    LDR	R0, [PC, #92]
0x9DC4	0x7001    STRB	R1, [R0, #0]
;__Lib_MmcFat16.c, 2122 :: 		
0x9DC6	0x2100    MOVS	R1, #0
0x9DC8	0x4816    LDR	R0, [PC, #88]
0x9DCA	0x8001    STRH	R1, [R0, #0]
;__Lib_MmcFat16.c, 2123 :: 		
0x9DCC	0x2100    MOVS	R1, #0
0x9DCE	0x4816    LDR	R0, [PC, #88]
0x9DD0	0x6001    STR	R1, [R0, #0]
;__Lib_MmcFat16.c, 2124 :: 		
0x9DD2	0x21FF    MOVS	R1, #-1
0x9DD4	0xB249    SXTB	R1, R1
0x9DD6	0x4815    LDR	R0, [PC, #84]
0x9DD8	0x7001    STRB	R1, [R0, #0]
;__Lib_MmcFat16.c, 2125 :: 		
0x9DDA	0x220D    MOVS	R2, #13
0x9DDC	0xB212    SXTH	R2, R2
0x9DDE	0x2100    MOVS	R1, #0
0x9DE0	0x4813    LDR	R0, [PC, #76]
0x9DE2	0xF7FBFF6D  BL	_memset+0
;__Lib_MmcFat16.c, 2128 :: 		
0x9DE6	0x2100    MOVS	R1, #0
0x9DE8	0x4812    LDR	R0, [PC, #72]
0x9DEA	0x8001    STRH	R1, [R0, #0]
;__Lib_MmcFat16.c, 2129 :: 		
0x9DEC	0x2100    MOVS	R1, #0
0x9DEE	0x4812    LDR	R0, [PC, #72]
0x9DF0	0x8001    STRH	R1, [R0, #0]
;__Lib_MmcFat16.c, 2130 :: 		
L_end_Mmc_Init_Vars:
0x9DF2	0xF8DDE000  LDR	LR, [SP, #0]
0x9DF6	0xB001    ADD	SP, SP, #4
0x9DF8	0x4770    BX	LR
0x9DFA	0xBF00    NOP
0x9DFC	0x2CDC2000  	_f16_sector+512
0x9E00	0x2ADC2000  	_f16_sector+0
0x9E04	0x2CF82000  	_f16_fileDesc+0
0x9E08	0x2AA02000  	__Lib_MmcFat16_f16_cFD+0
0x9E0C	0x2D382000  	__Lib_MmcFat16_f16_part+0
0x9E10	0x2AC02000  	__Lib_MmcFat16_f16_boot+0
0x9E14	0x2CE02000  	__Lib_MmcFat16_f16_sectBuffEnd+0
0x9E18	0x2D582000  	__Lib_MmcFat16_f16_activePart+0
0x9E1C	0x2AD82000  	__Lib_MmcFat16_f16_currentDir+0
0x9E20	0x2A912000  	___f16_errno+0
0x9E24	0x2D5A2000  	__Lib_MmcFat16_f16_dirEntry+0
0x9E28	0x2D5C2000  	__Lib_MmcFat16_f16_openedDir+0
0x9E2C	0x2CF72000  	__Lib_MmcFat16_f16_currentHandle+0
0x9E30	0x2CEA2000  	__Lib_MmcFat16_tmpBuf+0
0x9E34	0x2CE42000  	__Lib_MmcFat16_f16_time+0
0x9E38	0x2CE62000  	__Lib_MmcFat16_f16_date+0
; end of _Mmc_Init_Vars
_memset:
;__Lib_CString.c, 84 :: 		
; n start address is: 8 (R2)
; character start address is: 4 (R1)
; p1 start address is: 0 (R0)
0x5CC0	0xB081    SUB	SP, SP, #4
0x5CC2	0xB213    SXTH	R3, R2
0x5CC4	0x4602    MOV	R2, R0
0x5CC6	0xB2C8    UXTB	R0, R1
; n end address is: 8 (R2)
; character end address is: 4 (R1)
; p1 end address is: 0 (R0)
; p1 start address is: 8 (R2)
; character start address is: 0 (R0)
; n start address is: 12 (R3)
;__Lib_CString.c, 87 :: 		
; pp start address is: 4 (R1)
0x5CC8	0x4611    MOV	R1, R2
; n end address is: 12 (R3)
; p1 end address is: 8 (R2)
; pp end address is: 4 (R1)
0x5CCA	0xB21D    SXTH	R5, R3
;__Lib_CString.c, 88 :: 		
L_memset20:
; pp start address is: 4 (R1)
; n start address is: 20 (R5)
; n start address is: 20 (R5)
; character start address is: 0 (R0)
; character end address is: 0 (R0)
; p1 start address is: 8 (R2)
0x5CCC	0xB22C    SXTH	R4, R5
0x5CCE	0x1E6B    SUBS	R3, R5, #1
0x5CD0	0xB21D    SXTH	R5, R3
; n end address is: 20 (R5)
0x5CD2	0xB114    CBZ	R4, L_memset21
; character end address is: 0 (R0)
; n end address is: 20 (R5)
;__Lib_CString.c, 89 :: 		
; n start address is: 20 (R5)
; character start address is: 0 (R0)
0x5CD4	0x7008    STRB	R0, [R1, #0]
0x5CD6	0x1C49    ADDS	R1, R1, #1
; character end address is: 0 (R0)
; n end address is: 20 (R5)
; pp end address is: 4 (R1)
0x5CD8	0xE7F8    B	L_memset20
L_memset21:
;__Lib_CString.c, 90 :: 		
0x5CDA	0x4610    MOV	R0, R2
; p1 end address is: 8 (R2)
;__Lib_CString.c, 91 :: 		
L_end_memset:
0x5CDC	0xB001    ADD	SP, SP, #4
0x5CDE	0x4770    BX	LR
; end of _memset
__Lib_MmcFat16_Mmc_Fat_Get_Info:
;__Lib_MmcFat16.c, 305 :: 		
0xA010	0xB083    SUB	SP, SP, #12
0xA012	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MmcFat16.c, 310 :: 		
;__Lib_MmcFat16.c, 312 :: 		
0xA016	0x2101    MOVS	R1, #1
0xA018	0x4859    LDR	R0, [PC, #356]
0xA01A	0x7001    STRB	R1, [R0, #0]
;__Lib_MmcFat16.c, 313 :: 		
0xA01C	0x4959    LDR	R1, [PC, #356]
0xA01E	0x2000    MOVS	R0, #0
0xA020	0xF7FBFE42  BL	_Mmc_Read_Sector+0
0xA024	0xB120    CBZ	R0, L___Lib_MmcFat16_Mmc_Fat_Get_Info46
;__Lib_MmcFat16.c, 315 :: 		
0xA026	0x2110    MOVS	R1, #16
0xA028	0x4857    LDR	R0, [PC, #348]
0xA02A	0x7001    STRB	R1, [R0, #0]
;__Lib_MmcFat16.c, 316 :: 		
0xA02C	0x20FF    MOVS	R0, #255
0xA02E	0xE0A2    B	L_end_Mmc_Fat_Get_Info
;__Lib_MmcFat16.c, 317 :: 		
L___Lib_MmcFat16_Mmc_Fat_Get_Info46:
;__Lib_MmcFat16.c, 319 :: 		
; ptr start address is: 4 (R1)
0xA030	0x4954    LDR	R1, [PC, #336]
;__Lib_MmcFat16.c, 321 :: 		
0xA032	0xF50170FF  ADD	R0, R1, #510
0xA036	0x7800    LDRB	R0, [R0, #0]
0xA038	0x2855    CMP	R0, #85
0xA03A	0xD001    BEQ	L___Lib_MmcFat16_Mmc_Fat_Get_Info47
; ptr end address is: 4 (R1)
;__Lib_MmcFat16.c, 322 :: 		
0xA03C	0x2001    MOVS	R0, #1
0xA03E	0xE09A    B	L_end_Mmc_Fat_Get_Info
L___Lib_MmcFat16_Mmc_Fat_Get_Info47:
;__Lib_MmcFat16.c, 323 :: 		
; ptr start address is: 4 (R1)
0xA040	0xF20110FF  ADDW	R0, R1, #511
0xA044	0x7800    LDRB	R0, [R0, #0]
0xA046	0x28AA    CMP	R0, #170
0xA048	0xD001    BEQ	L___Lib_MmcFat16_Mmc_Fat_Get_Info48
; ptr end address is: 4 (R1)
;__Lib_MmcFat16.c, 324 :: 		
0xA04A	0x2001    MOVS	R0, #1
0xA04C	0xE093    B	L_end_Mmc_Fat_Get_Info
L___Lib_MmcFat16_Mmc_Fat_Get_Info48:
;__Lib_MmcFat16.c, 327 :: 		
; isBoot start address is: 8 (R2)
; ptr start address is: 4 (R1)
0xA04E	0x2200    MOVS	R2, #0
;__Lib_MmcFat16.c, 328 :: 		
0xA050	0x7808    LDRB	R0, [R1, #0]
0xA052	0x28E9    CMP	R0, #233
0xA054	0xD102    BNE	L___Lib_MmcFat16_Mmc_Fat_Get_Info424
; isBoot end address is: 8 (R2)
;__Lib_MmcFat16.c, 329 :: 		
; isBoot start address is: 0 (R0)
0xA056	0x2001    MOVS	R0, #1
; isBoot end address is: 0 (R0)
0xA058	0xB2C2    UXTB	R2, R0
0xA05A	0xE7FF    B	L___Lib_MmcFat16_Mmc_Fat_Get_Info49
L___Lib_MmcFat16_Mmc_Fat_Get_Info424:
;__Lib_MmcFat16.c, 328 :: 		
;__Lib_MmcFat16.c, 329 :: 		
L___Lib_MmcFat16_Mmc_Fat_Get_Info49:
;__Lib_MmcFat16.c, 330 :: 		
; isBoot start address is: 8 (R2)
0xA05C	0x7808    LDRB	R0, [R1, #0]
0xA05E	0x28EB    CMP	R0, #235
0xA060	0xD105    BNE	L___Lib_MmcFat16_Mmc_Fat_Get_Info425
0xA062	0x1C88    ADDS	R0, R1, #2
; ptr end address is: 4 (R1)
0xA064	0x7800    LDRB	R0, [R0, #0]
0xA066	0x2890    CMP	R0, #144
0xA068	0xD103    BNE	L___Lib_MmcFat16_Mmc_Fat_Get_Info426
; isBoot end address is: 8 (R2)
L___Lib_MmcFat16_Mmc_Fat_Get_Info419:
;__Lib_MmcFat16.c, 331 :: 		
; isBoot start address is: 0 (R0)
0xA06A	0x2001    MOVS	R0, #1
; isBoot end address is: 0 (R0)
;__Lib_MmcFat16.c, 330 :: 		
0xA06C	0xE000    B	L___Lib_MmcFat16_Mmc_Fat_Get_Info421
L___Lib_MmcFat16_Mmc_Fat_Get_Info425:
0xA06E	0xB2D0    UXTB	R0, R2
L___Lib_MmcFat16_Mmc_Fat_Get_Info421:
; isBoot start address is: 0 (R0)
; isBoot end address is: 0 (R0)
0xA070	0xE000    B	L___Lib_MmcFat16_Mmc_Fat_Get_Info420
L___Lib_MmcFat16_Mmc_Fat_Get_Info426:
0xA072	0xB2D0    UXTB	R0, R2
L___Lib_MmcFat16_Mmc_Fat_Get_Info420:
;__Lib_MmcFat16.c, 333 :: 		
; isBoot start address is: 0 (R0)
0xA074	0x2800    CMP	R0, #0
0xA076	0xD048    BEQ	L___Lib_MmcFat16_Mmc_Fat_Get_Info53
; isBoot end address is: 0 (R0)
;__Lib_MmcFat16.c, 335 :: 		
;__Lib_MmcFat16.c, 336 :: 		
; p start address is: 8 (R2)
0xA078	0x4A44    LDR	R2, [PC, #272]
;__Lib_MmcFat16.c, 337 :: 		
0xA07A	0x2080    MOVS	R0, #128
0xA07C	0x7010    STRB	R0, [R2, #0]
;__Lib_MmcFat16.c, 338 :: 		
0xA07E	0x1D11    ADDS	R1, R2, #4
0xA080	0x2000    MOVS	R0, #0
0xA082	0x6008    STR	R0, [R1, #0]
;__Lib_MmcFat16.c, 339 :: 		
0xA084	0x9201    STR	R2, [SP, #4]
0xA086	0xF7FBFF29  BL	__Lib_MmcFat16_getBoot+0
0xA08A	0x9A01    LDR	R2, [SP, #4]
0xA08C	0x2800    CMP	R0, #0
0xA08E	0xDA01    BGE	L___Lib_MmcFat16_Mmc_Fat_Get_Info54
; p end address is: 8 (R2)
;__Lib_MmcFat16.c, 340 :: 		
0xA090	0x2001    MOVS	R0, #1
0xA092	0xE070    B	L_end_Mmc_Fat_Get_Info
L___Lib_MmcFat16_Mmc_Fat_Get_Info54:
;__Lib_MmcFat16.c, 354 :: 		
; p start address is: 8 (R2)
0xA094	0x483E    LDR	R0, [PC, #248]
0xA096	0x8800    LDRH	R0, [R0, #0]
0xA098	0x2800    CMP	R0, #0
0xA09A	0xD030    BEQ	L___Lib_MmcFat16_Mmc_Fat_Get_Info55
;__Lib_MmcFat16.c, 356 :: 		
0xA09C	0x483D    LDR	R0, [PC, #244]
0xA09E	0x7801    LDRB	R1, [R0, #0]
0xA0A0	0x483D    LDR	R0, [PC, #244]
0xA0A2	0x7800    LDRB	R0, [R0, #0]
0xA0A4	0x4308    ORRS	R0, R1
0xA0A6	0xB2C0    UXTB	R0, R0
0xA0A8	0xB148    CBZ	R0, L___Lib_MmcFat16_Mmc_Fat_Get_Info56
;__Lib_MmcFat16.c, 358 :: 		
0xA0AA	0x483A    LDR	R0, [PC, #232]
; tmp start address is: 0 (R0)
0xA0AC	0x7800    LDRB	R0, [R0, #0]
0xA0AE	0x0203    LSLS	R3, R0, #8
; tmp end address is: 0 (R0)
;__Lib_MmcFat16.c, 359 :: 		
0xA0B0	0x4839    LDR	R0, [PC, #228]
0xA0B2	0x7800    LDRB	R0, [R0, #0]
0xA0B4	0x181B    ADDS	R3, R3, R0
; tmp start address is: 12 (R3)
;__Lib_MmcFat16.c, 361 :: 		
0xA0B6	0x1C51    ADDS	R1, R2, #1
0xA0B8	0x2004    MOVS	R0, #4
0xA0BA	0x7008    STRB	R0, [R1, #0]
;__Lib_MmcFat16.c, 362 :: 		
; tmp end address is: 12 (R3)
0xA0BC	0xE004    B	L___Lib_MmcFat16_Mmc_Fat_Get_Info57
L___Lib_MmcFat16_Mmc_Fat_Get_Info56:
;__Lib_MmcFat16.c, 365 :: 		
0xA0BE	0x4837    LDR	R0, [PC, #220]
; tmp start address is: 12 (R3)
0xA0C0	0x6803    LDR	R3, [R0, #0]
;__Lib_MmcFat16.c, 366 :: 		
0xA0C2	0x1C51    ADDS	R1, R2, #1
0xA0C4	0x2006    MOVS	R0, #6
0xA0C6	0x7008    STRB	R0, [R1, #0]
; tmp end address is: 12 (R3)
;__Lib_MmcFat16.c, 367 :: 		
L___Lib_MmcFat16_Mmc_Fat_Get_Info57:
;__Lib_MmcFat16.c, 369 :: 		
; tmp start address is: 12 (R3)
0xA0C8	0x4835    LDR	R0, [PC, #212]
0xA0CA	0x6800    LDR	R0, [R0, #0]
0xA0CC	0x1A19    SUB	R1, R3, R0
; tmp end address is: 12 (R3)
0xA0CE	0x4835    LDR	R0, [PC, #212]
0xA0D0	0x8800    LDRH	R0, [R0, #0]
0xA0D2	0xFBB1F1F0  UDIV	R1, R1, R0
; tmp start address is: 12 (R3)
0xA0D6	0x460B    MOV	R3, R1
;__Lib_MmcFat16.c, 377 :: 		
0xA0D8	0xF64070F5  MOVW	R0, #4085
0xA0DC	0x4281    CMP	R1, R0
0xA0DE	0xD204    BCS	L___Lib_MmcFat16_Mmc_Fat_Get_Info58
; tmp end address is: 12 (R3)
;__Lib_MmcFat16.c, 379 :: 		
0xA0E0	0x1C51    ADDS	R1, R2, #1
; p end address is: 8 (R2)
0xA0E2	0x2001    MOVS	R0, #1
0xA0E4	0x7008    STRB	R0, [R1, #0]
;__Lib_MmcFat16.c, 380 :: 		
0xA0E6	0x2001    MOVS	R0, #1
0xA0E8	0xE045    B	L_end_Mmc_Fat_Get_Info
;__Lib_MmcFat16.c, 381 :: 		
L___Lib_MmcFat16_Mmc_Fat_Get_Info58:
;__Lib_MmcFat16.c, 382 :: 		
; p start address is: 8 (R2)
; tmp start address is: 12 (R3)
0xA0EA	0xF64F70F5  MOVW	R0, #65525
0xA0EE	0x4283    CMP	R3, R0
0xA0F0	0xD904    BLS	L___Lib_MmcFat16_Mmc_Fat_Get_Info59
; tmp end address is: 12 (R3)
;__Lib_MmcFat16.c, 384 :: 		
0xA0F2	0x1C51    ADDS	R1, R2, #1
; p end address is: 8 (R2)
0xA0F4	0x200B    MOVS	R0, #11
0xA0F6	0x7008    STRB	R0, [R1, #0]
;__Lib_MmcFat16.c, 385 :: 		
0xA0F8	0x2001    MOVS	R0, #1
0xA0FA	0xE03C    B	L_end_Mmc_Fat_Get_Info
;__Lib_MmcFat16.c, 386 :: 		
L___Lib_MmcFat16_Mmc_Fat_Get_Info59:
;__Lib_MmcFat16.c, 387 :: 		
0xA0FC	0xE004    B	L___Lib_MmcFat16_Mmc_Fat_Get_Info60
L___Lib_MmcFat16_Mmc_Fat_Get_Info55:
;__Lib_MmcFat16.c, 390 :: 		
; p start address is: 8 (R2)
0xA0FE	0x1C51    ADDS	R1, R2, #1
; p end address is: 8 (R2)
0xA100	0x200B    MOVS	R0, #11
0xA102	0x7008    STRB	R0, [R1, #0]
;__Lib_MmcFat16.c, 391 :: 		
0xA104	0x2001    MOVS	R0, #1
0xA106	0xE036    B	L_end_Mmc_Fat_Get_Info
;__Lib_MmcFat16.c, 392 :: 		
L___Lib_MmcFat16_Mmc_Fat_Get_Info60:
;__Lib_MmcFat16.c, 393 :: 		
0xA108	0xE034    B	L___Lib_MmcFat16_Mmc_Fat_Get_Info61
L___Lib_MmcFat16_Mmc_Fat_Get_Info53:
;__Lib_MmcFat16.c, 396 :: 		
; ptr start address is: 16 (R4)
0xA10A	0x4C27    LDR	R4, [PC, #156]
;__Lib_MmcFat16.c, 398 :: 		
; i start address is: 12 (R3)
0xA10C	0x2300    MOVS	R3, #0
; ptr end address is: 16 (R4)
; i end address is: 12 (R3)
L___Lib_MmcFat16_Mmc_Fat_Get_Info62:
; i start address is: 12 (R3)
; ptr start address is: 16 (R4)
0xA10E	0x2B04    CMP	R3, #4
0xA110	0xD216    BCS	L___Lib_MmcFat16_Mmc_Fat_Get_Info63
;__Lib_MmcFat16.c, 400 :: 		
0xA112	0x00D9    LSLS	R1, R3, #3
0xA114	0x481D    LDR	R0, [PC, #116]
0xA116	0x1841    ADDS	R1, R0, R1
; p start address is: 8 (R2)
0xA118	0x460A    MOV	R2, R1
;__Lib_MmcFat16.c, 401 :: 		
;__Lib_MmcFat16.c, 402 :: 		
0xA11A	0x7820    LDRB	R0, [R4, #0]
0xA11C	0x7008    STRB	R0, [R1, #0]
;__Lib_MmcFat16.c, 403 :: 		
0xA11E	0x1D20    ADDS	R0, R4, #4
0xA120	0x4604    MOV	R4, R0
;__Lib_MmcFat16.c, 404 :: 		
0xA122	0x1C51    ADDS	R1, R2, #1
0xA124	0x7800    LDRB	R0, [R0, #0]
0xA126	0x7008    STRB	R0, [R1, #0]
;__Lib_MmcFat16.c, 405 :: 		
0xA128	0x1D21    ADDS	R1, R4, #4
0xA12A	0x460C    MOV	R4, R1
;__Lib_MmcFat16.c, 406 :: 		
0xA12C	0x1D10    ADDS	R0, R2, #4
; p end address is: 8 (R2)
0xA12E	0x9002    STR	R0, [SP, #8]
0xA130	0x4608    MOV	R0, R1
0xA132	0xF7FCFA0D  BL	__Lib_MmcFat16_f16_toLong+0
0xA136	0x9902    LDR	R1, [SP, #8]
0xA138	0x6008    STR	R0, [R1, #0]
;__Lib_MmcFat16.c, 398 :: 		
0xA13A	0x1C5B    ADDS	R3, R3, #1
0xA13C	0xB29B    UXTH	R3, R3
;__Lib_MmcFat16.c, 408 :: 		
; ptr end address is: 16 (R4)
; i end address is: 12 (R3)
0xA13E	0xE7E6    B	L___Lib_MmcFat16_Mmc_Fat_Get_Info62
L___Lib_MmcFat16_Mmc_Fat_Get_Info63:
;__Lib_MmcFat16.c, 411 :: 		
0xA140	0x481A    LDR	R0, [PC, #104]
0xA142	0x7800    LDRB	R0, [R0, #0]
0xA144	0x00C1    LSLS	R1, R0, #3
0xA146	0x4811    LDR	R0, [PC, #68]
0xA148	0x1840    ADDS	R0, R0, R1
0xA14A	0x1C40    ADDS	R0, R0, #1
0xA14C	0x7800    LDRB	R0, [R0, #0]
;__Lib_MmcFat16.c, 412 :: 		
0xA14E	0x2804    CMP	R0, #4
0xA150	0xD00A    BEQ	L___Lib_MmcFat16_Mmc_Fat_Get_Info423
0xA152	0x4816    LDR	R0, [PC, #88]
0xA154	0x7800    LDRB	R0, [R0, #0]
0xA156	0x00C1    LSLS	R1, R0, #3
0xA158	0x480C    LDR	R0, [PC, #48]
0xA15A	0x1840    ADDS	R0, R0, R1
0xA15C	0x1C40    ADDS	R0, R0, #1
0xA15E	0x7800    LDRB	R0, [R0, #0]
0xA160	0x2806    CMP	R0, #6
0xA162	0xD001    BEQ	L___Lib_MmcFat16_Mmc_Fat_Get_Info422
L___Lib_MmcFat16_Mmc_Fat_Get_Info418:
;__Lib_MmcFat16.c, 413 :: 		
0xA164	0x2001    MOVS	R0, #1
0xA166	0xE006    B	L_end_Mmc_Fat_Get_Info
;__Lib_MmcFat16.c, 412 :: 		
L___Lib_MmcFat16_Mmc_Fat_Get_Info423:
L___Lib_MmcFat16_Mmc_Fat_Get_Info422:
;__Lib_MmcFat16.c, 415 :: 		
0xA168	0xF7FBFEB8  BL	__Lib_MmcFat16_getBoot+0
0xA16C	0x2800    CMP	R0, #0
0xA16E	0xDA01    BGE	L___Lib_MmcFat16_Mmc_Fat_Get_Info68
;__Lib_MmcFat16.c, 416 :: 		
0xA170	0x2001    MOVS	R0, #1
0xA172	0xE000    B	L_end_Mmc_Fat_Get_Info
L___Lib_MmcFat16_Mmc_Fat_Get_Info68:
;__Lib_MmcFat16.c, 417 :: 		
L___Lib_MmcFat16_Mmc_Fat_Get_Info61:
;__Lib_MmcFat16.c, 418 :: 		
0xA174	0x2000    MOVS	R0, #0
;__Lib_MmcFat16.c, 419 :: 		
L_end_Mmc_Fat_Get_Info:
0xA176	0xF8DDE000  LDR	LR, [SP, #0]
0xA17A	0xB003    ADD	SP, SP, #12
0xA17C	0x4770    BX	LR
0xA17E	0xBF00    NOP
0xA180	0x2CDC2000  	_f16_sector+512
0xA184	0x2ADC2000  	_f16_sector+0
0xA188	0x2A912000  	___f16_errno+0
0xA18C	0x2D382000  	__Lib_MmcFat16_f16_part+0
0xA190	0x2ACA2000  	__Lib_MmcFat16_f16_boot+10
0xA194	0x2AF02000  	_f16_sector+20
0xA198	0x2AEF2000  	_f16_sector+19
0xA19C	0x2AFC2000  	_f16_sector+32
0xA1A0	0x2AD42000  	__Lib_MmcFat16_f16_boot+20
0xA1A4	0x2AC22000  	__Lib_MmcFat16_f16_boot+2
0xA1A8	0x2C9A2000  	_f16_sector+446
0xA1AC	0x2D582000  	__Lib_MmcFat16_f16_activePart+0
; end of __Lib_MmcFat16_Mmc_Fat_Get_Info
_Mmc_Read_Sector:
;__Lib_Mmc_SDIO.c, 104 :: 		
; dbuff start address is: 4 (R1)
; sector start address is: 0 (R0)
0x5CA8	0xB081    SUB	SP, SP, #4
0x5CAA	0xF8CDE000  STR	LR, [SP, #0]
; dbuff end address is: 4 (R1)
; sector end address is: 0 (R0)
; sector start address is: 0 (R0)
; dbuff start address is: 4 (R1)
;__Lib_Mmc_SDIO.c, 105 :: 		
; dbuff end address is: 4 (R1)
; sector end address is: 0 (R0)
0x5CAE	0x4C03    LDR	R4, [PC, #12]
0x5CB0	0x6824    LDR	R4, [R4, #0]
0x5CB2	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 106 :: 		
L_end_Mmc_Read_Sector:
0x5CB4	0xF8DDE000  LDR	LR, [SP, #0]
0x5CB8	0xB001    ADD	SP, SP, #4
0x5CBA	0x4770    BX	LR
0x5CBC	0x02FC2000  	__Lib_Mmc_SDIO_Mmc_Read_Sector_Ptr+0
; end of _Mmc_Read_Sector
__Lib_Mmc_SDIO_Mmc_Read_Sector_SPI:
;__Lib_Mmc_SDIO.c, 389 :: 		
; sector start address is: 0 (R0)
0x1EA0	0xB085    SUB	SP, SP, #20
0x1EA2	0xF8CDE000  STR	LR, [SP, #0]
0x1EA6	0x4603    MOV	R3, R0
0x1EA8	0x9102    STR	R1, [SP, #8]
; sector end address is: 0 (R0)
; sector start address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 394 :: 		
0x1EAA	0xF001FDDF  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 396 :: 		
0x1EAE	0x4A1E    LDR	R2, [PC, #120]
0x1EB0	0x7812    LDRB	R2, [R2, #0]
0x1EB2	0x2A04    CMP	R2, #4
0x1EB4	0xD101    BNE	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI32
;__Lib_Mmc_SDIO.c, 397 :: 		
; byte_start start address is: 0 (R0)
0x1EB6	0x4618    MOV	R0, R3
; sector end address is: 12 (R3)
; byte_start end address is: 0 (R0)
0x1EB8	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI33
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI32:
;__Lib_Mmc_SDIO.c, 399 :: 		
; sector start address is: 12 (R3)
0x1EBA	0x0258    LSLS	R0, R3, #9
; sector end address is: 12 (R3)
; byte_start start address is: 0 (R0)
; byte_start end address is: 0 (R0)
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI33:
;__Lib_Mmc_SDIO.c, 402 :: 		
; byte_start start address is: 0 (R0)
0x1EBC	0x22FF    MOVS	R2, #255
0x1EBE	0x4601    MOV	R1, R0
; byte_start end address is: 0 (R0)
0x1EC0	0x2011    MOVS	R0, #17
0x1EC2	0xF001FBAD  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
;__Lib_Mmc_SDIO.c, 403 :: 		
0x1EC6	0xB118    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI34
;__Lib_Mmc_SDIO.c, 405 :: 		
0x1EC8	0xF001FD9C  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 406 :: 		
0x1ECC	0x2001    MOVS	R0, #1
0x1ECE	0xE027    B	L_end_Mmc_Read_Sector_SPI
;__Lib_Mmc_SDIO.c, 407 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI34:
;__Lib_Mmc_SDIO.c, 409 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI35:
0x1ED0	0x20FF    MOVS	R0, #255
0x1ED2	0x4C16    LDR	R4, [PC, #88]
0x1ED4	0x6824    LDR	R4, [R4, #0]
0x1ED6	0x47A0    BLX	R4
0x1ED8	0x28FE    CMP	R0, #254
0x1EDA	0xD000    BEQ	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI36
;__Lib_Mmc_SDIO.c, 410 :: 		
0x1EDC	0xE7F8    B	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI35
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI36:
;__Lib_Mmc_SDIO.c, 413 :: 		
; i start address is: 12 (R3)
0x1EDE	0x2300    MOVS	R3, #0
; i end address is: 12 (R3)
0x1EE0	0xB299    UXTH	R1, R3
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI37:
; i start address is: 4 (R1)
0x1EE2	0xF5B17F00  CMP	R1, #512
0x1EE6	0xD210    BCS	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI38
;__Lib_Mmc_SDIO.c, 415 :: 		
0x1EE8	0x9A02    LDR	R2, [SP, #8]
0x1EEA	0x1852    ADDS	R2, R2, R1
0x1EEC	0x9204    STR	R2, [SP, #16]
0x1EEE	0xF8AD1004  STRH	R1, [SP, #4]
0x1EF2	0x20FF    MOVS	R0, #255
0x1EF4	0x4C0D    LDR	R4, [PC, #52]
0x1EF6	0x6824    LDR	R4, [R4, #0]
0x1EF8	0x47A0    BLX	R4
0x1EFA	0xF8BD1004  LDRH	R1, [SP, #4]
0x1EFE	0x9A04    LDR	R2, [SP, #16]
0x1F00	0x7010    STRB	R0, [R2, #0]
;__Lib_Mmc_SDIO.c, 413 :: 		
0x1F02	0x1C4A    ADDS	R2, R1, #1
; i end address is: 4 (R1)
; i start address is: 12 (R3)
0x1F04	0xB293    UXTH	R3, R2
;__Lib_Mmc_SDIO.c, 416 :: 		
0x1F06	0xB299    UXTH	R1, R3
; i end address is: 12 (R3)
0x1F08	0xE7EB    B	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI37
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SPI38:
;__Lib_Mmc_SDIO.c, 419 :: 		
0x1F0A	0x20FF    MOVS	R0, #255
0x1F0C	0x4C07    LDR	R4, [PC, #28]
0x1F0E	0x6824    LDR	R4, [R4, #0]
0x1F10	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 420 :: 		
0x1F12	0x20FF    MOVS	R0, #255
0x1F14	0x4C05    LDR	R4, [PC, #20]
0x1F16	0x6824    LDR	R4, [R4, #0]
0x1F18	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 422 :: 		
0x1F1A	0xF001FD73  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 425 :: 		
0x1F1E	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 426 :: 		
L_end_Mmc_Read_Sector_SPI:
0x1F20	0xF8DDE000  LDR	LR, [SP, #0]
0x1F24	0xB005    ADD	SP, SP, #20
0x1F26	0x4770    BX	LR
0x1F28	0x02F72000  	__Lib_Mmc_SDIO_cardType+0
0x1F2C	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_Read_Sector_SPI
__Lib_Mmc_SDIO_Mmc_Write_Sector_SPI:
;__Lib_Mmc_SDIO.c, 438 :: 		
; sector start address is: 0 (R0)
0x2148	0xB083    SUB	SP, SP, #12
0x214A	0xF8CDE000  STR	LR, [SP, #0]
0x214E	0x4603    MOV	R3, R0
0x2150	0x9102    STR	R1, [SP, #8]
; sector end address is: 0 (R0)
; sector start address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 442 :: 		
0x2152	0xF001FC8B  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 444 :: 		
0x2156	0x4A2B    LDR	R2, [PC, #172]
0x2158	0x7812    LDRB	R2, [R2, #0]
0x215A	0x2A04    CMP	R2, #4
0x215C	0xD101    BNE	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI40
;__Lib_Mmc_SDIO.c, 445 :: 		
; byte_start start address is: 0 (R0)
0x215E	0x4618    MOV	R0, R3
; sector end address is: 12 (R3)
; byte_start end address is: 0 (R0)
0x2160	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI41
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI40:
;__Lib_Mmc_SDIO.c, 447 :: 		
; sector start address is: 12 (R3)
0x2162	0x0258    LSLS	R0, R3, #9
; sector end address is: 12 (R3)
; byte_start start address is: 0 (R0)
; byte_start end address is: 0 (R0)
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI41:
;__Lib_Mmc_SDIO.c, 450 :: 		
; byte_start start address is: 0 (R0)
0x2164	0x22FF    MOVS	R2, #255
0x2166	0x4601    MOV	R1, R0
; byte_start end address is: 0 (R0)
0x2168	0x2018    MOVS	R0, #24
0x216A	0xF001FA59  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
0x216E	0xB118    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI42
;__Lib_Mmc_SDIO.c, 452 :: 		
0x2170	0xF001FC48  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 453 :: 		
0x2174	0x2001    MOVS	R0, #1
0x2176	0xE040    B	L_end_Mmc_Write_Sector_SPI
;__Lib_Mmc_SDIO.c, 454 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI42:
;__Lib_Mmc_SDIO.c, 458 :: 		
0x2178	0x20FF    MOVS	R0, #255
0x217A	0x4C23    LDR	R4, [PC, #140]
0x217C	0x6824    LDR	R4, [R4, #0]
0x217E	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 459 :: 		
0x2180	0x20FF    MOVS	R0, #255
0x2182	0x4C21    LDR	R4, [PC, #132]
0x2184	0x6824    LDR	R4, [R4, #0]
0x2186	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 462 :: 		
0x2188	0x20FE    MOVS	R0, #254
0x218A	0x4C1F    LDR	R4, [PC, #124]
0x218C	0x6824    LDR	R4, [R4, #0]
0x218E	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 465 :: 		
; i start address is: 0 (R0)
0x2190	0x2000    MOVS	R0, #0
; i end address is: 0 (R0)
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI43:
; i start address is: 0 (R0)
0x2192	0xF24012FF  MOVW	R2, #511
0x2196	0x4290    CMP	R0, R2
0x2198	0xD80F    BHI	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI44
;__Lib_Mmc_SDIO.c, 466 :: 		
0x219A	0x9A02    LDR	R2, [SP, #8]
0x219C	0x1812    ADDS	R2, R2, R0
0x219E	0x7812    LDRB	R2, [R2, #0]
0x21A0	0xB2D4    UXTB	R4, R2
0x21A2	0xF8AD0004  STRH	R0, [SP, #4]
0x21A6	0xB2A0    UXTH	R0, R4
0x21A8	0x4C17    LDR	R4, [PC, #92]
0x21AA	0x6824    LDR	R4, [R4, #0]
0x21AC	0x47A0    BLX	R4
0x21AE	0xF8BD0004  LDRH	R0, [SP, #4]
;__Lib_Mmc_SDIO.c, 465 :: 		
0x21B2	0x1C42    ADDS	R2, R0, #1
; i end address is: 0 (R0)
; i start address is: 4 (R1)
0x21B4	0xB291    UXTH	R1, R2
;__Lib_Mmc_SDIO.c, 467 :: 		
0x21B6	0xB288    UXTH	R0, R1
; i end address is: 4 (R1)
0x21B8	0xE7EB    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI43
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI44:
;__Lib_Mmc_SDIO.c, 470 :: 		
0x21BA	0x20FF    MOVS	R0, #255
0x21BC	0x4C12    LDR	R4, [PC, #72]
0x21BE	0x6824    LDR	R4, [R4, #0]
0x21C0	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 471 :: 		
0x21C2	0x20FF    MOVS	R0, #255
0x21C4	0x4C10    LDR	R4, [PC, #64]
0x21C6	0x6824    LDR	R4, [R4, #0]
0x21C8	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 474 :: 		
0x21CA	0x20FF    MOVS	R0, #255
0x21CC	0x4C0E    LDR	R4, [PC, #56]
0x21CE	0x6824    LDR	R4, [R4, #0]
0x21D0	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 475 :: 		
0x21D2	0xF000021F  AND	R2, R0, #31
0x21D6	0xB292    UXTH	R2, R2
;__Lib_Mmc_SDIO.c, 476 :: 		
0x21D8	0x2A05    CMP	R2, #5
0x21DA	0xD003    BEQ	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI46
;__Lib_Mmc_SDIO.c, 478 :: 		
0x21DC	0xF001FC12  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 479 :: 		
0x21E0	0x2002    MOVS	R0, #2
0x21E2	0xE00A    B	L_end_Mmc_Write_Sector_SPI
;__Lib_Mmc_SDIO.c, 480 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI46:
;__Lib_Mmc_SDIO.c, 482 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI47:
0x21E4	0x20FF    MOVS	R0, #255
0x21E6	0x4C08    LDR	R4, [PC, #32]
0x21E8	0x6824    LDR	R4, [R4, #0]
0x21EA	0x47A0    BLX	R4
0x21EC	0xF1B00FFF  CMP	R0, #255
0x21F0	0xD000    BEQ	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI48
;__Lib_Mmc_SDIO.c, 483 :: 		
0x21F2	0xE7F7    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI47
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SPI48:
;__Lib_Mmc_SDIO.c, 485 :: 		
0x21F4	0xF001FC06  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 488 :: 		
0x21F8	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 489 :: 		
L_end_Mmc_Write_Sector_SPI:
0x21FA	0xF8DDE000  LDR	LR, [SP, #0]
0x21FE	0xB003    ADD	SP, SP, #12
0x2200	0x4770    BX	LR
0x2202	0xBF00    NOP
0x2204	0x02F72000  	__Lib_Mmc_SDIO_cardType+0
0x2208	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_Write_Sector_SPI
__Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO:
;__Lib_Mmc_SDIO.c, 2085 :: 		
; dbuff start address is: 4 (R1)
; sector start address is: 0 (R0)
0x1F30	0xB082    SUB	SP, SP, #8
0x1F32	0xF8CDE000  STR	LR, [SP, #0]
0x1F36	0x4605    MOV	R5, R0
; dbuff end address is: 4 (R1)
; sector end address is: 0 (R0)
; sector start address is: 20 (R5)
; dbuff start address is: 4 (R1)
;__Lib_Mmc_SDIO.c, 2087 :: 		
;__Lib_Mmc_SDIO.c, 2088 :: 		
;__Lib_Mmc_SDIO.c, 2091 :: 		
; tempbuff start address is: 16 (R4)
0x1F38	0x460C    MOV	R4, R1
;__Lib_Mmc_SDIO.c, 2093 :: 		
0x1F3A	0xB909    CBNZ	R1, L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO248
; sector end address is: 20 (R5)
; dbuff end address is: 4 (R1)
; tempbuff end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2095 :: 		
0x1F3C	0x2001    MOVS	R0, #1
0x1F3E	0xE0DC    B	L_end_Mmc_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2096 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO248:
;__Lib_Mmc_SDIO.c, 2099 :: 		
; tempbuff start address is: 16 (R4)
; sector start address is: 20 (R5)
0x1F40	0x4B70    LDR	R3, [PC, #448]
0x1F42	0x4A71    LDR	R2, [PC, #452]
0x1F44	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2100 :: 		
0x1F46	0x2300    MOVS	R3, #0
0x1F48	0x4A70    LDR	R2, [PC, #448]
0x1F4A	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2101 :: 		
0x1F4C	0xF04F0300  MOV	R3, #0
0x1F50	0x4A6F    LDR	R2, [PC, #444]
0x1F52	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2102 :: 		
0x1F54	0xF04F0300  MOV	R3, #0
0x1F58	0x4A6E    LDR	R2, [PC, #440]
0x1F5A	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2103 :: 		
0x1F5C	0xF04F0300  MOV	R3, #0
0x1F60	0x4A6D    LDR	R2, [PC, #436]
0x1F62	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2104 :: 		
0x1F64	0xF04F0300  MOV	R3, #0
0x1F68	0x4A6C    LDR	R2, [PC, #432]
0x1F6A	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2105 :: 		
0x1F6C	0x4866    LDR	R0, [PC, #408]
0x1F6E	0xF7FEF9BB  BL	_SDIO_DataConfig+0
;__Lib_Mmc_SDIO.c, 2106 :: 		
0x1F72	0x2000    MOVS	R0, #0
0x1F74	0xF7FFF888  BL	_SDIO_DMACmd+0
;__Lib_Mmc_SDIO.c, 2108 :: 		
0x1F78	0x4A69    LDR	R2, [PC, #420]
0x1F7A	0x6812    LDR	R2, [R2, #0]
0x1F7C	0xF0027200  AND	R2, R2, #33554432
0x1F80	0xB10A    CBZ	R2, L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO249
; sector end address is: 20 (R5)
; tempbuff end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2110 :: 		
0x1F82	0x2001    MOVS	R0, #1
0x1F84	0xE0B9    B	L_end_Mmc_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2111 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO249:
;__Lib_Mmc_SDIO.c, 2113 :: 		
; tempbuff start address is: 16 (R4)
; sector start address is: 20 (R5)
0x1F86	0x4A67    LDR	R2, [PC, #412]
0x1F88	0x6812    LDR	R2, [R2, #0]
0x1F8A	0x2A02    CMP	R2, #2
0x1F8C	0xD102    BNE	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO250
;__Lib_Mmc_SDIO.c, 2115 :: 		
; addr start address is: 0 (R0)
0x1F8E	0x4628    MOV	R0, R5
; sector end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 2116 :: 		
0x1F90	0x4605    MOV	R5, R0
; addr end address is: 0 (R0)
0x1F92	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO251
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO250:
;__Lib_Mmc_SDIO.c, 2118 :: 		
; sector start address is: 20 (R5)
0x1F94	0x026D    LSLS	R5, R5, #9
; sector end address is: 20 (R5)
; addr start address is: 20 (R5)
; addr end address is: 20 (R5)
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO251:
;__Lib_Mmc_SDIO.c, 2121 :: 		
; addr start address is: 20 (R5)
0x1F96	0xF2402300  MOVW	R3, #512
0x1F9A	0x4A63    LDR	R2, [PC, #396]
0x1F9C	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2122 :: 		
0x1F9E	0x2310    MOVS	R3, #16
0x1FA0	0x4A62    LDR	R2, [PC, #392]
0x1FA2	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2123 :: 		
0x1FA4	0xF04F0340  MOV	R3, #64
0x1FA8	0x4A61    LDR	R2, [PC, #388]
0x1FAA	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2124 :: 		
0x1FAC	0xF04F0300  MOV	R3, #0
0x1FB0	0x4A60    LDR	R2, [PC, #384]
0x1FB2	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2125 :: 		
0x1FB4	0xF44F6380  MOV	R3, #1024
0x1FB8	0x4A5F    LDR	R2, [PC, #380]
0x1FBA	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2126 :: 		
0x1FBC	0x485A    LDR	R0, [PC, #360]
0x1FBE	0xF7FEFE61  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2128 :: 		
0x1FC2	0x2010    MOVS	R0, #16
0x1FC4	0xF7FEFC8C  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
; errorstatus start address is: 24 (R6)
0x1FC8	0xB2C6    UXTB	R6, R0
;__Lib_Mmc_SDIO.c, 2130 :: 		
0x1FCA	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO252
; addr end address is: 20 (R5)
; tempbuff end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2132 :: 		
0x1FCC	0xB2F0    UXTB	R0, R6
; errorstatus end address is: 24 (R6)
0x1FCE	0xE094    B	L_end_Mmc_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2133 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO252:
;__Lib_Mmc_SDIO.c, 2135 :: 		
; tempbuff start address is: 16 (R4)
; errorstatus start address is: 24 (R6)
; addr start address is: 20 (R5)
0x1FD0	0x4B4C    LDR	R3, [PC, #304]
0x1FD2	0x4A4D    LDR	R2, [PC, #308]
0x1FD4	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2136 :: 		
0x1FD6	0xF2402300  MOVW	R3, #512
0x1FDA	0x4A4C    LDR	R2, [PC, #304]
0x1FDC	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2137 :: 		
0x1FDE	0x2390    MOVS	R3, #144
0x1FE0	0x4A4B    LDR	R2, [PC, #300]
0x1FE2	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2138 :: 		
0x1FE4	0xF04F0302  MOV	R3, #2
0x1FE8	0x4A4A    LDR	R2, [PC, #296]
0x1FEA	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2139 :: 		
0x1FEC	0xF04F0300  MOV	R3, #0
0x1FF0	0x4A49    LDR	R2, [PC, #292]
0x1FF2	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2140 :: 		
0x1FF4	0xF04F0301  MOV	R3, #1
0x1FF8	0x4A48    LDR	R2, [PC, #288]
0x1FFA	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2141 :: 		
0x1FFC	0x4842    LDR	R0, [PC, #264]
0x1FFE	0xF7FEF973  BL	_SDIO_DataConfig+0
;__Lib_Mmc_SDIO.c, 2143 :: 		
0x2002	0xF2402300  MOVW	R3, #512
0x2006	0x4A4D    LDR	R2, [PC, #308]
0x2008	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2146 :: 		
0x200A	0x4A47    LDR	R2, [PC, #284]
0x200C	0x6015    STR	R5, [R2, #0]
; addr end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 2147 :: 		
0x200E	0x2311    MOVS	R3, #17
0x2010	0x4A46    LDR	R2, [PC, #280]
0x2012	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2148 :: 		
0x2014	0xF04F0340  MOV	R3, #64
0x2018	0x4A45    LDR	R2, [PC, #276]
0x201A	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2149 :: 		
0x201C	0xF04F0300  MOV	R3, #0
0x2020	0x4A44    LDR	R2, [PC, #272]
0x2022	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2150 :: 		
0x2024	0xF44F6380  MOV	R3, #1024
0x2028	0x4A43    LDR	R2, [PC, #268]
0x202A	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2151 :: 		
0x202C	0x483E    LDR	R0, [PC, #248]
0x202E	0xF7FEFE29  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2153 :: 		
0x2032	0x2011    MOVS	R0, #17
0x2034	0xF7FEFC54  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
0x2038	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO253
; errorstatus end address is: 24 (R6)
; tempbuff end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2155 :: 		
0x203A	0x2001    MOVS	R0, #1
0x203C	0xE05D    B	L_end_Mmc_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2156 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO253:
;__Lib_Mmc_SDIO.c, 2159 :: 		
; tempbuff start address is: 16 (R4)
; errorstatus start address is: 24 (R6)
0x203E	0x4625    MOV	R5, R4
; tempbuff end address is: 16 (R4)
0x2040	0xB2F4    UXTB	R4, R6
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO254:
; errorstatus end address is: 24 (R6)
; errorstatus start address is: 16 (R4)
; tempbuff start address is: 20 (R5)
0x2042	0x4A3F    LDR	R2, [PC, #252]
0x2044	0x6813    LDR	R3, [R2, #0]
0x2046	0xF240622A  MOVW	R2, #1578
0x204A	0xEA030202  AND	R2, R3, R2, LSL #0
0x204E	0xB9C2    CBNZ	R2, L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO255
;__Lib_Mmc_SDIO.c, 2161 :: 		
0x2050	0xF44F4000  MOV	R0, #32768
0x2054	0xF7FEFA52  BL	_SDIO_GetFlagStatus+0
0x2058	0xB190    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO439
;__Lib_Mmc_SDIO.c, 2163 :: 		
; count start address is: 12 (R3)
0x205A	0x2300    MOVS	R3, #0
; count end address is: 12 (R3)
; tempbuff end address is: 20 (R5)
; errorstatus end address is: 16 (R4)
0x205C	0xB2E1    UXTB	R1, R4
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO257:
; count start address is: 12 (R3)
; tempbuff start address is: 20 (R5)
; errorstatus start address is: 4 (R1)
0x205E	0x2B08    CMP	R3, #8
0x2060	0xD208    BCS	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO258
;__Lib_Mmc_SDIO.c, 2165 :: 		
0x2062	0x009A    LSLS	R2, R3, #2
0x2064	0x18AA    ADDS	R2, R5, R2
0x2066	0x9201    STR	R2, [SP, #4]
0x2068	0xF7FEF8EA  BL	_SDIO_ReadData+0
0x206C	0x9A01    LDR	R2, [SP, #4]
0x206E	0x6010    STR	R0, [R2, #0]
;__Lib_Mmc_SDIO.c, 2163 :: 		
0x2070	0x1C5B    ADDS	R3, R3, #1
;__Lib_Mmc_SDIO.c, 2166 :: 		
; count end address is: 12 (R3)
0x2072	0xE7F4    B	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO257
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO258:
;__Lib_Mmc_SDIO.c, 2167 :: 		
0x2074	0xF2050220  ADDW	R2, R5, #32
; tempbuff end address is: 20 (R5)
; tempbuff start address is: 0 (R0)
0x2078	0x4610    MOV	R0, R2
; errorstatus end address is: 4 (R1)
; tempbuff end address is: 0 (R0)
0x207A	0xB2CC    UXTB	R4, R1
0x207C	0x4605    MOV	R5, R0
;__Lib_Mmc_SDIO.c, 2168 :: 		
0x207E	0xE7FF    B	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO256
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO439:
;__Lib_Mmc_SDIO.c, 2161 :: 		
;__Lib_Mmc_SDIO.c, 2168 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO256:
;__Lib_Mmc_SDIO.c, 2169 :: 		
; tempbuff start address is: 20 (R5)
; errorstatus start address is: 16 (R4)
0x2080	0xE7DF    B	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO254
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO255:
;__Lib_Mmc_SDIO.c, 2171 :: 		
0x2082	0xF04F0008  MOV	R0, #8
0x2086	0xF7FEFA39  BL	_SDIO_GetFlagStatus+0
0x208A	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO260
; tempbuff end address is: 20 (R5)
; errorstatus end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2173 :: 		
0x208C	0xF04F0008  MOV	R0, #8
0x2090	0xF7FEFA1C  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2174 :: 		
0x2094	0x2001    MOVS	R0, #1
0x2096	0xE030    B	L_end_Mmc_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2175 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO260:
;__Lib_Mmc_SDIO.c, 2176 :: 		
; errorstatus start address is: 16 (R4)
; tempbuff start address is: 20 (R5)
0x2098	0xF04F0002  MOV	R0, #2
0x209C	0xF7FEFA2E  BL	_SDIO_GetFlagStatus+0
0x20A0	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO262
; tempbuff end address is: 20 (R5)
; errorstatus end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2178 :: 		
0x20A2	0xF04F0002  MOV	R0, #2
0x20A6	0xF7FEFA11  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2179 :: 		
0x20AA	0x2001    MOVS	R0, #1
0x20AC	0xE025    B	L_end_Mmc_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2180 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO262:
;__Lib_Mmc_SDIO.c, 2181 :: 		
; errorstatus start address is: 16 (R4)
; tempbuff start address is: 20 (R5)
0x20AE	0xF04F0020  MOV	R0, #32
0x20B2	0xF7FEFA23  BL	_SDIO_GetFlagStatus+0
0x20B6	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO264
; tempbuff end address is: 20 (R5)
; errorstatus end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2183 :: 		
0x20B8	0xF04F0020  MOV	R0, #32
0x20BC	0xF7FEFA06  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2184 :: 		
0x20C0	0x2001    MOVS	R0, #1
0x20C2	0xE01A    B	L_end_Mmc_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2185 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO264:
;__Lib_Mmc_SDIO.c, 2186 :: 		
; errorstatus start address is: 16 (R4)
; tempbuff start address is: 20 (R5)
0x20C4	0xF44F7000  MOV	R0, #512
0x20C8	0xF7FEFA18  BL	_SDIO_GetFlagStatus+0
0x20CC	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO266
; tempbuff end address is: 20 (R5)
; errorstatus end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2188 :: 		
0x20CE	0xF44F7000  MOV	R0, #512
0x20D2	0xF7FEF9FB  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2189 :: 		
0x20D6	0x2001    MOVS	R0, #1
0x20D8	0xE00F    B	L_end_Mmc_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2190 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO266:
;__Lib_Mmc_SDIO.c, 2191 :: 		
; errorstatus start address is: 16 (R4)
; tempbuff start address is: 20 (R5)
0x20DA	0xB2E3    UXTB	R3, R4
; errorstatus end address is: 16 (R4)
0x20DC	0x462C    MOV	R4, R5
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO267:
; tempbuff end address is: 20 (R5)
; tempbuff start address is: 16 (R4)
; errorstatus start address is: 12 (R3)
0x20DE	0xF44F1000  MOV	R0, #2097152
0x20E2	0xF7FEFA0B  BL	_SDIO_GetFlagStatus+0
0x20E6	0xB120    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO268
;__Lib_Mmc_SDIO.c, 2193 :: 		
0x20E8	0xF7FEF8AA  BL	_SDIO_ReadData+0
0x20EC	0x6020    STR	R0, [R4, #0]
;__Lib_Mmc_SDIO.c, 2194 :: 		
0x20EE	0x1D24    ADDS	R4, R4, #4
;__Lib_Mmc_SDIO.c, 2195 :: 		
; tempbuff end address is: 16 (R4)
0x20F0	0xE7F5    B	L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO267
L___Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO268:
;__Lib_Mmc_SDIO.c, 2198 :: 		
0x20F2	0x4814    LDR	R0, [PC, #80]
0x20F4	0xF7FEF9EA  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2200 :: 		
0x20F8	0xB2D8    UXTB	R0, R3
; errorstatus end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 2201 :: 		
L_end_Mmc_Read_Sector_SDIO:
0x20FA	0xF8DDE000  LDR	LR, [SP, #0]
0x20FE	0xB002    ADD	SP, SP, #8
0x2100	0x4770    BX	LR
0x2102	0xBF00    NOP
0x2104	0xFFFF000F  	#1048575
0x2108	0x2D642000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+0
0x210C	0x2D682000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+4
0x2110	0x2D6C2000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+8
0x2114	0x2D702000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+12
0x2118	0x2D742000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+16
0x211C	0x2D782000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+20
0x2120	0x2C144001  	SDIO_RESP1+0
0x2124	0x03242000  	__Lib_Mmc_SDIO_CardTypeSdio+0
0x2128	0x2D7C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+0
0x212C	0x2D802000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+4
0x2130	0x2D842000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+8
0x2134	0x2D882000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+12
0x2138	0x2D8C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+16
0x213C	0x03282000  	__Lib_Mmc_SDIO_TotalNumberOfBytes+0
0x2140	0x2C344001  	SDIO_STA+0
0x2144	0x05FF0000  	#1535
; end of __Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO
_SDIO_DMACmd:
;__Lib_SDIO.c, 1016 :: 		
; newState start address is: 0 (R0)
0x1088	0xB081    SUB	SP, SP, #4
; newState end address is: 0 (R0)
; newState start address is: 0 (R0)
;__Lib_SDIO.c, 1018 :: 		
0x108A	0x4902    LDR	R1, [PC, #8]
0x108C	0x6008    STR	R0, [R1, #0]
; newState end address is: 0 (R0)
;__Lib_SDIO.c, 1020 :: 		
L_end_SDIO_DMACmd:
0x108E	0xB001    ADD	SP, SP, #4
0x1090	0x4770    BX	LR
0x1092	0xBF00    NOP
0x1094	0x858C4225  	SDIO_DCTRL+0
; end of _SDIO_DMACmd
__Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO:
;__Lib_Mmc_SDIO.c, 2207 :: 		
; dbuff start address is: 4 (R1)
; sector start address is: 0 (R0)
0x2720	0xB084    SUB	SP, SP, #16
0x2722	0xF8CDE000  STR	LR, [SP, #0]
0x2726	0x4606    MOV	R6, R0
; dbuff end address is: 4 (R1)
; sector end address is: 0 (R0)
; sector start address is: 24 (R6)
; dbuff start address is: 4 (R1)
;__Lib_Mmc_SDIO.c, 2208 :: 		
;__Lib_Mmc_SDIO.c, 2209 :: 		
0x2728	0x2200    MOVS	R2, #0
0x272A	0xF88D200C  STRB	R2, [SP, #12]
;__Lib_Mmc_SDIO.c, 2210 :: 		
; bytestransferred start address is: 16 (R4)
0x272E	0xF04F0400  MOV	R4, #0
;__Lib_Mmc_SDIO.c, 2211 :: 		
;__Lib_Mmc_SDIO.c, 2215 :: 		
; tempbuff start address is: 20 (R5)
0x2732	0x460D    MOV	R5, R1
;__Lib_Mmc_SDIO.c, 2217 :: 		
0x2734	0xB909    CBNZ	R1, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO269
; sector end address is: 24 (R6)
; dbuff end address is: 4 (R1)
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2219 :: 		
0x2736	0x2001    MOVS	R0, #1
0x2738	0xE158    B	L_end_Mmc_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2220 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO269:
;__Lib_Mmc_SDIO.c, 2222 :: 		
; bytestransferred start address is: 16 (R4)
; tempbuff start address is: 20 (R5)
; sector start address is: 24 (R6)
0x273A	0x4BAF    LDR	R3, [PC, #700]
0x273C	0x4AAF    LDR	R2, [PC, #700]
0x273E	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2223 :: 		
0x2740	0x2300    MOVS	R3, #0
0x2742	0x4AAF    LDR	R2, [PC, #700]
0x2744	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2224 :: 		
0x2746	0xF04F0300  MOV	R3, #0
0x274A	0x4AAE    LDR	R2, [PC, #696]
0x274C	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2225 :: 		
0x274E	0xF04F0300  MOV	R3, #0
0x2752	0x4AAD    LDR	R2, [PC, #692]
0x2754	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2226 :: 		
0x2756	0xF04F0300  MOV	R3, #0
0x275A	0x4AAC    LDR	R2, [PC, #688]
0x275C	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2227 :: 		
0x275E	0xF04F0300  MOV	R3, #0
0x2762	0x4AAB    LDR	R2, [PC, #684]
0x2764	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2228 :: 		
0x2766	0x48A5    LDR	R0, [PC, #660]
0x2768	0xF7FDFDBE  BL	_SDIO_DataConfig+0
;__Lib_Mmc_SDIO.c, 2229 :: 		
0x276C	0x2000    MOVS	R0, #0
0x276E	0xF7FEFC8B  BL	_SDIO_DMACmd+0
;__Lib_Mmc_SDIO.c, 2231 :: 		
0x2772	0x4AA8    LDR	R2, [PC, #672]
0x2774	0x6812    LDR	R2, [R2, #0]
0x2776	0xF0027200  AND	R2, R2, #33554432
0x277A	0xB10A    CBZ	R2, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO270
; sector end address is: 24 (R6)
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2233 :: 		
0x277C	0x2001    MOVS	R0, #1
0x277E	0xE135    B	L_end_Mmc_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2234 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO270:
;__Lib_Mmc_SDIO.c, 2235 :: 		
; bytestransferred start address is: 16 (R4)
; tempbuff start address is: 20 (R5)
; sector start address is: 24 (R6)
0x2780	0x4AA5    LDR	R2, [PC, #660]
0x2782	0x6812    LDR	R2, [R2, #0]
0x2784	0x2A02    CMP	R2, #2
0x2786	0xD102    BNE	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO271
;__Lib_Mmc_SDIO.c, 2237 :: 		
; addr start address is: 0 (R0)
0x2788	0x4630    MOV	R0, R6
; sector end address is: 24 (R6)
;__Lib_Mmc_SDIO.c, 2238 :: 		
0x278A	0x4606    MOV	R6, R0
; addr end address is: 0 (R0)
0x278C	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO272
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO271:
;__Lib_Mmc_SDIO.c, 2240 :: 		
; sector start address is: 24 (R6)
0x278E	0x0276    LSLS	R6, R6, #9
; sector end address is: 24 (R6)
; addr start address is: 24 (R6)
; addr end address is: 24 (R6)
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO272:
;__Lib_Mmc_SDIO.c, 2245 :: 		
; addr start address is: 24 (R6)
0x2790	0xF2402300  MOVW	R3, #512
0x2794	0x4AA1    LDR	R2, [PC, #644]
0x2796	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2246 :: 		
0x2798	0x2310    MOVS	R3, #16
0x279A	0x4AA1    LDR	R2, [PC, #644]
0x279C	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2247 :: 		
0x279E	0xF04F0340  MOV	R3, #64
0x27A2	0x4AA0    LDR	R2, [PC, #640]
0x27A4	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2248 :: 		
0x27A6	0xF04F0300  MOV	R3, #0
0x27AA	0x4A9F    LDR	R2, [PC, #636]
0x27AC	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2249 :: 		
0x27AE	0xF44F6380  MOV	R3, #1024
0x27B2	0x4A9E    LDR	R2, [PC, #632]
0x27B4	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2250 :: 		
0x27B6	0x4899    LDR	R0, [PC, #612]
0x27B8	0xF7FEFA64  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2252 :: 		
0x27BC	0x2010    MOVS	R0, #16
0x27BE	0xF7FEF88F  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
0x27C2	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO273
; addr end address is: 24 (R6)
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2254 :: 		
0x27C4	0x2001    MOVS	R0, #1
0x27C6	0xE111    B	L_end_Mmc_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2255 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO273:
;__Lib_Mmc_SDIO.c, 2258 :: 		
; bytestransferred start address is: 16 (R4)
; tempbuff start address is: 20 (R5)
; addr start address is: 24 (R6)
0x27C8	0x4A99    LDR	R2, [PC, #612]
0x27CA	0x6812    LDR	R2, [R2, #0]
0x27CC	0x0413    LSLS	R3, R2, #16
0x27CE	0x4A93    LDR	R2, [PC, #588]
0x27D0	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2259 :: 		
0x27D2	0x230D    MOVS	R3, #13
0x27D4	0x4A92    LDR	R2, [PC, #584]
0x27D6	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2260 :: 		
0x27D8	0xF04F0340  MOV	R3, #64
0x27DC	0x4A91    LDR	R2, [PC, #580]
0x27DE	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2261 :: 		
0x27E0	0xF04F0300  MOV	R3, #0
0x27E4	0x4A90    LDR	R2, [PC, #576]
0x27E6	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2262 :: 		
0x27E8	0xF44F6380  MOV	R3, #1024
0x27EC	0x4A8F    LDR	R2, [PC, #572]
0x27EE	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2263 :: 		
0x27F0	0x488A    LDR	R0, [PC, #552]
0x27F2	0xF7FEFA47  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2265 :: 		
0x27F6	0x200D    MOVS	R0, #13
0x27F8	0xF7FEF872  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
0x27FC	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO274
; addr end address is: 24 (R6)
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2267 :: 		
0x27FE	0x2001    MOVS	R0, #1
0x2800	0xE0F4    B	L_end_Mmc_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2268 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO274:
;__Lib_Mmc_SDIO.c, 2270 :: 		
; bytestransferred start address is: 16 (R4)
; tempbuff start address is: 20 (R5)
; addr start address is: 24 (R6)
0x2802	0x4A84    LDR	R2, [PC, #528]
; cardstatus start address is: 4 (R1)
0x2804	0x6811    LDR	R1, [R2, #0]
;__Lib_Mmc_SDIO.c, 2271 :: 		
; timeout start address is: 0 (R0)
0x2806	0x487C    LDR	R0, [PC, #496]
; addr end address is: 24 (R6)
; timeout end address is: 0 (R0)
; cardstatus end address is: 4 (R1)
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 16 (R4)
0x2808	0x9601    STR	R6, [SP, #4]
0x280A	0x4626    MOV	R6, R4
0x280C	0x9C01    LDR	R4, [SP, #4]
;__Lib_Mmc_SDIO.c, 2273 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO275:
; timeout start address is: 0 (R0)
; cardstatus start address is: 4 (R1)
; addr start address is: 16 (R4)
; tempbuff start address is: 20 (R5)
; bytestransferred start address is: 24 (R6)
0x280E	0xF4017280  AND	R2, R1, #256
; cardstatus end address is: 4 (R1)
0x2812	0x2A00    CMP	R2, #0
0x2814	0xD124    BNE	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO444
0x2816	0x2800    CMP	R0, #0
0x2818	0xD922    BLS	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO443
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO442:
;__Lib_Mmc_SDIO.c, 2275 :: 		
0x281A	0x1E42    SUBS	R2, R0, #1
; timeout end address is: 0 (R0)
; timeout start address is: 28 (R7)
0x281C	0x4617    MOV	R7, R2
;__Lib_Mmc_SDIO.c, 2276 :: 		
0x281E	0x4A84    LDR	R2, [PC, #528]
0x2820	0x6812    LDR	R2, [R2, #0]
0x2822	0x0413    LSLS	R3, R2, #16
0x2824	0x4A7D    LDR	R2, [PC, #500]
0x2826	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2277 :: 		
0x2828	0x230D    MOVS	R3, #13
0x282A	0x4A7D    LDR	R2, [PC, #500]
0x282C	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2278 :: 		
0x282E	0xF04F0340  MOV	R3, #64
0x2832	0x4A7C    LDR	R2, [PC, #496]
0x2834	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2279 :: 		
0x2836	0xF04F0300  MOV	R3, #0
0x283A	0x4A7B    LDR	R2, [PC, #492]
0x283C	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2280 :: 		
0x283E	0xF44F6380  MOV	R3, #1024
0x2842	0x4A7A    LDR	R2, [PC, #488]
0x2844	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2281 :: 		
0x2846	0x4875    LDR	R0, [PC, #468]
0x2848	0xF7FEFA1C  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2283 :: 		
0x284C	0x200D    MOVS	R0, #13
0x284E	0xF7FEF847  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
0x2852	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO279
; addr end address is: 16 (R4)
; bytestransferred end address is: 24 (R6)
; timeout end address is: 28 (R7)
; tempbuff end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 2285 :: 		
0x2854	0x2001    MOVS	R0, #1
0x2856	0xE0C9    B	L_end_Mmc_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2286 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO279:
;__Lib_Mmc_SDIO.c, 2287 :: 		
; tempbuff start address is: 20 (R5)
; timeout start address is: 28 (R7)
; bytestransferred start address is: 24 (R6)
; addr start address is: 16 (R4)
0x2858	0x4A6E    LDR	R2, [PC, #440]
; cardstatus start address is: 4 (R1)
0x285A	0x6811    LDR	R1, [R2, #0]
;__Lib_Mmc_SDIO.c, 2288 :: 		
; timeout end address is: 28 (R7)
; cardstatus end address is: 4 (R1)
0x285C	0x4638    MOV	R0, R7
0x285E	0xE7D6    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO275
;__Lib_Mmc_SDIO.c, 2273 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO444:
; timeout start address is: 0 (R0)
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO443:
;__Lib_Mmc_SDIO.c, 2290 :: 		
0x2860	0xB908    CBNZ	R0, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO280
; timeout end address is: 0 (R0)
; addr end address is: 16 (R4)
; bytestransferred end address is: 24 (R6)
; tempbuff end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 2292 :: 		
0x2862	0x2001    MOVS	R0, #1
0x2864	0xE0C2    B	L_end_Mmc_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2293 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO280:
;__Lib_Mmc_SDIO.c, 2296 :: 		
; tempbuff start address is: 20 (R5)
; bytestransferred start address is: 24 (R6)
; addr start address is: 16 (R4)
0x2866	0x4A6D    LDR	R2, [PC, #436]
0x2868	0x6014    STR	R4, [R2, #0]
; addr end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2297 :: 		
0x286A	0x2318    MOVS	R3, #24
0x286C	0x4A6C    LDR	R2, [PC, #432]
0x286E	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2298 :: 		
0x2870	0xF04F0340  MOV	R3, #64
0x2874	0x4A6B    LDR	R2, [PC, #428]
0x2876	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2299 :: 		
0x2878	0xF04F0300  MOV	R3, #0
0x287C	0x4A6A    LDR	R2, [PC, #424]
0x287E	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2300 :: 		
0x2880	0xF44F6380  MOV	R3, #1024
0x2884	0x4A69    LDR	R2, [PC, #420]
0x2886	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2301 :: 		
0x2888	0x4864    LDR	R0, [PC, #400]
0x288A	0xF7FEF9FB  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2303 :: 		
0x288E	0x2018    MOVS	R0, #24
0x2890	0xF7FEF826  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
0x2894	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO281
; bytestransferred end address is: 24 (R6)
; tempbuff end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 2305 :: 		
0x2896	0x2001    MOVS	R0, #1
0x2898	0xE0A8    B	L_end_Mmc_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2306 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO281:
;__Lib_Mmc_SDIO.c, 2308 :: 		
; tempbuff start address is: 20 (R5)
; bytestransferred start address is: 24 (R6)
0x289A	0xF2402300  MOVW	R3, #512
0x289E	0x4A65    LDR	R2, [PC, #404]
0x28A0	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2310 :: 		
0x28A2	0x4B55    LDR	R3, [PC, #340]
0x28A4	0x4A55    LDR	R2, [PC, #340]
0x28A6	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2311 :: 		
0x28A8	0xF2402300  MOVW	R3, #512
0x28AC	0x4A54    LDR	R2, [PC, #336]
0x28AE	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2312 :: 		
0x28B0	0x2390    MOVS	R3, #144
0x28B2	0x4A54    LDR	R2, [PC, #336]
0x28B4	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2313 :: 		
0x28B6	0xF04F0300  MOV	R3, #0
0x28BA	0x4A53    LDR	R2, [PC, #332]
0x28BC	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2314 :: 		
0x28BE	0xF04F0300  MOV	R3, #0
0x28C2	0x4A52    LDR	R2, [PC, #328]
0x28C4	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2315 :: 		
0x28C6	0xF04F0301  MOV	R3, #1
0x28CA	0x4A51    LDR	R2, [PC, #324]
0x28CC	0x6013    STR	R3, [R2, #0]
;__Lib_Mmc_SDIO.c, 2316 :: 		
0x28CE	0x484B    LDR	R0, [PC, #300]
0x28D0	0xF7FDFD0A  BL	_SDIO_DataConfig+0
; bytestransferred end address is: 24 (R6)
; tempbuff end address is: 20 (R5)
0x28D4	0x4634    MOV	R4, R6
;__Lib_Mmc_SDIO.c, 2318 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO282:
; bytestransferred start address is: 16 (R4)
; tempbuff start address is: 20 (R5)
0x28D6	0x4A58    LDR	R2, [PC, #352]
0x28D8	0x6813    LDR	R3, [R2, #0]
0x28DA	0xF240621A  MOVW	R2, #1562
0x28DE	0xEA030202  AND	R2, R3, R2, LSL #0
0x28E2	0x2A00    CMP	R2, #0
0x28E4	0xD13E    BNE	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO283
;__Lib_Mmc_SDIO.c, 2320 :: 		
0x28E6	0xF44F4080  MOV	R0, #16384
0x28EA	0xF7FDFE07  BL	_SDIO_GetFlagStatus+0
0x28EE	0x2800    CMP	R0, #0
0x28F0	0xD037    BEQ	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO448
;__Lib_Mmc_SDIO.c, 2322 :: 		
0x28F2	0x4A50    LDR	R2, [PC, #320]
0x28F4	0x6812    LDR	R2, [R2, #0]
0x28F6	0x1B12    SUB	R2, R2, R4
0x28F8	0x2A20    CMP	R2, #32
0x28FA	0xD220    BCS	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO285
;__Lib_Mmc_SDIO.c, 2324 :: 		
0x28FC	0x4A4D    LDR	R2, [PC, #308]
0x28FE	0x6812    LDR	R2, [R2, #0]
0x2900	0x1B12    SUB	R2, R2, R4
0x2902	0xF0020203  AND	R2, R2, #3
0x2906	0xB92A    CBNZ	R2, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO286
0x2908	0x4A4A    LDR	R2, [PC, #296]
0x290A	0x6812    LDR	R2, [R2, #0]
0x290C	0x1B12    SUB	R2, R2, R4
0x290E	0x0892    LSRS	R2, R2, #2
0x2910	0x9202    STR	R2, [SP, #8]
0x2912	0xE005    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO287
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO286:
0x2914	0x4A47    LDR	R2, [PC, #284]
0x2916	0x6812    LDR	R2, [R2, #0]
0x2918	0x1B12    SUB	R2, R2, R4
0x291A	0x0892    LSRS	R2, R2, #2
0x291C	0x1C52    ADDS	R2, R2, #1
0x291E	0x9202    STR	R2, [SP, #8]
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO287:
; restwords start address is: 12 (R3)
0x2920	0x9B02    LDR	R3, [SP, #8]
;__Lib_Mmc_SDIO.c, 2326 :: 		
; count start address is: 24 (R6)
0x2922	0x2600    MOVS	R6, #0
; restwords end address is: 12 (R3)
; count end address is: 24 (R6)
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 16 (R4)
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO288:
; count start address is: 24 (R6)
; restwords start address is: 12 (R3)
; tempbuff start address is: 20 (R5)
; bytestransferred start address is: 16 (R4)
0x2924	0x429E    CMP	R6, R3
0x2926	0xD207    BCS	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO289
;__Lib_Mmc_SDIO.c, 2328 :: 		
0x2928	0x682A    LDR	R2, [R5, #0]
0x292A	0x4610    MOV	R0, R2
0x292C	0xF7FEF910  BL	_SDIO_WriteData+0
;__Lib_Mmc_SDIO.c, 2326 :: 		
0x2930	0x1C76    ADDS	R6, R6, #1
0x2932	0x1D2D    ADDS	R5, R5, #4
0x2934	0x1D24    ADDS	R4, R4, #4
;__Lib_Mmc_SDIO.c, 2329 :: 		
; restwords end address is: 12 (R3)
; count end address is: 24 (R6)
0x2936	0xE7F5    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO288
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO289:
;__Lib_Mmc_SDIO.c, 2330 :: 		
0x2938	0x4628    MOV	R0, R5
0x293A	0x4621    MOV	R1, R4
0x293C	0xE00E    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO291
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO285:
;__Lib_Mmc_SDIO.c, 2333 :: 		
; count start address is: 12 (R3)
0x293E	0x2300    MOVS	R3, #0
; count end address is: 12 (R3)
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 16 (R4)
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO292:
; count start address is: 12 (R3)
; tempbuff start address is: 20 (R5)
; bytestransferred start address is: 16 (R4)
0x2940	0x2B08    CMP	R3, #8
0x2942	0xD207    BCS	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO293
;__Lib_Mmc_SDIO.c, 2335 :: 		
0x2944	0x009A    LSLS	R2, R3, #2
0x2946	0x18AA    ADDS	R2, R5, R2
0x2948	0x6812    LDR	R2, [R2, #0]
0x294A	0x4610    MOV	R0, R2
0x294C	0xF7FEF900  BL	_SDIO_WriteData+0
;__Lib_Mmc_SDIO.c, 2333 :: 		
0x2950	0x1C5B    ADDS	R3, R3, #1
;__Lib_Mmc_SDIO.c, 2336 :: 		
; count end address is: 12 (R3)
0x2952	0xE7F5    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO292
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO293:
;__Lib_Mmc_SDIO.c, 2337 :: 		
0x2954	0xF2050020  ADDW	R0, R5, #32
; tempbuff end address is: 20 (R5)
; tempbuff start address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2338 :: 		
0x2958	0xF2040120  ADDW	R1, R4, #32
; bytestransferred end address is: 16 (R4)
; bytestransferred start address is: 4 (R1)
; bytestransferred end address is: 4 (R1)
; tempbuff end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2339 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO291:
;__Lib_Mmc_SDIO.c, 2340 :: 		
; bytestransferred start address is: 4 (R1)
; tempbuff start address is: 0 (R0)
0x295C	0x460C    MOV	R4, R1
; bytestransferred end address is: 4 (R1)
; tempbuff end address is: 0 (R0)
0x295E	0x4605    MOV	R5, R0
0x2960	0xE7FF    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO284
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO448:
;__Lib_Mmc_SDIO.c, 2320 :: 		
;__Lib_Mmc_SDIO.c, 2340 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO284:
;__Lib_Mmc_SDIO.c, 2341 :: 		
; tempbuff start address is: 20 (R5)
; bytestransferred start address is: 16 (R4)
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 16 (R4)
0x2962	0xE7B8    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO282
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO283:
;__Lib_Mmc_SDIO.c, 2342 :: 		
0x2964	0xF04F0008  MOV	R0, #8
0x2968	0xF7FDFDC8  BL	_SDIO_GetFlagStatus+0
0x296C	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO295
;__Lib_Mmc_SDIO.c, 2344 :: 		
0x296E	0xF04F0008  MOV	R0, #8
0x2972	0xF7FDFDAB  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2345 :: 		
0x2976	0x2001    MOVS	R0, #1
0x2978	0xE038    B	L_end_Mmc_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2346 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO295:
;__Lib_Mmc_SDIO.c, 2347 :: 		
0x297A	0xF04F0002  MOV	R0, #2
0x297E	0xF7FDFDBD  BL	_SDIO_GetFlagStatus+0
0x2982	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO297
;__Lib_Mmc_SDIO.c, 2349 :: 		
0x2984	0xF04F0002  MOV	R0, #2
0x2988	0xF7FDFDA0  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2350 :: 		
0x298C	0x2001    MOVS	R0, #1
0x298E	0xE02D    B	L_end_Mmc_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2351 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO297:
;__Lib_Mmc_SDIO.c, 2352 :: 		
0x2990	0xF04F0010  MOV	R0, #16
0x2994	0xF7FDFDB2  BL	_SDIO_GetFlagStatus+0
0x2998	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO299
;__Lib_Mmc_SDIO.c, 2354 :: 		
0x299A	0xF04F0010  MOV	R0, #16
0x299E	0xF7FDFD95  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2355 :: 		
0x29A2	0x2001    MOVS	R0, #1
0x29A4	0xE022    B	L_end_Mmc_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2356 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO299:
;__Lib_Mmc_SDIO.c, 2357 :: 		
0x29A6	0xF44F7000  MOV	R0, #512
0x29AA	0xF7FDFDA7  BL	_SDIO_GetFlagStatus+0
0x29AE	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO301
;__Lib_Mmc_SDIO.c, 2359 :: 		
0x29B0	0xF44F7000  MOV	R0, #512
0x29B4	0xF7FDFD8A  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2360 :: 		
0x29B8	0x2001    MOVS	R0, #1
0x29BA	0xE017    B	L_end_Mmc_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2361 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO301:
;__Lib_Mmc_SDIO.c, 2364 :: 		
0x29BC	0x481F    LDR	R0, [PC, #124]
0x29BE	0xF7FDFD85  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2367 :: 		
0x29C2	0xAA03    ADD	R2, SP, #12
0x29C4	0x4610    MOV	R0, R2
0x29C6	0xF000FF0D  BL	__Lib_Mmc_SDIO_IsCardProgramming+0
; errorstatus start address is: 4 (R1)
0x29CA	0xB2C1    UXTB	R1, R0
; errorstatus end address is: 4 (R1)
0x29CC	0xB2C8    UXTB	R0, R1
;__Lib_Mmc_SDIO.c, 2369 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO302:
; errorstatus start address is: 0 (R0)
0x29CE	0xB968    CBNZ	R0, L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO447
0x29D0	0xF89D200C  LDRB	R2, [SP, #12]
0x29D4	0x2A07    CMP	R2, #7
0x29D6	0xD004    BEQ	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO446
0x29D8	0xF89D200C  LDRB	R2, [SP, #12]
0x29DC	0x2A06    CMP	R2, #6
0x29DE	0xD000    BEQ	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO445
0x29E0	0xE004    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO303
; errorstatus end address is: 0 (R0)
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO446:
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO445:
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO440:
;__Lib_Mmc_SDIO.c, 2371 :: 		
0x29E2	0xAA03    ADD	R2, SP, #12
0x29E4	0x4610    MOV	R0, R2
0x29E6	0xF000FEFD  BL	__Lib_Mmc_SDIO_IsCardProgramming+0
; errorstatus start address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2372 :: 		
0x29EA	0xE7F0    B	L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO302
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO303:
;__Lib_Mmc_SDIO.c, 2369 :: 		
L___Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO447:
;__Lib_Mmc_SDIO.c, 2374 :: 		
; errorstatus end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2376 :: 		
L_end_Mmc_Write_Sector_SDIO:
0x29EC	0xF8DDE000  LDR	LR, [SP, #0]
0x29F0	0xB004    ADD	SP, SP, #16
0x29F2	0x4770    BX	LR
0x29F4	0xF000B824  B	#72
0x29F8	0xFFFF000F  	#1048575
0x29FC	0x2D642000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+0
0x2A00	0x2D682000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+4
0x2A04	0x2D6C2000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+8
0x2A08	0x2D702000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+12
0x2A0C	0x2D742000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+16
0x2A10	0x2D782000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+20
0x2A14	0x2C144001  	SDIO_RESP1+0
0x2A18	0x03242000  	__Lib_Mmc_SDIO_CardTypeSdio+0
0x2A1C	0x2D7C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+0
0x2A20	0x2D802000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+4
0x2A24	0x2D842000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+8
0x2A28	0x2D882000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+12
0x2A2C	0x2D8C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+16
0x2A30	0x032C2000  	__Lib_Mmc_SDIO_RCA+0
0x2A34	0x03282000  	__Lib_Mmc_SDIO_TotalNumberOfBytes+0
0x2A38	0x2C344001  	SDIO_STA+0
0x2A3C	0x05FF0000  	#1535
; end of __Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO
_SDIO_WriteData:
;__Lib_SDIO.c, 788 :: 		
; dat start address is: 0 (R0)
0x0B50	0xB081    SUB	SP, SP, #4
; dat end address is: 0 (R0)
; dat start address is: 0 (R0)
;__Lib_SDIO.c, 790 :: 		
0x0B52	0x4902    LDR	R1, [PC, #8]
0x0B54	0x6008    STR	R0, [R1, #0]
; dat end address is: 0 (R0)
;__Lib_SDIO.c, 791 :: 		
L_end_SDIO_WriteData:
0x0B56	0xB001    ADD	SP, SP, #4
0x0B58	0x4770    BX	LR
0x0B5A	0xBF00    NOP
0x0B5C	0x2C804001  	SDIO_FIFO+0
; end of _SDIO_WriteData
__Lib_MmcFat16_getBoot:
;__Lib_MmcFat16.c, 272 :: 		
0x5EDC	0xB085    SUB	SP, SP, #20
0x5EDE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MmcFat16.c, 274 :: 		
0x5EE2	0x2101    MOVS	R1, #1
0x5EE4	0x4836    LDR	R0, [PC, #216]
0x5EE6	0x7001    STRB	R1, [R0, #0]
;__Lib_MmcFat16.c, 275 :: 		
0x5EE8	0x4836    LDR	R0, [PC, #216]
0x5EEA	0x7800    LDRB	R0, [R0, #0]
0x5EEC	0x00C1    LSLS	R1, R0, #3
0x5EEE	0x4836    LDR	R0, [PC, #216]
0x5EF0	0x1840    ADDS	R0, R0, R1
0x5EF2	0x1D00    ADDS	R0, R0, #4
0x5EF4	0x6800    LDR	R0, [R0, #0]
0x5EF6	0x4935    LDR	R1, [PC, #212]
0x5EF8	0xF7FFFED6  BL	_Mmc_Read_Sector+0
0x5EFC	0xB128    CBZ	R0, L___Lib_MmcFat16_getBoot45
;__Lib_MmcFat16.c, 277 :: 		
0x5EFE	0x2110    MOVS	R1, #16
0x5F00	0x4833    LDR	R0, [PC, #204]
0x5F02	0x7001    STRB	R1, [R0, #0]
;__Lib_MmcFat16.c, 278 :: 		
0x5F04	0x20FF    MOVS	R0, #-1
0x5F06	0xB240    SXTB	R0, R0
0x5F08	0xE055    B	L_end_getBoot
;__Lib_MmcFat16.c, 279 :: 		
L___Lib_MmcFat16_getBoot45:
;__Lib_MmcFat16.c, 281 :: 		
0x5F0A	0x4832    LDR	R0, [PC, #200]
0x5F0C	0xF7FCFD98  BL	__Lib_MmcFat16_f16_toInt+0
0x5F10	0x4931    LDR	R1, [PC, #196]
0x5F12	0x9104    STR	R1, [SP, #16]
0x5F14	0x8008    STRH	R0, [R1, #0]
;__Lib_MmcFat16.c, 282 :: 		
0x5F16	0x4831    LDR	R0, [PC, #196]
0x5F18	0x7801    LDRB	R1, [R0, #0]
0x5F1A	0x4831    LDR	R0, [PC, #196]
0x5F1C	0x8001    STRH	R1, [R0, #0]
;__Lib_MmcFat16.c, 283 :: 		
0x5F1E	0x4831    LDR	R0, [PC, #196]
0x5F20	0xF7FCFD8E  BL	__Lib_MmcFat16_f16_toInt+0
0x5F24	0x4930    LDR	R1, [PC, #192]
0x5F26	0x9103    STR	R1, [SP, #12]
0x5F28	0x8008    STRH	R0, [R1, #0]
;__Lib_MmcFat16.c, 284 :: 		
0x5F2A	0x4830    LDR	R0, [PC, #192]
0x5F2C	0x7801    LDRB	R1, [R0, #0]
0x5F2E	0x4830    LDR	R0, [PC, #192]
0x5F30	0x9002    STR	R0, [SP, #8]
0x5F32	0x7001    STRB	R1, [R0, #0]
;__Lib_MmcFat16.c, 285 :: 		
0x5F34	0x482F    LDR	R0, [PC, #188]
0x5F36	0xF7FCFD83  BL	__Lib_MmcFat16_f16_toInt+0
0x5F3A	0x492F    LDR	R1, [PC, #188]
0x5F3C	0x9101    STR	R1, [SP, #4]
0x5F3E	0x8008    STRH	R0, [R1, #0]
;__Lib_MmcFat16.c, 286 :: 		
0x5F40	0x482E    LDR	R0, [PC, #184]
0x5F42	0xF7FCFD7D  BL	__Lib_MmcFat16_f16_toInt+0
0x5F46	0x4B2E    LDR	R3, [PC, #184]
0x5F48	0x8018    STRH	R0, [R3, #0]
;__Lib_MmcFat16.c, 287 :: 		
0x5F4A	0x481E    LDR	R0, [PC, #120]
0x5F4C	0x7800    LDRB	R0, [R0, #0]
0x5F4E	0x00C1    LSLS	R1, R0, #3
0x5F50	0x481D    LDR	R0, [PC, #116]
0x5F52	0x1840    ADDS	R0, R0, R1
0x5F54	0x1D00    ADDS	R0, R0, #4
0x5F56	0x6801    LDR	R1, [R0, #0]
0x5F58	0x9803    LDR	R0, [SP, #12]
0x5F5A	0x8800    LDRH	R0, [R0, #0]
0x5F5C	0x1808    ADDS	R0, R1, R0
0x5F5E	0x4A29    LDR	R2, [PC, #164]
0x5F60	0x6010    STR	R0, [R2, #0]
;__Lib_MmcFat16.c, 288 :: 		
0x5F62	0x4618    MOV	R0, R3
0x5F64	0x8801    LDRH	R1, [R0, #0]
0x5F66	0x9802    LDR	R0, [SP, #8]
0x5F68	0x7800    LDRB	R0, [R0, #0]
0x5F6A	0x4341    MULS	R1, R0, R1
0x5F6C	0xB289    UXTH	R1, R1
0x5F6E	0x4610    MOV	R0, R2
0x5F70	0x6800    LDR	R0, [R0, #0]
0x5F72	0x1840    ADDS	R0, R0, R1
0x5F74	0x4B24    LDR	R3, [PC, #144]
0x5F76	0x6018    STR	R0, [R3, #0]
;__Lib_MmcFat16.c, 289 :: 		
0x5F78	0x9801    LDR	R0, [SP, #4]
0x5F7A	0x8800    LDRH	R0, [R0, #0]
0x5F7C	0x0141    LSLS	R1, R0, #5
0x5F7E	0xB289    UXTH	R1, R1
0x5F80	0x9A04    LDR	R2, [SP, #16]
0x5F82	0x4610    MOV	R0, R2
0x5F84	0x8800    LDRH	R0, [R0, #0]
0x5F86	0xFBB1F1F0  UDIV	R1, R1, R0
0x5F8A	0xB289    UXTH	R1, R1
0x5F8C	0x4618    MOV	R0, R3
0x5F8E	0x6800    LDR	R0, [R0, #0]
0x5F90	0x1841    ADDS	R1, R0, R1
0x5F92	0x481E    LDR	R0, [PC, #120]
0x5F94	0x6001    STR	R1, [R0, #0]
;__Lib_MmcFat16.c, 291 :: 		
0x5F96	0x4610    MOV	R0, R2
0x5F98	0x8800    LDRH	R0, [R0, #0]
0x5F9A	0x0841    LSRS	R1, R0, #1
0x5F9C	0x481C    LDR	R0, [PC, #112]
0x5F9E	0x8001    STRH	R1, [R0, #0]
;__Lib_MmcFat16.c, 292 :: 		
0x5FA0	0x4610    MOV	R0, R2
0x5FA2	0x8800    LDRH	R0, [R0, #0]
0x5FA4	0x0941    LSRS	R1, R0, #5
0x5FA6	0x481B    LDR	R0, [PC, #108]
0x5FA8	0x8001    STRH	R1, [R0, #0]
;__Lib_MmcFat16.c, 294 :: 		
0x5FAA	0x4618    MOV	R0, R3
0x5FAC	0x6801    LDR	R1, [R0, #0]
0x5FAE	0x481A    LDR	R0, [PC, #104]
0x5FB0	0x6001    STR	R1, [R0, #0]
;__Lib_MmcFat16.c, 296 :: 		
0x5FB2	0x2000    MOVS	R0, #0
0x5FB4	0xB240    SXTB	R0, R0
;__Lib_MmcFat16.c, 297 :: 		
L_end_getBoot:
0x5FB6	0xF8DDE000  LDR	LR, [SP, #0]
0x5FBA	0xB005    ADD	SP, SP, #20
0x5FBC	0x4770    BX	LR
0x5FBE	0xBF00    NOP
0x5FC0	0x2CDC2000  	_f16_sector+512
0x5FC4	0x2D582000  	__Lib_MmcFat16_f16_activePart+0
0x5FC8	0x2D382000  	__Lib_MmcFat16_f16_part+0
0x5FCC	0x2ADC2000  	_f16_sector+0
0x5FD0	0x2A912000  	___f16_errno+0
0x5FD4	0x2AE72000  	_f16_sector+11
0x5FD8	0x2AC02000  	__Lib_MmcFat16_f16_boot+0
0x5FDC	0x2AE92000  	_f16_sector+13
0x5FE0	0x2AC22000  	__Lib_MmcFat16_f16_boot+2
0x5FE4	0x2AEA2000  	_f16_sector+14
0x5FE8	0x2AC42000  	__Lib_MmcFat16_f16_boot+4
0x5FEC	0x2AEC2000  	_f16_sector+16
0x5FF0	0x2AC62000  	__Lib_MmcFat16_f16_boot+6
0x5FF4	0x2AED2000  	_f16_sector+17
0x5FF8	0x2AC82000  	__Lib_MmcFat16_f16_boot+8
0x5FFC	0x2AF22000  	_f16_sector+22
0x6000	0x2ACA2000  	__Lib_MmcFat16_f16_boot+10
0x6004	0x2ACC2000  	__Lib_MmcFat16_f16_boot+12
0x6008	0x2AD02000  	__Lib_MmcFat16_f16_boot+16
0x600C	0x2AD42000  	__Lib_MmcFat16_f16_boot+20
0x6010	0x2CE82000  	__Lib_MmcFat16_f16_clustPerSect+0
0x6014	0x2A922000  	__Lib_MmcFat16_f16_dirEntryPerSect+0
0x6018	0x2AD82000  	__Lib_MmcFat16_f16_currentDir+0
; end of __Lib_MmcFat16_getBoot
__Lib_MmcFat16_f16_toInt:
;__Lib_MmcFat16.c, 72 :: 		
; s start address is: 0 (R0)
0x2A40	0xB081    SUB	SP, SP, #4
; s end address is: 0 (R0)
; s start address is: 0 (R0)
;__Lib_MmcFat16.c, 76 :: 		
0x2A42	0x1C41    ADDS	R1, R0, #1
0x2A44	0x7809    LDRB	R1, [R1, #0]
; l start address is: 4 (R1)
0x2A46	0x020A    LSLS	R2, R1, #8
0x2A48	0xB292    UXTH	R2, R2
; l end address is: 4 (R1)
;__Lib_MmcFat16.c, 77 :: 		
0x2A4A	0x7801    LDRB	R1, [R0, #0]
; s end address is: 0 (R0)
0x2A4C	0x1851    ADDS	R1, R2, R1
;__Lib_MmcFat16.c, 79 :: 		
0x2A4E	0xB288    UXTH	R0, R1
;__Lib_MmcFat16.c, 80 :: 		
L_end_f16_toInt:
0x2A50	0xB001    ADD	SP, SP, #4
0x2A52	0x4770    BX	LR
; end of __Lib_MmcFat16_f16_toInt
__Lib_MmcFat16_f16_toLong:
;__Lib_MmcFat16.c, 55 :: 		
; s start address is: 0 (R0)
0x6550	0xB081    SUB	SP, SP, #4
; s end address is: 0 (R0)
; s start address is: 0 (R0)
;__Lib_MmcFat16.c, 59 :: 		
0x6552	0x1CC1    ADDS	R1, R0, #3
0x6554	0x7809    LDRB	R1, [R1, #0]
; l start address is: 4 (R1)
0x6556	0x020A    LSLS	R2, R1, #8
; l end address is: 4 (R1)
;__Lib_MmcFat16.c, 60 :: 		
0x6558	0x1C81    ADDS	R1, R0, #2
0x655A	0x7809    LDRB	R1, [R1, #0]
0x655C	0x1851    ADDS	R1, R2, R1
0x655E	0x020A    LSLS	R2, R1, #8
;__Lib_MmcFat16.c, 61 :: 		
0x6560	0x1C41    ADDS	R1, R0, #1
0x6562	0x7809    LDRB	R1, [R1, #0]
0x6564	0x1851    ADDS	R1, R2, R1
0x6566	0x020A    LSLS	R2, R1, #8
;__Lib_MmcFat16.c, 62 :: 		
0x6568	0x7801    LDRB	R1, [R0, #0]
; s end address is: 0 (R0)
0x656A	0x1851    ADDS	R1, R2, R1
;__Lib_MmcFat16.c, 64 :: 		
0x656C	0x4608    MOV	R0, R1
;__Lib_MmcFat16.c, 65 :: 		
L_end_f16_toLong:
0x656E	0xB001    ADD	SP, SP, #4
0x6570	0x4770    BX	LR
; end of __Lib_MmcFat16_f16_toLong
_Mmc_Fat_Assign:
;__Lib_MmcFat16.c, 1871 :: 		
; attrib start address is: 4 (R1)
; name start address is: 0 (R0)
0xCEB4	0xB084    SUB	SP, SP, #16
0xCEB6	0xF8CDE000  STR	LR, [SP, #0]
0xCEBA	0xB2CC    UXTB	R4, R1
0xCEBC	0x4601    MOV	R1, R0
; attrib end address is: 4 (R1)
; name end address is: 0 (R0)
; name start address is: 4 (R1)
; attrib start address is: 16 (R4)
;__Lib_MmcFat16.c, 1876 :: 		
0xCEBE	0x4A1D    LDR	R2, [PC, #116]
0xCEC0	0xF9922000  LDRSB	R2, [R2, #0]
0xCEC4	0xF88D200C  STRB	R2, [SP, #12]
;__Lib_MmcFat16.c, 1877 :: 		
0xCEC8	0x4A1B    LDR	R2, [PC, #108]
0xCECA	0x7812    LDRB	R2, [R2, #0]
0xCECC	0xF88D200D  STRB	R2, [SP, #13]
;__Lib_MmcFat16.c, 1880 :: 		
0xCED0	0xF88D4004  STRB	R4, [SP, #4]
0xCED4	0x9102    STR	R1, [SP, #8]
0xCED6	0xB2E2    UXTB	R2, R4
0xCED8	0x4608    MOV	R0, R1
0xCEDA	0x2107    MOVS	R1, #7
0xCEDC	0xF7FDFF38  BL	_Mmc_Fat_Open+0
0xCEE0	0x9902    LDR	R1, [SP, #8]
0xCEE2	0xF89D4004  LDRB	R4, [SP, #4]
; err start address is: 12 (R3)
0xCEE6	0xB243    SXTB	R3, R0
;__Lib_MmcFat16.c, 1881 :: 		
0xCEE8	0x2800    CMP	R0, #0
0xCEEA	0xDA1D    BGE	L_Mmc_Fat_Assign295
;__Lib_MmcFat16.c, 1883 :: 		
0xCEEC	0xF06F0201  MVN	R2, #1
0xCEF0	0x4293    CMP	R3, R2
0xCEF2	0xD117    BNE	L_Mmc_Fat_Assign296
; err end address is: 12 (R3)
;__Lib_MmcFat16.c, 1884 :: 		
0xCEF4	0xF89D300D  LDRB	R3, [SP, #13]
0xCEF8	0x4A0F    LDR	R2, [PC, #60]
0xCEFA	0x7013    STRB	R3, [R2, #0]
;__Lib_MmcFat16.c, 1886 :: 		
0xCEFC	0xF99D200C  LDRSB	R2, [SP, #12]
0xCF00	0x0153    LSLS	R3, R2, #5
0xCF02	0x4A0E    LDR	R2, [PC, #56]
0xCF04	0x18D2    ADDS	R2, R2, R3
0xCF06	0xF202031C  ADDW	R3, R2, #28
0xCF0A	0x2200    MOVS	R2, #0
0xCF0C	0x801A    STRH	R2, [R3, #0]
;__Lib_MmcFat16.c, 1887 :: 		
0xCF0E	0xB2E2    UXTB	R2, R4
; attrib end address is: 16 (R4)
0xCF10	0x4608    MOV	R0, R1
0xCF12	0x2107    MOVS	R1, #7
; name end address is: 4 (R1)
0xCF14	0xF7FDFF1C  BL	_Mmc_Fat_Open+0
;__Lib_MmcFat16.c, 1888 :: 		
0xCF18	0x2800    CMP	R0, #0
0xCF1A	0xDA01    BGE	L_Mmc_Fat_Assign297
;__Lib_MmcFat16.c, 1889 :: 		
0xCF1C	0x2000    MOVS	R0, #0
0xCF1E	0xE004    B	L_end_Mmc_Fat_Assign
L_Mmc_Fat_Assign297:
;__Lib_MmcFat16.c, 1891 :: 		
0xCF20	0x2002    MOVS	R0, #2
0xCF22	0xE002    B	L_end_Mmc_Fat_Assign
;__Lib_MmcFat16.c, 1892 :: 		
L_Mmc_Fat_Assign296:
;__Lib_MmcFat16.c, 1894 :: 		
0xCF24	0x2000    MOVS	R0, #0
0xCF26	0xE000    B	L_end_Mmc_Fat_Assign
;__Lib_MmcFat16.c, 1895 :: 		
L_Mmc_Fat_Assign295:
;__Lib_MmcFat16.c, 1897 :: 		
0xCF28	0x2001    MOVS	R0, #1
;__Lib_MmcFat16.c, 1898 :: 		
L_end_Mmc_Fat_Assign:
0xCF2A	0xF8DDE000  LDR	LR, [SP, #0]
0xCF2E	0xB004    ADD	SP, SP, #16
0xCF30	0x4770    BX	LR
0xCF32	0xBF00    NOP
0xCF34	0x2CF72000  	__Lib_MmcFat16_f16_currentHandle+0
0xCF38	0x2A912000  	___f16_errno+0
0xCF3C	0x2CF82000  	_f16_fileDesc+0
; end of _Mmc_Fat_Assign
_Mmc_Fat_Open:
;__Lib_MmcFat16.c, 1194 :: 		
; name start address is: 0 (R0)
0xAD50	0xB09B    SUB	SP, SP, #108
0xAD52	0xF8CDE000  STR	LR, [SP, #0]
0xAD56	0x4607    MOV	R7, R0
0xAD58	0xF88D1064  STRB	R1, [SP, #100]
0xAD5C	0xF88D2068  STRB	R2, [SP, #104]
; name end address is: 0 (R0)
; name start address is: 28 (R7)
;__Lib_MmcFat16.c, 1201 :: 		
0xAD60	0x4638    MOV	R0, R7
0xAD62	0xF7FBFC07  BL	__Lib_MmcFat16_checkFileName+0
0xAD66	0xB128    CBZ	R0, L_Mmc_Fat_Open171
; name end address is: 28 (R7)
;__Lib_MmcFat16.c, 1203 :: 		
0xAD68	0x2412    MOVS	R4, #18
0xAD6A	0x4B87    LDR	R3, [PC, #540]
0xAD6C	0x701C    STRB	R4, [R3, #0]
;__Lib_MmcFat16.c, 1204 :: 		
0xAD6E	0x20FF    MOVS	R0, #-1
0xAD70	0xB240    SXTB	R0, R0
0xAD72	0xE104    B	L_end_Mmc_Fat_Open
;__Lib_MmcFat16.c, 1205 :: 		
L_Mmc_Fat_Open171:
;__Lib_MmcFat16.c, 1207 :: 		
; name start address is: 28 (R7)
0xAD74	0x4639    MOV	R1, R7
; name end address is: 28 (R7)
0xAD76	0x4885    LDR	R0, [PC, #532]
0xAD78	0xF7FBFC5E  BL	__Lib_MmcFat16_nameToUpper+0
;__Lib_MmcFat16.c, 1210 :: 		
0xAD7C	0x4B84    LDR	R3, [PC, #528]
0xAD7E	0x881B    LDRH	R3, [R3, #0]
0xAD80	0xB1BB    CBZ	R3, L_Mmc_Fat_Open172
;__Lib_MmcFat16.c, 1212 :: 		
0xAD82	0x4B84    LDR	R3, [PC, #528]
0xAD84	0xF9933000  LDRSB	R3, [R3, #0]
0xAD88	0x015C    LSLS	R4, R3, #5
0xAD8A	0x4B83    LDR	R3, [PC, #524]
0xAD8C	0x191B    ADDS	R3, R3, R4
0xAD8E	0x2620    MOVS	R6, #32
0xAD90	0x461D    MOV	R5, R3
0xAD92	0x4C82    LDR	R4, [PC, #520]
L_Mmc_Fat_Open173:
0xAD94	0x7823    LDRB	R3, [R4, #0]
0xAD96	0x702B    STRB	R3, [R5, #0]
0xAD98	0x1E76    SUBS	R6, R6, #1
0xAD9A	0xB2F6    UXTB	R6, R6
0xAD9C	0x1C64    ADDS	R4, R4, #1
0xAD9E	0x1C6D    ADDS	R5, R5, #1
0xADA0	0x2E00    CMP	R6, #0
0xADA2	0xD1F7    BNE	L_Mmc_Fat_Open173
;__Lib_MmcFat16.c, 1213 :: 		
0xADA4	0x2400    MOVS	R4, #0
0xADA6	0x4B7A    LDR	R3, [PC, #488]
0xADA8	0x801C    STRH	R4, [R3, #0]
;__Lib_MmcFat16.c, 1214 :: 		
0xADAA	0x24FF    MOVS	R4, #-1
0xADAC	0xB264    SXTB	R4, R4
0xADAE	0x4B79    LDR	R3, [PC, #484]
0xADB0	0x701C    STRB	R4, [R3, #0]
;__Lib_MmcFat16.c, 1215 :: 		
L_Mmc_Fat_Open172:
;__Lib_MmcFat16.c, 1218 :: 		
0xADB2	0xAB14    ADD	R3, SP, #80
0xADB4	0x220D    MOVS	R2, #13
0xADB6	0xB212    SXTH	R2, R2
0xADB8	0x4974    LDR	R1, [PC, #464]
0xADBA	0x4618    MOV	R0, R3
0xADBC	0xF7FBFC2A  BL	_memcpy+0
;__Lib_MmcFat16.c, 1221 :: 		
0xADC0	0xAB09    ADD	R3, SP, #36
0xADC2	0x4619    MOV	R1, R3
0xADC4	0x4871    LDR	R0, [PC, #452]
0xADC6	0xF7FBFA33  BL	__Lib_MmcFat16_stat+0
0xADCA	0x2800    CMP	R0, #0
0xADCC	0xDA4C    BGE	L_Mmc_Fat_Open174
;__Lib_MmcFat16.c, 1223 :: 		
0xADCE	0xF89D4068  LDRB	R4, [SP, #104]
0xADD2	0xF3C413C0  UBFX	R3, R4, #7, #1
0xADD6	0x2B00    CMP	R3, #0
0xADD8	0xD040    BEQ	L_Mmc_Fat_Open175
;__Lib_MmcFat16.c, 1227 :: 		
0xADDA	0xF2400300  MOVW	R3, #0
0xADDE	0xF8AD305E  STRH	R3, [SP, #94]
;__Lib_MmcFat16.c, 1228 :: 		
0xADE2	0xF04F0300  MOV	R3, #0
0xADE6	0x9318    STR	R3, [SP, #96]
;__Lib_MmcFat16.c, 1231 :: 		
0xADE8	0xF89D3068  LDRB	R3, [SP, #104]
0xADEC	0xF0030358  AND	R3, R3, #88
0xADF0	0xB2DB    UXTB	R3, R3
0xADF2	0xB12B    CBZ	R3, L_Mmc_Fat_Open176
;__Lib_MmcFat16.c, 1233 :: 		
0xADF4	0x2408    MOVS	R4, #8
0xADF6	0x4B64    LDR	R3, [PC, #400]
0xADF8	0x701C    STRB	R4, [R3, #0]
;__Lib_MmcFat16.c, 1234 :: 		
0xADFA	0x20FF    MOVS	R0, #-1
0xADFC	0xB240    SXTB	R0, R0
0xADFE	0xE0BE    B	L_end_Mmc_Fat_Open
;__Lib_MmcFat16.c, 1235 :: 		
L_Mmc_Fat_Open176:
;__Lib_MmcFat16.c, 1237 :: 		
0xAE00	0xAB01    ADD	R3, SP, #4
0xAE02	0x2220    MOVS	R2, #32
0xAE04	0xB212    SXTH	R2, R2
0xAE06	0x2100    MOVS	R1, #0
0xAE08	0x4618    MOV	R0, R3
0xAE0A	0xF7FAFF59  BL	_memset+0
;__Lib_MmcFat16.c, 1238 :: 		
0xAE0E	0xF89D3068  LDRB	R3, [SP, #104]
0xAE12	0xF003037F  AND	R3, R3, #127
0xAE16	0xF88D300F  STRB	R3, [SP, #15]
;__Lib_MmcFat16.c, 1239 :: 		
0xAE1A	0xAB01    ADD	R3, SP, #4
0xAE1C	0x220B    MOVS	R2, #11
0xAE1E	0xB212    SXTH	R2, R2
0xAE20	0x495A    LDR	R1, [PC, #360]
0xAE22	0x4618    MOV	R0, R3
0xAE24	0xF7FBFBF6  BL	_memcpy+0
;__Lib_MmcFat16.c, 1240 :: 		
0xAE28	0xF10D055E  ADD	R5, SP, #94
0xAE2C	0xAC18    ADD	R4, SP, #96
0xAE2E	0xAB01    ADD	R3, SP, #4
0xAE30	0x462A    MOV	R2, R5
0xAE32	0x4621    MOV	R1, R4
0xAE34	0x4618    MOV	R0, R3
0xAE36	0xF7FBF8F1  BL	__Lib_MmcFat16_mkNod+0
0xAE3A	0x2800    CMP	R0, #0
0xAE3C	0xDA02    BGE	L_Mmc_Fat_Open177
;__Lib_MmcFat16.c, 1241 :: 		
0xAE3E	0x20FF    MOVS	R0, #-1
0xAE40	0xB240    SXTB	R0, R0
0xAE42	0xE09C    B	L_end_Mmc_Fat_Open
L_Mmc_Fat_Open177:
;__Lib_MmcFat16.c, 1242 :: 		
0xAE44	0xAC09    ADD	R4, SP, #36
0xAE46	0xAB14    ADD	R3, SP, #80
0xAE48	0x4621    MOV	R1, R4
0xAE4A	0x4618    MOV	R0, R3
0xAE4C	0xF7FBF9F0  BL	__Lib_MmcFat16_stat+0
0xAE50	0x2800    CMP	R0, #0
0xAE52	0xDA02    BGE	L_Mmc_Fat_Open178
;__Lib_MmcFat16.c, 1243 :: 		
0xAE54	0x20FF    MOVS	R0, #-1
0xAE56	0xB240    SXTB	R0, R0
0xAE58	0xE091    B	L_end_Mmc_Fat_Open
L_Mmc_Fat_Open178:
;__Lib_MmcFat16.c, 1244 :: 		
0xAE5A	0xE005    B	L_Mmc_Fat_Open179
L_Mmc_Fat_Open175:
;__Lib_MmcFat16.c, 1247 :: 		
0xAE5C	0x240D    MOVS	R4, #13
0xAE5E	0x4B4A    LDR	R3, [PC, #296]
0xAE60	0x701C    STRB	R4, [R3, #0]
;__Lib_MmcFat16.c, 1248 :: 		
0xAE62	0x20FF    MOVS	R0, #-1
0xAE64	0xB240    SXTB	R0, R0
0xAE66	0xE08A    B	L_end_Mmc_Fat_Open
;__Lib_MmcFat16.c, 1249 :: 		
L_Mmc_Fat_Open179:
;__Lib_MmcFat16.c, 1250 :: 		
L_Mmc_Fat_Open174:
;__Lib_MmcFat16.c, 1253 :: 		
0xAE68	0xF89D3031  LDRB	R3, [SP, #49]
0xAE6C	0xF0030358  AND	R3, R3, #88
0xAE70	0xB2DB    UXTB	R3, R3
0xAE72	0xB12B    CBZ	R3, L_Mmc_Fat_Open180
;__Lib_MmcFat16.c, 1255 :: 		
0xAE74	0x2408    MOVS	R4, #8
0xAE76	0x4B44    LDR	R3, [PC, #272]
0xAE78	0x701C    STRB	R4, [R3, #0]
;__Lib_MmcFat16.c, 1256 :: 		
0xAE7A	0x20FF    MOVS	R0, #-1
0xAE7C	0xB240    SXTB	R0, R0
0xAE7E	0xE07E    B	L_end_Mmc_Fat_Open
;__Lib_MmcFat16.c, 1257 :: 		
L_Mmc_Fat_Open180:
;__Lib_MmcFat16.c, 1261 :: 		
; i start address is: 0 (R0)
0xAE80	0x2000    MOVS	R0, #0
; i end address is: 0 (R0)
L_Mmc_Fat_Open181:
; i start address is: 0 (R0)
0xAE82	0x2802    CMP	R0, _MAX_FILES
0xAE84	0xD225    BCS	L_Mmc_Fat_Open182
;__Lib_MmcFat16.c, 1263 :: 		
0xAE86	0x0144    LSLS	R4, R0, #5
0xAE88	0x4B43    LDR	R3, [PC, #268]
0xAE8A	0x191B    ADDS	R3, R3, R4
; f start address is: 4 (R1)
0xAE8C	0x4619    MOV	R1, R3
;__Lib_MmcFat16.c, 1265 :: 		
0xAE8E	0x331C    ADDS	R3, #28
0xAE90	0x881B    LDRH	R3, [R3, #0]
0xAE92	0xB1D3    CBZ	R3, L__Mmc_Fat_Open445
0xAE94	0x1D8B    ADDS	R3, R1, #6
0xAE96	0x881C    LDRH	R4, [R3, #0]
0xAE98	0xF8BD3044  LDRH	R3, [SP, #68]
0xAE9C	0x42A3    CMP	R3, R4
0xAE9E	0xD114    BNE	L__Mmc_Fat_Open444
L__Mmc_Fat_Open443:
;__Lib_MmcFat16.c, 1267 :: 		
0xAEA0	0xF201041C  ADDW	R4, R1, #28
0xAEA4	0xF89D3064  LDRB	R3, [SP, #100]
0xAEA8	0x8023    STRH	R3, [R4, #0]
;__Lib_MmcFat16.c, 1270 :: 		
0xAEAA	0x2620    MOVS	R6, #32
0xAEAC	0x4D3B    LDR	R5, [PC, #236]
0xAEAE	0x460C    MOV	R4, R1
; f end address is: 4 (R1)
0xAEB0	0xE7FF    B	L_Mmc_Fat_Open187
L__Mmc_Fat_Open446:
L_Mmc_Fat_Open187:
; i start address is: 0 (R0)
; i end address is: 0 (R0)
0xAEB2	0x7823    LDRB	R3, [R4, #0]
0xAEB4	0x702B    STRB	R3, [R5, #0]
0xAEB6	0x1E76    SUBS	R6, R6, #1
0xAEB8	0xB2F6    UXTB	R6, R6
0xAEBA	0x1C64    ADDS	R4, R4, #1
0xAEBC	0x1C6D    ADDS	R5, R5, #1
0xAEBE	0x2E00    CMP	R6, #0
0xAEC0	0xD1F7    BNE	L__Mmc_Fat_Open446
; i end address is: 0 (R0)
;__Lib_MmcFat16.c, 1271 :: 		
; i start address is: 0 (R0)
0xAEC2	0x4B34    LDR	R3, [PC, #208]
0xAEC4	0x7018    STRB	R0, [R3, #0]
;__Lib_MmcFat16.c, 1273 :: 		
0xAEC6	0xB240    SXTB	R0, R0
; i end address is: 0 (R0)
0xAEC8	0xE059    B	L_end_Mmc_Fat_Open
;__Lib_MmcFat16.c, 1265 :: 		
L__Mmc_Fat_Open445:
; i start address is: 0 (R0)
L__Mmc_Fat_Open444:
;__Lib_MmcFat16.c, 1261 :: 		
0xAECA	0x1C43    ADDS	R3, R0, #1
; i end address is: 0 (R0)
; i start address is: 4 (R1)
0xAECC	0xB299    UXTH	R1, R3
;__Lib_MmcFat16.c, 1275 :: 		
0xAECE	0xB288    UXTH	R0, R1
; i end address is: 4 (R1)
0xAED0	0xE7D7    B	L_Mmc_Fat_Open181
L_Mmc_Fat_Open182:
;__Lib_MmcFat16.c, 1278 :: 		
; i start address is: 28 (R7)
0xAED2	0x2700    MOVS	R7, #0
; i end address is: 28 (R7)
L_Mmc_Fat_Open188:
; i start address is: 28 (R7)
0xAED4	0x2F02    CMP	R7, _MAX_FILES
0xAED6	0xD24D    BCS	L_Mmc_Fat_Open189
;__Lib_MmcFat16.c, 1280 :: 		
0xAED8	0x017C    LSLS	R4, R7, #5
0xAEDA	0x4B2F    LDR	R3, [PC, #188]
0xAEDC	0x191B    ADDS	R3, R3, R4
0xAEDE	0x331C    ADDS	R3, #28
0xAEE0	0x881B    LDRH	R3, [R3, #0]
0xAEE2	0x2B00    CMP	R3, #0
0xAEE4	0xD142    BNE	L_Mmc_Fat_Open191
;__Lib_MmcFat16.c, 1282 :: 		
0xAEE6	0x017C    LSLS	R4, R7, #5
0xAEE8	0x4B2B    LDR	R3, [PC, #172]
0xAEEA	0x191B    ADDS	R3, R3, R4
; f start address is: 32 (R8)
0xAEEC	0x4698    MOV	R8, R3
;__Lib_MmcFat16.c, 1284 :: 		
0xAEEE	0x2220    MOVS	R2, #32
0xAEF0	0xB212    SXTH	R2, R2
0xAEF2	0x2100    MOVS	R1, #0
0xAEF4	0x4618    MOV	R0, R3
0xAEF6	0xF7FAFEE3  BL	_memset+0
;__Lib_MmcFat16.c, 1286 :: 		
0xAEFA	0xF1080506  ADD	R5, R8, #6
0xAEFE	0xF108040C  ADD	R4, R8, #12
0xAF02	0xF8BD3044  LDRH	R3, [SP, #68]
0xAF06	0x8023    STRH	R3, [R4, #0]
0xAF08	0x8823    LDRH	R3, [R4, #0]
0xAF0A	0x802B    STRH	R3, [R5, #0]
;__Lib_MmcFat16.c, 1287 :: 		
0xAF0C	0xF108041C  ADD	R4, R8, #28
0xAF10	0xF89D3064  LDRB	R3, [SP, #100]
0xAF14	0x8023    STRH	R3, [R4, #0]
;__Lib_MmcFat16.c, 1289 :: 		
0xAF16	0x9B12    LDR	R3, [SP, #72]
0xAF18	0xF8C83000  STR	R3, [R8, #0]
;__Lib_MmcFat16.c, 1290 :: 		
0xAF1C	0xF1080404  ADD	R4, R8, #4
0xAF20	0xF8BD304C  LDRH	R3, [SP, #76]
0xAF24	0x015B    LSLS	R3, R3, #5
0xAF26	0x8023    STRH	R3, [R4, #0]
;__Lib_MmcFat16.c, 1292 :: 		
0xAF28	0xF1080418  ADD	R4, R8, #24
0xAF2C	0x9B10    LDR	R3, [SP, #64]
0xAF2E	0x6023    STR	R3, [R4, #0]
;__Lib_MmcFat16.c, 1294 :: 		
0xAF30	0xF1080510  ADD	R5, R8, #16
0xAF34	0xF108030C  ADD	R3, R8, #12
0xAF38	0x881B    LDRH	R3, [R3, #0]
0xAF3A	0x1E9C    SUBS	R4, R3, #2
0xAF3C	0x4B18    LDR	R3, [PC, #96]
0xAF3E	0x881B    LDRH	R3, [R3, #0]
0xAF40	0x435C    MULS	R4, R3, R4
0xAF42	0x4B18    LDR	R3, [PC, #96]
0xAF44	0x681B    LDR	R3, [R3, #0]
0xAF46	0x191B    ADDS	R3, R3, R4
0xAF48	0x602B    STR	R3, [R5, #0]
;__Lib_MmcFat16.c, 1296 :: 		
0xAF4A	0x2620    MOVS	R6, #32
0xAF4C	0x4D13    LDR	R5, [PC, #76]
0xAF4E	0x4644    MOV	R4, R8
; i end address is: 28 (R7)
; f end address is: 32 (R8)
0xAF50	0xB2B8    UXTH	R0, R7
0xAF52	0xE7FF    B	L_Mmc_Fat_Open192
L__Mmc_Fat_Open447:
L_Mmc_Fat_Open192:
; i start address is: 0 (R0)
; i start address is: 0 (R0)
; i end address is: 0 (R0)
0xAF54	0x7823    LDRB	R3, [R4, #0]
0xAF56	0x702B    STRB	R3, [R5, #0]
0xAF58	0x1E76    SUBS	R6, R6, #1
0xAF5A	0xB2F6    UXTB	R6, R6
0xAF5C	0x1C64    ADDS	R4, R4, #1
0xAF5E	0x1C6D    ADDS	R5, R5, #1
0xAF60	0x2E00    CMP	R6, #0
0xAF62	0xD1F7    BNE	L__Mmc_Fat_Open447
; i end address is: 0 (R0)
;__Lib_MmcFat16.c, 1297 :: 		
; i start address is: 0 (R0)
0xAF64	0x4B0B    LDR	R3, [PC, #44]
0xAF66	0x7018    STRB	R0, [R3, #0]
;__Lib_MmcFat16.c, 1299 :: 		
0xAF68	0xB240    SXTB	R0, R0
; i end address is: 0 (R0)
0xAF6A	0xE008    B	L_end_Mmc_Fat_Open
;__Lib_MmcFat16.c, 1300 :: 		
L_Mmc_Fat_Open191:
;__Lib_MmcFat16.c, 1278 :: 		
; i start address is: 28 (R7)
0xAF6C	0x1C7B    ADDS	R3, R7, #1
; i end address is: 28 (R7)
; i start address is: 0 (R0)
0xAF6E	0xB298    UXTH	R0, R3
;__Lib_MmcFat16.c, 1301 :: 		
0xAF70	0xB287    UXTH	R7, R0
; i end address is: 0 (R0)
0xAF72	0xE7AF    B	L_Mmc_Fat_Open188
L_Mmc_Fat_Open189:
;__Lib_MmcFat16.c, 1306 :: 		
0xAF74	0x2409    MOVS	R4, #9
0xAF76	0x4B04    LDR	R3, [PC, #16]
0xAF78	0x701C    STRB	R4, [R3, #0]
;__Lib_MmcFat16.c, 1307 :: 		
0xAF7A	0x20FE    MOVS	R0, #-2
0xAF7C	0xB240    SXTB	R0, R0
;__Lib_MmcFat16.c, 1308 :: 		
L_end_Mmc_Fat_Open:
0xAF7E	0xF8DDE000  LDR	LR, [SP, #0]
0xAF82	0xB01B    ADD	SP, SP, #108
0xAF84	0x4770    BX	LR
0xAF86	0xBF00    NOP
0xAF88	0x2A912000  	___f16_errno+0
0xAF8C	0x2CEA2000  	__Lib_MmcFat16_tmpBuf+0
0xAF90	0x2ABC2000  	__Lib_MmcFat16_f16_cFD+28
0xAF94	0x2CF72000  	__Lib_MmcFat16_f16_currentHandle+0
0xAF98	0x2CF82000  	_f16_fileDesc+0
0xAF9C	0x2AA02000  	__Lib_MmcFat16_f16_cFD+0
0xAFA0	0x2AC22000  	__Lib_MmcFat16_f16_boot+2
0xAFA4	0x2AD42000  	__Lib_MmcFat16_f16_boot+20
; end of _Mmc_Fat_Open
__Lib_MmcFat16_checkFileName:
;__Lib_MmcFat16.c, 134 :: 		
; fname start address is: 0 (R0)
0x6574	0xB081    SUB	SP, SP, #4
0x6576	0xF8CDE000  STR	LR, [SP, #0]
0x657A	0x4604    MOV	R4, R0
; fname end address is: 0 (R0)
; fname start address is: 16 (R4)
;__Lib_MmcFat16.c, 140 :: 		
0x657C	0x4620    MOV	R0, R4
0x657E	0xF7FCFA69  BL	_strlen+0
; slen start address is: 24 (R6)
0x6582	0xB2C6    UXTB	R6, R0
;__Lib_MmcFat16.c, 141 :: 		
0x6584	0xB2C1    UXTB	R1, R0
0x6586	0xB911    CBNZ	R1, L___Lib_MmcFat16_checkFileName15
; slen end address is: 24 (R6)
; fname end address is: 16 (R4)
;__Lib_MmcFat16.c, 142 :: 		
0x6588	0x20FF    MOVS	R0, #-1
0x658A	0xB240    SXTB	R0, R0
0x658C	0xE03E    B	L_end_checkFileName
L___Lib_MmcFat16_checkFileName15:
;__Lib_MmcFat16.c, 143 :: 		
; fname start address is: 16 (R4)
; slen start address is: 24 (R6)
0x658E	0x2E0C    CMP	R6, #12
0x6590	0xD902    BLS	L___Lib_MmcFat16_checkFileName16
; slen end address is: 24 (R6)
; fname end address is: 16 (R4)
;__Lib_MmcFat16.c, 144 :: 		
0x6592	0x20FE    MOVS	R0, #-2
0x6594	0xB240    SXTB	R0, R0
0x6596	0xE039    B	L_end_checkFileName
L___Lib_MmcFat16_checkFileName16:
;__Lib_MmcFat16.c, 145 :: 		
; fname start address is: 16 (R4)
; slen start address is: 24 (R6)
0x6598	0x7821    LDRB	R1, [R4, #0]
0x659A	0x292E    CMP	R1, #46
0x659C	0xD102    BNE	L___Lib_MmcFat16_checkFileName17
; slen end address is: 24 (R6)
; fname end address is: 16 (R4)
;__Lib_MmcFat16.c, 146 :: 		
0x659E	0x20FD    MOVS	R0, #-3
0x65A0	0xB240    SXTB	R0, R0
0x65A2	0xE033    B	L_end_checkFileName
L___Lib_MmcFat16_checkFileName17:
;__Lib_MmcFat16.c, 149 :: 		
; fname start address is: 16 (R4)
; dot start address is: 20 (R5)
; slen start address is: 24 (R6)
0x65A4	0x2500    MOVS	R5, #0
0x65A6	0xB26D    SXTB	R5, R5
;__Lib_MmcFat16.c, 150 :: 		
; pch start address is: 12 (R3)
0x65A8	0x4623    MOV	R3, R4
;__Lib_MmcFat16.c, 154 :: 		
; i start address is: 8 (R2)
0x65AA	0xB2F2    UXTB	R2, R6
; slen end address is: 24 (R6)
; pch end address is: 12 (R3)
; dot end address is: 20 (R5)
; i end address is: 8 (R2)
0x65AC	0xB2F0    UXTB	R0, R6
L___Lib_MmcFat16_checkFileName18:
; i start address is: 8 (R2)
; pch start address is: 12 (R3)
; dot start address is: 20 (R5)
; slen start address is: 0 (R0)
; fname start address is: 16 (R4)
; fname end address is: 16 (R4)
0x65AE	0x2A00    CMP	R2, #0
0x65B0	0xD911    BLS	L___Lib_MmcFat16_checkFileName416
; fname end address is: 16 (R4)
;__Lib_MmcFat16.c, 156 :: 		
; fname start address is: 16 (R4)
0x65B2	0x18A1    ADDS	R1, R4, R2
0x65B4	0x7809    LDRB	R1, [R1, #0]
0x65B6	0x292E    CMP	R1, #46
0x65B8	0xD10A    BNE	L___Lib_MmcFat16_checkFileName21
; pch end address is: 12 (R3)
; dot end address is: 20 (R5)
;__Lib_MmcFat16.c, 158 :: 		
; dot start address is: 12 (R3)
0x65BA	0x2301    MOVS	R3, #1
0x65BC	0xB25B    SXTB	R3, R3
;__Lib_MmcFat16.c, 159 :: 		
0x65BE	0x2A08    CMP	R2, #8
0x65C0	0xD902    BLS	L___Lib_MmcFat16_checkFileName22
; slen end address is: 0 (R0)
; fname end address is: 16 (R4)
; i end address is: 8 (R2)
; dot end address is: 12 (R3)
;__Lib_MmcFat16.c, 160 :: 		
0x65C2	0x20FC    MOVS	R0, #-4
0x65C4	0xB240    SXTB	R0, R0
0x65C6	0xE021    B	L_end_checkFileName
L___Lib_MmcFat16_checkFileName22:
;__Lib_MmcFat16.c, 161 :: 		
; dot start address is: 12 (R3)
; i start address is: 8 (R2)
; fname start address is: 16 (R4)
; slen start address is: 0 (R0)
0x65C8	0x1C51    ADDS	R1, R2, #1
0x65CA	0xB209    SXTH	R1, R1
; i end address is: 8 (R2)
0x65CC	0x1862    ADDS	R2, R4, R1
; fname end address is: 16 (R4)
; pch start address is: 8 (R2)
;__Lib_MmcFat16.c, 162 :: 		
; pch end address is: 8 (R2)
; dot end address is: 12 (R3)
0x65CE	0xE004    B	L___Lib_MmcFat16_checkFileName19
;__Lib_MmcFat16.c, 163 :: 		
L___Lib_MmcFat16_checkFileName21:
;__Lib_MmcFat16.c, 154 :: 		
; i start address is: 8 (R2)
; fname start address is: 16 (R4)
; dot start address is: 20 (R5)
; pch start address is: 12 (R3)
0x65D0	0x1E52    SUBS	R2, R2, #1
0x65D2	0xB2D2    UXTB	R2, R2
;__Lib_MmcFat16.c, 164 :: 		
; pch end address is: 12 (R3)
; dot end address is: 20 (R5)
; fname end address is: 16 (R4)
; i end address is: 8 (R2)
0x65D4	0xE7EB    B	L___Lib_MmcFat16_checkFileName18
L___Lib_MmcFat16_checkFileName416:
;__Lib_MmcFat16.c, 154 :: 		
0x65D6	0x461A    MOV	R2, R3
0x65D8	0xB26B    SXTB	R3, R5
;__Lib_MmcFat16.c, 164 :: 		
L___Lib_MmcFat16_checkFileName19:
;__Lib_MmcFat16.c, 166 :: 		
; pch start address is: 8 (R2)
; dot start address is: 12 (R3)
0x65DA	0x2B01    CMP	R3, #1
0x65DC	0xD004    BEQ	L___Lib_MmcFat16_checkFileName415
0x65DE	0x2808    CMP	R0, #8
0x65E0	0xD902    BLS	L___Lib_MmcFat16_checkFileName414
; slen end address is: 0 (R0)
; pch end address is: 8 (R2)
; dot end address is: 12 (R3)
L___Lib_MmcFat16_checkFileName413:
;__Lib_MmcFat16.c, 167 :: 		
0x65E2	0x20FB    MOVS	R0, #-5
0x65E4	0xB240    SXTB	R0, R0
0x65E6	0xE011    B	L_end_checkFileName
;__Lib_MmcFat16.c, 166 :: 		
L___Lib_MmcFat16_checkFileName415:
; dot start address is: 12 (R3)
; pch start address is: 8 (R2)
L___Lib_MmcFat16_checkFileName414:
;__Lib_MmcFat16.c, 170 :: 		
0x65E8	0x2B01    CMP	R3, #1
0x65EA	0xD10D    BNE	L___Lib_MmcFat16_checkFileName26
; dot end address is: 12 (R3)
;__Lib_MmcFat16.c, 172 :: 		
0x65EC	0x4610    MOV	R0, R2
; pch end address is: 8 (R2)
0x65EE	0xF7FCFA31  BL	_strlen+0
; slen start address is: 8 (R2)
0x65F2	0xB2C2    UXTB	R2, R0
;__Lib_MmcFat16.c, 173 :: 		
0x65F4	0xB2C1    UXTB	R1, R0
0x65F6	0xB911    CBNZ	R1, L___Lib_MmcFat16_checkFileName27
; slen end address is: 8 (R2)
;__Lib_MmcFat16.c, 174 :: 		
0x65F8	0x20F5    MOVS	R0, #-11
0x65FA	0xB240    SXTB	R0, R0
0x65FC	0xE006    B	L_end_checkFileName
L___Lib_MmcFat16_checkFileName27:
;__Lib_MmcFat16.c, 175 :: 		
; slen start address is: 8 (R2)
0x65FE	0x2A03    CMP	R2, #3
0x6600	0xD902    BLS	L___Lib_MmcFat16_checkFileName28
; slen end address is: 8 (R2)
;__Lib_MmcFat16.c, 176 :: 		
0x6602	0x20F4    MOVS	R0, #-12
0x6604	0xB240    SXTB	R0, R0
0x6606	0xE001    B	L_end_checkFileName
L___Lib_MmcFat16_checkFileName28:
;__Lib_MmcFat16.c, 177 :: 		
L___Lib_MmcFat16_checkFileName26:
;__Lib_MmcFat16.c, 179 :: 		
0x6608	0x2000    MOVS	R0, #0
0x660A	0xB240    SXTB	R0, R0
;__Lib_MmcFat16.c, 180 :: 		
L_end_checkFileName:
0x660C	0xF8DDE000  LDR	LR, [SP, #0]
0x6610	0xB001    ADD	SP, SP, #4
0x6612	0x4770    BX	LR
; end of __Lib_MmcFat16_checkFileName
_strlen:
;__Lib_CString.c, 143 :: 		
; s start address is: 0 (R0)
0x2A54	0xB081    SUB	SP, SP, #4
0x2A56	0x4601    MOV	R1, R0
; s end address is: 0 (R0)
; s start address is: 4 (R1)
;__Lib_CString.c, 146 :: 		
; cp start address is: 0 (R0)
0x2A58	0x4608    MOV	R0, R1
; s end address is: 4 (R1)
; cp end address is: 0 (R0)
0x2A5A	0x460B    MOV	R3, R1
;__Lib_CString.c, 147 :: 		
L_strlen36:
; cp start address is: 0 (R0)
; s start address is: 12 (R3)
0x2A5C	0x4602    MOV	R2, R0
0x2A5E	0x1C40    ADDS	R0, R0, #1
0x2A60	0x7811    LDRB	R1, [R2, #0]
0x2A62	0xB101    CBZ	R1, L_strlen37
;__Lib_CString.c, 148 :: 		
0x2A64	0xE7FA    B	L_strlen36
L_strlen37:
;__Lib_CString.c, 149 :: 		
0x2A66	0x1AC1    SUB	R1, R0, R3
; s end address is: 12 (R3)
; cp end address is: 0 (R0)
0x2A68	0x1E49    SUBS	R1, R1, #1
0x2A6A	0xB208    SXTH	R0, R1
;__Lib_CString.c, 150 :: 		
L_end_strlen:
0x2A6C	0xB001    ADD	SP, SP, #4
0x2A6E	0x4770    BX	LR
; end of _strlen
__Lib_MmcFat16_nameToUpper:
;__Lib_MmcFat16.c, 183 :: 		
; old start address is: 4 (R1)
; new start address is: 0 (R0)
0x6638	0xB082    SUB	SP, SP, #8
0x663A	0xF8CDE000  STR	LR, [SP, #0]
; old end address is: 4 (R1)
; new end address is: 0 (R0)
; new start address is: 0 (R0)
; old start address is: 4 (R1)
;__Lib_MmcFat16.c, 186 :: 		
; i start address is: 20 (R5)
0x663E	0x2500    MOVS	R5, #0
; new end address is: 0 (R0)
; old end address is: 4 (R1)
; i end address is: 20 (R5)
0x6640	0x4604    MOV	R4, R0
0x6642	0x460B    MOV	R3, R1
L___Lib_MmcFat16_nameToUpper29:
; i start address is: 20 (R5)
; new start address is: 16 (R4)
; old start address is: 12 (R3)
; old start address is: 12 (R3)
; old end address is: 12 (R3)
; new start address is: 16 (R4)
; new end address is: 16 (R4)
0x6644	0x2D0D    CMP	R5, #13
0x6646	0xD20B    BCS	L___Lib_MmcFat16_nameToUpper30
; old end address is: 12 (R3)
; new end address is: 16 (R4)
;__Lib_MmcFat16.c, 187 :: 		
; new start address is: 16 (R4)
; old start address is: 12 (R3)
0x6648	0x1962    ADDS	R2, R4, R5
0x664A	0x9201    STR	R2, [SP, #4]
0x664C	0x195A    ADDS	R2, R3, R5
0x664E	0x7812    LDRB	R2, [R2, #0]
0x6650	0xB2D0    UXTB	R0, R2
0x6652	0xF7FBFF63  BL	_toupper+0
0x6656	0x9A01    LDR	R2, [SP, #4]
0x6658	0x7010    STRB	R0, [R2, #0]
;__Lib_MmcFat16.c, 186 :: 		
0x665A	0x1C6D    ADDS	R5, R5, #1
0x665C	0xB2ED    UXTB	R5, R5
;__Lib_MmcFat16.c, 187 :: 		
; old end address is: 12 (R3)
; new end address is: 16 (R4)
; i end address is: 20 (R5)
0x665E	0xE7F1    B	L___Lib_MmcFat16_nameToUpper29
L___Lib_MmcFat16_nameToUpper30:
;__Lib_MmcFat16.c, 188 :: 		
L_end_nameToUpper:
0x6660	0xF8DDE000  LDR	LR, [SP, #0]
0x6664	0xB002    ADD	SP, SP, #8
0x6666	0x4770    BX	LR
; end of __Lib_MmcFat16_nameToUpper
_toupper:
;__Lib_CType.c, 76 :: 		
; character start address is: 0 (R0)
0x251C	0xB081    SUB	SP, SP, #4
; character end address is: 0 (R0)
; character start address is: 0 (R0)
;__Lib_CType.c, 77 :: 		
0x251E	0x287A    CMP	R0, #122
0x2520	0xD808    BHI	L__toupper47
0x2522	0x2861    CMP	R0, #97
0x2524	0xD307    BCC	L__toupper48
L__toupper44:
;__Lib_CType.c, 78 :: 		
0x2526	0xF64F71DF  MOVW	R1, #65503
0x252A	0xB209    SXTH	R1, R1
0x252C	0xEA000101  AND	R1, R0, R1, LSL #0
0x2530	0xB2C8    UXTB	R0, R1
; character end address is: 0 (R0)
;__Lib_CType.c, 77 :: 		
0x2532	0xE7FF    B	L__toupper46
L__toupper47:
L__toupper46:
; character start address is: 0 (R0)
; character end address is: 0 (R0)
0x2534	0xE7FF    B	L__toupper45
L__toupper48:
L__toupper45:
;__Lib_CType.c, 79 :: 		
; character start address is: 0 (R0)
; character end address is: 0 (R0)
;__Lib_CType.c, 80 :: 		
L_end_toupper:
0x2536	0xB001    ADD	SP, SP, #4
0x2538	0x4770    BX	LR
; end of _toupper
_memcpy:
;__Lib_CString.c, 44 :: 		
; n start address is: 8 (R2)
; s1 start address is: 4 (R1)
; d1 start address is: 0 (R0)
0x6614	0xB081    SUB	SP, SP, #4
0x6616	0x460B    MOV	R3, R1
0x6618	0x4601    MOV	R1, R0
; n end address is: 8 (R2)
; s1 end address is: 4 (R1)
; d1 end address is: 0 (R0)
; d1 start address is: 4 (R1)
; s1 start address is: 12 (R3)
; n start address is: 8 (R2)
;__Lib_CString.c, 48 :: 		
; ss start address is: 0 (R0)
0x661A	0x4618    MOV	R0, R3
; s1 end address is: 12 (R3)
;__Lib_CString.c, 49 :: 		
; dd start address is: 20 (R5)
0x661C	0x460D    MOV	R5, R1
; d1 end address is: 4 (R1)
; dd end address is: 20 (R5)
; ss end address is: 0 (R0)
;__Lib_CString.c, 50 :: 		
L_memcpy7:
; dd start address is: 20 (R5)
; ss start address is: 0 (R0)
; n start address is: 8 (R2)
; d1 start address is: 4 (R1)
0x661E	0xB214    SXTH	R4, R2
0x6620	0x1E53    SUBS	R3, R2, #1
0x6622	0xB21A    SXTH	R2, R3
; n end address is: 8 (R2)
0x6624	0xB124    CBZ	R4, L_memcpy8
; n end address is: 8 (R2)
;__Lib_CString.c, 51 :: 		
; n start address is: 8 (R2)
0x6626	0x7803    LDRB	R3, [R0, #0]
0x6628	0x702B    STRB	R3, [R5, #0]
0x662A	0x1C6D    ADDS	R5, R5, #1
0x662C	0x1C40    ADDS	R0, R0, #1
; n end address is: 8 (R2)
; dd end address is: 20 (R5)
; ss end address is: 0 (R0)
0x662E	0xE7F6    B	L_memcpy7
L_memcpy8:
;__Lib_CString.c, 53 :: 		
0x6630	0x4608    MOV	R0, R1
; d1 end address is: 4 (R1)
;__Lib_CString.c, 54 :: 		
L_end_memcpy:
0x6632	0xB001    ADD	SP, SP, #4
0x6634	0x4770    BX	LR
; end of _memcpy
__Lib_MmcFat16_stat:
;__Lib_MmcFat16.c, 568 :: 		
0x6230	0xB086    SUB	SP, SP, #24
0x6232	0xF8CDE000  STR	LR, [SP, #0]
0x6236	0x9004    STR	R0, [SP, #16]
0x6238	0x9105    STR	R1, [SP, #20]
;__Lib_MmcFat16.c, 571 :: 		
;__Lib_MmcFat16.c, 575 :: 		
0x623A	0x9A04    LDR	R2, [SP, #16]
0x623C	0xB912    CBNZ	R2, L___Lib_MmcFat16_stat83
;__Lib_MmcFat16.c, 576 :: 		
0x623E	0x20FF    MOVS	R0, #-1
0x6240	0xB240    SXTB	R0, R0
0x6242	0xE073    B	L_end_stat
L___Lib_MmcFat16_stat83:
;__Lib_MmcFat16.c, 579 :: 		
0x6244	0x9804    LDR	R0, [SP, #16]
0x6246	0xF7FCF9CB  BL	__Lib_MmcFat16_f16_normalize+0
;__Lib_MmcFat16.c, 582 :: 		
0x624A	0x4A3A    LDR	R2, [PC, #232]
0x624C	0x6813    LDR	R3, [R2, #0]
0x624E	0x4A3A    LDR	R2, [PC, #232]
0x6250	0x6812    LDR	R2, [R2, #0]
0x6252	0x429A    CMP	R2, R3
0x6254	0xD104    BNE	L___Lib_MmcFat16_stat84
;__Lib_MmcFat16.c, 583 :: 		
0x6256	0x4A39    LDR	R2, [PC, #228]
0x6258	0x8812    LDRH	R2, [R2, #0]
0x625A	0xF8AD2006  STRH	R2, [SP, #6]
0x625E	0xE006    B	L___Lib_MmcFat16_stat85
L___Lib_MmcFat16_stat84:
;__Lib_MmcFat16.c, 585 :: 		
0x6260	0x4A37    LDR	R2, [PC, #220]
0x6262	0x8813    LDRH	R3, [R2, #0]
0x6264	0x4A37    LDR	R2, [PC, #220]
0x6266	0x8812    LDRH	R2, [R2, #0]
0x6268	0x435A    MULS	R2, R3, R2
0x626A	0xF8AD2006  STRH	R2, [SP, #6]
L___Lib_MmcFat16_stat85:
;__Lib_MmcFat16.c, 588 :: 		
0x626E	0x4B32    LDR	R3, [PC, #200]
0x6270	0x681A    LDR	R2, [R3, #0]
0x6272	0x9203    STR	R2, [SP, #12]
;__Lib_MmcFat16.c, 589 :: 		
0x6274	0x4A34    LDR	R2, [PC, #208]
0x6276	0x9202    STR	R2, [SP, #8]
;__Lib_MmcFat16.c, 591 :: 		
0x6278	0x461A    MOV	R2, R3
0x627A	0x6810    LDR	R0, [R2, #0]
0x627C	0xF7FCFDB8  BL	_Mmc_Multi_Read_Start+0
;__Lib_MmcFat16.c, 592 :: 		
0x6280	0x2301    MOVS	R3, #1
0x6282	0x4A32    LDR	R2, [PC, #200]
0x6284	0x7013    STRB	R3, [R2, #0]
;__Lib_MmcFat16.c, 593 :: 		
0x6286	0x4830    LDR	R0, [PC, #192]
0x6288	0xF7FCFDBE  BL	_Mmc_Multi_Read_Sector+0
;__Lib_MmcFat16.c, 594 :: 		
0x628C	0x2200    MOVS	R2, #0
0x628E	0xF8AD2004  STRH	R2, [SP, #4]
L___Lib_MmcFat16_stat86:
0x6292	0xF8BD3006  LDRH	R3, [SP, #6]
0x6296	0xF8BD2004  LDRH	R2, [SP, #4]
0x629A	0x429A    CMP	R2, R3
0x629C	0xD23B    BCS	L___Lib_MmcFat16_stat87
;__Lib_MmcFat16.c, 597 :: 		
0x629E	0x220B    MOVS	R2, #11
0x62A0	0xB212    SXTH	R2, R2
0x62A2	0x9904    LDR	R1, [SP, #16]
0x62A4	0x9802    LDR	R0, [SP, #8]
0x62A6	0xF7FCFDBB  BL	_memcmp+0
0x62AA	0xB9F0    CBNZ	R0, L___Lib_MmcFat16_stat89
;__Lib_MmcFat16.c, 599 :: 		
0x62AC	0xF7FCFD94  BL	_Mmc_Multi_Read_Stop+0
0x62B0	0xB128    CBZ	R0, L___Lib_MmcFat16_stat90
;__Lib_MmcFat16.c, 601 :: 		
0x62B2	0x2310    MOVS	R3, #16
0x62B4	0x4A26    LDR	R2, [PC, #152]
0x62B6	0x7013    STRB	R3, [R2, #0]
;__Lib_MmcFat16.c, 602 :: 		
0x62B8	0x20FF    MOVS	R0, #-1
0x62BA	0xB240    SXTB	R0, R0
0x62BC	0xE036    B	L_end_stat
;__Lib_MmcFat16.c, 603 :: 		
L___Lib_MmcFat16_stat90:
;__Lib_MmcFat16.c, 605 :: 		
0x62BE	0x9A05    LDR	R2, [SP, #20]
0x62C0	0xB182    CBZ	R2, L___Lib_MmcFat16_stat91
;__Lib_MmcFat16.c, 608 :: 		
0x62C2	0x9905    LDR	R1, [SP, #20]
0x62C4	0x9802    LDR	R0, [SP, #8]
0x62C6	0xF7FCFBD3  BL	__Lib_MmcFat16_f16_DirentToDir+0
;__Lib_MmcFat16.c, 609 :: 		
0x62CA	0x9A05    LDR	R2, [SP, #20]
0x62CC	0xF2020324  ADDW	R3, R2, #36
0x62D0	0x9A03    LDR	R2, [SP, #12]
0x62D2	0x601A    STR	R2, [R3, #0]
;__Lib_MmcFat16.c, 610 :: 		
0x62D4	0x9A05    LDR	R2, [SP, #20]
0x62D6	0xF2020428  ADDW	R4, R2, #40
0x62DA	0x9B02    LDR	R3, [SP, #8]
0x62DC	0x4A1A    LDR	R2, [PC, #104]
0x62DE	0x1A9A    SUB	R2, R3, R2
0x62E0	0x0952    LSRS	R2, R2, #5
0x62E2	0x8022    STRH	R2, [R4, #0]
;__Lib_MmcFat16.c, 611 :: 		
L___Lib_MmcFat16_stat91:
;__Lib_MmcFat16.c, 612 :: 		
0x62E4	0x2000    MOVS	R0, #0
0x62E6	0xB240    SXTB	R0, R0
0x62E8	0xE020    B	L_end_stat
;__Lib_MmcFat16.c, 613 :: 		
L___Lib_MmcFat16_stat89:
;__Lib_MmcFat16.c, 614 :: 		
0x62EA	0x9A02    LDR	R2, [SP, #8]
0x62EC	0xF2020320  ADDW	R3, R2, #32
0x62F0	0x9302    STR	R3, [SP, #8]
;__Lib_MmcFat16.c, 615 :: 		
0x62F2	0x4A18    LDR	R2, [PC, #96]
0x62F4	0x6812    LDR	R2, [R2, #0]
0x62F6	0x4293    CMP	R3, R2
0x62F8	0xD107    BNE	L___Lib_MmcFat16_stat92
;__Lib_MmcFat16.c, 617 :: 		
0x62FA	0x9A03    LDR	R2, [SP, #12]
0x62FC	0x1C52    ADDS	R2, R2, #1
0x62FE	0x9203    STR	R2, [SP, #12]
;__Lib_MmcFat16.c, 618 :: 		
0x6300	0x4A11    LDR	R2, [PC, #68]
0x6302	0x9202    STR	R2, [SP, #8]
;__Lib_MmcFat16.c, 619 :: 		
0x6304	0x4810    LDR	R0, [PC, #64]
0x6306	0xF7FCFD7F  BL	_Mmc_Multi_Read_Sector+0
;__Lib_MmcFat16.c, 620 :: 		
L___Lib_MmcFat16_stat92:
;__Lib_MmcFat16.c, 594 :: 		
0x630A	0xF8BD2004  LDRH	R2, [SP, #4]
0x630E	0x1C52    ADDS	R2, R2, #1
0x6310	0xF8AD2004  STRH	R2, [SP, #4]
;__Lib_MmcFat16.c, 621 :: 		
0x6314	0xE7BD    B	L___Lib_MmcFat16_stat86
L___Lib_MmcFat16_stat87:
;__Lib_MmcFat16.c, 623 :: 		
0x6316	0xF7FCFD5F  BL	_Mmc_Multi_Read_Stop+0
0x631A	0xB128    CBZ	R0, L___Lib_MmcFat16_stat93
;__Lib_MmcFat16.c, 625 :: 		
0x631C	0x2310    MOVS	R3, #16
0x631E	0x4A0C    LDR	R2, [PC, #48]
0x6320	0x7013    STRB	R3, [R2, #0]
;__Lib_MmcFat16.c, 626 :: 		
0x6322	0x20FF    MOVS	R0, #-1
0x6324	0xB240    SXTB	R0, R0
0x6326	0xE001    B	L_end_stat
;__Lib_MmcFat16.c, 627 :: 		
L___Lib_MmcFat16_stat93:
;__Lib_MmcFat16.c, 630 :: 		
0x6328	0x20FF    MOVS	R0, #-1
0x632A	0xB240    SXTB	R0, R0
;__Lib_MmcFat16.c, 631 :: 		
L_end_stat:
0x632C	0xF8DDE000  LDR	LR, [SP, #0]
0x6330	0xB006    ADD	SP, SP, #24
0x6332	0x4770    BX	LR
0x6334	0x2AD02000  	__Lib_MmcFat16_f16_boot+16
0x6338	0x2AD82000  	__Lib_MmcFat16_f16_currentDir+0
0x633C	0x2AC82000  	__Lib_MmcFat16_f16_boot+8
0x6340	0x2A922000  	__Lib_MmcFat16_f16_dirEntryPerSect+0
0x6344	0x2AC22000  	__Lib_MmcFat16_f16_boot+2
0x6348	0x2ADC2000  	_f16_sector+0
0x634C	0x2CDC2000  	_f16_sector+512
0x6350	0x2A912000  	___f16_errno+0
0x6354	0x2CE02000  	__Lib_MmcFat16_f16_sectBuffEnd+0
; end of __Lib_MmcFat16_stat
__Lib_MmcFat16_f16_normalize:
;__Lib_MmcFat16.c, 87 :: 		
; s start address is: 0 (R0)
0x25E0	0xB087    SUB	SP, SP, #28
0x25E2	0xF8CDE000  STR	LR, [SP, #0]
; s end address is: 0 (R0)
; s start address is: 0 (R0)
;__Lib_MmcFat16.c, 93 :: 		
0x25E6	0xA904    ADD	R1, SP, #16
; ptr start address is: 20 (R5)
0x25E8	0x460D    MOV	R5, R1
;__Lib_MmcFat16.c, 94 :: 		
; olds start address is: 16 (R4)
0x25EA	0x4604    MOV	R4, R0
;__Lib_MmcFat16.c, 95 :: 		
0x25EC	0x9401    STR	R4, [SP, #4]
0x25EE	0x9502    STR	R5, [SP, #8]
0x25F0	0x9003    STR	R0, [SP, #12]
0x25F2	0x220B    MOVS	R2, #11
0x25F4	0xB212    SXTH	R2, R2
0x25F6	0x4608    MOV	R0, R1
0x25F8	0x2120    MOVS	R1, #32
0x25FA	0xF003FB61  BL	_memset+0
; olds end address is: 16 (R4)
; ptr end address is: 20 (R5)
; s end address is: 0 (R0)
0x25FE	0x9803    LDR	R0, [SP, #12]
0x2600	0x9D02    LDR	R5, [SP, #8]
0x2602	0x9C01    LDR	R4, [SP, #4]
0x2604	0x4606    MOV	R6, R0
;__Lib_MmcFat16.c, 96 :: 		
L___Lib_MmcFat16_f16_normalize0:
; olds start address is: 16 (R4)
; ptr start address is: 20 (R5)
; s start address is: 24 (R6)
0x2606	0x7831    LDRB	R1, [R6, #0]
0x2608	0xB131    CBZ	R1, L___Lib_MmcFat16_f16_normalize408
0x260A	0x7831    LDRB	R1, [R6, #0]
0x260C	0xB2C8    UXTB	R0, R1
0x260E	0xF7FEFA17  BL	_isspace+0
0x2612	0xB108    CBZ	R0, L___Lib_MmcFat16_f16_normalize407
L___Lib_MmcFat16_f16_normalize406:
;__Lib_MmcFat16.c, 98 :: 		
0x2614	0x1C76    ADDS	R6, R6, #1
;__Lib_MmcFat16.c, 99 :: 		
0x2616	0xE7F6    B	L___Lib_MmcFat16_f16_normalize0
;__Lib_MmcFat16.c, 96 :: 		
L___Lib_MmcFat16_f16_normalize408:
L___Lib_MmcFat16_f16_normalize407:
;__Lib_MmcFat16.c, 100 :: 		
0x2618	0x4923    LDR	R1, [PC, #140]
0x261A	0x4630    MOV	R0, R6
0x261C	0xF7FEF9FC  BL	_strcmp+0
0x2620	0xB938    CBNZ	R0, L___Lib_MmcFat16_f16_normalize4
; ptr end address is: 20 (R5)
; s end address is: 24 (R6)
;__Lib_MmcFat16.c, 102 :: 		
0x2622	0xAA04    ADD	R2, SP, #16
0x2624	0x212E    MOVS	R1, #46
0x2626	0x7011    STRB	R1, [R2, #0]
;__Lib_MmcFat16.c, 103 :: 		
0x2628	0x1C52    ADDS	R2, R2, #1
0x262A	0x212E    MOVS	R1, #46
0x262C	0x7011    STRB	R1, [R2, #0]
;__Lib_MmcFat16.c, 104 :: 		
0x262E	0x4620    MOV	R0, R4
0x2630	0xE030    B	L___Lib_MmcFat16_f16_normalize5
L___Lib_MmcFat16_f16_normalize4:
;__Lib_MmcFat16.c, 105 :: 		
; s start address is: 24 (R6)
; ptr start address is: 20 (R5)
0x2632	0x491E    LDR	R1, [PC, #120]
0x2634	0x4630    MOV	R0, R6
0x2636	0xF7FEF9EF  BL	_strcmp+0
0x263A	0xB920    CBNZ	R0, L___Lib_MmcFat16_f16_normalize6
; ptr end address is: 20 (R5)
; s end address is: 24 (R6)
;__Lib_MmcFat16.c, 107 :: 		
0x263C	0xAA04    ADD	R2, SP, #16
0x263E	0x212E    MOVS	R1, #46
0x2640	0x7011    STRB	R1, [R2, #0]
;__Lib_MmcFat16.c, 108 :: 		
0x2642	0x4620    MOV	R0, R4
0x2644	0xE026    B	L___Lib_MmcFat16_f16_normalize7
L___Lib_MmcFat16_f16_normalize6:
;__Lib_MmcFat16.c, 111 :: 		
; s start address is: 24 (R6)
; ptr start address is: 20 (R5)
0x2646	0x4622    MOV	R2, R4
; ptr end address is: 20 (R5)
; s end address is: 24 (R6)
0x2648	0x462C    MOV	R4, R5
0x264A	0x4633    MOV	R3, R6
L___Lib_MmcFat16_f16_normalize8:
; olds end address is: 16 (R4)
; s start address is: 12 (R3)
; ptr start address is: 16 (R4)
; olds start address is: 8 (R2)
0x264C	0x7819    LDRB	R1, [R3, #0]
0x264E	0xB171    CBZ	R1, L___Lib_MmcFat16_f16_normalize411
0x2650	0x7819    LDRB	R1, [R3, #0]
0x2652	0xB2C8    UXTB	R0, R1
0x2654	0xF7FEF9F4  BL	_isspace+0
0x2658	0xB948    CBNZ	R0, L___Lib_MmcFat16_f16_normalize410
0x265A	0x7819    LDRB	R1, [R3, #0]
0x265C	0x292E    CMP	R1, #46
0x265E	0xD006    BEQ	L___Lib_MmcFat16_f16_normalize409
L___Lib_MmcFat16_f16_normalize405:
;__Lib_MmcFat16.c, 113 :: 		
0x2660	0x7819    LDRB	R1, [R3, #0]
0x2662	0x7021    STRB	R1, [R4, #0]
0x2664	0x1C61    ADDS	R1, R4, #1
; ptr end address is: 16 (R4)
; ptr start address is: 0 (R0)
0x2666	0x4608    MOV	R0, R1
0x2668	0x1C5B    ADDS	R3, R3, #1
;__Lib_MmcFat16.c, 114 :: 		
; ptr end address is: 0 (R0)
0x266A	0x4604    MOV	R4, R0
0x266C	0xE7EE    B	L___Lib_MmcFat16_f16_normalize8
;__Lib_MmcFat16.c, 111 :: 		
L___Lib_MmcFat16_f16_normalize411:
L___Lib_MmcFat16_f16_normalize410:
L___Lib_MmcFat16_f16_normalize409:
;__Lib_MmcFat16.c, 115 :: 		
0x266E	0x7819    LDRB	R1, [R3, #0]
0x2670	0x292E    CMP	R1, #46
0x2672	0xD101    BNE	L___Lib_MmcFat16_f16_normalize412
;__Lib_MmcFat16.c, 117 :: 		
0x2674	0x1C58    ADDS	R0, R3, #1
; s end address is: 12 (R3)
; s start address is: 0 (R0)
; s end address is: 0 (R0)
;__Lib_MmcFat16.c, 118 :: 		
0x2676	0xE000    B	L___Lib_MmcFat16_f16_normalize12
L___Lib_MmcFat16_f16_normalize412:
;__Lib_MmcFat16.c, 115 :: 		
0x2678	0x4618    MOV	R0, R3
;__Lib_MmcFat16.c, 118 :: 		
L___Lib_MmcFat16_f16_normalize12:
;__Lib_MmcFat16.c, 119 :: 		
; s start address is: 0 (R0)
0x267A	0xAB04    ADD	R3, SP, #16
0x267C	0x3308    ADDS	R3, #8
; ptr start address is: 12 (R3)
; olds end address is: 8 (R2)
; s end address is: 0 (R0)
; ptr end address is: 12 (R3)
0x267E	0x9001    STR	R0, [SP, #4]
0x2680	0x4610    MOV	R0, R2
0x2682	0x9A01    LDR	R2, [SP, #4]
;__Lib_MmcFat16.c, 120 :: 		
L___Lib_MmcFat16_f16_normalize13:
; ptr start address is: 12 (R3)
; s start address is: 8 (R2)
; olds start address is: 0 (R0)
0x2684	0x7811    LDRB	R1, [R2, #0]
0x2686	0x2920    CMP	R1, #32
0x2688	0xD904    BLS	L___Lib_MmcFat16_f16_normalize14
;__Lib_MmcFat16.c, 122 :: 		
0x268A	0x7811    LDRB	R1, [R2, #0]
0x268C	0x7019    STRB	R1, [R3, #0]
0x268E	0x1C5B    ADDS	R3, R3, #1
0x2690	0x1C52    ADDS	R2, R2, #1
;__Lib_MmcFat16.c, 123 :: 		
; ptr end address is: 12 (R3)
; s end address is: 8 (R2)
0x2692	0xE7F7    B	L___Lib_MmcFat16_f16_normalize13
L___Lib_MmcFat16_f16_normalize14:
;__Lib_MmcFat16.c, 124 :: 		
L___Lib_MmcFat16_f16_normalize7:
; olds end address is: 0 (R0)
; olds start address is: 0 (R0)
; olds end address is: 0 (R0)
L___Lib_MmcFat16_f16_normalize5:
;__Lib_MmcFat16.c, 126 :: 		
; olds start address is: 0 (R0)
0x2694	0xA904    ADD	R1, SP, #16
0x2696	0x220B    MOVS	R2, #11
0x2698	0xB212    SXTH	R2, R2
; olds end address is: 0 (R0)
0x269A	0xF003FFBB  BL	_memcpy+0
;__Lib_MmcFat16.c, 127 :: 		
L_end_f16_normalize:
0x269E	0xF8DDE000  LDR	LR, [SP, #0]
0x26A2	0xB007    ADD	SP, SP, #28
0x26A4	0x4770    BX	LR
0x26A6	0xBF00    NOP
0x26A8	0x02F22000  	?lstr1___Lib_MmcFat16+0
0x26AC	0x02F52000  	?lstr2___Lib_MmcFat16+0
; end of __Lib_MmcFat16_f16_normalize
_isspace:
;__Lib_CType.c, 35 :: 		
; character start address is: 0 (R0)
0x0A40	0xB081    SUB	SP, SP, #4
; character end address is: 0 (R0)
; character start address is: 0 (R0)
;__Lib_CType.c, 36 :: 		
0x0A42	0x2820    CMP	R0, #32
0x0A44	0xD006    BEQ	L_isspace15
0x0A46	0x280D    CMP	R0, #13
0x0A48	0xD802    BHI	L__isspace38
0x0A4A	0x2809    CMP	R0, #9
0x0A4C	0xD300    BCC	L__isspace37
; character end address is: 0 (R0)
0x0A4E	0xE001    B	L_isspace15
L__isspace38:
L__isspace37:
0x0A50	0x2100    MOVS	R1, #0
0x0A52	0xE000    B	L_isspace14
L_isspace15:
0x0A54	0x2101    MOVS	R1, #1
L_isspace14:
0x0A56	0xB2C8    UXTB	R0, R1
;__Lib_CType.c, 37 :: 		
L_end_isspace:
0x0A58	0xB001    ADD	SP, SP, #4
0x0A5A	0x4770    BX	LR
; end of _isspace
_strcmp:
;__Lib_CString.c, 122 :: 		
; s2 start address is: 4 (R1)
; s1 start address is: 0 (R0)
0x0A18	0xB081    SUB	SP, SP, #4
; s2 end address is: 4 (R1)
; s1 end address is: 0 (R0)
; s1 start address is: 0 (R0)
; s2 start address is: 4 (R1)
0x0A1A	0x9100    STR	R1, [SP, #0]
; s1 end address is: 0 (R0)
; s2 end address is: 4 (R1)
0x0A1C	0x4601    MOV	R1, R0
0x0A1E	0x9800    LDR	R0, [SP, #0]
;__Lib_CString.c, 124 :: 		
L_strcmp30:
; s2 start address is: 0 (R0)
; s1 start address is: 4 (R1)
0x0A20	0x780A    LDRB	R2, [R1, #0]
0x0A22	0xB132    CBZ	R2, L__strcmp89
0x0A24	0x780B    LDRB	R3, [R1, #0]
0x0A26	0x7802    LDRB	R2, [R0, #0]
0x0A28	0x4293    CMP	R3, R2
0x0A2A	0xD102    BNE	L__strcmp88
L__strcmp87:
;__Lib_CString.c, 125 :: 		
0x0A2C	0x1C49    ADDS	R1, R1, #1
0x0A2E	0x1C40    ADDS	R0, R0, #1
0x0A30	0xE7F6    B	L_strcmp30
;__Lib_CString.c, 124 :: 		
L__strcmp89:
L__strcmp88:
;__Lib_CString.c, 127 :: 		
0x0A32	0x780B    LDRB	R3, [R1, #0]
; s1 end address is: 4 (R1)
0x0A34	0x7802    LDRB	R2, [R0, #0]
; s2 end address is: 0 (R0)
0x0A36	0x1A9A    SUB	R2, R3, R2
0x0A38	0xB210    SXTH	R0, R2
;__Lib_CString.c, 128 :: 		
L_end_strcmp:
0x0A3A	0xB001    ADD	SP, SP, #4
0x0A3C	0x4770    BX	LR
; end of _strcmp
_Mmc_Multi_Read_Start:
;__Lib_Mmc_SDIO.c, 121 :: 		
; sector start address is: 0 (R0)
0x2DF0	0xB081    SUB	SP, SP, #4
0x2DF2	0xF8CDE000  STR	LR, [SP, #0]
; sector end address is: 0 (R0)
; sector start address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 122 :: 		
; sector end address is: 0 (R0)
0x2DF6	0x4C03    LDR	R4, [PC, #12]
0x2DF8	0x6824    LDR	R4, [R4, #0]
0x2DFA	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 123 :: 		
L_end_Mmc_Multi_Read_Start:
0x2DFC	0xF8DDE000  LDR	LR, [SP, #0]
0x2E00	0xB001    ADD	SP, SP, #4
0x2E02	0x4770    BX	LR
0x2E04	0x030C2000  	__Lib_Mmc_SDIO_Mmc_Multi_Read_Start_Ptr+0
; end of _Mmc_Multi_Read_Start
__Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SPI:
;__Lib_Mmc_SDIO.c, 610 :: 		
; sector start address is: 0 (R0)
0x0D20	0xB081    SUB	SP, SP, #4
0x0D22	0xF8CDE000  STR	LR, [SP, #0]
0x0D26	0x4602    MOV	R2, R0
; sector end address is: 0 (R0)
; sector start address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 614 :: 		
0x0D28	0xF002FEA0  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 616 :: 		
0x0D2C	0x490A    LDR	R1, [PC, #40]
0x0D2E	0x7809    LDRB	R1, [R1, #0]
0x0D30	0x2904    CMP	R1, #4
0x0D32	0xD101    BNE	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SPI63
;__Lib_Mmc_SDIO.c, 617 :: 		
; byte_start start address is: 0 (R0)
0x0D34	0x4610    MOV	R0, R2
; sector end address is: 8 (R2)
; byte_start end address is: 0 (R0)
0x0D36	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SPI64
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SPI63:
;__Lib_Mmc_SDIO.c, 619 :: 		
; sector start address is: 8 (R2)
0x0D38	0x0250    LSLS	R0, R2, #9
; sector end address is: 8 (R2)
; byte_start start address is: 0 (R0)
; byte_start end address is: 0 (R0)
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SPI64:
;__Lib_Mmc_SDIO.c, 622 :: 		
; byte_start start address is: 0 (R0)
0x0D3A	0x22FF    MOVS	R2, #255
0x0D3C	0x4601    MOV	R1, R0
; byte_start end address is: 0 (R0)
0x0D3E	0x2012    MOVS	R0, #18
0x0D40	0xF002FC6E  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
;__Lib_Mmc_SDIO.c, 623 :: 		
0x0D44	0xB118    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SPI65
;__Lib_Mmc_SDIO.c, 625 :: 		
0x0D46	0xF002FE5D  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 626 :: 		
0x0D4A	0x2001    MOVS	R0, #1
0x0D4C	0xE000    B	L_end_Mmc_Multi_Read_Start_SPI
;__Lib_Mmc_SDIO.c, 627 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SPI65:
;__Lib_Mmc_SDIO.c, 628 :: 		
0x0D4E	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 629 :: 		
L_end_Mmc_Multi_Read_Start_SPI:
0x0D50	0xF8DDE000  LDR	LR, [SP, #0]
0x0D54	0xB001    ADD	SP, SP, #4
0x0D56	0x4770    BX	LR
0x0D58	0x02F72000  	__Lib_Mmc_SDIO_cardType+0
; end of __Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SPI
__Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SPI:
;__Lib_Mmc_SDIO.c, 691 :: 		
; sector start address is: 0 (R0)
0x192C	0xB081    SUB	SP, SP, #4
0x192E	0xF8CDE000  STR	LR, [SP, #0]
0x1932	0x4602    MOV	R2, R0
; sector end address is: 0 (R0)
; sector start address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 695 :: 		
0x1934	0xF002F89A  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 697 :: 		
0x1938	0x490E    LDR	R1, [PC, #56]
0x193A	0x7809    LDRB	R1, [R1, #0]
0x193C	0x2904    CMP	R1, #4
0x193E	0xD101    BNE	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SPI78
;__Lib_Mmc_SDIO.c, 698 :: 		
; byte_start start address is: 0 (R0)
0x1940	0x4610    MOV	R0, R2
; sector end address is: 8 (R2)
; byte_start end address is: 0 (R0)
0x1942	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SPI79
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SPI78:
;__Lib_Mmc_SDIO.c, 700 :: 		
; sector start address is: 8 (R2)
0x1944	0x0250    LSLS	R0, R2, #9
; sector end address is: 8 (R2)
; byte_start start address is: 0 (R0)
; byte_start end address is: 0 (R0)
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SPI79:
;__Lib_Mmc_SDIO.c, 703 :: 		
; byte_start start address is: 0 (R0)
0x1946	0x22FF    MOVS	R2, #255
0x1948	0x4601    MOV	R1, R0
; byte_start end address is: 0 (R0)
0x194A	0x2019    MOVS	R0, #25
0x194C	0xF001FE68  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
0x1950	0xB118    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SPI80
;__Lib_Mmc_SDIO.c, 705 :: 		
0x1952	0xF002F857  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 706 :: 		
0x1956	0x2001    MOVS	R0, #1
0x1958	0xE008    B	L_end_Mmc_Multi_Write_Start_SPI
;__Lib_Mmc_SDIO.c, 707 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SPI80:
;__Lib_Mmc_SDIO.c, 711 :: 		
0x195A	0x20FF    MOVS	R0, #255
0x195C	0x4C06    LDR	R4, [PC, #24]
0x195E	0x6824    LDR	R4, [R4, #0]
0x1960	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 712 :: 		
0x1962	0x20FF    MOVS	R0, #255
0x1964	0x4C04    LDR	R4, [PC, #16]
0x1966	0x6824    LDR	R4, [R4, #0]
0x1968	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 713 :: 		
0x196A	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 715 :: 		
L_end_Mmc_Multi_Write_Start_SPI:
0x196C	0xF8DDE000  LDR	LR, [SP, #0]
0x1970	0xB001    ADD	SP, SP, #4
0x1972	0x4770    BX	LR
0x1974	0x02F72000  	__Lib_Mmc_SDIO_cardType+0
0x1978	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SPI
__Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO:
;__Lib_Mmc_SDIO.c, 2431 :: 		
; sector start address is: 0 (R0)
0x17D0	0xB081    SUB	SP, SP, #4
0x17D2	0xF8CDE000  STR	LR, [SP, #0]
0x17D6	0x4604    MOV	R4, R0
; sector end address is: 0 (R0)
; sector start address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2433 :: 		
;__Lib_Mmc_SDIO.c, 2438 :: 		
0x17D8	0x2001    MOVS	R0, #1
0x17DA	0xF002F8CB  BL	_SDIO_StartSDIOReadWait+0
;__Lib_Mmc_SDIO.c, 2441 :: 		
0x17DE	0x2001    MOVS	R0, #1
0x17E0	0xF002F908  BL	_SDIO_StopSDIOReadWait+0
;__Lib_Mmc_SDIO.c, 2444 :: 		
0x17E4	0x2001    MOVS	R0, #1
0x17E6	0xF7FEFEDD  BL	_SDIO_SetSDIOReadWaitMode+0
;__Lib_Mmc_SDIO.c, 2447 :: 		
0x17EA	0x2001    MOVS	R0, #1
0x17EC	0xF001FFF2  BL	_SDIO_SetSDIOOperation+0
;__Lib_Mmc_SDIO.c, 2450 :: 		
0x17F0	0x4A40    LDR	R2, [PC, #256]
0x17F2	0x4941    LDR	R1, [PC, #260]
0x17F4	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2451 :: 		
0x17F6	0x2200    MOVS	R2, #0
0x17F8	0x4940    LDR	R1, [PC, #256]
0x17FA	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2452 :: 		
0x17FC	0xF04F0200  MOV	R2, #0
0x1800	0x493F    LDR	R1, [PC, #252]
0x1802	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2453 :: 		
0x1804	0xF04F0200  MOV	R2, #0
0x1808	0x493E    LDR	R1, [PC, #248]
0x180A	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2454 :: 		
0x180C	0xF04F0200  MOV	R2, #0
0x1810	0x493D    LDR	R1, [PC, #244]
0x1812	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2455 :: 		
0x1814	0xF04F0200  MOV	R2, #0
0x1818	0x493C    LDR	R1, [PC, #240]
0x181A	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2456 :: 		
0x181C	0x4836    LDR	R0, [PC, #216]
0x181E	0xF7FEFD63  BL	_SDIO_DataConfig+0
;__Lib_Mmc_SDIO.c, 2457 :: 		
0x1822	0x2000    MOVS	R0, #0
0x1824	0xF7FFFC30  BL	_SDIO_DMACmd+0
;__Lib_Mmc_SDIO.c, 2459 :: 		
0x1828	0x4939    LDR	R1, [PC, #228]
0x182A	0x6809    LDR	R1, [R1, #0]
0x182C	0xF0017100  AND	R1, R1, #33554432
0x1830	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO308
; sector end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2461 :: 		
0x1832	0x2001    MOVS	R0, #1
0x1834	0xE05A    B	L_end_Mmc_Multi_Read_Start_SDIO
;__Lib_Mmc_SDIO.c, 2462 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO308:
;__Lib_Mmc_SDIO.c, 2464 :: 		
; sector start address is: 16 (R4)
0x1836	0x4937    LDR	R1, [PC, #220]
0x1838	0x6809    LDR	R1, [R1, #0]
0x183A	0x2902    CMP	R1, #2
0x183C	0xD102    BNE	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO309
;__Lib_Mmc_SDIO.c, 2466 :: 		
; addr start address is: 0 (R0)
0x183E	0x4620    MOV	R0, R4
; sector end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2467 :: 		
0x1840	0x4604    MOV	R4, R0
; addr end address is: 0 (R0)
0x1842	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO310
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO309:
;__Lib_Mmc_SDIO.c, 2469 :: 		
; sector start address is: 16 (R4)
0x1844	0x0264    LSLS	R4, R4, #9
; sector end address is: 16 (R4)
; addr start address is: 16 (R4)
; addr end address is: 16 (R4)
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO310:
;__Lib_Mmc_SDIO.c, 2472 :: 		
; addr start address is: 16 (R4)
0x1846	0xF2402200  MOVW	R2, #512
0x184A	0x4933    LDR	R1, [PC, #204]
0x184C	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2473 :: 		
0x184E	0x2210    MOVS	R2, #16
0x1850	0x4932    LDR	R1, [PC, #200]
0x1852	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2474 :: 		
0x1854	0xF04F0240  MOV	R2, #64
0x1858	0x4931    LDR	R1, [PC, #196]
0x185A	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2475 :: 		
0x185C	0xF04F0200  MOV	R2, #0
0x1860	0x4930    LDR	R1, [PC, #192]
0x1862	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2476 :: 		
0x1864	0xF44F6280  MOV	R2, #1024
0x1868	0x492F    LDR	R1, [PC, #188]
0x186A	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2477 :: 		
0x186C	0x482A    LDR	R0, [PC, #168]
0x186E	0xF7FFFA09  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2479 :: 		
0x1872	0x2010    MOVS	R0, #16
0x1874	0xF7FFF834  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
0x1878	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO311
; addr end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2481 :: 		
0x187A	0x2001    MOVS	R0, #1
0x187C	0xE036    B	L_end_Mmc_Multi_Read_Start_SDIO
;__Lib_Mmc_SDIO.c, 2482 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO311:
;__Lib_Mmc_SDIO.c, 2485 :: 		
; addr start address is: 16 (R4)
0x187E	0x4926    LDR	R1, [PC, #152]
0x1880	0x600C    STR	R4, [R1, #0]
; addr end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2486 :: 		
0x1882	0x2212    MOVS	R2, #18
0x1884	0x4925    LDR	R1, [PC, #148]
0x1886	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2487 :: 		
0x1888	0xF04F0240  MOV	R2, #64
0x188C	0x4924    LDR	R1, [PC, #144]
0x188E	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2488 :: 		
0x1890	0xF04F0200  MOV	R2, #0
0x1894	0x4923    LDR	R1, [PC, #140]
0x1896	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2489 :: 		
0x1898	0xF44F6280  MOV	R2, #1024
0x189C	0x4922    LDR	R1, [PC, #136]
0x189E	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2490 :: 		
0x18A0	0x481D    LDR	R0, [PC, #116]
0x18A2	0xF7FFF9EF  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2492 :: 		
0x18A6	0x2012    MOVS	R0, #18
0x18A8	0xF7FFF81A  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
0x18AC	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO312
;__Lib_Mmc_SDIO.c, 2494 :: 		
0x18AE	0x2001    MOVS	R0, #1
0x18B0	0xE01C    B	L_end_Mmc_Multi_Read_Start_SDIO
;__Lib_Mmc_SDIO.c, 2495 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO312:
;__Lib_Mmc_SDIO.c, 2499 :: 		
0x18B2	0x2000    MOVS	R0, #0
0x18B4	0xF002F89E  BL	_SDIO_StopSDIOReadWait+0
;__Lib_Mmc_SDIO.c, 2501 :: 		
0x18B8	0x4A0E    LDR	R2, [PC, #56]
0x18BA	0x490F    LDR	R1, [PC, #60]
0x18BC	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2502 :: 		
0x18BE	0xF06F427E  MVN	R2, #-33554432
0x18C2	0x490E    LDR	R1, [PC, #56]
0x18C4	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2503 :: 		
0x18C6	0x2290    MOVS	R2, #144
0x18C8	0x490D    LDR	R1, [PC, #52]
0x18CA	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2504 :: 		
0x18CC	0xF04F0202  MOV	R2, #2
0x18D0	0x490C    LDR	R1, [PC, #48]
0x18D2	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2505 :: 		
0x18D4	0xF04F0200  MOV	R2, #0
0x18D8	0x490B    LDR	R1, [PC, #44]
0x18DA	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2506 :: 		
0x18DC	0xF04F0201  MOV	R2, #1
0x18E0	0x490A    LDR	R1, [PC, #40]
0x18E2	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2507 :: 		
0x18E4	0x4804    LDR	R0, [PC, #16]
0x18E6	0xF7FEFCFF  BL	_SDIO_DataConfig+0
;__Lib_Mmc_SDIO.c, 2509 :: 		
0x18EA	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 2510 :: 		
L_end_Mmc_Multi_Read_Start_SDIO:
0x18EC	0xF8DDE000  LDR	LR, [SP, #0]
0x18F0	0xB001    ADD	SP, SP, #4
0x18F2	0x4770    BX	LR
0x18F4	0xFFFF000F  	#1048575
0x18F8	0x2D642000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+0
0x18FC	0x2D682000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+4
0x1900	0x2D6C2000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+8
0x1904	0x2D702000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+12
0x1908	0x2D742000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+16
0x190C	0x2D782000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+20
0x1910	0x2C144001  	SDIO_RESP1+0
0x1914	0x03242000  	__Lib_Mmc_SDIO_CardTypeSdio+0
0x1918	0x2D7C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+0
0x191C	0x2D802000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+4
0x1920	0x2D842000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+8
0x1924	0x2D882000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+12
0x1928	0x2D8C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+16
; end of __Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO
_SDIO_SetSDIOReadWaitMode:
;__Lib_SDIO.c, 873 :: 		
; readWaitMode start address is: 0 (R0)
0x05A4	0xB081    SUB	SP, SP, #4
; readWaitMode end address is: 0 (R0)
; readWaitMode start address is: 0 (R0)
;__Lib_SDIO.c, 875 :: 		
0x05A6	0x4902    LDR	R1, [PC, #8]
0x05A8	0x6008    STR	R0, [R1, #0]
; readWaitMode end address is: 0 (R0)
;__Lib_SDIO.c, 877 :: 		
L_end_SDIO_SetSDIOReadWaitMode:
0x05AA	0xB001    ADD	SP, SP, #4
0x05AC	0x4770    BX	LR
0x05AE	0xBF00    NOP
0x05B0	0x85A84225  	SDIO_DCTRL+0
; end of _SDIO_SetSDIOReadWaitMode
__Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO:
;__Lib_Mmc_SDIO.c, 2626 :: 		
; sector start address is: 0 (R0)
0x19D4	0xB081    SUB	SP, SP, #4
0x19D6	0xF8CDE000  STR	LR, [SP, #0]
0x19DA	0x4604    MOV	R4, R0
; sector end address is: 0 (R0)
; sector start address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2627 :: 		
;__Lib_Mmc_SDIO.c, 2630 :: 		
0x19DC	0x4A4F    LDR	R2, [PC, #316]
0x19DE	0x4950    LDR	R1, [PC, #320]
0x19E0	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2631 :: 		
0x19E2	0x2200    MOVS	R2, #0
0x19E4	0x494F    LDR	R1, [PC, #316]
0x19E6	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2632 :: 		
0x19E8	0xF04F0200  MOV	R2, #0
0x19EC	0x494E    LDR	R1, [PC, #312]
0x19EE	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2633 :: 		
0x19F0	0xF04F0200  MOV	R2, #0
0x19F4	0x494D    LDR	R1, [PC, #308]
0x19F6	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2634 :: 		
0x19F8	0xF04F0200  MOV	R2, #0
0x19FC	0x494C    LDR	R1, [PC, #304]
0x19FE	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2635 :: 		
0x1A00	0xF04F0200  MOV	R2, #0
0x1A04	0x494B    LDR	R1, [PC, #300]
0x1A06	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2636 :: 		
0x1A08	0x4845    LDR	R0, [PC, #276]
0x1A0A	0xF7FEFC6D  BL	_SDIO_DataConfig+0
;__Lib_Mmc_SDIO.c, 2637 :: 		
0x1A0E	0x2000    MOVS	R0, #0
0x1A10	0xF7FFFB3A  BL	_SDIO_DMACmd+0
;__Lib_Mmc_SDIO.c, 2639 :: 		
0x1A14	0x4948    LDR	R1, [PC, #288]
0x1A16	0x6809    LDR	R1, [R1, #0]
0x1A18	0xF0017100  AND	R1, R1, #33554432
0x1A1C	0xB109    CBZ	R1, L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO336
; sector end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2642 :: 		
0x1A1E	0x2001    MOVS	R0, #1
0x1A20	0xE077    B	L_end_Mmc_Multi_Write_Start_SDIO
;__Lib_Mmc_SDIO.c, 2643 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO336:
;__Lib_Mmc_SDIO.c, 2645 :: 		
; sector start address is: 16 (R4)
0x1A22	0x4946    LDR	R1, [PC, #280]
0x1A24	0x6809    LDR	R1, [R1, #0]
0x1A26	0x2902    CMP	R1, #2
0x1A28	0xD102    BNE	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO337
;__Lib_Mmc_SDIO.c, 2647 :: 		
; addr start address is: 0 (R0)
0x1A2A	0x4620    MOV	R0, R4
; sector end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2648 :: 		
0x1A2C	0x4604    MOV	R4, R0
; addr end address is: 0 (R0)
0x1A2E	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO338
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO337:
;__Lib_Mmc_SDIO.c, 2650 :: 		
; sector start address is: 16 (R4)
0x1A30	0x0264    LSLS	R4, R4, #9
; sector end address is: 16 (R4)
; addr start address is: 16 (R4)
; addr end address is: 16 (R4)
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO338:
;__Lib_Mmc_SDIO.c, 2652 :: 		
; addr start address is: 16 (R4)
0x1A32	0xF2402200  MOVW	R2, #512
0x1A36	0x4942    LDR	R1, [PC, #264]
0x1A38	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2653 :: 		
0x1A3A	0x2210    MOVS	R2, #16
0x1A3C	0x4941    LDR	R1, [PC, #260]
0x1A3E	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2654 :: 		
0x1A40	0xF04F0240  MOV	R2, #64
0x1A44	0x4940    LDR	R1, [PC, #256]
0x1A46	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2655 :: 		
0x1A48	0xF04F0200  MOV	R2, #0
0x1A4C	0x493F    LDR	R1, [PC, #252]
0x1A4E	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2656 :: 		
0x1A50	0xF44F6280  MOV	R2, #1024
0x1A54	0x493E    LDR	R1, [PC, #248]
0x1A56	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2657 :: 		
0x1A58	0x4839    LDR	R0, [PC, #228]
0x1A5A	0xF7FFF913  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2659 :: 		
0x1A5E	0x2010    MOVS	R0, #16
0x1A60	0xF7FEFF3E  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
0x1A64	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO339
; addr end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2661 :: 		
0x1A66	0x2001    MOVS	R0, #1
0x1A68	0xE053    B	L_end_Mmc_Multi_Write_Start_SDIO
;__Lib_Mmc_SDIO.c, 2662 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO339:
;__Lib_Mmc_SDIO.c, 2666 :: 		
; addr start address is: 16 (R4)
0x1A6A	0x493A    LDR	R1, [PC, #232]
0x1A6C	0x6809    LDR	R1, [R1, #0]
0x1A6E	0x040A    LSLS	R2, R1, #16
0x1A70	0x4933    LDR	R1, [PC, #204]
0x1A72	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2667 :: 		
0x1A74	0x220D    MOVS	R2, #13
0x1A76	0x4933    LDR	R1, [PC, #204]
0x1A78	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2668 :: 		
0x1A7A	0xF04F0240  MOV	R2, #64
0x1A7E	0x4932    LDR	R1, [PC, #200]
0x1A80	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2669 :: 		
0x1A82	0xF04F0200  MOV	R2, #0
0x1A86	0x4931    LDR	R1, [PC, #196]
0x1A88	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2670 :: 		
0x1A8A	0xF44F6280  MOV	R2, #1024
0x1A8E	0x4930    LDR	R1, [PC, #192]
0x1A90	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2671 :: 		
0x1A92	0x482B    LDR	R0, [PC, #172]
0x1A94	0xF7FFF8F6  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2673 :: 		
0x1A98	0x200D    MOVS	R0, #13
0x1A9A	0xF7FEFF21  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
0x1A9E	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO340
; addr end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2675 :: 		
0x1AA0	0x2001    MOVS	R0, #1
0x1AA2	0xE036    B	L_end_Mmc_Multi_Write_Start_SDIO
;__Lib_Mmc_SDIO.c, 2676 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO340:
;__Lib_Mmc_SDIO.c, 2707 :: 		
; addr start address is: 16 (R4)
0x1AA4	0x4926    LDR	R1, [PC, #152]
0x1AA6	0x600C    STR	R4, [R1, #0]
; addr end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2708 :: 		
0x1AA8	0x2219    MOVS	R2, #25
0x1AAA	0x4926    LDR	R1, [PC, #152]
0x1AAC	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2709 :: 		
0x1AAE	0xF04F0240  MOV	R2, #64
0x1AB2	0x4925    LDR	R1, [PC, #148]
0x1AB4	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2710 :: 		
0x1AB6	0xF04F0200  MOV	R2, #0
0x1ABA	0x4924    LDR	R1, [PC, #144]
0x1ABC	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2711 :: 		
0x1ABE	0xF44F6280  MOV	R2, #1024
0x1AC2	0x4923    LDR	R1, [PC, #140]
0x1AC4	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2712 :: 		
0x1AC6	0x481E    LDR	R0, [PC, #120]
0x1AC8	0xF7FFF8DC  BL	_SDIO_SendCommand+0
;__Lib_Mmc_SDIO.c, 2714 :: 		
0x1ACC	0x2019    MOVS	R0, #25
0x1ACE	0xF7FEFF07  BL	__Lib_Mmc_SDIO_CmdResp1Error+0
0x1AD2	0xB108    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO341
;__Lib_Mmc_SDIO.c, 2716 :: 		
0x1AD4	0x2001    MOVS	R0, #1
0x1AD6	0xE01C    B	L_end_Mmc_Multi_Write_Start_SDIO
;__Lib_Mmc_SDIO.c, 2717 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO341:
;__Lib_Mmc_SDIO.c, 2719 :: 		
0x1AD8	0x4A10    LDR	R2, [PC, #64]
0x1ADA	0x4911    LDR	R1, [PC, #68]
0x1ADC	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2720 :: 		
0x1ADE	0xF06F427E  MVN	R2, #-33554432
0x1AE2	0x4910    LDR	R1, [PC, #64]
0x1AE4	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2721 :: 		
0x1AE6	0x2290    MOVS	R2, #144
0x1AE8	0x490F    LDR	R1, [PC, #60]
0x1AEA	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2722 :: 		
0x1AEC	0xF04F0200  MOV	R2, #0
0x1AF0	0x490E    LDR	R1, [PC, #56]
0x1AF2	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2723 :: 		
0x1AF4	0xF04F0200  MOV	R2, #0
0x1AF8	0x490D    LDR	R1, [PC, #52]
0x1AFA	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2724 :: 		
0x1AFC	0xF04F0201  MOV	R2, #1
0x1B00	0x490C    LDR	R1, [PC, #48]
0x1B02	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2725 :: 		
0x1B04	0x4806    LDR	R0, [PC, #24]
0x1B06	0xF7FEFBEF  BL	_SDIO_DataConfig+0
;__Lib_Mmc_SDIO.c, 2727 :: 		
0x1B0A	0x2200    MOVS	R2, #0
0x1B0C	0x4912    LDR	R1, [PC, #72]
0x1B0E	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2729 :: 		
0x1B10	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 2730 :: 		
L_end_Mmc_Multi_Write_Start_SDIO:
0x1B12	0xF8DDE000  LDR	LR, [SP, #0]
0x1B16	0xB001    ADD	SP, SP, #4
0x1B18	0x4770    BX	LR
0x1B1A	0xBF00    NOP
0x1B1C	0xFFFF000F  	#1048575
0x1B20	0x2D642000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+0
0x1B24	0x2D682000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+4
0x1B28	0x2D6C2000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+8
0x1B2C	0x2D702000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+12
0x1B30	0x2D742000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+16
0x1B34	0x2D782000  	__Lib_Mmc_SDIO_SDIO_DataInitStructure+20
0x1B38	0x2C144001  	SDIO_RESP1+0
0x1B3C	0x03242000  	__Lib_Mmc_SDIO_CardTypeSdio+0
0x1B40	0x2D7C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+0
0x1B44	0x2D802000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+4
0x1B48	0x2D842000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+8
0x1B4C	0x2D882000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+12
0x1B50	0x2D8C2000  	__Lib_Mmc_SDIO_SDIO_CmdInitStructure+16
0x1B54	0x032C2000  	__Lib_Mmc_SDIO_RCA+0
0x1B58	0x2D902000  	__Lib_Mmc_SDIO_numberOfBytesSent+0
; end of __Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO
_Mmc_Multi_Read_Sector:
;__Lib_Mmc_SDIO.c, 125 :: 		
; dbuff start address is: 0 (R0)
0x2E08	0xB081    SUB	SP, SP, #4
0x2E0A	0xF8CDE000  STR	LR, [SP, #0]
; dbuff end address is: 0 (R0)
; dbuff start address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 126 :: 		
; dbuff end address is: 0 (R0)
0x2E0E	0x4C03    LDR	R4, [PC, #12]
0x2E10	0x6824    LDR	R4, [R4, #0]
0x2E12	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 127 :: 		
L_end_Mmc_Multi_Read_Sector:
0x2E14	0xF8DDE000  LDR	LR, [SP, #0]
0x2E18	0xB001    ADD	SP, SP, #4
0x2E1A	0x4770    BX	LR
0x2E1C	0x03102000  	__Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_Ptr+0
; end of _Mmc_Multi_Read_Sector
__Lib_Mmc_SDIO_Mmc_Read_Cid_SPI:
;__Lib_Mmc_SDIO.c, 527 :: 		
0x1B5C	0xB085    SUB	SP, SP, #20
0x1B5E	0xF8CDE000  STR	LR, [SP, #0]
0x1B62	0x9002    STR	R0, [SP, #8]
;__Lib_Mmc_SDIO.c, 530 :: 		
0x1B64	0xF001FF82  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 533 :: 		
0x1B68	0x22FF    MOVS	R2, #255
0x1B6A	0x2100    MOVS	R1, #0
0x1B6C	0x200A    MOVS	R0, #10
0x1B6E	0xF001FD57  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
0x1B72	0xB118    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Read_Cid_SPI49
;__Lib_Mmc_SDIO.c, 535 :: 		
0x1B74	0xF001FF46  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 536 :: 		
0x1B78	0x2001    MOVS	R0, #1
0x1B7A	0xE026    B	L_end_Mmc_Read_Cid_SPI
;__Lib_Mmc_SDIO.c, 537 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Cid_SPI49:
;__Lib_Mmc_SDIO.c, 540 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Cid_SPI50:
0x1B7C	0x20FF    MOVS	R0, #255
0x1B7E	0x4C15    LDR	R4, [PC, #84]
0x1B80	0x6824    LDR	R4, [R4, #0]
0x1B82	0x47A0    BLX	R4
0x1B84	0x28FE    CMP	R0, #254
0x1B86	0xD000    BEQ	L___Lib_Mmc_SDIO_Mmc_Read_Cid_SPI51
;__Lib_Mmc_SDIO.c, 541 :: 		
0x1B88	0xE7F8    B	L___Lib_Mmc_SDIO_Mmc_Read_Cid_SPI50
L___Lib_Mmc_SDIO_Mmc_Read_Cid_SPI51:
;__Lib_Mmc_SDIO.c, 544 :: 		
; i start address is: 12 (R3)
0x1B8A	0x2300    MOVS	R3, #0
; i end address is: 12 (R3)
0x1B8C	0xB29A    UXTH	R2, R3
L___Lib_Mmc_SDIO_Mmc_Read_Cid_SPI52:
; i start address is: 8 (R2)
0x1B8E	0x2A10    CMP	R2, #16
0x1B90	0xD210    BCS	L___Lib_Mmc_SDIO_Mmc_Read_Cid_SPI53
;__Lib_Mmc_SDIO.c, 545 :: 		
0x1B92	0x9902    LDR	R1, [SP, #8]
0x1B94	0x1889    ADDS	R1, R1, R2
0x1B96	0x9104    STR	R1, [SP, #16]
0x1B98	0xF8AD2004  STRH	R2, [SP, #4]
0x1B9C	0x20FF    MOVS	R0, #255
0x1B9E	0x4C0D    LDR	R4, [PC, #52]
0x1BA0	0x6824    LDR	R4, [R4, #0]
0x1BA2	0x47A0    BLX	R4
0x1BA4	0xF8BD2004  LDRH	R2, [SP, #4]
0x1BA8	0x9904    LDR	R1, [SP, #16]
0x1BAA	0x7008    STRB	R0, [R1, #0]
;__Lib_Mmc_SDIO.c, 544 :: 		
0x1BAC	0x1C51    ADDS	R1, R2, #1
; i end address is: 8 (R2)
; i start address is: 12 (R3)
0x1BAE	0xB28B    UXTH	R3, R1
;__Lib_Mmc_SDIO.c, 546 :: 		
0x1BB0	0xB29A    UXTH	R2, R3
; i end address is: 12 (R3)
0x1BB2	0xE7EC    B	L___Lib_Mmc_SDIO_Mmc_Read_Cid_SPI52
L___Lib_Mmc_SDIO_Mmc_Read_Cid_SPI53:
;__Lib_Mmc_SDIO.c, 549 :: 		
0x1BB4	0x20FF    MOVS	R0, #255
0x1BB6	0x4C07    LDR	R4, [PC, #28]
0x1BB8	0x6824    LDR	R4, [R4, #0]
0x1BBA	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 550 :: 		
0x1BBC	0x20FF    MOVS	R0, #255
0x1BBE	0x4C05    LDR	R4, [PC, #20]
0x1BC0	0x6824    LDR	R4, [R4, #0]
0x1BC2	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 552 :: 		
0x1BC4	0xF001FF1E  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 555 :: 		
0x1BC8	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 556 :: 		
L_end_Mmc_Read_Cid_SPI:
0x1BCA	0xF8DDE000  LDR	LR, [SP, #0]
0x1BCE	0xB005    ADD	SP, SP, #20
0x1BD0	0x4770    BX	LR
0x1BD2	0xBF00    NOP
0x1BD4	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_Read_Cid_SPI
__Lib_Mmc_SDIO_Mmc_Read_Csd_SPI:
;__Lib_Mmc_SDIO.c, 566 :: 		
0x1BD8	0xB085    SUB	SP, SP, #20
0x1BDA	0xF8CDE000  STR	LR, [SP, #0]
0x1BDE	0x9002    STR	R0, [SP, #8]
;__Lib_Mmc_SDIO.c, 569 :: 		
0x1BE0	0xF001FF44  BL	__Lib_Mmc_SDIO_Mmc_Select_SPI+0
;__Lib_Mmc_SDIO.c, 572 :: 		
0x1BE4	0x22FF    MOVS	R2, #255
0x1BE6	0x2100    MOVS	R1, #0
0x1BE8	0x2009    MOVS	R0, #9
0x1BEA	0xF001FD19  BL	__Lib_Mmc_SDIO_Mmc_Send_Command_SPI+0
0x1BEE	0xB118    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Read_Csd_SPI55
;__Lib_Mmc_SDIO.c, 574 :: 		
0x1BF0	0xF001FF08  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 575 :: 		
0x1BF4	0x2001    MOVS	R0, #1
0x1BF6	0xE026    B	L_end_Mmc_Read_Csd_SPI
;__Lib_Mmc_SDIO.c, 576 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Csd_SPI55:
;__Lib_Mmc_SDIO.c, 579 :: 		
L___Lib_Mmc_SDIO_Mmc_Read_Csd_SPI56:
0x1BF8	0x20FF    MOVS	R0, #255
0x1BFA	0x4C15    LDR	R4, [PC, #84]
0x1BFC	0x6824    LDR	R4, [R4, #0]
0x1BFE	0x47A0    BLX	R4
0x1C00	0x28FE    CMP	R0, #254
0x1C02	0xD000    BEQ	L___Lib_Mmc_SDIO_Mmc_Read_Csd_SPI57
;__Lib_Mmc_SDIO.c, 580 :: 		
0x1C04	0xE7F8    B	L___Lib_Mmc_SDIO_Mmc_Read_Csd_SPI56
L___Lib_Mmc_SDIO_Mmc_Read_Csd_SPI57:
;__Lib_Mmc_SDIO.c, 583 :: 		
; i start address is: 12 (R3)
0x1C06	0x2300    MOVS	R3, #0
; i end address is: 12 (R3)
0x1C08	0xB29A    UXTH	R2, R3
L___Lib_Mmc_SDIO_Mmc_Read_Csd_SPI58:
; i start address is: 8 (R2)
0x1C0A	0x2A10    CMP	R2, #16
0x1C0C	0xD210    BCS	L___Lib_Mmc_SDIO_Mmc_Read_Csd_SPI59
;__Lib_Mmc_SDIO.c, 584 :: 		
0x1C0E	0x9902    LDR	R1, [SP, #8]
0x1C10	0x1889    ADDS	R1, R1, R2
0x1C12	0x9104    STR	R1, [SP, #16]
0x1C14	0xF8AD2004  STRH	R2, [SP, #4]
0x1C18	0x20FF    MOVS	R0, #255
0x1C1A	0x4C0D    LDR	R4, [PC, #52]
0x1C1C	0x6824    LDR	R4, [R4, #0]
0x1C1E	0x47A0    BLX	R4
0x1C20	0xF8BD2004  LDRH	R2, [SP, #4]
0x1C24	0x9904    LDR	R1, [SP, #16]
0x1C26	0x7008    STRB	R0, [R1, #0]
;__Lib_Mmc_SDIO.c, 583 :: 		
0x1C28	0x1C51    ADDS	R1, R2, #1
; i end address is: 8 (R2)
; i start address is: 12 (R3)
0x1C2A	0xB28B    UXTH	R3, R1
;__Lib_Mmc_SDIO.c, 585 :: 		
0x1C2C	0xB29A    UXTH	R2, R3
; i end address is: 12 (R3)
0x1C2E	0xE7EC    B	L___Lib_Mmc_SDIO_Mmc_Read_Csd_SPI58
L___Lib_Mmc_SDIO_Mmc_Read_Csd_SPI59:
;__Lib_Mmc_SDIO.c, 588 :: 		
0x1C30	0x20FF    MOVS	R0, #255
0x1C32	0x4C07    LDR	R4, [PC, #28]
0x1C34	0x6824    LDR	R4, [R4, #0]
0x1C36	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 589 :: 		
0x1C38	0x20FF    MOVS	R0, #255
0x1C3A	0x4C05    LDR	R4, [PC, #20]
0x1C3C	0x6824    LDR	R4, [R4, #0]
0x1C3E	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 591 :: 		
0x1C40	0xF001FEE0  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 594 :: 		
0x1C44	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 595 :: 		
L_end_Mmc_Read_Csd_SPI:
0x1C46	0xF8DDE000  LDR	LR, [SP, #0]
0x1C4A	0xB005    ADD	SP, SP, #20
0x1C4C	0x4770    BX	LR
0x1C4E	0xBF00    NOP
0x1C50	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_Read_Csd_SPI
__Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SPI:
;__Lib_Mmc_SDIO.c, 635 :: 		
0x197C	0xB085    SUB	SP, SP, #20
0x197E	0xF8CDE000  STR	LR, [SP, #0]
0x1982	0x9002    STR	R0, [SP, #8]
;__Lib_Mmc_SDIO.c, 637 :: 		
0x1984	0xF7FEFDAA  BL	__Lib_Mmc_SDIO_Mmc_Wait_Data_Ready_SPI+0
;__Lib_Mmc_SDIO.c, 639 :: 		
; i start address is: 12 (R3)
0x1988	0x2300    MOVS	R3, #0
; i end address is: 12 (R3)
0x198A	0xB29A    UXTH	R2, R3
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SPI66:
; i start address is: 8 (R2)
0x198C	0xF5B27F00  CMP	R2, #512
0x1990	0xD210    BCS	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SPI67
;__Lib_Mmc_SDIO.c, 641 :: 		
0x1992	0x9902    LDR	R1, [SP, #8]
0x1994	0x1889    ADDS	R1, R1, R2
0x1996	0x9104    STR	R1, [SP, #16]
0x1998	0xF8AD2004  STRH	R2, [SP, #4]
0x199C	0x20FF    MOVS	R0, #255
0x199E	0x4C0C    LDR	R4, [PC, #48]
0x19A0	0x6824    LDR	R4, [R4, #0]
0x19A2	0x47A0    BLX	R4
0x19A4	0xF8BD2004  LDRH	R2, [SP, #4]
0x19A8	0x9904    LDR	R1, [SP, #16]
0x19AA	0x7008    STRB	R0, [R1, #0]
;__Lib_Mmc_SDIO.c, 639 :: 		
0x19AC	0x1C51    ADDS	R1, R2, #1
; i end address is: 8 (R2)
; i start address is: 12 (R3)
0x19AE	0xB28B    UXTH	R3, R1
;__Lib_Mmc_SDIO.c, 642 :: 		
0x19B0	0xB29A    UXTH	R2, R3
; i end address is: 12 (R3)
0x19B2	0xE7EB    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SPI66
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SPI67:
;__Lib_Mmc_SDIO.c, 645 :: 		
0x19B4	0x20FF    MOVS	R0, #255
0x19B6	0x4C06    LDR	R4, [PC, #24]
0x19B8	0x6824    LDR	R4, [R4, #0]
0x19BA	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 646 :: 		
0x19BC	0x20FF    MOVS	R0, #255
0x19BE	0x4C04    LDR	R4, [PC, #16]
0x19C0	0x6824    LDR	R4, [R4, #0]
0x19C2	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 648 :: 		
0x19C4	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 649 :: 		
L_end_Mmc_Multi_Read_Sector_SPI:
0x19C6	0xF8DDE000  LDR	LR, [SP, #0]
0x19CA	0xB005    ADD	SP, SP, #20
0x19CC	0x4770    BX	LR
0x19CE	0xBF00    NOP
0x19D0	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SPI
__Lib_Mmc_SDIO_Mmc_Wait_Data_Ready_SPI:
;__Lib_Mmc_SDIO.c, 601 :: 		
0x04DC	0xB081    SUB	SP, SP, #4
0x04DE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 602 :: 		
L___Lib_Mmc_SDIO_Mmc_Wait_Data_Ready_SPI61:
0x04E2	0x20FF    MOVS	R0, #255
0x04E4	0x4C04    LDR	R4, [PC, #16]
0x04E6	0x6824    LDR	R4, [R4, #0]
0x04E8	0x47A0    BLX	R4
0x04EA	0x28FE    CMP	R0, #254
0x04EC	0xD000    BEQ	L___Lib_Mmc_SDIO_Mmc_Wait_Data_Ready_SPI62
;__Lib_Mmc_SDIO.c, 603 :: 		
0x04EE	0xE7F8    B	L___Lib_Mmc_SDIO_Mmc_Wait_Data_Ready_SPI61
L___Lib_Mmc_SDIO_Mmc_Wait_Data_Ready_SPI62:
;__Lib_Mmc_SDIO.c, 604 :: 		
L_end_Mmc_Wait_Data_Ready_SPI:
0x04F0	0xF8DDE000  LDR	LR, [SP, #0]
0x04F4	0xB001    ADD	SP, SP, #4
0x04F6	0x4770    BX	LR
0x04F8	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_Wait_Data_Ready_SPI
__Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI:
;__Lib_Mmc_SDIO.c, 721 :: 		
0x1D9C	0xB083    SUB	SP, SP, #12
0x1D9E	0xF8CDE000  STR	LR, [SP, #0]
0x1DA2	0x9002    STR	R0, [SP, #8]
;__Lib_Mmc_SDIO.c, 724 :: 		
0x1DA4	0x20FC    MOVS	R0, #252
0x1DA6	0x4C1D    LDR	R4, [PC, #116]
0x1DA8	0x6824    LDR	R4, [R4, #0]
0x1DAA	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 727 :: 		
; i start address is: 8 (R2)
0x1DAC	0x2200    MOVS	R2, #0
; i end address is: 8 (R2)
0x1DAE	0xB290    UXTH	R0, R2
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI81:
; i start address is: 0 (R0)
0x1DB0	0xF24011FF  MOVW	R1, #511
0x1DB4	0x4288    CMP	R0, R1
0x1DB6	0xD80F    BHI	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI82
;__Lib_Mmc_SDIO.c, 728 :: 		
0x1DB8	0x9902    LDR	R1, [SP, #8]
0x1DBA	0x1809    ADDS	R1, R1, R0
0x1DBC	0x7809    LDRB	R1, [R1, #0]
0x1DBE	0xB2CC    UXTB	R4, R1
0x1DC0	0xF8AD0004  STRH	R0, [SP, #4]
0x1DC4	0xB2A0    UXTH	R0, R4
0x1DC6	0x4C15    LDR	R4, [PC, #84]
0x1DC8	0x6824    LDR	R4, [R4, #0]
0x1DCA	0x47A0    BLX	R4
0x1DCC	0xF8BD0004  LDRH	R0, [SP, #4]
;__Lib_Mmc_SDIO.c, 727 :: 		
0x1DD0	0x1C41    ADDS	R1, R0, #1
; i end address is: 0 (R0)
; i start address is: 8 (R2)
0x1DD2	0xB28A    UXTH	R2, R1
;__Lib_Mmc_SDIO.c, 729 :: 		
0x1DD4	0xB290    UXTH	R0, R2
; i end address is: 8 (R2)
0x1DD6	0xE7EB    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI81
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI82:
;__Lib_Mmc_SDIO.c, 732 :: 		
0x1DD8	0x20FF    MOVS	R0, #255
0x1DDA	0x4C10    LDR	R4, [PC, #64]
0x1DDC	0x6824    LDR	R4, [R4, #0]
0x1DDE	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 733 :: 		
0x1DE0	0x20FF    MOVS	R0, #255
0x1DE2	0x4C0E    LDR	R4, [PC, #56]
0x1DE4	0x6824    LDR	R4, [R4, #0]
0x1DE6	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 736 :: 		
0x1DE8	0x20FF    MOVS	R0, #255
0x1DEA	0x4C0C    LDR	R4, [PC, #48]
0x1DEC	0x6824    LDR	R4, [R4, #0]
0x1DEE	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 737 :: 		
0x1DF0	0xF000011F  AND	R1, R0, #31
0x1DF4	0xB289    UXTH	R1, R1
;__Lib_Mmc_SDIO.c, 738 :: 		
0x1DF6	0x2905    CMP	R1, #5
0x1DF8	0xD003    BEQ	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI84
;__Lib_Mmc_SDIO.c, 740 :: 		
0x1DFA	0xF001FE03  BL	__Lib_Mmc_SDIO_Mmc_DeSelect_SPI+0
;__Lib_Mmc_SDIO.c, 741 :: 		
0x1DFE	0x2002    MOVS	R0, #2
0x1E00	0xE008    B	L_end_Mmc_Multi_Write_Sector_SPI
;__Lib_Mmc_SDIO.c, 742 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI84:
;__Lib_Mmc_SDIO.c, 744 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI85:
0x1E02	0x20FF    MOVS	R0, #255
0x1E04	0x4C05    LDR	R4, [PC, #20]
0x1E06	0x6824    LDR	R4, [R4, #0]
0x1E08	0x47A0    BLX	R4
0x1E0A	0xF1B00FFF  CMP	R0, #255
0x1E0E	0xD000    BEQ	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI86
;__Lib_Mmc_SDIO.c, 745 :: 		
0x1E10	0xE7F7    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI85
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI86:
;__Lib_Mmc_SDIO.c, 746 :: 		
0x1E12	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 747 :: 		
L_end_Mmc_Multi_Write_Sector_SPI:
0x1E14	0xF8DDE000  LDR	LR, [SP, #0]
0x1E18	0xB003    ADD	SP, SP, #12
0x1E1A	0x4770    BX	LR
0x1E1C	0x2D602000  	_SPI_Rd_Ptr+0
; end of __Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI
__Lib_Mmc_SDIO_Mmc_Read_Cid_SDIO:
;__Lib_Mmc_SDIO.c, 2382 :: 		
; data_for_registers start address is: 0 (R0)
0x1E20	0xB081    SUB	SP, SP, #4
0x1E22	0x4602    MOV	R2, R0
; data_for_registers end address is: 0 (R0)
; data_for_registers start address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 2384 :: 		
; ptr start address is: 0 (R0)
0x1E24	0x4610    MOV	R0, R2
;__Lib_Mmc_SDIO.c, 2385 :: 		
0x1E26	0x490A    LDR	R1, [PC, #40]
0x1E28	0x6809    LDR	R1, [R1, #0]
0x1E2A	0x6011    STR	R1, [R2, #0]
; data_for_registers end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 2386 :: 		
0x1E2C	0x1D02    ADDS	R2, R0, #4
0x1E2E	0x4909    LDR	R1, [PC, #36]
0x1E30	0x6809    LDR	R1, [R1, #0]
0x1E32	0x6011    STR	R1, [R2, #0]
;__Lib_Mmc_SDIO.c, 2387 :: 		
0x1E34	0xF2000208  ADDW	R2, R0, #8
0x1E38	0x4907    LDR	R1, [PC, #28]
0x1E3A	0x6809    LDR	R1, [R1, #0]
0x1E3C	0x6011    STR	R1, [R2, #0]
;__Lib_Mmc_SDIO.c, 2388 :: 		
0x1E3E	0xF200020C  ADDW	R2, R0, #12
; ptr end address is: 0 (R0)
0x1E42	0x4906    LDR	R1, [PC, #24]
0x1E44	0x6809    LDR	R1, [R1, #0]
0x1E46	0x6011    STR	R1, [R2, #0]
;__Lib_Mmc_SDIO.c, 2390 :: 		
0x1E48	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 2391 :: 		
L_end_Mmc_Read_Cid_SDIO:
0x1E4A	0xB001    ADD	SP, SP, #4
0x1E4C	0x4770    BX	LR
0x1E4E	0xBF00    NOP
0x1E50	0x2DA42000  	__Lib_Mmc_SDIO_CID_TabSdio+0
0x1E54	0x2DA82000  	__Lib_Mmc_SDIO_CID_TabSdio+4
0x1E58	0x2DAC2000  	__Lib_Mmc_SDIO_CID_TabSdio+8
0x1E5C	0x2DB02000  	__Lib_Mmc_SDIO_CID_TabSdio+12
; end of __Lib_Mmc_SDIO_Mmc_Read_Cid_SDIO
__Lib_Mmc_SDIO_Mmc_Read_Csd_SDIO:
;__Lib_Mmc_SDIO.c, 2397 :: 		
; data_for_registers start address is: 0 (R0)
0x1E60	0xB081    SUB	SP, SP, #4
0x1E62	0x4602    MOV	R2, R0
; data_for_registers end address is: 0 (R0)
; data_for_registers start address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 2400 :: 		
; ptr start address is: 0 (R0)
0x1E64	0x4610    MOV	R0, R2
;__Lib_Mmc_SDIO.c, 2401 :: 		
0x1E66	0x490A    LDR	R1, [PC, #40]
0x1E68	0x6809    LDR	R1, [R1, #0]
0x1E6A	0x6011    STR	R1, [R2, #0]
; data_for_registers end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 2402 :: 		
0x1E6C	0x1D02    ADDS	R2, R0, #4
0x1E6E	0x4909    LDR	R1, [PC, #36]
0x1E70	0x6809    LDR	R1, [R1, #0]
0x1E72	0x6011    STR	R1, [R2, #0]
;__Lib_Mmc_SDIO.c, 2403 :: 		
0x1E74	0xF2000208  ADDW	R2, R0, #8
0x1E78	0x4907    LDR	R1, [PC, #28]
0x1E7A	0x6809    LDR	R1, [R1, #0]
0x1E7C	0x6011    STR	R1, [R2, #0]
;__Lib_Mmc_SDIO.c, 2404 :: 		
0x1E7E	0xF200020C  ADDW	R2, R0, #12
; ptr end address is: 0 (R0)
0x1E82	0x4906    LDR	R1, [PC, #24]
0x1E84	0x6809    LDR	R1, [R1, #0]
0x1E86	0x6011    STR	R1, [R2, #0]
;__Lib_Mmc_SDIO.c, 2406 :: 		
0x1E88	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 2425 :: 		
L_end_Mmc_Read_Csd_SDIO:
0x1E8A	0xB001    ADD	SP, SP, #4
0x1E8C	0x4770    BX	LR
0x1E8E	0xBF00    NOP
0x1E90	0x2D942000  	__Lib_Mmc_SDIO_CSD_TabSdio+0
0x1E94	0x2D982000  	__Lib_Mmc_SDIO_CSD_TabSdio+4
0x1E98	0x2D9C2000  	__Lib_Mmc_SDIO_CSD_TabSdio+8
0x1E9C	0x2DA02000  	__Lib_Mmc_SDIO_CSD_TabSdio+12
; end of __Lib_Mmc_SDIO_Mmc_Read_Csd_SDIO
__Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO:
;__Lib_Mmc_SDIO.c, 2518 :: 		
; dbuff start address is: 0 (R0)
0x1C54	0xB082    SUB	SP, SP, #8
0x1C56	0xF8CDE000  STR	LR, [SP, #0]
; dbuff end address is: 0 (R0)
; dbuff start address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2519 :: 		
;__Lib_Mmc_SDIO.c, 2520 :: 		
;__Lib_Mmc_SDIO.c, 2522 :: 		
; firstRead_mark start address is: 24 (R6)
0x1C5A	0x2601    MOVS	R6, #1
;__Lib_Mmc_SDIO.c, 2524 :: 		
; tempbuff start address is: 16 (R4)
0x1C5C	0x4604    MOV	R4, R0
; dbuff end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2525 :: 		
; numOfWordRead start address is: 12 (R3)
0x1C5E	0x2300    MOVS	R3, #0
;__Lib_Mmc_SDIO.c, 2526 :: 		
; timeOut start address is: 20 (R5)
0x1C60	0x2500    MOVS	R5, #0
;__Lib_Mmc_SDIO.c, 2530 :: 		
0x1C62	0x2001    MOVS	R0, #1
0x1C64	0xF001FEC6  BL	_SDIO_StopSDIOReadWait+0
; timeOut end address is: 20 (R5)
; firstRead_mark end address is: 24 (R6)
; tempbuff end address is: 16 (R4)
; numOfWordRead end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 2532 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO313:
; timeOut start address is: 20 (R5)
; numOfWordRead start address is: 12 (R3)
; tempbuff start address is: 16 (R4)
; firstRead_mark start address is: 24 (R6)
0x1C68	0x493A    LDR	R1, [PC, #232]
0x1C6A	0x680A    LDR	R2, [R1, #0]
0x1C6C	0xF240312A  MOVW	R1, #810
0x1C70	0xEA020101  AND	R1, R2, R1, LSL #0
0x1C74	0x2900    CMP	R1, #0
0x1C76	0xD12F    BNE	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO457
0x1C78	0x4937    LDR	R1, [PC, #220]
0x1C7A	0x428D    CMP	R5, R1
0x1C7C	0xD82F    BHI	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO458
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO450:
;__Lib_Mmc_SDIO.c, 2534 :: 		
0x1C7E	0xF44F4000  MOV	R0, #32768
0x1C82	0xF7FEFC3B  BL	_SDIO_GetFlagStatus+0
0x1C86	0xB1F8    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO317
; timeOut end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 2538 :: 		
0x1C88	0x2E01    CMP	R6, #1
0x1C8A	0xD104    BNE	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO455
; firstRead_mark end address is: 24 (R6)
;__Lib_Mmc_SDIO.c, 2540 :: 		
0x1C8C	0x2000    MOVS	R0, #0
0x1C8E	0xF001FEB1  BL	_SDIO_StopSDIOReadWait+0
;__Lib_Mmc_SDIO.c, 2541 :: 		
; firstRead_mark start address is: 8 (R2)
0x1C92	0x2200    MOVS	R2, #0
; firstRead_mark end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 2542 :: 		
0x1C94	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO318
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO455:
;__Lib_Mmc_SDIO.c, 2538 :: 		
0x1C96	0xB2F2    UXTB	R2, R6
;__Lib_Mmc_SDIO.c, 2542 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO318:
;__Lib_Mmc_SDIO.c, 2544 :: 		
; firstRead_mark start address is: 8 (R2)
; count start address is: 20 (R5)
0x1C98	0x2500    MOVS	R5, #0
; firstRead_mark end address is: 8 (R2)
; count end address is: 20 (R5)
; tempbuff end address is: 16 (R4)
; numOfWordRead end address is: 12 (R3)
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO319:
; count start address is: 20 (R5)
; firstRead_mark start address is: 8 (R2)
; tempbuff start address is: 16 (R4)
; numOfWordRead start address is: 12 (R3)
0x1C9A	0x2D08    CMP	R5, #8
0x1C9C	0xD20E    BCS	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO456
;__Lib_Mmc_SDIO.c, 2546 :: 		
0x1C9E	0x00A9    LSLS	R1, R5, #2
0x1CA0	0x1861    ADDS	R1, R4, R1
0x1CA2	0x9101    STR	R1, [SP, #4]
0x1CA4	0xF7FEFACC  BL	_SDIO_ReadData+0
0x1CA8	0x9901    LDR	R1, [SP, #4]
0x1CAA	0x6008    STR	R0, [R1, #0]
;__Lib_Mmc_SDIO.c, 2547 :: 		
0x1CAC	0x1C59    ADDS	R1, R3, #1
0x1CAE	0x460B    MOV	R3, R1
;__Lib_Mmc_SDIO.c, 2549 :: 		
0x1CB0	0x2980    CMP	R1, #128
0x1CB2	0xD301    BCC	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO322
; count end address is: 20 (R5)
;__Lib_Mmc_SDIO.c, 2550 :: 		
0x1CB4	0x4618    MOV	R0, R3
0x1CB6	0xE002    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO320
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO322:
;__Lib_Mmc_SDIO.c, 2544 :: 		
; count start address is: 20 (R5)
0x1CB8	0x1C6D    ADDS	R5, R5, #1
;__Lib_Mmc_SDIO.c, 2551 :: 		
; count end address is: 20 (R5)
; numOfWordRead end address is: 12 (R3)
0x1CBA	0xE7EE    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO319
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO456:
;__Lib_Mmc_SDIO.c, 2544 :: 		
0x1CBC	0x4618    MOV	R0, R3
;__Lib_Mmc_SDIO.c, 2551 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO320:
;__Lib_Mmc_SDIO.c, 2552 :: 		
; numOfWordRead start address is: 0 (R0)
0x1CBE	0x3420    ADDS	R4, #32
;__Lib_Mmc_SDIO.c, 2553 :: 		
; timeOut start address is: 20 (R5)
0x1CC0	0x2500    MOVS	R5, #0
;__Lib_Mmc_SDIO.c, 2554 :: 		
0x1CC2	0x4603    MOV	R3, R0
; firstRead_mark end address is: 8 (R2)
; numOfWordRead end address is: 0 (R0)
0x1CC4	0xB2D6    UXTB	R6, R2
0x1CC6	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO323
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO317:
;__Lib_Mmc_SDIO.c, 2556 :: 		
; numOfWordRead start address is: 12 (R3)
; firstRead_mark start address is: 24 (R6)
0x1CC8	0x1C6D    ADDS	R5, R5, #1
; timeOut end address is: 20 (R5)
; firstRead_mark end address is: 24 (R6)
; tempbuff end address is: 16 (R4)
; numOfWordRead end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 2557 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO323:
;__Lib_Mmc_SDIO.c, 2559 :: 		
; timeOut start address is: 20 (R5)
; firstRead_mark start address is: 24 (R6)
; tempbuff start address is: 16 (R4)
; numOfWordRead start address is: 12 (R3)
0x1CCA	0x2B80    CMP	R3, #128
0x1CCC	0xD300    BCC	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO324
; firstRead_mark end address is: 24 (R6)
; tempbuff end address is: 16 (R4)
;__Lib_Mmc_SDIO.c, 2560 :: 		
0x1CCE	0xE000    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO314
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO324:
;__Lib_Mmc_SDIO.c, 2561 :: 		
; tempbuff start address is: 16 (R4)
; firstRead_mark start address is: 24 (R6)
; firstRead_mark end address is: 24 (R6)
; tempbuff end address is: 16 (R4)
0x1CD0	0xE7CA    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO313
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO314:
;__Lib_Mmc_SDIO.c, 2532 :: 		
0x1CD2	0x461A    MOV	R2, R3
; numOfWordRead end address is: 12 (R3)
0x1CD4	0x462B    MOV	R3, R5
0x1CD6	0xE001    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO452
; timeOut end address is: 20 (R5)
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO457:
0x1CD8	0x461A    MOV	R2, R3
0x1CDA	0x462B    MOV	R3, R5
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO452:
; numOfWordRead start address is: 8 (R2)
; timeOut start address is: 12 (R3)
; numOfWordRead end address is: 8 (R2)
; timeOut end address is: 12 (R3)
0x1CDC	0xE001    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO451
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO458:
0x1CDE	0x461A    MOV	R2, R3
0x1CE0	0x462B    MOV	R3, R5
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO451:
;__Lib_Mmc_SDIO.c, 2563 :: 		
; numOfWordRead start address is: 8 (R2)
; timeOut start address is: 12 (R3)
0x1CE2	0xF04F0008  MOV	R0, #8
0x1CE6	0xF7FEFC09  BL	_SDIO_GetFlagStatus+0
0x1CEA	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO325
; numOfWordRead end address is: 8 (R2)
; timeOut end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 2565 :: 		
0x1CEC	0xF04F0008  MOV	R0, #8
0x1CF0	0xF7FEFBEC  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2566 :: 		
0x1CF4	0x2001    MOVS	R0, #1
0x1CF6	0xE029    B	L_end_Mmc_Multi_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2567 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO325:
;__Lib_Mmc_SDIO.c, 2568 :: 		
; timeOut start address is: 12 (R3)
; numOfWordRead start address is: 8 (R2)
0x1CF8	0xF04F0002  MOV	R0, #2
0x1CFC	0xF7FEFBFE  BL	_SDIO_GetFlagStatus+0
0x1D00	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO327
; numOfWordRead end address is: 8 (R2)
; timeOut end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 2570 :: 		
0x1D02	0xF04F0002  MOV	R0, #2
0x1D06	0xF7FEFBE1  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2571 :: 		
0x1D0A	0x2001    MOVS	R0, #1
0x1D0C	0xE01E    B	L_end_Mmc_Multi_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2572 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO327:
;__Lib_Mmc_SDIO.c, 2573 :: 		
; timeOut start address is: 12 (R3)
; numOfWordRead start address is: 8 (R2)
0x1D0E	0xF04F0020  MOV	R0, #32
0x1D12	0xF7FEFBF3  BL	_SDIO_GetFlagStatus+0
0x1D16	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO329
; numOfWordRead end address is: 8 (R2)
; timeOut end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 2575 :: 		
0x1D18	0xF04F0020  MOV	R0, #32
0x1D1C	0xF7FEFBD6  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2576 :: 		
0x1D20	0x2001    MOVS	R0, #1
0x1D22	0xE013    B	L_end_Mmc_Multi_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2577 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO329:
;__Lib_Mmc_SDIO.c, 2578 :: 		
; timeOut start address is: 12 (R3)
; numOfWordRead start address is: 8 (R2)
0x1D24	0xF44F7000  MOV	R0, #512
0x1D28	0xF7FEFBE8  BL	_SDIO_GetFlagStatus+0
0x1D2C	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO331
; numOfWordRead end address is: 8 (R2)
; timeOut end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 2580 :: 		
0x1D2E	0xF44F7000  MOV	R0, #512
0x1D32	0xF7FEFBCB  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2581 :: 		
0x1D36	0x2001    MOVS	R0, #1
0x1D38	0xE008    B	L_end_Mmc_Multi_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2582 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO331:
;__Lib_Mmc_SDIO.c, 2583 :: 		
; timeOut start address is: 12 (R3)
; numOfWordRead start address is: 8 (R2)
0x1D3A	0x4907    LDR	R1, [PC, #28]
0x1D3C	0x428B    CMP	R3, R1
0x1D3E	0xD802    BHI	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO454
; timeOut end address is: 12 (R3)
0x1D40	0x2A80    CMP	R2, #128
0x1D42	0xD300    BCC	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO453
; numOfWordRead end address is: 8 (R2)
0x1D44	0xE001    B	L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO335
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO454:
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO453:
;__Lib_Mmc_SDIO.c, 2585 :: 		
0x1D46	0x2001    MOVS	R0, #1
0x1D48	0xE000    B	L_end_Mmc_Multi_Read_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2586 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO335:
;__Lib_Mmc_SDIO.c, 2588 :: 		
0x1D4A	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 2589 :: 		
L_end_Mmc_Multi_Read_Sector_SDIO:
0x1D4C	0xF8DDE000  LDR	LR, [SP, #0]
0x1D50	0xB002    ADD	SP, SP, #8
0x1D52	0x4770    BX	LR
0x1D54	0x2C344001  	SDIO_STA+0
0x1D58	0xFFFF001F  	#2097151
; end of __Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO
__Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO:
;__Lib_Mmc_SDIO.c, 2736 :: 		
; dbuff start address is: 0 (R0)
0x0E94	0xB084    SUB	SP, SP, #16
0x0E96	0xF8CDE000  STR	LR, [SP, #0]
; dbuff end address is: 0 (R0)
; dbuff start address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2737 :: 		
;__Lib_Mmc_SDIO.c, 2738 :: 		
; bytestransferred start address is: 24 (R6)
0x0E9A	0xF04F0600  MOV	R6, #0
;__Lib_Mmc_SDIO.c, 2739 :: 		
;__Lib_Mmc_SDIO.c, 2743 :: 		
; tempbuff start address is: 20 (R5)
0x0E9E	0x4605    MOV	R5, R0
; dbuff end address is: 0 (R0)
;__Lib_Mmc_SDIO.c, 2744 :: 		
0x0EA0	0xF2402200  MOVW	R2, #512
0x0EA4	0x495E    LDR	R1, [PC, #376]
0x0EA6	0x600A    STR	R2, [R1, #0]
;__Lib_Mmc_SDIO.c, 2745 :: 		
0x0EA8	0x2100    MOVS	R1, #0
0x0EAA	0x9102    STR	R1, [SP, #8]
;__Lib_Mmc_SDIO.c, 2746 :: 		
0x0EAC	0x2100    MOVS	R1, #0
0x0EAE	0x9103    STR	R1, [SP, #12]
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 24 (R6)
;__Lib_Mmc_SDIO.c, 2748 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO342:
; tempbuff start address is: 20 (R5)
; bytestransferred start address is: 24 (R6)
0x0EB0	0x495C    LDR	R1, [PC, #368]
0x0EB2	0x680A    LDR	R2, [R1, #0]
0x0EB4	0xF240311A  MOVW	R1, #794
0x0EB8	0xEA020101  AND	R1, R2, R1, LSL #0
0x0EBC	0x2900    CMP	R1, #0
0x0EBE	0xF040806E  BNE	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO462
0x0EC2	0x9A03    LDR	R2, [SP, #12]
0x0EC4	0x4958    LDR	R1, [PC, #352]
0x0EC6	0x428A    CMP	R2, R1
0x0EC8	0xF2008069  BHI	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO461
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO460:
;__Lib_Mmc_SDIO.c, 2750 :: 		
0x0ECC	0xF44F4080  MOV	R0, #16384
0x0ED0	0xF7FFFB14  BL	_SDIO_GetFlagStatus+0
0x0ED4	0x2800    CMP	R0, #0
0x0ED6	0xF000805A  BEQ	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO346
;__Lib_Mmc_SDIO.c, 2752 :: 		
0x0EDA	0x4951    LDR	R1, [PC, #324]
0x0EDC	0x6809    LDR	R1, [R1, #0]
0x0EDE	0x1B89    SUB	R1, R1, R6
0x0EE0	0x2920    CMP	R1, #32
0x0EE2	0xD31B    BCC	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO347
;__Lib_Mmc_SDIO.c, 2754 :: 		
; count start address is: 28 (R7)
0x0EE4	0x2700    MOVS	R7, #0
; count end address is: 28 (R7)
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 24 (R6)
0x0EE6	0x4633    MOV	R3, R6
0x0EE8	0x463A    MOV	R2, R7
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO348:
; count start address is: 8 (R2)
; bytestransferred start address is: 12 (R3)
; tempbuff start address is: 20 (R5)
0x0EEA	0x2A08    CMP	R2, #8
0x0EEC	0xD20E    BCS	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO349
;__Lib_Mmc_SDIO.c, 2756 :: 		
0x0EEE	0x0091    LSLS	R1, R2, #2
0x0EF0	0x1869    ADDS	R1, R5, R1
0x0EF2	0x6809    LDR	R1, [R1, #0]
0x0EF4	0x4608    MOV	R0, R1
0x0EF6	0xF7FFFE2B  BL	_SDIO_WriteData+0
;__Lib_Mmc_SDIO.c, 2757 :: 		
0x0EFA	0x9902    LDR	R1, [SP, #8]
0x0EFC	0x1C49    ADDS	R1, R1, #1
0x0EFE	0x9102    STR	R1, [SP, #8]
;__Lib_Mmc_SDIO.c, 2758 :: 		
0x0F00	0x2980    CMP	R1, #128
0x0F02	0xD300    BCC	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO351
; count end address is: 8 (R2)
;__Lib_Mmc_SDIO.c, 2759 :: 		
0x0F04	0xE002    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO349
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO351:
;__Lib_Mmc_SDIO.c, 2754 :: 		
; count start address is: 8 (R2)
0x0F06	0x1C57    ADDS	R7, R2, #1
; count end address is: 8 (R2)
; count start address is: 28 (R7)
;__Lib_Mmc_SDIO.c, 2760 :: 		
; count end address is: 28 (R7)
0x0F08	0x463A    MOV	R2, R7
0x0F0A	0xE7EE    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO348
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO349:
;__Lib_Mmc_SDIO.c, 2761 :: 		
0x0F0C	0xF2050120  ADDW	R1, R5, #32
; tempbuff end address is: 20 (R5)
; tempbuff start address is: 0 (R0)
0x0F10	0x4608    MOV	R0, R1
;__Lib_Mmc_SDIO.c, 2762 :: 		
0x0F12	0xF2030120  ADDW	R1, R3, #32
; bytestransferred end address is: 12 (R3)
; bytestransferred start address is: 4 (R1)
;__Lib_Mmc_SDIO.c, 2763 :: 		
0x0F16	0x460E    MOV	R6, R1
; tempbuff end address is: 0 (R0)
; bytestransferred end address is: 4 (R1)
0x0F18	0x4605    MOV	R5, R0
0x0F1A	0xE02F    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO352
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO347:
;__Lib_Mmc_SDIO.c, 2766 :: 		
; bytestransferred start address is: 24 (R6)
; tempbuff start address is: 20 (R5)
0x0F1C	0x4940    LDR	R1, [PC, #256]
0x0F1E	0x6809    LDR	R1, [R1, #0]
0x0F20	0x1B89    SUB	R1, R1, R6
0x0F22	0xF0010103  AND	R1, R1, #3
0x0F26	0xB929    CBNZ	R1, L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO353
0x0F28	0x493D    LDR	R1, [PC, #244]
0x0F2A	0x6809    LDR	R1, [R1, #0]
0x0F2C	0x1B89    SUB	R1, R1, R6
0x0F2E	0x0889    LSRS	R1, R1, #2
0x0F30	0x9101    STR	R1, [SP, #4]
0x0F32	0xE005    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO354
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO353:
;__Lib_Mmc_SDIO.c, 2767 :: 		
0x0F34	0x493A    LDR	R1, [PC, #232]
0x0F36	0x6809    LDR	R1, [R1, #0]
0x0F38	0x1B89    SUB	R1, R1, R6
0x0F3A	0x0889    LSRS	R1, R1, #2
0x0F3C	0x1C49    ADDS	R1, R1, #1
0x0F3E	0x9101    STR	R1, [SP, #4]
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO354:
; restwords start address is: 0 (R0)
0x0F40	0x9801    LDR	R0, [SP, #4]
;__Lib_Mmc_SDIO.c, 2769 :: 		
; count start address is: 28 (R7)
0x0F42	0x2700    MOVS	R7, #0
; restwords end address is: 0 (R0)
; count end address is: 28 (R7)
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 24 (R6)
0x0F44	0x46A8    MOV	R8, R5
0x0F46	0x4634    MOV	R4, R6
0x0F48	0x4603    MOV	R3, R0
0x0F4A	0x463A    MOV	R2, R7
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO355:
; count start address is: 8 (R2)
; restwords start address is: 12 (R3)
; bytestransferred start address is: 16 (R4)
; tempbuff start address is: 32 (R8)
0x0F4C	0x429A    CMP	R2, R3
0x0F4E	0xD213    BCS	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO356
;__Lib_Mmc_SDIO.c, 2771 :: 		
0x0F50	0xF8D81000  LDR	R1, [R8, #0]
0x0F54	0x4608    MOV	R0, R1
0x0F56	0xF7FFFDFB  BL	_SDIO_WriteData+0
;__Lib_Mmc_SDIO.c, 2772 :: 		
0x0F5A	0x9902    LDR	R1, [SP, #8]
0x0F5C	0x1C49    ADDS	R1, R1, #1
0x0F5E	0x9102    STR	R1, [SP, #8]
;__Lib_Mmc_SDIO.c, 2773 :: 		
0x0F60	0x2980    CMP	R1, #128
0x0F62	0xD300    BCC	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO358
; count end address is: 8 (R2)
; restwords end address is: 12 (R3)
;__Lib_Mmc_SDIO.c, 2774 :: 		
0x0F64	0xE008    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO356
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO358:
;__Lib_Mmc_SDIO.c, 2769 :: 		
; restwords start address is: 12 (R3)
; count start address is: 8 (R2)
0x0F66	0x1C51    ADDS	R1, R2, #1
; count end address is: 8 (R2)
; count start address is: 28 (R7)
0x0F68	0x460F    MOV	R7, R1
0x0F6A	0xF1080504  ADD	R5, R8, #4
; tempbuff end address is: 32 (R8)
; tempbuff start address is: 20 (R5)
0x0F6E	0x1D26    ADDS	R6, R4, #4
; bytestransferred end address is: 16 (R4)
; bytestransferred start address is: 24 (R6)
;__Lib_Mmc_SDIO.c, 2775 :: 		
0x0F70	0x46A8    MOV	R8, R5
; restwords end address is: 12 (R3)
; count end address is: 28 (R7)
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 24 (R6)
0x0F72	0x4634    MOV	R4, R6
0x0F74	0x463A    MOV	R2, R7
0x0F76	0xE7E9    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO355
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO356:
;__Lib_Mmc_SDIO.c, 2776 :: 		
; tempbuff start address is: 32 (R8)
; bytestransferred start address is: 16 (R4)
0x0F78	0x4626    MOV	R6, R4
; bytestransferred end address is: 16 (R4)
; tempbuff end address is: 32 (R8)
0x0F7A	0x4645    MOV	R5, R8
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO352:
;__Lib_Mmc_SDIO.c, 2777 :: 		
; tempbuff start address is: 20 (R5)
; bytestransferred start address is: 24 (R6)
0x0F7C	0x9902    LDR	R1, [SP, #8]
0x0F7E	0x2980    CMP	R1, #128
0x0F80	0xD300    BCC	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO359
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 24 (R6)
;__Lib_Mmc_SDIO.c, 2778 :: 		
0x0F82	0xE00C    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO343
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO359:
;__Lib_Mmc_SDIO.c, 2779 :: 		
; bytestransferred start address is: 24 (R6)
; tempbuff start address is: 20 (R5)
0x0F84	0x2100    MOVS	R1, #0
0x0F86	0x9103    STR	R1, [SP, #12]
;__Lib_Mmc_SDIO.c, 2780 :: 		
0x0F88	0x4629    MOV	R1, R5
0x0F8A	0x4630    MOV	R0, R6
0x0F8C	0xE004    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO360
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO346:
;__Lib_Mmc_SDIO.c, 2782 :: 		
0x0F8E	0x9903    LDR	R1, [SP, #12]
0x0F90	0x1C49    ADDS	R1, R1, #1
0x0F92	0x9103    STR	R1, [SP, #12]
; tempbuff end address is: 20 (R5)
; bytestransferred end address is: 24 (R6)
0x0F94	0x4629    MOV	R1, R5
0x0F96	0x4630    MOV	R0, R6
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO360:
;__Lib_Mmc_SDIO.c, 2783 :: 		
; bytestransferred start address is: 0 (R0)
; tempbuff start address is: 4 (R1)
0x0F98	0x4606    MOV	R6, R0
; bytestransferred end address is: 0 (R0)
; tempbuff end address is: 4 (R1)
0x0F9A	0x460D    MOV	R5, R1
0x0F9C	0xE788    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO342
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO343:
;__Lib_Mmc_SDIO.c, 2748 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO462:
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO461:
;__Lib_Mmc_SDIO.c, 2785 :: 		
0x0F9E	0xF04F0008  MOV	R0, #8
0x0FA2	0xF7FFFAAB  BL	_SDIO_GetFlagStatus+0
0x0FA6	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO361
;__Lib_Mmc_SDIO.c, 2787 :: 		
0x0FA8	0xF04F0008  MOV	R0, #8
0x0FAC	0xF7FFFA8E  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2788 :: 		
0x0FB0	0x2001    MOVS	R0, #1
0x0FB2	0xE030    B	L_end_Mmc_Multi_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2789 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO361:
;__Lib_Mmc_SDIO.c, 2790 :: 		
0x0FB4	0xF04F0002  MOV	R0, #2
0x0FB8	0xF7FFFAA0  BL	_SDIO_GetFlagStatus+0
0x0FBC	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO363
;__Lib_Mmc_SDIO.c, 2792 :: 		
0x0FBE	0xF04F0002  MOV	R0, #2
0x0FC2	0xF7FFFA83  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2793 :: 		
0x0FC6	0x2001    MOVS	R0, #1
0x0FC8	0xE025    B	L_end_Mmc_Multi_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2794 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO363:
;__Lib_Mmc_SDIO.c, 2795 :: 		
0x0FCA	0xF04F0010  MOV	R0, #16
0x0FCE	0xF7FFFA95  BL	_SDIO_GetFlagStatus+0
0x0FD2	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO365
;__Lib_Mmc_SDIO.c, 2797 :: 		
0x0FD4	0xF04F0010  MOV	R0, #16
0x0FD8	0xF7FFFA78  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2798 :: 		
0x0FDC	0x2001    MOVS	R0, #1
0x0FDE	0xE01A    B	L_end_Mmc_Multi_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2799 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO365:
;__Lib_Mmc_SDIO.c, 2800 :: 		
0x0FE0	0xF44F7000  MOV	R0, #512
0x0FE4	0xF7FFFA8A  BL	_SDIO_GetFlagStatus+0
0x0FE8	0xB128    CBZ	R0, L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO367
;__Lib_Mmc_SDIO.c, 2802 :: 		
0x0FEA	0xF44F7000  MOV	R0, #512
0x0FEE	0xF7FFFA6D  BL	_SDIO_ClearFlag+0
;__Lib_Mmc_SDIO.c, 2803 :: 		
0x0FF2	0x2001    MOVS	R0, #1
0x0FF4	0xE00F    B	L_end_Mmc_Multi_Write_Sector_SDIO
;__Lib_Mmc_SDIO.c, 2804 :: 		
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO367:
;__Lib_Mmc_SDIO.c, 2805 :: 		
0x0FF6	0x9A03    LDR	R2, [SP, #12]
0x0FF8	0x490B    LDR	R1, [PC, #44]
0x0FFA	0x428A    CMP	R2, R1
0x0FFC	0xD803    BHI	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO464
0x0FFE	0x9902    LDR	R1, [SP, #8]
0x1000	0x2980    CMP	R1, #128
0x1002	0xD300    BCC	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO463
0x1004	0xE001    B	L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO371
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO464:
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO463:
;__Lib_Mmc_SDIO.c, 2806 :: 		
0x1006	0x2001    MOVS	R0, #1
0x1008	0xE005    B	L_end_Mmc_Multi_Write_Sector_SDIO
L___Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO371:
;__Lib_Mmc_SDIO.c, 2808 :: 		
0x100A	0x4A08    LDR	R2, [PC, #32]
0x100C	0x6811    LDR	R1, [R2, #0]
0x100E	0xF5017100  ADD	R1, R1, #512
0x1012	0x6011    STR	R1, [R2, #0]
;__Lib_Mmc_SDIO.c, 2810 :: 		
0x1014	0x2000    MOVS	R0, #0
;__Lib_Mmc_SDIO.c, 2811 :: 		
L_end_Mmc_Multi_Write_Sector_SDIO:
0x1016	0xF8DDE000  LDR	LR, [SP, #0]
0x101A	0xB004    ADD	SP, SP, #16
0x101C	0x4770    BX	LR
0x101E	0xBF00    NOP
0x1020	0x03282000  	__Lib_Mmc_SDIO_TotalNumberOfBytes+0
0x1024	0x2C344001  	SDIO_STA+0
0x1028	0xFFFF001F  	#2097151
0x102C	0x2D902000  	__Lib_Mmc_SDIO_numberOfBytesSent+0
; end of __Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO
_memcmp:
;__Lib_CString.c, 30 :: 		
; n start address is: 8 (R2)
; s2 start address is: 4 (R1)
; s1 start address is: 0 (R0)
0x2E20	0xB081    SUB	SP, SP, #4
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
; s1 end address is: 0 (R0)
; s1 start address is: 0 (R0)
; s2 start address is: 4 (R1)
; n start address is: 8 (R2)
0x2E22	0xF8AD2000  STRH	R2, [SP, #0]
; s1 end address is: 0 (R0)
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x2E26	0x4602    MOV	R2, R0
0x2E28	0xF9BD0000  LDRSH	R0, [SP, #0]
;__Lib_CString.c, 31 :: 		
L_memcmp4:
; n start address is: 0 (R0)
; n start address is: 0 (R0)
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
0x2E2C	0xB204    SXTH	R4, R0
0x2E2E	0x1E43    SUBS	R3, R0, #1
0x2E30	0xB218    SXTH	R0, R3
; n end address is: 0 (R0)
0x2E32	0xB15C    CBZ	R4, L_memcmp5
; n end address is: 0 (R0)
;__Lib_CString.c, 32 :: 		
; n start address is: 0 (R0)
0x2E34	0x7814    LDRB	R4, [R2, #0]
0x2E36	0x780B    LDRB	R3, [R1, #0]
0x2E38	0x429C    CMP	R4, R3
0x2E3A	0xD004    BEQ	L_memcmp6
; n end address is: 0 (R0)
;__Lib_CString.c, 33 :: 		
0x2E3C	0x7814    LDRB	R4, [R2, #0]
; s1 end address is: 8 (R2)
0x2E3E	0x780B    LDRB	R3, [R1, #0]
; s2 end address is: 4 (R1)
0x2E40	0x1AE3    SUB	R3, R4, R3
0x2E42	0xB218    SXTH	R0, R3
0x2E44	0xE004    B	L_end_memcmp
L_memcmp6:
;__Lib_CString.c, 37 :: 		
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
; n start address is: 0 (R0)
0x2E46	0x1C52    ADDS	R2, R2, #1
;__Lib_CString.c, 38 :: 		
0x2E48	0x1C49    ADDS	R1, R1, #1
;__Lib_CString.c, 39 :: 		
; n end address is: 0 (R0)
; s1 end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x2E4A	0xE7EF    B	L_memcmp4
L_memcmp5:
;__Lib_CString.c, 40 :: 		
0x2E4C	0x2000    MOVS	R0, #0
0x2E4E	0xB200    SXTH	R0, R0
;__Lib_CString.c, 41 :: 		
L_end_memcmp:
0x2E50	0xB001    ADD	SP, SP, #4
0x2E52	0x4770    BX	LR
; end of _memcmp
_Mmc_Multi_Read_Stop:
;__Lib_Mmc_SDIO.c, 129 :: 		
0x2DD8	0xB081    SUB	SP, SP, #4
0x2DDA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_Mmc_SDIO.c, 130 :: 		
0x2DDE	0x4C03    LDR	R4, [PC, #12]
0x2DE0	0x6824    LDR	R4, [R4, #0]
0x2DE2	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 131 :: 		
L_end_Mmc_Multi_Read_Stop:
0x2DE4	0xF8DDE000  LDR	LR, [SP, #0]
0x2DE8	0xB001    ADD	SP, SP, #4
0x2DEA	0x4770    BX	LR
0x2DEC	0x03142000  	__Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_Ptr+0
; end of _Mmc_Multi_Read_Stop
__Lib_MmcFat16_f16_DirentToDir:
;__Lib_MmcFat16.c, 210 :: 		
; d start address is: 4 (R1)
; f16d start address is: 0 (R0)
0x2A70	0xB082    SUB	SP, SP, #8
0x2A72	0xF8CDE000  STR	LR, [SP, #0]
0x2A76	0x4602    MOV	R2, R0
0x2A78	0x4608    MOV	R0, R1
; d end address is: 4 (R1)
; f16d end address is: 0 (R0)
; f16d start address is: 8 (R2)
; d start address is: 0 (R0)
;__Lib_MmcFat16.c, 216 :: 		
; p1 start address is: 20 (R5)
0x2A7A	0x4615    MOV	R5, R2
;__Lib_MmcFat16.c, 217 :: 		
; p2 start address is: 16 (R4)
0x2A7C	0x4604    MOV	R4, R0
;__Lib_MmcFat16.c, 218 :: 		
; i start address is: 4 (R1)
0x2A7E	0x2100    MOVS	R1, #0
; f16d end address is: 8 (R2)
; d end address is: 0 (R0)
; p2 end address is: 16 (R4)
; p1 end address is: 20 (R5)
; i end address is: 4 (R1)
0x2A80	0x4613    MOV	R3, R2
L___Lib_MmcFat16_f16_DirentToDir36:
; i start address is: 4 (R1)
; p2 start address is: 16 (R4)
; p1 start address is: 20 (R5)
; d start address is: 0 (R0)
; f16d start address is: 12 (R3)
0x2A82	0x2908    CMP	R1, #8
0x2A84	0xD20A    BCS	L___Lib_MmcFat16_f16_DirentToDir37
;__Lib_MmcFat16.c, 220 :: 		
0x2A86	0x782A    LDRB	R2, [R5, #0]
0x2A88	0x2A20    CMP	R2, #32
0x2A8A	0xD100    BNE	L___Lib_MmcFat16_f16_DirentToDir39
; p1 end address is: 20 (R5)
; i end address is: 4 (R1)
0x2A8C	0xE006    B	L___Lib_MmcFat16_f16_DirentToDir37
L___Lib_MmcFat16_f16_DirentToDir39:
;__Lib_MmcFat16.c, 221 :: 		
; i start address is: 4 (R1)
; p1 start address is: 20 (R5)
0x2A8E	0x782A    LDRB	R2, [R5, #0]
0x2A90	0x7022    STRB	R2, [R4, #0]
0x2A92	0x1C64    ADDS	R4, R4, #1
0x2A94	0x1C6D    ADDS	R5, R5, #1
;__Lib_MmcFat16.c, 218 :: 		
0x2A96	0x1C49    ADDS	R1, R1, #1
0x2A98	0xB289    UXTH	R1, R1
;__Lib_MmcFat16.c, 222 :: 		
; p1 end address is: 20 (R5)
; i end address is: 4 (R1)
0x2A9A	0xE7F2    B	L___Lib_MmcFat16_f16_DirentToDir36
L___Lib_MmcFat16_f16_DirentToDir37:
;__Lib_MmcFat16.c, 223 :: 		
0x2A9C	0xF2030208  ADDW	R2, R3, #8
; p1 start address is: 4 (R1)
0x2AA0	0x4611    MOV	R1, R2
;__Lib_MmcFat16.c, 224 :: 		
0x2AA2	0x7812    LDRB	R2, [R2, #0]
0x2AA4	0x2A20    CMP	R2, #32
0x2AA6	0xD016    BEQ	L___Lib_MmcFat16_f16_DirentToDir417
;__Lib_MmcFat16.c, 226 :: 		
0x2AA8	0x222E    MOVS	R2, #46
0x2AAA	0x7022    STRB	R2, [R4, #0]
0x2AAC	0x1C66    ADDS	R6, R4, #1
; p2 end address is: 16 (R4)
; p2 start address is: 24 (R6)
;__Lib_MmcFat16.c, 227 :: 		
; i start address is: 8 (R2)
0x2AAE	0x2200    MOVS	R2, #0
; d end address is: 0 (R0)
; p1 end address is: 4 (R1)
; i end address is: 8 (R2)
; f16d end address is: 12 (R3)
; p2 end address is: 24 (R6)
0x2AB0	0x4605    MOV	R5, R0
0x2AB2	0x460C    MOV	R4, R1
0x2AB4	0xB291    UXTH	R1, R2
L___Lib_MmcFat16_f16_DirentToDir41:
; i start address is: 4 (R1)
; p2 start address is: 24 (R6)
; p1 start address is: 16 (R4)
; f16d start address is: 12 (R3)
; d start address is: 20 (R5)
0x2AB6	0x2903    CMP	R1, #3
0x2AB8	0xD20A    BCS	L___Lib_MmcFat16_f16_DirentToDir42
;__Lib_MmcFat16.c, 229 :: 		
0x2ABA	0x7822    LDRB	R2, [R4, #0]
0x2ABC	0x2A20    CMP	R2, #32
0x2ABE	0xD100    BNE	L___Lib_MmcFat16_f16_DirentToDir44
; p1 end address is: 16 (R4)
; i end address is: 4 (R1)
0x2AC0	0xE006    B	L___Lib_MmcFat16_f16_DirentToDir42
L___Lib_MmcFat16_f16_DirentToDir44:
;__Lib_MmcFat16.c, 230 :: 		
; i start address is: 4 (R1)
; p1 start address is: 16 (R4)
0x2AC2	0x7822    LDRB	R2, [R4, #0]
0x2AC4	0x7032    STRB	R2, [R6, #0]
0x2AC6	0x1C76    ADDS	R6, R6, #1
0x2AC8	0x1C64    ADDS	R4, R4, #1
;__Lib_MmcFat16.c, 227 :: 		
0x2ACA	0x1C49    ADDS	R1, R1, #1
0x2ACC	0xB289    UXTH	R1, R1
;__Lib_MmcFat16.c, 231 :: 		
; p1 end address is: 16 (R4)
; i end address is: 4 (R1)
0x2ACE	0xE7F2    B	L___Lib_MmcFat16_f16_DirentToDir41
L___Lib_MmcFat16_f16_DirentToDir42:
;__Lib_MmcFat16.c, 232 :: 		
0x2AD0	0x4630    MOV	R0, R6
; p2 end address is: 24 (R6)
; d end address is: 20 (R5)
0x2AD2	0x461E    MOV	R6, R3
0x2AD4	0xE002    B	L___Lib_MmcFat16_f16_DirentToDir40
; f16d end address is: 12 (R3)
L___Lib_MmcFat16_f16_DirentToDir417:
;__Lib_MmcFat16.c, 224 :: 		
0x2AD6	0x461E    MOV	R6, R3
0x2AD8	0x4605    MOV	R5, R0
0x2ADA	0x4620    MOV	R0, R4
;__Lib_MmcFat16.c, 232 :: 		
L___Lib_MmcFat16_f16_DirentToDir40:
;__Lib_MmcFat16.c, 233 :: 		
; f16d start address is: 24 (R6)
; d start address is: 20 (R5)
; p2 start address is: 0 (R0)
0x2ADC	0x2200    MOVS	R2, #0
0x2ADE	0x7002    STRB	R2, [R0, #0]
; p2 end address is: 0 (R0)
;__Lib_MmcFat16.c, 235 :: 		
0x2AE0	0xF205030D  ADDW	R3, R5, #13
0x2AE4	0xF206020B  ADDW	R2, R6, #11
0x2AE8	0x7812    LDRB	R2, [R2, #0]
0x2AEA	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 236 :: 		
0x2AEC	0xF205021C  ADDW	R2, R5, #28
0x2AF0	0x9201    STR	R2, [SP, #4]
0x2AF2	0xF206021C  ADDW	R2, R6, #28
0x2AF6	0x4610    MOV	R0, R2
0x2AF8	0xF003FD2A  BL	__Lib_MmcFat16_f16_toLong+0
0x2AFC	0x9A01    LDR	R2, [SP, #4]
0x2AFE	0x6010    STR	R0, [R2, #0]
;__Lib_MmcFat16.c, 237 :: 		
0x2B00	0xF2050220  ADDW	R2, R5, #32
0x2B04	0x9201    STR	R2, [SP, #4]
0x2B06	0xF206021A  ADDW	R2, R6, #26
0x2B0A	0x4610    MOV	R0, R2
0x2B0C	0xF7FFFF98  BL	__Lib_MmcFat16_f16_toInt+0
0x2B10	0x9A01    LDR	R2, [SP, #4]
0x2B12	0x8010    STRH	R0, [R2, #0]
;__Lib_MmcFat16.c, 240 :: 		
0x2B14	0xF206020E  ADDW	R2, R6, #14
0x2B18	0x7813    LDRB	R3, [R2, #0]
0x2B1A	0x1C52    ADDS	R2, R2, #1
0x2B1C	0x7812    LDRB	R2, [R2, #0]
0x2B1E	0x0212    LSLS	R2, R2, #8
0x2B20	0xB292    UXTH	R2, R2
0x2B22	0x189C    ADDS	R4, R3, R2
0x2B24	0xB2A4    UXTH	R4, R4
; i start address is: 0 (R0)
0x2B26	0xB2A0    UXTH	R0, R4
;__Lib_MmcFat16.c, 241 :: 		
0x2B28	0xF205020E  ADDW	R2, R5, #14
0x2B2C	0x1CD3    ADDS	R3, R2, #3
0x2B2E	0x0AE2    LSRS	R2, R4, #11
0x2B30	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 242 :: 		
0x2B32	0xF205020E  ADDW	R2, R5, #14
0x2B36	0x1D13    ADDS	R3, R2, #4
0x2B38	0x0942    LSRS	R2, R0, #5
0x2B3A	0xB292    UXTH	R2, R2
0x2B3C	0xF002023F  AND	R2, R2, #63
0x2B40	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 243 :: 		
0x2B42	0xF205020E  ADDW	R2, R5, #14
0x2B46	0x1D53    ADDS	R3, R2, #5
0x2B48	0xF000021F  AND	R2, R0, #31
0x2B4C	0xB292    UXTH	R2, R2
; i end address is: 0 (R0)
0x2B4E	0x0052    LSLS	R2, R2, #1
0x2B50	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 246 :: 		
0x2B52	0xF2060210  ADDW	R2, R6, #16
0x2B56	0x7813    LDRB	R3, [R2, #0]
0x2B58	0x1C52    ADDS	R2, R2, #1
0x2B5A	0x7812    LDRB	R2, [R2, #0]
0x2B5C	0x0212    LSLS	R2, R2, #8
0x2B5E	0xB292    UXTH	R2, R2
0x2B60	0x189C    ADDS	R4, R3, R2
0x2B62	0xB2A4    UXTH	R4, R4
; i start address is: 0 (R0)
0x2B64	0xB2A0    UXTH	R0, R4
;__Lib_MmcFat16.c, 247 :: 		
0x2B66	0xF205020E  ADDW	R2, R5, #14
0x2B6A	0x1C93    ADDS	R3, R2, #2
0x2B6C	0xF004021F  AND	R2, R4, #31
0x2B70	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 248 :: 		
0x2B72	0xF205020E  ADDW	R2, R5, #14
0x2B76	0x1C53    ADDS	R3, R2, #1
0x2B78	0x0942    LSRS	R2, R0, #5
0x2B7A	0xB292    UXTH	R2, R2
0x2B7C	0xF002020F  AND	R2, R2, #15
0x2B80	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 249 :: 		
0x2B82	0xF205030E  ADDW	R3, R5, #14
0x2B86	0x0A42    LSRS	R2, R0, #9
; i end address is: 0 (R0)
0x2B88	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 252 :: 		
0x2B8A	0xF2060216  ADDW	R2, R6, #22
0x2B8E	0x7813    LDRB	R3, [R2, #0]
0x2B90	0x1C52    ADDS	R2, R2, #1
0x2B92	0x7812    LDRB	R2, [R2, #0]
0x2B94	0x0212    LSLS	R2, R2, #8
0x2B96	0xB292    UXTH	R2, R2
0x2B98	0x189C    ADDS	R4, R3, R2
0x2B9A	0xB2A4    UXTH	R4, R4
; i start address is: 0 (R0)
0x2B9C	0xB2A0    UXTH	R0, R4
;__Lib_MmcFat16.c, 253 :: 		
0x2B9E	0xF2050214  ADDW	R2, R5, #20
0x2BA2	0x1CD3    ADDS	R3, R2, #3
0x2BA4	0x0AE2    LSRS	R2, R4, #11
0x2BA6	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 254 :: 		
0x2BA8	0xF2050214  ADDW	R2, R5, #20
0x2BAC	0x1D13    ADDS	R3, R2, #4
0x2BAE	0x0942    LSRS	R2, R0, #5
0x2BB0	0xB292    UXTH	R2, R2
0x2BB2	0xF002023F  AND	R2, R2, #63
0x2BB6	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 255 :: 		
0x2BB8	0xF2050214  ADDW	R2, R5, #20
0x2BBC	0x1D53    ADDS	R3, R2, #5
0x2BBE	0xF000021F  AND	R2, R0, #31
0x2BC2	0xB292    UXTH	R2, R2
; i end address is: 0 (R0)
0x2BC4	0x0052    LSLS	R2, R2, #1
0x2BC6	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 258 :: 		
0x2BC8	0xF2060218  ADDW	R2, R6, #24
; f16d end address is: 24 (R6)
0x2BCC	0x7813    LDRB	R3, [R2, #0]
0x2BCE	0x1C52    ADDS	R2, R2, #1
0x2BD0	0x7812    LDRB	R2, [R2, #0]
0x2BD2	0x0212    LSLS	R2, R2, #8
0x2BD4	0xB292    UXTH	R2, R2
0x2BD6	0x189C    ADDS	R4, R3, R2
0x2BD8	0xB2A4    UXTH	R4, R4
; i start address is: 0 (R0)
0x2BDA	0xB2A0    UXTH	R0, R4
;__Lib_MmcFat16.c, 259 :: 		
0x2BDC	0xF2050214  ADDW	R2, R5, #20
0x2BE0	0x1C93    ADDS	R3, R2, #2
0x2BE2	0xF004021F  AND	R2, R4, #31
0x2BE6	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 260 :: 		
0x2BE8	0xF2050214  ADDW	R2, R5, #20
0x2BEC	0x1C53    ADDS	R3, R2, #1
0x2BEE	0x0942    LSRS	R2, R0, #5
0x2BF0	0xB292    UXTH	R2, R2
0x2BF2	0xF002020F  AND	R2, R2, #15
0x2BF6	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 261 :: 		
0x2BF8	0xF2050314  ADDW	R3, R5, #20
; d end address is: 20 (R5)
0x2BFC	0x0A42    LSRS	R2, R0, #9
; i end address is: 0 (R0)
0x2BFE	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 262 :: 		
L_end_f16_DirentToDir:
0x2C00	0xF8DDE000  LDR	LR, [SP, #0]
0x2C04	0xB002    ADD	SP, SP, #8
0x2C06	0x4770    BX	LR
; end of __Lib_MmcFat16_f16_DirentToDir
__Lib_MmcFat16_mkNod:
;__Lib_MmcFat16.c, 795 :: 		
0x601C	0xB087    SUB	SP, SP, #28
0x601E	0xF8CDE000  STR	LR, [SP, #0]
0x6022	0x9004    STR	R0, [SP, #16]
0x6024	0x9105    STR	R1, [SP, #20]
0x6026	0x9206    STR	R2, [SP, #24]
;__Lib_MmcFat16.c, 804 :: 		
0x6028	0x9B04    LDR	R3, [SP, #16]
0x602A	0x331A    ADDS	R3, #26
0x602C	0x4618    MOV	R0, R3
0x602E	0xF7FCFD07  BL	__Lib_MmcFat16_f16_toInt+0
0x6032	0x9B06    LDR	R3, [SP, #24]
0x6034	0x8018    STRH	R0, [R3, #0]
;__Lib_MmcFat16.c, 805 :: 		
0x6036	0x9B06    LDR	R3, [SP, #24]
0x6038	0x881B    LDRH	R3, [R3, #0]
0x603A	0xB9B3    CBNZ	R3, L___Lib_MmcFat16_mkNod118
;__Lib_MmcFat16.c, 807 :: 		
0x603C	0xF7FCFDE4  BL	__Lib_MmcFat16_getFatFreeCluster+0
0x6040	0x9B06    LDR	R3, [SP, #24]
0x6042	0x8018    STRH	R0, [R3, #0]
;__Lib_MmcFat16.c, 809 :: 		
0x6044	0x9B06    LDR	R3, [SP, #24]
0x6046	0x881C    LDRH	R4, [R3, #0]
0x6048	0xF64F73FF  MOVW	R3, #65535
0x604C	0x429C    CMP	R4, R3
0x604E	0xD105    BNE	L___Lib_MmcFat16_mkNod119
;__Lib_MmcFat16.c, 811 :: 		
0x6050	0x2404    MOVS	R4, #4
0x6052	0x4B69    LDR	R3, [PC, #420]
0x6054	0x701C    STRB	R4, [R3, #0]
;__Lib_MmcFat16.c, 812 :: 		
0x6056	0x20FF    MOVS	R0, #-1
0x6058	0xB240    SXTB	R0, R0
0x605A	0xE0C9    B	L_end_mkNod
;__Lib_MmcFat16.c, 813 :: 		
L___Lib_MmcFat16_mkNod119:
;__Lib_MmcFat16.c, 816 :: 		
0x605C	0x9B06    LDR	R3, [SP, #24]
0x605E	0x881B    LDRH	R3, [R3, #0]
0x6060	0xF64F71FF  MOVW	R1, #65535
0x6064	0xB298    UXTH	R0, R3
0x6066	0xF7FCFE41  BL	__Lib_MmcFat16_putFatEntry+0
;__Lib_MmcFat16.c, 817 :: 		
L___Lib_MmcFat16_mkNod118:
;__Lib_MmcFat16.c, 820 :: 		
0x606A	0x9B06    LDR	R3, [SP, #24]
0x606C	0x881B    LDRH	R3, [R3, #0]
0x606E	0x1E9C    SUBS	R4, R3, #2
0x6070	0x4B62    LDR	R3, [PC, #392]
0x6072	0x881B    LDRH	R3, [R3, #0]
0x6074	0x435C    MULS	R4, R3, R4
0x6076	0x4B62    LDR	R3, [PC, #392]
0x6078	0x681B    LDR	R3, [R3, #0]
0x607A	0x191C    ADDS	R4, R3, R4
0x607C	0x9B05    LDR	R3, [SP, #20]
0x607E	0x601C    STR	R4, [R3, #0]
;__Lib_MmcFat16.c, 823 :: 		
0x6080	0x4B60    LDR	R3, [PC, #384]
0x6082	0x681C    LDR	R4, [R3, #0]
0x6084	0x4B60    LDR	R3, [PC, #384]
0x6086	0x681B    LDR	R3, [R3, #0]
0x6088	0x42A3    CMP	R3, R4
0x608A	0xD104    BNE	L___Lib_MmcFat16_mkNod120
;__Lib_MmcFat16.c, 824 :: 		
0x608C	0x4B5F    LDR	R3, [PC, #380]
0x608E	0x881B    LDRH	R3, [R3, #0]
0x6090	0xF8AD300A  STRH	R3, [SP, #10]
0x6094	0xE006    B	L___Lib_MmcFat16_mkNod121
L___Lib_MmcFat16_mkNod120:
;__Lib_MmcFat16.c, 826 :: 		
0x6096	0x4B5E    LDR	R3, [PC, #376]
0x6098	0x881C    LDRH	R4, [R3, #0]
0x609A	0x4B58    LDR	R3, [PC, #352]
0x609C	0x881B    LDRH	R3, [R3, #0]
0x609E	0x4363    MULS	R3, R4, R3
0x60A0	0xF8AD300A  STRH	R3, [SP, #10]
L___Lib_MmcFat16_mkNod121:
;__Lib_MmcFat16.c, 829 :: 		
0x60A4	0x4C58    LDR	R4, [PC, #352]
0x60A6	0x6823    LDR	R3, [R4, #0]
0x60A8	0x9303    STR	R3, [SP, #12]
;__Lib_MmcFat16.c, 830 :: 		
; free start address is: 0 (R0)
0x60AA	0x485A    LDR	R0, [PC, #360]
;__Lib_MmcFat16.c, 832 :: 		
0x60AC	0x4623    MOV	R3, R4
0x60AE	0x9001    STR	R0, [SP, #4]
0x60B0	0x6818    LDR	R0, [R3, #0]
0x60B2	0xF7FCFE9D  BL	_Mmc_Multi_Read_Start+0
;__Lib_MmcFat16.c, 833 :: 		
0x60B6	0x2401    MOVS	R4, #1
0x60B8	0x4B57    LDR	R3, [PC, #348]
0x60BA	0x701C    STRB	R4, [R3, #0]
;__Lib_MmcFat16.c, 834 :: 		
0x60BC	0x4855    LDR	R0, [PC, #340]
0x60BE	0xF7FCFEA3  BL	_Mmc_Multi_Read_Sector+0
0x60C2	0x9801    LDR	R0, [SP, #4]
;__Lib_MmcFat16.c, 835 :: 		
0x60C4	0x2300    MOVS	R3, #0
0x60C6	0xF8AD3008  STRH	R3, [SP, #8]
; free end address is: 0 (R0)
0x60CA	0x4601    MOV	R1, R0
L___Lib_MmcFat16_mkNod122:
; free start address is: 4 (R1)
0x60CC	0xF8BD400A  LDRH	R4, [SP, #10]
0x60D0	0xF8BD3008  LDRH	R3, [SP, #8]
0x60D4	0x42A3    CMP	R3, R4
0x60D6	0xF080807D  BCS	L___Lib_MmcFat16_mkNod123
;__Lib_MmcFat16.c, 838 :: 		
0x60DA	0x780B    LDRB	R3, [R1, #0]
0x60DC	0x2BE5    CMP	R3, #229
0x60DE	0xD003    BEQ	L___Lib_MmcFat16_mkNod435
0x60E0	0x780B    LDRB	R3, [R1, #0]
0x60E2	0x2B20    CMP	R3, #32
0x60E4	0xD300    BCC	L___Lib_MmcFat16_mkNod434
0x60E6	0xE05A    B	L___Lib_MmcFat16_mkNod127
L___Lib_MmcFat16_mkNod435:
L___Lib_MmcFat16_mkNod434:
;__Lib_MmcFat16.c, 840 :: 		
0x60E8	0x9101    STR	R1, [SP, #4]
0x60EA	0xF7FCFE75  BL	_Mmc_Multi_Read_Stop+0
0x60EE	0x9901    LDR	R1, [SP, #4]
0x60F0	0xB128    CBZ	R0, L___Lib_MmcFat16_mkNod128
; free end address is: 4 (R1)
;__Lib_MmcFat16.c, 842 :: 		
0x60F2	0x2410    MOVS	R4, #16
0x60F4	0x4B40    LDR	R3, [PC, #256]
0x60F6	0x701C    STRB	R4, [R3, #0]
;__Lib_MmcFat16.c, 843 :: 		
0x60F8	0x20FF    MOVS	R0, #-1
0x60FA	0xB240    SXTB	R0, R0
0x60FC	0xE078    B	L_end_mkNod
;__Lib_MmcFat16.c, 844 :: 		
L___Lib_MmcFat16_mkNod128:
;__Lib_MmcFat16.c, 847 :: 		
; free start address is: 4 (R1)
0x60FE	0x9101    STR	R1, [SP, #4]
0x6100	0x2220    MOVS	R2, #32
0x6102	0xB212    SXTH	R2, R2
0x6104	0x4608    MOV	R0, R1
0x6106	0x9904    LDR	R1, [SP, #16]
0x6108	0xF000FA84  BL	_memcpy+0
0x610C	0x9901    LDR	R1, [SP, #4]
;__Lib_MmcFat16.c, 848 :: 		
0x610E	0xF201041A  ADDW	R4, R1, #26
0x6112	0x9B06    LDR	R3, [SP, #24]
0x6114	0x881B    LDRH	R3, [R3, #0]
0x6116	0xF00303FF  AND	R3, R3, #255
0x611A	0x7023    STRB	R3, [R4, #0]
;__Lib_MmcFat16.c, 849 :: 		
0x611C	0xF201031A  ADDW	R3, R1, #26
0x6120	0x1C5C    ADDS	R4, R3, #1
0x6122	0x9B06    LDR	R3, [SP, #24]
0x6124	0x881B    LDRH	R3, [R3, #0]
0x6126	0x0A1B    LSRS	R3, R3, #8
0x6128	0x7023    STRB	R3, [R4, #0]
;__Lib_MmcFat16.c, 852 :: 		
0x612A	0xF201040E  ADDW	R4, R1, #14
0x612E	0x4B3B    LDR	R3, [PC, #236]
0x6130	0x781B    LDRB	R3, [R3, #0]
0x6132	0x7023    STRB	R3, [R4, #0]
;__Lib_MmcFat16.c, 853 :: 		
0x6134	0xF201030E  ADDW	R3, R1, #14
0x6138	0x1C5C    ADDS	R4, R3, #1
0x613A	0x4E39    LDR	R6, [PC, #228]
0x613C	0x7833    LDRB	R3, [R6, #0]
0x613E	0x7023    STRB	R3, [R4, #0]
;__Lib_MmcFat16.c, 854 :: 		
0x6140	0xF2010410  ADDW	R4, R1, #16
0x6144	0x4B37    LDR	R3, [PC, #220]
0x6146	0x781B    LDRB	R3, [R3, #0]
0x6148	0x7023    STRB	R3, [R4, #0]
;__Lib_MmcFat16.c, 855 :: 		
0x614A	0xF2010310  ADDW	R3, R1, #16
0x614E	0x1C5C    ADDS	R4, R3, #1
0x6150	0x4D35    LDR	R5, [PC, #212]
0x6152	0x782B    LDRB	R3, [R5, #0]
0x6154	0x7023    STRB	R3, [R4, #0]
;__Lib_MmcFat16.c, 858 :: 		
0x6156	0xF2010416  ADDW	R4, R1, #22
0x615A	0x4B30    LDR	R3, [PC, #192]
0x615C	0x781B    LDRB	R3, [R3, #0]
0x615E	0x7023    STRB	R3, [R4, #0]
;__Lib_MmcFat16.c, 859 :: 		
0x6160	0xF2010316  ADDW	R3, R1, #22
0x6164	0x1C5C    ADDS	R4, R3, #1
0x6166	0x4633    MOV	R3, R6
0x6168	0x781B    LDRB	R3, [R3, #0]
0x616A	0x7023    STRB	R3, [R4, #0]
;__Lib_MmcFat16.c, 860 :: 		
0x616C	0xF2010418  ADDW	R4, R1, #24
0x6170	0x4B2C    LDR	R3, [PC, #176]
0x6172	0x781B    LDRB	R3, [R3, #0]
0x6174	0x7023    STRB	R3, [R4, #0]
;__Lib_MmcFat16.c, 861 :: 		
0x6176	0xF2010318  ADDW	R3, R1, #24
; free end address is: 4 (R1)
0x617A	0x1C5C    ADDS	R4, R3, #1
0x617C	0x462B    MOV	R3, R5
0x617E	0x781B    LDRB	R3, [R3, #0]
0x6180	0x7023    STRB	R3, [R4, #0]
;__Lib_MmcFat16.c, 863 :: 		
0x6182	0x4924    LDR	R1, [PC, #144]
0x6184	0x9803    LDR	R0, [SP, #12]
0x6186	0xF7FBFA4B  BL	_Mmc_Write_Sector+0
0x618A	0xB128    CBZ	R0, L___Lib_MmcFat16_mkNod129
;__Lib_MmcFat16.c, 865 :: 		
0x618C	0x2405    MOVS	R4, #5
0x618E	0x4B1A    LDR	R3, [PC, #104]
0x6190	0x701C    STRB	R4, [R3, #0]
;__Lib_MmcFat16.c, 866 :: 		
0x6192	0x20FF    MOVS	R0, #-1
0x6194	0xB240    SXTB	R0, R0
0x6196	0xE02B    B	L_end_mkNod
;__Lib_MmcFat16.c, 867 :: 		
L___Lib_MmcFat16_mkNod129:
;__Lib_MmcFat16.c, 869 :: 		
0x6198	0x2000    MOVS	R0, #0
0x619A	0xB240    SXTB	R0, R0
0x619C	0xE028    B	L_end_mkNod
;__Lib_MmcFat16.c, 870 :: 		
L___Lib_MmcFat16_mkNod127:
;__Lib_MmcFat16.c, 871 :: 		
; free start address is: 4 (R1)
0x619E	0xF2010420  ADDW	R4, R1, #32
; free end address is: 4 (R1)
; free start address is: 32 (R8)
0x61A2	0x46A0    MOV	R8, R4
;__Lib_MmcFat16.c, 872 :: 		
0x61A4	0x4B21    LDR	R3, [PC, #132]
0x61A6	0x681B    LDR	R3, [R3, #0]
0x61A8	0x429C    CMP	R4, R3
0x61AA	0xD10C    BNE	L___Lib_MmcFat16_mkNod436
; free end address is: 32 (R8)
;__Lib_MmcFat16.c, 874 :: 		
0x61AC	0x9B03    LDR	R3, [SP, #12]
0x61AE	0x1C5B    ADDS	R3, R3, #1
0x61B0	0x9303    STR	R3, [SP, #12]
;__Lib_MmcFat16.c, 875 :: 		
; free start address is: 32 (R8)
0x61B2	0xF8DF8060  LDR	R8, [PC, #96]
;__Lib_MmcFat16.c, 876 :: 		
0x61B6	0xF8CD8004  STR	R8, [SP, #4]
0x61BA	0x4816    LDR	R0, [PC, #88]
0x61BC	0xF7FCFE24  BL	_Mmc_Multi_Read_Sector+0
; free end address is: 32 (R8)
0x61C0	0xF8DD8004  LDR	R8, [SP, #4]
;__Lib_MmcFat16.c, 877 :: 		
0x61C4	0xE7FF    B	L___Lib_MmcFat16_mkNod130
L___Lib_MmcFat16_mkNod436:
;__Lib_MmcFat16.c, 872 :: 		
;__Lib_MmcFat16.c, 877 :: 		
L___Lib_MmcFat16_mkNod130:
;__Lib_MmcFat16.c, 835 :: 		
; free start address is: 32 (R8)
0x61C6	0xF8BD3008  LDRH	R3, [SP, #8]
0x61CA	0x1C5B    ADDS	R3, R3, #1
0x61CC	0xF8AD3008  STRH	R3, [SP, #8]
;__Lib_MmcFat16.c, 878 :: 		
0x61D0	0x4641    MOV	R1, R8
; free end address is: 32 (R8)
0x61D2	0xE77B    B	L___Lib_MmcFat16_mkNod122
L___Lib_MmcFat16_mkNod123:
;__Lib_MmcFat16.c, 880 :: 		
0x61D4	0xF7FCFE00  BL	_Mmc_Multi_Read_Stop+0
0x61D8	0xB128    CBZ	R0, L___Lib_MmcFat16_mkNod131
;__Lib_MmcFat16.c, 882 :: 		
0x61DA	0x2410    MOVS	R4, #16
0x61DC	0x4B06    LDR	R3, [PC, #24]
0x61DE	0x701C    STRB	R4, [R3, #0]
;__Lib_MmcFat16.c, 883 :: 		
0x61E0	0x20FF    MOVS	R0, #-1
0x61E2	0xB240    SXTB	R0, R0
0x61E4	0xE004    B	L_end_mkNod
;__Lib_MmcFat16.c, 884 :: 		
L___Lib_MmcFat16_mkNod131:
;__Lib_MmcFat16.c, 887 :: 		
0x61E6	0x2406    MOVS	R4, #6
0x61E8	0x4B03    LDR	R3, [PC, #12]
0x61EA	0x701C    STRB	R4, [R3, #0]
;__Lib_MmcFat16.c, 888 :: 		
0x61EC	0x20FF    MOVS	R0, #-1
0x61EE	0xB240    SXTB	R0, R0
;__Lib_MmcFat16.c, 889 :: 		
L_end_mkNod:
0x61F0	0xF8DDE000  LDR	LR, [SP, #0]
0x61F4	0xB007    ADD	SP, SP, #28
0x61F6	0x4770    BX	LR
0x61F8	0x2A912000  	___f16_errno+0
0x61FC	0x2AC22000  	__Lib_MmcFat16_f16_boot+2
0x6200	0x2AD42000  	__Lib_MmcFat16_f16_boot+20
0x6204	0x2AD02000  	__Lib_MmcFat16_f16_boot+16
0x6208	0x2AD82000  	__Lib_MmcFat16_f16_currentDir+0
0x620C	0x2AC82000  	__Lib_MmcFat16_f16_boot+8
0x6210	0x2A922000  	__Lib_MmcFat16_f16_dirEntryPerSect+0
0x6214	0x2ADC2000  	_f16_sector+0
0x6218	0x2CDC2000  	_f16_sector+512
0x621C	0x2CE42000  	__Lib_MmcFat16_f16_time+0
0x6220	0x2CE52000  	__Lib_MmcFat16_f16_time+1
0x6224	0x2CE62000  	__Lib_MmcFat16_f16_date+0
0x6228	0x2CE72000  	__Lib_MmcFat16_f16_date+1
0x622C	0x2CE02000  	__Lib_MmcFat16_f16_sectBuffEnd+0
; end of __Lib_MmcFat16_mkNod
__Lib_MmcFat16_getFatFreeCluster:
;__Lib_MmcFat16.c, 505 :: 		
0x2C08	0xB083    SUB	SP, SP, #12
0x2C0A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MmcFat16.c, 514 :: 		
0x2C0E	0x4A30    LDR	R2, [PC, #192]
0x2C10	0x8811    LDRH	R1, [R2, #0]
0x2C12	0x4830    LDR	R0, [PC, #192]
0x2C14	0x8800    LDRH	R0, [R0, #0]
0x2C16	0x4348    MULS	R0, R1, R0
0x2C18	0xF8AD0004  STRH	R0, [SP, #4]
;__Lib_MmcFat16.c, 516 :: 		
0x2C1C	0x2002    MOVS	R0, #2
0x2C1E	0xF8AD0006  STRH	R0, [SP, #6]
;__Lib_MmcFat16.c, 518 :: 		
0x2C22	0x4610    MOV	R0, R2
0x2C24	0x8801    LDRH	R1, [R0, #0]
0x2C26	0xF2400002  MOVW	R0, #2
0x2C2A	0xFBB0F0F1  UDIV	R0, R0, R1
0x2C2E	0xB280    UXTH	R0, R0
; s start address is: 4 (R1)
0x2C30	0xB281    UXTH	R1, R0
;__Lib_MmcFat16.c, 519 :: 		
0x2C32	0x4829    LDR	R0, [PC, #164]
0x2C34	0x6800    LDR	R0, [R0, #0]
0x2C36	0x1808    ADDS	R0, R1, R0
; s end address is: 4 (R1)
; s start address is: 12 (R3)
0x2C38	0x4603    MOV	R3, R0
;__Lib_MmcFat16.c, 521 :: 		
0x2C3A	0x4610    MOV	R0, R2
0x2C3C	0x8802    LDRH	R2, [R0, #0]
0x2C3E	0xF2400102  MOVW	R1, #2
0x2C42	0xFBB1F0F2  UDIV	R0, R1, R2
0x2C46	0xFB021010  MLS	R0, R2, R0, R1
0x2C4A	0xB280    UXTH	R0, R0
;__Lib_MmcFat16.c, 522 :: 		
0x2C4C	0x0041    LSLS	R1, R0, #1
0x2C4E	0xB289    UXTH	R1, R1
;__Lib_MmcFat16.c, 524 :: 		
0x2C50	0x4822    LDR	R0, [PC, #136]
0x2C52	0x1840    ADDS	R0, R0, R1
0x2C54	0x9002    STR	R0, [SP, #8]
;__Lib_MmcFat16.c, 526 :: 		
0x2C56	0x4618    MOV	R0, R3
; s end address is: 12 (R3)
0x2C58	0xF000F8CA  BL	_Mmc_Multi_Read_Start+0
;__Lib_MmcFat16.c, 527 :: 		
0x2C5C	0x2101    MOVS	R1, #1
0x2C5E	0x4820    LDR	R0, [PC, #128]
0x2C60	0x7001    STRB	R1, [R0, #0]
;__Lib_MmcFat16.c, 528 :: 		
0x2C62	0x481E    LDR	R0, [PC, #120]
0x2C64	0xF000F8D0  BL	_Mmc_Multi_Read_Sector+0
;__Lib_MmcFat16.c, 529 :: 		
L___Lib_MmcFat16_getFatFreeCluster76:
0x2C68	0xF8BD1004  LDRH	R1, [SP, #4]
0x2C6C	0xF8BD0006  LDRH	R0, [SP, #6]
0x2C70	0x4288    CMP	R0, R1
0x2C72	0xD215    BCS	L___Lib_MmcFat16_getFatFreeCluster77
;__Lib_MmcFat16.c, 531 :: 		
0x2C74	0x9802    LDR	R0, [SP, #8]
0x2C76	0x8800    LDRH	R0, [R0, #0]
0x2C78	0xB900    CBNZ	R0, L___Lib_MmcFat16_getFatFreeCluster78
;__Lib_MmcFat16.c, 532 :: 		
0x2C7A	0xE011    B	L___Lib_MmcFat16_getFatFreeCluster77
L___Lib_MmcFat16_getFatFreeCluster78:
;__Lib_MmcFat16.c, 534 :: 		
0x2C7C	0x9802    LDR	R0, [SP, #8]
0x2C7E	0x1C81    ADDS	R1, R0, #2
0x2C80	0x9102    STR	R1, [SP, #8]
;__Lib_MmcFat16.c, 535 :: 		
0x2C82	0xF8BD0006  LDRH	R0, [SP, #6]
0x2C86	0x1C40    ADDS	R0, R0, #1
0x2C88	0xF8AD0006  STRH	R0, [SP, #6]
;__Lib_MmcFat16.c, 537 :: 		
0x2C8C	0x4815    LDR	R0, [PC, #84]
0x2C8E	0x6800    LDR	R0, [R0, #0]
0x2C90	0x4281    CMP	R1, R0
0x2C92	0xD104    BNE	L___Lib_MmcFat16_getFatFreeCluster79
;__Lib_MmcFat16.c, 539 :: 		
0x2C94	0x4811    LDR	R0, [PC, #68]
0x2C96	0x9002    STR	R0, [SP, #8]
;__Lib_MmcFat16.c, 540 :: 		
0x2C98	0x4810    LDR	R0, [PC, #64]
0x2C9A	0xF000F8B5  BL	_Mmc_Multi_Read_Sector+0
;__Lib_MmcFat16.c, 541 :: 		
L___Lib_MmcFat16_getFatFreeCluster79:
;__Lib_MmcFat16.c, 542 :: 		
0x2C9E	0xE7E3    B	L___Lib_MmcFat16_getFatFreeCluster76
L___Lib_MmcFat16_getFatFreeCluster77:
;__Lib_MmcFat16.c, 544 :: 		
0x2CA0	0xF000F89A  BL	_Mmc_Multi_Read_Stop+0
0x2CA4	0xB128    CBZ	R0, L___Lib_MmcFat16_getFatFreeCluster80
;__Lib_MmcFat16.c, 546 :: 		
0x2CA6	0x2110    MOVS	R1, #16
0x2CA8	0x480F    LDR	R0, [PC, #60]
0x2CAA	0x7001    STRB	R1, [R0, #0]
;__Lib_MmcFat16.c, 547 :: 		
0x2CAC	0xF64F70FF  MOVW	R0, #65535
0x2CB0	0xE00A    B	L_end_getFatFreeCluster
;__Lib_MmcFat16.c, 548 :: 		
L___Lib_MmcFat16_getFatFreeCluster80:
;__Lib_MmcFat16.c, 550 :: 		
0x2CB2	0xF8BD1004  LDRH	R1, [SP, #4]
0x2CB6	0xF8BD0006  LDRH	R0, [SP, #6]
0x2CBA	0x4288    CMP	R0, R1
0x2CBC	0xD102    BNE	L___Lib_MmcFat16_getFatFreeCluster81
;__Lib_MmcFat16.c, 551 :: 		
0x2CBE	0xF64F70FF  MOVW	R0, #65535
0x2CC2	0xE001    B	L_end_getFatFreeCluster
L___Lib_MmcFat16_getFatFreeCluster81:
;__Lib_MmcFat16.c, 553 :: 		
0x2CC4	0xF8BD0006  LDRH	R0, [SP, #6]
;__Lib_MmcFat16.c, 554 :: 		
L_end_getFatFreeCluster:
0x2CC8	0xF8DDE000  LDR	LR, [SP, #0]
0x2CCC	0xB003    ADD	SP, SP, #12
0x2CCE	0x4770    BX	LR
0x2CD0	0x2CE82000  	__Lib_MmcFat16_f16_clustPerSect+0
0x2CD4	0x2ACA2000  	__Lib_MmcFat16_f16_boot+10
0x2CD8	0x2ACC2000  	__Lib_MmcFat16_f16_boot+12
0x2CDC	0x2ADC2000  	_f16_sector+0
0x2CE0	0x2CDC2000  	_f16_sector+512
0x2CE4	0x2CE02000  	__Lib_MmcFat16_f16_sectBuffEnd+0
0x2CE8	0x2A912000  	___f16_errno+0
; end of __Lib_MmcFat16_getFatFreeCluster
__Lib_MmcFat16_putFatEntry:
;__Lib_MmcFat16.c, 456 :: 		
; c start address is: 0 (R0)
0x2CEC	0xB085    SUB	SP, SP, #20
0x2CEE	0xF8CDE000  STR	LR, [SP, #0]
0x2CF2	0xF8AD1010  STRH	R1, [SP, #16]
0x2CF6	0xB281    UXTH	R1, R0
; c end address is: 0 (R0)
; c start address is: 4 (R1)
;__Lib_MmcFat16.c, 463 :: 		
0x2CF8	0x4A30    LDR	R2, [PC, #192]
0x2CFA	0x8812    LDRH	R2, [R2, #0]
0x2CFC	0xFBB1F2F2  UDIV	R2, R1, R2
0x2D00	0xB292    UXTH	R2, R2
0x2D02	0x9203    STR	R2, [SP, #12]
;__Lib_MmcFat16.c, 464 :: 		
0x2D04	0x4A2E    LDR	R2, [PC, #184]
0x2D06	0x6813    LDR	R3, [R2, #0]
0x2D08	0x9A03    LDR	R2, [SP, #12]
0x2D0A	0x18D4    ADDS	R4, R2, R3
0x2D0C	0x9403    STR	R4, [SP, #12]
;__Lib_MmcFat16.c, 466 :: 		
0x2D0E	0x2301    MOVS	R3, #1
0x2D10	0x4A2C    LDR	R2, [PC, #176]
0x2D12	0x7013    STRB	R3, [R2, #0]
;__Lib_MmcFat16.c, 467 :: 		
0x2D14	0xF8AD1004  STRH	R1, [SP, #4]
0x2D18	0x492B    LDR	R1, [PC, #172]
0x2D1A	0x4620    MOV	R0, R4
0x2D1C	0xF002FFC4  BL	_Mmc_Read_Sector+0
0x2D20	0xF8BD1004  LDRH	R1, [SP, #4]
0x2D24	0xB128    CBZ	R0, L___Lib_MmcFat16_putFatEntry70
; c end address is: 4 (R1)
;__Lib_MmcFat16.c, 469 :: 		
0x2D26	0x2310    MOVS	R3, #16
0x2D28	0x4A28    LDR	R2, [PC, #160]
0x2D2A	0x7013    STRB	R3, [R2, #0]
;__Lib_MmcFat16.c, 470 :: 		
0x2D2C	0xF64F70FF  MOVW	R0, #65535
0x2D30	0xE040    B	L_end_putFatEntry
;__Lib_MmcFat16.c, 471 :: 		
L___Lib_MmcFat16_putFatEntry70:
;__Lib_MmcFat16.c, 474 :: 		
; c start address is: 4 (R1)
0x2D32	0x4A22    LDR	R2, [PC, #136]
0x2D34	0x8813    LDRH	R3, [R2, #0]
0x2D36	0xFBB1F2F3  UDIV	R2, R1, R3
0x2D3A	0xFB031212  MLS	R2, R3, R2, R1
0x2D3E	0xB292    UXTH	R2, R2
; c end address is: 4 (R1)
;__Lib_MmcFat16.c, 475 :: 		
0x2D40	0x0053    LSLS	R3, R2, #1
0x2D42	0xB29B    UXTH	R3, R3
; o start address is: 0 (R0)
0x2D44	0xB298    UXTH	R0, R3
;__Lib_MmcFat16.c, 478 :: 		
0x2D46	0x4A20    LDR	R2, [PC, #128]
0x2D48	0x18D3    ADDS	R3, R2, R3
0x2D4A	0xAC04    ADD	R4, SP, #16
0x2D4C	0x7822    LDRB	R2, [R4, #0]
0x2D4E	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 479 :: 		
0x2D50	0x1C43    ADDS	R3, R0, #1
0x2D52	0xB29B    UXTH	R3, R3
; o end address is: 0 (R0)
0x2D54	0x4A1C    LDR	R2, [PC, #112]
0x2D56	0x18D3    ADDS	R3, R2, R3
0x2D58	0x1C62    ADDS	R2, R4, #1
0x2D5A	0x7812    LDRB	R2, [R2, #0]
0x2D5C	0x701A    STRB	R2, [R3, #0]
;__Lib_MmcFat16.c, 482 :: 		
0x2D5E	0x491A    LDR	R1, [PC, #104]
0x2D60	0x9803    LDR	R0, [SP, #12]
0x2D62	0xF7FEFC5D  BL	_Mmc_Write_Sector+0
0x2D66	0xB128    CBZ	R0, L___Lib_MmcFat16_putFatEntry71
;__Lib_MmcFat16.c, 484 :: 		
0x2D68	0x2305    MOVS	R3, #5
0x2D6A	0x4A18    LDR	R2, [PC, #96]
0x2D6C	0x7013    STRB	R3, [R2, #0]
;__Lib_MmcFat16.c, 485 :: 		
0x2D6E	0xF64F70FF  MOVW	R0, #65535
0x2D72	0xE01F    B	L_end_putFatEntry
;__Lib_MmcFat16.c, 486 :: 		
L___Lib_MmcFat16_putFatEntry71:
;__Lib_MmcFat16.c, 489 :: 		
0x2D74	0x2201    MOVS	R2, #1
0x2D76	0xF8AD2008  STRH	R2, [SP, #8]
L___Lib_MmcFat16_putFatEntry72:
0x2D7A	0x4A15    LDR	R2, [PC, #84]
0x2D7C	0x7813    LDRB	R3, [R2, #0]
0x2D7E	0xF8BD2008  LDRH	R2, [SP, #8]
0x2D82	0x429A    CMP	R2, R3
0x2D84	0xD215    BCS	L___Lib_MmcFat16_putFatEntry73
;__Lib_MmcFat16.c, 491 :: 		
0x2D86	0x4A13    LDR	R2, [PC, #76]
0x2D88	0x8813    LDRH	R3, [R2, #0]
0x2D8A	0x9A03    LDR	R2, [SP, #12]
0x2D8C	0x18D2    ADDS	R2, R2, R3
0x2D8E	0x9203    STR	R2, [SP, #12]
;__Lib_MmcFat16.c, 492 :: 		
0x2D90	0x490D    LDR	R1, [PC, #52]
0x2D92	0x4610    MOV	R0, R2
0x2D94	0xF7FEFC44  BL	_Mmc_Write_Sector+0
0x2D98	0xB128    CBZ	R0, L___Lib_MmcFat16_putFatEntry75
;__Lib_MmcFat16.c, 494 :: 		
0x2D9A	0x2305    MOVS	R3, #5
0x2D9C	0x4A0B    LDR	R2, [PC, #44]
0x2D9E	0x7013    STRB	R3, [R2, #0]
;__Lib_MmcFat16.c, 495 :: 		
0x2DA0	0xF64F70FF  MOVW	R0, #65535
0x2DA4	0xE006    B	L_end_putFatEntry
;__Lib_MmcFat16.c, 496 :: 		
L___Lib_MmcFat16_putFatEntry75:
;__Lib_MmcFat16.c, 489 :: 		
0x2DA6	0xF8BD2008  LDRH	R2, [SP, #8]
0x2DAA	0x1C52    ADDS	R2, R2, #1
0x2DAC	0xF8AD2008  STRH	R2, [SP, #8]
;__Lib_MmcFat16.c, 497 :: 		
0x2DB0	0xE7E3    B	L___Lib_MmcFat16_putFatEntry72
L___Lib_MmcFat16_putFatEntry73:
;__Lib_MmcFat16.c, 499 :: 		
0x2DB2	0x2000    MOVS	R0, #0
;__Lib_MmcFat16.c, 500 :: 		
L_end_putFatEntry:
0x2DB4	0xF8DDE000  LDR	LR, [SP, #0]
0x2DB8	0xB005    ADD	SP, SP, #20
0x2DBA	0x4770    BX	LR
0x2DBC	0x2CE82000  	__Lib_MmcFat16_f16_clustPerSect+0
0x2DC0	0x2ACC2000  	__Lib_MmcFat16_f16_boot+12
0x2DC4	0x2CDC2000  	_f16_sector+512
0x2DC8	0x2ADC2000  	_f16_sector+0
0x2DCC	0x2A912000  	___f16_errno+0
0x2DD0	0x2AC62000  	__Lib_MmcFat16_f16_boot+6
0x2DD4	0x2ACA2000  	__Lib_MmcFat16_f16_boot+10
; end of __Lib_MmcFat16_putFatEntry
_Mmc_Write_Sector:
;__Lib_Mmc_SDIO.c, 109 :: 		
; dbuff start address is: 4 (R1)
; sector start address is: 0 (R0)
0x1620	0xB081    SUB	SP, SP, #4
0x1622	0xF8CDE000  STR	LR, [SP, #0]
; dbuff end address is: 4 (R1)
; sector end address is: 0 (R0)
; sector start address is: 0 (R0)
; dbuff start address is: 4 (R1)
;__Lib_Mmc_SDIO.c, 110 :: 		
; dbuff end address is: 4 (R1)
; sector end address is: 0 (R0)
0x1626	0x4C03    LDR	R4, [PC, #12]
0x1628	0x6824    LDR	R4, [R4, #0]
0x162A	0x47A0    BLX	R4
;__Lib_Mmc_SDIO.c, 111 :: 		
L_end_Mmc_Write_Sector:
0x162C	0xF8DDE000  LDR	LR, [SP, #0]
0x1630	0xB001    ADD	SP, SP, #4
0x1632	0x4770    BX	LR
0x1634	0x03002000  	__Lib_Mmc_SDIO_Mmc_Write_Sector_Ptr+0
; end of _Mmc_Write_Sector
_Mmc_Fat_Reset:
;__Lib_MmcFat16.c, 1927 :: 		
; size start address is: 0 (R0)
0xCE70	0xB082    SUB	SP, SP, #8
0xCE72	0xF8CDE000  STR	LR, [SP, #0]
; size end address is: 0 (R0)
; size start address is: 0 (R0)
;__Lib_MmcFat16.c, 1929 :: 		
0xCE76	0x490C    LDR	R1, [PC, #48]
0xCE78	0x8809    LDRH	R1, [R1, #0]
0xCE7A	0xF0010101  AND	R1, R1, #1
0xCE7E	0xB289    UXTH	R1, R1
0xCE80	0xB929    CBNZ	R1, L_Mmc_Fat_Reset302
;__Lib_MmcFat16.c, 1931 :: 		
0xCE82	0x2100    MOVS	R1, #0
0xCE84	0x6001    STR	R1, [R0, #0]
; size end address is: 0 (R0)
;__Lib_MmcFat16.c, 1932 :: 		
0xCE86	0x2207    MOVS	R2, #7
0xCE88	0x4908    LDR	R1, [PC, #32]
0xCE8A	0x700A    STRB	R2, [R1, #0]
;__Lib_MmcFat16.c, 1933 :: 		
0xCE8C	0xE007    B	L_end_Mmc_Fat_Reset
;__Lib_MmcFat16.c, 1934 :: 		
L_Mmc_Fat_Reset302:
;__Lib_MmcFat16.c, 1936 :: 		
; size start address is: 0 (R0)
0xCE8E	0x9001    STR	R0, [SP, #4]
0xCE90	0x2000    MOVS	R0, #0
0xCE92	0xF7FCFC73  BL	_Mmc_Fat_Seek+0
0xCE96	0x9801    LDR	R0, [SP, #4]
;__Lib_MmcFat16.c, 1938 :: 		
0xCE98	0x4905    LDR	R1, [PC, #20]
0xCE9A	0x6809    LDR	R1, [R1, #0]
0xCE9C	0x6001    STR	R1, [R0, #0]
; size end address is: 0 (R0)
;__Lib_MmcFat16.c, 1939 :: 		
L_end_Mmc_Fat_Reset:
0xCE9E	0xF8DDE000  LDR	LR, [SP, #0]
0xCEA2	0xB002    ADD	SP, SP, #8
0xCEA4	0x4770    BX	LR
0xCEA6	0xBF00    NOP
0xCEA8	0x2ABC2000  	__Lib_MmcFat16_f16_cFD+28
0xCEAC	0x2A912000  	___f16_errno+0
0xCEB0	0x2AB82000  	__Lib_MmcFat16_f16_cFD+24
; end of _Mmc_Fat_Reset
_Mmc_Fat_Seek:
;__Lib_MmcFat16.c, 1646 :: 		
; pos start address is: 0 (R0)
0x977C	0xB082    SUB	SP, SP, #8
0x977E	0xF8CDE000  STR	LR, [SP, #0]
; pos end address is: 0 (R0)
; pos start address is: 0 (R0)
;__Lib_MmcFat16.c, 1653 :: 		
0x9782	0x4938    LDR	R1, [PC, #224]
0x9784	0x8809    LDRH	R1, [R1, #0]
0x9786	0xB929    CBNZ	R1, L_Mmc_Fat_Seek240
; pos end address is: 0 (R0)
;__Lib_MmcFat16.c, 1655 :: 		
0x9788	0x2207    MOVS	R2, #7
0x978A	0x4937    LDR	R1, [PC, #220]
0x978C	0x700A    STRB	R2, [R1, #0]
;__Lib_MmcFat16.c, 1656 :: 		
0x978E	0xF04F30FF  MOV	R0, #-1
0x9792	0xE062    B	L_end_Mmc_Fat_Seek
;__Lib_MmcFat16.c, 1657 :: 		
L_Mmc_Fat_Seek240:
;__Lib_MmcFat16.c, 1659 :: 		
; pos start address is: 0 (R0)
0x9794	0x2201    MOVS	R2, #1
0x9796	0x4935    LDR	R1, [PC, #212]
0x9798	0x700A    STRB	R2, [R1, #0]
;__Lib_MmcFat16.c, 1664 :: 		
0x979A	0x4935    LDR	R1, [PC, #212]
0x979C	0x6809    LDR	R1, [R1, #0]
0x979E	0x4288    CMP	R0, R1
0x97A0	0xD904    BLS	L_Mmc_Fat_Seek241
; pos end address is: 0 (R0)
;__Lib_MmcFat16.c, 1666 :: 		
0x97A2	0x4933    LDR	R1, [PC, #204]
0x97A4	0x680A    LDR	R2, [R1, #0]
0x97A6	0x4933    LDR	R1, [PC, #204]
0x97A8	0x600A    STR	R2, [R1, #0]
;__Lib_MmcFat16.c, 1667 :: 		
0x97AA	0xE001    B	L_Mmc_Fat_Seek242
L_Mmc_Fat_Seek241:
;__Lib_MmcFat16.c, 1670 :: 		
; pos start address is: 0 (R0)
0x97AC	0x4931    LDR	R1, [PC, #196]
0x97AE	0x6008    STR	R0, [R1, #0]
; pos end address is: 0 (R0)
;__Lib_MmcFat16.c, 1671 :: 		
L_Mmc_Fat_Seek242:
;__Lib_MmcFat16.c, 1676 :: 		
0x97B0	0x4931    LDR	R1, [PC, #196]
0x97B2	0x880A    LDRH	R2, [R1, #0]
0x97B4	0x492F    LDR	R1, [PC, #188]
0x97B6	0x6809    LDR	R1, [R1, #0]
0x97B8	0xFBB1F2F2  UDIV	R2, R1, R2
0x97BC	0x492F    LDR	R1, [PC, #188]
0x97BE	0x8809    LDRH	R1, [R1, #0]
0x97C0	0xFBB2F1F1  UDIV	R1, R2, R1
; cl start address is: 0 (R0)
0x97C4	0xB288    UXTH	R0, R1
;__Lib_MmcFat16.c, 1677 :: 		
0x97C6	0x492E    LDR	R1, [PC, #184]
0x97C8	0x880A    LDRH	R2, [R1, #0]
0x97CA	0x492E    LDR	R1, [PC, #184]
0x97CC	0x800A    STRH	R2, [R1, #0]
; cl end address is: 0 (R0)
0x97CE	0xB282    UXTH	R2, R0
;__Lib_MmcFat16.c, 1678 :: 		
L_Mmc_Fat_Seek243:
; cl start address is: 8 (R2)
0x97D0	0x2A00    CMP	R2, #0
0x97D2	0xD91A    BLS	L_Mmc_Fat_Seek244
;__Lib_MmcFat16.c, 1680 :: 		
0x97D4	0x492B    LDR	R1, [PC, #172]
0x97D6	0x8809    LDRH	R1, [R1, #0]
0x97D8	0xF8AD2004  STRH	R2, [SP, #4]
0x97DC	0xB288    UXTH	R0, R1
0x97DE	0xF7FCFDBB  BL	__Lib_MmcFat16_getFatEntry+0
0x97E2	0xF8BD2004  LDRH	R2, [SP, #4]
0x97E6	0x4927    LDR	R1, [PC, #156]
0x97E8	0x8008    STRH	R0, [R1, #0]
0x97EA	0xF64F71FF  MOVW	R1, #65535
0x97EE	0x4288    CMP	R0, R1
0x97F0	0xD108    BNE	L_Mmc_Fat_Seek245
; cl end address is: 8 (R2)
;__Lib_MmcFat16.c, 1682 :: 		
0x97F2	0x491F    LDR	R1, [PC, #124]
0x97F4	0x680A    LDR	R2, [R1, #0]
0x97F6	0x491F    LDR	R1, [PC, #124]
0x97F8	0x600A    STR	R2, [R1, #0]
;__Lib_MmcFat16.c, 1683 :: 		
0x97FA	0x220A    MOVS	R2, #10
0x97FC	0x491A    LDR	R1, [PC, #104]
0x97FE	0x700A    STRB	R2, [R1, #0]
;__Lib_MmcFat16.c, 1684 :: 		
0x9800	0x2000    MOVS	R0, #0
0x9802	0xE02A    B	L_end_Mmc_Fat_Seek
;__Lib_MmcFat16.c, 1685 :: 		
L_Mmc_Fat_Seek245:
;__Lib_MmcFat16.c, 1686 :: 		
; cl start address is: 8 (R2)
0x9804	0x1E52    SUBS	R2, R2, #1
0x9806	0xB292    UXTH	R2, R2
;__Lib_MmcFat16.c, 1687 :: 		
; cl end address is: 8 (R2)
0x9808	0xE7E2    B	L_Mmc_Fat_Seek243
L_Mmc_Fat_Seek244:
;__Lib_MmcFat16.c, 1689 :: 		
0x980A	0x4E1B    LDR	R6, [PC, #108]
0x980C	0x8832    LDRH	R2, [R6, #0]
0x980E	0x4D19    LDR	R5, [PC, #100]
0x9810	0x6829    LDR	R1, [R5, #0]
0x9812	0xFBB1F3F2  UDIV	R3, R1, R2
0x9816	0x4C19    LDR	R4, [PC, #100]
0x9818	0x8822    LDRH	R2, [R4, #0]
0x981A	0xFBB3F1F2  UDIV	R1, R3, R2
0x981E	0xFB023111  MLS	R1, R2, R1, R3
0x9822	0x4B19    LDR	R3, [PC, #100]
0x9824	0x8019    STRH	R1, [R3, #0]
;__Lib_MmcFat16.c, 1690 :: 		
0x9826	0x4917    LDR	R1, [PC, #92]
0x9828	0x8809    LDRH	R1, [R1, #0]
0x982A	0x1E8A    SUBS	R2, R1, #2
0x982C	0x4621    MOV	R1, R4
0x982E	0x8809    LDRH	R1, [R1, #0]
0x9830	0x434A    MULS	R2, R1, R2
0x9832	0x4916    LDR	R1, [PC, #88]
0x9834	0x6809    LDR	R1, [R1, #0]
0x9836	0x188A    ADDS	R2, R1, R2
0x9838	0x4619    MOV	R1, R3
0x983A	0x8809    LDRH	R1, [R1, #0]
0x983C	0x1852    ADDS	R2, R2, R1
0x983E	0x4914    LDR	R1, [PC, #80]
0x9840	0x600A    STR	R2, [R1, #0]
;__Lib_MmcFat16.c, 1691 :: 		
0x9842	0x4631    MOV	R1, R6
0x9844	0x880B    LDRH	R3, [R1, #0]
0x9846	0x4629    MOV	R1, R5
0x9848	0x6809    LDR	R1, [R1, #0]
0x984A	0xFBB1F2F3  UDIV	R2, R1, R3
0x984E	0xFB031212  MLS	R2, R3, R2, R1
0x9852	0x4910    LDR	R1, [PC, #64]
0x9854	0x800A    STRH	R2, [R1, #0]
;__Lib_MmcFat16.c, 1693 :: 		
0x9856	0x4629    MOV	R1, R5
0x9858	0x6808    LDR	R0, [R1, #0]
;__Lib_MmcFat16.c, 1694 :: 		
L_end_Mmc_Fat_Seek:
0x985A	0xF8DDE000  LDR	LR, [SP, #0]
0x985E	0xB002    ADD	SP, SP, #8
0x9860	0x4770    BX	LR
0x9862	0xBF00    NOP
0x9864	0x2ABC2000  	__Lib_MmcFat16_f16_cFD+28
0x9868	0x2A912000  	___f16_errno+0
0x986C	0x2CDC2000  	_f16_sector+512
0x9870	0x2AB82000  	__Lib_MmcFat16_f16_cFD+24
0x9874	0x2AA82000  	__Lib_MmcFat16_f16_cFD+8
0x9878	0x2AC02000  	__Lib_MmcFat16_f16_boot+0
0x987C	0x2AC22000  	__Lib_MmcFat16_f16_boot+2
0x9880	0x2AA62000  	__Lib_MmcFat16_f16_cFD+6
0x9884	0x2AAC2000  	__Lib_MmcFat16_f16_cFD+12
0x9888	0x2AB42000  	__Lib_MmcFat16_f16_cFD+20
0x988C	0x2AD42000  	__Lib_MmcFat16_f16_boot+20
0x9890	0x2AB02000  	__Lib_MmcFat16_f16_cFD+16
0x9894	0x2AB62000  	__Lib_MmcFat16_f16_cFD+22
; end of _Mmc_Fat_Seek
__Lib_MmcFat16_getFatEntry:
;__Lib_MmcFat16.c, 428 :: 		
; c start address is: 0 (R0)
0x6358	0xB082    SUB	SP, SP, #8
0x635A	0xF8CDE000  STR	LR, [SP, #0]
0x635E	0xB284    UXTH	R4, R0
; c end address is: 0 (R0)
; c start address is: 16 (R4)
;__Lib_MmcFat16.c, 434 :: 		
0x6360	0x4916    LDR	R1, [PC, #88]
0x6362	0x8809    LDRH	R1, [R1, #0]
0x6364	0xFBB4F1F1  UDIV	R1, R4, R1
0x6368	0xB289    UXTH	R1, R1
; s start address is: 0 (R0)
0x636A	0xB288    UXTH	R0, R1
;__Lib_MmcFat16.c, 435 :: 		
0x636C	0x4914    LDR	R1, [PC, #80]
0x636E	0x6809    LDR	R1, [R1, #0]
0x6370	0x1843    ADDS	R3, R0, R1
; s end address is: 0 (R0)
;__Lib_MmcFat16.c, 437 :: 		
0x6372	0x2201    MOVS	R2, #1
0x6374	0x4913    LDR	R1, [PC, #76]
0x6376	0x700A    STRB	R2, [R1, #0]
;__Lib_MmcFat16.c, 438 :: 		
0x6378	0xF8AD4004  STRH	R4, [SP, #4]
0x637C	0x4912    LDR	R1, [PC, #72]
0x637E	0x4618    MOV	R0, R3
0x6380	0xF7FFFC92  BL	_Mmc_Read_Sector+0
0x6384	0xF8BD4004  LDRH	R4, [SP, #4]
0x6388	0xB128    CBZ	R0, L___Lib_MmcFat16_getFatEntry69
; c end address is: 16 (R4)
;__Lib_MmcFat16.c, 440 :: 		
0x638A	0x2210    MOVS	R2, #16
0x638C	0x490F    LDR	R1, [PC, #60]
0x638E	0x700A    STRB	R2, [R1, #0]
;__Lib_MmcFat16.c, 441 :: 		
0x6390	0xF64F70FF  MOVW	R0, #65535
0x6394	0xE00D    B	L_end_getFatEntry
;__Lib_MmcFat16.c, 442 :: 		
L___Lib_MmcFat16_getFatEntry69:
;__Lib_MmcFat16.c, 445 :: 		
; c start address is: 16 (R4)
0x6396	0x4909    LDR	R1, [PC, #36]
0x6398	0x880A    LDRH	R2, [R1, #0]
0x639A	0xFBB4F1F2  UDIV	R1, R4, R2
0x639E	0xFB024111  MLS	R1, R2, R1, R4
0x63A2	0xB289    UXTH	R1, R1
; c end address is: 16 (R4)
;__Lib_MmcFat16.c, 446 :: 		
0x63A4	0x004A    LSLS	R2, R1, #1
0x63A6	0xB292    UXTH	R2, R2
;__Lib_MmcFat16.c, 449 :: 		
0x63A8	0x4907    LDR	R1, [PC, #28]
0x63AA	0x1889    ADDS	R1, R1, R2
0x63AC	0x4608    MOV	R0, R1
0x63AE	0xF7FCFB47  BL	__Lib_MmcFat16_f16_toInt+0
;__Lib_MmcFat16.c, 450 :: 		
;__Lib_MmcFat16.c, 451 :: 		
L_end_getFatEntry:
0x63B2	0xF8DDE000  LDR	LR, [SP, #0]
0x63B6	0xB002    ADD	SP, SP, #8
0x63B8	0x4770    BX	LR
0x63BA	0xBF00    NOP
0x63BC	0x2CE82000  	__Lib_MmcFat16_f16_clustPerSect+0
0x63C0	0x2ACC2000  	__Lib_MmcFat16_f16_boot+12
0x63C4	0x2CDC2000  	_f16_sector+512
0x63C8	0x2ADC2000  	_f16_sector+0
0x63CC	0x2A912000  	___f16_errno+0
; end of __Lib_MmcFat16_getFatEntry
Ducati_logger_driver_InitializeTouchPanel:
;Ducati_logger_driver.c, 124 :: 		static void InitializeTouchPanel() {
0xE790	0xB081    SUB	SP, SP, #4
0xE792	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_driver.c, 125 :: 		TFT_Set_Active(Set_Index, Write_Command, Write_Data);
0xE796	0x4A0E    LDR	R2, [PC, #56]
0xE798	0x490E    LDR	R1, [PC, #56]
0xE79A	0x480F    LDR	R0, [PC, #60]
0xE79C	0xF7FEFC32  BL	_TFT_Set_Active+0
;Ducati_logger_driver.c, 126 :: 		TFT_Init_SSD1963(480, 272);
0xE7A0	0xF2401110  MOVW	R1, #272
0xE7A4	0xF24010E0  MOVW	R0, #480
0xE7A8	0xF7FEFD26  BL	_TFT_Init_SSD1963+0
;Ducati_logger_driver.c, 127 :: 		TFT_Set_Ext_Buffer(TFT_Get_Data);
0xE7AC	0x480B    LDR	R0, [PC, #44]
0xE7AE	0xF7FEFD1B  BL	_TFT_Set_Ext_Buffer+0
;Ducati_logger_driver.c, 130 :: 		PenDown = 0;
0xE7B2	0x2100    MOVS	R1, #0
0xE7B4	0x480A    LDR	R0, [PC, #40]
0xE7B6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 131 :: 		PressedObject = 0;
0xE7B8	0x2100    MOVS	R1, #0
0xE7BA	0x480A    LDR	R0, [PC, #40]
0xE7BC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 132 :: 		PressedObjectType = -1;
0xE7BE	0xF64F71FF  MOVW	R1, #65535
0xE7C2	0xB209    SXTH	R1, R1
0xE7C4	0x4808    LDR	R0, [PC, #32]
0xE7C6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 133 :: 		}
L_end_InitializeTouchPanel:
0xE7C8	0xF8DDE000  LDR	LR, [SP, #0]
0xE7CC	0xB001    ADD	SP, SP, #4
0xE7CE	0x4770    BX	LR
0xE7D0	0xC8D90000  	_Write_Data+0
0xE7D4	0x6B950000  	_Write_Command+0
0xE7D8	0x6BCD0000  	_Set_Index+0
0xE7DC	0x253D0000  	_TFT_Get_Data+0
0xE7E0	0x22292000  	_PenDown+0
0xE7E4	0x22502000  	_PressedObject+0
0xE7E8	0x224E2000  	_PressedObjectType+0
; end of Ducati_logger_driver_InitializeTouchPanel
_TFT_Set_Active:
;__Lib_TFT.c, 159 :: 		
; Write_Data_Ptr start address is: 8 (R2)
; Write_Command_Ptr start address is: 4 (R1)
; Set_Index_Ptr start address is: 0 (R0)
0xD004	0xB081    SUB	SP, SP, #4
; Write_Data_Ptr end address is: 8 (R2)
; Write_Command_Ptr end address is: 4 (R1)
; Set_Index_Ptr end address is: 0 (R0)
; Set_Index_Ptr start address is: 0 (R0)
; Write_Command_Ptr start address is: 4 (R1)
; Write_Data_Ptr start address is: 8 (R2)
;__Lib_TFT.c, 160 :: 		
0xD006	0x4B05    LDR	R3, [PC, #20]
0xD008	0x6018    STR	R0, [R3, #0]
; Set_Index_Ptr end address is: 0 (R0)
;__Lib_TFT.c, 161 :: 		
0xD00A	0x4B05    LDR	R3, [PC, #20]
0xD00C	0x6019    STR	R1, [R3, #0]
; Write_Command_Ptr end address is: 4 (R1)
;__Lib_TFT.c, 162 :: 		
0xD00E	0x4B05    LDR	R3, [PC, #20]
0xD010	0x601A    STR	R2, [R3, #0]
; Write_Data_Ptr end address is: 8 (R2)
;__Lib_TFT.c, 163 :: 		
0xD012	0x2401    MOVS	R4, #1
0xD014	0x4B04    LDR	R3, [PC, #16]
0xD016	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 164 :: 		
L_end_TFT_Set_Active:
0xD018	0xB001    ADD	SP, SP, #4
0xD01A	0x4770    BX	LR
0xD01C	0x2E082000  	_TFT_Set_Index_Ptr+0
0xD020	0x2E0C2000  	_TFT_Write_Command_Ptr+0
0xD024	0x04602000  	_TFT_Write_Data_Ptr+0
0xD028	0x03422000  	__Lib_TFT_Ptr_Set+0
; end of _TFT_Set_Active
_TFT_Init_SSD1963:
;__Lib_TFT_Defs.c, 2669 :: 		void TFT_Init_SSD1963(unsigned int display_width, unsigned int display_height) {
; display_height start address is: 4 (R1)
; display_width start address is: 0 (R0)
0xD1F8	0xB081    SUB	SP, SP, #4
0xD1FA	0xF8CDE000  STR	LR, [SP, #0]
0xD1FE	0xB284    UXTH	R4, R0
0xD200	0xB28D    UXTH	R5, R1
; display_height end address is: 4 (R1)
; display_width end address is: 0 (R0)
; display_width start address is: 16 (R4)
; display_height start address is: 20 (R5)
;__Lib_TFT_Defs.c, 2670 :: 		__controller = _16BIT_CONTROLLER;
0xD202	0xF64F73FF  MOVW	R3, #65535
0xD206	0x4A20    LDR	R2, [PC, #128]
0xD208	0x8013    STRH	R3, [R2, #0]
;__Lib_TFT_Defs.c, 2671 :: 		TFT_Set_SSD1963();
0xD20A	0xF7FCFD81  BL	_TFT_Set_SSD1963+0
;__Lib_TFT_Defs.c, 2672 :: 		if (Is_TFT_Set() != 1) {
0xD20E	0xF7FCFD77  BL	_Is_TFT_Set+0
0xD212	0x2801    CMP	R0, #1
0xD214	0xD008    BEQ	L_TFT_Init_SSD1963155
;__Lib_TFT_Defs.c, 2673 :: 		TFT_Set_Index_Ptr = TFT_Set_Index;
0xD216	0x4B1D    LDR	R3, [PC, #116]
0xD218	0x4A1D    LDR	R2, [PC, #116]
0xD21A	0x6013    STR	R3, [R2, #0]
;__Lib_TFT_Defs.c, 2674 :: 		TFT_Write_Command_Ptr = TFT_Write_Command;
0xD21C	0x4B1D    LDR	R3, [PC, #116]
0xD21E	0x4A1E    LDR	R2, [PC, #120]
0xD220	0x6013    STR	R3, [R2, #0]
;__Lib_TFT_Defs.c, 2675 :: 		TFT_Write_Data_Ptr = TFT_16bit_Write_Data;
0xD222	0x4B1E    LDR	R3, [PC, #120]
0xD224	0x4A1E    LDR	R2, [PC, #120]
0xD226	0x6013    STR	R3, [R2, #0]
;__Lib_TFT_Defs.c, 2676 :: 		}
L_TFT_Init_SSD1963155:
;__Lib_TFT_Defs.c, 2678 :: 		TFT_DISP_WIDTH = display_width;
0xD228	0x4A1E    LDR	R2, [PC, #120]
0xD22A	0x8014    STRH	R4, [R2, #0]
;__Lib_TFT_Defs.c, 2679 :: 		TFT_DISP_HEIGHT = display_height;
0xD22C	0x4A1E    LDR	R2, [PC, #120]
0xD22E	0x8015    STRH	R5, [R2, #0]
;__Lib_TFT_Defs.c, 2680 :: 		if (display_width >= display_height)
0xD230	0x42AC    CMP	R4, R5
0xD232	0xD303    BCC	L_TFT_Init_SSD1963156
; display_width end address is: 16 (R4)
; display_height end address is: 20 (R5)
;__Lib_TFT_Defs.c, 2681 :: 		TFT_Disp_Rotation = 0;
0xD234	0x2300    MOVS	R3, #0
0xD236	0x4A1D    LDR	R2, [PC, #116]
0xD238	0x7013    STRB	R3, [R2, #0]
0xD23A	0xE002    B	L_TFT_Init_SSD1963157
L_TFT_Init_SSD1963156:
;__Lib_TFT_Defs.c, 2683 :: 		TFT_Disp_Rotation = 90;
0xD23C	0x235A    MOVS	R3, #90
0xD23E	0x4A1B    LDR	R2, [PC, #108]
0xD240	0x7013    STRB	R3, [R2, #0]
L_TFT_Init_SSD1963157:
;__Lib_TFT_Defs.c, 2685 :: 		TFT_Set_Pen(CL_BLACK, 1);
0xD242	0x2101    MOVS	R1, #1
0xD244	0xF2400000  MOVW	R0, #0
0xD248	0xF7FCFBB2  BL	_TFT_Set_Pen+0
;__Lib_TFT_Defs.c, 2686 :: 		TFT_Set_Brush(0, 0, 0, 0, 0, 0);
0xD24C	0x2300    MOVS	R3, #0
0xD24E	0x2200    MOVS	R2, #0
0xD250	0xB408    PUSH	(R3)
0xD252	0xB404    PUSH	(R2)
0xD254	0x2300    MOVS	R3, #0
0xD256	0x2200    MOVS	R2, #0
0xD258	0x2100    MOVS	R1, #0
0xD25A	0x2000    MOVS	R0, #0
0xD25C	0xF7FCF874  BL	_TFT_Set_Brush+0
0xD260	0xB002    ADD	SP, SP, #8
;__Lib_TFT_Defs.c, 2688 :: 		TFT_Move_Cursor(0, 0);
0xD262	0x2100    MOVS	R1, #0
0xD264	0x2000    MOVS	R0, #0
0xD266	0xF7FCF827  BL	_TFT_Move_Cursor+0
;__Lib_TFT_Defs.c, 2689 :: 		ExternalFontSet = 0;
0xD26A	0x2300    MOVS	R3, #0
0xD26C	0x4A10    LDR	R2, [PC, #64]
0xD26E	0x7013    STRB	R3, [R2, #0]
;__Lib_TFT_Defs.c, 2690 :: 		TFT_Set_DataPort_Direction();
0xD270	0xF7FCFA6C  BL	__Lib_TFT_Defs_TFT_Set_DataPort_Direction+0
;__Lib_TFT_Defs.c, 2692 :: 		TFT_Reset_SSD1963();
0xD274	0xF7F9FCE0  BL	__Lib_TFT_Defs_TFT_Reset_SSD1963+0
;__Lib_TFT_Defs.c, 2693 :: 		TFT_SSD1963_Set_Address_Ptr = TFT_Set_Address_SSD1963II;
0xD278	0x4B0E    LDR	R3, [PC, #56]
0xD27A	0x4A0F    LDR	R2, [PC, #60]
0xD27C	0x6013    STR	R3, [R2, #0]
;__Lib_TFT_Defs.c, 2694 :: 		}
L_end_TFT_Init_SSD1963:
0xD27E	0xF8DDE000  LDR	LR, [SP, #0]
0xD282	0xB001    ADD	SP, SP, #4
0xD284	0x4770    BX	LR
0xD286	0xBF00    NOP
0xD288	0x034A2000  	__Lib_TFT_Defs___controller+0
0xD28C	0x69C10000  	_TFT_Set_Index+0
0xD290	0x2E082000  	_TFT_Set_Index_Ptr+0
0xD294	0x698D0000  	_TFT_Write_Command+0
0xD298	0x2E0C2000  	_TFT_Write_Command_Ptr+0
0xD29C	0xE0210000  	_TFT_16bit_Write_Data+0
0xD2A0	0x04602000  	_TFT_Write_Data_Ptr+0
0xD2A4	0x22262000  	_TFT_DISP_WIDTH+0
0xD2A8	0x22242000  	_TFT_DISP_HEIGHT+0
0xD2AC	0x03482000  	__Lib_TFT_Defs_TFT_Disp_Rotation+0
0xD2B0	0x2E1E2000  	_ExternalFontSet+0
0xD2B4	0xC7910000  	_TFT_Set_Address_SSD1963II+0
0xD2B8	0x045C2000  	_TFT_SSD1963_Set_Address_Ptr+0
; end of _TFT_Init_SSD1963
_TFT_Set_SSD1963:
;__Lib_TFT.c, 136 :: 		
0x9D10	0xB081    SUB	SP, SP, #4
;__Lib_TFT.c, 137 :: 		
0x9D12	0x2101    MOVS	R1, #1
0x9D14	0x4801    LDR	R0, [PC, #4]
0x9D16	0x7001    STRB	R1, [R0, #0]
;__Lib_TFT.c, 138 :: 		
L_end_TFT_Set_SSD1963:
0x9D18	0xB001    ADD	SP, SP, #4
0x9D1A	0x4770    BX	LR
0x9D1C	0x03452000  	__Lib_TFT___SSD1963_controller+0
; end of _TFT_Set_SSD1963
_Is_TFT_Set:
;__Lib_TFT.c, 132 :: 		
0x9D00	0xB081    SUB	SP, SP, #4
;__Lib_TFT.c, 133 :: 		
0x9D02	0x4802    LDR	R0, [PC, #8]
0x9D04	0x8800    LDRH	R0, [R0, #0]
;__Lib_TFT.c, 134 :: 		
L_end_Is_TFT_Set:
0x9D06	0xB001    ADD	SP, SP, #4
0x9D08	0x4770    BX	LR
0x9D0A	0xBF00    NOP
0x9D0C	0x03422000  	__Lib_TFT_Ptr_Set+0
; end of _Is_TFT_Set
_TFT_Set_Pen:
;__Lib_TFT.c, 168 :: 		
; pen_width start address is: 4 (R1)
; pen_color start address is: 0 (R0)
0x99B0	0xB081    SUB	SP, SP, #4
; pen_width end address is: 4 (R1)
; pen_color end address is: 0 (R0)
; pen_color start address is: 0 (R0)
; pen_width start address is: 4 (R1)
;__Lib_TFT.c, 169 :: 		
0x99B2	0x4A03    LDR	R2, [PC, #12]
0x99B4	0x8010    STRH	R0, [R2, #0]
; pen_color end address is: 0 (R0)
;__Lib_TFT.c, 174 :: 		
0x99B6	0x4A03    LDR	R2, [PC, #12]
0x99B8	0x7011    STRB	R1, [R2, #0]
; pen_width end address is: 4 (R1)
;__Lib_TFT.c, 175 :: 		
L_end_TFT_Set_Pen:
0x99BA	0xB001    ADD	SP, SP, #4
0x99BC	0x4770    BX	LR
0x99BE	0xBF00    NOP
0x99C0	0x2E062000  	__Lib_TFT_PenColor+0
0x99C4	0x2E102000  	__Lib_TFT_PenWidth+0
; end of _TFT_Set_Pen
_TFT_Set_Brush:
;__Lib_TFT.c, 191 :: 		
; gradient_orientation start address is: 12 (R3)
; gradient_enabled start address is: 8 (R2)
; brush_color start address is: 4 (R1)
; brush_enabled start address is: 0 (R0)
0x9348	0xB081    SUB	SP, SP, #4
; gradient_orientation end address is: 12 (R3)
; gradient_enabled end address is: 8 (R2)
; brush_color end address is: 4 (R1)
; brush_enabled end address is: 0 (R0)
; brush_enabled start address is: 0 (R0)
; brush_color start address is: 4 (R1)
; gradient_enabled start address is: 8 (R2)
; gradient_orientation start address is: 12 (R3)
; gradient_color_from start address is: 20 (R5)
0x934A	0xF8BD5004  LDRH	R5, [SP, #4]
; gradient_color_to start address is: 24 (R6)
0x934E	0xF8BD6008  LDRH	R6, [SP, #8]
;__Lib_TFT.c, 192 :: 		
0x9352	0x4C07    LDR	R4, [PC, #28]
0x9354	0x7020    STRB	R0, [R4, #0]
; brush_enabled end address is: 0 (R0)
;__Lib_TFT.c, 193 :: 		
0x9356	0x4C07    LDR	R4, [PC, #28]
0x9358	0x8021    STRH	R1, [R4, #0]
; brush_color end address is: 4 (R1)
;__Lib_TFT.c, 194 :: 		
0x935A	0x4C07    LDR	R4, [PC, #28]
0x935C	0x7022    STRB	R2, [R4, #0]
; gradient_enabled end address is: 8 (R2)
;__Lib_TFT.c, 195 :: 		
0x935E	0x4C07    LDR	R4, [PC, #28]
0x9360	0x7023    STRB	R3, [R4, #0]
; gradient_orientation end address is: 12 (R3)
;__Lib_TFT.c, 196 :: 		
0x9362	0x4C07    LDR	R4, [PC, #28]
0x9364	0x8025    STRH	R5, [R4, #0]
; gradient_color_from end address is: 20 (R5)
;__Lib_TFT.c, 197 :: 		
0x9366	0x4C07    LDR	R4, [PC, #28]
0x9368	0x8026    STRH	R6, [R4, #0]
; gradient_color_to end address is: 24 (R6)
;__Lib_TFT.c, 198 :: 		
L_end_TFT_Set_Brush:
0x936A	0xB001    ADD	SP, SP, #4
0x936C	0x4770    BX	LR
0x936E	0xBF00    NOP
0x9370	0x2DE32000  	__Lib_TFT_BrushEnabled+0
0x9374	0x2DFE2000  	__Lib_TFT_BrushColor+0
0x9378	0x2E002000  	__Lib_TFT_GradientEnabled+0
0x937C	0x2E012000  	__Lib_TFT_GradientOrientation+0
0x9380	0x2E022000  	__Lib_TFT_GradColorFrom+0
0x9384	0x2E042000  	__Lib_TFT_GradColorTo+0
; end of _TFT_Set_Brush
_TFT_Move_Cursor:
;__Lib_TFT.c, 251 :: 		
; _y start address is: 4 (R1)
; _x start address is: 0 (R0)
0x92B8	0xB081    SUB	SP, SP, #4
; _y end address is: 4 (R1)
; _x end address is: 0 (R0)
; _x start address is: 0 (R0)
; _y start address is: 4 (R1)
;__Lib_TFT.c, 252 :: 		
0x92BA	0x4A03    LDR	R2, [PC, #12]
0x92BC	0x8010    STRH	R0, [R2, #0]
; _x end address is: 0 (R0)
;__Lib_TFT.c, 253 :: 		
0x92BE	0x4A03    LDR	R2, [PC, #12]
0x92C0	0x8011    STRH	R1, [R2, #0]
; _y end address is: 4 (R1)
;__Lib_TFT.c, 254 :: 		
L_end_TFT_Move_Cursor:
0x92C2	0xB001    ADD	SP, SP, #4
0x92C4	0x4770    BX	LR
0x92C6	0xBF00    NOP
0x92C8	0x2DF22000  	__Lib_TFT_x_cord+0
0x92CC	0x2DFC2000  	__Lib_TFT_y_cord+0
; end of _TFT_Move_Cursor
__Lib_TFT_Defs_TFT_Set_DataPort_Direction:
;__Lib_TFT_Defs.c, 149 :: 		static void TFT_Set_DataPort_Direction() {
0x974C	0xB082    SUB	SP, SP, #8
0x974E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_TFT_Defs.c, 151 :: 		MOVW  R1, #lo_addr(TFT_DataPort)
0x9752	0xF2410114  MOVW	R1, #lo_addr(TFT_DataPort+0)
;__Lib_TFT_Defs.c, 152 :: 		MOVT  R1, #hi_addr(TFT_DataPort)
0x9756	0xF2C40102  MOVT	R1, #hi_addr(TFT_DataPort+0)
;__Lib_TFT_Defs.c, 156 :: 		GPIO_Config(R1, __controller, _GPIO_CFG_DIGITAL_OUTPUT);    // za  digitalni output
0x975A	0x4806    LDR	R0, [PC, #24]
0x975C	0x8800    LDRH	R0, [R0, #0]
0x975E	0x9101    STR	R1, [SP, #4]
0x9760	0x4A05    LDR	R2, [PC, #20]
0x9762	0xB281    UXTH	R1, R0
0x9764	0x9801    LDR	R0, [SP, #4]
0x9766	0xF7FFFC8F  BL	_GPIO_Config+0
;__Lib_TFT_Defs.c, 157 :: 		}
L_end_TFT_Set_DataPort_Direction:
0x976A	0xF8DDE000  LDR	LR, [SP, #0]
0x976E	0xB002    ADD	SP, SP, #8
0x9770	0x4770    BX	LR
0x9772	0xBF00    NOP
0x9774	0x034A2000  	__Lib_TFT_Defs___controller+0
0x9778	0x00140008  	#524308
; end of __Lib_TFT_Defs_TFT_Set_DataPort_Direction
__Lib_TFT_Defs_TFT_Reset_SSD1963:
;__Lib_TFT_Defs.c, 2572 :: 		static void TFT_Reset_SSD1963(){
0x6C38	0xB081    SUB	SP, SP, #4
0x6C3A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_TFT_Defs.c, 2573 :: 		TFT_Set_Pin_Directions();
0x6C3E	0xF7FFFF47  BL	__Lib_TFT_Defs_TFT_Set_Pin_Directions+0
;__Lib_TFT_Defs.c, 2575 :: 		Delay_100ms();
0x6C42	0xF7FFFF39  BL	_Delay_100ms+0
;__Lib_TFT_Defs.c, 2576 :: 		TFT_RST = 1;
0x6C46	0x2101    MOVS	R1, #1
0x6C48	0xB249    SXTB	R1, R1
0x6C4A	0x487B    LDR	R0, [PC, #492]
0x6C4C	0x6001    STR	R1, [R0, #0]
;__Lib_TFT_Defs.c, 2577 :: 		Delay_100ms();
0x6C4E	0xF7FFFF33  BL	_Delay_100ms+0
;__Lib_TFT_Defs.c, 2578 :: 		Delay_100ms();
0x6C52	0xF7FFFF31  BL	_Delay_100ms+0
;__Lib_TFT_Defs.c, 2580 :: 		TFT_CS = 0;
0x6C56	0x2100    MOVS	R1, #0
0x6C58	0xB249    SXTB	R1, R1
0x6C5A	0x4878    LDR	R0, [PC, #480]
0x6C5C	0x6001    STR	R1, [R0, #0]
;__Lib_TFT_Defs.c, 2581 :: 		TFT_Set_Index_Ptr(0x01);     //Software Reset
0x6C5E	0x2001    MOVS	R0, #1
0x6C60	0x4C77    LDR	R4, [PC, #476]
0x6C62	0x6824    LDR	R4, [R4, #0]
0x6C64	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2582 :: 		TFT_Set_Index_Ptr(0x01);
0x6C66	0x2001    MOVS	R0, #1
0x6C68	0x4C75    LDR	R4, [PC, #468]
0x6C6A	0x6824    LDR	R4, [R4, #0]
0x6C6C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2583 :: 		TFT_Set_Index_Ptr(0x01);
0x6C6E	0x2001    MOVS	R0, #1
0x6C70	0x4C73    LDR	R4, [PC, #460]
0x6C72	0x6824    LDR	R4, [R4, #0]
0x6C74	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2585 :: 		TFT_Set_Index_Ptr(0xE2);
0x6C76	0x20E2    MOVS	R0, #226
0x6C78	0x4C71    LDR	R4, [PC, #452]
0x6C7A	0x6824    LDR	R4, [R4, #0]
0x6C7C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2586 :: 		TFT_Write_Command_Ptr(35);    // PLLclk = REFclk * 36 (360MHz)
0x6C7E	0x2023    MOVS	R0, #35
0x6C80	0x4C70    LDR	R4, [PC, #448]
0x6C82	0x6824    LDR	R4, [R4, #0]
0x6C84	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2587 :: 		TFT_Write_Command_Ptr(2);     // SYSclk = PLLclk / 3  (120MHz)
0x6C86	0x2002    MOVS	R0, #2
0x6C88	0x4C6E    LDR	R4, [PC, #440]
0x6C8A	0x6824    LDR	R4, [R4, #0]
0x6C8C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2588 :: 		TFT_Write_Command_Ptr(0x54);  // validate M and N
0x6C8E	0x2054    MOVS	R0, #84
0x6C90	0x4C6C    LDR	R4, [PC, #432]
0x6C92	0x6824    LDR	R4, [R4, #0]
0x6C94	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2593 :: 		TFT_Set_Index_Ptr(0xe0);
0x6C96	0x20E0    MOVS	R0, #224
0x6C98	0x4C69    LDR	R4, [PC, #420]
0x6C9A	0x6824    LDR	R4, [R4, #0]
0x6C9C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2594 :: 		TFT_Write_Command_Ptr(0x01); // START PLL
0x6C9E	0x2001    MOVS	R0, #1
0x6CA0	0x4C68    LDR	R4, [PC, #416]
0x6CA2	0x6824    LDR	R4, [R4, #0]
0x6CA4	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2596 :: 		Delay_50us(); Delay_50us();
0x6CA6	0xF7FFFFAF  BL	_Delay_50us+0
0x6CAA	0xF7FFFFAD  BL	_Delay_50us+0
;__Lib_TFT_Defs.c, 2598 :: 		TFT_Set_Index_Ptr(0xe0);
0x6CAE	0x20E0    MOVS	R0, #224
0x6CB0	0x4C63    LDR	R4, [PC, #396]
0x6CB2	0x6824    LDR	R4, [R4, #0]
0x6CB4	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2599 :: 		TFT_Write_Command_Ptr(0x03); // LOCK PLL
0x6CB6	0x2003    MOVS	R0, #3
0x6CB8	0x4C62    LDR	R4, [PC, #392]
0x6CBA	0x6824    LDR	R4, [R4, #0]
0x6CBC	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2601 :: 		TFT_Set_Index_Ptr(0xb0);          //SET LCD MODE  SET TFT 18Bits MODE
0x6CBE	0x20B0    MOVS	R0, #176
0x6CC0	0x4C5F    LDR	R4, [PC, #380]
0x6CC2	0x6824    LDR	R4, [R4, #0]
0x6CC4	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2602 :: 		if (Is_TFT_MM_Plus() == 0) {
0x6CC6	0xF7FEFF03  BL	_Is_TFT_MM_Plus+0
0x6CCA	0xB940    CBNZ	R0, L___Lib_TFT_Defs_TFT_Reset_SSD1963147
;__Lib_TFT_Defs.c, 2603 :: 		TFT_Write_Command_Ptr(0x08);      //SET TFT MODE & hsync+Vsync+DEN MODE
0x6CCC	0x2008    MOVS	R0, #8
0x6CCE	0x4C5D    LDR	R4, [PC, #372]
0x6CD0	0x6824    LDR	R4, [R4, #0]
0x6CD2	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2604 :: 		TFT_Write_Command_Ptr(0x80);      //SET TFT MODE & hsync+Vsync+DEN MODE
0x6CD4	0x2080    MOVS	R0, #128
0x6CD6	0x4C5B    LDR	R4, [PC, #364]
0x6CD8	0x6824    LDR	R4, [R4, #0]
0x6CDA	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2605 :: 		} else {
0x6CDC	0xE007    B	L___Lib_TFT_Defs_TFT_Reset_SSD1963148
L___Lib_TFT_Defs_TFT_Reset_SSD1963147:
;__Lib_TFT_Defs.c, 2606 :: 		TFT_Write_Command_Ptr(0x28);      //SET TFT MODE & hsync+Vsync+DEN MODE
0x6CDE	0x2028    MOVS	R0, #40
0x6CE0	0x4C58    LDR	R4, [PC, #352]
0x6CE2	0x6824    LDR	R4, [R4, #0]
0x6CE4	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2607 :: 		TFT_Write_Command_Ptr(0x20);      //SET TFT MODE & hsync+Vsync+DEN MODE
0x6CE6	0x2020    MOVS	R0, #32
0x6CE8	0x4C56    LDR	R4, [PC, #344]
0x6CEA	0x6824    LDR	R4, [R4, #0]
0x6CEC	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2608 :: 		}
L___Lib_TFT_Defs_TFT_Reset_SSD1963148:
;__Lib_TFT_Defs.c, 2610 :: 		TFT_Write_Command_Ptr(0x01);      //SET horizontal size=480-1 HightByte
0x6CEE	0x2001    MOVS	R0, #1
0x6CF0	0x4C54    LDR	R4, [PC, #336]
0x6CF2	0x6824    LDR	R4, [R4, #0]
0x6CF4	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2611 :: 		TFT_Write_Command_Ptr(0xdf);      //SET horizontal size=480-1 LowByte
0x6CF6	0x20DF    MOVS	R0, #223
0x6CF8	0x4C52    LDR	R4, [PC, #328]
0x6CFA	0x6824    LDR	R4, [R4, #0]
0x6CFC	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2612 :: 		TFT_Write_Command_Ptr(0x01);      //SET vertical size=272-1 HightByte
0x6CFE	0x2001    MOVS	R0, #1
0x6D00	0x4C50    LDR	R4, [PC, #320]
0x6D02	0x6824    LDR	R4, [R4, #0]
0x6D04	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2613 :: 		TFT_Write_Command_Ptr(0x0f);      //SET vertical size=272-1 LowByte
0x6D06	0x200F    MOVS	R0, #15
0x6D08	0x4C4E    LDR	R4, [PC, #312]
0x6D0A	0x6824    LDR	R4, [R4, #0]
0x6D0C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2614 :: 		TFT_Write_Command_Ptr(0x00);      //SET even/odd line RGB seq.=RGB
0x6D0E	0x2000    MOVS	R0, #0
0x6D10	0x4C4C    LDR	R4, [PC, #304]
0x6D12	0x6824    LDR	R4, [R4, #0]
0x6D14	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2616 :: 		TFT_Set_Index_Ptr(0xf0);
0x6D16	0x20F0    MOVS	R0, #240
0x6D18	0x4C49    LDR	R4, [PC, #292]
0x6D1A	0x6824    LDR	R4, [R4, #0]
0x6D1C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2617 :: 		TFT_Write_Command_Ptr(0x03);      //3 -16bit,0 -8bit        //SET pixel data I/F format=8bit
0x6D1E	0x2003    MOVS	R0, #3
0x6D20	0x4C48    LDR	R4, [PC, #288]
0x6D22	0x6824    LDR	R4, [R4, #0]
0x6D24	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2618 :: 		TFT_Set_Index_Ptr(0x3A);
0x6D26	0x203A    MOVS	R0, #58
0x6D28	0x4C45    LDR	R4, [PC, #276]
0x6D2A	0x6824    LDR	R4, [R4, #0]
0x6D2C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2619 :: 		TFT_Write_Command_Ptr(0x60);      // SET R G B format = 6 6 6
0x6D2E	0x2060    MOVS	R0, #96
0x6D30	0x4C44    LDR	R4, [PC, #272]
0x6D32	0x6824    LDR	R4, [R4, #0]
0x6D34	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2624 :: 		TFT_Set_Index_Ptr(0xe6);          //SET PCLK freq=10MHz  ; pixel clock frequency
0x6D36	0x20E6    MOVS	R0, #230
0x6D38	0x4C41    LDR	R4, [PC, #260]
0x6D3A	0x6824    LDR	R4, [R4, #0]
0x6D3C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2625 :: 		TFT_Write_Command_Ptr(0x01);
0x6D3E	0x2001    MOVS	R0, #1
0x6D40	0x4C40    LDR	R4, [PC, #256]
0x6D42	0x6824    LDR	R4, [R4, #0]
0x6D44	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2626 :: 		TFT_Write_Command_Ptr(0x45);
0x6D46	0x2045    MOVS	R0, #69
0x6D48	0x4C3E    LDR	R4, [PC, #248]
0x6D4A	0x6824    LDR	R4, [R4, #0]
0x6D4C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2627 :: 		TFT_Write_Command_Ptr(0x47);
0x6D4E	0x2047    MOVS	R0, #71
0x6D50	0x4C3C    LDR	R4, [PC, #240]
0x6D52	0x6824    LDR	R4, [R4, #0]
0x6D54	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2629 :: 		TFT_Set_Index_Ptr(0xb4);          //SET HBP,
0x6D56	0x20B4    MOVS	R0, #180
0x6D58	0x4C39    LDR	R4, [PC, #228]
0x6D5A	0x6824    LDR	R4, [R4, #0]
0x6D5C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2630 :: 		TFT_Write_Command_Ptr(0x02);      //SET HSYNC Tatol 525
0x6D5E	0x2002    MOVS	R0, #2
0x6D60	0x4C38    LDR	R4, [PC, #224]
0x6D62	0x6824    LDR	R4, [R4, #0]
0x6D64	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2631 :: 		TFT_Write_Command_Ptr(0x0d);
0x6D66	0x200D    MOVS	R0, #13
0x6D68	0x4C36    LDR	R4, [PC, #216]
0x6D6A	0x6824    LDR	R4, [R4, #0]
0x6D6C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2632 :: 		TFT_Write_Command_Ptr(0x00);      //SET HBP 43
0x6D6E	0x2000    MOVS	R0, #0
0x6D70	0x4C34    LDR	R4, [PC, #208]
0x6D72	0x6824    LDR	R4, [R4, #0]
0x6D74	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2633 :: 		TFT_Write_Command_Ptr(0x2b);
0x6D76	0x202B    MOVS	R0, #43
0x6D78	0x4C32    LDR	R4, [PC, #200]
0x6D7A	0x6824    LDR	R4, [R4, #0]
0x6D7C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2634 :: 		TFT_Write_Command_Ptr(0x28);      //SET VBP 41=40+1
0x6D7E	0x2028    MOVS	R0, #40
0x6D80	0x4C30    LDR	R4, [PC, #192]
0x6D82	0x6824    LDR	R4, [R4, #0]
0x6D84	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2635 :: 		TFT_Write_Command_Ptr(0x00);      //SET Hsync pulse start position
0x6D86	0x2000    MOVS	R0, #0
0x6D88	0x4C2E    LDR	R4, [PC, #184]
0x6D8A	0x6824    LDR	R4, [R4, #0]
0x6D8C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2636 :: 		TFT_Write_Command_Ptr(0x00);
0x6D8E	0x2000    MOVS	R0, #0
0x6D90	0x4C2C    LDR	R4, [PC, #176]
0x6D92	0x6824    LDR	R4, [R4, #0]
0x6D94	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2637 :: 		TFT_Write_Command_Ptr(0x00);      //SET Hsync pulse subpixel start position
0x6D96	0x2000    MOVS	R0, #0
0x6D98	0x4C2A    LDR	R4, [PC, #168]
0x6D9A	0x6824    LDR	R4, [R4, #0]
0x6D9C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2639 :: 		TFT_Set_Index_Ptr(0xb6);          //SET VBP,
0x6D9E	0x20B6    MOVS	R0, #182
0x6DA0	0x4C27    LDR	R4, [PC, #156]
0x6DA2	0x6824    LDR	R4, [R4, #0]
0x6DA4	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2640 :: 		TFT_Write_Command_Ptr(0x01);      //SET Vsync total 286=285+1
0x6DA6	0x2001    MOVS	R0, #1
0x6DA8	0x4C26    LDR	R4, [PC, #152]
0x6DAA	0x6824    LDR	R4, [R4, #0]
0x6DAC	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2641 :: 		TFT_Write_Command_Ptr(0x1d);
0x6DAE	0x201D    MOVS	R0, #29
0x6DB0	0x4C24    LDR	R4, [PC, #144]
0x6DB2	0x6824    LDR	R4, [R4, #0]
0x6DB4	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2642 :: 		TFT_Write_Command_Ptr(0x00);      //SET VBP=12
0x6DB6	0x2000    MOVS	R0, #0
0x6DB8	0x4C22    LDR	R4, [PC, #136]
0x6DBA	0x6824    LDR	R4, [R4, #0]
0x6DBC	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2643 :: 		TFT_Write_Command_Ptr(0x0c);
0x6DBE	0x200C    MOVS	R0, #12
0x6DC0	0x4C20    LDR	R4, [PC, #128]
0x6DC2	0x6824    LDR	R4, [R4, #0]
0x6DC4	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2644 :: 		TFT_Write_Command_Ptr(0x09);      //SET Vsync pulse 10=9+1
0x6DC6	0x2009    MOVS	R0, #9
0x6DC8	0x4C1E    LDR	R4, [PC, #120]
0x6DCA	0x6824    LDR	R4, [R4, #0]
0x6DCC	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2645 :: 		TFT_Write_Command_Ptr(0x00);      //SET Vsync pulse start position
0x6DCE	0x2000    MOVS	R0, #0
0x6DD0	0x4C1C    LDR	R4, [PC, #112]
0x6DD2	0x6824    LDR	R4, [R4, #0]
0x6DD4	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2646 :: 		TFT_Write_Command_Ptr(0x00);
0x6DD6	0x2000    MOVS	R0, #0
0x6DD8	0x4C1A    LDR	R4, [PC, #104]
0x6DDA	0x6824    LDR	R4, [R4, #0]
0x6DDC	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2648 :: 		TFT_Set_Index_Ptr(0x36);     // memory access control
0x6DDE	0x2036    MOVS	R0, #54
0x6DE0	0x4C17    LDR	R4, [PC, #92]
0x6DE2	0x6824    LDR	R4, [R4, #0]
0x6DE4	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2649 :: 		if (TFT_Disp_Rotation == 90)
0x6DE6	0x4818    LDR	R0, [PC, #96]
0x6DE8	0x7800    LDRB	R0, [R0, #0]
0x6DEA	0x285A    CMP	R0, #90
0x6DEC	0xD10C    BNE	L___Lib_TFT_Defs_TFT_Reset_SSD1963149
;__Lib_TFT_Defs.c, 2650 :: 		if (Is_TFT_Rotated_180())
0x6DEE	0xF7FDFA5F  BL	_Is_TFT_Rotated_180+0
0x6DF2	0xB120    CBZ	R0, L___Lib_TFT_Defs_TFT_Reset_SSD1963150
;__Lib_TFT_Defs.c, 2651 :: 		TFT_Write_Command_Ptr(0x60);
0x6DF4	0x2060    MOVS	R0, #96
0x6DF6	0x4C13    LDR	R4, [PC, #76]
0x6DF8	0x6824    LDR	R4, [R4, #0]
0x6DFA	0x47A0    BLX	R4
0x6DFC	0xE003    B	L___Lib_TFT_Defs_TFT_Reset_SSD1963151
L___Lib_TFT_Defs_TFT_Reset_SSD1963150:
;__Lib_TFT_Defs.c, 2653 :: 		TFT_Write_Command_Ptr(0xA0);
0x6DFE	0x20A0    MOVS	R0, #160
0x6E00	0x4C10    LDR	R4, [PC, #64]
0x6E02	0x6824    LDR	R4, [R4, #0]
0x6E04	0x47A0    BLX	R4
L___Lib_TFT_Defs_TFT_Reset_SSD1963151:
0x6E06	0xE00B    B	L___Lib_TFT_Defs_TFT_Reset_SSD1963152
L___Lib_TFT_Defs_TFT_Reset_SSD1963149:
;__Lib_TFT_Defs.c, 2655 :: 		if (Is_TFT_Rotated_180())
0x6E08	0xF7FDFA52  BL	_Is_TFT_Rotated_180+0
0x6E0C	0xB120    CBZ	R0, L___Lib_TFT_Defs_TFT_Reset_SSD1963153
;__Lib_TFT_Defs.c, 2656 :: 		TFT_Write_Command_Ptr(0xC0);
0x6E0E	0x20C0    MOVS	R0, #192
0x6E10	0x4C0C    LDR	R4, [PC, #48]
0x6E12	0x6824    LDR	R4, [R4, #0]
0x6E14	0x47A0    BLX	R4
0x6E16	0xE003    B	L___Lib_TFT_Defs_TFT_Reset_SSD1963154
L___Lib_TFT_Defs_TFT_Reset_SSD1963153:
;__Lib_TFT_Defs.c, 2658 :: 		TFT_Write_Command_Ptr(0x00);
0x6E18	0x2000    MOVS	R0, #0
0x6E1A	0x4C0A    LDR	R4, [PC, #40]
0x6E1C	0x6824    LDR	R4, [R4, #0]
0x6E1E	0x47A0    BLX	R4
L___Lib_TFT_Defs_TFT_Reset_SSD1963154:
L___Lib_TFT_Defs_TFT_Reset_SSD1963152:
;__Lib_TFT_Defs.c, 2660 :: 		TFT_Set_Index_Ptr(0x29);                //SET display on
0x6E20	0x2029    MOVS	R0, #41
0x6E22	0x4C07    LDR	R4, [PC, #28]
0x6E24	0x6824    LDR	R4, [R4, #0]
0x6E26	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2661 :: 		TFT_CS = 1;
0x6E28	0x2101    MOVS	R1, #1
0x6E2A	0xB249    SXTB	R1, R1
0x6E2C	0x4803    LDR	R0, [PC, #12]
0x6E2E	0x6001    STR	R1, [R0, #0]
;__Lib_TFT_Defs.c, 2662 :: 		}
L_end_TFT_Reset_SSD1963:
0x6E30	0xF8DDE000  LDR	LR, [SP, #0]
0x6E34	0xB001    ADD	SP, SP, #4
0x6E36	0x4770    BX	LR
0x6E38	0x82B84242  	TFT_RST+0
0x6E3C	0x82B44242  	TFT_CS+0
0x6E40	0x2E082000  	_TFT_Set_Index_Ptr+0
0x6E44	0x2E0C2000  	_TFT_Write_Command_Ptr+0
0x6E48	0x03482000  	__Lib_TFT_Defs_TFT_Disp_Rotation+0
; end of __Lib_TFT_Defs_TFT_Reset_SSD1963
__Lib_TFT_Defs_TFT_Set_Pin_Directions:
;__Lib_TFT_Defs.c, 86 :: 		static void TFT_Set_Pin_Directions() {
0x6AD0	0xB081    SUB	SP, SP, #4
0x6AD2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_TFT_Defs.c, 89 :: 		MOVW  R0, #lo_addr(TFT_RST)
0x6AD6	0xF2414014  MOVW	R0, #lo_addr(TFT_RST+0)
;__Lib_TFT_Defs.c, 90 :: 		MOVT  R0, #hi_addr(TFT_RST)
0x6ADA	0xF2C40002  MOVT	R0, #hi_addr(TFT_RST+0)
;__Lib_TFT_Defs.c, 91 :: 		MOV   R1, #1
0x6ADE	0xF04F0101  MOV	R1, #1
;__Lib_TFT_Defs.c, 92 :: 		LSL   R1, R1, #bitPos(TFT_RST)
0x6AE2	0xEA4F3181  LSL	R1, R1, BitPos(TFT_RST+0)
;__Lib_TFT_Defs.c, 94 :: 		GPIO_Config(R0, R1, _GPIO_CFG_DIGITAL_OUTPUT);
0x6AE6	0x4A25    LDR	R2, [PC, #148]
0x6AE8	0xB289    UXTH	R1, R1
0x6AEA	0xF002FACD  BL	_GPIO_Config+0
;__Lib_TFT_Defs.c, 97 :: 		TFT_RST = 0;
0x6AEE	0x2100    MOVS	R1, #0
0x6AF0	0xB249    SXTB	R1, R1
0x6AF2	0x4823    LDR	R0, [PC, #140]
0x6AF4	0x6001    STR	R1, [R0, #0]
;__Lib_TFT_Defs.c, 101 :: 		MOVW  R0, #lo_addr(TFT_RS)
0x6AF6	0xF2414014  MOVW	R0, #lo_addr(TFT_RS+0)
;__Lib_TFT_Defs.c, 102 :: 		MOVT  R0, #hi_addr(TFT_RS)
0x6AFA	0xF2C40002  MOVT	R0, #hi_addr(TFT_RS+0)
;__Lib_TFT_Defs.c, 103 :: 		MOV   R1, #1
0x6AFE	0xF04F0101  MOV	R1, #1
;__Lib_TFT_Defs.c, 104 :: 		LSL   R1, R1, #bitPos(TFT_RS)
0x6B02	0xEA4F31C1  LSL	R1, R1, BitPos(TFT_RS+0)
;__Lib_TFT_Defs.c, 106 :: 		GPIO_Config(R0, R1, _GPIO_CFG_DIGITAL_OUTPUT);
0x6B06	0x4A1D    LDR	R2, [PC, #116]
0x6B08	0xB289    UXTH	R1, R1
0x6B0A	0xF002FABD  BL	_GPIO_Config+0
;__Lib_TFT_Defs.c, 109 :: 		TFT_RS = 1;
0x6B0E	0x2101    MOVS	R1, #1
0x6B10	0xB249    SXTB	R1, R1
0x6B12	0x481C    LDR	R0, [PC, #112]
0x6B14	0x6001    STR	R1, [R0, #0]
;__Lib_TFT_Defs.c, 113 :: 		MOVW  R0, #lo_addr(TFT_CS)
0x6B16	0xF2414014  MOVW	R0, #lo_addr(TFT_CS+0)
;__Lib_TFT_Defs.c, 114 :: 		MOVT  R0, #hi_addr(TFT_CS)
0x6B1A	0xF2C40002  MOVT	R0, #hi_addr(TFT_CS+0)
;__Lib_TFT_Defs.c, 115 :: 		MOV   R1, #1
0x6B1E	0xF04F0101  MOV	R1, #1
;__Lib_TFT_Defs.c, 116 :: 		LSL   R1, R1, #bitPos(TFT_CS)
0x6B22	0xEA4F3141  LSL	R1, R1, BitPos(TFT_CS+0)
;__Lib_TFT_Defs.c, 118 :: 		GPIO_Config(R0, R1, _GPIO_CFG_DIGITAL_OUTPUT);
0x6B26	0x4A15    LDR	R2, [PC, #84]
0x6B28	0xB289    UXTH	R1, R1
0x6B2A	0xF002FAAD  BL	_GPIO_Config+0
;__Lib_TFT_Defs.c, 121 :: 		TFT_CS = 1;
0x6B2E	0x2101    MOVS	R1, #1
0x6B30	0xB249    SXTB	R1, R1
0x6B32	0x4815    LDR	R0, [PC, #84]
0x6B34	0x6001    STR	R1, [R0, #0]
;__Lib_TFT_Defs.c, 125 :: 		MOVW  R0, #lo_addr(TFT_RD)
0x6B36	0xF2414014  MOVW	R0, #lo_addr(TFT_RD+0)
;__Lib_TFT_Defs.c, 126 :: 		MOVT  R0, #hi_addr(TFT_RD)
0x6B3A	0xF2C40002  MOVT	R0, #hi_addr(TFT_RD+0)
;__Lib_TFT_Defs.c, 127 :: 		MOV   R1, #1
0x6B3E	0xF04F0101  MOV	R1, #1
;__Lib_TFT_Defs.c, 128 :: 		LSL   R1, R1, #bitPos(TFT_RD)
0x6B42	0xEA4F3101  LSL	R1, R1, BitPos(TFT_RD+0)
;__Lib_TFT_Defs.c, 130 :: 		GPIO_Config(R0, R1, _GPIO_CFG_DIGITAL_OUTPUT);
0x6B46	0x4A0D    LDR	R2, [PC, #52]
0x6B48	0xB289    UXTH	R1, R1
0x6B4A	0xF002FA9D  BL	_GPIO_Config+0
;__Lib_TFT_Defs.c, 134 :: 		MOVW  R0, #lo_addr(TFT_WR)
0x6B4E	0xF2414014  MOVW	R0, #lo_addr(TFT_WR+0)
;__Lib_TFT_Defs.c, 135 :: 		MOVT  R0, #hi_addr(TFT_WR)
0x6B52	0xF2C40002  MOVT	R0, #hi_addr(TFT_WR+0)
;__Lib_TFT_Defs.c, 136 :: 		MOV   R1, #1
0x6B56	0xF04F0101  MOV	R1, #1
;__Lib_TFT_Defs.c, 137 :: 		LSL   R1, R1, #bitPos(TFT_WR)
0x6B5A	0xEA4F21C1  LSL	R1, R1, BitPos(TFT_WR+0)
;__Lib_TFT_Defs.c, 139 :: 		GPIO_Config(R0, R1, _GPIO_CFG_DIGITAL_OUTPUT);
0x6B5E	0x4A07    LDR	R2, [PC, #28]
0x6B60	0xB289    UXTH	R1, R1
0x6B62	0xF002FA91  BL	_GPIO_Config+0
;__Lib_TFT_Defs.c, 141 :: 		TFT_RD = 1;
0x6B66	0x2101    MOVS	R1, #1
0x6B68	0xB249    SXTB	R1, R1
0x6B6A	0x4808    LDR	R0, [PC, #32]
0x6B6C	0x6001    STR	R1, [R0, #0]
;__Lib_TFT_Defs.c, 142 :: 		TFT_WR = 1;
0x6B6E	0x4808    LDR	R0, [PC, #32]
0x6B70	0x6001    STR	R1, [R0, #0]
;__Lib_TFT_Defs.c, 143 :: 		}
L_end_TFT_Set_Pin_Directions:
0x6B72	0xF8DDE000  LDR	LR, [SP, #0]
0x6B76	0xB001    ADD	SP, SP, #4
0x6B78	0x4770    BX	LR
0x6B7A	0xBF00    NOP
0x6B7C	0x00140008  	#524308
0x6B80	0x82B84242  	TFT_RST+0
0x6B84	0x82BC4242  	TFT_RS+0
0x6B88	0x82B44242  	TFT_CS+0
0x6B8C	0x82B04242  	TFT_RD+0
0x6B90	0x82AC4242  	TFT_WR+0
; end of __Lib_TFT_Defs_TFT_Set_Pin_Directions
_Delay_100ms:
;__Lib_Delays.c, 53 :: 		void Delay_100ms() {
;__Lib_Delays.c, 54 :: 		Delay_ms(100);
0x6AB8	0xF644373E  MOVW	R7, #19262
0x6ABC	0xF2C0074C  MOVT	R7, #76
L_Delay_100ms20:
0x6AC0	0x1E7F    SUBS	R7, R7, #1
0x6AC2	0xD1FD    BNE	L_Delay_100ms20
0x6AC4	0xBF00    NOP
0x6AC6	0xBF00    NOP
0x6AC8	0xBF00    NOP
0x6ACA	0xBF00    NOP
0x6ACC	0xBF00    NOP
;__Lib_Delays.c, 55 :: 		}
L_end_Delay_100ms:
0x6ACE	0x4770    BX	LR
; end of _Delay_100ms
_Set_Index:
;Ducati_logger_driver.c, 74 :: 		void Set_Index(unsigned short index) {
; index start address is: 0 (R0)
0x6BCC	0xB081    SUB	SP, SP, #4
0x6BCE	0xF8CDE000  STR	LR, [SP, #0]
; index end address is: 0 (R0)
; index start address is: 0 (R0)
;Ducati_logger_driver.c, 75 :: 		TFT_RS = 0;
0x6BD2	0x2200    MOVS	R2, #0
0x6BD4	0xB252    SXTB	R2, R2
0x6BD6	0x4909    LDR	R1, [PC, #36]
0x6BD8	0x600A    STR	R2, [R1, #0]
;Ducati_logger_driver.c, 76 :: 		Write_to_Data_Lines(0, index);
0x6BDA	0xB2C1    UXTB	R1, R0
; index end address is: 0 (R0)
0x6BDC	0x2000    MOVS	R0, #0
0x6BDE	0xF7FBFC71  BL	_Write_to_Data_Lines+0
;Ducati_logger_driver.c, 77 :: 		TFT_WR = 0;
0x6BE2	0x2200    MOVS	R2, #0
0x6BE4	0xB252    SXTB	R2, R2
0x6BE6	0x4906    LDR	R1, [PC, #24]
0x6BE8	0x600A    STR	R2, [R1, #0]
;Ducati_logger_driver.c, 78 :: 		asm nop;
0x6BEA	0xBF00    NOP
;Ducati_logger_driver.c, 79 :: 		TFT_WR = 1;
0x6BEC	0x2201    MOVS	R2, #1
0x6BEE	0xB252    SXTB	R2, R2
0x6BF0	0x4903    LDR	R1, [PC, #12]
0x6BF2	0x600A    STR	R2, [R1, #0]
;Ducati_logger_driver.c, 80 :: 		}
L_end_Set_Index:
0x6BF4	0xF8DDE000  LDR	LR, [SP, #0]
0x6BF8	0xB001    ADD	SP, SP, #4
0x6BFA	0x4770    BX	LR
0x6BFC	0x82BC4242  	GPIOF_ODR+0
0x6C00	0x82AC4242  	GPIOF_ODR+0
; end of _Set_Index
_Write_to_Data_Lines:
;Ducati_logger_driver.c, 64 :: 		void Write_to_Data_Lines(unsigned char _hi, unsigned char _lo) {
; _lo start address is: 4 (R1)
; _hi start address is: 0 (R0)
; _lo end address is: 4 (R1)
; _hi end address is: 0 (R0)
; _hi start address is: 0 (R0)
; _lo start address is: 4 (R1)
;Ducati_logger_driver.c, 66 :: 		temp = GPIOE_ODR;
0x24C4	0x4A0A    LDR	R2, [PC, #40]
; temp start address is: 8 (R2)
0x24C6	0x6812    LDR	R2, [R2, #0]
;Ducati_logger_driver.c, 67 :: 		temp &= 0x00FF;
0x24C8	0xF00203FF  AND	R3, R2, #255
0x24CC	0xB29B    UXTH	R3, R3
; temp end address is: 8 (R2)
;Ducati_logger_driver.c, 68 :: 		GPIOE_ODR = temp | (_hi << 8);
0x24CE	0x0202    LSLS	R2, R0, #8
0x24D0	0xB292    UXTH	R2, R2
; _hi end address is: 0 (R0)
0x24D2	0x4313    ORRS	R3, R2
0x24D4	0xB29B    UXTH	R3, R3
0x24D6	0x4A06    LDR	R2, [PC, #24]
0x24D8	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 69 :: 		temp = GPIOG_ODR;
0x24DA	0x4A06    LDR	R2, [PC, #24]
; temp start address is: 0 (R0)
0x24DC	0x6810    LDR	R0, [R2, #0]
;Ducati_logger_driver.c, 70 :: 		temp &= 0xFF00;
0x24DE	0xF400427F  AND	R2, R0, #65280
0x24E2	0xB292    UXTH	R2, R2
; temp end address is: 0 (R0)
;Ducati_logger_driver.c, 71 :: 		GPIOG_ODR = temp | _lo;
0x24E4	0xEA420301  ORR	R3, R2, R1, LSL #0
0x24E8	0xB29B    UXTH	R3, R3
; _lo end address is: 4 (R1)
0x24EA	0x4A02    LDR	R2, [PC, #8]
0x24EC	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 72 :: 		}
L_end_Write_to_Data_Lines:
0x24EE	0x4770    BX	LR
0x24F0	0x10144002  	GPIOE_ODR+0
0x24F4	0x18144002  	GPIOG_ODR+0
; end of _Write_to_Data_Lines
_Write_Command:
;Ducati_logger_driver.c, 82 :: 		void Write_Command(unsigned short cmd) {
; cmd start address is: 0 (R0)
0x6B94	0xB081    SUB	SP, SP, #4
0x6B96	0xF8CDE000  STR	LR, [SP, #0]
; cmd end address is: 0 (R0)
; cmd start address is: 0 (R0)
;Ducati_logger_driver.c, 83 :: 		TFT_RS = 1;
0x6B9A	0x2201    MOVS	R2, #1
0x6B9C	0xB252    SXTB	R2, R2
0x6B9E	0x4909    LDR	R1, [PC, #36]
0x6BA0	0x600A    STR	R2, [R1, #0]
;Ducati_logger_driver.c, 84 :: 		Write_to_Data_Lines(0, cmd);
0x6BA2	0xB2C1    UXTB	R1, R0
; cmd end address is: 0 (R0)
0x6BA4	0x2000    MOVS	R0, #0
0x6BA6	0xF7FBFC8D  BL	_Write_to_Data_Lines+0
;Ducati_logger_driver.c, 85 :: 		TFT_WR = 0;
0x6BAA	0x2200    MOVS	R2, #0
0x6BAC	0xB252    SXTB	R2, R2
0x6BAE	0x4906    LDR	R1, [PC, #24]
0x6BB0	0x600A    STR	R2, [R1, #0]
;Ducati_logger_driver.c, 86 :: 		asm nop;
0x6BB2	0xBF00    NOP
;Ducati_logger_driver.c, 87 :: 		TFT_WR = 1;
0x6BB4	0x2201    MOVS	R2, #1
0x6BB6	0xB252    SXTB	R2, R2
0x6BB8	0x4903    LDR	R1, [PC, #12]
0x6BBA	0x600A    STR	R2, [R1, #0]
;Ducati_logger_driver.c, 88 :: 		}
L_end_Write_Command:
0x6BBC	0xF8DDE000  LDR	LR, [SP, #0]
0x6BC0	0xB001    ADD	SP, SP, #4
0x6BC2	0x4770    BX	LR
0x6BC4	0x82BC4242  	GPIOF_ODR+0
0x6BC8	0x82AC4242  	GPIOF_ODR+0
; end of _Write_Command
__Lib_USB_32F4xx_USBD_USR_DeviceReset:
;usbd_usr.c, 176 :: 		
; speed start address is: 0 (R0)
0x6A9C	0xB081    SUB	SP, SP, #4
; speed end address is: 0 (R0)
; speed start address is: 0 (R0)
;usbd_usr.c, 178 :: 		
0x6A9E	0xE002    B	L___Lib_USB_32F4xx_USBD_USR_DeviceReset31
; speed end address is: 0 (R0)
;usbd_usr.c, 180 :: 		
L___Lib_USB_32F4xx_USBD_USR_DeviceReset33:
;usbd_usr.c, 182 :: 		
0x6AA0	0xE006    B	L___Lib_USB_32F4xx_USBD_USR_DeviceReset32
;usbd_usr.c, 184 :: 		
L___Lib_USB_32F4xx_USBD_USR_DeviceReset34:
;usbd_usr.c, 186 :: 		
0x6AA2	0xE005    B	L___Lib_USB_32F4xx_USBD_USR_DeviceReset32
;usbd_usr.c, 187 :: 		
L___Lib_USB_32F4xx_USBD_USR_DeviceReset35:
;usbd_usr.c, 189 :: 		
0x6AA4	0xE004    B	L___Lib_USB_32F4xx_USBD_USR_DeviceReset32
;usbd_usr.c, 190 :: 		
L___Lib_USB_32F4xx_USBD_USR_DeviceReset31:
; speed start address is: 0 (R0)
0x6AA6	0x2800    CMP	R0, #0
0x6AA8	0xD0FA    BEQ	L___Lib_USB_32F4xx_USBD_USR_DeviceReset33
0x6AAA	0x2801    CMP	R0, #1
0x6AAC	0xD0F9    BEQ	L___Lib_USB_32F4xx_USBD_USR_DeviceReset34
; speed end address is: 0 (R0)
0x6AAE	0xE7F9    B	L___Lib_USB_32F4xx_USBD_USR_DeviceReset35
L___Lib_USB_32F4xx_USBD_USR_DeviceReset32:
;usbd_usr.c, 191 :: 		
L_end_USBD_USR_DeviceReset:
0x6AB0	0xB001    ADD	SP, SP, #4
0x6AB2	0x4770    BX	LR
; end of __Lib_USB_32F4xx_USBD_USR_DeviceReset
_TFT_Set_Index:
;__Lib_TFT_Defs.c, 54 :: 		void TFT_Set_Index(unsigned short index) {
; index start address is: 0 (R0)
0x69C0	0xB081    SUB	SP, SP, #4
0x69C2	0xF8CDE000  STR	LR, [SP, #0]
; index end address is: 0 (R0)
; index start address is: 0 (R0)
;__Lib_TFT_Defs.c, 55 :: 		TFT_RS = 0;
0x69C6	0x2200    MOVS	R2, #0
0x69C8	0xB252    SXTB	R2, R2
0x69CA	0x4908    LDR	R1, [PC, #32]
0x69CC	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 56 :: 		Write_to_Port(index);
; index end address is: 0 (R0)
0x69CE	0xF7FBFD37  BL	__Lib_TFT_Defs_Write_to_Port+0
;__Lib_TFT_Defs.c, 57 :: 		TFT_Write_Strobe();
0x69D2	0x2200    MOVS	R2, #0
0x69D4	0xB252    SXTB	R2, R2
0x69D6	0x4906    LDR	R1, [PC, #24]
0x69D8	0x600A    STR	R2, [R1, #0]
0x69DA	0xBF00    NOP
0x69DC	0x2201    MOVS	R2, #1
0x69DE	0xB252    SXTB	R2, R2
0x69E0	0x4903    LDR	R1, [PC, #12]
0x69E2	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 58 :: 		}
L_end_TFT_Set_Index:
0x69E4	0xF8DDE000  LDR	LR, [SP, #0]
0x69E8	0xB001    ADD	SP, SP, #4
0x69EA	0x4770    BX	LR
0x69EC	0x82BC4242  	TFT_RS+0
0x69F0	0x82AC4242  	TFT_WR+0
; end of _TFT_Set_Index
__Lib_TFT_Defs_Write_to_Port:
;__Lib_TFT_Defs.c, 43 :: 		static void Write_to_Port(char value) {
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
;__Lib_TFT_Defs.c, 46 :: 		temp &= 0xFF00;
0x2440	0x4A04    LDR	R2, [PC, #16]
0x2442	0x8811    LDRH	R1, [R2, #0]
0x2444	0xF401417F  AND	R1, R1, #65280
0x2448	0xB289    UXTH	R1, R1
;__Lib_TFT_Defs.c, 47 :: 		TFT_DataPort = value | temp;
0x244A	0xEA400101  ORR	R1, R0, R1, LSL #0
; value end address is: 0 (R0)
0x244E	0x8011    STRH	R1, [R2, #0]
;__Lib_TFT_Defs.c, 48 :: 		}
L_end_Write_to_Port:
0x2450	0x4770    BX	LR
0x2452	0xBF00    NOP
0x2454	0x10144002  	TFT_DataPort+0
; end of __Lib_TFT_Defs_Write_to_Port
_TFT_Write_Command:
;__Lib_TFT_Defs.c, 64 :: 		void TFT_Write_Command(unsigned short cmd) {
; cmd start address is: 0 (R0)
0x698C	0xB081    SUB	SP, SP, #4
0x698E	0xF8CDE000  STR	LR, [SP, #0]
; cmd end address is: 0 (R0)
; cmd start address is: 0 (R0)
;__Lib_TFT_Defs.c, 65 :: 		TFT_RS = 1;
0x6992	0x2201    MOVS	R2, #1
0x6994	0xB252    SXTB	R2, R2
0x6996	0x4908    LDR	R1, [PC, #32]
0x6998	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 66 :: 		Write_to_Port(cmd);
; cmd end address is: 0 (R0)
0x699A	0xF7FBFD51  BL	__Lib_TFT_Defs_Write_to_Port+0
;__Lib_TFT_Defs.c, 67 :: 		TFT_Write_Strobe();
0x699E	0x2200    MOVS	R2, #0
0x69A0	0xB252    SXTB	R2, R2
0x69A2	0x4906    LDR	R1, [PC, #24]
0x69A4	0x600A    STR	R2, [R1, #0]
0x69A6	0xBF00    NOP
0x69A8	0x2201    MOVS	R2, #1
0x69AA	0xB252    SXTB	R2, R2
0x69AC	0x4903    LDR	R1, [PC, #12]
0x69AE	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 68 :: 		}
L_end_TFT_Write_Command:
0x69B0	0xF8DDE000  LDR	LR, [SP, #0]
0x69B4	0xB001    ADD	SP, SP, #4
0x69B6	0x4770    BX	LR
0x69B8	0x82BC4242  	TFT_RS+0
0x69BC	0x82AC4242  	TFT_WR+0
; end of _TFT_Write_Command
_TFT_SSD1963_8bit_Set_Index:
;__Lib_TFT_Defs.c, 2736 :: 		void TFT_SSD1963_8bit_Set_Index(unsigned short index) {
; index start address is: 0 (R0)
0x6A48	0xB082    SUB	SP, SP, #8
0x6A4A	0xF8CDE000  STR	LR, [SP, #0]
; index end address is: 0 (R0)
; index start address is: 0 (R0)
;__Lib_TFT_Defs.c, 2737 :: 		Delay_1us(); Delay_1us();
0x6A4E	0xF7F9FC87  BL	_Delay_1us+0
0x6A52	0xF7F9FC85  BL	_Delay_1us+0
;__Lib_TFT_Defs.c, 2738 :: 		TFT_CS = 0;
0x6A56	0x2300    MOVS	R3, #0
0x6A58	0xB25B    SXTB	R3, R3
0x6A5A	0x490C    LDR	R1, [PC, #48]
0x6A5C	0x9101    STR	R1, [SP, #4]
0x6A5E	0x600B    STR	R3, [R1, #0]
;__Lib_TFT_Defs.c, 2739 :: 		TFT_RD = 1;
0x6A60	0x2201    MOVS	R2, #1
0x6A62	0xB252    SXTB	R2, R2
0x6A64	0x490A    LDR	R1, [PC, #40]
0x6A66	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 2740 :: 		TFT_RS = 0;
0x6A68	0x490A    LDR	R1, [PC, #40]
0x6A6A	0x600B    STR	R3, [R1, #0]
;__Lib_TFT_Defs.c, 2741 :: 		Write_to_Port(index);
; index end address is: 0 (R0)
0x6A6C	0xF7FBFCE8  BL	__Lib_TFT_Defs_Write_to_Port+0
;__Lib_TFT_Defs.c, 2742 :: 		TFT_WR = 0;
0x6A70	0x2200    MOVS	R2, #0
0x6A72	0xB252    SXTB	R2, R2
0x6A74	0x4908    LDR	R1, [PC, #32]
0x6A76	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 2743 :: 		TFT_WR = 1;
0x6A78	0x2201    MOVS	R2, #1
0x6A7A	0xB252    SXTB	R2, R2
0x6A7C	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 2744 :: 		TFT_CS = 1;
0x6A7E	0x9901    LDR	R1, [SP, #4]
0x6A80	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 2745 :: 		}
L_end_TFT_SSD1963_8bit_Set_Index:
0x6A82	0xF8DDE000  LDR	LR, [SP, #0]
0x6A86	0xB002    ADD	SP, SP, #8
0x6A88	0x4770    BX	LR
0x6A8A	0xBF00    NOP
0x6A8C	0x82B44242  	TFT_CS+0
0x6A90	0x82B04242  	TFT_RD+0
0x6A94	0x82BC4242  	TFT_RS+0
0x6A98	0x82AC4242  	TFT_WR+0
; end of _TFT_SSD1963_8bit_Set_Index
_TFT_SSD1963YT_8bit_Write_Command:
;__Lib_TFT_Defs.c, 2751 :: 		void TFT_SSD1963YT_8bit_Write_Command(unsigned char command) {
; command start address is: 0 (R0)
0x69F4	0xB082    SUB	SP, SP, #8
0x69F6	0xF8CDE000  STR	LR, [SP, #0]
; command end address is: 0 (R0)
; command start address is: 0 (R0)
;__Lib_TFT_Defs.c, 2752 :: 		TFT_CS = 0;
0x69FA	0x2200    MOVS	R2, #0
0x69FC	0xB252    SXTB	R2, R2
0x69FE	0x490E    LDR	R1, [PC, #56]
0x6A00	0x9101    STR	R1, [SP, #4]
0x6A02	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 2753 :: 		TFT_RD = 1;
0x6A04	0x2201    MOVS	R2, #1
0x6A06	0xB252    SXTB	R2, R2
0x6A08	0x490C    LDR	R1, [PC, #48]
0x6A0A	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 2754 :: 		TFT_RS = 1;
0x6A0C	0x490C    LDR	R1, [PC, #48]
0x6A0E	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 2755 :: 		Write_to_Port(command);
; command end address is: 0 (R0)
0x6A10	0xF7FBFD16  BL	__Lib_TFT_Defs_Write_to_Port+0
;__Lib_TFT_Defs.c, 2756 :: 		TFT_WR = 0;
0x6A14	0x2200    MOVS	R2, #0
0x6A16	0xB252    SXTB	R2, R2
0x6A18	0x490A    LDR	R1, [PC, #40]
0x6A1A	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 2757 :: 		TFT_WR = 1;
0x6A1C	0x2201    MOVS	R2, #1
0x6A1E	0xB252    SXTB	R2, R2
0x6A20	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 2758 :: 		TFT_CS = 1;
0x6A22	0x9901    LDR	R1, [SP, #4]
0x6A24	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 2759 :: 		Delay_1us(); Delay_1us();
0x6A26	0xF7F9FC9B  BL	_Delay_1us+0
0x6A2A	0xF7F9FC99  BL	_Delay_1us+0
;__Lib_TFT_Defs.c, 2760 :: 		}
L_end_TFT_SSD1963YT_8bit_Write_Command:
0x6A2E	0xF8DDE000  LDR	LR, [SP, #0]
0x6A32	0xB002    ADD	SP, SP, #8
0x6A34	0x4770    BX	LR
0x6A36	0xBF00    NOP
0x6A38	0x82B44242  	TFT_CS+0
0x6A3C	0x82B04242  	TFT_RD+0
0x6A40	0x82BC4242  	TFT_RS+0
0x6A44	0x82AC4242  	TFT_WR+0
; end of _TFT_SSD1963YT_8bit_Write_Command
_Delay_50us:
;__Lib_Delays.c, 25 :: 		void Delay_50us() {
;__Lib_Delays.c, 26 :: 		Delay_us(50);
0x6C08	0xF64017C2  MOVW	R7, #2498
0x6C0C	0xF2C00700  MOVT	R7, #0
L_Delay_50us6:
0x6C10	0x1E7F    SUBS	R7, R7, #1
0x6C12	0xD1FD    BNE	L_Delay_50us6
0x6C14	0xBF00    NOP
0x6C16	0xBF00    NOP
0x6C18	0xBF00    NOP
0x6C1A	0xBF00    NOP
0x6C1C	0xBF00    NOP
;__Lib_Delays.c, 27 :: 		}
L_end_Delay_50us:
0x6C1E	0x4770    BX	LR
; end of _Delay_50us
_Is_TFT_MM_Plus:
;__Lib_TFT.c, 154 :: 		
0x5AD0	0xB081    SUB	SP, SP, #4
;__Lib_TFT.c, 155 :: 		
0x5AD2	0x4802    LDR	R0, [PC, #8]
0x5AD4	0x7800    LDRB	R0, [R0, #0]
;__Lib_TFT.c, 156 :: 		
L_end_Is_TFT_MM_Plus:
0x5AD6	0xB001    ADD	SP, SP, #4
0x5AD8	0x4770    BX	LR
0x5ADA	0xBF00    NOP
0x5ADC	0x03412000  	__Lib_TFT___MM_plus+0
; end of _Is_TFT_MM_Plus
_Is_TFT_Rotated_180:
;__Lib_TFT_Defs.c, 25 :: 		char Is_TFT_Rotated_180() {
;__Lib_TFT_Defs.c, 26 :: 		return TFT_Rotated_180;
0x42B0	0x4801    LDR	R0, [PC, #4]
0x42B2	0x7800    LDRB	R0, [R0, #0]
;__Lib_TFT_Defs.c, 27 :: 		}
L_end_Is_TFT_Rotated_180:
0x42B4	0x4770    BX	LR
0x42B6	0xBF00    NOP
0x42B8	0x03472000  	__Lib_TFT_Defs_TFT_Rotated_180+0
; end of _Is_TFT_Rotated_180
_TFT_Set_Ext_Buffer:
;__Lib_TFT.c, 3310 :: 		
; getExtDataPtr start address is: 0 (R0)
0xD1E8	0xB081    SUB	SP, SP, #4
; getExtDataPtr end address is: 0 (R0)
; getExtDataPtr start address is: 0 (R0)
;__Lib_TFT.c, 3311 :: 		
0xD1EA	0x4902    LDR	R1, [PC, #8]
0xD1EC	0x6008    STR	R0, [R1, #0]
; getExtDataPtr end address is: 0 (R0)
;__Lib_TFT.c, 3312 :: 		
L_end_TFT_Set_Ext_Buffer:
0xD1EE	0xB001    ADD	SP, SP, #4
0xD1F0	0x4770    BX	LR
0xD1F2	0xBF00    NOP
0xD1F4	0x2DF42000  	_TFT_Get_Ext_Data_Ptr+0
; end of _TFT_Set_Ext_Buffer
_STMPE610_Config:
;Ducati_logger_driver.c, 4677 :: 		char STMPE610_Config()  {
0xEE68	0xB081    SUB	SP, SP, #4
0xEE6A	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_driver.c, 4678 :: 		STMPE610_SetI2CAddress(STMPE610_I2C_ADDR1);
0xEE6E	0x2088    MOVS	R0, #136
0xEE70	0xF7FEFA24  BL	_STMPE610_SetI2CAddress+0
;Ducati_logger_driver.c, 4679 :: 		if (STMPE610_IsOperational() != 0){
0xEE74	0xF7FEFA3E  BL	_STMPE610_IsOperational+0
0xEE78	0xB108    CBZ	R0, L_STMPE610_Config255
;Ducati_logger_driver.c, 4680 :: 		return STMPE610_IO_NOT_OPERATIONAL;
0xEE7A	0x2004    MOVS	R0, #4
0xEE7C	0xE049    B	L_end_STMPE610_Config
;Ducati_logger_driver.c, 4681 :: 		}
L_STMPE610_Config255:
;Ducati_logger_driver.c, 4683 :: 		STMPE610_Reset();
0xEE7E	0xF7FEFA25  BL	_STMPE610_Reset+0
;Ducati_logger_driver.c, 4684 :: 		STMPE610_Module(STMPE610_MODULE_TS | STMPE610_MODULE_ADC, STMPE610_ENABLE);
0xEE82	0x2101    MOVS	R1, #1
0xEE84	0x2003    MOVS	R0, #3
0xEE86	0xF7FEF98D  BL	_STMPE610_Module+0
;Ducati_logger_driver.c, 4685 :: 		STMPE610_AlternateFunction(STMPE610_GPIO_PIN1, STMPE610_ENABLE);
0xEE8A	0x2101    MOVS	R1, #1
0xEE8C	0x2002    MOVS	R0, #2
0xEE8E	0xF7FEF8DF  BL	_STMPE610_AlternateFunction+0
;Ducati_logger_driver.c, 4686 :: 		STMPE610_SetGPIOPin(STMPE610_GPIO_PIN1, 0);   // IN1 to "0" -> I2C communication
0xEE92	0x2100    MOVS	R1, #0
0xEE94	0x2002    MOVS	R0, #2
0xEE96	0xF7FEF8C9  BL	_STMPE610_SetGPIOPin+0
;Ducati_logger_driver.c, 4687 :: 		STMPE610_SetSize(480,272);
0xEE9A	0xF2401110  MOVW	R1, #272
0xEE9E	0xF24010E0  MOVW	R0, #480
0xEEA2	0xF7FEF8F7  BL	_STMPE610_SetSize+0
;Ducati_logger_driver.c, 4688 :: 		STMPE610_Module(STMPE610_MODULE_TS | STMPE610_MODULE_ADC, STMPE610_ENABLE);
0xEEA6	0x2101    MOVS	R1, #1
0xEEA8	0x2003    MOVS	R0, #3
0xEEAA	0xF7FEF97B  BL	_STMPE610_Module+0
;Ducati_logger_driver.c, 4689 :: 		STMPE610_EnableInterrupt(STMPE610_IE_TOUCH_DET | STMPE610_IE_FIFO_TH | STMPE610_IE_FIFO_0FLOW, STMPE610_ENABLE);
0xEEAE	0x2101    MOVS	R1, #1
0xEEB0	0x2007    MOVS	R0, #7
0xEEB2	0xF7FEF94D  BL	_STMPE610_EnableInterrupt+0
;Ducati_logger_driver.c, 4690 :: 		STMPE610_ConfigureInterrupt(STMPE610_INT_POLARITY_ACTIVE_HIGH | STMPE610_INT_TYPE_EDGE | STMPE610_INT_ENABLE_ALL);
0xEEB6	0x2007    MOVS	R0, #7
0xEEB8	0xF7FEF93A  BL	_STMPE610_ConfigureInterrupt+0
;Ducati_logger_driver.c, 4691 :: 		STMPE610_SetADC(STMPE610_ADC_CTRL1_SAMPLETIME_44 | STMPE610_ADC_CTRL1_ADC_12BIT | STMPE610_ADC_CTRL1_INT_REFERENCE);
0xEEBC	0x2014    MOVS	R0, #20
0xEEBE	0xF7FDFC13  BL	_STMPE610_SetADC+0
;Ducati_logger_driver.c, 4692 :: 		Delay_10ms(); Delay_10ms();
0xEEC2	0xF7F7FEAD  BL	_Delay_10ms+0
0xEEC6	0xF7F7FEAB  BL	_Delay_10ms+0
;Ducati_logger_driver.c, 4693 :: 		STMPE610_SetADCClock(STMPE610_ADC_CTRL2_3250_kHZ);
0xEECA	0x2001    MOVS	R0, #1
0xEECC	0xF7FDFBFC  BL	_STMPE610_SetADCClock+0
;Ducati_logger_driver.c, 4694 :: 		STMPE610_AlternateFunction(STMPE610_GPIO_PIN4 | STMPE610_GPIO_PIN5 | STMPE610_GPIO_PIN6 | STMPE610_GPIO_PIN7, STMPE610_DISABLE);
0xEED0	0x2100    MOVS	R1, #0
0xEED2	0x20F0    MOVS	R0, #240
0xEED4	0xF7FEF8BC  BL	_STMPE610_AlternateFunction+0
;Ducati_logger_driver.c, 4695 :: 		STMPE610_ConfigureTSC(STMPE610_TSC_CFG_AVE_CTRL_4S, STMPE610_TSC_CFG_TOUCH_DET_DELAY_500uS, STMPE610_TSC_CFG_TOUCH_SETTLING_500uS);
0xEED8	0x2202    MOVS	R2, #2
0xEEDA	0x2118    MOVS	R1, #24
0xEEDC	0x2080    MOVS	R0, #128
0xEEDE	0xF7FDFC13  BL	_STMPE610_ConfigureTSC+0
;Ducati_logger_driver.c, 4696 :: 		STMPE610_SetFIFOThreshold(1);
0xEEE2	0x2001    MOVS	R0, #1
0xEEE4	0xF7FDFC3C  BL	_STMPE610_SetFIFOThreshold+0
;Ducati_logger_driver.c, 4697 :: 		STMPE610_ResetFIFO();
0xEEE8	0xF7FDFC22  BL	_STMPE610_ResetFIFO+0
;Ducati_logger_driver.c, 4698 :: 		STMPE610_TSIDrive(STMPE610_TSC_I_DRIVE_20mA);
0xEEEC	0x2000    MOVS	R0, #0
0xEEEE	0xF7FDFBDB  BL	_STMPE610_TSIDrive+0
;Ducati_logger_driver.c, 4699 :: 		STMPE610_TSControl(STMPE610_TSC_CTRL_TRACK0 | STMPE610_TSC_CTRL_ACQU_XYZ | STMPE610_TSC_CTRL_ENABLE);
0xEEF2	0x2001    MOVS	R0, #1
0xEEF4	0xF7FDFBA8  BL	_STMPE610_TSControl+0
;Ducati_logger_driver.c, 4700 :: 		STMPE610_ZDataFraction(STMPE610_FRACP4_WHOLP4);
0xEEF8	0x2004    MOVS	R0, #4
0xEEFA	0xF7FDFB95  BL	_STMPE610_ZDataFraction+0
;Ducati_logger_driver.c, 4701 :: 		STMPE610_SetTouchPressureThreshold(70);
0xEEFE	0x2046    MOVS	R0, #70
0xEF00	0xF7FDFBB2  BL	_STMPE610_SetTouchPressureThreshold+0
;Ducati_logger_driver.c, 4702 :: 		STMPE610_ClearInterrupts();
0xEF04	0xF7FDFBC0  BL	_STMPE610_ClearInterrupts+0
;Ducati_logger_driver.c, 4703 :: 		STMPE610_WriteReg(STMPE610_INT_CTRL_REG, 0x01);
0xEF08	0x2101    MOVS	R1, #1
0xEF0A	0x2009    MOVS	R0, #9
0xEF0C	0xF7F8F838  BL	_STMPE610_WriteReg+0
;Ducati_logger_driver.c, 4704 :: 		return STMPE610_OK;
0xEF10	0x2000    MOVS	R0, #0
;Ducati_logger_driver.c, 4705 :: 		}
L_end_STMPE610_Config:
0xEF12	0xF8DDE000  LDR	LR, [SP, #0]
0xEF16	0xB001    ADD	SP, SP, #4
0xEF18	0x4770    BX	LR
; end of _STMPE610_Config
_STMPE610_SetI2CAddress:
;__Lib_STMPE610.c, 231 :: 		
; DeviceAddr start address is: 0 (R0)
0xD2BC	0xB081    SUB	SP, SP, #4
; DeviceAddr end address is: 0 (R0)
; DeviceAddr start address is: 0 (R0)
;__Lib_STMPE610.c, 233 :: 		
0xD2BE	0x4902    LDR	R1, [PC, #8]
0xD2C0	0x7008    STRB	R0, [R1, #0]
; DeviceAddr end address is: 0 (R0)
;__Lib_STMPE610.c, 234 :: 		
L_end_STMPE610_SetI2CAddress:
0xD2C2	0xB001    ADD	SP, SP, #4
0xD2C4	0x4770    BX	LR
0xD2C6	0xBF00    NOP
0xD2C8	0x2DC82000  	__Lib_STMPE610_STMPE610_I2C_ADDRESS+0
; end of _STMPE610_SetI2CAddress
_STMPE610_IsOperational:
;__Lib_STMPE610.c, 215 :: 		
0xD2F4	0xB081    SUB	SP, SP, #4
0xD2F6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_STMPE610.c, 217 :: 		
0xD2FA	0xF7FAFDFF  BL	_STMPE610_ReadID+0
0xD2FE	0xF6400111  MOVW	R1, #2065
0xD302	0x4288    CMP	R0, R1
0xD304	0xD001    BEQ	L_STMPE610_IsOperational0
;__Lib_STMPE610.c, 220 :: 		
0xD306	0x2001    MOVS	R0, #1
0xD308	0xE000    B	L_end_STMPE610_IsOperational
;__Lib_STMPE610.c, 221 :: 		
L_STMPE610_IsOperational0:
;__Lib_STMPE610.c, 222 :: 		
0xD30A	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 224 :: 		
L_end_STMPE610_IsOperational:
0xD30C	0xF8DDE000  LDR	LR, [SP, #0]
0xD310	0xB001    ADD	SP, SP, #4
0xD312	0x4770    BX	LR
; end of _STMPE610_IsOperational
_STMPE610_ReadID:
;__Lib_STMPE610.c, 198 :: 		
0x7EFC	0xB082    SUB	SP, SP, #8
0x7EFE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_STMPE610.c, 199 :: 		
;__Lib_STMPE610.c, 202 :: 		
0x7F02	0x2000    MOVS	R0, #0
0x7F04	0xF7FCF98A  BL	_STMPE610_ReadReg+0
; tmp start address is: 4 (R1)
0x7F08	0xB2C1    UXTB	R1, R0
;__Lib_STMPE610.c, 203 :: 		
0x7F0A	0x0208    LSLS	R0, R1, #8
0x7F0C	0xB281    UXTH	R1, R0
;__Lib_STMPE610.c, 204 :: 		
0x7F0E	0xF8AD1004  STRH	R1, [SP, #4]
0x7F12	0x2001    MOVS	R0, #1
0x7F14	0xF7FCF982  BL	_STMPE610_ReadReg+0
0x7F18	0xF8BD1004  LDRH	R1, [SP, #4]
0x7F1C	0xEA410000  ORR	R0, R1, R0, LSL #0
; tmp end address is: 4 (R1)
; tmp start address is: 0 (R0)
;__Lib_STMPE610.c, 207 :: 		
; tmp end address is: 0 (R0)
;__Lib_STMPE610.c, 208 :: 		
L_end_STMPE610_ReadID:
0x7F20	0xF8DDE000  LDR	LR, [SP, #0]
0x7F24	0xB002    ADD	SP, SP, #8
0x7F26	0x4770    BX	LR
; end of _STMPE610_ReadID
_STMPE610_ReadReg:
;__Lib_STMPE610.c, 182 :: 		
; RegisterAddr start address is: 0 (R0)
0x421C	0xB083    SUB	SP, SP, #12
0x421E	0xF8CDE000  STR	LR, [SP, #0]
; RegisterAddr end address is: 0 (R0)
; RegisterAddr start address is: 0 (R0)
;__Lib_STMPE610.c, 185 :: 		
0x4222	0x4C13    LDR	R4, [PC, #76]
0x4224	0x6824    LDR	R4, [R4, #0]
0x4226	0xF88D0004  STRB	R0, [SP, #4]
0x422A	0x47A0    BLX	R4
0x422C	0xF89D0004  LDRB	R0, [SP, #4]
;__Lib_STMPE610.c, 187 :: 		
0x4230	0xAA02    ADD	R2, SP, #8
0x4232	0x7010    STRB	R0, [R2, #0]
; RegisterAddr end address is: 0 (R0)
;__Lib_STMPE610.c, 188 :: 		
0x4234	0x490F    LDR	R1, [PC, #60]
0x4236	0x7809    LDRB	R1, [R1, #0]
0x4238	0x0849    LSRS	R1, R1, #1
0x423A	0xF2400300  MOVW	R3, #0
0x423E	0xB2C8    UXTB	R0, R1
0x4240	0x4611    MOV	R1, R2
0x4242	0x2201    MOVS	R2, #1
0x4244	0x4C0C    LDR	R4, [PC, #48]
0x4246	0x6824    LDR	R4, [R4, #0]
0x4248	0x47A0    BLX	R4
;__Lib_STMPE610.c, 189 :: 		
0x424A	0xAA02    ADD	R2, SP, #8
0x424C	0x4909    LDR	R1, [PC, #36]
0x424E	0x7809    LDRB	R1, [R1, #0]
0x4250	0x0849    LSRS	R1, R1, #1
0x4252	0xF2400301  MOVW	R3, #1
0x4256	0xB2C8    UXTB	R0, R1
0x4258	0x4611    MOV	R1, R2
0x425A	0x2201    MOVS	R2, #1
0x425C	0x4C07    LDR	R4, [PC, #28]
0x425E	0x6824    LDR	R4, [R4, #0]
0x4260	0x47A0    BLX	R4
;__Lib_STMPE610.c, 191 :: 		
0x4262	0xA902    ADD	R1, SP, #8
0x4264	0x7809    LDRB	R1, [R1, #0]
0x4266	0xB2C8    UXTB	R0, R1
;__Lib_STMPE610.c, 192 :: 		
L_end_STMPE610_ReadReg:
0x4268	0xF8DDE000  LDR	LR, [SP, #0]
0x426C	0xB003    ADD	SP, SP, #12
0x426E	0x4770    BX	LR
0x4270	0x2A942000  	_I2C_Start_Ptr+0
0x4274	0x2DC82000  	__Lib_STMPE610_STMPE610_I2C_ADDRESS+0
0x4278	0x2A9C2000  	_I2C_Write_Ptr+0
0x427C	0x2A982000  	_I2C_Read_Ptr+0
; end of _STMPE610_ReadReg
_I2C1_Write:
;__Lib_I2C_123.c, 318 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x2458	0xB081    SUB	SP, SP, #4
0x245A	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_123.c, 319 :: 		
0x245E	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x2460	0x4613    MOV	R3, R2
0x2462	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x2464	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x2466	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x2468	0xF7FFF880  BL	_I2Cx_Write+0
0x246C	0xB001    ADD	SP, SP, #4
;__Lib_I2C_123.c, 320 :: 		
L_end_I2C1_Write:
0x246E	0xF8DDE000  LDR	LR, [SP, #0]
0x2472	0xB001    ADD	SP, SP, #4
0x2474	0x4770    BX	LR
0x2476	0xBF00    NOP
0x2478	0x54004000  	I2C1_CR1+0
; end of _I2C1_Write
_I2Cx_Write:
;__Lib_I2C_123.c, 175 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x156C	0xB081    SUB	SP, SP, #4
0x156E	0xF8CDE000  STR	LR, [SP, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; slave_address start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x1572	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_123.c, 177 :: 		
0x1574	0xF2000510  ADDW	R5, R0, #16
0x1578	0x004C    LSLS	R4, R1, #1
0x157A	0xB2A4    UXTH	R4, R4
; slave_address end address is: 4 (R1)
0x157C	0x602C    STR	R4, [R5, #0]
; I2C_BASE end address is: 0 (R0)
; buf end address is: 8 (R2)
; count end address is: 12 (R3)
; END_mode end address is: 24 (R6)
0x157E	0x4634    MOV	R4, R6
0x1580	0x4606    MOV	R6, R0
0x1582	0x4690    MOV	R8, R2
0x1584	0x461F    MOV	R7, R3
;__Lib_I2C_123.c, 178 :: 		
L_I2Cx_Write5:
; END_mode start address is: 16 (R4)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
0x1586	0x4922    LDR	R1, [PC, #136]
0x1588	0x4630    MOV	R0, R6
0x158A	0xF000FBE7  BL	_ChekXForEvent+0
0x158E	0xB900    CBNZ	R0, L_I2Cx_Write6
;__Lib_I2C_123.c, 179 :: 		
0x1590	0xE7F9    B	L_I2Cx_Write5
L_I2Cx_Write6:
;__Lib_I2C_123.c, 180 :: 		
; i start address is: 0 (R0)
0x1592	0x2000    MOVS	R0, #0
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; END_mode end address is: 16 (R4)
; I2C_BASE end address is: 24 (R6)
0x1594	0x4621    MOV	R1, R4
L_I2Cx_Write7:
; i start address is: 0 (R0)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
; END_mode start address is: 4 (R1)
0x1596	0x1E7C    SUBS	R4, R7, #1
0x1598	0x42A0    CMP	R0, R4
0x159A	0xD212    BCS	L_I2Cx_Write8
;__Lib_I2C_123.c, 181 :: 		
0x159C	0xF2060510  ADDW	R5, R6, #16
0x15A0	0xEB080400  ADD	R4, R8, R0, LSL #0
0x15A4	0x7824    LDRB	R4, [R4, #0]
0x15A6	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 4 (R1)
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; I2C_BASE end address is: 24 (R6)
0x15A8	0x4681    MOV	R9, R0
0x15AA	0x460D    MOV	R5, R1
;__Lib_I2C_123.c, 182 :: 		
L_I2Cx_Write10:
; END_mode start address is: 20 (R5)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
; i start address is: 36 (R9)
0x15AC	0x4919    LDR	R1, [PC, #100]
0x15AE	0x4630    MOV	R0, R6
0x15B0	0xF000FBD4  BL	_ChekXForEvent+0
0x15B4	0xB900    CBNZ	R0, L_I2Cx_Write11
;__Lib_I2C_123.c, 183 :: 		
0x15B6	0xE7F9    B	L_I2Cx_Write10
L_I2Cx_Write11:
;__Lib_I2C_123.c, 180 :: 		
0x15B8	0xF1090401  ADD	R4, R9, #1
; i end address is: 36 (R9)
; i start address is: 0 (R0)
0x15BC	0x4620    MOV	R0, R4
;__Lib_I2C_123.c, 184 :: 		
0x15BE	0x4629    MOV	R1, R5
; END_mode end address is: 20 (R5)
; count end address is: 28 (R7)
0x15C0	0xE7E9    B	L_I2Cx_Write7
L_I2Cx_Write8:
;__Lib_I2C_123.c, 186 :: 		
; END_mode start address is: 4 (R1)
0x15C2	0xF2060510  ADDW	R5, R6, #16
0x15C6	0xEB080400  ADD	R4, R8, R0, LSL #0
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
0x15CA	0x7824    LDRB	R4, [R4, #0]
0x15CC	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x15CE	0x460C    MOV	R4, R1
;__Lib_I2C_123.c, 187 :: 		
L_I2Cx_Write12:
; END_mode start address is: 16 (R4)
; I2C_BASE start address is: 24 (R6)
0x15D0	0x4911    LDR	R1, [PC, #68]
0x15D2	0x4630    MOV	R0, R6
0x15D4	0xF000FBC2  BL	_ChekXForEvent+0
0x15D8	0xB900    CBNZ	R0, L_I2Cx_Write13
;__Lib_I2C_123.c, 188 :: 		
0x15DA	0xE7F9    B	L_I2Cx_Write12
L_I2Cx_Write13:
;__Lib_I2C_123.c, 189 :: 		
0x15DC	0x2C01    CMP	R4, #1
0x15DE	0xD105    BNE	L_I2Cx_Write14
; END_mode end address is: 16 (R4)
;__Lib_I2C_123.c, 190 :: 		
0x15E0	0x2501    MOVS	R5, #1
0x15E2	0x6834    LDR	R4, [R6, #0]
0x15E4	0xF3652449  BFI	R4, R5, #9, #1
0x15E8	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x15EA	0xE00B    B	L_I2Cx_Write15
L_I2Cx_Write14:
;__Lib_I2C_123.c, 192 :: 		
; I2C_BASE start address is: 24 (R6)
0x15EC	0x2501    MOVS	R5, #1
0x15EE	0x6834    LDR	R4, [R6, #0]
0x15F0	0xF3652408  BFI	R4, R5, #8, #1
0x15F4	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x15F6	0x4634    MOV	R4, R6
;__Lib_I2C_123.c, 193 :: 		
L_I2Cx_Write16:
; I2C_BASE start address is: 16 (R4)
0x15F8	0x4908    LDR	R1, [PC, #32]
0x15FA	0x4620    MOV	R0, R4
0x15FC	0xF000FBAE  BL	_ChekXForEvent+0
0x1600	0xB900    CBNZ	R0, L_I2Cx_Write17
;__Lib_I2C_123.c, 194 :: 		
; I2C_BASE end address is: 16 (R4)
0x1602	0xE7F9    B	L_I2Cx_Write16
L_I2Cx_Write17:
;__Lib_I2C_123.c, 195 :: 		
L_I2Cx_Write15:
;__Lib_I2C_123.c, 196 :: 		
0x1604	0x2000    MOVS	R0, #0
;__Lib_I2C_123.c, 197 :: 		
L_end_I2Cx_Write:
0x1606	0xF8DDE000  LDR	LR, [SP, #0]
0x160A	0xB001    ADD	SP, SP, #4
0x160C	0x4770    BX	LR
0x160E	0xBF00    NOP
0x1610	0x00820007  	#458882
0x1614	0x00800007  	#458880
0x1618	0x00840007  	#458884
0x161C	0x00010003  	#196609
; end of _I2Cx_Write
_I2C2_Write:
;__Lib_I2C_123.c, 348 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x241C	0xB081    SUB	SP, SP, #4
0x241E	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_123.c, 349 :: 		
0x2422	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x2424	0x4613    MOV	R3, R2
0x2426	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x2428	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x242A	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x242C	0xF7FFF89E  BL	_I2Cx_Write+0
0x2430	0xB001    ADD	SP, SP, #4
;__Lib_I2C_123.c, 350 :: 		
L_end_I2C2_Write:
0x2432	0xF8DDE000  LDR	LR, [SP, #0]
0x2436	0xB001    ADD	SP, SP, #4
0x2438	0x4770    BX	LR
0x243A	0xBF00    NOP
0x243C	0x58004000  	I2C2_CR1+0
; end of _I2C2_Write
_I2C3_Write:
;__Lib_I2C_123.c, 379 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x247C	0xB081    SUB	SP, SP, #4
0x247E	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_123.c, 380 :: 		
0x2482	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x2484	0x4613    MOV	R3, R2
0x2486	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x2488	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x248A	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x248C	0xF7FFF86E  BL	_I2Cx_Write+0
0x2490	0xB001    ADD	SP, SP, #4
;__Lib_I2C_123.c, 381 :: 		
L_end_I2C3_Write:
0x2492	0xF8DDE000  LDR	LR, [SP, #0]
0x2496	0xB001    ADD	SP, SP, #4
0x2498	0x4770    BX	LR
0x249A	0xBF00    NOP
0x249C	0x5C004000  	I2C3_CR1+0
; end of _I2C3_Write
_I2C1_Read:
;__Lib_I2C_123.c, 314 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x24F8	0xB081    SUB	SP, SP, #4
0x24FA	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_123.c, 315 :: 		
0x24FE	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x2500	0x4613    MOV	R3, R2
0x2502	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x2504	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x2506	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x2508	0xF7FEFDC6  BL	_I2Cx_Read+0
0x250C	0xB001    ADD	SP, SP, #4
;__Lib_I2C_123.c, 316 :: 		
L_end_I2C1_Read:
0x250E	0xF8DDE000  LDR	LR, [SP, #0]
0x2512	0xB001    ADD	SP, SP, #4
0x2514	0x4770    BX	LR
0x2516	0xBF00    NOP
0x2518	0x54004000  	I2C1_CR1+0
; end of _I2C1_Read
_I2Cx_Read:
;__Lib_I2C_123.c, 201 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x1098	0xB082    SUB	SP, SP, #8
0x109A	0xF8CDE000  STR	LR, [SP, #0]
0x109E	0x461F    MOV	R7, R3
0x10A0	0xB2CB    UXTB	R3, R1
0x10A2	0x4601    MOV	R1, R0
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; slave_address start address is: 12 (R3)
; buf start address is: 8 (R2)
; count start address is: 28 (R7)
; END_mode start address is: 24 (R6)
0x10A4	0x9E02    LDR	R6, [SP, #8]
;__Lib_I2C_123.c, 203 :: 		
; i start address is: 32 (R8)
0x10A6	0xF04F0800  MOV	R8, #0
;__Lib_I2C_123.c, 204 :: 		
0x10AA	0xE124    B	L_I2Cx_Read18
; count end address is: 28 (R7)
;__Lib_I2C_123.c, 205 :: 		
L_I2Cx_Read20:
;__Lib_I2C_123.c, 206 :: 		
0x10AC	0xF2010510  ADDW	R5, R1, #16
0x10B0	0x005C    LSLS	R4, R3, #1
0x10B2	0xB2A4    UXTH	R4, R4
; slave_address end address is: 12 (R3)
0x10B4	0xF0440401  ORR	R4, R4, #1
0x10B8	0xB2A4    UXTH	R4, R4
0x10BA	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
; i end address is: 32 (R8)
0x10BC	0x4633    MOV	R3, R6
0x10BE	0x4616    MOV	R6, R2
0x10C0	0x4642    MOV	R2, R8
;__Lib_I2C_123.c, 207 :: 		
L_I2Cx_Read21:
; i start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 4 (R1)
0x10C2	0xF2010414  ADDW	R4, R1, #20
0x10C6	0x6825    LDR	R5, [R4, #0]
0x10C8	0xF3C50440  UBFX	R4, R5, #1, #1
0x10CC	0xB904    CBNZ	R4, L_I2Cx_Read22
;__Lib_I2C_123.c, 208 :: 		
0x10CE	0xE7F8    B	L_I2Cx_Read21
L_I2Cx_Read22:
;__Lib_I2C_123.c, 209 :: 		
0x10D0	0x2500    MOVS	R5, #0
0x10D2	0x680C    LDR	R4, [R1, #0]
0x10D4	0xF365248A  BFI	R4, R5, #10, #1
0x10D8	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 210 :: 		
0x10DA	0xF2010414  ADDW	R4, R1, #20
0x10DE	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_123.c, 211 :: 		
0x10E0	0xBF00    NOP
;__Lib_I2C_123.c, 212 :: 		
0x10E2	0xF2010418  ADDW	R4, R1, #24
0x10E6	0x6824    LDR	R4, [R4, #0]
0x10E8	0x0424    LSLS	R4, R4, #16
0x10EA	0xEA400404  ORR	R4, R0, R4, LSL #0
0x10EE	0x4620    MOV	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_123.c, 213 :: 		
0x10F0	0x2B01    CMP	R3, #1
0x10F2	0xD105    BNE	L_I2Cx_Read23
;__Lib_I2C_123.c, 214 :: 		
0x10F4	0x2501    MOVS	R5, #1
0x10F6	0x680C    LDR	R4, [R1, #0]
0x10F8	0xF3652449  BFI	R4, R5, #9, #1
0x10FC	0x600C    STR	R4, [R1, #0]
0x10FE	0xE004    B	L_I2Cx_Read24
L_I2Cx_Read23:
;__Lib_I2C_123.c, 216 :: 		
0x1100	0x2501    MOVS	R5, #1
0x1102	0x680C    LDR	R4, [R1, #0]
0x1104	0xF3652408  BFI	R4, R5, #8, #1
0x1108	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 217 :: 		
L_I2Cx_Read24:
;__Lib_I2C_123.c, 218 :: 		
0x110A	0x4690    MOV	R8, R2
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
0x110C	0x461F    MOV	R7, R3
0x110E	0x4634    MOV	R4, R6
0x1110	0x460E    MOV	R6, R1
L_I2Cx_Read25:
; i end address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 16 (R4)
; END_mode start address is: 28 (R7)
; i start address is: 32 (R8)
0x1112	0x497E    LDR	R1, [PC, #504]
0x1114	0x4630    MOV	R0, R6
0x1116	0xF000FE21  BL	_ChekXForEvent+0
0x111A	0xB900    CBNZ	R0, L_I2Cx_Read26
;__Lib_I2C_123.c, 219 :: 		
0x111C	0xE7F9    B	L_I2Cx_Read25
L_I2Cx_Read26:
;__Lib_I2C_123.c, 220 :: 		
0x111E	0xEB040508  ADD	R5, R4, R8, LSL #0
; buf end address is: 16 (R4)
; i end address is: 32 (R8)
0x1122	0xF2060410  ADDW	R4, R6, #16
0x1126	0x6824    LDR	R4, [R4, #0]
0x1128	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_123.c, 221 :: 		
0x112A	0x2F01    CMP	R7, #1
0x112C	0xD107    BNE	L_I2Cx_Read27
; I2C_BASE end address is: 24 (R6)
; END_mode end address is: 28 (R7)
0x112E	0x4630    MOV	R0, R6
;__Lib_I2C_123.c, 222 :: 		
L_I2Cx_Read28:
; I2C_BASE start address is: 0 (R0)
0x1130	0x6805    LDR	R5, [R0, #0]
0x1132	0xF3C52440  UBFX	R4, R5, #9, #1
0x1136	0x2C00    CMP	R4, #0
0x1138	0xD100    BNE	L_I2Cx_Read29
;__Lib_I2C_123.c, 223 :: 		
; I2C_BASE end address is: 0 (R0)
0x113A	0xE7F9    B	L_I2Cx_Read28
L_I2Cx_Read29:
;__Lib_I2C_123.c, 224 :: 		
0x113C	0xE006    B	L_I2Cx_Read30
L_I2Cx_Read27:
;__Lib_I2C_123.c, 226 :: 		
; I2C_BASE start address is: 24 (R6)
0x113E	0x4630    MOV	R0, R6
L_I2Cx_Read31:
; I2C_BASE end address is: 24 (R6)
; I2C_BASE start address is: 0 (R0)
0x1140	0x6805    LDR	R5, [R0, #0]
0x1142	0xF3C52400  UBFX	R4, R5, #8, #1
0x1146	0x2C00    CMP	R4, #0
0x1148	0xD100    BNE	L_I2Cx_Read32
;__Lib_I2C_123.c, 227 :: 		
; I2C_BASE end address is: 0 (R0)
0x114A	0xE7F9    B	L_I2Cx_Read31
L_I2Cx_Read32:
;__Lib_I2C_123.c, 228 :: 		
L_I2Cx_Read30:
;__Lib_I2C_123.c, 229 :: 		
0x114C	0xE0DA    B	L_I2Cx_Read19
;__Lib_I2C_123.c, 231 :: 		
L_I2Cx_Read33:
;__Lib_I2C_123.c, 232 :: 		
; i start address is: 32 (R8)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 24 (R6)
; slave_address start address is: 12 (R3)
0x114E	0x2501    MOVS	R5, #1
0x1150	0x680C    LDR	R4, [R1, #0]
0x1152	0xF365248A  BFI	R4, R5, #10, #1
0x1156	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 233 :: 		
0x1158	0x2501    MOVS	R5, #1
0x115A	0x680C    LDR	R4, [R1, #0]
0x115C	0xF36524CB  BFI	R4, R5, #11, #1
0x1160	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 234 :: 		
0x1162	0xF2010510  ADDW	R5, R1, #16
0x1166	0x005C    LSLS	R4, R3, #1
0x1168	0xB2A4    UXTH	R4, R4
; slave_address end address is: 12 (R3)
0x116A	0xF0440401  ORR	R4, R4, #1
0x116E	0xB2A4    UXTH	R4, R4
0x1170	0x602C    STR	R4, [R5, #0]
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
; i end address is: 32 (R8)
0x1172	0x4643    MOV	R3, R8
;__Lib_I2C_123.c, 235 :: 		
L_I2Cx_Read34:
; i start address is: 12 (R3)
; END_mode start address is: 24 (R6)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x1174	0xF2010414  ADDW	R4, R1, #20
0x1178	0x6825    LDR	R5, [R4, #0]
0x117A	0xF3C50440  UBFX	R4, R5, #1, #1
0x117E	0xB904    CBNZ	R4, L_I2Cx_Read35
;__Lib_I2C_123.c, 236 :: 		
0x1180	0xE7F8    B	L_I2Cx_Read34
L_I2Cx_Read35:
;__Lib_I2C_123.c, 237 :: 		
0x1182	0xF2010414  ADDW	R4, R1, #20
0x1186	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_123.c, 238 :: 		
0x1188	0xBF00    NOP
;__Lib_I2C_123.c, 239 :: 		
0x118A	0xF2010418  ADDW	R4, R1, #24
0x118E	0x6824    LDR	R4, [R4, #0]
0x1190	0x0424    LSLS	R4, R4, #16
0x1192	0x4320    ORRS	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_123.c, 240 :: 		
0x1194	0x2500    MOVS	R5, #0
0x1196	0x680C    LDR	R4, [R1, #0]
0x1198	0xF365248A  BFI	R4, R5, #10, #1
0x119C	0x600C    STR	R4, [R1, #0]
; i end address is: 12 (R3)
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
0x119E	0x9601    STR	R6, [SP, #4]
0x11A0	0x461E    MOV	R6, R3
0x11A2	0x9B01    LDR	R3, [SP, #4]
;__Lib_I2C_123.c, 241 :: 		
L_I2Cx_Read36:
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
0x11A4	0xF2010414  ADDW	R4, R1, #20
0x11A8	0x6825    LDR	R5, [R4, #0]
0x11AA	0xF3C50480  UBFX	R4, R5, #2, #1
0x11AE	0xB904    CBNZ	R4, L_I2Cx_Read37
;__Lib_I2C_123.c, 242 :: 		
0x11B0	0xE7F8    B	L_I2Cx_Read36
L_I2Cx_Read37:
;__Lib_I2C_123.c, 243 :: 		
0x11B2	0x2B01    CMP	R3, #1
0x11B4	0xD105    BNE	L_I2Cx_Read38
;__Lib_I2C_123.c, 244 :: 		
0x11B6	0x2501    MOVS	R5, #1
0x11B8	0x680C    LDR	R4, [R1, #0]
0x11BA	0xF3652449  BFI	R4, R5, #9, #1
0x11BE	0x600C    STR	R4, [R1, #0]
0x11C0	0xE004    B	L_I2Cx_Read39
L_I2Cx_Read38:
;__Lib_I2C_123.c, 246 :: 		
0x11C2	0x2501    MOVS	R5, #1
0x11C4	0x680C    LDR	R4, [R1, #0]
0x11C6	0xF3652408  BFI	R4, R5, #8, #1
0x11CA	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 247 :: 		
L_I2Cx_Read39:
;__Lib_I2C_123.c, 248 :: 		
0x11CC	0x1995    ADDS	R5, R2, R6
0x11CE	0xF2010410  ADDW	R4, R1, #16
0x11D2	0x6824    LDR	R4, [R4, #0]
0x11D4	0x702C    STRB	R4, [R5, #0]
0x11D6	0x1C74    ADDS	R4, R6, #1
; i end address is: 24 (R6)
;__Lib_I2C_123.c, 249 :: 		
0x11D8	0x1915    ADDS	R5, R2, R4
; buf end address is: 8 (R2)
0x11DA	0xF2010410  ADDW	R4, R1, #16
0x11DE	0x6824    LDR	R4, [R4, #0]
0x11E0	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_123.c, 250 :: 		
0x11E2	0x2B01    CMP	R3, #1
0x11E4	0xD106    BNE	L_I2Cx_Read40
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_123.c, 251 :: 		
L_I2Cx_Read41:
; I2C_BASE start address is: 4 (R1)
0x11E6	0x680D    LDR	R5, [R1, #0]
0x11E8	0xF3C52440  UBFX	R4, R5, #9, #1
0x11EC	0x2C00    CMP	R4, #0
0x11EE	0xD100    BNE	L_I2Cx_Read42
;__Lib_I2C_123.c, 252 :: 		
; I2C_BASE end address is: 4 (R1)
0x11F0	0xE7F9    B	L_I2Cx_Read41
L_I2Cx_Read42:
;__Lib_I2C_123.c, 253 :: 		
0x11F2	0xE005    B	L_I2Cx_Read43
L_I2Cx_Read40:
;__Lib_I2C_123.c, 255 :: 		
; I2C_BASE start address is: 4 (R1)
L_I2Cx_Read44:
; I2C_BASE end address is: 4 (R1)
; I2C_BASE start address is: 4 (R1)
0x11F4	0x680D    LDR	R5, [R1, #0]
0x11F6	0xF3C52400  UBFX	R4, R5, #8, #1
0x11FA	0x2C00    CMP	R4, #0
0x11FC	0xD100    BNE	L_I2Cx_Read45
;__Lib_I2C_123.c, 256 :: 		
; I2C_BASE end address is: 4 (R1)
0x11FE	0xE7F9    B	L_I2Cx_Read44
L_I2Cx_Read45:
;__Lib_I2C_123.c, 257 :: 		
L_I2Cx_Read43:
;__Lib_I2C_123.c, 258 :: 		
0x1200	0xE080    B	L_I2Cx_Read19
;__Lib_I2C_123.c, 260 :: 		
L_I2Cx_Read46:
;__Lib_I2C_123.c, 261 :: 		
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 24 (R6)
; count start address is: 28 (R7)
; slave_address start address is: 12 (R3)
0x1202	0x2501    MOVS	R5, #1
0x1204	0x680C    LDR	R4, [R1, #0]
0x1206	0xF365248A  BFI	R4, R5, #10, #1
0x120A	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_123.c, 262 :: 		
0x120C	0xF2010510  ADDW	R5, R1, #16
0x1210	0x005C    LSLS	R4, R3, #1
0x1212	0xB2A4    UXTH	R4, R4
; slave_address end address is: 12 (R3)
0x1214	0xF0440401  ORR	R4, R4, #1
0x1218	0xB2A4    UXTH	R4, R4
0x121A	0x602C    STR	R4, [R5, #0]
; count end address is: 28 (R7)
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
0x121C	0x460D    MOV	R5, R1
0x121E	0x4614    MOV	R4, R2
0x1220	0x46B9    MOV	R9, R7
0x1222	0x46B0    MOV	R8, R6
;__Lib_I2C_123.c, 263 :: 		
L_I2Cx_Read47:
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 16 (R4)
; I2C_BASE start address is: 20 (R5)
0x1224	0x493A    LDR	R1, [PC, #232]
0x1226	0x4628    MOV	R0, R5
0x1228	0xF000FD98  BL	_ChekXForEvent+0
0x122C	0xB900    CBNZ	R0, L_I2Cx_Read48
;__Lib_I2C_123.c, 264 :: 		
0x122E	0xE7F9    B	L_I2Cx_Read47
L_I2Cx_Read48:
;__Lib_I2C_123.c, 265 :: 		
; i start address is: 4 (R1)
0x1230	0x2100    MOVS	R1, #0
; END_mode end address is: 32 (R8)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 20 (R5)
; buf end address is: 16 (R4)
0x1232	0x4623    MOV	R3, R4
0x1234	0x462A    MOV	R2, R5
;__Lib_I2C_123.c, 266 :: 		
L_I2Cx_Read49:
; i start address is: 4 (R1)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
; count start address is: 36 (R9)
; END_mode start address is: 32 (R8)
0x1236	0xF1A90403  SUB	R4, R9, #3
0x123A	0x42A1    CMP	R1, R4
0x123C	0xD214    BCS	L_I2Cx_Read50
; buf end address is: 12 (R3)
; END_mode end address is: 32 (R8)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
0x123E	0x468A    MOV	R10, R1
0x1240	0x4617    MOV	R7, R2
0x1242	0x461E    MOV	R6, R3
;__Lib_I2C_123.c, 267 :: 		
L_I2Cx_Read51:
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 28 (R7)
; i start address is: 40 (R10)
0x1244	0x4931    LDR	R1, [PC, #196]
0x1246	0x4638    MOV	R0, R7
0x1248	0xF000FD88  BL	_ChekXForEvent+0
0x124C	0xB900    CBNZ	R0, L_I2Cx_Read52
;__Lib_I2C_123.c, 268 :: 		
0x124E	0xE7F9    B	L_I2Cx_Read51
L_I2Cx_Read52:
;__Lib_I2C_123.c, 269 :: 		
0x1250	0xEB06050A  ADD	R5, R6, R10, LSL #0
0x1254	0xF2070410  ADDW	R4, R7, #16
0x1258	0x6824    LDR	R4, [R4, #0]
0x125A	0x702C    STRB	R4, [R5, #0]
0x125C	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 4 (R1)
0x1260	0x4621    MOV	R1, R4
;__Lib_I2C_123.c, 270 :: 		
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 24 (R6)
0x1262	0x4633    MOV	R3, R6
0x1264	0x463A    MOV	R2, R7
0x1266	0xE7E6    B	L_I2Cx_Read49
L_I2Cx_Read50:
;__Lib_I2C_123.c, 271 :: 		
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
0x1268	0x9301    STR	R3, [SP, #4]
; END_mode end address is: 32 (R8)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
0x126A	0x460B    MOV	R3, R1
0x126C	0x4616    MOV	R6, R2
0x126E	0x4642    MOV	R2, R8
0x1270	0x9901    LDR	R1, [SP, #4]
L_I2Cx_Read53:
; buf end address is: 12 (R3)
; END_mode start address is: 8 (R2)
; buf start address is: 4 (R1)
; I2C_BASE start address is: 24 (R6)
; i start address is: 12 (R3)
0x1272	0xF2060414  ADDW	R4, R6, #20
0x1276	0x6825    LDR	R5, [R4, #0]
0x1278	0xF3C50480  UBFX	R4, R5, #2, #1
0x127C	0xB904    CBNZ	R4, L_I2Cx_Read54
;__Lib_I2C_123.c, 272 :: 		
0x127E	0xE7F8    B	L_I2Cx_Read53
L_I2Cx_Read54:
;__Lib_I2C_123.c, 273 :: 		
0x1280	0x2500    MOVS	R5, #0
0x1282	0x6834    LDR	R4, [R6, #0]
0x1284	0xF365248A  BFI	R4, R5, #10, #1
0x1288	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_123.c, 274 :: 		
0x128A	0x18CD    ADDS	R5, R1, R3
0x128C	0xF2060410  ADDW	R4, R6, #16
0x1290	0x6824    LDR	R4, [R4, #0]
0x1292	0x702C    STRB	R4, [R5, #0]
0x1294	0x1C58    ADDS	R0, R3, #1
; i end address is: 12 (R3)
; i start address is: 0 (R0)
; END_mode end address is: 8 (R2)
; i end address is: 0 (R0)
; buf end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x1296	0x4613    MOV	R3, R2
0x1298	0x4602    MOV	R2, R0
;__Lib_I2C_123.c, 275 :: 		
L_I2Cx_Read55:
; i start address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 4 (R1)
; END_mode start address is: 12 (R3)
0x129A	0xF2060414  ADDW	R4, R6, #20
0x129E	0x6825    LDR	R5, [R4, #0]
0x12A0	0xF3C50480  UBFX	R4, R5, #2, #1
0x12A4	0xB904    CBNZ	R4, L_I2Cx_Read56
;__Lib_I2C_123.c, 276 :: 		
0x12A6	0xE7F8    B	L_I2Cx_Read55
L_I2Cx_Read56:
;__Lib_I2C_123.c, 277 :: 		
0x12A8	0x2B01    CMP	R3, #1
0x12AA	0xD107    BNE	L_I2Cx_Read57
; END_mode end address is: 12 (R3)
;__Lib_I2C_123.c, 278 :: 		
0x12AC	0x2501    MOVS	R5, #1
0x12AE	0x6834    LDR	R4, [R6, #0]
0x12B0	0xF3652449  BFI	R4, R5, #9, #1
0x12B4	0x6034    STR	R4, [R6, #0]
0x12B6	0x4610    MOV	R0, R2
0x12B8	0x4632    MOV	R2, R6
0x12BA	0xE010    B	L_I2Cx_Read58
L_I2Cx_Read57:
;__Lib_I2C_123.c, 280 :: 		
0x12BC	0x2501    MOVS	R5, #1
0x12BE	0x6834    LDR	R4, [R6, #0]
0x12C0	0xF3652408  BFI	R4, R5, #8, #1
0x12C4	0x6034    STR	R4, [R6, #0]
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
0x12C6	0x4635    MOV	R5, R6
0x12C8	0x4616    MOV	R6, R2
0x12CA	0x460C    MOV	R4, R1
;__Lib_I2C_123.c, 281 :: 		
L_I2Cx_Read59:
; buf start address is: 16 (R4)
; I2C_BASE start address is: 20 (R5)
; i start address is: 24 (R6)
0x12CC	0x4911    LDR	R1, [PC, #68]
0x12CE	0x4628    MOV	R0, R5
0x12D0	0xF000FD44  BL	_ChekXForEvent+0
0x12D4	0xB900    CBNZ	R0, L_I2Cx_Read60
;__Lib_I2C_123.c, 282 :: 		
0x12D6	0xE7F9    B	L_I2Cx_Read59
L_I2Cx_Read60:
;__Lib_I2C_123.c, 283 :: 		
0x12D8	0x4621    MOV	R1, R4
; i end address is: 24 (R6)
; buf end address is: 16 (R4)
0x12DA	0x462A    MOV	R2, R5
0x12DC	0x4630    MOV	R0, R6
L_I2Cx_Read58:
; I2C_BASE end address is: 20 (R5)
;__Lib_I2C_123.c, 284 :: 		
; i start address is: 0 (R0)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 4 (R1)
0x12DE	0x180D    ADDS	R5, R1, R0
0x12E0	0xF2020410  ADDW	R4, R2, #16
0x12E4	0x6824    LDR	R4, [R4, #0]
0x12E6	0x702C    STRB	R4, [R5, #0]
0x12E8	0x1C44    ADDS	R4, R0, #1
; i end address is: 0 (R0)
;__Lib_I2C_123.c, 285 :: 		
0x12EA	0x190D    ADDS	R5, R1, R4
; buf end address is: 4 (R1)
0x12EC	0xF2020410  ADDW	R4, R2, #16
; I2C_BASE end address is: 8 (R2)
0x12F0	0x6824    LDR	R4, [R4, #0]
0x12F2	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_123.c, 286 :: 		
0x12F4	0xE006    B	L_I2Cx_Read19
;__Lib_I2C_123.c, 288 :: 		
L_I2Cx_Read18:
; i start address is: 32 (R8)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 24 (R6)
; count start address is: 28 (R7)
; slave_address start address is: 12 (R3)
0x12F6	0x2F01    CMP	R7, #1
0x12F8	0xF43FAED8  BEQ	L_I2Cx_Read20
0x12FC	0x2F02    CMP	R7, #2
0x12FE	0xF43FAF26  BEQ	L_I2Cx_Read33
; i end address is: 32 (R8)
0x1302	0xE77E    B	L_I2Cx_Read46
; slave_address end address is: 12 (R3)
; count end address is: 28 (R7)
; END_mode end address is: 24 (R6)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
L_I2Cx_Read19:
;__Lib_I2C_123.c, 289 :: 		
L_end_I2Cx_Read:
0x1304	0xF8DDE000  LDR	LR, [SP, #0]
0x1308	0xB002    ADD	SP, SP, #8
0x130A	0x4770    BX	LR
0x130C	0x00400003  	#196672
0x1310	0x00020003  	#196610
0x1314	0x00010003  	#196609
; end of _I2Cx_Read
_I2C2_Read:
;__Lib_I2C_123.c, 344 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x24A0	0xB081    SUB	SP, SP, #4
0x24A2	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_123.c, 345 :: 		
0x24A6	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x24A8	0x4613    MOV	R3, R2
0x24AA	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x24AC	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x24AE	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x24B0	0xF7FEFDF2  BL	_I2Cx_Read+0
0x24B4	0xB001    ADD	SP, SP, #4
;__Lib_I2C_123.c, 346 :: 		
L_end_I2C2_Read:
0x24B6	0xF8DDE000  LDR	LR, [SP, #0]
0x24BA	0xB001    ADD	SP, SP, #4
0x24BC	0x4770    BX	LR
0x24BE	0xBF00    NOP
0x24C0	0x58004000  	I2C2_CR1+0
; end of _I2C2_Read
_I2C3_Read:
;__Lib_I2C_123.c, 375 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x2330	0xB081    SUB	SP, SP, #4
0x2332	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_123.c, 376 :: 		
0x2336	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x2338	0x4613    MOV	R3, R2
0x233A	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x233C	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x233E	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x2340	0xF7FEFEAA  BL	_I2Cx_Read+0
0x2344	0xB001    ADD	SP, SP, #4
;__Lib_I2C_123.c, 377 :: 		
L_end_I2C3_Read:
0x2346	0xF8DDE000  LDR	LR, [SP, #0]
0x234A	0xB001    ADD	SP, SP, #4
0x234C	0x4770    BX	LR
0x234E	0xBF00    NOP
0x2350	0x5C004000  	I2C3_CR1+0
; end of _I2C3_Read
_STMPE610_Reset:
;__Lib_STMPE610.c, 240 :: 		
0xD2CC	0xB081    SUB	SP, SP, #4
0xD2CE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_STMPE610.c, 242 :: 		
0xD2D2	0x2102    MOVS	R1, #2
0xD2D4	0x2003    MOVS	R0, #3
0xD2D6	0xF7F9FE53  BL	_STMPE610_WriteReg+0
;__Lib_STMPE610.c, 245 :: 		
0xD2DA	0xF7F9FCA1  BL	_Delay_10ms+0
0xD2DE	0xF7F9FC9F  BL	_Delay_10ms+0
;__Lib_STMPE610.c, 248 :: 		
0xD2E2	0x2100    MOVS	R1, #0
0xD2E4	0x2003    MOVS	R0, #3
0xD2E6	0xF7F9FE4B  BL	_STMPE610_WriteReg+0
;__Lib_STMPE610.c, 251 :: 		
0xD2EA	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 252 :: 		
L_end_STMPE610_Reset:
0xD2EC	0xF8DDE000  LDR	LR, [SP, #0]
0xD2F0	0xB001    ADD	SP, SP, #4
0xD2F2	0x4770    BX	LR
; end of _STMPE610_Reset
_STMPE610_WriteReg:
;__Lib_STMPE610.c, 164 :: 		
0x6F80	0xB084    SUB	SP, SP, #16
0x6F82	0xF8CDE000  STR	LR, [SP, #0]
0x6F86	0xF88D0008  STRB	R0, [SP, #8]
0x6F8A	0xF88D100C  STRB	R1, [SP, #12]
;__Lib_STMPE610.c, 167 :: 		
0x6F8E	0x4C0D    LDR	R4, [PC, #52]
0x6F90	0x6824    LDR	R4, [R4, #0]
0x6F92	0x47A0    BLX	R4
;__Lib_STMPE610.c, 170 :: 		
0x6F94	0xAC01    ADD	R4, SP, #4
0x6F96	0xF89D2008  LDRB	R2, [SP, #8]
0x6F9A	0x7022    STRB	R2, [R4, #0]
;__Lib_STMPE610.c, 171 :: 		
0x6F9C	0x1C63    ADDS	R3, R4, #1
0x6F9E	0xF89D200C  LDRB	R2, [SP, #12]
0x6FA2	0x701A    STRB	R2, [R3, #0]
;__Lib_STMPE610.c, 172 :: 		
0x6FA4	0x4A08    LDR	R2, [PC, #32]
0x6FA6	0x7812    LDRB	R2, [R2, #0]
0x6FA8	0x0852    LSRS	R2, R2, #1
0x6FAA	0xF2400301  MOVW	R3, #1
0x6FAE	0x4621    MOV	R1, R4
0x6FB0	0xB2D0    UXTB	R0, R2
0x6FB2	0x2202    MOVS	R2, #2
0x6FB4	0x4C05    LDR	R4, [PC, #20]
0x6FB6	0x6824    LDR	R4, [R4, #0]
0x6FB8	0x47A0    BLX	R4
;__Lib_STMPE610.c, 174 :: 		
0x6FBA	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 175 :: 		
L_end_STMPE610_WriteReg:
0x6FBC	0xF8DDE000  LDR	LR, [SP, #0]
0x6FC0	0xB004    ADD	SP, SP, #16
0x6FC2	0x4770    BX	LR
0x6FC4	0x2A942000  	_I2C_Start_Ptr+0
0x6FC8	0x2DC82000  	__Lib_STMPE610_STMPE610_I2C_ADDRESS+0
0x6FCC	0x2A9C2000  	_I2C_Write_Ptr+0
; end of _STMPE610_WriteReg
_Delay_10ms:
;__Lib_Delays.c, 57 :: 		void Delay_10ms() {
;__Lib_Delays.c, 58 :: 		Delay_ms(10);
0x6C20	0xF24A171E  MOVW	R7, #41246
0x6C24	0xF2C00707  MOVT	R7, #7
L_Delay_10ms22:
0x6C28	0x1E7F    SUBS	R7, R7, #1
0x6C2A	0xD1FD    BNE	L_Delay_10ms22
0x6C2C	0xBF00    NOP
0x6C2E	0xBF00    NOP
0x6C30	0xBF00    NOP
0x6C32	0xBF00    NOP
0x6C34	0xBF00    NOP
;__Lib_Delays.c, 59 :: 		}
L_end_Delay_10ms:
0x6C36	0x4770    BX	LR
; end of _Delay_10ms
_STMPE610_Module:
;__Lib_STMPE610.c, 265 :: 		
; newState start address is: 4 (R1)
; module_mask start address is: 0 (R0)
0xD1A4	0xB083    SUB	SP, SP, #12
0xD1A6	0xF8CDE000  STR	LR, [SP, #0]
0xD1AA	0xB2CA    UXTB	R2, R1
0xD1AC	0xB2C1    UXTB	R1, R0
; newState end address is: 4 (R1)
; module_mask end address is: 0 (R0)
; module_mask start address is: 4 (R1)
; newState start address is: 8 (R2)
;__Lib_STMPE610.c, 266 :: 		
;__Lib_STMPE610.c, 268 :: 		
0xD1AE	0xF88D2004  STRB	R2, [SP, #4]
0xD1B2	0xF88D1008  STRB	R1, [SP, #8]
0xD1B6	0x2004    MOVS	R0, #4
0xD1B8	0xF7F7F830  BL	_STMPE610_ReadReg+0
0xD1BC	0xF89D1008  LDRB	R1, [SP, #8]
0xD1C0	0xF89D2004  LDRB	R2, [SP, #4]
; tmp start address is: 0 (R0)
;__Lib_STMPE610.c, 269 :: 		
0xD1C4	0xB122    CBZ	R2, L_STMPE610_Module2
; newState end address is: 8 (R2)
;__Lib_STMPE610.c, 271 :: 		
0xD1C6	0x43CA    MVN	R2, R1
0xD1C8	0xB2D2    UXTB	R2, R2
; module_mask end address is: 4 (R1)
0xD1CA	0x4010    ANDS	R0, R2
0xD1CC	0xB2C0    UXTB	R0, R0
;__Lib_STMPE610.c, 272 :: 		
0xD1CE	0xE001    B	L_STMPE610_Module3
L_STMPE610_Module2:
;__Lib_STMPE610.c, 274 :: 		
; module_mask start address is: 4 (R1)
0xD1D0	0x4308    ORRS	R0, R1
0xD1D2	0xB2C0    UXTB	R0, R0
; module_mask end address is: 4 (R1)
; tmp end address is: 0 (R0)
;__Lib_STMPE610.c, 275 :: 		
L_STMPE610_Module3:
;__Lib_STMPE610.c, 277 :: 		
; tmp start address is: 0 (R0)
0xD1D4	0xB2C1    UXTB	R1, R0
; tmp end address is: 0 (R0)
0xD1D6	0x2004    MOVS	R0, #4
0xD1D8	0xF7F9FED2  BL	_STMPE610_WriteReg+0
;__Lib_STMPE610.c, 279 :: 		
0xD1DC	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 280 :: 		
L_end_STMPE610_Module:
0xD1DE	0xF8DDE000  LDR	LR, [SP, #0]
0xD1E2	0xB003    ADD	SP, SP, #12
0xD1E4	0x4770    BX	LR
; end of _STMPE610_Module
_STMPE610_AlternateFunction:
;__Lib_STMPE610.c, 297 :: 		
; NewState start address is: 4 (R1)
; IO_Pin start address is: 0 (R0)
0xD050	0xB083    SUB	SP, SP, #12
0xD052	0xF8CDE000  STR	LR, [SP, #0]
0xD056	0xB2CA    UXTB	R2, R1
0xD058	0xB2C1    UXTB	R1, R0
; NewState end address is: 4 (R1)
; IO_Pin end address is: 0 (R0)
; IO_Pin start address is: 4 (R1)
; NewState start address is: 8 (R2)
;__Lib_STMPE610.c, 298 :: 		
;__Lib_STMPE610.c, 300 :: 		
0xD05A	0xF88D2004  STRB	R2, [SP, #4]
0xD05E	0xF88D1008  STRB	R1, [SP, #8]
0xD062	0x2017    MOVS	R0, #23
0xD064	0xF7F7F8DA  BL	_STMPE610_ReadReg+0
0xD068	0xF89D1008  LDRB	R1, [SP, #8]
0xD06C	0xF89D2004  LDRB	R2, [SP, #4]
; tmp start address is: 0 (R0)
;__Lib_STMPE610.c, 301 :: 		
0xD070	0xB112    CBZ	R2, L_STMPE610_AlternateFunction4
; NewState end address is: 8 (R2)
;__Lib_STMPE610.c, 303 :: 		
0xD072	0x4308    ORRS	R0, R1
0xD074	0xB2C0    UXTB	R0, R0
; IO_Pin end address is: 4 (R1)
;__Lib_STMPE610.c, 304 :: 		
0xD076	0xE003    B	L_STMPE610_AlternateFunction5
L_STMPE610_AlternateFunction4:
;__Lib_STMPE610.c, 306 :: 		
; IO_Pin start address is: 4 (R1)
0xD078	0x43CA    MVN	R2, R1
0xD07A	0xB2D2    UXTB	R2, R2
; IO_Pin end address is: 4 (R1)
0xD07C	0x4010    ANDS	R0, R2
0xD07E	0xB2C0    UXTB	R0, R0
; tmp end address is: 0 (R0)
;__Lib_STMPE610.c, 307 :: 		
L_STMPE610_AlternateFunction5:
;__Lib_STMPE610.c, 309 :: 		
; tmp start address is: 0 (R0)
0xD080	0xB2C1    UXTB	R1, R0
; tmp end address is: 0 (R0)
0xD082	0x2017    MOVS	R0, #23
0xD084	0xF7F9FF7C  BL	_STMPE610_WriteReg+0
;__Lib_STMPE610.c, 311 :: 		
0xD088	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 312 :: 		
L_end_STMPE610_AlternateFunction:
0xD08A	0xF8DDE000  LDR	LR, [SP, #0]
0xD08E	0xB003    ADD	SP, SP, #12
0xD090	0x4770    BX	LR
; end of _STMPE610_AlternateFunction
_STMPE610_SetGPIOPin:
;__Lib_STMPE610.c, 329 :: 		
; BitVal start address is: 4 (R1)
; IO_Pin start address is: 0 (R0)
0xD02C	0xB081    SUB	SP, SP, #4
0xD02E	0xF8CDE000  STR	LR, [SP, #0]
; BitVal end address is: 4 (R1)
; IO_Pin end address is: 0 (R0)
; IO_Pin start address is: 0 (R0)
; BitVal start address is: 4 (R1)
;__Lib_STMPE610.c, 331 :: 		
0xD032	0xB921    CBNZ	R1, L_STMPE610_SetGPIOPin6
; BitVal end address is: 4 (R1)
;__Lib_STMPE610.c, 334 :: 		
0xD034	0xB2C1    UXTB	R1, R0
; IO_Pin end address is: 0 (R0)
0xD036	0x2011    MOVS	R0, #17
0xD038	0xF7F9FFA2  BL	_STMPE610_WriteReg+0
;__Lib_STMPE610.c, 335 :: 		
0xD03C	0xE003    B	L_STMPE610_SetGPIOPin7
L_STMPE610_SetGPIOPin6:
;__Lib_STMPE610.c, 337 :: 		
; IO_Pin start address is: 0 (R0)
0xD03E	0xB2C1    UXTB	R1, R0
; IO_Pin end address is: 0 (R0)
0xD040	0x2010    MOVS	R0, #16
0xD042	0xF7F9FF9D  BL	_STMPE610_WriteReg+0
;__Lib_STMPE610.c, 338 :: 		
L_STMPE610_SetGPIOPin7:
;__Lib_STMPE610.c, 339 :: 		
0xD046	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 340 :: 		
L_end_STMPE610_SetGPIOPin:
0xD048	0xF8DDE000  LDR	LR, [SP, #0]
0xD04C	0xB001    ADD	SP, SP, #4
0xD04E	0x4770    BX	LR
; end of _STMPE610_SetGPIOPin
_STMPE610_SetSize:
;__Lib_STMPE610.c, 616 :: 		
; display_height start address is: 4 (R1)
; display_width start address is: 0 (R0)
0xD094	0xB081    SUB	SP, SP, #4
0xD096	0xF8CDE000  STR	LR, [SP, #0]
0xD09A	0xB283    UXTH	R3, R0
0xD09C	0xB28C    UXTH	R4, R1
; display_height end address is: 4 (R1)
; display_width end address is: 0 (R0)
; display_width start address is: 12 (R3)
; display_height start address is: 16 (R4)
;__Lib_STMPE610.c, 617 :: 		
0xD09E	0x4A1E    LDR	R2, [PC, #120]
0xD0A0	0x8013    STRH	R3, [R2, #0]
;__Lib_STMPE610.c, 618 :: 		
0xD0A2	0x4A1E    LDR	R2, [PC, #120]
0xD0A4	0x8014    STRH	R4, [R2, #0]
;__Lib_STMPE610.c, 619 :: 		
0xD0A6	0x4A1E    LDR	R2, [PC, #120]
0xD0A8	0x7812    LDRB	R2, [R2, #0]
0xD0AA	0x2A00    CMP	R2, #0
0xD0AC	0xD028    BEQ	L_STMPE610_SetSize27
;__Lib_STMPE610.c, 622 :: 		
0xD0AE	0x4A1D    LDR	R2, [PC, #116]
0xD0B0	0x8812    LDRH	R2, [R2, #0]
0xD0B2	0x4293    CMP	R3, R2
0xD0B4	0xD90E    BLS	L_STMPE610_SetSize28
;__Lib_STMPE610.c, 623 :: 		
0xD0B6	0x4A1C    LDR	R2, [PC, #112]
0xD0B8	0x7812    LDRB	R2, [R2, #0]
0xD0BA	0x2A03    CMP	R2, #3
0xD0BC	0xD103    BNE	L_STMPE610_SetSize29
;__Lib_STMPE610.c, 624 :: 		
0xD0BE	0x2000    MOVS	R0, #0
0xD0C0	0xF7FAFD3A  BL	__Lib_STMPE610_STMPE610_TPRotationChange+0
0xD0C4	0xE005    B	L_STMPE610_SetSize30
L_STMPE610_SetSize29:
;__Lib_STMPE610.c, 626 :: 		
0xD0C6	0x4A18    LDR	R2, [PC, #96]
0xD0C8	0x7812    LDRB	R2, [R2, #0]
0xD0CA	0x1C52    ADDS	R2, R2, #1
0xD0CC	0xB2D0    UXTB	R0, R2
0xD0CE	0xF7FAFD33  BL	__Lib_STMPE610_STMPE610_TPRotationChange+0
L_STMPE610_SetSize30:
;__Lib_STMPE610.c, 627 :: 		
0xD0D2	0xE010    B	L_STMPE610_SetSize31
L_STMPE610_SetSize28:
0xD0D4	0x4A13    LDR	R2, [PC, #76]
0xD0D6	0x8812    LDRH	R2, [R2, #0]
0xD0D8	0x4293    CMP	R3, R2
0xD0DA	0xD20C    BCS	L_STMPE610_SetSize32
;__Lib_STMPE610.c, 628 :: 		
0xD0DC	0x4A12    LDR	R2, [PC, #72]
0xD0DE	0x7812    LDRB	R2, [R2, #0]
0xD0E0	0xB91A    CBNZ	R2, L_STMPE610_SetSize33
;__Lib_STMPE610.c, 629 :: 		
0xD0E2	0x2003    MOVS	R0, #3
0xD0E4	0xF7FAFD28  BL	__Lib_STMPE610_STMPE610_TPRotationChange+0
0xD0E8	0xE005    B	L_STMPE610_SetSize34
L_STMPE610_SetSize33:
;__Lib_STMPE610.c, 631 :: 		
0xD0EA	0x4A0F    LDR	R2, [PC, #60]
0xD0EC	0x7812    LDRB	R2, [R2, #0]
0xD0EE	0x1E52    SUBS	R2, R2, #1
0xD0F0	0xB2D0    UXTB	R0, R2
0xD0F2	0xF7FAFD21  BL	__Lib_STMPE610_STMPE610_TPRotationChange+0
L_STMPE610_SetSize34:
;__Lib_STMPE610.c, 632 :: 		
L_STMPE610_SetSize32:
L_STMPE610_SetSize31:
;__Lib_STMPE610.c, 633 :: 		
0xD0F6	0x4A0B    LDR	R2, [PC, #44]
0xD0F8	0x8013    STRH	R3, [R2, #0]
; display_width end address is: 12 (R3)
;__Lib_STMPE610.c, 634 :: 		
0xD0FA	0x4A0C    LDR	R2, [PC, #48]
0xD0FC	0x8014    STRH	R4, [R2, #0]
; display_height end address is: 16 (R4)
;__Lib_STMPE610.c, 635 :: 		
0xD0FE	0xE006    B	L_STMPE610_SetSize35
L_STMPE610_SetSize27:
;__Lib_STMPE610.c, 636 :: 		
; display_height start address is: 16 (R4)
; display_width start address is: 12 (R3)
0xD100	0x4A08    LDR	R2, [PC, #32]
0xD102	0x8013    STRH	R3, [R2, #0]
; display_width end address is: 12 (R3)
;__Lib_STMPE610.c, 637 :: 		
0xD104	0x4A09    LDR	R2, [PC, #36]
0xD106	0x8014    STRH	R4, [R2, #0]
; display_height end address is: 16 (R4)
;__Lib_STMPE610.c, 638 :: 		
0xD108	0x2301    MOVS	R3, #1
0xD10A	0x4A05    LDR	R2, [PC, #20]
0xD10C	0x7013    STRB	R3, [R2, #0]
;__Lib_STMPE610.c, 639 :: 		
L_STMPE610_SetSize35:
;__Lib_STMPE610.c, 640 :: 		
L_end_STMPE610_SetSize:
0xD10E	0xF8DDE000  LDR	LR, [SP, #0]
0xD112	0xB001    ADD	SP, SP, #4
0xD114	0x4770    BX	LR
0xD116	0xBF00    NOP
0xD118	0x2DC02000  	__Lib_STMPE610_STMPE610_TP_WIDTH+0
0xD11C	0x2DC42000  	__Lib_STMPE610_STMPE610_TP_HEIGHT+0
0xD120	0x2DBE2000  	__Lib_STMPE610_TPOrientation+6
0xD124	0x2DB82000  	__Lib_STMPE610_TPOrientation+0
0xD128	0x2DBD2000  	__Lib_STMPE610_TPOrientation+5
0xD12C	0x2DBA2000  	__Lib_STMPE610_TPOrientation+2
; end of _STMPE610_SetSize
__Lib_STMPE610_STMPE610_TPRotationChange:
;__Lib_STMPE610.c, 606 :: 		
; newValue start address is: 0 (R0)
0x7B38	0xB081    SUB	SP, SP, #4
; newValue end address is: 0 (R0)
; newValue start address is: 0 (R0)
;__Lib_STMPE610.c, 607 :: 		
0x7B3A	0x4902    LDR	R1, [PC, #8]
0x7B3C	0x7008    STRB	R0, [R1, #0]
; newValue end address is: 0 (R0)
;__Lib_STMPE610.c, 608 :: 		
L_end_STMPE610_TPRotationChange:
0x7B3E	0xB001    ADD	SP, SP, #4
0x7B40	0x4770    BX	LR
0x7B42	0xBF00    NOP
0x7B44	0x2DBD2000  	__Lib_STMPE610_TPOrientation+5
; end of __Lib_STMPE610_STMPE610_TPRotationChange
_STMPE610_EnableInterrupt:
;__Lib_STMPE610.c, 357 :: 		
; enable start address is: 4 (R1)
; interrupt_mask start address is: 0 (R0)
0xD150	0xB083    SUB	SP, SP, #12
0xD152	0xF8CDE000  STR	LR, [SP, #0]
0xD156	0xB2CA    UXTB	R2, R1
0xD158	0xB2C1    UXTB	R1, R0
; enable end address is: 4 (R1)
; interrupt_mask end address is: 0 (R0)
; interrupt_mask start address is: 4 (R1)
; enable start address is: 8 (R2)
;__Lib_STMPE610.c, 359 :: 		
0xD15A	0xF88D2004  STRB	R2, [SP, #4]
0xD15E	0xF88D1008  STRB	R1, [SP, #8]
0xD162	0x200A    MOVS	R0, #10
0xD164	0xF7F7F85A  BL	_STMPE610_ReadReg+0
0xD168	0xF89D1008  LDRB	R1, [SP, #8]
0xD16C	0xF89D2004  LDRB	R2, [SP, #4]
; temp start address is: 12 (R3)
0xD170	0xB2C3    UXTB	R3, R0
;__Lib_STMPE610.c, 360 :: 		
0xD172	0xB108    CBZ	R0, L_STMPE610_EnableInterrupt8
; interrupt_mask end address is: 4 (R1)
; enable end address is: 8 (R2)
; temp end address is: 12 (R3)
;__Lib_STMPE610.c, 361 :: 		
0xD174	0x2001    MOVS	R0, #1
0xD176	0xE011    B	L_end_STMPE610_EnableInterrupt
L_STMPE610_EnableInterrupt8:
;__Lib_STMPE610.c, 363 :: 		
; temp start address is: 12 (R3)
; enable start address is: 8 (R2)
; interrupt_mask start address is: 4 (R1)
0xD178	0xB11A    CBZ	R2, L_STMPE610_EnableInterrupt9
; enable end address is: 8 (R2)
;__Lib_STMPE610.c, 364 :: 		
0xD17A	0xEA430001  ORR	R0, R3, R1, LSL #0
0xD17E	0xB2C0    UXTB	R0, R0
; interrupt_mask end address is: 4 (R1)
; temp end address is: 12 (R3)
; temp start address is: 0 (R0)
; temp end address is: 0 (R0)
0xD180	0xE004    B	L_STMPE610_EnableInterrupt10
L_STMPE610_EnableInterrupt9:
;__Lib_STMPE610.c, 366 :: 		
; temp start address is: 12 (R3)
; interrupt_mask start address is: 4 (R1)
0xD182	0x43CA    MVN	R2, R1
0xD184	0xB2D2    UXTB	R2, R2
; interrupt_mask end address is: 4 (R1)
0xD186	0xEA030002  AND	R0, R3, R2, LSL #0
0xD18A	0xB2C0    UXTB	R0, R0
; temp end address is: 12 (R3)
; temp start address is: 0 (R0)
; temp end address is: 0 (R0)
L_STMPE610_EnableInterrupt10:
;__Lib_STMPE610.c, 368 :: 		
; temp start address is: 0 (R0)
0xD18C	0xB2C1    UXTB	R1, R0
; temp end address is: 0 (R0)
0xD18E	0x200A    MOVS	R0, #10
0xD190	0xF7F9FEF6  BL	_STMPE610_WriteReg+0
0xD194	0xB108    CBZ	R0, L_STMPE610_EnableInterrupt11
;__Lib_STMPE610.c, 369 :: 		
0xD196	0x2001    MOVS	R0, #1
0xD198	0xE000    B	L_end_STMPE610_EnableInterrupt
L_STMPE610_EnableInterrupt11:
;__Lib_STMPE610.c, 370 :: 		
0xD19A	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 371 :: 		
L_end_STMPE610_EnableInterrupt:
0xD19C	0xF8DDE000  LDR	LR, [SP, #0]
0xD1A0	0xB003    ADD	SP, SP, #12
0xD1A2	0x4770    BX	LR
; end of _STMPE610_EnableInterrupt
_STMPE610_ConfigureInterrupt:
;__Lib_STMPE610.c, 385 :: 		
; interrupt_mask start address is: 0 (R0)
0xD130	0xB081    SUB	SP, SP, #4
0xD132	0xF8CDE000  STR	LR, [SP, #0]
; interrupt_mask end address is: 0 (R0)
; interrupt_mask start address is: 0 (R0)
;__Lib_STMPE610.c, 386 :: 		
0xD136	0xB2C1    UXTB	R1, R0
; interrupt_mask end address is: 0 (R0)
0xD138	0x2009    MOVS	R0, #9
0xD13A	0xF7F9FF21  BL	_STMPE610_WriteReg+0
0xD13E	0xB108    CBZ	R0, L_STMPE610_ConfigureInterrupt12
;__Lib_STMPE610.c, 387 :: 		
0xD140	0x2001    MOVS	R0, #1
0xD142	0xE000    B	L_end_STMPE610_ConfigureInterrupt
L_STMPE610_ConfigureInterrupt12:
;__Lib_STMPE610.c, 389 :: 		
0xD144	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 390 :: 		
L_end_STMPE610_ConfigureInterrupt:
0xD146	0xF8DDE000  LDR	LR, [SP, #0]
0xD14A	0xB001    ADD	SP, SP, #4
0xD14C	0x4770    BX	LR
; end of _STMPE610_ConfigureInterrupt
_STMPE610_SetADC:
;__Lib_STMPE610.c, 409 :: 		
; mode start address is: 0 (R0)
0xC6E8	0xB081    SUB	SP, SP, #4
0xC6EA	0xF8CDE000  STR	LR, [SP, #0]
; mode end address is: 0 (R0)
; mode start address is: 0 (R0)
;__Lib_STMPE610.c, 410 :: 		
0xC6EE	0xB2C1    UXTB	R1, R0
; mode end address is: 0 (R0)
0xC6F0	0x2020    MOVS	R0, #32
0xC6F2	0xF7FAFC45  BL	_STMPE610_WriteReg+0
0xC6F6	0xB108    CBZ	R0, L_STMPE610_SetADC13
;__Lib_STMPE610.c, 411 :: 		
0xC6F8	0x2001    MOVS	R0, #1
0xC6FA	0xE000    B	L_end_STMPE610_SetADC
L_STMPE610_SetADC13:
;__Lib_STMPE610.c, 413 :: 		
0xC6FC	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 414 :: 		
L_end_STMPE610_SetADC:
0xC6FE	0xF8DDE000  LDR	LR, [SP, #0]
0xC702	0xB001    ADD	SP, SP, #4
0xC704	0x4770    BX	LR
; end of _STMPE610_SetADC
_STMPE610_SetADCClock:
;__Lib_STMPE610.c, 426 :: 		
; clock start address is: 0 (R0)
0xC6C8	0xB081    SUB	SP, SP, #4
0xC6CA	0xF8CDE000  STR	LR, [SP, #0]
; clock end address is: 0 (R0)
; clock start address is: 0 (R0)
;__Lib_STMPE610.c, 427 :: 		
0xC6CE	0xB2C1    UXTB	R1, R0
; clock end address is: 0 (R0)
0xC6D0	0x2021    MOVS	R0, #33
0xC6D2	0xF7FAFC55  BL	_STMPE610_WriteReg+0
0xC6D6	0xB108    CBZ	R0, L_STMPE610_SetADCClock14
;__Lib_STMPE610.c, 428 :: 		
0xC6D8	0x2001    MOVS	R0, #1
0xC6DA	0xE000    B	L_end_STMPE610_SetADCClock
L_STMPE610_SetADCClock14:
;__Lib_STMPE610.c, 430 :: 		
0xC6DC	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 431 :: 		
L_end_STMPE610_SetADCClock:
0xC6DE	0xF8DDE000  LDR	LR, [SP, #0]
0xC6E2	0xB001    ADD	SP, SP, #4
0xC6E4	0x4770    BX	LR
; end of _STMPE610_SetADCClock
_STMPE610_ConfigureTSC:
;__Lib_STMPE610.c, 462 :: 		
; settling_time start address is: 8 (R2)
; touch_detect_delay start address is: 4 (R1)
; average_sample start address is: 0 (R0)
0xC708	0xB081    SUB	SP, SP, #4
0xC70A	0xF8CDE000  STR	LR, [SP, #0]
; settling_time end address is: 8 (R2)
; touch_detect_delay end address is: 4 (R1)
; average_sample end address is: 0 (R0)
; average_sample start address is: 0 (R0)
; touch_detect_delay start address is: 4 (R1)
; settling_time start address is: 8 (R2)
;__Lib_STMPE610.c, 463 :: 		
;__Lib_STMPE610.c, 464 :: 		
0xC70E	0xEA400301  ORR	R3, R0, R1, LSL #0
0xC712	0xB2DB    UXTB	R3, R3
; average_sample end address is: 0 (R0)
; touch_detect_delay end address is: 4 (R1)
0xC714	0x4313    ORRS	R3, R2
; settling_time end address is: 8 (R2)
; temp start address is: 0 (R0)
0xC716	0xB2D8    UXTB	R0, R3
;__Lib_STMPE610.c, 465 :: 		
0xC718	0xB2C1    UXTB	R1, R0
; temp end address is: 0 (R0)
0xC71A	0x2041    MOVS	R0, #65
0xC71C	0xF7FAFC30  BL	_STMPE610_WriteReg+0
0xC720	0xB108    CBZ	R0, L_STMPE610_ConfigureTSC15
;__Lib_STMPE610.c, 466 :: 		
0xC722	0x2001    MOVS	R0, #1
0xC724	0xE000    B	L_end_STMPE610_ConfigureTSC
L_STMPE610_ConfigureTSC15:
;__Lib_STMPE610.c, 467 :: 		
0xC726	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 468 :: 		
L_end_STMPE610_ConfigureTSC:
0xC728	0xF8DDE000  LDR	LR, [SP, #0]
0xC72C	0xB001    ADD	SP, SP, #4
0xC72E	0x4770    BX	LR
; end of _STMPE610_ConfigureTSC
_STMPE610_SetFIFOThreshold:
;__Lib_STMPE610.c, 477 :: 		
; point start address is: 0 (R0)
0xC760	0xB081    SUB	SP, SP, #4
0xC762	0xF8CDE000  STR	LR, [SP, #0]
; point end address is: 0 (R0)
; point start address is: 0 (R0)
;__Lib_STMPE610.c, 478 :: 		
0xC766	0x2800    CMP	R0, #0
0xC768	0xD90A    BLS	L__STMPE610_SetFIFOThreshold77
0xC76A	0x2881    CMP	R0, #129
0xC76C	0xD208    BCS	L__STMPE610_SetFIFOThreshold76
L__STMPE610_SetFIFOThreshold75:
;__Lib_STMPE610.c, 479 :: 		
0xC76E	0xB2C1    UXTB	R1, R0
; point end address is: 0 (R0)
0xC770	0x204A    MOVS	R0, #74
0xC772	0xF7FAFC05  BL	_STMPE610_WriteReg+0
0xC776	0x2800    CMP	R0, #0
0xC778	0xD001    BEQ	L_STMPE610_SetFIFOThreshold19
;__Lib_STMPE610.c, 480 :: 		
0xC77A	0x2001    MOVS	R0, #1
0xC77C	0xE003    B	L_end_STMPE610_SetFIFOThreshold
L_STMPE610_SetFIFOThreshold19:
;__Lib_STMPE610.c, 481 :: 		
0xC77E	0xE001    B	L_STMPE610_SetFIFOThreshold20
;__Lib_STMPE610.c, 478 :: 		
L__STMPE610_SetFIFOThreshold77:
L__STMPE610_SetFIFOThreshold76:
;__Lib_STMPE610.c, 482 :: 		
0xC780	0x2001    MOVS	R0, #1
0xC782	0xE000    B	L_end_STMPE610_SetFIFOThreshold
L_STMPE610_SetFIFOThreshold20:
;__Lib_STMPE610.c, 484 :: 		
0xC784	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 485 :: 		
L_end_STMPE610_SetFIFOThreshold:
0xC786	0xF8DDE000  LDR	LR, [SP, #0]
0xC78A	0xB001    ADD	SP, SP, #4
0xC78C	0x4770    BX	LR
; end of _STMPE610_SetFIFOThreshold
_STMPE610_ResetFIFO:
;__Lib_STMPE610.c, 493 :: 		
0xC730	0xB081    SUB	SP, SP, #4
0xC732	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_STMPE610.c, 495 :: 		
0xC736	0x2101    MOVS	R1, #1
0xC738	0x204B    MOVS	R0, #75
0xC73A	0xF7FAFC21  BL	_STMPE610_WriteReg+0
0xC73E	0xB108    CBZ	R0, L_STMPE610_ResetFIFO21
;__Lib_STMPE610.c, 496 :: 		
0xC740	0x2001    MOVS	R0, #1
0xC742	0xE009    B	L_end_STMPE610_ResetFIFO
L_STMPE610_ResetFIFO21:
;__Lib_STMPE610.c, 497 :: 		
0xC744	0xF7FBFB8C  BL	_Delay_1ms+0
;__Lib_STMPE610.c, 499 :: 		
0xC748	0x2100    MOVS	R1, #0
0xC74A	0x204B    MOVS	R0, #75
0xC74C	0xF7FAFC18  BL	_STMPE610_WriteReg+0
0xC750	0xB108    CBZ	R0, L_STMPE610_ResetFIFO22
;__Lib_STMPE610.c, 500 :: 		
0xC752	0x2001    MOVS	R0, #1
0xC754	0xE000    B	L_end_STMPE610_ResetFIFO
L_STMPE610_ResetFIFO22:
;__Lib_STMPE610.c, 502 :: 		
0xC756	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 503 :: 		
L_end_STMPE610_ResetFIFO:
0xC758	0xF8DDE000  LDR	LR, [SP, #0]
0xC75C	0xB001    ADD	SP, SP, #4
0xC75E	0x4770    BX	LR
; end of _STMPE610_ResetFIFO
_STMPE610_TSIDrive:
;__Lib_STMPE610.c, 544 :: 		
; _drive start address is: 0 (R0)
0xC6A8	0xB081    SUB	SP, SP, #4
0xC6AA	0xF8CDE000  STR	LR, [SP, #0]
; _drive end address is: 0 (R0)
; _drive start address is: 0 (R0)
;__Lib_STMPE610.c, 546 :: 		
0xC6AE	0xB2C1    UXTB	R1, R0
; _drive end address is: 0 (R0)
0xC6B0	0x2058    MOVS	R0, #88
0xC6B2	0xF7FAFC65  BL	_STMPE610_WriteReg+0
0xC6B6	0xB108    CBZ	R0, L_STMPE610_TSIDrive24
;__Lib_STMPE610.c, 547 :: 		
0xC6B8	0x2001    MOVS	R0, #1
0xC6BA	0xE000    B	L_end_STMPE610_TSIDrive
L_STMPE610_TSIDrive24:
;__Lib_STMPE610.c, 549 :: 		
0xC6BC	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 550 :: 		
L_end_STMPE610_TSIDrive:
0xC6BE	0xF8DDE000  LDR	LR, [SP, #0]
0xC6C2	0xB001    ADD	SP, SP, #4
0xC6C4	0x4770    BX	LR
; end of _STMPE610_TSIDrive
_STMPE610_TSControl:
;__Lib_STMPE610.c, 574 :: 		
; _ctrl start address is: 0 (R0)
0xC648	0xB081    SUB	SP, SP, #4
0xC64A	0xF8CDE000  STR	LR, [SP, #0]
; _ctrl end address is: 0 (R0)
; _ctrl start address is: 0 (R0)
;__Lib_STMPE610.c, 576 :: 		
0xC64E	0xB2C1    UXTB	R1, R0
; _ctrl end address is: 0 (R0)
0xC650	0x2040    MOVS	R0, #64
0xC652	0xF7FAFC95  BL	_STMPE610_WriteReg+0
0xC656	0xB108    CBZ	R0, L_STMPE610_TSControl25
;__Lib_STMPE610.c, 577 :: 		
0xC658	0x2001    MOVS	R0, #1
0xC65A	0xE000    B	L_end_STMPE610_TSControl
L_STMPE610_TSControl25:
;__Lib_STMPE610.c, 579 :: 		
0xC65C	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 580 :: 		
L_end_STMPE610_TSControl:
0xC65E	0xF8DDE000  LDR	LR, [SP, #0]
0xC662	0xB001    ADD	SP, SP, #4
0xC664	0x4770    BX	LR
; end of _STMPE610_TSControl
_STMPE610_ZDataFraction:
;__Lib_STMPE610.c, 519 :: 		
; _value start address is: 0 (R0)
0xC628	0xB081    SUB	SP, SP, #4
0xC62A	0xF8CDE000  STR	LR, [SP, #0]
; _value end address is: 0 (R0)
; _value start address is: 0 (R0)
;__Lib_STMPE610.c, 521 :: 		
0xC62E	0xB2C1    UXTB	R1, R0
; _value end address is: 0 (R0)
0xC630	0x2056    MOVS	R0, #86
0xC632	0xF7FAFCA5  BL	_STMPE610_WriteReg+0
0xC636	0xB108    CBZ	R0, L_STMPE610_ZDataFraction23
;__Lib_STMPE610.c, 522 :: 		
0xC638	0x2001    MOVS	R0, #1
0xC63A	0xE000    B	L_end_STMPE610_ZDataFraction
L_STMPE610_ZDataFraction23:
;__Lib_STMPE610.c, 524 :: 		
0xC63C	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 525 :: 		
L_end_STMPE610_ZDataFraction:
0xC63E	0xF8DDE000  LDR	LR, [SP, #0]
0xC642	0xB001    ADD	SP, SP, #4
0xC644	0x4770    BX	LR
; end of _STMPE610_ZDataFraction
_STMPE610_SetTouchPressureThreshold:
;__Lib_STMPE610.c, 532 :: 		
; threshold start address is: 0 (R0)
0xC668	0xB081    SUB	SP, SP, #4
; threshold end address is: 0 (R0)
; threshold start address is: 0 (R0)
;__Lib_STMPE610.c, 533 :: 		
0xC66A	0x4902    LDR	R1, [PC, #8]
0xC66C	0x7008    STRB	R0, [R1, #0]
; threshold end address is: 0 (R0)
;__Lib_STMPE610.c, 534 :: 		
L_end_STMPE610_SetTouchPressureThreshold:
0xC66E	0xB001    ADD	SP, SP, #4
0xC670	0x4770    BX	LR
0xC672	0xBF00    NOP
0xC674	0x2D592000  	__Lib_STMPE610_STMPE610_PRESSURE_THRESHOLD+0
; end of _STMPE610_SetTouchPressureThreshold
_STMPE610_ClearInterrupts:
;__Lib_STMPE610.c, 588 :: 		
0xC688	0xB081    SUB	SP, SP, #4
0xC68A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_STMPE610.c, 590 :: 		
0xC68E	0x21FF    MOVS	R1, #255
0xC690	0x200B    MOVS	R0, #11
0xC692	0xF7FAFC75  BL	_STMPE610_WriteReg+0
0xC696	0xB108    CBZ	R0, L_STMPE610_ClearInterrupts26
;__Lib_STMPE610.c, 591 :: 		
0xC698	0x2001    MOVS	R0, #1
0xC69A	0xE000    B	L_end_STMPE610_ClearInterrupts
L_STMPE610_ClearInterrupts26:
;__Lib_STMPE610.c, 593 :: 		
0xC69C	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 594 :: 		
L_end_STMPE610_ClearInterrupts:
0xC69E	0xF8DDE000  LDR	LR, [SP, #0]
0xC6A2	0xB001    ADD	SP, SP, #4
0xC6A4	0x4770    BX	LR
; end of _STMPE610_ClearInterrupts
_TFT_Fill_Screen:
;__Lib_TFT.c, 764 :: 		
0xFE5C	0xB084    SUB	SP, SP, #16
0xFE5E	0xF8CDE000  STR	LR, [SP, #0]
0xFE62	0xF8AD000C  STRH	R0, [SP, #12]
;__Lib_TFT.c, 766 :: 		
0xFE66	0x2200    MOVS	R2, #0
0xFE68	0xB252    SXTB	R2, R2
0xFE6A	0x491A    LDR	R1, [PC, #104]
0xFE6C	0x600A    STR	R2, [R1, #0]
;__Lib_TFT.c, 767 :: 		
0xFE6E	0xF7FCFC03  BL	__Lib_TFT_Is_SSD1963_Set+0
0xFE72	0xB168    CBZ	R0, L_TFT_Fill_Screen78
;__Lib_TFT.c, 768 :: 		
0xFE74	0x4918    LDR	R1, [PC, #96]
0xFE76	0x8809    LDRH	R1, [R1, #0]
0xFE78	0x1E4C    SUBS	R4, R1, #1
0xFE7A	0x4918    LDR	R1, [PC, #96]
0xFE7C	0x8809    LDRH	R1, [R1, #0]
0xFE7E	0x1E49    SUBS	R1, R1, #1
0xFE80	0xB2A3    UXTH	R3, R4
0xFE82	0xB28A    UXTH	R2, R1
0xFE84	0x2100    MOVS	R1, #0
0xFE86	0x2000    MOVS	R0, #0
0xFE88	0x4C15    LDR	R4, [PC, #84]
0xFE8A	0x6824    LDR	R4, [R4, #0]
0xFE8C	0x47A0    BLX	R4
0xFE8E	0xE004    B	L_TFT_Fill_Screen79
L_TFT_Fill_Screen78:
;__Lib_TFT.c, 770 :: 		
0xFE90	0x2100    MOVS	R1, #0
0xFE92	0x2000    MOVS	R0, #0
0xFE94	0x4C13    LDR	R4, [PC, #76]
0xFE96	0x6824    LDR	R4, [R4, #0]
0xFE98	0x47A0    BLX	R4
L_TFT_Fill_Screen79:
;__Lib_TFT.c, 772 :: 		
0xFE9A	0x4910    LDR	R1, [PC, #64]
0xFE9C	0x880A    LDRH	R2, [R1, #0]
0xFE9E	0x490E    LDR	R1, [PC, #56]
0xFEA0	0x8809    LDRH	R1, [R1, #0]
0xFEA2	0x4351    MULS	R1, R2, R1
0xFEA4	0x9102    STR	R1, [SP, #8]
;__Lib_TFT.c, 773 :: 		
0xFEA6	0x2100    MOVS	R1, #0
0xFEA8	0x9101    STR	R1, [SP, #4]
L_TFT_Fill_Screen80:
0xFEAA	0x9A02    LDR	R2, [SP, #8]
0xFEAC	0x9901    LDR	R1, [SP, #4]
0xFEAE	0x4291    CMP	R1, R2
0xFEB0	0xD208    BCS	L_TFT_Fill_Screen81
;__Lib_TFT.c, 774 :: 		
0xFEB2	0xF8BD000C  LDRH	R0, [SP, #12]
0xFEB6	0x4C0C    LDR	R4, [PC, #48]
0xFEB8	0x6824    LDR	R4, [R4, #0]
0xFEBA	0x47A0    BLX	R4
;__Lib_TFT.c, 773 :: 		
0xFEBC	0x9901    LDR	R1, [SP, #4]
0xFEBE	0x1C49    ADDS	R1, R1, #1
0xFEC0	0x9101    STR	R1, [SP, #4]
;__Lib_TFT.c, 774 :: 		
0xFEC2	0xE7F2    B	L_TFT_Fill_Screen80
L_TFT_Fill_Screen81:
;__Lib_TFT.c, 775 :: 		
0xFEC4	0x2201    MOVS	R2, #1
0xFEC6	0xB252    SXTB	R2, R2
0xFEC8	0x4902    LDR	R1, [PC, #8]
0xFECA	0x600A    STR	R2, [R1, #0]
;__Lib_TFT.c, 776 :: 		
L_end_TFT_Fill_Screen:
0xFECC	0xF8DDE000  LDR	LR, [SP, #0]
0xFED0	0xB004    ADD	SP, SP, #16
0xFED2	0x4770    BX	LR
0xFED4	0x82B44242  	TFT_CS+0
0xFED8	0x22242000  	_TFT_DISP_HEIGHT+0
0xFEDC	0x22262000  	_TFT_DISP_WIDTH+0
0xFEE0	0x045C2000  	_TFT_SSD1963_Set_Address_Ptr+0
0xFEE4	0x2DF82000  	_TFT_Set_Address_Ptr+0
0xFEE8	0x04602000  	_TFT_Write_Data_Ptr+0
; end of _TFT_Fill_Screen
__Lib_TFT_Is_SSD1963_Set:
;__Lib_TFT.c, 140 :: 		
0xC678	0xB081    SUB	SP, SP, #4
;__Lib_TFT.c, 141 :: 		
0xC67A	0x4802    LDR	R0, [PC, #8]
0xC67C	0x7800    LDRB	R0, [R0, #0]
;__Lib_TFT.c, 142 :: 		
L_end_Is_SSD1963_Set:
0xC67E	0xB001    ADD	SP, SP, #4
0xC680	0x4770    BX	LR
0xC682	0xBF00    NOP
0xC684	0x03452000  	__Lib_TFT___SSD1963_controller+0
; end of __Lib_TFT_Is_SSD1963_Set
_TFT_Set_Address_SSD1963II:
;__Lib_TFT_Defs.c, 2374 :: 		void TFT_Set_Address_SSD1963II(unsigned int x1, unsigned int y1, unsigned int x2, unsigned int y2) {
; y2 start address is: 12 (R3)
; x2 start address is: 8 (R2)
; y1 start address is: 4 (R1)
; x1 start address is: 0 (R0)
0xC790	0xB083    SUB	SP, SP, #12
0xC792	0xF8CDE000  STR	LR, [SP, #0]
0xC796	0xB29E    UXTH	R6, R3
0xC798	0xB293    UXTH	R3, R2
0xC79A	0xB28A    UXTH	R2, R1
0xC79C	0xB281    UXTH	R1, R0
; y2 end address is: 12 (R3)
; x2 end address is: 8 (R2)
; y1 end address is: 4 (R1)
; x1 end address is: 0 (R0)
; x1 start address is: 4 (R1)
; y1 start address is: 8 (R2)
; x2 start address is: 12 (R3)
; y2 start address is: 24 (R6)
;__Lib_TFT_Defs.c, 2379 :: 		if ((TFT_DISP_WIDTH > 480) || (TFT_DISP_HEIGHT > 480)) {
0xC79E	0x4C49    LDR	R4, [PC, #292]
0xC7A0	0x8824    LDRH	R4, [R4, #0]
0xC7A2	0xF5B47FF0  CMP	R4, #480
0xC7A6	0xD805    BHI	L__TFT_Set_Address_SSD1963II184
0xC7A8	0x4C47    LDR	R4, [PC, #284]
0xC7AA	0x8824    LDRH	R4, [R4, #0]
0xC7AC	0xF5B47FF0  CMP	R4, #480
0xC7B0	0xD800    BHI	L__TFT_Set_Address_SSD1963II183
0xC7B2	0xE004    B	L_TFT_Set_Address_SSD1963II135
L__TFT_Set_Address_SSD1963II184:
L__TFT_Set_Address_SSD1963II183:
;__Lib_TFT_Defs.c, 2380 :: 		_width = 800;
; _width start address is: 32 (R8)
0xC7B4	0xF2403820  MOVW	R8, #800
;__Lib_TFT_Defs.c, 2381 :: 		_height = 480;
; _height start address is: 28 (R7)
0xC7B8	0xF24017E0  MOVW	R7, #480
;__Lib_TFT_Defs.c, 2382 :: 		}
; _height end address is: 28 (R7)
; _width end address is: 32 (R8)
0xC7BC	0xE003    B	L_TFT_Set_Address_SSD1963II136
L_TFT_Set_Address_SSD1963II135:
;__Lib_TFT_Defs.c, 2384 :: 		_width = 480;
; _width start address is: 32 (R8)
0xC7BE	0xF24018E0  MOVW	R8, #480
;__Lib_TFT_Defs.c, 2385 :: 		_height = 272;
; _height start address is: 28 (R7)
0xC7C2	0xF2401710  MOVW	R7, #272
; _height end address is: 28 (R7)
; _width end address is: 32 (R8)
;__Lib_TFT_Defs.c, 2386 :: 		}
L_TFT_Set_Address_SSD1963II136:
;__Lib_TFT_Defs.c, 2387 :: 		if (TFT_Disp_Rotation == 90) {
; _height start address is: 28 (R7)
; _width start address is: 32 (R8)
0xC7C6	0x4C41    LDR	R4, [PC, #260]
0xC7C8	0x7824    LDRB	R4, [R4, #0]
0xC7CA	0x2C5A    CMP	R4, #90
0xC7CC	0xD11D    BNE	L_TFT_Set_Address_SSD1963II137
;__Lib_TFT_Defs.c, 2388 :: 		if (Is_TFT_Rotated_180()) {
0xC7CE	0xF7F7FD6F  BL	_Is_TFT_Rotated_180+0
0xC7D2	0xB168    CBZ	R0, L_TFT_Set_Address_SSD1963II138
; _height end address is: 28 (R7)
;__Lib_TFT_Defs.c, 2389 :: 		s_col = (_width - 1) - y2;
0xC7D4	0xF1A80501  SUB	R5, R8, #1
0xC7D8	0xB2AD    UXTH	R5, R5
; _width end address is: 32 (R8)
0xC7DA	0x1BAC    SUB	R4, R5, R6
; y2 end address is: 24 (R6)
0xC7DC	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT_Defs.c, 2390 :: 		e_col = (_width - 1) - y1;
0xC7E0	0x1AAC    SUB	R4, R5, R2
; y1 end address is: 8 (R2)
0xC7E2	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT_Defs.c, 2391 :: 		s_page = x1;
0xC7E6	0xF8AD1008  STRH	R1, [SP, #8]
; x1 end address is: 4 (R1)
;__Lib_TFT_Defs.c, 2392 :: 		e_page = x2;
0xC7EA	0xF8AD300A  STRH	R3, [SP, #10]
; x2 end address is: 12 (R3)
;__Lib_TFT_Defs.c, 2393 :: 		} else {
0xC7EE	0xE00B    B	L_TFT_Set_Address_SSD1963II139
L_TFT_Set_Address_SSD1963II138:
;__Lib_TFT_Defs.c, 2394 :: 		s_col = y1;
; _height start address is: 28 (R7)
; y2 start address is: 24 (R6)
; x2 start address is: 12 (R3)
; y1 start address is: 8 (R2)
; x1 start address is: 4 (R1)
0xC7F0	0xF8AD2004  STRH	R2, [SP, #4]
; y1 end address is: 8 (R2)
;__Lib_TFT_Defs.c, 2395 :: 		e_col = y2;
0xC7F4	0xF8AD6006  STRH	R6, [SP, #6]
; y2 end address is: 24 (R6)
;__Lib_TFT_Defs.c, 2396 :: 		s_page = (_height - 1) - x2;
0xC7F8	0x1E7D    SUBS	R5, R7, #1
0xC7FA	0xB2AD    UXTH	R5, R5
; _height end address is: 28 (R7)
0xC7FC	0x1AEC    SUB	R4, R5, R3
; x2 end address is: 12 (R3)
0xC7FE	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT_Defs.c, 2397 :: 		e_page = (_height - 1) - x1;
0xC802	0x1A6C    SUB	R4, R5, R1
; x1 end address is: 4 (R1)
0xC804	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT_Defs.c, 2398 :: 		}
L_TFT_Set_Address_SSD1963II139:
;__Lib_TFT_Defs.c, 2399 :: 		} else {
0xC808	0xE01C    B	L_TFT_Set_Address_SSD1963II140
L_TFT_Set_Address_SSD1963II137:
;__Lib_TFT_Defs.c, 2400 :: 		if (Is_TFT_Rotated_180()) {
; _width start address is: 32 (R8)
; _height start address is: 28 (R7)
; y2 start address is: 24 (R6)
; x2 start address is: 12 (R3)
; y1 start address is: 8 (R2)
; x1 start address is: 4 (R1)
0xC80A	0xF7F7FD51  BL	_Is_TFT_Rotated_180+0
0xC80E	0xB188    CBZ	R0, L_TFT_Set_Address_SSD1963II141
;__Lib_TFT_Defs.c, 2401 :: 		s_col = (_width - 1) - x2;
0xC810	0xF1A80501  SUB	R5, R8, #1
0xC814	0xB2AD    UXTH	R5, R5
; _width end address is: 32 (R8)
0xC816	0x1AEC    SUB	R4, R5, R3
; x2 end address is: 12 (R3)
0xC818	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT_Defs.c, 2402 :: 		e_col = (_width - 1) - x1;
0xC81C	0x1A6C    SUB	R4, R5, R1
; x1 end address is: 4 (R1)
0xC81E	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT_Defs.c, 2403 :: 		s_page = (_height - 1) - y2;
0xC822	0x1E7D    SUBS	R5, R7, #1
0xC824	0xB2AD    UXTH	R5, R5
; _height end address is: 28 (R7)
0xC826	0x1BAC    SUB	R4, R5, R6
; y2 end address is: 24 (R6)
0xC828	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT_Defs.c, 2404 :: 		e_page = (_height - 1) - y1;
0xC82C	0x1AAC    SUB	R4, R5, R2
; y1 end address is: 8 (R2)
0xC82E	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT_Defs.c, 2405 :: 		} else {
0xC832	0xE007    B	L_TFT_Set_Address_SSD1963II142
L_TFT_Set_Address_SSD1963II141:
;__Lib_TFT_Defs.c, 2406 :: 		s_col = x1;
; y2 start address is: 24 (R6)
; x2 start address is: 12 (R3)
; y1 start address is: 8 (R2)
; x1 start address is: 4 (R1)
0xC834	0xF8AD1004  STRH	R1, [SP, #4]
; x1 end address is: 4 (R1)
;__Lib_TFT_Defs.c, 2407 :: 		e_col = x2;
0xC838	0xF8AD3006  STRH	R3, [SP, #6]
; x2 end address is: 12 (R3)
;__Lib_TFT_Defs.c, 2408 :: 		s_page = y1;
0xC83C	0xF8AD2008  STRH	R2, [SP, #8]
; y1 end address is: 8 (R2)
;__Lib_TFT_Defs.c, 2409 :: 		e_page = y2;
0xC840	0xF8AD600A  STRH	R6, [SP, #10]
; y2 end address is: 24 (R6)
;__Lib_TFT_Defs.c, 2410 :: 		}
L_TFT_Set_Address_SSD1963II142:
;__Lib_TFT_Defs.c, 2411 :: 		}
L_TFT_Set_Address_SSD1963II140:
;__Lib_TFT_Defs.c, 2412 :: 		TFT_Set_Index_Ptr(0x2a);             // SET column address
0xC844	0x202A    MOVS	R0, #42
0xC846	0x4C22    LDR	R4, [PC, #136]
0xC848	0x6824    LDR	R4, [R4, #0]
0xC84A	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2413 :: 		TFT_Write_Command_Ptr((char)(s_col >> 8));
0xC84C	0xF8BD4004  LDRH	R4, [SP, #4]
0xC850	0x0A24    LSRS	R4, R4, #8
0xC852	0xB2E0    UXTB	R0, R4
0xC854	0x4C1F    LDR	R4, [PC, #124]
0xC856	0x6824    LDR	R4, [R4, #0]
0xC858	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2414 :: 		TFT_Write_Command_Ptr(s_col);
0xC85A	0xF8BD0004  LDRH	R0, [SP, #4]
0xC85E	0x4C1D    LDR	R4, [PC, #116]
0xC860	0x6824    LDR	R4, [R4, #0]
0xC862	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2415 :: 		TFT_Write_Command_Ptr((char)(e_col >> 8));
0xC864	0xF8BD4006  LDRH	R4, [SP, #6]
0xC868	0x0A24    LSRS	R4, R4, #8
0xC86A	0xB2E0    UXTB	R0, R4
0xC86C	0x4C19    LDR	R4, [PC, #100]
0xC86E	0x6824    LDR	R4, [R4, #0]
0xC870	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2416 :: 		TFT_Write_Command_Ptr(e_col);
0xC872	0xF8BD0006  LDRH	R0, [SP, #6]
0xC876	0x4C17    LDR	R4, [PC, #92]
0xC878	0x6824    LDR	R4, [R4, #0]
0xC87A	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2418 :: 		TFT_Set_Index_Ptr(0x2b);             // SET page address
0xC87C	0x202B    MOVS	R0, #43
0xC87E	0x4C14    LDR	R4, [PC, #80]
0xC880	0x6824    LDR	R4, [R4, #0]
0xC882	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2419 :: 		TFT_Write_Command_Ptr((char)(s_page >> 8));
0xC884	0xF8BD4008  LDRH	R4, [SP, #8]
0xC888	0x0A24    LSRS	R4, R4, #8
0xC88A	0xB2E0    UXTB	R0, R4
0xC88C	0x4C11    LDR	R4, [PC, #68]
0xC88E	0x6824    LDR	R4, [R4, #0]
0xC890	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2420 :: 		TFT_Write_Command_Ptr(s_page);
0xC892	0xF8BD0008  LDRH	R0, [SP, #8]
0xC896	0x4C0F    LDR	R4, [PC, #60]
0xC898	0x6824    LDR	R4, [R4, #0]
0xC89A	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2421 :: 		TFT_Write_Command_Ptr((char)(e_page >> 8));
0xC89C	0xF8BD400A  LDRH	R4, [SP, #10]
0xC8A0	0x0A24    LSRS	R4, R4, #8
0xC8A2	0xB2E0    UXTB	R0, R4
0xC8A4	0x4C0B    LDR	R4, [PC, #44]
0xC8A6	0x6824    LDR	R4, [R4, #0]
0xC8A8	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2422 :: 		TFT_Write_Command_Ptr(e_page);
0xC8AA	0xF8BD000A  LDRH	R0, [SP, #10]
0xC8AE	0x4C09    LDR	R4, [PC, #36]
0xC8B0	0x6824    LDR	R4, [R4, #0]
0xC8B2	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2423 :: 		TFT_Set_Index_Ptr(0x2C);
0xC8B4	0x202C    MOVS	R0, #44
0xC8B6	0x4C06    LDR	R4, [PC, #24]
0xC8B8	0x6824    LDR	R4, [R4, #0]
0xC8BA	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2424 :: 		}
L_end_TFT_Set_Address_SSD1963II:
0xC8BC	0xF8DDE000  LDR	LR, [SP, #0]
0xC8C0	0xB003    ADD	SP, SP, #12
0xC8C2	0x4770    BX	LR
0xC8C4	0x22262000  	_TFT_DISP_WIDTH+0
0xC8C8	0x22242000  	_TFT_DISP_HEIGHT+0
0xC8CC	0x03482000  	__Lib_TFT_Defs_TFT_Disp_Rotation+0
0xC8D0	0x2E082000  	_TFT_Set_Index_Ptr+0
0xC8D4	0x2E0C2000  	_TFT_Write_Command_Ptr+0
; end of _TFT_Set_Address_SSD1963II
_TFT_Set_Address:
;__Lib_TFT_Defs.c, 277 :: 		void TFT_Set_Address(unsigned int x, unsigned int y) {
0xCAAC	0xB083    SUB	SP, SP, #12
0xCAAE	0xF8CDE000  STR	LR, [SP, #0]
0xCAB2	0xF8AD0004  STRH	R0, [SP, #4]
0xCAB6	0xF8AD1008  STRH	R1, [SP, #8]
;__Lib_TFT_Defs.c, 278 :: 		TFT_Set_Index_Ptr(0x02);
0xCABA	0x2002    MOVS	R0, #2
0xCABC	0x4C17    LDR	R4, [PC, #92]
0xCABE	0x6824    LDR	R4, [R4, #0]
0xCAC0	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 279 :: 		TFT_Write_Command_Ptr(x>>8);
0xCAC2	0xF8BD2004  LDRH	R2, [SP, #4]
0xCAC6	0x0A14    LSRS	R4, R2, #8
0xCAC8	0xB2E0    UXTB	R0, R4
0xCACA	0x4C15    LDR	R4, [PC, #84]
0xCACC	0x6824    LDR	R4, [R4, #0]
0xCACE	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 280 :: 		TFT_Set_Index_Ptr(0x03);
0xCAD0	0x2003    MOVS	R0, #3
0xCAD2	0x4C12    LDR	R4, [PC, #72]
0xCAD4	0x6824    LDR	R4, [R4, #0]
0xCAD6	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 281 :: 		TFT_Write_Command_Ptr(x);
0xCAD8	0xF8BD0004  LDRH	R0, [SP, #4]
0xCADC	0x4C10    LDR	R4, [PC, #64]
0xCADE	0x6824    LDR	R4, [R4, #0]
0xCAE0	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 282 :: 		TFT_Set_Index_Ptr(0x06);
0xCAE2	0x2006    MOVS	R0, #6
0xCAE4	0x4C0D    LDR	R4, [PC, #52]
0xCAE6	0x6824    LDR	R4, [R4, #0]
0xCAE8	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 283 :: 		TFT_Write_Command_Ptr(y>>8);
0xCAEA	0xF8BD2008  LDRH	R2, [SP, #8]
0xCAEE	0x0A14    LSRS	R4, R2, #8
0xCAF0	0xB2E0    UXTB	R0, R4
0xCAF2	0x4C0B    LDR	R4, [PC, #44]
0xCAF4	0x6824    LDR	R4, [R4, #0]
0xCAF6	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 284 :: 		TFT_Set_Index_Ptr(0x07);
0xCAF8	0x2007    MOVS	R0, #7
0xCAFA	0x4C08    LDR	R4, [PC, #32]
0xCAFC	0x6824    LDR	R4, [R4, #0]
0xCAFE	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 285 :: 		TFT_Write_Command_Ptr(y);
0xCB00	0xF8BD0008  LDRH	R0, [SP, #8]
0xCB04	0x4C06    LDR	R4, [PC, #24]
0xCB06	0x6824    LDR	R4, [R4, #0]
0xCB08	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 286 :: 		TFT_Set_Index_Ptr(0x22);
0xCB0A	0x2022    MOVS	R0, #34
0xCB0C	0x4C03    LDR	R4, [PC, #12]
0xCB0E	0x6824    LDR	R4, [R4, #0]
0xCB10	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 287 :: 		}
L_end_TFT_Set_Address:
0xCB12	0xF8DDE000  LDR	LR, [SP, #0]
0xCB16	0xB003    ADD	SP, SP, #12
0xCB18	0x4770    BX	LR
0xCB1A	0xBF00    NOP
0xCB1C	0x2E082000  	_TFT_Set_Index_Ptr+0
0xCB20	0x2E0C2000  	_TFT_Write_Command_Ptr+0
; end of _TFT_Set_Address
_TFT_Set_Address_SST7715R:
;__Lib_TFT_Defs.c, 386 :: 		void TFT_Set_Address_SST7715R(unsigned int x, unsigned int y) {
0xCA44	0xB083    SUB	SP, SP, #12
0xCA46	0xF8CDE000  STR	LR, [SP, #0]
0xCA4A	0xF8AD0004  STRH	R0, [SP, #4]
0xCA4E	0xF8AD1008  STRH	R1, [SP, #8]
;__Lib_TFT_Defs.c, 387 :: 		TFT_Set_Index_Ptr(0x2A);
0xCA52	0x202A    MOVS	R0, #42
0xCA54	0x4C13    LDR	R4, [PC, #76]
0xCA56	0x6824    LDR	R4, [R4, #0]
0xCA58	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 388 :: 		TFT_Write_Command_Ptr(x>>8);
0xCA5A	0xF8BD2004  LDRH	R2, [SP, #4]
0xCA5E	0x0A14    LSRS	R4, R2, #8
0xCA60	0xB2E0    UXTB	R0, R4
0xCA62	0x4C11    LDR	R4, [PC, #68]
0xCA64	0x6824    LDR	R4, [R4, #0]
0xCA66	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 389 :: 		TFT_Write_Command_Ptr(x);
0xCA68	0xF8BD0004  LDRH	R0, [SP, #4]
0xCA6C	0x4C0E    LDR	R4, [PC, #56]
0xCA6E	0x6824    LDR	R4, [R4, #0]
0xCA70	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 390 :: 		TFT_Set_Index_Ptr(0x2B);
0xCA72	0x202B    MOVS	R0, #43
0xCA74	0x4C0B    LDR	R4, [PC, #44]
0xCA76	0x6824    LDR	R4, [R4, #0]
0xCA78	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 391 :: 		TFT_Write_Command_Ptr(y>>8);
0xCA7A	0xF8BD2008  LDRH	R2, [SP, #8]
0xCA7E	0x0A14    LSRS	R4, R2, #8
0xCA80	0xB2E0    UXTB	R0, R4
0xCA82	0x4C09    LDR	R4, [PC, #36]
0xCA84	0x6824    LDR	R4, [R4, #0]
0xCA86	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 392 :: 		TFT_Write_Command_Ptr(y);
0xCA88	0xF8BD0008  LDRH	R0, [SP, #8]
0xCA8C	0x4C06    LDR	R4, [PC, #24]
0xCA8E	0x6824    LDR	R4, [R4, #0]
0xCA90	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 393 :: 		TFT_Set_Index_Ptr(0x2C);
0xCA92	0x202C    MOVS	R0, #44
0xCA94	0x4C03    LDR	R4, [PC, #12]
0xCA96	0x6824    LDR	R4, [R4, #0]
0xCA98	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 394 :: 		}
L_end_TFT_Set_Address_SST7715R:
0xCA9A	0xF8DDE000  LDR	LR, [SP, #0]
0xCA9E	0xB003    ADD	SP, SP, #12
0xCAA0	0x4770    BX	LR
0xCAA2	0xBF00    NOP
0xCAA4	0x2E082000  	_TFT_Set_Index_Ptr+0
0xCAA8	0x2E0C2000  	_TFT_Write_Command_Ptr+0
; end of _TFT_Set_Address_SST7715R
_TFT_Set_Address_HX8352A:
;__Lib_TFT_Defs.c, 611 :: 		void TFT_Set_Address_HX8352A(unsigned int x, unsigned int y) {
0xCB24	0xB083    SUB	SP, SP, #12
0xCB26	0xF8CDE000  STR	LR, [SP, #0]
0xCB2A	0xF8AD0004  STRH	R0, [SP, #4]
0xCB2E	0xF8AD1008  STRH	R1, [SP, #8]
;__Lib_TFT_Defs.c, 612 :: 		if (TFT_Disp_Rotation == 90) {
0xCB32	0x4A2E    LDR	R2, [PC, #184]
0xCB34	0x7812    LDRB	R2, [R2, #0]
0xCB36	0x2A5A    CMP	R2, #90
0xCB38	0xD128    BNE	L_TFT_Set_Address_HX8352A26
;__Lib_TFT_Defs.c, 613 :: 		TFT_Set_Index_Ptr(0x02);
0xCB3A	0x2002    MOVS	R0, #2
0xCB3C	0x4C2C    LDR	R4, [PC, #176]
0xCB3E	0x6824    LDR	R4, [R4, #0]
0xCB40	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 614 :: 		TFT_Write_Command_Ptr(x>>8);
0xCB42	0xF8BD2004  LDRH	R2, [SP, #4]
0xCB46	0x0A14    LSRS	R4, R2, #8
0xCB48	0xB2E0    UXTB	R0, R4
0xCB4A	0x4C2A    LDR	R4, [PC, #168]
0xCB4C	0x6824    LDR	R4, [R4, #0]
0xCB4E	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 615 :: 		TFT_Set_Index_Ptr(0x03);
0xCB50	0x2003    MOVS	R0, #3
0xCB52	0x4C27    LDR	R4, [PC, #156]
0xCB54	0x6824    LDR	R4, [R4, #0]
0xCB56	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 616 :: 		TFT_Write_Command_Ptr(x);
0xCB58	0xF8BD0004  LDRH	R0, [SP, #4]
0xCB5C	0x4C25    LDR	R4, [PC, #148]
0xCB5E	0x6824    LDR	R4, [R4, #0]
0xCB60	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 617 :: 		TFT_Set_Index_Ptr(0x06);
0xCB62	0x2006    MOVS	R0, #6
0xCB64	0x4C22    LDR	R4, [PC, #136]
0xCB66	0x6824    LDR	R4, [R4, #0]
0xCB68	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 618 :: 		TFT_Write_Command_Ptr(y>>8);
0xCB6A	0xF8BD2008  LDRH	R2, [SP, #8]
0xCB6E	0x0A14    LSRS	R4, R2, #8
0xCB70	0xB2E0    UXTB	R0, R4
0xCB72	0x4C20    LDR	R4, [PC, #128]
0xCB74	0x6824    LDR	R4, [R4, #0]
0xCB76	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 619 :: 		TFT_Set_Index_Ptr(0x07);
0xCB78	0x2007    MOVS	R0, #7
0xCB7A	0x4C1D    LDR	R4, [PC, #116]
0xCB7C	0x6824    LDR	R4, [R4, #0]
0xCB7E	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 620 :: 		TFT_Write_Command_Ptr(y);
0xCB80	0xF8BD0008  LDRH	R0, [SP, #8]
0xCB84	0x4C1B    LDR	R4, [PC, #108]
0xCB86	0x6824    LDR	R4, [R4, #0]
0xCB88	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 621 :: 		}
0xCB8A	0xE027    B	L_TFT_Set_Address_HX8352A27
L_TFT_Set_Address_HX8352A26:
;__Lib_TFT_Defs.c, 623 :: 		TFT_Set_Index_Ptr(0x02);
0xCB8C	0x2002    MOVS	R0, #2
0xCB8E	0x4C18    LDR	R4, [PC, #96]
0xCB90	0x6824    LDR	R4, [R4, #0]
0xCB92	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 624 :: 		TFT_Write_Command_Ptr(y>>8);
0xCB94	0xF8BD2008  LDRH	R2, [SP, #8]
0xCB98	0x0A14    LSRS	R4, R2, #8
0xCB9A	0xB2E0    UXTB	R0, R4
0xCB9C	0x4C15    LDR	R4, [PC, #84]
0xCB9E	0x6824    LDR	R4, [R4, #0]
0xCBA0	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 625 :: 		TFT_Set_Index_Ptr(0x03);
0xCBA2	0x2003    MOVS	R0, #3
0xCBA4	0x4C12    LDR	R4, [PC, #72]
0xCBA6	0x6824    LDR	R4, [R4, #0]
0xCBA8	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 626 :: 		TFT_Write_Command_Ptr(y);
0xCBAA	0xF8BD0008  LDRH	R0, [SP, #8]
0xCBAE	0x4C11    LDR	R4, [PC, #68]
0xCBB0	0x6824    LDR	R4, [R4, #0]
0xCBB2	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 627 :: 		TFT_Set_Index_Ptr(0x06);
0xCBB4	0x2006    MOVS	R0, #6
0xCBB6	0x4C0E    LDR	R4, [PC, #56]
0xCBB8	0x6824    LDR	R4, [R4, #0]
0xCBBA	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 628 :: 		TFT_Write_Command_Ptr(x>>8);
0xCBBC	0xF8BD2004  LDRH	R2, [SP, #4]
0xCBC0	0x0A14    LSRS	R4, R2, #8
0xCBC2	0xB2E0    UXTB	R0, R4
0xCBC4	0x4C0B    LDR	R4, [PC, #44]
0xCBC6	0x6824    LDR	R4, [R4, #0]
0xCBC8	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 629 :: 		TFT_Set_Index_Ptr(0x07);
0xCBCA	0x2007    MOVS	R0, #7
0xCBCC	0x4C08    LDR	R4, [PC, #32]
0xCBCE	0x6824    LDR	R4, [R4, #0]
0xCBD0	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 630 :: 		TFT_Write_Command_Ptr(x);
0xCBD2	0xF8BD0004  LDRH	R0, [SP, #4]
0xCBD6	0x4C07    LDR	R4, [PC, #28]
0xCBD8	0x6824    LDR	R4, [R4, #0]
0xCBDA	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 631 :: 		}
L_TFT_Set_Address_HX8352A27:
;__Lib_TFT_Defs.c, 632 :: 		TFT_Set_Index_Ptr(0x22);
0xCBDC	0x2022    MOVS	R0, #34
0xCBDE	0x4C04    LDR	R4, [PC, #16]
0xCBE0	0x6824    LDR	R4, [R4, #0]
0xCBE2	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 633 :: 		}
L_end_TFT_Set_Address_HX8352A:
0xCBE4	0xF8DDE000  LDR	LR, [SP, #0]
0xCBE8	0xB003    ADD	SP, SP, #12
0xCBEA	0x4770    BX	LR
0xCBEC	0x03482000  	__Lib_TFT_Defs_TFT_Disp_Rotation+0
0xCBF0	0x2E082000  	_TFT_Set_Index_Ptr+0
0xCBF4	0x2E0C2000  	_TFT_Write_Command_Ptr+0
; end of _TFT_Set_Address_HX8352A
_TFT_Set_Address_R61526:
;__Lib_TFT_Defs.c, 877 :: 		void TFT_Set_Address_R61526(unsigned int x, unsigned int y) {
0xCC60	0xB083    SUB	SP, SP, #12
0xCC62	0xF8CDE000  STR	LR, [SP, #0]
0xCC66	0xF8AD0004  STRH	R0, [SP, #4]
0xCC6A	0xF8AD1008  STRH	R1, [SP, #8]
;__Lib_TFT_Defs.c, 878 :: 		TFT_Set_Index_Ptr(0x2A);
0xCC6E	0x202A    MOVS	R0, #42
0xCC70	0x4C13    LDR	R4, [PC, #76]
0xCC72	0x6824    LDR	R4, [R4, #0]
0xCC74	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 879 :: 		TFT_Write_Command_Ptr(x>>8);
0xCC76	0xF8BD2004  LDRH	R2, [SP, #4]
0xCC7A	0x0A14    LSRS	R4, R2, #8
0xCC7C	0xB2E0    UXTB	R0, R4
0xCC7E	0x4C11    LDR	R4, [PC, #68]
0xCC80	0x6824    LDR	R4, [R4, #0]
0xCC82	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 880 :: 		TFT_Write_Command_Ptr(x);
0xCC84	0xF8BD0004  LDRH	R0, [SP, #4]
0xCC88	0x4C0E    LDR	R4, [PC, #56]
0xCC8A	0x6824    LDR	R4, [R4, #0]
0xCC8C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 881 :: 		TFT_Set_Index_Ptr(0x2B);
0xCC8E	0x202B    MOVS	R0, #43
0xCC90	0x4C0B    LDR	R4, [PC, #44]
0xCC92	0x6824    LDR	R4, [R4, #0]
0xCC94	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 882 :: 		TFT_Write_Command_Ptr(y>>8);
0xCC96	0xF8BD2008  LDRH	R2, [SP, #8]
0xCC9A	0x0A14    LSRS	R4, R2, #8
0xCC9C	0xB2E0    UXTB	R0, R4
0xCC9E	0x4C09    LDR	R4, [PC, #36]
0xCCA0	0x6824    LDR	R4, [R4, #0]
0xCCA2	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 883 :: 		TFT_Write_Command_Ptr(y);
0xCCA4	0xF8BD0008  LDRH	R0, [SP, #8]
0xCCA8	0x4C06    LDR	R4, [PC, #24]
0xCCAA	0x6824    LDR	R4, [R4, #0]
0xCCAC	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 884 :: 		TFT_Set_Index_Ptr(0x2C);
0xCCAE	0x202C    MOVS	R0, #44
0xCCB0	0x4C03    LDR	R4, [PC, #12]
0xCCB2	0x6824    LDR	R4, [R4, #0]
0xCCB4	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 885 :: 		}
L_end_TFT_Set_Address_R61526:
0xCCB6	0xF8DDE000  LDR	LR, [SP, #0]
0xCCBA	0xB003    ADD	SP, SP, #12
0xCCBC	0x4770    BX	LR
0xCCBE	0xBF00    NOP
0xCCC0	0x2E082000  	_TFT_Set_Index_Ptr+0
0xCCC4	0x2E0C2000  	_TFT_Write_Command_Ptr+0
; end of _TFT_Set_Address_R61526
_TFT_Set_Address_ILI9481:
;__Lib_TFT_Defs.c, 1377 :: 		void TFT_Set_Address_ILI9481(unsigned int x, unsigned int y) {
0xCBF8	0xB083    SUB	SP, SP, #12
0xCBFA	0xF8CDE000  STR	LR, [SP, #0]
0xCBFE	0xF8AD0004  STRH	R0, [SP, #4]
0xCC02	0xF8AD1008  STRH	R1, [SP, #8]
;__Lib_TFT_Defs.c, 1378 :: 		TFT_Set_Index_Ptr(0x2A);
0xCC06	0x202A    MOVS	R0, #42
0xCC08	0x4C13    LDR	R4, [PC, #76]
0xCC0A	0x6824    LDR	R4, [R4, #0]
0xCC0C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1379 :: 		TFT_Write_Command_Ptr(x>>8);
0xCC0E	0xF8BD2004  LDRH	R2, [SP, #4]
0xCC12	0x0A14    LSRS	R4, R2, #8
0xCC14	0xB2E0    UXTB	R0, R4
0xCC16	0x4C11    LDR	R4, [PC, #68]
0xCC18	0x6824    LDR	R4, [R4, #0]
0xCC1A	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1380 :: 		TFT_Write_Command_Ptr(x);
0xCC1C	0xF8BD0004  LDRH	R0, [SP, #4]
0xCC20	0x4C0E    LDR	R4, [PC, #56]
0xCC22	0x6824    LDR	R4, [R4, #0]
0xCC24	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1381 :: 		TFT_Set_Index_Ptr(0x2B);
0xCC26	0x202B    MOVS	R0, #43
0xCC28	0x4C0B    LDR	R4, [PC, #44]
0xCC2A	0x6824    LDR	R4, [R4, #0]
0xCC2C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1382 :: 		TFT_Write_Command_Ptr(y>>8);
0xCC2E	0xF8BD2008  LDRH	R2, [SP, #8]
0xCC32	0x0A14    LSRS	R4, R2, #8
0xCC34	0xB2E0    UXTB	R0, R4
0xCC36	0x4C09    LDR	R4, [PC, #36]
0xCC38	0x6824    LDR	R4, [R4, #0]
0xCC3A	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1383 :: 		TFT_Write_Command_Ptr(y);
0xCC3C	0xF8BD0008  LDRH	R0, [SP, #8]
0xCC40	0x4C06    LDR	R4, [PC, #24]
0xCC42	0x6824    LDR	R4, [R4, #0]
0xCC44	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1384 :: 		TFT_Set_Index_Ptr(0x2C);
0xCC46	0x202C    MOVS	R0, #44
0xCC48	0x4C03    LDR	R4, [PC, #12]
0xCC4A	0x6824    LDR	R4, [R4, #0]
0xCC4C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1385 :: 		}
L_end_TFT_Set_Address_ILI9481:
0xCC4E	0xF8DDE000  LDR	LR, [SP, #0]
0xCC52	0xB003    ADD	SP, SP, #12
0xCC54	0x4770    BX	LR
0xCC56	0xBF00    NOP
0xCC58	0x2E082000  	_TFT_Set_Index_Ptr+0
0xCC5C	0x2E0C2000  	_TFT_Write_Command_Ptr+0
; end of _TFT_Set_Address_ILI9481
_TFT_Set_Address_ILI9342:
;__Lib_TFT_Defs.c, 1634 :: 		void TFT_Set_Address_ILI9342(unsigned int x, unsigned int y) {
0xC9DC	0xB083    SUB	SP, SP, #12
0xC9DE	0xF8CDE000  STR	LR, [SP, #0]
0xC9E2	0xF8AD0004  STRH	R0, [SP, #4]
0xC9E6	0xF8AD1008  STRH	R1, [SP, #8]
;__Lib_TFT_Defs.c, 1635 :: 		TFT_Set_Index_Ptr(0x2A);
0xC9EA	0x202A    MOVS	R0, #42
0xC9EC	0x4C13    LDR	R4, [PC, #76]
0xC9EE	0x6824    LDR	R4, [R4, #0]
0xC9F0	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1636 :: 		TFT_Write_Command_Ptr(x>>8);
0xC9F2	0xF8BD2004  LDRH	R2, [SP, #4]
0xC9F6	0x0A14    LSRS	R4, R2, #8
0xC9F8	0xB2E0    UXTB	R0, R4
0xC9FA	0x4C11    LDR	R4, [PC, #68]
0xC9FC	0x6824    LDR	R4, [R4, #0]
0xC9FE	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1637 :: 		TFT_Write_Command_Ptr(x);
0xCA00	0xF8BD0004  LDRH	R0, [SP, #4]
0xCA04	0x4C0E    LDR	R4, [PC, #56]
0xCA06	0x6824    LDR	R4, [R4, #0]
0xCA08	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1638 :: 		TFT_Set_Index_Ptr(0x2B);
0xCA0A	0x202B    MOVS	R0, #43
0xCA0C	0x4C0B    LDR	R4, [PC, #44]
0xCA0E	0x6824    LDR	R4, [R4, #0]
0xCA10	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1639 :: 		TFT_Write_Command_Ptr(y>>8);
0xCA12	0xF8BD2008  LDRH	R2, [SP, #8]
0xCA16	0x0A14    LSRS	R4, R2, #8
0xCA18	0xB2E0    UXTB	R0, R4
0xCA1A	0x4C09    LDR	R4, [PC, #36]
0xCA1C	0x6824    LDR	R4, [R4, #0]
0xCA1E	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1640 :: 		TFT_Write_Command_Ptr(y);
0xCA20	0xF8BD0008  LDRH	R0, [SP, #8]
0xCA24	0x4C06    LDR	R4, [PC, #24]
0xCA26	0x6824    LDR	R4, [R4, #0]
0xCA28	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1641 :: 		TFT_Set_Index_Ptr(0x2C);
0xCA2A	0x202C    MOVS	R0, #44
0xCA2C	0x4C03    LDR	R4, [PC, #12]
0xCA2E	0x6824    LDR	R4, [R4, #0]
0xCA30	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 1642 :: 		}
L_end_TFT_Set_Address_ILI9342:
0xCA32	0xF8DDE000  LDR	LR, [SP, #0]
0xCA36	0xB003    ADD	SP, SP, #12
0xCA38	0x4770    BX	LR
0xCA3A	0xBF00    NOP
0xCA3C	0x2E082000  	_TFT_Set_Index_Ptr+0
0xCA40	0x2E0C2000  	_TFT_Write_Command_Ptr+0
; end of _TFT_Set_Address_ILI9342
_TFT_Set_Address_ILI9340:
;__Lib_TFT_Defs.c, 2112 :: 		void TFT_Set_Address_ILI9340(unsigned int x, unsigned int y) {
0xC920	0xB083    SUB	SP, SP, #12
0xC922	0xF8CDE000  STR	LR, [SP, #0]
0xC926	0xF8AD0004  STRH	R0, [SP, #4]
0xC92A	0xF8AD1008  STRH	R1, [SP, #8]
;__Lib_TFT_Defs.c, 2113 :: 		TFT_Set_Index_Ptr(0x2A);
0xC92E	0x202A    MOVS	R0, #42
0xC930	0x4C13    LDR	R4, [PC, #76]
0xC932	0x6824    LDR	R4, [R4, #0]
0xC934	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2114 :: 		TFT_Write_Command_Ptr(x>>8);
0xC936	0xF8BD2004  LDRH	R2, [SP, #4]
0xC93A	0x0A14    LSRS	R4, R2, #8
0xC93C	0xB2E0    UXTB	R0, R4
0xC93E	0x4C11    LDR	R4, [PC, #68]
0xC940	0x6824    LDR	R4, [R4, #0]
0xC942	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2115 :: 		TFT_Write_Command_Ptr(x);
0xC944	0xF8BD0004  LDRH	R0, [SP, #4]
0xC948	0x4C0E    LDR	R4, [PC, #56]
0xC94A	0x6824    LDR	R4, [R4, #0]
0xC94C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2116 :: 		TFT_Set_Index_Ptr(0x2B);
0xC94E	0x202B    MOVS	R0, #43
0xC950	0x4C0B    LDR	R4, [PC, #44]
0xC952	0x6824    LDR	R4, [R4, #0]
0xC954	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2117 :: 		TFT_Write_Command_Ptr(y>>8);
0xC956	0xF8BD2008  LDRH	R2, [SP, #8]
0xC95A	0x0A14    LSRS	R4, R2, #8
0xC95C	0xB2E0    UXTB	R0, R4
0xC95E	0x4C09    LDR	R4, [PC, #36]
0xC960	0x6824    LDR	R4, [R4, #0]
0xC962	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2118 :: 		TFT_Write_Command_Ptr(y);
0xC964	0xF8BD0008  LDRH	R0, [SP, #8]
0xC968	0x4C06    LDR	R4, [PC, #24]
0xC96A	0x6824    LDR	R4, [R4, #0]
0xC96C	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2119 :: 		TFT_Set_Index_Ptr(0x2C);
0xC96E	0x202C    MOVS	R0, #44
0xC970	0x4C03    LDR	R4, [PC, #12]
0xC972	0x6824    LDR	R4, [R4, #0]
0xC974	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2120 :: 		}
L_end_TFT_Set_Address_ILI9340:
0xC976	0xF8DDE000  LDR	LR, [SP, #0]
0xC97A	0xB003    ADD	SP, SP, #12
0xC97C	0x4770    BX	LR
0xC97E	0xBF00    NOP
0xC980	0x2E082000  	_TFT_Set_Index_Ptr+0
0xC984	0x2E0C2000  	_TFT_Write_Command_Ptr+0
; end of _TFT_Set_Address_ILI9340
_Write_Data:
;Ducati_logger_driver.c, 90 :: 		void Write_Data(unsigned int _data) {
0xC8D8	0xB082    SUB	SP, SP, #8
0xC8DA	0xF8CDE000  STR	LR, [SP, #0]
0xC8DE	0xF8AD0004  STRH	R0, [SP, #4]
;Ducati_logger_driver.c, 91 :: 		TFT_RS = 1;
0xC8E2	0x2201    MOVS	R2, #1
0xC8E4	0xB252    SXTB	R2, R2
0xC8E6	0x490C    LDR	R1, [PC, #48]
0xC8E8	0x600A    STR	R2, [R1, #0]
;Ducati_logger_driver.c, 92 :: 		Write_to_Data_Lines(Hi(_data), Lo(_data));
0xC8EA	0xAB01    ADD	R3, SP, #4
0xC8EC	0x7819    LDRB	R1, [R3, #0]
0xC8EE	0xB2CA    UXTB	R2, R1
0xC8F0	0x1C59    ADDS	R1, R3, #1
0xC8F2	0x7809    LDRB	R1, [R1, #0]
0xC8F4	0xB2C8    UXTB	R0, R1
0xC8F6	0xB2D1    UXTB	R1, R2
0xC8F8	0xF7F5FDE4  BL	_Write_to_Data_Lines+0
;Ducati_logger_driver.c, 93 :: 		TFT_WR = 0;
0xC8FC	0x2200    MOVS	R2, #0
0xC8FE	0xB252    SXTB	R2, R2
0xC900	0x4906    LDR	R1, [PC, #24]
0xC902	0x600A    STR	R2, [R1, #0]
;Ducati_logger_driver.c, 94 :: 		asm nop;
0xC904	0xBF00    NOP
;Ducati_logger_driver.c, 95 :: 		TFT_WR = 1;
0xC906	0x2201    MOVS	R2, #1
0xC908	0xB252    SXTB	R2, R2
0xC90A	0x4904    LDR	R1, [PC, #16]
0xC90C	0x600A    STR	R2, [R1, #0]
;Ducati_logger_driver.c, 96 :: 		}
L_end_Write_Data:
0xC90E	0xF8DDE000  LDR	LR, [SP, #0]
0xC912	0xB002    ADD	SP, SP, #8
0xC914	0x4770    BX	LR
0xC916	0xBF00    NOP
0xC918	0x82BC4242  	GPIOF_ODR+0
0xC91C	0x82AC4242  	GPIOF_ODR+0
; end of _Write_Data
_SPI1_Write:
;__Lib_SPI_123.c, 78 :: 		
; data_out start address is: 0 (R0)
0xC988	0xB081    SUB	SP, SP, #4
0xC98A	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 79 :: 		
0xC98E	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0xC990	0x4803    LDR	R0, [PC, #12]
0xC992	0xF7F3FD31  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 80 :: 		
L_end_SPI1_Write:
0xC996	0xF8DDE000  LDR	LR, [SP, #0]
0xC99A	0xB001    ADD	SP, SP, #4
0xC99C	0x4770    BX	LR
0xC99E	0xBF00    NOP
0xC9A0	0x30004001  	SPI1_CR1+0
; end of _SPI1_Write
_SPI2_Write:
;__Lib_SPI_123.c, 103 :: 		
; data_out start address is: 0 (R0)
0xC9C0	0xB081    SUB	SP, SP, #4
0xC9C2	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 104 :: 		
0xC9C6	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0xC9C8	0x4803    LDR	R0, [PC, #12]
0xC9CA	0xF7F3FD15  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 105 :: 		
L_end_SPI2_Write:
0xC9CE	0xF8DDE000  LDR	LR, [SP, #0]
0xC9D2	0xB001    ADD	SP, SP, #4
0xC9D4	0x4770    BX	LR
0xC9D6	0xBF00    NOP
0xC9D8	0x38004000  	SPI2_CR1+0
; end of _SPI2_Write
_SPI3_Write:
;__Lib_SPI_123.c, 129 :: 		
; data_out start address is: 0 (R0)
0xC9A4	0xB081    SUB	SP, SP, #4
0xC9A6	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 130 :: 		
0xC9AA	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0xC9AC	0x4803    LDR	R0, [PC, #12]
0xC9AE	0xF7F3FD23  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 131 :: 		
L_end_SPI3_Write:
0xC9B2	0xF8DDE000  LDR	LR, [SP, #0]
0xC9B6	0xB001    ADD	SP, SP, #4
0xC9B8	0x4770    BX	LR
0xC9BA	0xBF00    NOP
0xC9BC	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Write
_UART1_Write:
;__Lib_UART_123_45_6.c, 41 :: 		
; _data start address is: 0 (R0)
0xD314	0xB081    SUB	SP, SP, #4
0xD316	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 42 :: 		
0xD31A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0xD31C	0x4803    LDR	R0, [PC, #12]
0xD31E	0xF7FCFCDF  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 43 :: 		
L_end_UART1_Write:
0xD322	0xF8DDE000  LDR	LR, [SP, #0]
0xD326	0xB001    ADD	SP, SP, #4
0xD328	0x4770    BX	LR
0xD32A	0xBF00    NOP
0xD32C	0x10004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_6_UARTx_Write:
;__Lib_UART_123_45_6.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x9CE0	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x9CE2	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x9CE6	0x4601    MOV	R1, R0
0x9CE8	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45_6.c, 36 :: 		
L___Lib_UART_123_45_6_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x9CEC	0x680B    LDR	R3, [R1, #0]
0x9CEE	0xF3C312C0  UBFX	R2, R3, #7, #1
0x9CF2	0xB902    CBNZ	R2, L___Lib_UART_123_45_6_UARTx_Write1
;__Lib_UART_123_45_6.c, 37 :: 		
0x9CF4	0xE7FA    B	L___Lib_UART_123_45_6_UARTx_Write0
L___Lib_UART_123_45_6_UARTx_Write1:
;__Lib_UART_123_45_6.c, 38 :: 		
0x9CF6	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x9CF8	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 39 :: 		
L_end_UARTx_Write:
0x9CFA	0xB001    ADD	SP, SP, #4
0x9CFC	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45_6.c, 45 :: 		
; _data start address is: 0 (R0)
0xE0D8	0xB081    SUB	SP, SP, #4
0xE0DA	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 46 :: 		
0xE0DE	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0xE0E0	0x4803    LDR	R0, [PC, #12]
0xE0E2	0xF7FBFDFD  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 47 :: 		
L_end_UART2_Write:
0xE0E6	0xF8DDE000  LDR	LR, [SP, #0]
0xE0EA	0xB001    ADD	SP, SP, #4
0xE0EC	0x4770    BX	LR
0xE0EE	0xBF00    NOP
0xE0F0	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45_6.c, 49 :: 		
; _data start address is: 0 (R0)
0xE718	0xB081    SUB	SP, SP, #4
0xE71A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 50 :: 		
0xE71E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0xE720	0x4803    LDR	R0, [PC, #12]
0xE722	0xF7FBFADD  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 51 :: 		
L_end_UART3_Write:
0xE726	0xF8DDE000  LDR	LR, [SP, #0]
0xE72A	0xB001    ADD	SP, SP, #4
0xE72C	0x4770    BX	LR
0xE72E	0xBF00    NOP
0xE730	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45_6.c, 53 :: 		
; _data start address is: 0 (R0)
0xE6FC	0xB081    SUB	SP, SP, #4
0xE6FE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 54 :: 		
0xE702	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0xE704	0x4803    LDR	R0, [PC, #12]
0xE706	0xF7FBFAEB  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 55 :: 		
L_end_UART4_Write:
0xE70A	0xF8DDE000  LDR	LR, [SP, #0]
0xE70E	0xB001    ADD	SP, SP, #4
0xE710	0x4770    BX	LR
0xE712	0xBF00    NOP
0xE714	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45_6.c, 57 :: 		
; _data start address is: 0 (R0)
0xDE94	0xB081    SUB	SP, SP, #4
0xDE96	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 58 :: 		
0xDE9A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0xDE9C	0x4803    LDR	R0, [PC, #12]
0xDE9E	0xF7FBFF1F  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 59 :: 		
L_end_UART5_Write:
0xDEA2	0xF8DDE000  LDR	LR, [SP, #0]
0xDEA6	0xB001    ADD	SP, SP, #4
0xDEA8	0x4770    BX	LR
0xDEAA	0xBF00    NOP
0xDEAC	0x50004000  	UART5_SR+0
; end of _UART5_Write
_UART6_Write:
;__Lib_UART_123_45_6.c, 61 :: 		
; _data start address is: 0 (R0)
0xDFA4	0xB081    SUB	SP, SP, #4
0xDFA6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 62 :: 		
0xDFAA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0xDFAC	0x4803    LDR	R0, [PC, #12]
0xDFAE	0xF7FBFE97  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 63 :: 		
L_end_UART6_Write:
0xDFB2	0xF8DDE000  LDR	LR, [SP, #0]
0xDFB6	0xB001    ADD	SP, SP, #4
0xDFB8	0x4770    BX	LR
0xDFBA	0xBF00    NOP
0xDFBC	0x14004001  	USART6_SR+0
; end of _UART6_Write
_TFT_Write_Data:
;__Lib_TFT_Defs.c, 295 :: 		void TFT_Write_Data(unsigned int _data) {
0xDFC0	0xB083    SUB	SP, SP, #12
0xDFC2	0xF8CDE000  STR	LR, [SP, #0]
0xDFC6	0xF8AD0004  STRH	R0, [SP, #4]
;__Lib_TFT_Defs.c, 296 :: 		TFT_RS = 1;
0xDFCA	0x2201    MOVS	R2, #1
0xDFCC	0xB252    SXTB	R2, R2
0xDFCE	0x4912    LDR	R1, [PC, #72]
0xDFD0	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 297 :: 		Write_to_Port(Hi(_data));
0xDFD2	0xA901    ADD	R1, SP, #4
0xDFD4	0x9102    STR	R1, [SP, #8]
0xDFD6	0x1C49    ADDS	R1, R1, #1
0xDFD8	0x7809    LDRB	R1, [R1, #0]
0xDFDA	0xB2C8    UXTB	R0, R1
0xDFDC	0xF7F4FA30  BL	__Lib_TFT_Defs_Write_to_Port+0
;__Lib_TFT_Defs.c, 298 :: 		TFT_Write_Strobe();
0xDFE0	0x2200    MOVS	R2, #0
0xDFE2	0xB252    SXTB	R2, R2
0xDFE4	0x490D    LDR	R1, [PC, #52]
0xDFE6	0x600A    STR	R2, [R1, #0]
0xDFE8	0xBF00    NOP
0xDFEA	0x2201    MOVS	R2, #1
0xDFEC	0xB252    SXTB	R2, R2
0xDFEE	0x490B    LDR	R1, [PC, #44]
0xDFF0	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 299 :: 		Write_to_Port(Lo(_data));
0xDFF2	0x9902    LDR	R1, [SP, #8]
0xDFF4	0x7809    LDRB	R1, [R1, #0]
0xDFF6	0xB2C8    UXTB	R0, R1
0xDFF8	0xF7F4FA22  BL	__Lib_TFT_Defs_Write_to_Port+0
;__Lib_TFT_Defs.c, 300 :: 		TFT_Write_Strobe();
0xDFFC	0x2200    MOVS	R2, #0
0xDFFE	0xB252    SXTB	R2, R2
0xE000	0x4906    LDR	R1, [PC, #24]
0xE002	0x600A    STR	R2, [R1, #0]
0xE004	0xBF00    NOP
0xE006	0x2201    MOVS	R2, #1
0xE008	0xB252    SXTB	R2, R2
0xE00A	0x4904    LDR	R1, [PC, #16]
0xE00C	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 301 :: 		}
L_end_TFT_Write_Data:
0xE00E	0xF8DDE000  LDR	LR, [SP, #0]
0xE012	0xB003    ADD	SP, SP, #12
0xE014	0x4770    BX	LR
0xE016	0xBF00    NOP
0xE018	0x82BC4242  	TFT_RS+0
0xE01C	0x82AC4242  	TFT_WR+0
; end of _TFT_Write_Data
_TFT_16bit_Write_Data:
;__Lib_TFT_Defs.c, 309 :: 		void TFT_16bit_Write_Data(unsigned int _data) {
; _data start address is: 0 (R0)
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_TFT_Defs.c, 310 :: 		TFT_RS = 1;
0xE020	0x2201    MOVS	R2, #1
0xE022	0xB252    SXTB	R2, R2
0xE024	0x4906    LDR	R1, [PC, #24]
0xE026	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 311 :: 		TFT_DataPort = _data;
0xE028	0x4906    LDR	R1, [PC, #24]
0xE02A	0x8008    STRH	R0, [R1, #0]
; _data end address is: 0 (R0)
;__Lib_TFT_Defs.c, 312 :: 		TFT_Write_Strobe();
0xE02C	0x2200    MOVS	R2, #0
0xE02E	0xB252    SXTB	R2, R2
0xE030	0x4905    LDR	R1, [PC, #20]
0xE032	0x600A    STR	R2, [R1, #0]
0xE034	0xBF00    NOP
0xE036	0x2201    MOVS	R2, #1
0xE038	0xB252    SXTB	R2, R2
0xE03A	0x4903    LDR	R1, [PC, #12]
0xE03C	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 313 :: 		}
L_end_TFT_16bit_Write_Data:
0xE03E	0x4770    BX	LR
0xE040	0x82BC4242  	TFT_RS+0
0xE044	0x10144002  	TFT_DataPort+0
0xE048	0x82AC4242  	TFT_WR+0
; end of _TFT_16bit_Write_Data
_TFT_SSD1963_8bit_Write_Data:
;__Lib_TFT_Defs.c, 2762 :: 		void TFT_SSD1963_8bit_Write_Data(unsigned int color) {
; color start address is: 0 (R0)
0xE04C	0xB081    SUB	SP, SP, #4
0xE04E	0xF8CDE000  STR	LR, [SP, #0]
0xE052	0xB283    UXTH	R3, R0
; color end address is: 0 (R0)
; color start address is: 12 (R3)
;__Lib_TFT_Defs.c, 2764 :: 		temp = (color>>11);
0xE054	0x0AD9    LSRS	R1, R3, #11
; temp start address is: 0 (R0)
0xE056	0xB2C8    UXTB	R0, R1
;__Lib_TFT_Defs.c, 2765 :: 		temp = (temp<<3);
0xE058	0x00C1    LSLS	R1, R0, #3
; temp end address is: 0 (R0)
; temp start address is: 16 (R4)
0xE05A	0xB2CC    UXTB	R4, R1
;__Lib_TFT_Defs.c, 2766 :: 		if ((temp>>7) == 1) {
0xE05C	0x09E1    LSRS	R1, R4, #7
0xE05E	0xB2C9    UXTB	R1, R1
0xE060	0x2901    CMP	R1, #1
0xE062	0xD102    BNE	L__TFT_SSD1963_8bit_Write_Data185
;__Lib_TFT_Defs.c, 2767 :: 		temp += 7;
0xE064	0x1DE1    ADDS	R1, R4, #7
; temp end address is: 16 (R4)
; temp start address is: 0 (R0)
0xE066	0xB2C8    UXTB	R0, R1
; temp end address is: 0 (R0)
;__Lib_TFT_Defs.c, 2768 :: 		}
0xE068	0xE000    B	L_TFT_SSD1963_8bit_Write_Data161
L__TFT_SSD1963_8bit_Write_Data185:
;__Lib_TFT_Defs.c, 2766 :: 		if ((temp>>7) == 1) {
0xE06A	0xB2E0    UXTB	R0, R4
;__Lib_TFT_Defs.c, 2768 :: 		}
L_TFT_SSD1963_8bit_Write_Data161:
;__Lib_TFT_Defs.c, 2769 :: 		TFT_SSD1963YT_8bit_Write_Command(temp);
; temp start address is: 0 (R0)
; temp end address is: 0 (R0)
0xE06C	0xF7F8FCC2  BL	_TFT_SSD1963YT_8bit_Write_Command+0
;__Lib_TFT_Defs.c, 2770 :: 		temp = (color>>5);
0xE070	0x0959    LSRS	R1, R3, #5
; temp start address is: 0 (R0)
0xE072	0xB2C8    UXTB	R0, R1
;__Lib_TFT_Defs.c, 2771 :: 		temp = (temp<<2);
0xE074	0x0081    LSLS	R1, R0, #2
; temp end address is: 0 (R0)
; temp start address is: 16 (R4)
0xE076	0xB2CC    UXTB	R4, R1
;__Lib_TFT_Defs.c, 2772 :: 		if ((temp>>7) == 1) {
0xE078	0x09E1    LSRS	R1, R4, #7
0xE07A	0xB2C9    UXTB	R1, R1
0xE07C	0x2901    CMP	R1, #1
0xE07E	0xD102    BNE	L__TFT_SSD1963_8bit_Write_Data186
;__Lib_TFT_Defs.c, 2773 :: 		temp += 3;
0xE080	0x1CE1    ADDS	R1, R4, #3
; temp end address is: 16 (R4)
; temp start address is: 0 (R0)
0xE082	0xB2C8    UXTB	R0, R1
; temp end address is: 0 (R0)
;__Lib_TFT_Defs.c, 2774 :: 		}
0xE084	0xE000    B	L_TFT_SSD1963_8bit_Write_Data162
L__TFT_SSD1963_8bit_Write_Data186:
;__Lib_TFT_Defs.c, 2772 :: 		if ((temp>>7) == 1) {
0xE086	0xB2E0    UXTB	R0, R4
;__Lib_TFT_Defs.c, 2774 :: 		}
L_TFT_SSD1963_8bit_Write_Data162:
;__Lib_TFT_Defs.c, 2775 :: 		TFT_SSD1963YT_8bit_Write_Command(temp);
; temp start address is: 0 (R0)
; temp end address is: 0 (R0)
0xE088	0xF7F8FCB4  BL	_TFT_SSD1963YT_8bit_Write_Command+0
;__Lib_TFT_Defs.c, 2776 :: 		temp = (color<<3);
0xE08C	0x00D9    LSLS	R1, R3, #3
; color end address is: 12 (R3)
; temp start address is: 12 (R3)
0xE08E	0xB2CB    UXTB	R3, R1
;__Lib_TFT_Defs.c, 2777 :: 		if ((temp>>7) == 1) {
0xE090	0x09D9    LSRS	R1, R3, #7
0xE092	0xB2C9    UXTB	R1, R1
0xE094	0x2901    CMP	R1, #1
0xE096	0xD102    BNE	L__TFT_SSD1963_8bit_Write_Data187
;__Lib_TFT_Defs.c, 2778 :: 		temp += 7;
0xE098	0x1DD9    ADDS	R1, R3, #7
; temp end address is: 12 (R3)
; temp start address is: 0 (R0)
0xE09A	0xB2C8    UXTB	R0, R1
; temp end address is: 0 (R0)
;__Lib_TFT_Defs.c, 2779 :: 		}
0xE09C	0xE000    B	L_TFT_SSD1963_8bit_Write_Data163
L__TFT_SSD1963_8bit_Write_Data187:
;__Lib_TFT_Defs.c, 2777 :: 		if ((temp>>7) == 1) {
0xE09E	0xB2D8    UXTB	R0, R3
;__Lib_TFT_Defs.c, 2779 :: 		}
L_TFT_SSD1963_8bit_Write_Data163:
;__Lib_TFT_Defs.c, 2780 :: 		TFT_SSD1963YT_8bit_Write_Command(temp);
; temp start address is: 0 (R0)
; temp end address is: 0 (R0)
0xE0A0	0xF7F8FCA8  BL	_TFT_SSD1963YT_8bit_Write_Command+0
;__Lib_TFT_Defs.c, 2781 :: 		}
L_end_TFT_SSD1963_8bit_Write_Data:
0xE0A4	0xF8DDE000  LDR	LR, [SP, #0]
0xE0A8	0xB001    ADD	SP, SP, #4
0xE0AA	0x4770    BX	LR
; end of _TFT_SSD1963_8bit_Write_Data
_Calibrate:
;Ducati_logger_driver.c, 135 :: 		void Calibrate() {
0xFC30	0xB081    SUB	SP, SP, #4
0xFC32	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_driver.c, 136 :: 		TFT_Fill_Screen(CL_BLACK);
0xFC36	0xF2400000  MOVW	R0, #0
0xFC3A	0xF000F90F  BL	_TFT_Fill_Screen+0
;Ducati_logger_driver.c, 137 :: 		TFT_Set_Font(TFT_defaultFont, CL_WHITE, FO_HORIZONTAL);
0xFC3E	0x2200    MOVS	R2, #0
0xFC40	0xF64F71FF  MOVW	R1, #65535
0xFC44	0x4880    LDR	R0, [PC, #512]
0xFC46	0xF7FEF933  BL	_TFT_Set_Font+0
;Ducati_logger_driver.c, 138 :: 		TFT_Write_Text("Touch points on the screen as they", 125, 121);
0xFC4A	0x4880    LDR	R0, [PC, #512]
0xFC4C	0x2279    MOVS	R2, #121
0xFC4E	0x217D    MOVS	R1, #125
0xFC50	0xF7FEF964  BL	_TFT_Write_Text+0
;Ducati_logger_driver.c, 139 :: 		TFT_Write_Text("appear to calibrate touchscreen.", 135, 151);
0xFC54	0x487E    LDR	R0, [PC, #504]
0xFC56	0x2297    MOVS	R2, #151
0xFC58	0x2187    MOVS	R1, #135
0xFC5A	0xF7FEF95F  BL	_TFT_Write_Text+0
;Ducati_logger_driver.c, 140 :: 		STMPE610_ClearInterruptFlagsAndFIFO();
0xFC5E	0xF7FEFA25  BL	_STMPE610_ClearInterruptFlagsAndFIFO+0
;Ducati_logger_driver.c, 141 :: 		TFT_Set_Brush(1, CL_WHITE, 0, 0, 0, 0);
0xFC62	0x2100    MOVS	R1, #0
0xFC64	0x2000    MOVS	R0, #0
0xFC66	0xB402    PUSH	(R1)
0xFC68	0xB401    PUSH	(R0)
0xFC6A	0x2300    MOVS	R3, #0
0xFC6C	0x2200    MOVS	R2, #0
0xFC6E	0xF64F71FF  MOVW	R1, #65535
0xFC72	0x2001    MOVS	R0, #1
0xFC74	0xF7F9FB68  BL	_TFT_Set_Brush+0
0xFC78	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 142 :: 		TFT_Circle(0, 0, 3);
0xFC7A	0x2203    MOVS	R2, #3
0xFC7C	0xB212    SXTH	R2, R2
0xFC7E	0x2100    MOVS	R1, #0
0xFC80	0xB209    SXTH	R1, R1
0xFC82	0x2000    MOVS	R0, #0
0xFC84	0xB200    SXTH	R0, R0
0xFC86	0xF7FEFB4B  BL	_TFT_Circle+0
;Ducati_logger_driver.c, 143 :: 		STMPE610_CalibratePoint(STMPE610_FIRST_CORNER);
0xFC8A	0x2000    MOVS	R0, #0
0xFC8C	0xF7FEFA1A  BL	_STMPE610_CalibratePoint+0
;Ducati_logger_driver.c, 144 :: 		Delay_ms(500);
0xFC90	0xF647073E  MOVW	R7, #30782
0xFC94	0xF2C0177D  MOVT	R7, #381
L_Calibrate6:
0xFC98	0x1E7F    SUBS	R7, R7, #1
0xFC9A	0xD1FD    BNE	L_Calibrate6
0xFC9C	0xBF00    NOP
0xFC9E	0xBF00    NOP
0xFCA0	0xBF00    NOP
0xFCA2	0xBF00    NOP
0xFCA4	0xBF00    NOP
;Ducati_logger_driver.c, 145 :: 		TFT_Set_Brush(1, CL_BLACK, 0, 0, 0, 0);
0xFCA6	0x2100    MOVS	R1, #0
0xFCA8	0x2000    MOVS	R0, #0
0xFCAA	0xB402    PUSH	(R1)
0xFCAC	0xB401    PUSH	(R0)
0xFCAE	0x2300    MOVS	R3, #0
0xFCB0	0x2200    MOVS	R2, #0
0xFCB2	0xF2400100  MOVW	R1, #0
0xFCB6	0x2001    MOVS	R0, #1
0xFCB8	0xF7F9FB46  BL	_TFT_Set_Brush+0
0xFCBC	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 146 :: 		TFT_Circle(0, 0, 3);
0xFCBE	0x2203    MOVS	R2, #3
0xFCC0	0xB212    SXTH	R2, R2
0xFCC2	0x2100    MOVS	R1, #0
0xFCC4	0xB209    SXTH	R1, R1
0xFCC6	0x2000    MOVS	R0, #0
0xFCC8	0xB200    SXTH	R0, R0
0xFCCA	0xF7FEFB29  BL	_TFT_Circle+0
;Ducati_logger_driver.c, 147 :: 		STMPE610_ClearInterruptFlagsAndFIFO();
0xFCCE	0xF7FEF9ED  BL	_STMPE610_ClearInterruptFlagsAndFIFO+0
;Ducati_logger_driver.c, 148 :: 		TFT_Set_Brush(1, CL_WHITE, 0, 0, 0, 0);
0xFCD2	0x2100    MOVS	R1, #0
0xFCD4	0x2000    MOVS	R0, #0
0xFCD6	0xB402    PUSH	(R1)
0xFCD8	0xB401    PUSH	(R0)
0xFCDA	0x2300    MOVS	R3, #0
0xFCDC	0x2200    MOVS	R2, #0
0xFCDE	0xF64F71FF  MOVW	R1, #65535
0xFCE2	0x2001    MOVS	R0, #1
0xFCE4	0xF7F9FB30  BL	_TFT_Set_Brush+0
0xFCE8	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 149 :: 		TFT_Circle(0, TFT_DISP_HEIGHT-1, 3);
0xFCEA	0x485A    LDR	R0, [PC, #360]
0xFCEC	0x8800    LDRH	R0, [R0, #0]
0xFCEE	0x1E40    SUBS	R0, R0, #1
0xFCF0	0x2203    MOVS	R2, #3
0xFCF2	0xB212    SXTH	R2, R2
0xFCF4	0xB201    SXTH	R1, R0
0xFCF6	0x2000    MOVS	R0, #0
0xFCF8	0xB200    SXTH	R0, R0
0xFCFA	0xF7FEFB11  BL	_TFT_Circle+0
;Ducati_logger_driver.c, 150 :: 		STMPE610_CalibratePoint(STMPE610_SECOND_CORNER);
0xFCFE	0x2001    MOVS	R0, #1
0xFD00	0xF7FEF9E0  BL	_STMPE610_CalibratePoint+0
;Ducati_logger_driver.c, 151 :: 		Delay_ms(500);
0xFD04	0xF647073E  MOVW	R7, #30782
0xFD08	0xF2C0177D  MOVT	R7, #381
0xFD0C	0xBF00    NOP
0xFD0E	0xBF00    NOP
L_Calibrate8:
0xFD10	0x1E7F    SUBS	R7, R7, #1
0xFD12	0xD1FD    BNE	L_Calibrate8
0xFD14	0xBF00    NOP
0xFD16	0xBF00    NOP
0xFD18	0xBF00    NOP
;Ducati_logger_driver.c, 152 :: 		TFT_Set_Brush(1, CL_BLACK, 0, 0, 0, 0);
0xFD1A	0x2100    MOVS	R1, #0
0xFD1C	0x2000    MOVS	R0, #0
0xFD1E	0xB402    PUSH	(R1)
0xFD20	0xB401    PUSH	(R0)
0xFD22	0x2300    MOVS	R3, #0
0xFD24	0x2200    MOVS	R2, #0
0xFD26	0xF2400100  MOVW	R1, #0
0xFD2A	0x2001    MOVS	R0, #1
0xFD2C	0xF7F9FB0C  BL	_TFT_Set_Brush+0
0xFD30	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 153 :: 		TFT_Circle(0, TFT_DISP_HEIGHT-1, 3);
0xFD32	0x4848    LDR	R0, [PC, #288]
0xFD34	0x8800    LDRH	R0, [R0, #0]
0xFD36	0x1E40    SUBS	R0, R0, #1
0xFD38	0x2203    MOVS	R2, #3
0xFD3A	0xB212    SXTH	R2, R2
0xFD3C	0xB201    SXTH	R1, R0
0xFD3E	0x2000    MOVS	R0, #0
0xFD40	0xB200    SXTH	R0, R0
0xFD42	0xF7FEFAED  BL	_TFT_Circle+0
;Ducati_logger_driver.c, 154 :: 		STMPE610_ClearInterruptFlagsAndFIFO();
0xFD46	0xF7FEF9B1  BL	_STMPE610_ClearInterruptFlagsAndFIFO+0
;Ducati_logger_driver.c, 155 :: 		TFT_Set_Brush(1, CL_WHITE, 0, 0, 0, 0);
0xFD4A	0x2100    MOVS	R1, #0
0xFD4C	0x2000    MOVS	R0, #0
0xFD4E	0xB402    PUSH	(R1)
0xFD50	0xB401    PUSH	(R0)
0xFD52	0x2300    MOVS	R3, #0
0xFD54	0x2200    MOVS	R2, #0
0xFD56	0xF64F71FF  MOVW	R1, #65535
0xFD5A	0x2001    MOVS	R0, #1
0xFD5C	0xF7F9FAF4  BL	_TFT_Set_Brush+0
0xFD60	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 156 :: 		TFT_Circle(TFT_DISP_WIDTH-1, TFT_DISP_HEIGHT-1, 3);
0xFD62	0x483C    LDR	R0, [PC, #240]
0xFD64	0x8800    LDRH	R0, [R0, #0]
0xFD66	0x1E41    SUBS	R1, R0, #1
0xFD68	0x483B    LDR	R0, [PC, #236]
0xFD6A	0x8800    LDRH	R0, [R0, #0]
0xFD6C	0x1E40    SUBS	R0, R0, #1
0xFD6E	0x2203    MOVS	R2, #3
0xFD70	0xB212    SXTH	R2, R2
0xFD72	0xB209    SXTH	R1, R1
0xFD74	0xB200    SXTH	R0, R0
0xFD76	0xF7FEFAD3  BL	_TFT_Circle+0
;Ducati_logger_driver.c, 157 :: 		STMPE610_CalibratePoint(STMPE610_THIRD_CORNER);
0xFD7A	0x2002    MOVS	R0, #2
0xFD7C	0xF7FEF9A2  BL	_STMPE610_CalibratePoint+0
;Ducati_logger_driver.c, 158 :: 		Delay_ms(500);
0xFD80	0xF647073E  MOVW	R7, #30782
0xFD84	0xF2C0177D  MOVT	R7, #381
L_Calibrate10:
0xFD88	0x1E7F    SUBS	R7, R7, #1
0xFD8A	0xD1FD    BNE	L_Calibrate10
0xFD8C	0xBF00    NOP
0xFD8E	0xBF00    NOP
0xFD90	0xBF00    NOP
0xFD92	0xBF00    NOP
0xFD94	0xBF00    NOP
;Ducati_logger_driver.c, 159 :: 		TFT_Set_Brush(1, CL_BLACK, 0, 0, 0, 0);
0xFD96	0x2100    MOVS	R1, #0
0xFD98	0x2000    MOVS	R0, #0
0xFD9A	0xB402    PUSH	(R1)
0xFD9C	0xB401    PUSH	(R0)
0xFD9E	0x2300    MOVS	R3, #0
0xFDA0	0x2200    MOVS	R2, #0
0xFDA2	0xF2400100  MOVW	R1, #0
0xFDA6	0x2001    MOVS	R0, #1
0xFDA8	0xF7F9FACE  BL	_TFT_Set_Brush+0
0xFDAC	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 160 :: 		TFT_Circle(TFT_DISP_WIDTH-1, TFT_DISP_HEIGHT-1, 3);
0xFDAE	0x4829    LDR	R0, [PC, #164]
0xFDB0	0x8800    LDRH	R0, [R0, #0]
0xFDB2	0x1E41    SUBS	R1, R0, #1
0xFDB4	0x4828    LDR	R0, [PC, #160]
0xFDB6	0x8800    LDRH	R0, [R0, #0]
0xFDB8	0x1E40    SUBS	R0, R0, #1
0xFDBA	0x2203    MOVS	R2, #3
0xFDBC	0xB212    SXTH	R2, R2
0xFDBE	0xB209    SXTH	R1, R1
0xFDC0	0xB200    SXTH	R0, R0
0xFDC2	0xF7FEFAAD  BL	_TFT_Circle+0
;Ducati_logger_driver.c, 161 :: 		STMPE610_ClearInterruptFlagsAndFIFO();
0xFDC6	0xF7FEF971  BL	_STMPE610_ClearInterruptFlagsAndFIFO+0
;Ducati_logger_driver.c, 162 :: 		TFT_Set_Brush(1, CL_WHITE, 0, 0, 0, 0);
0xFDCA	0x2100    MOVS	R1, #0
0xFDCC	0x2000    MOVS	R0, #0
0xFDCE	0xB402    PUSH	(R1)
0xFDD0	0xB401    PUSH	(R0)
0xFDD2	0x2300    MOVS	R3, #0
0xFDD4	0x2200    MOVS	R2, #0
0xFDD6	0xF64F71FF  MOVW	R1, #65535
0xFDDA	0x2001    MOVS	R0, #1
0xFDDC	0xF7F9FAB4  BL	_TFT_Set_Brush+0
0xFDE0	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 163 :: 		TFT_Circle(TFT_DISP_WIDTH-1, 0, 3);
0xFDE2	0x481D    LDR	R0, [PC, #116]
0xFDE4	0x8800    LDRH	R0, [R0, #0]
0xFDE6	0x1E40    SUBS	R0, R0, #1
0xFDE8	0x2203    MOVS	R2, #3
0xFDEA	0xB212    SXTH	R2, R2
0xFDEC	0x2100    MOVS	R1, #0
0xFDEE	0xB209    SXTH	R1, R1
0xFDF0	0xB200    SXTH	R0, R0
0xFDF2	0xF7FEFA95  BL	_TFT_Circle+0
;Ducati_logger_driver.c, 164 :: 		STMPE610_CalibratePoint(STMPE610_FOURTH_CORNER);
0xFDF6	0x2003    MOVS	R0, #3
0xFDF8	0xF7FEF964  BL	_STMPE610_CalibratePoint+0
;Ducati_logger_driver.c, 165 :: 		TFT_Set_Brush(1, CL_BLACK, 0, 0, 0, 0);
0xFDFC	0x2100    MOVS	R1, #0
0xFDFE	0x2000    MOVS	R0, #0
0xFE00	0xB402    PUSH	(R1)
0xFE02	0xB401    PUSH	(R0)
0xFE04	0x2300    MOVS	R3, #0
0xFE06	0x2200    MOVS	R2, #0
0xFE08	0xF2400100  MOVW	R1, #0
0xFE0C	0x2001    MOVS	R0, #1
0xFE0E	0xF7F9FA9B  BL	_TFT_Set_Brush+0
0xFE12	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 166 :: 		TFT_Circle(TFT_DISP_WIDTH-1, 0, 3);
0xFE14	0x4810    LDR	R0, [PC, #64]
0xFE16	0x8800    LDRH	R0, [R0, #0]
0xFE18	0x1E40    SUBS	R0, R0, #1
0xFE1A	0x2203    MOVS	R2, #3
0xFE1C	0xB212    SXTH	R2, R2
0xFE1E	0x2100    MOVS	R1, #0
0xFE20	0xB209    SXTH	R1, R1
0xFE22	0xB200    SXTH	R0, R0
0xFE24	0xF7FEFA7C  BL	_TFT_Circle+0
;Ducati_logger_driver.c, 167 :: 		Delay_ms(500);
0xFE28	0xF647073E  MOVW	R7, #30782
0xFE2C	0xF2C0177D  MOVT	R7, #381
L_Calibrate12:
0xFE30	0x1E7F    SUBS	R7, R7, #1
0xFE32	0xD1FD    BNE	L_Calibrate12
0xFE34	0xBF00    NOP
0xFE36	0xBF00    NOP
0xFE38	0xBF00    NOP
0xFE3A	0xBF00    NOP
0xFE3C	0xBF00    NOP
;Ducati_logger_driver.c, 168 :: 		}
L_end_Calibrate:
0xFE3E	0xF8DDE000  LDR	LR, [SP, #0]
0xFE42	0xB001    ADD	SP, SP, #4
0xFE44	0x4770    BX	LR
0xFE46	0xBF00    NOP
0xFE48	0x7CB80001  	_TFT_defaultFont+0
0xFE4C	0x00142000  	?lstr1_Ducati_logger_driver+0
0xFE50	0x00372000  	?lstr2_Ducati_logger_driver+0
0xFE54	0x22242000  	_TFT_DISP_HEIGHT+0
0xFE58	0x22262000  	_TFT_DISP_WIDTH+0
; end of _Calibrate
_TFT_Set_Font:
;__Lib_TFT.c, 177 :: 		
; font_orientation start address is: 8 (R2)
; font_color start address is: 4 (R1)
; activeFont start address is: 0 (R0)
0xDEB0	0xB081    SUB	SP, SP, #4
; font_orientation end address is: 8 (R2)
; font_color end address is: 4 (R1)
; activeFont end address is: 0 (R0)
; activeFont start address is: 0 (R0)
; font_color start address is: 4 (R1)
; font_orientation start address is: 8 (R2)
;__Lib_TFT.c, 178 :: 		
0xDEB2	0x4B12    LDR	R3, [PC, #72]
0xDEB4	0x6018    STR	R0, [R3, #0]
;__Lib_TFT.c, 179 :: 		
0xDEB6	0x1C83    ADDS	R3, R0, #2
0xDEB8	0x781C    LDRB	R4, [R3, #0]
0xDEBA	0x1CC3    ADDS	R3, R0, #3
0xDEBC	0x781B    LDRB	R3, [R3, #0]
0xDEBE	0x021B    LSLS	R3, R3, #8
0xDEC0	0xB29B    UXTH	R3, R3
0xDEC2	0x18E4    ADDS	R4, R4, R3
0xDEC4	0x4B0E    LDR	R3, [PC, #56]
0xDEC6	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 180 :: 		
0xDEC8	0x1D03    ADDS	R3, R0, #4
0xDECA	0x781C    LDRB	R4, [R3, #0]
0xDECC	0x1D43    ADDS	R3, R0, #5
0xDECE	0x781B    LDRB	R3, [R3, #0]
0xDED0	0x021B    LSLS	R3, R3, #8
0xDED2	0xB29B    UXTH	R3, R3
0xDED4	0x18E4    ADDS	R4, R4, R3
0xDED6	0x4B0B    LDR	R3, [PC, #44]
0xDED8	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 181 :: 		
0xDEDA	0x1D83    ADDS	R3, R0, #6
; activeFont end address is: 0 (R0)
0xDEDC	0x781C    LDRB	R4, [R3, #0]
0xDEDE	0x4B0A    LDR	R3, [PC, #40]
0xDEE0	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 183 :: 		
0xDEE2	0x4B0A    LDR	R3, [PC, #40]
0xDEE4	0x8019    STRH	R1, [R3, #0]
; font_color end address is: 4 (R1)
;__Lib_TFT.c, 184 :: 		
0xDEE6	0x4B0A    LDR	R3, [PC, #40]
0xDEE8	0x701A    STRB	R2, [R3, #0]
; font_orientation end address is: 8 (R2)
;__Lib_TFT.c, 185 :: 		
0xDEEA	0x2401    MOVS	R4, #1
0xDEEC	0x4B09    LDR	R3, [PC, #36]
0xDEEE	0x701C    STRB	R4, [R3, #0]
;__Lib_TFT.c, 186 :: 		
0xDEF0	0x2400    MOVS	R4, #0
0xDEF2	0x4B09    LDR	R3, [PC, #36]
0xDEF4	0x701C    STRB	R4, [R3, #0]
;__Lib_TFT.c, 187 :: 		
L_end_TFT_Set_Font:
0xDEF6	0xB001    ADD	SP, SP, #4
0xDEF8	0x4770    BX	LR
0xDEFA	0xBF00    NOP
0xDEFC	0x2E142000  	__Lib_TFT__font+0
0xDF00	0x2E122000  	__Lib_TFT__fontFirstChar+0
0xDF04	0x2E182000  	__Lib_TFT__fontLastChar+0
0xDF08	0x2E1A2000  	__Lib_TFT__fontHeight+0
0xDF0C	0x2E1C2000  	__Lib_TFT_FontColor+0
0xDF10	0x2E112000  	__Lib_TFT_FontOrientation+0
0xDF14	0x03462000  	__Lib_TFT_FontInitialized+0
0xDF18	0x2E1E2000  	_ExternalFontSet+0
; end of _TFT_Set_Font
_TFT_Write_Text:
;__Lib_TFT.c, 1271 :: 		
; y start address is: 8 (R2)
; x start address is: 4 (R1)
0xDF1C	0xB083    SUB	SP, SP, #12
0xDF1E	0xF8CDE000  STR	LR, [SP, #0]
0xDF22	0x9002    STR	R0, [SP, #8]
; y end address is: 8 (R2)
; x end address is: 4 (R1)
; x start address is: 4 (R1)
; y start address is: 8 (R2)
;__Lib_TFT.c, 1274 :: 		
0xDF24	0x4B1C    LDR	R3, [PC, #112]
0xDF26	0x881B    LDRH	R3, [R3, #0]
0xDF28	0x4299    CMP	R1, R3
0xDF2A	0xD300    BCC	L_TFT_Write_Text190
; x end address is: 4 (R1)
; y end address is: 8 (R2)
;__Lib_TFT.c, 1275 :: 		
0xDF2C	0xE02F    B	L_end_TFT_Write_Text
L_TFT_Write_Text190:
;__Lib_TFT.c, 1276 :: 		
; y start address is: 8 (R2)
; x start address is: 4 (R1)
0xDF2E	0x4B1B    LDR	R3, [PC, #108]
0xDF30	0x881B    LDRH	R3, [R3, #0]
0xDF32	0x429A    CMP	R2, R3
0xDF34	0xD300    BCC	L_TFT_Write_Text191
; x end address is: 4 (R1)
; y end address is: 8 (R2)
;__Lib_TFT.c, 1277 :: 		
0xDF36	0xE02A    B	L_end_TFT_Write_Text
L_TFT_Write_Text191:
;__Lib_TFT.c, 1279 :: 		
; i start address is: 0 (R0)
; y start address is: 8 (R2)
; x start address is: 4 (R1)
0xDF38	0x2000    MOVS	R0, #0
;__Lib_TFT.c, 1280 :: 		
0xDF3A	0xF8AD0004  STRH	R0, [SP, #4]
; y end address is: 8 (R2)
0xDF3E	0xB288    UXTH	R0, R1
0xDF40	0xB291    UXTH	R1, R2
; x end address is: 4 (R1)
0xDF42	0xF7FBF9B9  BL	_TFT_Move_Cursor+0
; i end address is: 0 (R0)
0xDF46	0xF8BD0004  LDRH	R0, [SP, #4]
;__Lib_TFT.c, 1281 :: 		
L_TFT_Write_Text192:
; i start address is: 0 (R0)
0xDF4A	0x9B02    LDR	R3, [SP, #8]
0xDF4C	0x181B    ADDS	R3, R3, R0
0xDF4E	0x781B    LDRB	R3, [R3, #0]
0xDF50	0xB1EB    CBZ	R3, L_TFT_Write_Text193
;__Lib_TFT.c, 1282 :: 		
0xDF52	0x4B13    LDR	R3, [PC, #76]
0xDF54	0x781B    LDRB	R3, [R3, #0]
0xDF56	0xB163    CBZ	R3, L_TFT_Write_Text194
;__Lib_TFT.c, 1283 :: 		
0xDF58	0x9B02    LDR	R3, [SP, #8]
0xDF5A	0x181B    ADDS	R3, R3, R0
0xDF5C	0x781B    LDRB	R3, [R3, #0]
0xDF5E	0xF8AD0004  STRH	R0, [SP, #4]
0xDF62	0xB298    UXTH	R0, R3
0xDF64	0xF7FBFA5C  BL	__Lib_TFT__TFT_Write_Char_E+0
0xDF68	0xF8BD0004  LDRH	R0, [SP, #4]
0xDF6C	0x1C41    ADDS	R1, R0, #1
0xDF6E	0xB289    UXTH	R1, R1
; i end address is: 0 (R0)
; i start address is: 4 (R1)
; i end address is: 4 (R1)
0xDF70	0xE00B    B	L_TFT_Write_Text195
L_TFT_Write_Text194:
;__Lib_TFT.c, 1285 :: 		
; i start address is: 0 (R0)
0xDF72	0x9B02    LDR	R3, [SP, #8]
0xDF74	0x181B    ADDS	R3, R3, R0
0xDF76	0x781B    LDRB	R3, [R3, #0]
0xDF78	0xF8AD0004  STRH	R0, [SP, #4]
0xDF7C	0xB298    UXTH	R0, R3
0xDF7E	0xF7FCFA17  BL	__Lib_TFT__TFT_Write_Char+0
0xDF82	0xF8BD0004  LDRH	R0, [SP, #4]
0xDF86	0x1C41    ADDS	R1, R0, #1
0xDF88	0xB289    UXTH	R1, R1
; i end address is: 0 (R0)
; i start address is: 4 (R1)
; i end address is: 4 (R1)
L_TFT_Write_Text195:
; i start address is: 4 (R1)
0xDF8A	0xB288    UXTH	R0, R1
; i end address is: 4 (R1)
0xDF8C	0xE7DD    B	L_TFT_Write_Text192
L_TFT_Write_Text193:
;__Lib_TFT.c, 1286 :: 		
L_end_TFT_Write_Text:
0xDF8E	0xF8DDE000  LDR	LR, [SP, #0]
0xDF92	0xB003    ADD	SP, SP, #12
0xDF94	0x4770    BX	LR
0xDF96	0xBF00    NOP
0xDF98	0x22262000  	_TFT_DISP_WIDTH+0
0xDF9C	0x22242000  	_TFT_DISP_HEIGHT+0
0xDFA0	0x2E1E2000  	_ExternalFontSet+0
; end of _TFT_Write_Text
__Lib_TFT__TFT_Write_Char_E:
;__Lib_TFT.c, 3354 :: 		
; ch start address is: 0 (R0)
0x9420	0xB08B    SUB	SP, SP, #44
0x9422	0xF8CDE000  STR	LR, [SP, #0]
; ch end address is: 0 (R0)
; ch start address is: 0 (R0)
;__Lib_TFT.c, 3356 :: 		
;__Lib_TFT.c, 3358 :: 		
0x9426	0xF2400100  MOVW	R1, #0
0x942A	0xF8AD1026  STRH	R1, [SP, #38]
0x942E	0x2100    MOVS	R1, #0
0x9430	0xF88D1028  STRB	R1, [SP, #40]
;__Lib_TFT.c, 3359 :: 		
;__Lib_TFT.c, 3366 :: 		
0x9434	0x49B1    LDR	R1, [PC, #708]
0x9436	0x8809    LDRH	R1, [R1, #0]
0x9438	0x4288    CMP	R0, R1
0x943A	0xD200    BCS	L___Lib_TFT__TFT_Write_Char_E679
; ch end address is: 0 (R0)
;__Lib_TFT.c, 3367 :: 		
0x943C	0xE159    B	L_end__TFT_Write_Char_E
L___Lib_TFT__TFT_Write_Char_E679:
;__Lib_TFT.c, 3368 :: 		
; ch start address is: 0 (R0)
0x943E	0x49B0    LDR	R1, [PC, #704]
0x9440	0x8809    LDRH	R1, [R1, #0]
0x9442	0x4288    CMP	R0, R1
0x9444	0xD900    BLS	L___Lib_TFT__TFT_Write_Char_E680
; ch end address is: 0 (R0)
;__Lib_TFT.c, 3369 :: 		
0x9446	0xE154    B	L_end__TFT_Write_Char_E
L___Lib_TFT__TFT_Write_Char_E680:
;__Lib_TFT.c, 3372 :: 		
; ch start address is: 0 (R0)
0x9448	0x49AC    LDR	R1, [PC, #688]
0x944A	0x8809    LDRH	R1, [R1, #0]
0x944C	0x1A41    SUB	R1, R0, R1
0x944E	0xB289    UXTH	R1, R1
; ch end address is: 0 (R0)
0x9450	0x008A    LSLS	R2, R1, #2
0x9452	0xB292    UXTH	R2, R2
;__Lib_TFT.c, 3373 :: 		
0x9454	0x49AB    LDR	R1, [PC, #684]
0x9456	0x6809    LDR	R1, [R1, #0]
0x9458	0x3108    ADDS	R1, #8
0x945A	0x1889    ADDS	R1, R1, R2
;__Lib_TFT.c, 3376 :: 		
0x945C	0x4608    MOV	R0, R1
0x945E	0x2104    MOVS	R1, #4
0x9460	0xF7FBFD0E  BL	__Lib_TFT__TFT_getHeader+0
;__Lib_TFT.c, 3377 :: 		
; ptr start address is: 0 (R0)
0x9464	0x48A8    LDR	R0, [PC, #672]
;__Lib_TFT.c, 3379 :: 		
0x9466	0x7803    LDRB	R3, [R0, #0]
0x9468	0xF88D3024  STRB	R3, [SP, #36]
;__Lib_TFT.c, 3381 :: 		
0x946C	0x1C41    ADDS	R1, R0, #1
0x946E	0x7809    LDRB	R1, [R1, #0]
0x9470	0xB2CA    UXTB	R2, R1
0x9472	0x1C81    ADDS	R1, R0, #2
0x9474	0x7809    LDRB	R1, [R1, #0]
0x9476	0x0209    LSLS	R1, R1, #8
0x9478	0x1852    ADDS	R2, R2, R1
0x947A	0x1CC1    ADDS	R1, R0, #3
; ptr end address is: 0 (R0)
0x947C	0x7809    LDRB	R1, [R1, #0]
0x947E	0x0409    LSLS	R1, R1, #16
0x9480	0x1852    ADDS	R2, R2, R1
;__Lib_TFT.c, 3383 :: 		
0x9482	0x49A0    LDR	R1, [PC, #640]
0x9484	0x6809    LDR	R1, [R1, #0]
0x9486	0x1889    ADDS	R1, R1, R2
0x9488	0x9104    STR	R1, [SP, #16]
;__Lib_TFT.c, 3385 :: 		
0x948A	0x08DA    LSRS	R2, R3, #3
0x948C	0xB2D2    UXTB	R2, R2
0x948E	0x499F    LDR	R1, [PC, #636]
0x9490	0x8809    LDRH	R1, [R1, #0]
0x9492	0x4351    MULS	R1, R2, R1
0x9494	0xB289    UXTH	R1, R1
0x9496	0x9106    STR	R1, [SP, #24]
;__Lib_TFT.c, 3386 :: 		
0x9498	0xF89D1024  LDRB	R1, [SP, #36]
0x949C	0xF0010107  AND	R1, R1, #7
0x94A0	0xB2C9    UXTB	R1, R1
0x94A2	0xB121    CBZ	R1, L___Lib_TFT__TFT_Write_Char_E681
;__Lib_TFT.c, 3387 :: 		
0x94A4	0x4999    LDR	R1, [PC, #612]
0x94A6	0x880A    LDRH	R2, [R1, #0]
0x94A8	0x9906    LDR	R1, [SP, #24]
0x94AA	0x1889    ADDS	R1, R1, R2
0x94AC	0x9106    STR	R1, [SP, #24]
L___Lib_TFT__TFT_Write_Char_E681:
;__Lib_TFT.c, 3388 :: 		
0x94AE	0x9906    LDR	R1, [SP, #24]
0x94B0	0x9108    STR	R1, [SP, #32]
;__Lib_TFT.c, 3389 :: 		
0x94B2	0xAC05    ADD	R4, SP, #20
0x94B4	0x4622    MOV	R2, R4
0x94B6	0x9906    LDR	R1, [SP, #24]
0x94B8	0x9804    LDR	R0, [SP, #16]
0x94BA	0x4C95    LDR	R4, [PC, #596]
0x94BC	0x6824    LDR	R4, [R4, #0]
0x94BE	0x47A0    BLX	R4
; ptr start address is: 16 (R4)
0x94C0	0x4604    MOV	R4, R0
;__Lib_TFT.c, 3390 :: 		
0x94C2	0x9A05    LDR	R2, [SP, #20]
0x94C4	0x9904    LDR	R1, [SP, #16]
0x94C6	0x1889    ADDS	R1, R1, R2
0x94C8	0x9104    STR	R1, [SP, #16]
;__Lib_TFT.c, 3391 :: 		
0x94CA	0x9A05    LDR	R2, [SP, #20]
0x94CC	0x9906    LDR	R1, [SP, #24]
0x94CE	0x1A89    SUB	R1, R1, R2
0x94D0	0x9106    STR	R1, [SP, #24]
;__Lib_TFT.c, 3393 :: 		
0x94D2	0x2100    MOVS	R1, #0
0x94D4	0x9107    STR	R1, [SP, #28]
;__Lib_TFT.c, 3394 :: 		
0x94D6	0x498F    LDR	R1, [PC, #572]
0x94D8	0x7809    LDRB	R1, [R1, #0]
0x94DA	0x2900    CMP	R1, #0
0x94DC	0xF0408085  BNE	L___Lib_TFT__TFT_Write_Char_E682
;__Lib_TFT.c, 3395 :: 		
0x94E0	0x498D    LDR	R1, [PC, #564]
0x94E2	0x8809    LDRH	R1, [R1, #0]
0x94E4	0xF8AD100A  STRH	R1, [SP, #10]
;__Lib_TFT.c, 3396 :: 		
0x94E8	0x2100    MOVS	R1, #0
0x94EA	0xF88D1009  STRB	R1, [SP, #9]
; ptr end address is: 16 (R4)
0x94EE	0x4620    MOV	R0, R4
L___Lib_TFT__TFT_Write_Char_E683:
; ptr start address is: 0 (R0)
0x94F0	0x4986    LDR	R1, [PC, #536]
0x94F2	0x880A    LDRH	R2, [R1, #0]
0x94F4	0xF89D1009  LDRB	R1, [SP, #9]
0x94F8	0x4291    CMP	R1, R2
0x94FA	0xF0808070  BCS	L___Lib_TFT__TFT_Write_Char_E684
;__Lib_TFT.c, 3397 :: 		
0x94FE	0x4987    LDR	R1, [PC, #540]
0x9500	0x8809    LDRH	R1, [R1, #0]
0x9502	0xF8AD1026  STRH	R1, [SP, #38]
;__Lib_TFT.c, 3398 :: 		
0x9506	0x2100    MOVS	R1, #0
0x9508	0xF88D100C  STRB	R1, [SP, #12]
;__Lib_TFT.c, 3399 :: 		
0x950C	0x2100    MOVS	R1, #0
0x950E	0xF88D1008  STRB	R1, [SP, #8]
; ptr end address is: 0 (R0)
0x9512	0x4604    MOV	R4, R0
L___Lib_TFT__TFT_Write_Char_E686:
; ptr start address is: 16 (R4)
0x9514	0xF89D2024  LDRB	R2, [SP, #36]
0x9518	0xF89D1008  LDRB	R1, [SP, #8]
0x951C	0x4291    CMP	R1, R2
0x951E	0xD252    BCS	L___Lib_TFT__TFT_Write_Char_E687
;__Lib_TFT.c, 3400 :: 		
0x9520	0xF89D100C  LDRB	R1, [SP, #12]
0x9524	0xBB59    CBNZ	R1, L___Lib_TFT__TFT_Write_Char_E959
;__Lib_TFT.c, 3401 :: 		
0x9526	0x9907    LDR	R1, [SP, #28]
0x9528	0x1C49    ADDS	R1, R1, #1
0x952A	0x9107    STR	R1, [SP, #28]
;__Lib_TFT.c, 3402 :: 		
0x952C	0x9A08    LDR	R2, [SP, #32]
0x952E	0x9905    LDR	R1, [SP, #20]
0x9530	0x4291    CMP	R1, R2
0x9532	0xD21B    BCS	L___Lib_TFT__TFT_Write_Char_E958
;__Lib_TFT.c, 3403 :: 		
0x9534	0x9A05    LDR	R2, [SP, #20]
0x9536	0x9907    LDR	R1, [SP, #28]
0x9538	0x4291    CMP	R1, R2
0x953A	0xD915    BLS	L___Lib_TFT__TFT_Write_Char_E957
; ptr end address is: 16 (R4)
;__Lib_TFT.c, 3404 :: 		
0x953C	0x2101    MOVS	R1, #1
0x953E	0x9107    STR	R1, [SP, #28]
;__Lib_TFT.c, 3405 :: 		
0x9540	0xAC05    ADD	R4, SP, #20
0x9542	0x4622    MOV	R2, R4
0x9544	0x9906    LDR	R1, [SP, #24]
0x9546	0x9804    LDR	R0, [SP, #16]
0x9548	0x4C71    LDR	R4, [PC, #452]
0x954A	0x6824    LDR	R4, [R4, #0]
0x954C	0x47A0    BLX	R4
; ptr start address is: 16 (R4)
0x954E	0x4604    MOV	R4, R0
;__Lib_TFT.c, 3406 :: 		
0x9550	0x9906    LDR	R1, [SP, #24]
0x9552	0x9108    STR	R1, [SP, #32]
;__Lib_TFT.c, 3407 :: 		
0x9554	0x9A05    LDR	R2, [SP, #20]
0x9556	0x9904    LDR	R1, [SP, #16]
0x9558	0x1889    ADDS	R1, R1, R2
0x955A	0x9104    STR	R1, [SP, #16]
;__Lib_TFT.c, 3408 :: 		
0x955C	0x9A05    LDR	R2, [SP, #20]
0x955E	0x9906    LDR	R1, [SP, #24]
0x9560	0x1A89    SUB	R1, R1, R2
0x9562	0x9106    STR	R1, [SP, #24]
; ptr end address is: 16 (R4)
0x9564	0x4620    MOV	R0, R4
;__Lib_TFT.c, 3409 :: 		
0x9566	0xE000    B	L___Lib_TFT__TFT_Write_Char_E691
L___Lib_TFT__TFT_Write_Char_E957:
;__Lib_TFT.c, 3403 :: 		
0x9568	0x4620    MOV	R0, R4
;__Lib_TFT.c, 3409 :: 		
L___Lib_TFT__TFT_Write_Char_E691:
;__Lib_TFT.c, 3410 :: 		
; ptr start address is: 0 (R0)
; ptr end address is: 0 (R0)
0x956A	0xE000    B	L___Lib_TFT__TFT_Write_Char_E690
L___Lib_TFT__TFT_Write_Char_E958:
;__Lib_TFT.c, 3402 :: 		
0x956C	0x4620    MOV	R0, R4
;__Lib_TFT.c, 3410 :: 		
L___Lib_TFT__TFT_Write_Char_E690:
;__Lib_TFT.c, 3411 :: 		
; ptr start address is: 0 (R0)
0x956E	0x7801    LDRB	R1, [R0, #0]
0x9570	0xF88D1028  STRB	R1, [SP, #40]
0x9574	0x1C40    ADDS	R0, R0, #1
;__Lib_TFT.c, 3412 :: 		
0x9576	0x2101    MOVS	R1, #1
0x9578	0xF88D100C  STRB	R1, [SP, #12]
; ptr end address is: 0 (R0)
;__Lib_TFT.c, 3413 :: 		
0x957C	0xE000    B	L___Lib_TFT__TFT_Write_Char_E689
L___Lib_TFT__TFT_Write_Char_E959:
;__Lib_TFT.c, 3400 :: 		
0x957E	0x4620    MOV	R0, R4
;__Lib_TFT.c, 3413 :: 		
L___Lib_TFT__TFT_Write_Char_E689:
;__Lib_TFT.c, 3415 :: 		
; ptr start address is: 0 (R0)
0x9580	0xF89D200C  LDRB	R2, [SP, #12]
0x9584	0xF89D1028  LDRB	R1, [SP, #40]
0x9588	0x4011    ANDS	R1, R2
0x958A	0xB2C9    UXTB	R1, R1
0x958C	0xB151    CBZ	R1, L___Lib_TFT__TFT_Write_Char_E692
;__Lib_TFT.c, 3416 :: 		
0x958E	0x4964    LDR	R1, [PC, #400]
0x9590	0x8809    LDRH	R1, [R1, #0]
0x9592	0x9001    STR	R0, [SP, #4]
0x9594	0xB28A    UXTH	R2, R1
0x9596	0xF8BD100A  LDRH	R1, [SP, #10]
0x959A	0xF8BD0026  LDRH	R0, [SP, #38]
0x959E	0xF7FBFA13  BL	_TFT_Dot+0
0x95A2	0x9801    LDR	R0, [SP, #4]
;__Lib_TFT.c, 3417 :: 		
L___Lib_TFT__TFT_Write_Char_E692:
;__Lib_TFT.c, 3419 :: 		
0x95A4	0xF8BD1026  LDRH	R1, [SP, #38]
0x95A8	0x1C49    ADDS	R1, R1, #1
0x95AA	0xF8AD1026  STRH	R1, [SP, #38]
;__Lib_TFT.c, 3420 :: 		
0x95AE	0xF89D100C  LDRB	R1, [SP, #12]
0x95B2	0x0049    LSLS	R1, R1, #1
0x95B4	0xF88D100C  STRB	R1, [SP, #12]
;__Lib_TFT.c, 3399 :: 		
0x95B8	0xF89D1008  LDRB	R1, [SP, #8]
0x95BC	0x1C49    ADDS	R1, R1, #1
0x95BE	0xF88D1008  STRB	R1, [SP, #8]
;__Lib_TFT.c, 3421 :: 		
0x95C2	0x4604    MOV	R4, R0
; ptr end address is: 0 (R0)
0x95C4	0xE7A6    B	L___Lib_TFT__TFT_Write_Char_E686
L___Lib_TFT__TFT_Write_Char_E687:
;__Lib_TFT.c, 3422 :: 		
; ptr start address is: 16 (R4)
0x95C6	0xF8BD100A  LDRH	R1, [SP, #10]
0x95CA	0x1C49    ADDS	R1, R1, #1
0x95CC	0xF8AD100A  STRH	R1, [SP, #10]
;__Lib_TFT.c, 3396 :: 		
0x95D0	0xF89D1009  LDRB	R1, [SP, #9]
0x95D4	0x1C49    ADDS	R1, R1, #1
0x95D6	0xF88D1009  STRB	R1, [SP, #9]
;__Lib_TFT.c, 3423 :: 		
0x95DA	0x4620    MOV	R0, R4
; ptr end address is: 16 (R4)
0x95DC	0xE788    B	L___Lib_TFT__TFT_Write_Char_E683
L___Lib_TFT__TFT_Write_Char_E684:
;__Lib_TFT.c, 3425 :: 		
0x95DE	0xF8BD1026  LDRH	R1, [SP, #38]
0x95E2	0x1C4A    ADDS	R2, R1, #1
0x95E4	0x494D    LDR	R1, [PC, #308]
0x95E6	0x800A    STRH	R2, [R1, #0]
;__Lib_TFT.c, 3426 :: 		
0x95E8	0xE083    B	L___Lib_TFT__TFT_Write_Char_E693
L___Lib_TFT__TFT_Write_Char_E682:
;__Lib_TFT.c, 3427 :: 		
; ptr start address is: 16 (R4)
0x95EA	0x494C    LDR	R1, [PC, #304]
0x95EC	0x8809    LDRH	R1, [R1, #0]
0x95EE	0xF8AD100A  STRH	R1, [SP, #10]
;__Lib_TFT.c, 3428 :: 		
0x95F2	0x2100    MOVS	R1, #0
0x95F4	0xF88D1009  STRB	R1, [SP, #9]
; ptr end address is: 16 (R4)
0x95F8	0x4620    MOV	R0, R4
L___Lib_TFT__TFT_Write_Char_E694:
; ptr start address is: 0 (R0)
0x95FA	0x4944    LDR	R1, [PC, #272]
0x95FC	0x880A    LDRH	R2, [R1, #0]
0x95FE	0xF89D1009  LDRB	R1, [SP, #9]
0x9602	0x4291    CMP	R1, R2
0x9604	0xF0808070  BCS	L___Lib_TFT__TFT_Write_Char_E695
;__Lib_TFT.c, 3429 :: 		
0x9608	0x4943    LDR	R1, [PC, #268]
0x960A	0x8809    LDRH	R1, [R1, #0]
0x960C	0xF8AD1026  STRH	R1, [SP, #38]
;__Lib_TFT.c, 3430 :: 		
0x9610	0x2100    MOVS	R1, #0
0x9612	0xF88D100C  STRB	R1, [SP, #12]
;__Lib_TFT.c, 3431 :: 		
0x9616	0x2100    MOVS	R1, #0
0x9618	0xF88D1008  STRB	R1, [SP, #8]
; ptr end address is: 0 (R0)
0x961C	0x4604    MOV	R4, R0
L___Lib_TFT__TFT_Write_Char_E697:
; ptr start address is: 16 (R4)
0x961E	0xF89D2024  LDRB	R2, [SP, #36]
0x9622	0xF89D1008  LDRB	R1, [SP, #8]
0x9626	0x4291    CMP	R1, R2
0x9628	0xD252    BCS	L___Lib_TFT__TFT_Write_Char_E698
;__Lib_TFT.c, 3432 :: 		
0x962A	0xF89D100C  LDRB	R1, [SP, #12]
0x962E	0xBB59    CBNZ	R1, L___Lib_TFT__TFT_Write_Char_E962
;__Lib_TFT.c, 3433 :: 		
0x9630	0x9907    LDR	R1, [SP, #28]
0x9632	0x1C49    ADDS	R1, R1, #1
0x9634	0x9107    STR	R1, [SP, #28]
;__Lib_TFT.c, 3434 :: 		
0x9636	0x9A08    LDR	R2, [SP, #32]
0x9638	0x9905    LDR	R1, [SP, #20]
0x963A	0x4291    CMP	R1, R2
0x963C	0xD21B    BCS	L___Lib_TFT__TFT_Write_Char_E961
;__Lib_TFT.c, 3435 :: 		
0x963E	0x9A05    LDR	R2, [SP, #20]
0x9640	0x9907    LDR	R1, [SP, #28]
0x9642	0x4291    CMP	R1, R2
0x9644	0xD915    BLS	L___Lib_TFT__TFT_Write_Char_E960
; ptr end address is: 16 (R4)
;__Lib_TFT.c, 3436 :: 		
0x9646	0x2101    MOVS	R1, #1
0x9648	0x9107    STR	R1, [SP, #28]
;__Lib_TFT.c, 3437 :: 		
0x964A	0xAC05    ADD	R4, SP, #20
0x964C	0x4622    MOV	R2, R4
0x964E	0x9906    LDR	R1, [SP, #24]
0x9650	0x9804    LDR	R0, [SP, #16]
0x9652	0x4C2F    LDR	R4, [PC, #188]
0x9654	0x6824    LDR	R4, [R4, #0]
0x9656	0x47A0    BLX	R4
; ptr start address is: 16 (R4)
0x9658	0x4604    MOV	R4, R0
;__Lib_TFT.c, 3438 :: 		
0x965A	0x9906    LDR	R1, [SP, #24]
0x965C	0x9108    STR	R1, [SP, #32]
;__Lib_TFT.c, 3439 :: 		
0x965E	0x9A05    LDR	R2, [SP, #20]
0x9660	0x9904    LDR	R1, [SP, #16]
0x9662	0x1889    ADDS	R1, R1, R2
0x9664	0x9104    STR	R1, [SP, #16]
;__Lib_TFT.c, 3440 :: 		
0x9666	0x9A05    LDR	R2, [SP, #20]
0x9668	0x9906    LDR	R1, [SP, #24]
0x966A	0x1A89    SUB	R1, R1, R2
0x966C	0x9106    STR	R1, [SP, #24]
; ptr end address is: 16 (R4)
0x966E	0x4620    MOV	R0, R4
;__Lib_TFT.c, 3441 :: 		
0x9670	0xE000    B	L___Lib_TFT__TFT_Write_Char_E702
L___Lib_TFT__TFT_Write_Char_E960:
;__Lib_TFT.c, 3435 :: 		
0x9672	0x4620    MOV	R0, R4
;__Lib_TFT.c, 3441 :: 		
L___Lib_TFT__TFT_Write_Char_E702:
;__Lib_TFT.c, 3442 :: 		
; ptr start address is: 0 (R0)
; ptr end address is: 0 (R0)
0x9674	0xE000    B	L___Lib_TFT__TFT_Write_Char_E701
L___Lib_TFT__TFT_Write_Char_E961:
;__Lib_TFT.c, 3434 :: 		
0x9676	0x4620    MOV	R0, R4
;__Lib_TFT.c, 3442 :: 		
L___Lib_TFT__TFT_Write_Char_E701:
;__Lib_TFT.c, 3443 :: 		
; ptr start address is: 0 (R0)
0x9678	0x7801    LDRB	R1, [R0, #0]
0x967A	0xF88D1028  STRB	R1, [SP, #40]
0x967E	0x1C40    ADDS	R0, R0, #1
;__Lib_TFT.c, 3444 :: 		
0x9680	0x2101    MOVS	R1, #1
0x9682	0xF88D100C  STRB	R1, [SP, #12]
; ptr end address is: 0 (R0)
;__Lib_TFT.c, 3445 :: 		
0x9686	0xE000    B	L___Lib_TFT__TFT_Write_Char_E700
L___Lib_TFT__TFT_Write_Char_E962:
;__Lib_TFT.c, 3432 :: 		
0x9688	0x4620    MOV	R0, R4
;__Lib_TFT.c, 3445 :: 		
L___Lib_TFT__TFT_Write_Char_E700:
;__Lib_TFT.c, 3447 :: 		
; ptr start address is: 0 (R0)
0x968A	0xF89D200C  LDRB	R2, [SP, #12]
0x968E	0xF89D1028  LDRB	R1, [SP, #40]
0x9692	0x4011    ANDS	R1, R2
0x9694	0xB2C9    UXTB	R1, R1
0x9696	0xB151    CBZ	R1, L___Lib_TFT__TFT_Write_Char_E703
;__Lib_TFT.c, 3448 :: 		
0x9698	0x4921    LDR	R1, [PC, #132]
0x969A	0x8809    LDRH	R1, [R1, #0]
0x969C	0x9001    STR	R0, [SP, #4]
0x969E	0xB28A    UXTH	R2, R1
0x96A0	0xF8BD1026  LDRH	R1, [SP, #38]
0x96A4	0xF8BD000A  LDRH	R0, [SP, #10]
0x96A8	0xF7FBF98E  BL	_TFT_Dot+0
0x96AC	0x9801    LDR	R0, [SP, #4]
;__Lib_TFT.c, 3449 :: 		
L___Lib_TFT__TFT_Write_Char_E703:
;__Lib_TFT.c, 3451 :: 		
0x96AE	0xF8BD1026  LDRH	R1, [SP, #38]
0x96B2	0x1E49    SUBS	R1, R1, #1
0x96B4	0xF8AD1026  STRH	R1, [SP, #38]
;__Lib_TFT.c, 3452 :: 		
0x96B8	0xF89D100C  LDRB	R1, [SP, #12]
0x96BC	0x0049    LSLS	R1, R1, #1
0x96BE	0xF88D100C  STRB	R1, [SP, #12]
;__Lib_TFT.c, 3431 :: 		
0x96C2	0xF89D1008  LDRB	R1, [SP, #8]
0x96C6	0x1C49    ADDS	R1, R1, #1
0x96C8	0xF88D1008  STRB	R1, [SP, #8]
;__Lib_TFT.c, 3453 :: 		
0x96CC	0x4604    MOV	R4, R0
; ptr end address is: 0 (R0)
0x96CE	0xE7A6    B	L___Lib_TFT__TFT_Write_Char_E697
L___Lib_TFT__TFT_Write_Char_E698:
;__Lib_TFT.c, 3455 :: 		
; ptr start address is: 16 (R4)
0x96D0	0xF8BD100A  LDRH	R1, [SP, #10]
0x96D4	0x1C49    ADDS	R1, R1, #1
0x96D6	0xF8AD100A  STRH	R1, [SP, #10]
;__Lib_TFT.c, 3428 :: 		
0x96DA	0xF89D1009  LDRB	R1, [SP, #9]
0x96DE	0x1C49    ADDS	R1, R1, #1
0x96E0	0xF88D1009  STRB	R1, [SP, #9]
;__Lib_TFT.c, 3456 :: 		
0x96E4	0x4620    MOV	R0, R4
; ptr end address is: 16 (R4)
0x96E6	0xE788    B	L___Lib_TFT__TFT_Write_Char_E694
L___Lib_TFT__TFT_Write_Char_E695:
;__Lib_TFT.c, 3459 :: 		
0x96E8	0xF8BD1026  LDRH	R1, [SP, #38]
0x96EC	0x1E4A    SUBS	R2, R1, #1
0x96EE	0x490A    LDR	R1, [PC, #40]
0x96F0	0x800A    STRH	R2, [R1, #0]
;__Lib_TFT.c, 3460 :: 		
L___Lib_TFT__TFT_Write_Char_E693:
;__Lib_TFT.c, 3461 :: 		
L_end__TFT_Write_Char_E:
0x96F2	0xF8DDE000  LDR	LR, [SP, #0]
0x96F6	0xB00B    ADD	SP, SP, #44
0x96F8	0x4770    BX	LR
0x96FA	0xBF00    NOP
0x96FC	0x2E122000  	__Lib_TFT__fontFirstChar+0
0x9700	0x2E182000  	__Lib_TFT__fontLastChar+0
0x9704	0x2E202000  	__Lib_TFT_activeExtFont+0
0x9708	0x2DE82000  	__Lib_TFT_headerBuffer+0
0x970C	0x2E1A2000  	__Lib_TFT__fontHeight+0
0x9710	0x2DF42000  	_TFT_Get_Ext_Data_Ptr+0
0x9714	0x2E112000  	__Lib_TFT_FontOrientation+0
0x9718	0x2DFC2000  	__Lib_TFT_y_cord+0
0x971C	0x2DF22000  	__Lib_TFT_x_cord+0
0x9720	0x2E1C2000  	__Lib_TFT_FontColor+0
; end of __Lib_TFT__TFT_Write_Char_E
__Lib_TFT__TFT_getHeader:
;__Lib_TFT.c, 3318 :: 		
; count start address is: 4 (R1)
; offset start address is: 0 (R0)
0x4E80	0xB085    SUB	SP, SP, #20
0x4E82	0xF8CDE000  STR	LR, [SP, #0]
; count end address is: 4 (R1)
; offset end address is: 0 (R0)
; offset start address is: 0 (R0)
; count start address is: 4 (R1)
;__Lib_TFT.c, 3322 :: 		
; ptrH start address is: 20 (R5)
0x4E86	0x4D15    LDR	R5, [PC, #84]
; offset end address is: 0 (R0)
; ptrH end address is: 20 (R5)
; count end address is: 4 (R1)
0x4E88	0x4603    MOV	R3, R0
;__Lib_TFT.c, 3323 :: 		
L___Lib_TFT__TFT_getHeader674:
; ptrH start address is: 20 (R5)
; count start address is: 4 (R1)
; offset start address is: 12 (R3)
0x4E8A	0x2900    CMP	R1, #0
0x4E8C	0xD922    BLS	L___Lib_TFT__TFT_getHeader675
;__Lib_TFT.c, 3324 :: 		
0x4E8E	0xAC04    ADD	R4, SP, #16
0x4E90	0x9301    STR	R3, [SP, #4]
0x4E92	0xF8AD1008  STRH	R1, [SP, #8]
0x4E96	0x9503    STR	R5, [SP, #12]
0x4E98	0x4622    MOV	R2, R4
0x4E9A	0x4618    MOV	R0, R3
0x4E9C	0x4C10    LDR	R4, [PC, #64]
0x4E9E	0x6824    LDR	R4, [R4, #0]
0x4EA0	0x47A0    BLX	R4
0x4EA2	0x9D03    LDR	R5, [SP, #12]
0x4EA4	0xF8BD1008  LDRH	R1, [SP, #8]
0x4EA8	0x9B01    LDR	R3, [SP, #4]
; ptr start address is: 16 (R4)
0x4EAA	0x4604    MOV	R4, R0
;__Lib_TFT.c, 3325 :: 		
; i start address is: 0 (R0)
0x4EAC	0x2000    MOVS	R0, #0
; ptrH end address is: 20 (R5)
; ptr end address is: 16 (R4)
; i end address is: 0 (R0)
; count end address is: 4 (R1)
; offset end address is: 12 (R3)
L___Lib_TFT__TFT_getHeader676:
; i start address is: 0 (R0)
; ptr start address is: 16 (R4)
; offset start address is: 12 (R3)
; count start address is: 4 (R1)
; ptrH start address is: 20 (R5)
0x4EAE	0xF8BD2010  LDRH	R2, [SP, #16]
0x4EB2	0x4290    CMP	R0, R2
0x4EB4	0xD206    BCS	L___Lib_TFT__TFT_getHeader677
;__Lib_TFT.c, 3326 :: 		
0x4EB6	0x7822    LDRB	R2, [R4, #0]
0x4EB8	0x702A    STRB	R2, [R5, #0]
;__Lib_TFT.c, 3327 :: 		
0x4EBA	0x1C6D    ADDS	R5, R5, #1
;__Lib_TFT.c, 3328 :: 		
0x4EBC	0x1C64    ADDS	R4, R4, #1
;__Lib_TFT.c, 3325 :: 		
0x4EBE	0x1C40    ADDS	R0, R0, #1
0x4EC0	0xB280    UXTH	R0, R0
;__Lib_TFT.c, 3329 :: 		
; ptr end address is: 16 (R4)
; i end address is: 0 (R0)
0x4EC2	0xE7F4    B	L___Lib_TFT__TFT_getHeader676
L___Lib_TFT__TFT_getHeader677:
;__Lib_TFT.c, 3330 :: 		
0x4EC4	0xF8BD2010  LDRH	R2, [SP, #16]
0x4EC8	0x1A89    SUB	R1, R1, R2
0x4ECA	0xB289    UXTH	R1, R1
;__Lib_TFT.c, 3331 :: 		
0x4ECC	0xF8BD2010  LDRH	R2, [SP, #16]
0x4ED0	0x189B    ADDS	R3, R3, R2
;__Lib_TFT.c, 3332 :: 		
; ptrH end address is: 20 (R5)
; count end address is: 4 (R1)
; offset end address is: 12 (R3)
0x4ED2	0xE7DA    B	L___Lib_TFT__TFT_getHeader674
L___Lib_TFT__TFT_getHeader675:
;__Lib_TFT.c, 3334 :: 		
L_end__TFT_getHeader:
0x4ED4	0xF8DDE000  LDR	LR, [SP, #0]
0x4ED8	0xB005    ADD	SP, SP, #20
0x4EDA	0x4770    BX	LR
0x4EDC	0x2DE82000  	__Lib_TFT_headerBuffer+0
0x4EE0	0x2DF42000  	_TFT_Get_Ext_Data_Ptr+0
; end of __Lib_TFT__TFT_getHeader
_TFT_Get_Data:
;Ducati_logger_driver.c, 99 :: 		char* TFT_Get_Data(unsigned long offset, unsigned long count, unsigned long *num) {
; offset start address is: 0 (R0)
0x253C	0xB085    SUB	SP, SP, #20
0x253E	0xF8CDE000  STR	LR, [SP, #0]
0x2542	0x9204    STR	R2, [SP, #16]
0x2544	0x4602    MOV	R2, R0
0x2546	0x9103    STR	R1, [SP, #12]
; offset end address is: 0 (R0)
; offset start address is: 8 (R2)
;Ducati_logger_driver.c, 103 :: 		start_sector = Mmc_Get_File_Write_Sector() + offset/512;
0x2548	0xF7FEFA88  BL	_Mmc_Get_File_Write_Sector+0
0x254C	0x0A53    LSRS	R3, R2, #9
0x254E	0x18C4    ADDS	R4, R0, R3
0x2550	0x9401    STR	R4, [SP, #4]
;Ducati_logger_driver.c, 104 :: 		fpos = (unsigned long)offset%512;
0x2552	0xF24013FF  MOVW	R3, #511
0x2556	0xEA020303  AND	R3, R2, R3, LSL #0
; offset end address is: 8 (R2)
0x255A	0xF8AD3008  STRH	R3, [SP, #8]
;Ducati_logger_driver.c, 106 :: 		if(start_sector == currentSector+1) {
0x255E	0x4B1E    LDR	R3, [PC, #120]
0x2560	0x681B    LDR	R3, [R3, #0]
0x2562	0x1C5B    ADDS	R3, R3, #1
0x2564	0x429C    CMP	R4, R3
0x2566	0xD106    BNE	L_TFT_Get_Data0
;Ducati_logger_driver.c, 107 :: 		Mmc_Multi_Read_Sector(Ext_Data_Buffer);
0x2568	0x481C    LDR	R0, [PC, #112]
0x256A	0xF000FC4D  BL	_Mmc_Multi_Read_Sector+0
;Ducati_logger_driver.c, 108 :: 		currentSector = start_sector;
0x256E	0x9C01    LDR	R4, [SP, #4]
0x2570	0x4B19    LDR	R3, [PC, #100]
0x2572	0x601C    STR	R4, [R3, #0]
;Ducati_logger_driver.c, 109 :: 		} else if (start_sector != currentSector) {
0x2574	0xE014    B	L_TFT_Get_Data1
L_TFT_Get_Data0:
0x2576	0x4B18    LDR	R3, [PC, #96]
0x2578	0x681C    LDR	R4, [R3, #0]
0x257A	0x9B01    LDR	R3, [SP, #4]
0x257C	0x42A3    CMP	R3, R4
0x257E	0xD00F    BEQ	L_TFT_Get_Data2
;Ducati_logger_driver.c, 110 :: 		if(currentSector != -1)
0x2580	0x4B15    LDR	R3, [PC, #84]
0x2582	0x681B    LDR	R3, [R3, #0]
0x2584	0xF1B33FFF  CMP	R3, #-1
0x2588	0xD001    BEQ	L_TFT_Get_Data3
;Ducati_logger_driver.c, 111 :: 		Mmc_Multi_Read_Stop();
0x258A	0xF000FC25  BL	_Mmc_Multi_Read_Stop+0
L_TFT_Get_Data3:
;Ducati_logger_driver.c, 112 :: 		Mmc_Multi_Read_Start(start_sector);
0x258E	0x9801    LDR	R0, [SP, #4]
0x2590	0xF000FC2E  BL	_Mmc_Multi_Read_Start+0
;Ducati_logger_driver.c, 113 :: 		Mmc_Multi_Read_Sector(Ext_Data_Buffer);
0x2594	0x4811    LDR	R0, [PC, #68]
0x2596	0xF000FC37  BL	_Mmc_Multi_Read_Sector+0
;Ducati_logger_driver.c, 114 :: 		currentSector = start_sector;
0x259A	0x9C01    LDR	R4, [SP, #4]
0x259C	0x4B0E    LDR	R3, [PC, #56]
0x259E	0x601C    STR	R4, [R3, #0]
;Ducati_logger_driver.c, 115 :: 		}
L_TFT_Get_Data2:
L_TFT_Get_Data1:
;Ducati_logger_driver.c, 117 :: 		if(count>512-fpos)
0x25A0	0xF8BD3008  LDRH	R3, [SP, #8]
0x25A4	0xF5C37400  RSB	R4, R3, #512
0x25A8	0xB2A4    UXTH	R4, R4
0x25AA	0x9B03    LDR	R3, [SP, #12]
0x25AC	0x42A3    CMP	R3, R4
0x25AE	0xD907    BLS	L_TFT_Get_Data4
;Ducati_logger_driver.c, 118 :: 		*num = 512-fpos;
0x25B0	0xF8BD3008  LDRH	R3, [SP, #8]
0x25B4	0xF5C37400  RSB	R4, R3, #512
0x25B8	0xB2A4    UXTH	R4, R4
0x25BA	0x9B04    LDR	R3, [SP, #16]
0x25BC	0x601C    STR	R4, [R3, #0]
0x25BE	0xE002    B	L_TFT_Get_Data5
L_TFT_Get_Data4:
;Ducati_logger_driver.c, 120 :: 		*num = count;
0x25C0	0x9C03    LDR	R4, [SP, #12]
0x25C2	0x9B04    LDR	R3, [SP, #16]
0x25C4	0x601C    STR	R4, [R3, #0]
L_TFT_Get_Data5:
;Ducati_logger_driver.c, 122 :: 		return Ext_Data_Buffer+fpos;
0x25C6	0xF8BD4008  LDRH	R4, [SP, #8]
0x25CA	0x4B04    LDR	R3, [PC, #16]
0x25CC	0x191B    ADDS	R3, R3, R4
0x25CE	0x4618    MOV	R0, R3
;Ducati_logger_driver.c, 123 :: 		}
L_end_TFT_Get_Data:
0x25D0	0xF8DDE000  LDR	LR, [SP, #0]
0x25D4	0xB005    ADD	SP, SP, #20
0x25D6	0x4770    BX	LR
0x25D8	0x00102000  	_currentSector+0
0x25DC	0x20242000  	_Ext_Data_Buffer+0
; end of _TFT_Get_Data
_Mmc_Get_File_Write_Sector:
;__Lib_MmcFat16.c, 2080 :: 		
0x0A5C	0xB081    SUB	SP, SP, #4
;__Lib_MmcFat16.c, 2082 :: 		
0x0A5E	0x480A    LDR	R0, [PC, #40]
0x0A60	0x8800    LDRH	R0, [R0, #0]
0x0A62	0xB928    CBNZ	R0, L_Mmc_Get_File_Write_Sector319
;__Lib_MmcFat16.c, 2084 :: 		
0x0A64	0x2107    MOVS	R1, #7
0x0A66	0x4809    LDR	R0, [PC, #36]
0x0A68	0x7001    STRB	R1, [R0, #0]
;__Lib_MmcFat16.c, 2085 :: 		
0x0A6A	0xF04F30FF  MOV	R0, #-1
0x0A6E	0xE008    B	L_end_Mmc_Get_File_Write_Sector
;__Lib_MmcFat16.c, 2086 :: 		
L_Mmc_Get_File_Write_Sector319:
;__Lib_MmcFat16.c, 2088 :: 		
0x0A70	0x4807    LDR	R0, [PC, #28]
0x0A72	0x8800    LDRH	R0, [R0, #0]
0x0A74	0x1E81    SUBS	R1, R0, #2
0x0A76	0x4807    LDR	R0, [PC, #28]
0x0A78	0x8800    LDRH	R0, [R0, #0]
0x0A7A	0x4341    MULS	R1, R0, R1
0x0A7C	0x4806    LDR	R0, [PC, #24]
0x0A7E	0x6800    LDR	R0, [R0, #0]
0x0A80	0x1840    ADDS	R0, R0, R1
;__Lib_MmcFat16.c, 2089 :: 		
L_end_Mmc_Get_File_Write_Sector:
0x0A82	0xB001    ADD	SP, SP, #4
0x0A84	0x4770    BX	LR
0x0A86	0xBF00    NOP
0x0A88	0x2ABC2000  	__Lib_MmcFat16_f16_cFD+28
0x0A8C	0x2A912000  	___f16_errno+0
0x0A90	0x2AA62000  	__Lib_MmcFat16_f16_cFD+6
0x0A94	0x2AC22000  	__Lib_MmcFat16_f16_boot+2
0x0A98	0x2AD42000  	__Lib_MmcFat16_f16_boot+20
; end of _Mmc_Get_File_Write_Sector
_MyTFT_Get_Data:
;Init_routines.c, 99 :: 		char* MyTFT_Get_Data(unsigned long offset, unsigned long count, unsigned long *num) {
; offset start address is: 0 (R0)
0x26B0	0xB084    SUB	SP, SP, #16
0x26B2	0xF8CDE000  STR	LR, [SP, #0]
0x26B6	0x9102    STR	R1, [SP, #8]
0x26B8	0x9203    STR	R2, [SP, #12]
; offset end address is: 0 (R0)
; offset start address is: 0 (R0)
;Init_routines.c, 103 :: 		FAT32_Seek(Ext_fhandle, offset);
0x26BA	0x4B17    LDR	R3, [PC, #92]
0x26BC	0xF9933000  LDRSB	R3, [R3, #0]
0x26C0	0x9001    STR	R0, [SP, #4]
0x26C2	0x4601    MOV	R1, R0
0x26C4	0xB258    SXTB	R0, R3
0x26C6	0xF7FEFA59  BL	_FAT32_Seek+0
0x26CA	0x9801    LDR	R0, [SP, #4]
;Init_routines.c, 104 :: 		pos = (unsigned long)offset%512;
0x26CC	0xF24013FF  MOVW	R3, #511
0x26D0	0xEA000303  AND	R3, R0, R3, LSL #0
; offset end address is: 0 (R0)
; pos start address is: 0 (R0)
0x26D4	0xB298    UXTH	R0, R3
;Init_routines.c, 105 :: 		FAT32_Read(Ext_fhandle, My_Ext_Data_Buffer, 512);
0x26D6	0x4B10    LDR	R3, [PC, #64]
0x26D8	0xF9933000  LDRSB	R3, [R3, #0]
0x26DC	0xF8AD0004  STRH	R0, [SP, #4]
0x26E0	0xF2402200  MOVW	R2, #512
0x26E4	0x490D    LDR	R1, [PC, #52]
0x26E6	0xB258    SXTB	R0, R3
0x26E8	0xF7FEFE16  BL	_FAT32_Read+0
0x26EC	0xF8BD0004  LDRH	R0, [SP, #4]
;Init_routines.c, 107 :: 		if(count>512-pos)
0x26F0	0xF5C07400  RSB	R4, R0, #512
0x26F4	0xB2A4    UXTH	R4, R4
0x26F6	0x9B02    LDR	R3, [SP, #8]
0x26F8	0x42A3    CMP	R3, R4
0x26FA	0xD905    BLS	L_MyTFT_Get_Data0
;Init_routines.c, 108 :: 		*num = 512-pos;
0x26FC	0xF5C07400  RSB	R4, R0, #512
0x2700	0xB2A4    UXTH	R4, R4
; pos end address is: 0 (R0)
0x2702	0x9B03    LDR	R3, [SP, #12]
0x2704	0x601C    STR	R4, [R3, #0]
0x2706	0xE002    B	L_MyTFT_Get_Data1
L_MyTFT_Get_Data0:
;Init_routines.c, 110 :: 		*num = count;
0x2708	0x9C02    LDR	R4, [SP, #8]
0x270A	0x9B03    LDR	R3, [SP, #12]
0x270C	0x601C    STR	R4, [R3, #0]
L_MyTFT_Get_Data1:
;Init_routines.c, 112 :: 		return My_Ext_Data_Buffer;
0x270E	0x4803    LDR	R0, [PC, #12]
;Init_routines.c, 113 :: 		}
L_end_MyTFT_Get_Data:
0x2710	0xF8DDE000  LDR	LR, [SP, #0]
0x2714	0xB004    ADD	SP, SP, #16
0x2716	0x4770    BX	LR
0x2718	0x24DC2000  	_Ext_fhandle+0
0x271C	0x24DD2000  	_My_Ext_Data_Buffer+0
; end of _MyTFT_Get_Data
_FAT32_Seek:
;__Lib_FAT32_STM32.c, 3319 :: 		
; pos start address is: 4 (R1)
0x0B7C	0xB084    SUB	SP, SP, #16
0x0B7E	0xF8CDE000  STR	LR, [SP, #0]
0x0B82	0xB244    SXTB	R4, R0
; pos end address is: 4 (R1)
; fHandle start address is: 16 (R4)
; pos start address is: 4 (R1)
;__Lib_FAT32_STM32.c, 3324 :: 		
0x0B84	0x221C    MOVS	R2, #28
0x0B86	0xFB02F304  MUL	R3, R2, R4
0x0B8A	0x4A3B    LDR	R2, [PC, #236]
0x0B8C	0x18D2    ADDS	R2, R2, R3
0x0B8E	0x4610    MOV	R0, R2
;__Lib_FAT32_STM32.c, 3326 :: 		
0x0B90	0x2C00    CMP	R4, #0
0x0B92	0xDB02    BLT	L__FAT32_Seek774
0x0B94	0x2C04    CMP	R4, _FAT32_MAX_FILES
0x0B96	0xDA00    BGE	L__FAT32_Seek773
; fHandle end address is: 16 (R4)
0x0B98	0xE006    B	L_FAT32_Seek530
; pos end address is: 4 (R1)
L__FAT32_Seek774:
L__FAT32_Seek773:
;__Lib_FAT32_STM32.c, 3328 :: 		
0x0B9A	0x23D8    MOVS	R3, #-40
0x0B9C	0xB25B    SXTB	R3, R3
0x0B9E	0x4A37    LDR	R2, [PC, #220]
0x0BA0	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 3329 :: 		
0x0BA2	0x20FF    MOVS	R0, #-1
0x0BA4	0xB240    SXTB	R0, R0
0x0BA6	0xE063    B	L_end_FAT32_Seek
;__Lib_FAT32_STM32.c, 3330 :: 		
L_FAT32_Seek530:
;__Lib_FAT32_STM32.c, 3335 :: 		
; pos start address is: 4 (R1)
0x0BA8	0xF2000218  ADDW	R2, R0, #24
0x0BAC	0x7812    LDRB	R2, [R2, #0]
0x0BAE	0xB932    CBNZ	R2, L_FAT32_Seek531
; pos end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 3337 :: 		
0x0BB0	0x23DC    MOVS	R3, #-36
0x0BB2	0xB25B    SXTB	R3, R3
0x0BB4	0x4A31    LDR	R2, [PC, #196]
0x0BB6	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 3338 :: 		
0x0BB8	0x20FF    MOVS	R0, #-1
0x0BBA	0xB240    SXTB	R0, R0
0x0BBC	0xE058    B	L_end_FAT32_Seek
;__Lib_FAT32_STM32.c, 3339 :: 		
L_FAT32_Seek531:
;__Lib_FAT32_STM32.c, 3344 :: 		
; pos start address is: 4 (R1)
0x0BBE	0xF2000214  ADDW	R2, R0, #20
0x0BC2	0x6812    LDR	R2, [R2, #0]
0x0BC4	0x4291    CMP	R1, R2
0x0BC6	0xD906    BLS	L_FAT32_Seek532
; pos end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 3346 :: 		
0x0BC8	0x23DB    MOVS	R3, #-37
0x0BCA	0xB25B    SXTB	R3, R3
0x0BCC	0x4A2B    LDR	R2, [PC, #172]
0x0BCE	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 3347 :: 		
0x0BD0	0x20FF    MOVS	R0, #-1
0x0BD2	0xB240    SXTB	R0, R0
0x0BD4	0xE04C    B	L_end_FAT32_Seek
;__Lib_FAT32_STM32.c, 3348 :: 		
L_FAT32_Seek532:
;__Lib_FAT32_STM32.c, 3353 :: 		
; pos start address is: 4 (R1)
0x0BD6	0xF2000210  ADDW	R2, R0, #16
0x0BDA	0x6812    LDR	R2, [R2, #0]
0x0BDC	0x428A    CMP	R2, R1
0x0BDE	0xD102    BNE	L_FAT32_Seek533
; pos end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 3355 :: 		
0x0BE0	0x2000    MOVS	R0, #0
0x0BE2	0xB240    SXTB	R0, R0
0x0BE4	0xE044    B	L_end_FAT32_Seek
;__Lib_FAT32_STM32.c, 3356 :: 		
L_FAT32_Seek533:
;__Lib_FAT32_STM32.c, 3361 :: 		
; pos start address is: 4 (R1)
0x0BE6	0xF2000210  ADDW	R2, R0, #16
0x0BEA	0x6813    LDR	R3, [R2, #0]
0x0BEC	0x4C24    LDR	R4, [PC, #144]
0x0BEE	0x7822    LDRB	R2, [R4, #0]
0x0BF0	0x40D3    LSRS	R3, R2
0x0BF2	0x4622    MOV	R2, R4
0x0BF4	0x7812    LDRB	R2, [R2, #0]
0x0BF6	0xFA21F202  LSR	R2, R1, R2
0x0BFA	0x4293    CMP	R3, R2
0x0BFC	0xD105    BNE	L_FAT32_Seek534
;__Lib_FAT32_STM32.c, 3364 :: 		
0x0BFE	0xF2000210  ADDW	R2, R0, #16
0x0C02	0x6011    STR	R1, [R2, #0]
; pos end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 3365 :: 		
0x0C04	0x2000    MOVS	R0, #0
0x0C06	0xB240    SXTB	R0, R0
0x0C08	0xE032    B	L_end_FAT32_Seek
;__Lib_FAT32_STM32.c, 3366 :: 		
L_FAT32_Seek534:
;__Lib_FAT32_STM32.c, 3371 :: 		
; pos start address is: 4 (R1)
0x0C0A	0xF2000210  ADDW	R2, R0, #16
0x0C0E	0x6011    STR	R1, [R2, #0]
; pos end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 3372 :: 		
0x0C10	0xF2000210  ADDW	R2, R0, #16
0x0C14	0x6813    LDR	R3, [R2, #0]
0x0C16	0x4A1A    LDR	R2, [PC, #104]
0x0C18	0x7812    LDRB	R2, [R2, #0]
0x0C1A	0xFA23F102  LSR	R1, R3, R2
; i start address is: 4 (R1)
;__Lib_FAT32_STM32.c, 3374 :: 		
0x0C1E	0x1D03    ADDS	R3, R0, #4
0x0C20	0x6802    LDR	R2, [R0, #0]
0x0C22	0x601A    STR	R2, [R3, #0]
; i end address is: 4 (R1)
0x0C24	0x4604    MOV	R4, R0
;__Lib_FAT32_STM32.c, 3375 :: 		
L_FAT32_Seek535:
; i start address is: 4 (R1)
; pf start address is: 16 (R4)
; pf start address is: 16 (R4)
; pf end address is: 16 (R4)
0x0C26	0x2900    CMP	R1, #0
0x0C28	0xD920    BLS	L_FAT32_Seek536
; pf end address is: 16 (R4)
;__Lib_FAT32_STM32.c, 3377 :: 		
; pf start address is: 16 (R4)
0x0C2A	0x1D22    ADDS	R2, R4, #4
0x0C2C	0x9203    STR	R2, [SP, #12]
0x0C2E	0x6812    LDR	R2, [R2, #0]
0x0C30	0x9401    STR	R4, [SP, #4]
0x0C32	0x9102    STR	R1, [SP, #8]
0x0C34	0x4610    MOV	R0, R2
0x0C36	0xF7FFFB9F  BL	__Lib_FAT32_STM32_FAT_getEntry+0
0x0C3A	0x9902    LDR	R1, [SP, #8]
0x0C3C	0x9C01    LDR	R4, [SP, #4]
0x0C3E	0x9A03    LDR	R2, [SP, #12]
0x0C40	0x6010    STR	R0, [R2, #0]
;__Lib_FAT32_STM32.c, 3378 :: 		
0x0C42	0x1D22    ADDS	R2, R4, #4
0x0C44	0x6813    LDR	R3, [R2, #0]
0x0C46	0xF06F4270  MVN	R2, #-268435456
0x0C4A	0x4293    CMP	R3, R2
0x0C4C	0xD10C    BNE	L_FAT32_Seek537
; i end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 3380 :: 		
0x0C4E	0xF2040310  ADDW	R3, R4, #16
0x0C52	0xF2040214  ADDW	R2, R4, #20
; pf end address is: 16 (R4)
0x0C56	0x6812    LDR	R2, [R2, #0]
0x0C58	0x601A    STR	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 3381 :: 		
0x0C5A	0x23DB    MOVS	R3, #-37
0x0C5C	0xB25B    SXTB	R3, R3
0x0C5E	0x4A07    LDR	R2, [PC, #28]
0x0C60	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 3382 :: 		
0x0C62	0x20FF    MOVS	R0, #-1
0x0C64	0xB240    SXTB	R0, R0
0x0C66	0xE003    B	L_end_FAT32_Seek
;__Lib_FAT32_STM32.c, 3383 :: 		
L_FAT32_Seek537:
;__Lib_FAT32_STM32.c, 3384 :: 		
; i start address is: 4 (R1)
; pf start address is: 16 (R4)
0x0C68	0x1E49    SUBS	R1, R1, #1
;__Lib_FAT32_STM32.c, 3385 :: 		
; pf end address is: 16 (R4)
; i end address is: 4 (R1)
0x0C6A	0xE7DC    B	L_FAT32_Seek535
L_FAT32_Seek536:
;__Lib_FAT32_STM32.c, 3387 :: 		
0x0C6C	0x2000    MOVS	R0, #0
0x0C6E	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 3388 :: 		
L_end_FAT32_Seek:
0x0C70	0xF8DDE000  LDR	LR, [SP, #0]
0x0C74	0xB004    ADD	SP, SP, #16
0x0C76	0x4770    BX	LR
0x0C78	0x29C02000  	_fat32_fdesc+0
0x0C7C	0x27A82000  	__Lib_FAT32_STM32___error+0
0x0C80	0x27BA2000  	__Lib_FAT32_STM32_fBytesPClustPO2+0
; end of _FAT32_Seek
__Lib_FAT32_STM32_FAT_getEntry:
;__Lib_FAT32_STM32.c, 1156 :: 		
0x0378	0xB082    SUB	SP, SP, #8
0x037A	0xF8CDE000  STR	LR, [SP, #0]
0x037E	0x4603    MOV	R3, R0
; cl start address is: 12 (R3)
;__Lib_FAT32_STM32.c, 1161 :: 		
0x0380	0x4916    LDR	R1, [PC, #88]
0x0382	0x6809    LDR	R1, [R1, #0]
0x0384	0x428B    CMP	R3, R1
0x0386	0xD304    BCC	L___Lib_FAT32_STM32_FAT_getEntry735
0x0388	0x4915    LDR	R1, [PC, #84]
0x038A	0x6809    LDR	R1, [R1, #0]
0x038C	0x428B    CMP	R3, R1
0x038E	0xD200    BCS	L___Lib_FAT32_STM32_FAT_getEntry734
0x0390	0xE006    B	L___Lib_FAT32_STM32_FAT_getEntry170
; cl end address is: 12 (R3)
L___Lib_FAT32_STM32_FAT_getEntry735:
L___Lib_FAT32_STM32_FAT_getEntry734:
;__Lib_FAT32_STM32.c, 1163 :: 		
0x0392	0x22F4    MOVS	R2, #-12
0x0394	0xB252    SXTB	R2, R2
0x0396	0x4913    LDR	R1, [PC, #76]
0x0398	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 1164 :: 		
0x039A	0xF06F4070  MVN	R0, #-268435456
0x039E	0xE019    B	L_end_FAT_getEntry
;__Lib_FAT32_STM32.c, 1165 :: 		
L___Lib_FAT32_STM32_FAT_getEntry170:
;__Lib_FAT32_STM32.c, 1168 :: 		
; cl start address is: 12 (R3)
0x03A0	0x4911    LDR	R1, [PC, #68]
0x03A2	0x7809    LDRB	R1, [R1, #0]
0x03A4	0xFA23F201  LSR	R2, R3, R1
;__Lib_FAT32_STM32.c, 1169 :: 		
0x03A8	0x4910    LDR	R1, [PC, #64]
0x03AA	0x6809    LDR	R1, [R1, #0]
0x03AC	0x1851    ADDS	R1, R2, R1
;__Lib_FAT32_STM32.c, 1171 :: 		
0x03AE	0x9301    STR	R3, [SP, #4]
0x03B0	0x4608    MOV	R0, R1
0x03B2	0xF7FFFF4D  BL	__Lib_FAT32_STM32_readSector+0
0x03B6	0x9B01    LDR	R3, [SP, #4]
0x03B8	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT_getEntry171
; cl end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 1173 :: 		
0x03BA	0xF06F4070  MVN	R0, #-268435456
0x03BE	0xE009    B	L_end_FAT_getEntry
;__Lib_FAT32_STM32.c, 1174 :: 		
L___Lib_FAT32_STM32_FAT_getEntry171:
;__Lib_FAT32_STM32.c, 1177 :: 		
; cl start address is: 12 (R3)
0x03C0	0x490B    LDR	R1, [PC, #44]
0x03C2	0x6809    LDR	R1, [R1, #0]
0x03C4	0x1E49    SUBS	R1, R1, #1
0x03C6	0xEA030101  AND	R1, R3, R1, LSL #0
; cl end address is: 12 (R3)
0x03CA	0x008A    LSLS	R2, R1, #2
0x03CC	0x4909    LDR	R1, [PC, #36]
0x03CE	0x1889    ADDS	R1, R1, R2
;__Lib_FAT32_STM32.c, 1179 :: 		
0x03D0	0x6809    LDR	R1, [R1, #0]
0x03D2	0x4608    MOV	R0, R1
;__Lib_FAT32_STM32.c, 1180 :: 		
L_end_FAT_getEntry:
0x03D4	0xF8DDE000  LDR	LR, [SP, #0]
0x03D8	0xB002    ADD	SP, SP, #8
0x03DA	0x4770    BX	LR
0x03DC	0x2A582000  	__Lib_FAT32_STM32___fsi+32
0x03E0	0x2A702000  	__Lib_FAT32_STM32_fMaxCluster+0
0x03E4	0x27A82000  	__Lib_FAT32_STM32___error+0
0x03E8	0x2A802000  	__Lib_FAT32_STM32_fFatEntsPSectPO2+0
0x03EC	0x2A542000  	__Lib_FAT32_STM32___fsi+28
0x03F0	0x2A842000  	__Lib_FAT32_STM32_fFatEntsPSect+0
0x03F4	0x27C02000  	_f32_sector+4
; end of __Lib_FAT32_STM32_FAT_getEntry
__Lib_FAT32_STM32_readSector:
;__Lib_FAT32_STM32.c, 366 :: 		
0x0250	0xB082    SUB	SP, SP, #8
0x0252	0xF8CDE000  STR	LR, [SP, #0]
0x0256	0x4602    MOV	R2, R0
; sc start address is: 8 (R2)
;__Lib_FAT32_STM32.c, 368 :: 		
0x0258	0x491F    LDR	R1, [PC, #124]
0x025A	0x7809    LDRB	R1, [R1, #0]
0x025C	0x2903    CMP	R1, #3
0x025E	0xD112    BNE	L___Lib_FAT32_STM32_readSector48
;__Lib_FAT32_STM32.c, 370 :: 		
0x0260	0x9201    STR	R2, [SP, #4]
0x0262	0xF7FFFFB1  BL	__Lib_FAT32_STM32_readMStop+0
0x0266	0x9A01    LDR	R2, [SP, #4]
0x0268	0xB130    CBZ	R0, L___Lib_FAT32_STM32_readSector49
; sc end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 372 :: 		
0x026A	0x22FF    MOVS	R2, #-1
0x026C	0xB252    SXTB	R2, R2
0x026E	0x491B    LDR	R1, [PC, #108]
0x0270	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 373 :: 		
0x0272	0x20FF    MOVS	R0, #-1
0x0274	0xB240    SXTB	R0, R0
0x0276	0xE02B    B	L_end_readSector
;__Lib_FAT32_STM32.c, 374 :: 		
L___Lib_FAT32_STM32_readSector49:
;__Lib_FAT32_STM32.c, 375 :: 		
; sc start address is: 8 (R2)
0x0278	0x4919    LDR	R1, [PC, #100]
0x027A	0x6809    LDR	R1, [R1, #0]
0x027C	0x4291    CMP	R1, R2
0x027E	0xD102    BNE	L___Lib_FAT32_STM32_readSector50
; sc end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 377 :: 		
0x0280	0x2000    MOVS	R0, #0
0x0282	0xB240    SXTB	R0, R0
0x0284	0xE024    B	L_end_readSector
;__Lib_FAT32_STM32.c, 378 :: 		
L___Lib_FAT32_STM32_readSector50:
;__Lib_FAT32_STM32.c, 379 :: 		
; sc start address is: 8 (R2)
L___Lib_FAT32_STM32_readSector48:
;__Lib_FAT32_STM32.c, 381 :: 		
0x0286	0x4914    LDR	R1, [PC, #80]
0x0288	0x7809    LDRB	R1, [R1, #0]
0x028A	0x2901    CMP	R1, #1
0x028C	0xD106    BNE	L___Lib_FAT32_STM32_readSector51
; sc end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 383 :: 		
0x028E	0x22FF    MOVS	R2, #-1
0x0290	0xB252    SXTB	R2, R2
0x0292	0x4912    LDR	R1, [PC, #72]
0x0294	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 384 :: 		
0x0296	0x20FF    MOVS	R0, #-1
0x0298	0xB240    SXTB	R0, R0
0x029A	0xE019    B	L_end_readSector
;__Lib_FAT32_STM32.c, 385 :: 		
L___Lib_FAT32_STM32_readSector51:
;__Lib_FAT32_STM32.c, 387 :: 		
; sc start address is: 8 (R2)
0x029C	0x4910    LDR	R1, [PC, #64]
0x029E	0x6809    LDR	R1, [R1, #0]
0x02A0	0x428A    CMP	R2, R1
0x02A2	0xD013    BEQ	L___Lib_FAT32_STM32_readSector52
;__Lib_FAT32_STM32.c, 389 :: 		
0x02A4	0x9201    STR	R2, [SP, #4]
0x02A6	0x490F    LDR	R1, [PC, #60]
0x02A8	0x4610    MOV	R0, R2
0x02AA	0xF7FFFF7D  BL	_FAT32_Dev_Read_Sector+0
0x02AE	0x9A01    LDR	R2, [SP, #4]
0x02B0	0xB150    CBZ	R0, L___Lib_FAT32_STM32_readSector53
; sc end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 391 :: 		
0x02B2	0xF04F32FF  MOV	R2, #-1
0x02B6	0x490A    LDR	R1, [PC, #40]
0x02B8	0x600A    STR	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 392 :: 		
0x02BA	0x22FF    MOVS	R2, #-1
0x02BC	0xB252    SXTB	R2, R2
0x02BE	0x4907    LDR	R1, [PC, #28]
0x02C0	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 393 :: 		
0x02C2	0x20FF    MOVS	R0, #-1
0x02C4	0xB240    SXTB	R0, R0
0x02C6	0xE003    B	L_end_readSector
;__Lib_FAT32_STM32.c, 394 :: 		
L___Lib_FAT32_STM32_readSector53:
;__Lib_FAT32_STM32.c, 395 :: 		
; sc start address is: 8 (R2)
0x02C8	0x4905    LDR	R1, [PC, #20]
0x02CA	0x600A    STR	R2, [R1, #0]
; sc end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 396 :: 		
L___Lib_FAT32_STM32_readSector52:
;__Lib_FAT32_STM32.c, 398 :: 		
0x02CC	0x2000    MOVS	R0, #0
0x02CE	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 399 :: 		
L_end_readSector:
0x02D0	0xF8DDE000  LDR	LR, [SP, #0]
0x02D4	0xB002    ADD	SP, SP, #8
0x02D6	0x4770    BX	LR
0x02D8	0x27A92000  	__Lib_FAT32_STM32_fCardMultiReadMode+0
0x02DC	0x27A82000  	__Lib_FAT32_STM32___error+0
0x02E0	0x27BC2000  	_f32_sector+0
0x02E4	0x27C02000  	_f32_sector+4
; end of __Lib_FAT32_STM32_readSector
__Lib_FAT32_STM32_readMStop:
;__Lib_FAT32_STM32.c, 253 :: 		
0x01C8	0xB081    SUB	SP, SP, #4
0x01CA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_FAT32_STM32.c, 256 :: 		
0x01CE	0x480F    LDR	R0, [PC, #60]
0x01D0	0x7800    LDRB	R0, [R0, #0]
0x01D2	0xB120    CBZ	R0, L___Lib_FAT32_STM32_readMStop706
0x01D4	0x480D    LDR	R0, [PC, #52]
0x01D6	0x7800    LDRB	R0, [R0, #0]
0x01D8	0x2802    CMP	R0, #2
0x01DA	0xD000    BEQ	L___Lib_FAT32_STM32_readMStop705
0x01DC	0xE002    B	L___Lib_FAT32_STM32_readMStop33
L___Lib_FAT32_STM32_readMStop706:
L___Lib_FAT32_STM32_readMStop705:
;__Lib_FAT32_STM32.c, 258 :: 		
0x01DE	0x2000    MOVS	R0, #0
0x01E0	0xB240    SXTB	R0, R0
0x01E2	0xE00E    B	L_end_readMStop
;__Lib_FAT32_STM32.c, 259 :: 		
L___Lib_FAT32_STM32_readMStop33:
;__Lib_FAT32_STM32.c, 261 :: 		
0x01E4	0xF7FFFFD0  BL	_FAT32_Dev_Multi_Read_Stop+0
0x01E8	0xB130    CBZ	R0, L___Lib_FAT32_STM32_readMStop34
;__Lib_FAT32_STM32.c, 263 :: 		
0x01EA	0x21FF    MOVS	R1, #-1
0x01EC	0xB249    SXTB	R1, R1
0x01EE	0x4808    LDR	R0, [PC, #32]
0x01F0	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 264 :: 		
0x01F2	0x20FF    MOVS	R0, #-1
0x01F4	0xB240    SXTB	R0, R0
0x01F6	0xE004    B	L_end_readMStop
;__Lib_FAT32_STM32.c, 265 :: 		
L___Lib_FAT32_STM32_readMStop34:
;__Lib_FAT32_STM32.c, 267 :: 		
0x01F8	0x2100    MOVS	R1, #0
0x01FA	0x4804    LDR	R0, [PC, #16]
0x01FC	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 268 :: 		
0x01FE	0x2000    MOVS	R0, #0
0x0200	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 269 :: 		
L_end_readMStop:
0x0202	0xF8DDE000  LDR	LR, [SP, #0]
0x0206	0xB001    ADD	SP, SP, #4
0x0208	0x4770    BX	LR
0x020A	0xBF00    NOP
0x020C	0x27A92000  	__Lib_FAT32_STM32_fCardMultiReadMode+0
0x0210	0x27A82000  	__Lib_FAT32_STM32___error+0
; end of __Lib_FAT32_STM32_readMStop
_FAT32_Dev_Multi_Read_Stop:
;__Lib_FAT32_Driver_STM32.c, 185 :: 		int8 FAT32_Dev_Multi_Read_Stop()
0x0188	0xB081    SUB	SP, SP, #4
0x018A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_FAT32_Driver_STM32.c, 187 :: 		if (Mmc_Multi_Read_Stop() != OK)
0x018E	0xF002FE23  BL	_Mmc_Multi_Read_Stop+0
0x0192	0xB110    CBZ	R0, L_FAT32_Dev_Multi_Read_Stop7
;__Lib_FAT32_Driver_STM32.c, 189 :: 		return ERROR;
0x0194	0x20FF    MOVS	R0, #-1
0x0196	0xB240    SXTB	R0, R0
0x0198	0xE001    B	L_end_FAT32_Dev_Multi_Read_Stop
;__Lib_FAT32_Driver_STM32.c, 190 :: 		}
L_FAT32_Dev_Multi_Read_Stop7:
;__Lib_FAT32_Driver_STM32.c, 191 :: 		return OK;
0x019A	0x2000    MOVS	R0, #0
0x019C	0xB240    SXTB	R0, R0
;__Lib_FAT32_Driver_STM32.c, 192 :: 		}
L_end_FAT32_Dev_Multi_Read_Stop:
0x019E	0xF8DDE000  LDR	LR, [SP, #0]
0x01A2	0xB001    ADD	SP, SP, #4
0x01A4	0x4770    BX	LR
; end of _FAT32_Dev_Multi_Read_Stop
_FAT32_Dev_Read_Sector:
;__Lib_FAT32_Driver_STM32.c, 44 :: 		int8 FAT32_Dev_Read_Sector(__SECTOR sc, char* buf)
; buf start address is: 4 (R1)
; sc start address is: 0 (R0)
0x01A8	0xB081    SUB	SP, SP, #4
0x01AA	0xF8CDE000  STR	LR, [SP, #0]
; buf end address is: 4 (R1)
; sc end address is: 0 (R0)
; sc start address is: 0 (R0)
; buf start address is: 4 (R1)
;__Lib_FAT32_Driver_STM32.c, 46 :: 		if (Mmc_Read_Sector(sc, buf) != OK)
; buf end address is: 4 (R1)
; sc end address is: 0 (R0)
0x01AE	0xF005FD7B  BL	_Mmc_Read_Sector+0
0x01B2	0xB110    CBZ	R0, L_FAT32_Dev_Read_Sector1
;__Lib_FAT32_Driver_STM32.c, 48 :: 		return ERROR;
0x01B4	0x20FF    MOVS	R0, #-1
0x01B6	0xB240    SXTB	R0, R0
0x01B8	0xE001    B	L_end_FAT32_Dev_Read_Sector
;__Lib_FAT32_Driver_STM32.c, 49 :: 		}
L_FAT32_Dev_Read_Sector1:
;__Lib_FAT32_Driver_STM32.c, 50 :: 		return OK;
0x01BA	0x2000    MOVS	R0, #0
0x01BC	0xB240    SXTB	R0, R0
;__Lib_FAT32_Driver_STM32.c, 51 :: 		}
L_end_FAT32_Dev_Read_Sector:
0x01BE	0xF8DDE000  LDR	LR, [SP, #0]
0x01C2	0xB001    ADD	SP, SP, #4
0x01C4	0x4770    BX	LR
; end of _FAT32_Dev_Read_Sector
_FAT32_Read:
;__Lib_FAT32_STM32.c, 2798 :: 		
0x1318	0xB08B    SUB	SP, SP, #44
0x131A	0xF8CDE000  STR	LR, [SP, #0]
0x131E	0x9107    STR	R1, [SP, #28]
0x1320	0xF8AD2020  STRH	R2, [SP, #32]
;__Lib_FAT32_STM32.c, 2812 :: 		
0x1324	0x2800    CMP	R0, #0
0x1326	0xDB02    BLT	L__FAT32_Read780
0x1328	0x2804    CMP	R0, _FAT32_MAX_FILES
0x132A	0xDA00    BGE	L__FAT32_Read779
0x132C	0xE006    B	L_FAT32_Read446
L__FAT32_Read780:
L__FAT32_Read779:
;__Lib_FAT32_STM32.c, 2814 :: 		
0x132E	0x24D8    MOVS	R4, #-40
0x1330	0xB264    SXTB	R4, R4
0x1332	0x4B86    LDR	R3, [PC, #536]
0x1334	0x701C    STRB	R4, [R3, #0]
;__Lib_FAT32_STM32.c, 2815 :: 		
0x1336	0x20FF    MOVS	R0, #-1
0x1338	0xB240    SXTB	R0, R0
0x133A	0xE102    B	L_end_FAT32_Read
;__Lib_FAT32_STM32.c, 2816 :: 		
L_FAT32_Read446:
;__Lib_FAT32_STM32.c, 2818 :: 		
0x133C	0xF8BD3020  LDRH	R3, [SP, #32]
0x1340	0xB913    CBNZ	R3, L_FAT32_Read447
;__Lib_FAT32_STM32.c, 2820 :: 		
0x1342	0x2000    MOVS	R0, #0
0x1344	0xB240    SXTB	R0, R0
0x1346	0xE0FC    B	L_end_FAT32_Read
;__Lib_FAT32_STM32.c, 2821 :: 		
L_FAT32_Read447:
;__Lib_FAT32_STM32.c, 2823 :: 		
0x1348	0x231C    MOVS	R3, #28
0x134A	0xFB03F400  MUL	R4, R3, R0
0x134E	0x4B80    LDR	R3, [PC, #512]
0x1350	0x191B    ADDS	R3, R3, R4
0x1352	0x9301    STR	R3, [SP, #4]
;__Lib_FAT32_STM32.c, 2826 :: 		
0x1354	0x3318    ADDS	R3, #24
0x1356	0x781B    LDRB	R3, [R3, #0]
0x1358	0xF0030301  AND	R3, R3, #1
0x135C	0xB2DB    UXTB	R3, R3
0x135E	0xB933    CBNZ	R3, L_FAT32_Read448
;__Lib_FAT32_STM32.c, 2828 :: 		
0x1360	0x24DC    MOVS	R4, #-36
0x1362	0xB264    SXTB	R4, R4
0x1364	0x4B79    LDR	R3, [PC, #484]
0x1366	0x701C    STRB	R4, [R3, #0]
;__Lib_FAT32_STM32.c, 2829 :: 		
0x1368	0x20FF    MOVS	R0, #-1
0x136A	0xB240    SXTB	R0, R0
0x136C	0xE0E9    B	L_end_FAT32_Read
;__Lib_FAT32_STM32.c, 2830 :: 		
L_FAT32_Read448:
;__Lib_FAT32_STM32.c, 2832 :: 		
0x136E	0x2300    MOVS	R3, #0
0x1370	0xF88D3019  STRB	R3, [SP, #25]
;__Lib_FAT32_STM32.c, 2833 :: 		
0x1374	0x9B01    LDR	R3, [SP, #4]
0x1376	0x3310    ADDS	R3, #16
0x1378	0x681C    LDR	R4, [R3, #0]
0x137A	0x9402    STR	R4, [SP, #8]
;__Lib_FAT32_STM32.c, 2834 :: 		
0x137C	0x9B01    LDR	R3, [SP, #4]
0x137E	0x3314    ADDS	R3, #20
0x1380	0x681B    LDR	R3, [R3, #0]
0x1382	0x9303    STR	R3, [SP, #12]
;__Lib_FAT32_STM32.c, 2836 :: 		
0x1384	0x1B1C    SUB	R4, R3, R4
0x1386	0xF8BD3020  LDRH	R3, [SP, #32]
0x138A	0x42A3    CMP	R3, R4
0x138C	0xD90B    BLS	L_FAT32_Read449
;__Lib_FAT32_STM32.c, 2839 :: 		
0x138E	0x9C02    LDR	R4, [SP, #8]
0x1390	0x9B03    LDR	R3, [SP, #12]
0x1392	0x1B1B    SUB	R3, R3, R4
;__Lib_FAT32_STM32.c, 2840 :: 		
0x1394	0xF8AD3020  STRH	R3, [SP, #32]
;__Lib_FAT32_STM32.c, 2841 :: 		
0x1398	0x2301    MOVS	R3, #1
0x139A	0xF88D3019  STRB	R3, [SP, #25]
;__Lib_FAT32_STM32.c, 2842 :: 		
0x139E	0x24DB    MOVS	R4, #-37
0x13A0	0xB264    SXTB	R4, R4
0x13A2	0x4B6A    LDR	R3, [PC, #424]
0x13A4	0x701C    STRB	R4, [R3, #0]
;__Lib_FAT32_STM32.c, 2843 :: 		
L_FAT32_Read449:
;__Lib_FAT32_STM32.c, 2845 :: 		
0x13A6	0x9B01    LDR	R3, [SP, #4]
0x13A8	0x1D1B    ADDS	R3, R3, #4
0x13AA	0x681B    LDR	R3, [R3, #0]
0x13AC	0x4618    MOV	R0, R3
0x13AE	0xF7FFF8B1  BL	_FAT32_ClustToSect+0
;__Lib_FAT32_STM32.c, 2848 :: 		
0x13B2	0x4B68    LDR	R3, [PC, #416]
0x13B4	0x681B    LDR	R3, [R3, #0]
0x13B6	0x1E5C    SUBS	R4, R3, #1
0x13B8	0x9B02    LDR	R3, [SP, #8]
0x13BA	0xEA030404  AND	R4, R3, R4, LSL #0
0x13BE	0x4B66    LDR	R3, [PC, #408]
0x13C0	0x781B    LDRB	R3, [R3, #0]
0x13C2	0xFA24F303  LSR	R3, R4, R3
0x13C6	0xF88D3018  STRB	R3, [SP, #24]
;__Lib_FAT32_STM32.c, 2849 :: 		
0x13CA	0xB2DB    UXTB	R3, R3
0x13CC	0x18C3    ADDS	R3, R0, R3
0x13CE	0x4618    MOV	R0, R3
;__Lib_FAT32_STM32.c, 2850 :: 		
0x13D0	0x4D62    LDR	R5, [PC, #392]
0x13D2	0x882B    LDRH	R3, [R5, #0]
0x13D4	0x1E5C    SUBS	R4, R3, #1
0x13D6	0xB2A4    UXTH	R4, R4
0x13D8	0x9B02    LDR	R3, [SP, #8]
0x13DA	0x4023    ANDS	R3, R4
0x13DC	0xF8AD3016  STRH	R3, [SP, #22]
;__Lib_FAT32_STM32.c, 2863 :: 		
0x13E0	0xF8BD4020  LDRH	R4, [SP, #32]
0x13E4	0xB29B    UXTH	R3, R3
0x13E6	0x191C    ADDS	R4, R3, R4
0x13E8	0xB2A4    UXTH	R4, R4
0x13EA	0x462B    MOV	R3, R5
0x13EC	0x881B    LDRH	R3, [R3, #0]
0x13EE	0x429C    CMP	R4, R3
0x13F0	0xD206    BCS	L_FAT32_Read450
;__Lib_FAT32_STM32.c, 2865 :: 		
0x13F2	0xF7FEFF2D  BL	__Lib_FAT32_STM32_readSector+0
0x13F6	0xB110    CBZ	R0, L_FAT32_Read451
;__Lib_FAT32_STM32.c, 2866 :: 		
0x13F8	0x20FF    MOVS	R0, #-1
0x13FA	0xB240    SXTB	R0, R0
0x13FC	0xE0A1    B	L_end_FAT32_Read
L_FAT32_Read451:
;__Lib_FAT32_STM32.c, 2867 :: 		
0x13FE	0xE005    B	L_FAT32_Read452
L_FAT32_Read450:
;__Lib_FAT32_STM32.c, 2868 :: 		
0x1400	0xF7FFF8D8  BL	__Lib_FAT32_STM32_readMStart+0
0x1404	0xB110    CBZ	R0, L_FAT32_Read453
;__Lib_FAT32_STM32.c, 2870 :: 		
0x1406	0x20FF    MOVS	R0, #-1
0x1408	0xB240    SXTB	R0, R0
0x140A	0xE09A    B	L_end_FAT32_Read
;__Lib_FAT32_STM32.c, 2871 :: 		
L_FAT32_Read453:
L_FAT32_Read452:
;__Lib_FAT32_STM32.c, 2879 :: 		
0x140C	0xF8BD4016  LDRH	R4, [SP, #22]
0x1410	0x4B53    LDR	R3, [PC, #332]
0x1412	0x191B    ADDS	R3, R3, R4
0x1414	0x9304    STR	R3, [SP, #16]
;__Lib_FAT32_STM32.c, 2880 :: 		
0x1416	0x2300    MOVS	R3, #0
0x1418	0xF8AD3014  STRH	R3, [SP, #20]
L_FAT32_Read454:
0x141C	0xF8BD4020  LDRH	R4, [SP, #32]
0x1420	0xF8BD3014  LDRH	R3, [SP, #20]
0x1424	0x42A3    CMP	R3, R4
0x1426	0xF0808076  BCS	L_FAT32_Read455
;__Lib_FAT32_STM32.c, 2882 :: 		
0x142A	0x9B04    LDR	R3, [SP, #16]
0x142C	0x781C    LDRB	R4, [R3, #0]
0x142E	0x9B07    LDR	R3, [SP, #28]
0x1430	0x701C    STRB	R4, [R3, #0]
0x1432	0x9B07    LDR	R3, [SP, #28]
0x1434	0x1C5B    ADDS	R3, R3, #1
0x1436	0x9307    STR	R3, [SP, #28]
0x1438	0x9B04    LDR	R3, [SP, #16]
0x143A	0x1C5C    ADDS	R4, R3, #1
0x143C	0x9404    STR	R4, [SP, #16]
;__Lib_FAT32_STM32.c, 2883 :: 		
0x143E	0x4B49    LDR	R3, [PC, #292]
0x1440	0x681B    LDR	R3, [R3, #0]
0x1442	0x429C    CMP	R4, R3
0x1444	0xF0408061  BNE	L_FAT32_Read457
;__Lib_FAT32_STM32.c, 2888 :: 		
0x1448	0x4B45    LDR	R3, [PC, #276]
0x144A	0x9304    STR	R3, [SP, #16]
;__Lib_FAT32_STM32.c, 2890 :: 		
0x144C	0xF89D3018  LDRB	R3, [SP, #24]
0x1450	0x1C5C    ADDS	R4, R3, #1
0x1452	0xB2E4    UXTB	R4, R4
0x1454	0xF88D4018  STRB	R4, [SP, #24]
;__Lib_FAT32_STM32.c, 2891 :: 		
0x1458	0x4B43    LDR	R3, [PC, #268]
0x145A	0x781B    LDRB	R3, [R3, #0]
0x145C	0x429C    CMP	R4, R3
0x145E	0xD146    BNE	L_FAT32_Read458
;__Lib_FAT32_STM32.c, 2896 :: 		
0x1460	0xF7FEFEB2  BL	__Lib_FAT32_STM32_readMStop+0
0x1464	0xB118    CBZ	R0, L_FAT32_Read459
;__Lib_FAT32_STM32.c, 2898 :: 		
0x1466	0x2301    MOVS	R3, #1
0x1468	0xF88D3019  STRB	R3, [SP, #25]
;__Lib_FAT32_STM32.c, 2899 :: 		
0x146C	0xE053    B	L_FAT32_Read455
;__Lib_FAT32_STM32.c, 2900 :: 		
L_FAT32_Read459:
;__Lib_FAT32_STM32.c, 2902 :: 		
0x146E	0x2300    MOVS	R3, #0
0x1470	0xF88D3018  STRB	R3, [SP, #24]
;__Lib_FAT32_STM32.c, 2904 :: 		
0x1474	0x9B01    LDR	R3, [SP, #4]
0x1476	0x1D1B    ADDS	R3, R3, #4
0x1478	0x930A    STR	R3, [SP, #40]
0x147A	0x681B    LDR	R3, [R3, #0]
0x147C	0x4618    MOV	R0, R3
0x147E	0xF7FEFF7B  BL	__Lib_FAT32_STM32_FAT_getEntry+0
0x1482	0x9B0A    LDR	R3, [SP, #40]
0x1484	0x6018    STR	R0, [R3, #0]
;__Lib_FAT32_STM32.c, 2905 :: 		
0x1486	0x9B01    LDR	R3, [SP, #4]
0x1488	0x1D1B    ADDS	R3, R3, #4
0x148A	0x681C    LDR	R4, [R3, #0]
0x148C	0xF06F4370  MVN	R3, #-268435456
0x1490	0x429C    CMP	R4, R3
0x1492	0xD116    BNE	L_FAT32_Read460
;__Lib_FAT32_STM32.c, 2907 :: 		
0x1494	0x9B01    LDR	R3, [SP, #4]
0x1496	0xF2030410  ADDW	R4, R3, #16
0x149A	0x9B03    LDR	R3, [SP, #12]
0x149C	0x6023    STR	R3, [R4, #0]
;__Lib_FAT32_STM32.c, 2908 :: 		
0x149E	0xF8BD3020  LDRH	R3, [SP, #32]
0x14A2	0x1E5C    SUBS	R4, R3, #1
0x14A4	0xB2A4    UXTH	R4, R4
0x14A6	0xF8BD3014  LDRH	R3, [SP, #20]
0x14AA	0x42A3    CMP	R3, R4
0x14AC	0xD102    BNE	L_FAT32_Read461
;__Lib_FAT32_STM32.c, 2910 :: 		
0x14AE	0x2000    MOVS	R0, #0
0x14B0	0xB240    SXTB	R0, R0
0x14B2	0xE046    B	L_end_FAT32_Read
;__Lib_FAT32_STM32.c, 2911 :: 		
L_FAT32_Read461:
;__Lib_FAT32_STM32.c, 2914 :: 		
0x14B4	0x24DB    MOVS	R4, #-37
0x14B6	0xB264    SXTB	R4, R4
0x14B8	0x4B24    LDR	R3, [PC, #144]
0x14BA	0x701C    STRB	R4, [R3, #0]
;__Lib_FAT32_STM32.c, 2915 :: 		
0x14BC	0x20FF    MOVS	R0, #-1
0x14BE	0xB240    SXTB	R0, R0
0x14C0	0xE03F    B	L_end_FAT32_Read
;__Lib_FAT32_STM32.c, 2917 :: 		
L_FAT32_Read460:
;__Lib_FAT32_STM32.c, 2919 :: 		
0x14C2	0xF8BD3020  LDRH	R3, [SP, #32]
0x14C6	0x1E5C    SUBS	R4, R3, #1
0x14C8	0xB2A4    UXTH	R4, R4
0x14CA	0xF8BD3014  LDRH	R3, [SP, #20]
0x14CE	0x42A3    CMP	R3, R4
0x14D0	0xD00C    BEQ	L_FAT32_Read463
;__Lib_FAT32_STM32.c, 2920 :: 		
0x14D2	0x9B01    LDR	R3, [SP, #4]
0x14D4	0x1D1B    ADDS	R3, R3, #4
0x14D6	0x681B    LDR	R3, [R3, #0]
0x14D8	0x4618    MOV	R0, R3
0x14DA	0xF7FFF81B  BL	_FAT32_ClustToSect+0
0x14DE	0xF7FFF869  BL	__Lib_FAT32_STM32_readMStart+0
0x14E2	0xB118    CBZ	R0, L_FAT32_Read464
;__Lib_FAT32_STM32.c, 2922 :: 		
0x14E4	0x2301    MOVS	R3, #1
0x14E6	0xF88D3019  STRB	R3, [SP, #25]
;__Lib_FAT32_STM32.c, 2923 :: 		
0x14EA	0xE014    B	L_FAT32_Read455
;__Lib_FAT32_STM32.c, 2924 :: 		
L_FAT32_Read464:
L_FAT32_Read463:
;__Lib_FAT32_STM32.c, 2925 :: 		
0x14EC	0xE00D    B	L_FAT32_Read465
L_FAT32_Read458:
;__Lib_FAT32_STM32.c, 2931 :: 		
0x14EE	0xF8BD3020  LDRH	R3, [SP, #32]
0x14F2	0x1E5C    SUBS	R4, R3, #1
0x14F4	0xB2A4    UXTH	R4, R4
0x14F6	0xF8BD3014  LDRH	R3, [SP, #20]
0x14FA	0x42A3    CMP	R3, R4
0x14FC	0xD005    BEQ	L_FAT32_Read466
;__Lib_FAT32_STM32.c, 2932 :: 		
0x14FE	0xF7FFF81D  BL	__Lib_FAT32_STM32_readMSector+0
0x1502	0xB110    CBZ	R0, L_FAT32_Read467
;__Lib_FAT32_STM32.c, 2934 :: 		
0x1504	0x20FF    MOVS	R0, #-1
0x1506	0xB240    SXTB	R0, R0
0x1508	0xE01B    B	L_end_FAT32_Read
;__Lib_FAT32_STM32.c, 2935 :: 		
L_FAT32_Read467:
L_FAT32_Read466:
;__Lib_FAT32_STM32.c, 2936 :: 		
L_FAT32_Read465:
;__Lib_FAT32_STM32.c, 2937 :: 		
L_FAT32_Read457:
;__Lib_FAT32_STM32.c, 2880 :: 		
0x150A	0xF8BD3014  LDRH	R3, [SP, #20]
0x150E	0x1C5B    ADDS	R3, R3, #1
0x1510	0xF8AD3014  STRH	R3, [SP, #20]
;__Lib_FAT32_STM32.c, 2938 :: 		
0x1514	0xE782    B	L_FAT32_Read454
L_FAT32_Read455:
;__Lib_FAT32_STM32.c, 2940 :: 		
0x1516	0x9B01    LDR	R3, [SP, #4]
0x1518	0xF2030510  ADDW	R5, R3, #16
0x151C	0xF8BD4014  LDRH	R4, [SP, #20]
0x1520	0x9B02    LDR	R3, [SP, #8]
0x1522	0x191B    ADDS	R3, R3, R4
0x1524	0x602B    STR	R3, [R5, #0]
;__Lib_FAT32_STM32.c, 2942 :: 		
0x1526	0xF7FEFE4F  BL	__Lib_FAT32_STM32_readMStop+0
0x152A	0xB110    CBZ	R0, L_FAT32_Read468
;__Lib_FAT32_STM32.c, 2944 :: 		
0x152C	0x20FF    MOVS	R0, #-1
0x152E	0xB240    SXTB	R0, R0
0x1530	0xE007    B	L_end_FAT32_Read
;__Lib_FAT32_STM32.c, 2945 :: 		
L_FAT32_Read468:
;__Lib_FAT32_STM32.c, 2947 :: 		
0x1532	0xF89D3019  LDRB	R3, [SP, #25]
0x1536	0xB113    CBZ	R3, L_FAT32_Read469
;__Lib_FAT32_STM32.c, 2948 :: 		
0x1538	0x20FF    MOVS	R0, #-1
0x153A	0xB240    SXTB	R0, R0
0x153C	0xE001    B	L_end_FAT32_Read
L_FAT32_Read469:
;__Lib_FAT32_STM32.c, 2950 :: 		
0x153E	0x2000    MOVS	R0, #0
0x1540	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 2951 :: 		
L_end_FAT32_Read:
0x1542	0xF8DDE000  LDR	LR, [SP, #0]
0x1546	0xB00B    ADD	SP, SP, #44
0x1548	0x4770    BX	LR
0x154A	0xBF00    NOP
0x154C	0x27A82000  	__Lib_FAT32_STM32___error+0
0x1550	0x29C02000  	_fat32_fdesc+0
0x1554	0x2A882000  	__Lib_FAT32_STM32_fBytesPClust+0
0x1558	0x2A822000  	__Lib_FAT32_STM32_fBytesPSectPO2+0
0x155C	0x2A442000  	__Lib_FAT32_STM32___fsi+12
0x1560	0x27C02000  	_f32_sector+4
0x1564	0x2A6C2000  	__Lib_FAT32_STM32_fSectBuffEnd+0
0x1568	0x2A462000  	__Lib_FAT32_STM32___fsi+14
; end of _FAT32_Read
_FAT32_ClustToSect:
;__Lib_FAT32_STM32.c, 1106 :: 		
0x0514	0xB081    SUB	SP, SP, #4
;__Lib_FAT32_STM32.c, 1109 :: 		
0x0516	0x4906    LDR	R1, [PC, #24]
0x0518	0x6809    LDR	R1, [R1, #0]
0x051A	0x1A42    SUB	R2, R0, R1
0x051C	0x4905    LDR	R1, [PC, #20]
0x051E	0x7809    LDRB	R1, [R1, #0]
0x0520	0x408A    LSLS	R2, R1
0x0522	0x4905    LDR	R1, [PC, #20]
0x0524	0x6809    LDR	R1, [R1, #0]
0x0526	0x1889    ADDS	R1, R1, R2
0x0528	0x4608    MOV	R0, R1
;__Lib_FAT32_STM32.c, 1110 :: 		
L_end_FAT32_ClustToSect:
0x052A	0xB001    ADD	SP, SP, #4
0x052C	0x4770    BX	LR
0x052E	0xBF00    NOP
0x0530	0x2A582000  	__Lib_FAT32_STM32___fsi+32
0x0534	0x2A812000  	__Lib_FAT32_STM32_fSectPClustPO2+0
0x0538	0x2A5C2000  	__Lib_FAT32_STM32___fsi+36
; end of _FAT32_ClustToSect
__Lib_FAT32_STM32_readMStart:
;__Lib_FAT32_STM32.c, 271 :: 		
0x05B4	0xB082    SUB	SP, SP, #8
0x05B6	0xF8CDE000  STR	LR, [SP, #0]
0x05BA	0x9001    STR	R0, [SP, #4]
;__Lib_FAT32_STM32.c, 273 :: 		
0x05BC	0x4922    LDR	R1, [PC, #136]
0x05BE	0x7809    LDRB	R1, [R1, #0]
0x05C0	0x2903    CMP	R1, #3
0x05C2	0xD109    BNE	L___Lib_FAT32_STM32_readMStart35
;__Lib_FAT32_STM32.c, 275 :: 		
0x05C4	0xF7FFFE00  BL	__Lib_FAT32_STM32_readMStop+0
0x05C8	0xB130    CBZ	R0, L___Lib_FAT32_STM32_readMStart36
;__Lib_FAT32_STM32.c, 277 :: 		
0x05CA	0x22FF    MOVS	R2, #-1
0x05CC	0xB252    SXTB	R2, R2
0x05CE	0x491F    LDR	R1, [PC, #124]
0x05D0	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 278 :: 		
0x05D2	0x20FF    MOVS	R0, #-1
0x05D4	0xB240    SXTB	R0, R0
0x05D6	0xE033    B	L_end_readMStart
;__Lib_FAT32_STM32.c, 279 :: 		
L___Lib_FAT32_STM32_readMStart36:
;__Lib_FAT32_STM32.c, 280 :: 		
L___Lib_FAT32_STM32_readMStart35:
;__Lib_FAT32_STM32.c, 282 :: 		
0x05D8	0x491B    LDR	R1, [PC, #108]
0x05DA	0x7809    LDRB	R1, [R1, #0]
0x05DC	0x2901    CMP	R1, #1
0x05DE	0xD106    BNE	L___Lib_FAT32_STM32_readMStart37
;__Lib_FAT32_STM32.c, 284 :: 		
0x05E0	0x22FF    MOVS	R2, #-1
0x05E2	0xB252    SXTB	R2, R2
0x05E4	0x4919    LDR	R1, [PC, #100]
0x05E6	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 285 :: 		
0x05E8	0x20FF    MOVS	R0, #-1
0x05EA	0xB240    SXTB	R0, R0
0x05EC	0xE028    B	L_end_readMStart
;__Lib_FAT32_STM32.c, 286 :: 		
L___Lib_FAT32_STM32_readMStart37:
;__Lib_FAT32_STM32.c, 288 :: 		
0x05EE	0x9A01    LDR	R2, [SP, #4]
0x05F0	0x4917    LDR	R1, [PC, #92]
0x05F2	0x6809    LDR	R1, [R1, #0]
0x05F4	0x4291    CMP	R1, R2
0x05F6	0xD105    BNE	L___Lib_FAT32_STM32_readMStart38
;__Lib_FAT32_STM32.c, 290 :: 		
0x05F8	0x2202    MOVS	R2, #2
0x05FA	0x4913    LDR	R1, [PC, #76]
0x05FC	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 291 :: 		
0x05FE	0x2000    MOVS	R0, #0
0x0600	0xB240    SXTB	R0, R0
0x0602	0xE01D    B	L_end_readMStart
;__Lib_FAT32_STM32.c, 292 :: 		
L___Lib_FAT32_STM32_readMStart38:
;__Lib_FAT32_STM32.c, 294 :: 		
0x0604	0x9801    LDR	R0, [SP, #4]
0x0606	0xF7FFFE99  BL	_FAT32_Dev_Multi_Read_Start+0
0x060A	0xB130    CBZ	R0, L___Lib_FAT32_STM32_readMStart39
;__Lib_FAT32_STM32.c, 296 :: 		
0x060C	0x22FF    MOVS	R2, #-1
0x060E	0xB252    SXTB	R2, R2
0x0610	0x490E    LDR	R1, [PC, #56]
0x0612	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 297 :: 		
0x0614	0x20FF    MOVS	R0, #-1
0x0616	0xB240    SXTB	R0, R0
0x0618	0xE012    B	L_end_readMStart
;__Lib_FAT32_STM32.c, 298 :: 		
L___Lib_FAT32_STM32_readMStart39:
;__Lib_FAT32_STM32.c, 302 :: 		
0x061A	0x480E    LDR	R0, [PC, #56]
0x061C	0xF7FFFE04  BL	_FAT32_Dev_Multi_Read_Sector+0
0x0620	0xB130    CBZ	R0, L___Lib_FAT32_STM32_readMStart40
;__Lib_FAT32_STM32.c, 304 :: 		
0x0622	0x22FF    MOVS	R2, #-1
0x0624	0xB252    SXTB	R2, R2
0x0626	0x4909    LDR	R1, [PC, #36]
0x0628	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 305 :: 		
0x062A	0x20FF    MOVS	R0, #-1
0x062C	0xB240    SXTB	R0, R0
0x062E	0xE007    B	L_end_readMStart
;__Lib_FAT32_STM32.c, 306 :: 		
L___Lib_FAT32_STM32_readMStart40:
;__Lib_FAT32_STM32.c, 308 :: 		
0x0630	0x2201    MOVS	R2, #1
0x0632	0x4905    LDR	R1, [PC, #20]
0x0634	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 309 :: 		
0x0636	0x9A01    LDR	R2, [SP, #4]
0x0638	0x4905    LDR	R1, [PC, #20]
0x063A	0x600A    STR	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 311 :: 		
0x063C	0x2000    MOVS	R0, #0
0x063E	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 312 :: 		
L_end_readMStart:
0x0640	0xF8DDE000  LDR	LR, [SP, #0]
0x0644	0xB002    ADD	SP, SP, #8
0x0646	0x4770    BX	LR
0x0648	0x27A92000  	__Lib_FAT32_STM32_fCardMultiReadMode+0
0x064C	0x27A82000  	__Lib_FAT32_STM32___error+0
0x0650	0x27BC2000  	_f32_sector+0
0x0654	0x27C02000  	_f32_sector+4
; end of __Lib_FAT32_STM32_readMStart
_FAT32_Dev_Multi_Read_Start:
;__Lib_FAT32_Driver_STM32.c, 166 :: 		int8 FAT32_Dev_Multi_Read_Start(__SECTOR sc)
; sc start address is: 0 (R0)
0x033C	0xB081    SUB	SP, SP, #4
0x033E	0xF8CDE000  STR	LR, [SP, #0]
; sc end address is: 0 (R0)
; sc start address is: 0 (R0)
;__Lib_FAT32_Driver_STM32.c, 168 :: 		if (Mmc_Multi_Read_Start(sc) != OK)
; sc end address is: 0 (R0)
0x0342	0xF002FD55  BL	_Mmc_Multi_Read_Start+0
0x0346	0xB110    CBZ	R0, L_FAT32_Dev_Multi_Read_Start6
;__Lib_FAT32_Driver_STM32.c, 170 :: 		return ERROR;
0x0348	0x20FF    MOVS	R0, #-1
0x034A	0xB240    SXTB	R0, R0
0x034C	0xE001    B	L_end_FAT32_Dev_Multi_Read_Start
;__Lib_FAT32_Driver_STM32.c, 171 :: 		}
L_FAT32_Dev_Multi_Read_Start6:
;__Lib_FAT32_Driver_STM32.c, 172 :: 		return OK;
0x034E	0x2000    MOVS	R0, #0
0x0350	0xB240    SXTB	R0, R0
;__Lib_FAT32_Driver_STM32.c, 173 :: 		}
L_end_FAT32_Dev_Multi_Read_Start:
0x0352	0xF8DDE000  LDR	LR, [SP, #0]
0x0356	0xB001    ADD	SP, SP, #4
0x0358	0x4770    BX	LR
; end of _FAT32_Dev_Multi_Read_Start
_FAT32_Dev_Multi_Read_Sector:
;__Lib_FAT32_Driver_STM32.c, 205 :: 		int8 FAT32_Dev_Multi_Read_Sector(char* buf)
; buf start address is: 0 (R0)
0x0228	0xB081    SUB	SP, SP, #4
0x022A	0xF8CDE000  STR	LR, [SP, #0]
; buf end address is: 0 (R0)
; buf start address is: 0 (R0)
;__Lib_FAT32_Driver_STM32.c, 207 :: 		Mmc_Multi_Read_Sector(buf);
; buf end address is: 0 (R0)
0x022E	0xF002FDEB  BL	_Mmc_Multi_Read_Sector+0
;__Lib_FAT32_Driver_STM32.c, 208 :: 		return OK;
0x0232	0x2000    MOVS	R0, #0
0x0234	0xB240    SXTB	R0, R0
;__Lib_FAT32_Driver_STM32.c, 209 :: 		}
L_end_FAT32_Dev_Multi_Read_Sector:
0x0236	0xF8DDE000  LDR	LR, [SP, #0]
0x023A	0xB001    ADD	SP, SP, #4
0x023C	0x4770    BX	LR
; end of _FAT32_Dev_Multi_Read_Sector
__Lib_FAT32_STM32_readMSector:
;__Lib_FAT32_STM32.c, 335 :: 		
0x053C	0xB081    SUB	SP, SP, #4
0x053E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_FAT32_STM32.c, 337 :: 		
0x0542	0x4814    LDR	R0, [PC, #80]
0x0544	0x7800    LDRB	R0, [R0, #0]
0x0546	0x2802    CMP	R0, #2
0x0548	0xD105    BNE	L___Lib_FAT32_STM32_readMSector44
;__Lib_FAT32_STM32.c, 339 :: 		
0x054A	0x4813    LDR	R0, [PC, #76]
0x054C	0x6800    LDR	R0, [R0, #0]
0x054E	0x1C40    ADDS	R0, R0, #1
0x0550	0xF000F830  BL	__Lib_FAT32_STM32_readMStart+0
0x0554	0xE01A    B	L_end_readMSector
;__Lib_FAT32_STM32.c, 340 :: 		
L___Lib_FAT32_STM32_readMSector44:
;__Lib_FAT32_STM32.c, 341 :: 		
0x0556	0x480F    LDR	R0, [PC, #60]
0x0558	0x7800    LDRB	R0, [R0, #0]
0x055A	0xB930    CBNZ	R0, L___Lib_FAT32_STM32_readMSector46
;__Lib_FAT32_STM32.c, 343 :: 		
0x055C	0x21FF    MOVS	R1, #-1
0x055E	0xB249    SXTB	R1, R1
0x0560	0x480E    LDR	R0, [PC, #56]
0x0562	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 344 :: 		
0x0564	0x20FF    MOVS	R0, #-1
0x0566	0xB240    SXTB	R0, R0
0x0568	0xE010    B	L_end_readMSector
;__Lib_FAT32_STM32.c, 345 :: 		
L___Lib_FAT32_STM32_readMSector46:
;__Lib_FAT32_STM32.c, 347 :: 		
0x056A	0x480D    LDR	R0, [PC, #52]
0x056C	0xF7FFFE5C  BL	_FAT32_Dev_Multi_Read_Sector+0
0x0570	0xB130    CBZ	R0, L___Lib_FAT32_STM32_readMSector47
;__Lib_FAT32_STM32.c, 349 :: 		
0x0572	0x21FF    MOVS	R1, #-1
0x0574	0xB249    SXTB	R1, R1
0x0576	0x4809    LDR	R0, [PC, #36]
0x0578	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 350 :: 		
0x057A	0x20FF    MOVS	R0, #-1
0x057C	0xB240    SXTB	R0, R0
0x057E	0xE005    B	L_end_readMSector
;__Lib_FAT32_STM32.c, 351 :: 		
L___Lib_FAT32_STM32_readMSector47:
;__Lib_FAT32_STM32.c, 360 :: 		
0x0580	0x4905    LDR	R1, [PC, #20]
0x0582	0x6808    LDR	R0, [R1, #0]
0x0584	0x1C40    ADDS	R0, R0, #1
0x0586	0x6008    STR	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 363 :: 		
0x0588	0x2000    MOVS	R0, #0
0x058A	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 364 :: 		
L_end_readMSector:
0x058C	0xF8DDE000  LDR	LR, [SP, #0]
0x0590	0xB001    ADD	SP, SP, #4
0x0592	0x4770    BX	LR
0x0594	0x27A92000  	__Lib_FAT32_STM32_fCardMultiReadMode+0
0x0598	0x27BC2000  	_f32_sector+0
0x059C	0x27A82000  	__Lib_FAT32_STM32___error+0
0x05A0	0x27C02000  	_f32_sector+4
; end of __Lib_FAT32_STM32_readMSector
_TFT_Dot:
;__Lib_TFT.c, 552 :: 		
; y start address is: 4 (R1)
; x start address is: 0 (R0)
0x49C8	0xB082    SUB	SP, SP, #8
0x49CA	0xF8CDE000  STR	LR, [SP, #0]
0x49CE	0xF8AD2004  STRH	R2, [SP, #4]
0x49D2	0xB20A    SXTH	R2, R1
0x49D4	0xB201    SXTH	R1, R0
; y end address is: 4 (R1)
; x end address is: 0 (R0)
; x start address is: 4 (R1)
; y start address is: 8 (R2)
;__Lib_TFT.c, 554 :: 		
0x49D6	0x2900    CMP	R1, #0
0x49D8	0xDB04    BLT	L__TFT_Dot937
0x49DA	0x4B17    LDR	R3, [PC, #92]
0x49DC	0x881B    LDRH	R3, [R3, #0]
0x49DE	0x4299    CMP	R1, R3
0x49E0	0xD200    BCS	L__TFT_Dot936
0x49E2	0xE000    B	L_TFT_Dot6
; x end address is: 4 (R1)
; y end address is: 8 (R2)
L__TFT_Dot937:
L__TFT_Dot936:
;__Lib_TFT.c, 555 :: 		
0x49E4	0xE024    B	L_end_TFT_Dot
L_TFT_Dot6:
;__Lib_TFT.c, 556 :: 		
; y start address is: 8 (R2)
; x start address is: 4 (R1)
0x49E6	0x2A00    CMP	R2, #0
0x49E8	0xDB04    BLT	L__TFT_Dot939
0x49EA	0x4B14    LDR	R3, [PC, #80]
0x49EC	0x881B    LDRH	R3, [R3, #0]
0x49EE	0x429A    CMP	R2, R3
0x49F0	0xD200    BCS	L__TFT_Dot938
0x49F2	0xE000    B	L_TFT_Dot9
; x end address is: 4 (R1)
; y end address is: 8 (R2)
L__TFT_Dot939:
L__TFT_Dot938:
;__Lib_TFT.c, 557 :: 		
0x49F4	0xE01C    B	L_end_TFT_Dot
L_TFT_Dot9:
;__Lib_TFT.c, 559 :: 		
; y start address is: 8 (R2)
; x start address is: 4 (R1)
0x49F6	0x2400    MOVS	R4, #0
0x49F8	0xB264    SXTB	R4, R4
0x49FA	0x4B11    LDR	R3, [PC, #68]
0x49FC	0x601C    STR	R4, [R3, #0]
;__Lib_TFT.c, 560 :: 		
0x49FE	0xF007FE3B  BL	__Lib_TFT_Is_SSD1963_Set+0
0x4A02	0xB138    CBZ	R0, L_TFT_Dot10
;__Lib_TFT.c, 561 :: 		
0x4A04	0xB293    UXTH	R3, R2
0x4A06	0xB28A    UXTH	R2, R1
0x4A08	0xB299    UXTH	R1, R3
; y end address is: 8 (R2)
0x4A0A	0xB290    UXTH	R0, R2
; x end address is: 4 (R1)
0x4A0C	0x4C0D    LDR	R4, [PC, #52]
0x4A0E	0x6824    LDR	R4, [R4, #0]
0x4A10	0x47A0    BLX	R4
0x4A12	0xE004    B	L_TFT_Dot11
L_TFT_Dot10:
;__Lib_TFT.c, 563 :: 		
; y start address is: 8 (R2)
; x start address is: 4 (R1)
0x4A14	0xB288    UXTH	R0, R1
; y end address is: 8 (R2)
0x4A16	0xB291    UXTH	R1, R2
; x end address is: 4 (R1)
0x4A18	0x4C0B    LDR	R4, [PC, #44]
0x4A1A	0x6824    LDR	R4, [R4, #0]
0x4A1C	0x47A0    BLX	R4
L_TFT_Dot11:
;__Lib_TFT.c, 564 :: 		
0x4A1E	0xF8BD0004  LDRH	R0, [SP, #4]
0x4A22	0x4C0A    LDR	R4, [PC, #40]
0x4A24	0x6824    LDR	R4, [R4, #0]
0x4A26	0x47A0    BLX	R4
;__Lib_TFT.c, 565 :: 		
0x4A28	0x2401    MOVS	R4, #1
0x4A2A	0xB264    SXTB	R4, R4
0x4A2C	0x4B04    LDR	R3, [PC, #16]
0x4A2E	0x601C    STR	R4, [R3, #0]
;__Lib_TFT.c, 566 :: 		
L_end_TFT_Dot:
0x4A30	0xF8DDE000  LDR	LR, [SP, #0]
0x4A34	0xB002    ADD	SP, SP, #8
0x4A36	0x4770    BX	LR
0x4A38	0x22262000  	_TFT_DISP_WIDTH+0
0x4A3C	0x22242000  	_TFT_DISP_HEIGHT+0
0x4A40	0x82B44242  	TFT_CS+0
0x4A44	0x045C2000  	_TFT_SSD1963_Set_Address_Ptr+0
0x4A48	0x2DF82000  	_TFT_Set_Address_Ptr+0
0x4A4C	0x04602000  	_TFT_Write_Data_Ptr+0
; end of _TFT_Dot
__Lib_TFT__TFT_Write_Char:
;__Lib_TFT.c, 1157 :: 		
; ch start address is: 0 (R0)
0xA3B0	0xB086    SUB	SP, SP, #24
0xA3B2	0xF8CDE000  STR	LR, [SP, #0]
0xA3B6	0xB286    UXTH	R6, R0
; ch end address is: 0 (R0)
; ch start address is: 24 (R6)
;__Lib_TFT.c, 1159 :: 		
;__Lib_TFT.c, 1161 :: 		
; x start address is: 20 (R5)
0xA3B8	0xF2400500  MOVW	R5, #0
;__Lib_TFT.c, 1162 :: 		
0xA3BC	0x2100    MOVS	R1, #0
0xA3BE	0xF88D1015  STRB	R1, [SP, #21]
;__Lib_TFT.c, 1168 :: 		
0xA3C2	0x496E    LDR	R1, [PC, #440]
0xA3C4	0x7809    LDRB	R1, [R1, #0]
0xA3C6	0xB949    CBNZ	R1, L___Lib_TFT__TFT_Write_Char162
;__Lib_TFT.c, 1169 :: 		
0xA3C8	0x496D    LDR	R1, [PC, #436]
0xA3CA	0x2200    MOVS	R2, #0
0xA3CC	0x4608    MOV	R0, R1
0xA3CE	0xF2400100  MOVW	R1, #0
0xA3D2	0xF003FD6D  BL	_TFT_Set_Font+0
;__Lib_TFT.c, 1170 :: 		
0xA3D6	0x2201    MOVS	R2, #1
0xA3D8	0x4968    LDR	R1, [PC, #416]
0xA3DA	0x700A    STRB	R2, [R1, #0]
;__Lib_TFT.c, 1171 :: 		
L___Lib_TFT__TFT_Write_Char162:
;__Lib_TFT.c, 1173 :: 		
0xA3DC	0x4969    LDR	R1, [PC, #420]
0xA3DE	0x8809    LDRH	R1, [R1, #0]
0xA3E0	0x428E    CMP	R6, R1
0xA3E2	0xD200    BCS	L___Lib_TFT__TFT_Write_Char163
; ch end address is: 24 (R6)
; x end address is: 20 (R5)
;__Lib_TFT.c, 1174 :: 		
0xA3E4	0xE0C6    B	L_end__TFT_Write_Char
L___Lib_TFT__TFT_Write_Char163:
;__Lib_TFT.c, 1175 :: 		
; x start address is: 20 (R5)
; ch start address is: 24 (R6)
0xA3E6	0x4968    LDR	R1, [PC, #416]
0xA3E8	0x8809    LDRH	R1, [R1, #0]
0xA3EA	0x428E    CMP	R6, R1
0xA3EC	0xD900    BLS	L___Lib_TFT__TFT_Write_Char164
; ch end address is: 24 (R6)
; x end address is: 20 (R5)
;__Lib_TFT.c, 1176 :: 		
0xA3EE	0xE0C1    B	L_end__TFT_Write_Char
L___Lib_TFT__TFT_Write_Char164:
;__Lib_TFT.c, 1179 :: 		
; x start address is: 20 (R5)
; ch start address is: 24 (R6)
0xA3F0	0x4964    LDR	R1, [PC, #400]
0xA3F2	0x8809    LDRH	R1, [R1, #0]
0xA3F4	0x1A71    SUB	R1, R6, R1
0xA3F6	0xB289    UXTH	R1, R1
; ch end address is: 24 (R6)
0xA3F8	0x008A    LSLS	R2, R1, #2
0xA3FA	0xB292    UXTH	R2, R2
;__Lib_TFT.c, 1180 :: 		
0xA3FC	0x4C63    LDR	R4, [PC, #396]
0xA3FE	0x6821    LDR	R1, [R4, #0]
0xA400	0x3108    ADDS	R1, #8
0xA402	0x188B    ADDS	R3, R1, R2
;__Lib_TFT.c, 1181 :: 		
0xA404	0x7819    LDRB	R1, [R3, #0]
0xA406	0xF88D1014  STRB	R1, [SP, #20]
;__Lib_TFT.c, 1183 :: 		
0xA40A	0x1C59    ADDS	R1, R3, #1
0xA40C	0x7809    LDRB	R1, [R1, #0]
0xA40E	0xB2CA    UXTB	R2, R1
0xA410	0x1C99    ADDS	R1, R3, #2
0xA412	0x7809    LDRB	R1, [R1, #0]
0xA414	0x0209    LSLS	R1, R1, #8
0xA416	0x1852    ADDS	R2, R2, R1
0xA418	0x1CD9    ADDS	R1, R3, #3
0xA41A	0x7809    LDRB	R1, [R1, #0]
0xA41C	0x0409    LSLS	R1, R1, #16
0xA41E	0x1852    ADDS	R2, R2, R1
;__Lib_TFT.c, 1185 :: 		
0xA420	0x4621    MOV	R1, R4
0xA422	0x6809    LDR	R1, [R1, #0]
0xA424	0x1889    ADDS	R1, R1, R2
0xA426	0x9104    STR	R1, [SP, #16]
;__Lib_TFT.c, 1187 :: 		
0xA428	0x4959    LDR	R1, [PC, #356]
0xA42A	0x7809    LDRB	R1, [R1, #0]
0xA42C	0x2900    CMP	R1, #0
0xA42E	0xD150    BNE	L___Lib_TFT__TFT_Write_Char165
;__Lib_TFT.c, 1188 :: 		
0xA430	0x4958    LDR	R1, [PC, #352]
; y start address is: 12 (R3)
0xA432	0x880B    LDRH	R3, [R1, #0]
;__Lib_TFT.c, 1189 :: 		
; yCnt start address is: 8 (R2)
0xA434	0x2200    MOVS	R2, #0
; x end address is: 20 (R5)
; y end address is: 12 (R3)
; yCnt end address is: 8 (R2)
0xA436	0xB2A8    UXTH	R0, R5
L___Lib_TFT__TFT_Write_Char166:
; yCnt start address is: 8 (R2)
; y start address is: 12 (R3)
; x start address is: 0 (R0)
0xA438	0x4957    LDR	R1, [PC, #348]
0xA43A	0x8809    LDRH	R1, [R1, #0]
0xA43C	0x428A    CMP	R2, R1
0xA43E	0xD244    BCS	L___Lib_TFT__TFT_Write_Char167
; x end address is: 0 (R0)
;__Lib_TFT.c, 1190 :: 		
0xA440	0x4956    LDR	R1, [PC, #344]
; x start address is: 20 (R5)
0xA442	0x880D    LDRH	R5, [R1, #0]
;__Lib_TFT.c, 1191 :: 		
; mask start address is: 24 (R6)
0xA444	0x2600    MOVS	R6, #0
;__Lib_TFT.c, 1192 :: 		
0xA446	0x2100    MOVS	R1, #0
0xA448	0xF88D100C  STRB	R1, [SP, #12]
; x end address is: 20 (R5)
; mask end address is: 24 (R6)
; y end address is: 12 (R3)
; yCnt end address is: 8 (R2)
0xA44C	0xB2D0    UXTB	R0, R2
L___Lib_TFT__TFT_Write_Char169:
; mask start address is: 24 (R6)
; x start address is: 20 (R5)
; y start address is: 12 (R3)
; yCnt start address is: 0 (R0)
0xA44E	0xF89D2014  LDRB	R2, [SP, #20]
0xA452	0xF89D100C  LDRB	R1, [SP, #12]
0xA456	0x4291    CMP	R1, R2
0xA458	0xD231    BCS	L___Lib_TFT__TFT_Write_Char170
;__Lib_TFT.c, 1193 :: 		
0xA45A	0xB946    CBNZ	R6, L___Lib_TFT__TFT_Write_Char955
; mask end address is: 24 (R6)
;__Lib_TFT.c, 1194 :: 		
0xA45C	0x9904    LDR	R1, [SP, #16]
0xA45E	0x7809    LDRB	R1, [R1, #0]
0xA460	0xF88D1015  STRB	R1, [SP, #21]
0xA464	0x9904    LDR	R1, [SP, #16]
0xA466	0x1C49    ADDS	R1, R1, #1
0xA468	0x9104    STR	R1, [SP, #16]
;__Lib_TFT.c, 1195 :: 		
; mask start address is: 8 (R2)
0xA46A	0x2201    MOVS	R2, #1
; mask end address is: 8 (R2)
;__Lib_TFT.c, 1196 :: 		
0xA46C	0xE000    B	L___Lib_TFT__TFT_Write_Char172
L___Lib_TFT__TFT_Write_Char955:
;__Lib_TFT.c, 1193 :: 		
0xA46E	0xB2F2    UXTB	R2, R6
;__Lib_TFT.c, 1196 :: 		
L___Lib_TFT__TFT_Write_Char172:
;__Lib_TFT.c, 1198 :: 		
; mask start address is: 8 (R2)
0xA470	0xF89D1015  LDRB	R1, [SP, #21]
0xA474	0x4011    ANDS	R1, R2
0xA476	0xB2C9    UXTB	R1, R1
0xA478	0xB1B1    CBZ	R1, L___Lib_TFT__TFT_Write_Char173
;__Lib_TFT.c, 1199 :: 		
0xA47A	0x4949    LDR	R1, [PC, #292]
0xA47C	0x8809    LDRH	R1, [R1, #0]
0xA47E	0xF88D2004  STRB	R2, [SP, #4]
0xA482	0xF88D0005  STRB	R0, [SP, #5]
0xA486	0xF8AD3006  STRH	R3, [SP, #6]
0xA48A	0xF8AD5008  STRH	R5, [SP, #8]
0xA48E	0xB28A    UXTH	R2, R1
0xA490	0xB219    SXTH	R1, R3
0xA492	0xB228    SXTH	R0, R5
0xA494	0xF7FAFA98  BL	_TFT_Dot+0
0xA498	0xF8BD5008  LDRH	R5, [SP, #8]
0xA49C	0xF8BD3006  LDRH	R3, [SP, #6]
0xA4A0	0xF89D0005  LDRB	R0, [SP, #5]
0xA4A4	0xF89D2004  LDRB	R2, [SP, #4]
;__Lib_TFT.c, 1200 :: 		
L___Lib_TFT__TFT_Write_Char173:
;__Lib_TFT.c, 1202 :: 		
0xA4A8	0x1C6C    ADDS	R4, R5, #1
0xA4AA	0xB2A4    UXTH	R4, R4
; x end address is: 20 (R5)
; x start address is: 16 (R4)
;__Lib_TFT.c, 1203 :: 		
0xA4AC	0x0051    LSLS	R1, R2, #1
; mask end address is: 8 (R2)
; mask start address is: 24 (R6)
0xA4AE	0xB2CE    UXTB	R6, R1
;__Lib_TFT.c, 1192 :: 		
0xA4B0	0xF89D100C  LDRB	R1, [SP, #12]
0xA4B4	0x1C49    ADDS	R1, R1, #1
0xA4B6	0xF88D100C  STRB	R1, [SP, #12]
;__Lib_TFT.c, 1204 :: 		
; x end address is: 16 (R4)
; mask end address is: 24 (R6)
0xA4BA	0xB2A5    UXTH	R5, R4
0xA4BC	0xE7C7    B	L___Lib_TFT__TFT_Write_Char169
L___Lib_TFT__TFT_Write_Char170:
;__Lib_TFT.c, 1205 :: 		
; x start address is: 20 (R5)
0xA4BE	0x1C5B    ADDS	R3, R3, #1
0xA4C0	0xB29B    UXTH	R3, R3
;__Lib_TFT.c, 1189 :: 		
0xA4C2	0x1C42    ADDS	R2, R0, #1
0xA4C4	0xB2D2    UXTB	R2, R2
; yCnt end address is: 0 (R0)
; yCnt start address is: 8 (R2)
;__Lib_TFT.c, 1206 :: 		
0xA4C6	0xB2A8    UXTH	R0, R5
; x end address is: 20 (R5)
; y end address is: 12 (R3)
; yCnt end address is: 8 (R2)
0xA4C8	0xE7B6    B	L___Lib_TFT__TFT_Write_Char166
L___Lib_TFT__TFT_Write_Char167:
;__Lib_TFT.c, 1208 :: 		
; x start address is: 0 (R0)
0xA4CA	0x1C42    ADDS	R2, R0, #1
; x end address is: 0 (R0)
0xA4CC	0x4933    LDR	R1, [PC, #204]
0xA4CE	0x800A    STRH	R2, [R1, #0]
;__Lib_TFT.c, 1209 :: 		
0xA4D0	0xE050    B	L___Lib_TFT__TFT_Write_Char174
L___Lib_TFT__TFT_Write_Char165:
;__Lib_TFT.c, 1210 :: 		
; x start address is: 20 (R5)
0xA4D2	0x4932    LDR	R1, [PC, #200]
; y start address is: 12 (R3)
0xA4D4	0x880B    LDRH	R3, [R1, #0]
;__Lib_TFT.c, 1211 :: 		
; yCnt start address is: 8 (R2)
0xA4D6	0x2200    MOVS	R2, #0
; x end address is: 20 (R5)
; y end address is: 12 (R3)
; yCnt end address is: 8 (R2)
0xA4D8	0xB2A8    UXTH	R0, R5
L___Lib_TFT__TFT_Write_Char175:
; yCnt start address is: 8 (R2)
; y start address is: 12 (R3)
; x start address is: 0 (R0)
0xA4DA	0x492F    LDR	R1, [PC, #188]
0xA4DC	0x8809    LDRH	R1, [R1, #0]
0xA4DE	0x428A    CMP	R2, R1
0xA4E0	0xD245    BCS	L___Lib_TFT__TFT_Write_Char176
; x end address is: 0 (R0)
;__Lib_TFT.c, 1212 :: 		
0xA4E2	0x492C    LDR	R1, [PC, #176]
; x start address is: 20 (R5)
0xA4E4	0x880D    LDRH	R5, [R1, #0]
;__Lib_TFT.c, 1213 :: 		
; mask start address is: 24 (R6)
0xA4E6	0x2600    MOVS	R6, #0
;__Lib_TFT.c, 1214 :: 		
0xA4E8	0x2100    MOVS	R1, #0
0xA4EA	0xF88D100C  STRB	R1, [SP, #12]
; x end address is: 20 (R5)
; mask end address is: 24 (R6)
; y end address is: 12 (R3)
; yCnt end address is: 8 (R2)
0xA4EE	0xB2D0    UXTB	R0, R2
0xA4F0	0xB2AC    UXTH	R4, R5
L___Lib_TFT__TFT_Write_Char178:
; mask start address is: 24 (R6)
; x start address is: 16 (R4)
; y start address is: 12 (R3)
; yCnt start address is: 0 (R0)
0xA4F2	0xF89D2014  LDRB	R2, [SP, #20]
0xA4F6	0xF89D100C  LDRB	R1, [SP, #12]
0xA4FA	0x4291    CMP	R1, R2
0xA4FC	0xD231    BCS	L___Lib_TFT__TFT_Write_Char179
;__Lib_TFT.c, 1215 :: 		
0xA4FE	0xB946    CBNZ	R6, L___Lib_TFT__TFT_Write_Char956
; mask end address is: 24 (R6)
;__Lib_TFT.c, 1216 :: 		
0xA500	0x9904    LDR	R1, [SP, #16]
0xA502	0x7809    LDRB	R1, [R1, #0]
0xA504	0xF88D1015  STRB	R1, [SP, #21]
0xA508	0x9904    LDR	R1, [SP, #16]
0xA50A	0x1C49    ADDS	R1, R1, #1
0xA50C	0x9104    STR	R1, [SP, #16]
;__Lib_TFT.c, 1217 :: 		
; mask start address is: 8 (R2)
0xA50E	0x2201    MOVS	R2, #1
; mask end address is: 8 (R2)
;__Lib_TFT.c, 1218 :: 		
0xA510	0xE000    B	L___Lib_TFT__TFT_Write_Char181
L___Lib_TFT__TFT_Write_Char956:
;__Lib_TFT.c, 1215 :: 		
0xA512	0xB2F2    UXTB	R2, R6
;__Lib_TFT.c, 1218 :: 		
L___Lib_TFT__TFT_Write_Char181:
;__Lib_TFT.c, 1220 :: 		
; mask start address is: 8 (R2)
0xA514	0xF89D1015  LDRB	R1, [SP, #21]
0xA518	0x4011    ANDS	R1, R2
0xA51A	0xB2C9    UXTB	R1, R1
0xA51C	0xB1B1    CBZ	R1, L___Lib_TFT__TFT_Write_Char182
;__Lib_TFT.c, 1221 :: 		
0xA51E	0x4920    LDR	R1, [PC, #128]
0xA520	0x8809    LDRH	R1, [R1, #0]
0xA522	0xF88D2004  STRB	R2, [SP, #4]
0xA526	0xF88D0005  STRB	R0, [SP, #5]
0xA52A	0xF8AD3006  STRH	R3, [SP, #6]
0xA52E	0xF8AD4008  STRH	R4, [SP, #8]
0xA532	0xB28A    UXTH	R2, R1
0xA534	0xB221    SXTH	R1, R4
0xA536	0xB218    SXTH	R0, R3
0xA538	0xF7FAFA46  BL	_TFT_Dot+0
0xA53C	0xF8BD4008  LDRH	R4, [SP, #8]
0xA540	0xF8BD3006  LDRH	R3, [SP, #6]
0xA544	0xF89D0005  LDRB	R0, [SP, #5]
0xA548	0xF89D2004  LDRB	R2, [SP, #4]
;__Lib_TFT.c, 1222 :: 		
L___Lib_TFT__TFT_Write_Char182:
;__Lib_TFT.c, 1224 :: 		
0xA54C	0x1E61    SUBS	R1, R4, #1
; x end address is: 16 (R4)
; x start address is: 20 (R5)
0xA54E	0xB28D    UXTH	R5, R1
;__Lib_TFT.c, 1225 :: 		
0xA550	0x0051    LSLS	R1, R2, #1
; mask end address is: 8 (R2)
; mask start address is: 24 (R6)
0xA552	0xB2CE    UXTB	R6, R1
;__Lib_TFT.c, 1214 :: 		
0xA554	0xF89D100C  LDRB	R1, [SP, #12]
0xA558	0x1C49    ADDS	R1, R1, #1
0xA55A	0xF88D100C  STRB	R1, [SP, #12]
;__Lib_TFT.c, 1226 :: 		
; x end address is: 20 (R5)
; mask end address is: 24 (R6)
0xA55E	0xB2AC    UXTH	R4, R5
0xA560	0xE7C7    B	L___Lib_TFT__TFT_Write_Char178
L___Lib_TFT__TFT_Write_Char179:
;__Lib_TFT.c, 1228 :: 		
; x start address is: 16 (R4)
0xA562	0x1C5B    ADDS	R3, R3, #1
0xA564	0xB29B    UXTH	R3, R3
;__Lib_TFT.c, 1211 :: 		
0xA566	0x1C41    ADDS	R1, R0, #1
; yCnt end address is: 0 (R0)
; yCnt start address is: 8 (R2)
0xA568	0xB2CA    UXTB	R2, R1
;__Lib_TFT.c, 1229 :: 		
0xA56A	0xB2A0    UXTH	R0, R4
; x end address is: 16 (R4)
; y end address is: 12 (R3)
; yCnt end address is: 8 (R2)
0xA56C	0xE7B5    B	L___Lib_TFT__TFT_Write_Char175
L___Lib_TFT__TFT_Write_Char176:
;__Lib_TFT.c, 1232 :: 		
; x start address is: 0 (R0)
0xA56E	0x1E42    SUBS	R2, R0, #1
; x end address is: 0 (R0)
0xA570	0x4908    LDR	R1, [PC, #32]
0xA572	0x800A    STRH	R2, [R1, #0]
;__Lib_TFT.c, 1233 :: 		
L___Lib_TFT__TFT_Write_Char174:
;__Lib_TFT.c, 1234 :: 		
L_end__TFT_Write_Char:
0xA574	0xF8DDE000  LDR	LR, [SP, #0]
0xA578	0xB006    ADD	SP, SP, #24
0xA57A	0x4770    BX	LR
0xA57C	0x03462000  	__Lib_TFT_FontInitialized+0
0xA580	0x7CB80001  	_TFT_defaultFont+0
0xA584	0x2E122000  	__Lib_TFT__fontFirstChar+0
0xA588	0x2E182000  	__Lib_TFT__fontLastChar+0
0xA58C	0x2E142000  	__Lib_TFT__font+0
0xA590	0x2E112000  	__Lib_TFT_FontOrientation+0
0xA594	0x2DFC2000  	__Lib_TFT_y_cord+0
0xA598	0x2E1A2000  	__Lib_TFT__fontHeight+0
0xA59C	0x2DF22000  	__Lib_TFT_x_cord+0
0xA5A0	0x2E1C2000  	__Lib_TFT_FontColor+0
; end of __Lib_TFT__TFT_Write_Char
_STMPE610_ClearInterruptFlagsAndFIFO:
;__Lib_STMPE610.c, 600 :: 		
0xE0AC	0xB081    SUB	SP, SP, #4
0xE0AE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_STMPE610.c, 601 :: 		
0xE0B2	0xF7FEFB3D  BL	_STMPE610_ResetFIFO+0
;__Lib_STMPE610.c, 602 :: 		
0xE0B6	0xF7FEFAE7  BL	_STMPE610_ClearInterrupts+0
;__Lib_STMPE610.c, 603 :: 		
L_end_STMPE610_ClearInterruptFlagsAndFIFO:
0xE0BA	0xF8DDE000  LDR	LR, [SP, #0]
0xE0BE	0xB001    ADD	SP, SP, #4
0xE0C0	0x4770    BX	LR
; end of _STMPE610_ClearInterruptFlagsAndFIFO
_TFT_Circle:
;__Lib_TFT.c, 857 :: 		
; radius start address is: 8 (R2)
0xE320	0xB087    SUB	SP, SP, #28
0xE322	0xF8CDE000  STR	LR, [SP, #0]
0xE326	0xF8AD0014  STRH	R0, [SP, #20]
0xE32A	0xB210    SXTH	R0, R2
0xE32C	0xF8AD1018  STRH	R1, [SP, #24]
; radius end address is: 8 (R2)
; radius start address is: 0 (R0)
;__Lib_TFT.c, 863 :: 		
0xE330	0x4BDC    LDR	R3, [PC, #880]
0xE332	0x781B    LDRB	R3, [R3, #0]
0xE334	0xB15B    CBZ	R3, L_TFT_Circle93
;__Lib_TFT.c, 864 :: 		
0xE336	0xF8AD0004  STRH	R0, [SP, #4]
0xE33A	0x2301    MOVS	R3, #1
0xE33C	0xB202    SXTH	R2, R0
0xE33E	0xF9BD1018  LDRSH	R1, [SP, #24]
0xE342	0xF9BD0014  LDRSH	R0, [SP, #20]
0xE346	0xF7F8FEF5  BL	__Lib_TFT__TFT_Circle_Fill+0
0xE34A	0xF9BD0004  LDRSH	R0, [SP, #4]
;__Lib_TFT.c, 865 :: 		
L_TFT_Circle93:
;__Lib_TFT.c, 868 :: 		
0xE34E	0x4DD6    LDR	R5, [PC, #856]
0xE350	0x882B    LDRH	R3, [R5, #0]
0xE352	0xF8AD3010  STRH	R3, [SP, #16]
;__Lib_TFT.c, 869 :: 		
0xE356	0x4CD5    LDR	R4, [PC, #852]
0xE358	0x7823    LDRB	R3, [R4, #0]
0xE35A	0xF88D3012  STRB	R3, [SP, #18]
;__Lib_TFT.c, 870 :: 		
0xE35E	0x4BD4    LDR	R3, [PC, #848]
0xE360	0x881B    LDRH	R3, [R3, #0]
0xE362	0x802B    STRH	R3, [R5, #0]
;__Lib_TFT.c, 871 :: 		
0xE364	0x2300    MOVS	R3, #0
0xE366	0x7023    STRB	R3, [R4, #0]
;__Lib_TFT.c, 873 :: 		
0xE368	0x0044    LSLS	R4, R0, #1
0xE36A	0xB224    SXTH	R4, R4
0xE36C	0x4BD1    LDR	R3, [PC, #836]
0xE36E	0x781B    LDRB	R3, [R3, #0]
0xE370	0x42A3    CMP	R3, R4
0xE372	0xDD0D    BLE	L_TFT_Circle94
;__Lib_TFT.c, 874 :: 		
0xE374	0x4BCF    LDR	R3, [PC, #828]
0xE376	0x781B    LDRB	R3, [R3, #0]
0xE378	0x18C3    ADDS	R3, R0, R3
0xE37A	0xB21B    SXTH	R3, R3
; radius end address is: 0 (R0)
0xE37C	0x105B    ASRS	R3, R3, #1
0xE37E	0xB21A    SXTH	R2, R3
0xE380	0x2301    MOVS	R3, #1
0xE382	0xF9BD1018  LDRSH	R1, [SP, #24]
0xE386	0xF9BD0014  LDRSH	R0, [SP, #20]
0xE38A	0xF7F8FED3  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 875 :: 		
0xE38E	0xE1A4    B	L_TFT_Circle95
L_TFT_Circle94:
;__Lib_TFT.c, 879 :: 		
; radius start address is: 0 (R0)
0xE390	0x2300    MOVS	R3, #0
0xE392	0xB21B    SXTH	R3, R3
0xE394	0xF8AD300C  STRH	R3, [SP, #12]
;__Lib_TFT.c, 880 :: 		
0xE398	0xF9BD4014  LDRSH	R4, [SP, #20]
0xE39C	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE3A0	0x1B1B    SUB	R3, R3, R4
0xE3A2	0xF8AD300E  STRH	R3, [SP, #14]
;__Lib_TFT.c, 881 :: 		
0xE3A6	0xF8AD000A  STRH	R0, [SP, #10]
;__Lib_TFT.c, 882 :: 		
0xE3AA	0x0043    LSLS	R3, R0, #1
0xE3AC	0xB21B    SXTH	R3, R3
; radius end address is: 0 (R0)
;__Lib_TFT.c, 883 :: 		
0xE3AE	0xF1C30303  RSB	R3, R3, #3
0xE3B2	0xF8AD3008  STRH	R3, [SP, #8]
;__Lib_TFT.c, 884 :: 		
L_TFT_Circle96:
0xE3B6	0xF9BD300A  LDRSH	R3, [SP, #10]
0xE3BA	0x1C5C    ADDS	R4, R3, #1
0xE3BC	0xB224    SXTH	R4, R4
0xE3BE	0xF9BD300C  LDRSH	R3, [SP, #12]
0xE3C2	0x42A3    CMP	R3, R4
0xE3C4	0xF2808189  BGE	L_TFT_Circle97
;__Lib_TFT.c, 886 :: 		
0xE3C8	0x4BBA    LDR	R3, [PC, #744]
0xE3CA	0x781B    LDRB	R3, [R3, #0]
0xE3CC	0xB903    CBNZ	R3, L_TFT_Circle98
;__Lib_TFT.c, 887 :: 		
0xE3CE	0xE184    B	L_TFT_Circle97
L_TFT_Circle98:
;__Lib_TFT.c, 888 :: 		
0xE3D0	0x4BB8    LDR	R3, [PC, #736]
0xE3D2	0x781B    LDRB	R3, [R3, #0]
0xE3D4	0x2B01    CMP	R3, #1
0xE3D6	0xF0408099  BNE	L_TFT_Circle99
;__Lib_TFT.c, 889 :: 		
0xE3DA	0x4BB5    LDR	R3, [PC, #724]
0xE3DC	0x881E    LDRH	R6, [R3, #0]
0xE3DE	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE3E2	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE3E6	0x191D    ADDS	R5, R3, R4
0xE3E8	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE3EC	0xF9BD3014  LDRSH	R3, [SP, #20]
0xE3F0	0x191B    ADDS	R3, R3, R4
0xE3F2	0xB2B2    UXTH	R2, R6
0xE3F4	0xB229    SXTH	R1, R5
0xE3F6	0xB218    SXTH	R0, R3
0xE3F8	0xF7F6FAE6  BL	_TFT_Dot+0
;__Lib_TFT.c, 890 :: 		
0xE3FC	0x4BAC    LDR	R3, [PC, #688]
0xE3FE	0x881E    LDRH	R6, [R3, #0]
0xE400	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE404	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE408	0x1B1D    SUB	R5, R3, R4
0xE40A	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE40E	0xF9BD3014  LDRSH	R3, [SP, #20]
0xE412	0x191B    ADDS	R3, R3, R4
0xE414	0xB2B2    UXTH	R2, R6
0xE416	0xB229    SXTH	R1, R5
0xE418	0xB218    SXTH	R0, R3
0xE41A	0xF7F6FAD5  BL	_TFT_Dot+0
;__Lib_TFT.c, 891 :: 		
0xE41E	0x4BA4    LDR	R3, [PC, #656]
0xE420	0x881E    LDRH	R6, [R3, #0]
0xE422	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE426	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE42A	0x191D    ADDS	R5, R3, R4
0xE42C	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE430	0xF9BD3014  LDRSH	R3, [SP, #20]
0xE434	0x1B1B    SUB	R3, R3, R4
0xE436	0xB2B2    UXTH	R2, R6
0xE438	0xB229    SXTH	R1, R5
0xE43A	0xB218    SXTH	R0, R3
0xE43C	0xF7F6FAC4  BL	_TFT_Dot+0
;__Lib_TFT.c, 892 :: 		
0xE440	0x4B9B    LDR	R3, [PC, #620]
0xE442	0x881E    LDRH	R6, [R3, #0]
0xE444	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE448	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE44C	0x1B1D    SUB	R5, R3, R4
0xE44E	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE452	0xF9BD3014  LDRSH	R3, [SP, #20]
0xE456	0x1B1B    SUB	R3, R3, R4
0xE458	0xB2B2    UXTH	R2, R6
0xE45A	0xB229    SXTH	R1, R5
0xE45C	0xB218    SXTH	R0, R3
0xE45E	0xF7F6FAB3  BL	_TFT_Dot+0
;__Lib_TFT.c, 893 :: 		
0xE462	0x4B93    LDR	R3, [PC, #588]
0xE464	0x881E    LDRH	R6, [R3, #0]
0xE466	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE46A	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE46E	0x191D    ADDS	R5, R3, R4
0xE470	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE474	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE478	0x191C    ADDS	R4, R3, R4
0xE47A	0xB224    SXTH	R4, R4
0xE47C	0xF9BD300E  LDRSH	R3, [SP, #14]
0xE480	0x1AE3    SUB	R3, R4, R3
0xE482	0xB2B2    UXTH	R2, R6
0xE484	0xB229    SXTH	R1, R5
0xE486	0xB218    SXTH	R0, R3
0xE488	0xF7F6FA9E  BL	_TFT_Dot+0
;__Lib_TFT.c, 894 :: 		
0xE48C	0x4B88    LDR	R3, [PC, #544]
0xE48E	0x881E    LDRH	R6, [R3, #0]
0xE490	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE494	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE498	0x1B1D    SUB	R5, R3, R4
0xE49A	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE49E	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE4A2	0x191C    ADDS	R4, R3, R4
0xE4A4	0xB224    SXTH	R4, R4
0xE4A6	0xF9BD300E  LDRSH	R3, [SP, #14]
0xE4AA	0x1AE3    SUB	R3, R4, R3
0xE4AC	0xB2B2    UXTH	R2, R6
0xE4AE	0xB229    SXTH	R1, R5
0xE4B0	0xB218    SXTH	R0, R3
0xE4B2	0xF7F6FA89  BL	_TFT_Dot+0
;__Lib_TFT.c, 895 :: 		
0xE4B6	0x4B7E    LDR	R3, [PC, #504]
0xE4B8	0x881E    LDRH	R6, [R3, #0]
0xE4BA	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE4BE	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE4C2	0x191D    ADDS	R5, R3, R4
0xE4C4	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE4C8	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE4CC	0x1B1C    SUB	R4, R3, R4
0xE4CE	0xB224    SXTH	R4, R4
0xE4D0	0xF9BD300E  LDRSH	R3, [SP, #14]
0xE4D4	0x1AE3    SUB	R3, R4, R3
0xE4D6	0xB2B2    UXTH	R2, R6
0xE4D8	0xB229    SXTH	R1, R5
0xE4DA	0xB218    SXTH	R0, R3
0xE4DC	0xF7F6FA74  BL	_TFT_Dot+0
;__Lib_TFT.c, 896 :: 		
0xE4E0	0x4B73    LDR	R3, [PC, #460]
0xE4E2	0x881E    LDRH	R6, [R3, #0]
0xE4E4	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE4E8	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE4EC	0x1B1D    SUB	R5, R3, R4
0xE4EE	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE4F2	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE4F6	0x1B1C    SUB	R4, R3, R4
0xE4F8	0xB224    SXTH	R4, R4
0xE4FA	0xF9BD300E  LDRSH	R3, [SP, #14]
0xE4FE	0x1AE3    SUB	R3, R4, R3
0xE500	0xB2B2    UXTH	R2, R6
0xE502	0xB229    SXTH	R1, R5
0xE504	0xB218    SXTH	R0, R3
0xE506	0xF7F6FA5F  BL	_TFT_Dot+0
;__Lib_TFT.c, 897 :: 		
0xE50A	0xE0AF    B	L_TFT_Circle100
L_TFT_Circle99:
;__Lib_TFT.c, 898 :: 		
0xE50C	0x4B69    LDR	R3, [PC, #420]
0xE50E	0x781B    LDRB	R3, [R3, #0]
0xE510	0x085E    LSRS	R6, R3, #1
0xE512	0xB2F6    UXTB	R6, R6
0xE514	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE518	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE51C	0x191D    ADDS	R5, R3, R4
0xE51E	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE522	0xF9BD3014  LDRSH	R3, [SP, #20]
0xE526	0x191B    ADDS	R3, R3, R4
0xE528	0xB2F2    UXTB	R2, R6
0xE52A	0xB229    SXTH	R1, R5
0xE52C	0xB218    SXTH	R0, R3
0xE52E	0x2301    MOVS	R3, #1
0xE530	0xF7F8FE00  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 899 :: 		
0xE534	0x4B5F    LDR	R3, [PC, #380]
0xE536	0x781B    LDRB	R3, [R3, #0]
0xE538	0x085E    LSRS	R6, R3, #1
0xE53A	0xB2F6    UXTB	R6, R6
0xE53C	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE540	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE544	0x1B1D    SUB	R5, R3, R4
0xE546	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE54A	0xF9BD3014  LDRSH	R3, [SP, #20]
0xE54E	0x191B    ADDS	R3, R3, R4
0xE550	0xB2F2    UXTB	R2, R6
0xE552	0xB229    SXTH	R1, R5
0xE554	0xB218    SXTH	R0, R3
0xE556	0x2301    MOVS	R3, #1
0xE558	0xF7F8FDEC  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 900 :: 		
0xE55C	0x4B55    LDR	R3, [PC, #340]
0xE55E	0x781B    LDRB	R3, [R3, #0]
0xE560	0x085E    LSRS	R6, R3, #1
0xE562	0xB2F6    UXTB	R6, R6
0xE564	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE568	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE56C	0x191D    ADDS	R5, R3, R4
0xE56E	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE572	0xF9BD3014  LDRSH	R3, [SP, #20]
0xE576	0x1B1B    SUB	R3, R3, R4
0xE578	0xB2F2    UXTB	R2, R6
0xE57A	0xB229    SXTH	R1, R5
0xE57C	0xB218    SXTH	R0, R3
0xE57E	0x2301    MOVS	R3, #1
0xE580	0xF7F8FDD8  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 901 :: 		
0xE584	0x4B4B    LDR	R3, [PC, #300]
0xE586	0x781B    LDRB	R3, [R3, #0]
0xE588	0x085E    LSRS	R6, R3, #1
0xE58A	0xB2F6    UXTB	R6, R6
0xE58C	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE590	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE594	0x1B1D    SUB	R5, R3, R4
0xE596	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE59A	0xF9BD3014  LDRSH	R3, [SP, #20]
0xE59E	0x1B1B    SUB	R3, R3, R4
0xE5A0	0xB2F2    UXTB	R2, R6
0xE5A2	0xB229    SXTH	R1, R5
0xE5A4	0xB218    SXTH	R0, R3
0xE5A6	0x2301    MOVS	R3, #1
0xE5A8	0xF7F8FDC4  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 902 :: 		
0xE5AC	0x4B41    LDR	R3, [PC, #260]
0xE5AE	0x781B    LDRB	R3, [R3, #0]
0xE5B0	0x085E    LSRS	R6, R3, #1
0xE5B2	0xB2F6    UXTB	R6, R6
0xE5B4	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE5B8	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE5BC	0x191D    ADDS	R5, R3, R4
0xE5BE	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE5C2	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE5C6	0x191C    ADDS	R4, R3, R4
0xE5C8	0xB224    SXTH	R4, R4
0xE5CA	0xF9BD300E  LDRSH	R3, [SP, #14]
0xE5CE	0x1AE3    SUB	R3, R4, R3
0xE5D0	0xB2F2    UXTB	R2, R6
0xE5D2	0xB229    SXTH	R1, R5
0xE5D4	0xB218    SXTH	R0, R3
0xE5D6	0x2301    MOVS	R3, #1
0xE5D8	0xF7F8FDAC  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 903 :: 		
0xE5DC	0x4B35    LDR	R3, [PC, #212]
0xE5DE	0x781B    LDRB	R3, [R3, #0]
0xE5E0	0x085E    LSRS	R6, R3, #1
0xE5E2	0xB2F6    UXTB	R6, R6
0xE5E4	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE5E8	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE5EC	0x1B1D    SUB	R5, R3, R4
0xE5EE	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE5F2	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE5F6	0x191C    ADDS	R4, R3, R4
0xE5F8	0xB224    SXTH	R4, R4
0xE5FA	0xF9BD300E  LDRSH	R3, [SP, #14]
0xE5FE	0x1AE3    SUB	R3, R4, R3
0xE600	0xB2F2    UXTB	R2, R6
0xE602	0xB229    SXTH	R1, R5
0xE604	0xB218    SXTH	R0, R3
0xE606	0x2301    MOVS	R3, #1
0xE608	0xF7F8FD94  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 904 :: 		
0xE60C	0x4B29    LDR	R3, [PC, #164]
0xE60E	0x781B    LDRB	R3, [R3, #0]
0xE610	0x085E    LSRS	R6, R3, #1
0xE612	0xB2F6    UXTB	R6, R6
0xE614	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE618	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE61C	0x191D    ADDS	R5, R3, R4
0xE61E	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE622	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE626	0x1B1C    SUB	R4, R3, R4
0xE628	0xB224    SXTH	R4, R4
0xE62A	0xF9BD300E  LDRSH	R3, [SP, #14]
0xE62E	0x1AE3    SUB	R3, R4, R3
0xE630	0xB2F2    UXTB	R2, R6
0xE632	0xB229    SXTH	R1, R5
0xE634	0xB218    SXTH	R0, R3
0xE636	0x2301    MOVS	R3, #1
0xE638	0xF7F8FD7C  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 905 :: 		
0xE63C	0x4B1D    LDR	R3, [PC, #116]
0xE63E	0x781B    LDRB	R3, [R3, #0]
0xE640	0x085E    LSRS	R6, R3, #1
0xE642	0xB2F6    UXTB	R6, R6
0xE644	0xF9BD400C  LDRSH	R4, [SP, #12]
0xE648	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE64C	0x1B1D    SUB	R5, R3, R4
0xE64E	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE652	0xF9BD3018  LDRSH	R3, [SP, #24]
0xE656	0x1B1C    SUB	R4, R3, R4
0xE658	0xB224    SXTH	R4, R4
0xE65A	0xF9BD300E  LDRSH	R3, [SP, #14]
0xE65E	0x1AE3    SUB	R3, R4, R3
0xE660	0xB2F2    UXTB	R2, R6
0xE662	0xB229    SXTH	R1, R5
0xE664	0xB218    SXTH	R0, R3
0xE666	0x2301    MOVS	R3, #1
0xE668	0xF7F8FD64  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 906 :: 		
L_TFT_Circle100:
;__Lib_TFT.c, 908 :: 		
0xE66C	0xF9BD3008  LDRSH	R3, [SP, #8]
0xE670	0x2B00    CMP	R3, #0
0xE672	0xDA0B    BGE	L_TFT_Circle101
;__Lib_TFT.c, 909 :: 		
0xE674	0xF9BD300C  LDRSH	R3, [SP, #12]
0xE678	0x009B    LSLS	R3, R3, #2
0xE67A	0xB21B    SXTH	R3, R3
0xE67C	0x1D9C    ADDS	R4, R3, #6
0xE67E	0xB224    SXTH	R4, R4
0xE680	0xF9BD3008  LDRSH	R3, [SP, #8]
0xE684	0x191B    ADDS	R3, R3, R4
0xE686	0xF8AD3008  STRH	R3, [SP, #8]
0xE68A	0xE020    B	L_TFT_Circle102
L_TFT_Circle101:
;__Lib_TFT.c, 911 :: 		
0xE68C	0xF9BD400A  LDRSH	R4, [SP, #10]
0xE690	0xF9BD300C  LDRSH	R3, [SP, #12]
0xE694	0x1B1B    SUB	R3, R3, R4
0xE696	0xB21B    SXTH	R3, R3
0xE698	0x009B    LSLS	R3, R3, #2
0xE69A	0xB21B    SXTH	R3, R3
0xE69C	0xF203040A  ADDW	R4, R3, #10
0xE6A0	0xF000B80A  B	#20
0xE6A4	0x2DE32000  	__Lib_TFT_BrushEnabled+0
0xE6A8	0x2DFE2000  	__Lib_TFT_BrushColor+0
0xE6AC	0x2E002000  	__Lib_TFT_GradientEnabled+0
0xE6B0	0x2E062000  	__Lib_TFT_PenColor+0
0xE6B4	0x2E102000  	__Lib_TFT_PenWidth+0
0xE6B8	0xB224    SXTH	R4, R4
0xE6BA	0xF9BD3008  LDRSH	R3, [SP, #8]
0xE6BE	0x191B    ADDS	R3, R3, R4
0xE6C0	0xF8AD3008  STRH	R3, [SP, #8]
;__Lib_TFT.c, 912 :: 		
0xE6C4	0xF9BD300A  LDRSH	R3, [SP, #10]
0xE6C8	0x1E5B    SUBS	R3, R3, #1
0xE6CA	0xF8AD300A  STRH	R3, [SP, #10]
;__Lib_TFT.c, 913 :: 		
L_TFT_Circle102:
;__Lib_TFT.c, 914 :: 		
0xE6CE	0xF9BD300C  LDRSH	R3, [SP, #12]
0xE6D2	0x1C5B    ADDS	R3, R3, #1
0xE6D4	0xF8AD300C  STRH	R3, [SP, #12]
;__Lib_TFT.c, 915 :: 		
0xE6D8	0xE66D    B	L_TFT_Circle96
L_TFT_Circle97:
;__Lib_TFT.c, 916 :: 		
L_TFT_Circle95:
;__Lib_TFT.c, 918 :: 		
0xE6DA	0xF8BD4010  LDRH	R4, [SP, #16]
0xE6DE	0x4B05    LDR	R3, [PC, #20]
0xE6E0	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 919 :: 		
0xE6E2	0xF89D4012  LDRB	R4, [SP, #18]
0xE6E6	0x4B04    LDR	R3, [PC, #16]
0xE6E8	0x701C    STRB	R4, [R3, #0]
;__Lib_TFT.c, 920 :: 		
L_end_TFT_Circle:
0xE6EA	0xF8DDE000  LDR	LR, [SP, #0]
0xE6EE	0xB007    ADD	SP, SP, #28
0xE6F0	0x4770    BX	LR
0xE6F2	0xBF00    NOP
0xE6F4	0x2DFE2000  	__Lib_TFT_BrushColor+0
0xE6F8	0x2E002000  	__Lib_TFT_GradientEnabled+0
; end of _TFT_Circle
__Lib_TFT__TFT_Circle_Fill:
;__Lib_TFT.c, 778 :: 		
; radius start address is: 8 (R2)
0x7134	0xB089    SUB	SP, SP, #36
0x7136	0xF8CDE000  STR	LR, [SP, #0]
0x713A	0xF8AD0018  STRH	R0, [SP, #24]
0x713E	0xF8AD101C  STRH	R1, [SP, #28]
0x7142	0xF88D3020  STRB	R3, [SP, #32]
; radius end address is: 8 (R2)
; radius start address is: 8 (R2)
;__Lib_TFT.c, 783 :: 		
0x7146	0x4EE2    LDR	R6, [PC, #904]
0x7148	0x7834    LDRB	R4, [R6, #0]
0x714A	0xF88D4014  STRB	R4, [SP, #20]
;__Lib_TFT.c, 784 :: 		
0x714E	0x4DE1    LDR	R5, [PC, #900]
0x7150	0x882C    LDRH	R4, [R5, #0]
0x7152	0xF8AD4016  STRH	R4, [SP, #22]
;__Lib_TFT.c, 785 :: 		
0x7156	0x2401    MOVS	R4, #1
0x7158	0x7034    STRB	R4, [R6, #0]
;__Lib_TFT.c, 786 :: 		
0x715A	0x4CDF    LDR	R4, [PC, #892]
0x715C	0x8824    LDRH	R4, [R4, #0]
0x715E	0x802C    STRH	R4, [R5, #0]
;__Lib_TFT.c, 788 :: 		
0x7160	0xF9BD4018  LDRSH	R4, [SP, #24]
0x7164	0x1AA4    SUB	R4, R4, R2
0x7166	0xB224    SXTH	R4, R4
0x7168	0x1C64    ADDS	R4, R4, #1
0x716A	0xF8AD400C  STRH	R4, [SP, #12]
;__Lib_TFT.c, 789 :: 		
0x716E	0xF9BD4018  LDRSH	R4, [SP, #24]
0x7172	0x18A4    ADDS	R4, R4, R2
0x7174	0xB224    SXTH	R4, R4
0x7176	0x1E64    SUBS	R4, R4, #1
0x7178	0xF8AD400E  STRH	R4, [SP, #14]
;__Lib_TFT.c, 790 :: 		
0x717C	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7180	0x1AA4    SUB	R4, R4, R2
0x7182	0xB224    SXTH	R4, R4
0x7184	0x1C64    ADDS	R4, R4, #1
0x7186	0xF8AD4010  STRH	R4, [SP, #16]
;__Lib_TFT.c, 791 :: 		
0x718A	0xF9BD401C  LDRSH	R4, [SP, #28]
0x718E	0x18A4    ADDS	R4, R4, R2
0x7190	0xB224    SXTH	R4, R4
0x7192	0x1E64    SUBS	R4, R4, #1
0x7194	0xF8AD4012  STRH	R4, [SP, #18]
;__Lib_TFT.c, 794 :: 		
0x7198	0x2400    MOVS	R4, #0
0x719A	0xB224    SXTH	R4, R4
0x719C	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 795 :: 		
0x71A0	0xF9BD5018  LDRSH	R5, [SP, #24]
0x71A4	0xF9BD401C  LDRSH	R4, [SP, #28]
0x71A8	0x1B64    SUB	R4, R4, R5
0x71AA	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT.c, 796 :: 		
0x71AE	0xF8AD2006  STRH	R2, [SP, #6]
;__Lib_TFT.c, 797 :: 		
0x71B2	0x0054    LSLS	R4, R2, #1
0x71B4	0xB224    SXTH	R4, R4
; radius end address is: 8 (R2)
;__Lib_TFT.c, 798 :: 		
0x71B6	0xF1C40403  RSB	R4, R4, #3
0x71BA	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 799 :: 		
L___Lib_TFT__TFT_Circle_Fill83:
0x71BE	0xF9BD4006  LDRSH	R4, [SP, #6]
0x71C2	0x1C65    ADDS	R5, R4, #1
0x71C4	0xB22D    SXTH	R5, R5
0x71C6	0xF9BD4008  LDRSH	R4, [SP, #8]
0x71CA	0x42AC    CMP	R4, R5
0x71CC	0xF280829B  BGE	L___Lib_TFT__TFT_Circle_Fill84
;__Lib_TFT.c, 800 :: 		
0x71D0	0x4CC2    LDR	R4, [PC, #776]
0x71D2	0x7824    LDRB	R4, [R4, #0]
0x71D4	0x2C00    CMP	R4, #0
0x71D6	0xF00081AE  BEQ	L___Lib_TFT__TFT_Circle_Fill85
;__Lib_TFT.c, 801 :: 		
0x71DA	0x4CC1    LDR	R4, [PC, #772]
0x71DC	0x7824    LDRB	R4, [R4, #0]
0x71DE	0x2C00    CMP	R4, #0
0x71E0	0xF04080CD  BNE	L___Lib_TFT__TFT_Circle_Fill86
;__Lib_TFT.c, 803 :: 		
0x71E4	0xF9BD5010  LDRSH	R5, [SP, #16]
0x71E8	0xF9BD4012  LDRSH	R4, [SP, #18]
0x71EC	0x1B67    SUB	R7, R4, R5
0x71EE	0xF9BD5006  LDRSH	R5, [SP, #6]
0x71F2	0xF9BD401C  LDRSH	R4, [SP, #28]
0x71F6	0x1965    ADDS	R5, R4, R5
0x71F8	0xB22D    SXTH	R5, R5
0x71FA	0xF9BD4010  LDRSH	R4, [SP, #16]
0x71FE	0x1B2E    SUB	R6, R5, R4
0x7200	0x4CB8    LDR	R4, [PC, #736]
0x7202	0x8825    LDRH	R5, [R4, #0]
0x7204	0x4CB8    LDR	R4, [PC, #736]
0x7206	0x8824    LDRH	R4, [R4, #0]
0x7208	0xB2BB    UXTH	R3, R7
0x720A	0xB2B2    UXTH	R2, R6
0x720C	0xB2A9    UXTH	R1, R5
0x720E	0xB2A0    UXTH	R0, R4
0x7210	0xF7FDFB7E  BL	_TFT_GetCurrentColor+0
0x7214	0x2101    MOVS	R1, #1
0x7216	0xF002FBCB  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 804 :: 		
0x721A	0xF9BD5006  LDRSH	R5, [SP, #6]
0x721E	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7222	0x1967    ADDS	R7, R4, R5
0x7224	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7228	0xF9BD4018  LDRSH	R4, [SP, #24]
0x722C	0x1B66    SUB	R6, R4, R5
0x722E	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7232	0xF9BD4018  LDRSH	R4, [SP, #24]
0x7236	0x1964    ADDS	R4, R4, R5
0x7238	0xB23A    SXTH	R2, R7
0x723A	0xB231    SXTH	R1, R6
0x723C	0xB220    SXTH	R0, R4
0x723E	0xF7FDFC07  BL	_TFT_H_Line+0
;__Lib_TFT.c, 806 :: 		
0x7242	0xF9BD5010  LDRSH	R5, [SP, #16]
0x7246	0xF9BD4012  LDRSH	R4, [SP, #18]
0x724A	0x1B67    SUB	R7, R4, R5
0x724C	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7250	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7254	0x1B65    SUB	R5, R4, R5
0x7256	0xB22D    SXTH	R5, R5
0x7258	0xF9BD4010  LDRSH	R4, [SP, #16]
0x725C	0x1B2E    SUB	R6, R5, R4
0x725E	0x4CA1    LDR	R4, [PC, #644]
0x7260	0x8825    LDRH	R5, [R4, #0]
0x7262	0x4CA1    LDR	R4, [PC, #644]
0x7264	0x8824    LDRH	R4, [R4, #0]
0x7266	0xB2BB    UXTH	R3, R7
0x7268	0xB2B2    UXTH	R2, R6
0x726A	0xB2A9    UXTH	R1, R5
0x726C	0xB2A0    UXTH	R0, R4
0x726E	0xF7FDFB4F  BL	_TFT_GetCurrentColor+0
0x7272	0x2101    MOVS	R1, #1
0x7274	0xF002FB9C  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 807 :: 		
0x7278	0xF9BD5006  LDRSH	R5, [SP, #6]
0x727C	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7280	0x1B67    SUB	R7, R4, R5
0x7282	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7286	0xF9BD4018  LDRSH	R4, [SP, #24]
0x728A	0x1B66    SUB	R6, R4, R5
0x728C	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7290	0xF9BD4018  LDRSH	R4, [SP, #24]
0x7294	0x1964    ADDS	R4, R4, R5
0x7296	0xB23A    SXTH	R2, R7
0x7298	0xB231    SXTH	R1, R6
0x729A	0xB220    SXTH	R0, R4
0x729C	0xF7FDFBD8  BL	_TFT_H_Line+0
;__Lib_TFT.c, 809 :: 		
0x72A0	0xF9BD5010  LDRSH	R5, [SP, #16]
0x72A4	0xF9BD4012  LDRSH	R4, [SP, #18]
0x72A8	0x1B67    SUB	R7, R4, R5
0x72AA	0xF9BD5008  LDRSH	R5, [SP, #8]
0x72AE	0xF9BD401C  LDRSH	R4, [SP, #28]
0x72B2	0x1965    ADDS	R5, R4, R5
0x72B4	0xB22D    SXTH	R5, R5
0x72B6	0xF9BD4010  LDRSH	R4, [SP, #16]
0x72BA	0x1B2E    SUB	R6, R5, R4
0x72BC	0x4C89    LDR	R4, [PC, #548]
0x72BE	0x8825    LDRH	R5, [R4, #0]
0x72C0	0x4C89    LDR	R4, [PC, #548]
0x72C2	0x8824    LDRH	R4, [R4, #0]
0x72C4	0xB2BB    UXTH	R3, R7
0x72C6	0xB2B2    UXTH	R2, R6
0x72C8	0xB2A9    UXTH	R1, R5
0x72CA	0xB2A0    UXTH	R0, R4
0x72CC	0xF7FDFB20  BL	_TFT_GetCurrentColor+0
0x72D0	0x2101    MOVS	R1, #1
0x72D2	0xF002FB6D  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 810 :: 		
0x72D6	0xF9BD5008  LDRSH	R5, [SP, #8]
0x72DA	0xF9BD401C  LDRSH	R4, [SP, #28]
0x72DE	0x1967    ADDS	R7, R4, R5
0x72E0	0xF9BD5006  LDRSH	R5, [SP, #6]
0x72E4	0xF9BD401C  LDRSH	R4, [SP, #28]
0x72E8	0x1B65    SUB	R5, R4, R5
0x72EA	0xB22D    SXTH	R5, R5
0x72EC	0xF9BD400A  LDRSH	R4, [SP, #10]
0x72F0	0x1B2E    SUB	R6, R5, R4
0x72F2	0xF9BD5006  LDRSH	R5, [SP, #6]
0x72F6	0xF9BD401C  LDRSH	R4, [SP, #28]
0x72FA	0x1965    ADDS	R5, R4, R5
0x72FC	0xB22D    SXTH	R5, R5
0x72FE	0xF9BD400A  LDRSH	R4, [SP, #10]
0x7302	0x1B2C    SUB	R4, R5, R4
0x7304	0xB23A    SXTH	R2, R7
0x7306	0xB231    SXTH	R1, R6
0x7308	0xB220    SXTH	R0, R4
0x730A	0xF7FDFBA1  BL	_TFT_H_Line+0
;__Lib_TFT.c, 812 :: 		
0x730E	0xF9BD5010  LDRSH	R5, [SP, #16]
0x7312	0xF9BD4012  LDRSH	R4, [SP, #18]
0x7316	0x1B67    SUB	R7, R4, R5
0x7318	0xF9BD5008  LDRSH	R5, [SP, #8]
0x731C	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7320	0x1B65    SUB	R5, R4, R5
0x7322	0xB22D    SXTH	R5, R5
0x7324	0xF9BD4010  LDRSH	R4, [SP, #16]
0x7328	0x1B2E    SUB	R6, R5, R4
0x732A	0x4C6E    LDR	R4, [PC, #440]
0x732C	0x8825    LDRH	R5, [R4, #0]
0x732E	0x4C6E    LDR	R4, [PC, #440]
0x7330	0x8824    LDRH	R4, [R4, #0]
0x7332	0xB2BB    UXTH	R3, R7
0x7334	0xB2B2    UXTH	R2, R6
0x7336	0xB2A9    UXTH	R1, R5
0x7338	0xB2A0    UXTH	R0, R4
0x733A	0xF7FDFAE9  BL	_TFT_GetCurrentColor+0
0x733E	0x2101    MOVS	R1, #1
0x7340	0xF002FB36  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 813 :: 		
0x7344	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7348	0xF9BD401C  LDRSH	R4, [SP, #28]
0x734C	0x1B67    SUB	R7, R4, R5
0x734E	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7352	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7356	0x1B65    SUB	R5, R4, R5
0x7358	0xB22D    SXTH	R5, R5
0x735A	0xF9BD400A  LDRSH	R4, [SP, #10]
0x735E	0x1B2E    SUB	R6, R5, R4
0x7360	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7364	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7368	0x1965    ADDS	R5, R4, R5
0x736A	0xB22D    SXTH	R5, R5
0x736C	0xF9BD400A  LDRSH	R4, [SP, #10]
0x7370	0x1B2C    SUB	R4, R5, R4
0x7372	0xB23A    SXTH	R2, R7
0x7374	0xB231    SXTH	R1, R6
0x7376	0xB220    SXTH	R0, R4
0x7378	0xF7FDFB6A  BL	_TFT_H_Line+0
;__Lib_TFT.c, 814 :: 		
0x737C	0xE0DA    B	L___Lib_TFT__TFT_Circle_Fill87
L___Lib_TFT__TFT_Circle_Fill86:
;__Lib_TFT.c, 816 :: 		
0x737E	0xF9BD500C  LDRSH	R5, [SP, #12]
0x7382	0xF9BD400E  LDRSH	R4, [SP, #14]
0x7386	0x1B67    SUB	R7, R4, R5
0x7388	0xF9BD5008  LDRSH	R5, [SP, #8]
0x738C	0xF9BD4018  LDRSH	R4, [SP, #24]
0x7390	0x1965    ADDS	R5, R4, R5
0x7392	0xB22D    SXTH	R5, R5
0x7394	0xF9BD400C  LDRSH	R4, [SP, #12]
0x7398	0x1B2E    SUB	R6, R5, R4
0x739A	0x4C52    LDR	R4, [PC, #328]
0x739C	0x8825    LDRH	R5, [R4, #0]
0x739E	0x4C52    LDR	R4, [PC, #328]
0x73A0	0x8824    LDRH	R4, [R4, #0]
0x73A2	0xB2BB    UXTH	R3, R7
0x73A4	0xB2B2    UXTH	R2, R6
0x73A6	0xB2A9    UXTH	R1, R5
0x73A8	0xB2A0    UXTH	R0, R4
0x73AA	0xF7FDFAB1  BL	_TFT_GetCurrentColor+0
0x73AE	0x2101    MOVS	R1, #1
0x73B0	0xF002FAFE  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 817 :: 		
0x73B4	0xF9BD5008  LDRSH	R5, [SP, #8]
0x73B8	0xF9BD4018  LDRSH	R4, [SP, #24]
0x73BC	0x1967    ADDS	R7, R4, R5
0x73BE	0xF9BD5006  LDRSH	R5, [SP, #6]
0x73C2	0xF9BD401C  LDRSH	R4, [SP, #28]
0x73C6	0x1B66    SUB	R6, R4, R5
0x73C8	0xF9BD5006  LDRSH	R5, [SP, #6]
0x73CC	0xF9BD401C  LDRSH	R4, [SP, #28]
0x73D0	0x1964    ADDS	R4, R4, R5
0x73D2	0xB23A    SXTH	R2, R7
0x73D4	0xB231    SXTH	R1, R6
0x73D6	0xB220    SXTH	R0, R4
0x73D8	0xF7FDFC36  BL	_TFT_V_Line+0
;__Lib_TFT.c, 819 :: 		
0x73DC	0xF9BD500C  LDRSH	R5, [SP, #12]
0x73E0	0xF9BD400E  LDRSH	R4, [SP, #14]
0x73E4	0x1B67    SUB	R7, R4, R5
0x73E6	0xF9BD5008  LDRSH	R5, [SP, #8]
0x73EA	0xF9BD4018  LDRSH	R4, [SP, #24]
0x73EE	0x1B65    SUB	R5, R4, R5
0x73F0	0xB22D    SXTH	R5, R5
0x73F2	0xF9BD400C  LDRSH	R4, [SP, #12]
0x73F6	0x1B2E    SUB	R6, R5, R4
0x73F8	0x4C3A    LDR	R4, [PC, #232]
0x73FA	0x8825    LDRH	R5, [R4, #0]
0x73FC	0x4C3A    LDR	R4, [PC, #232]
0x73FE	0x8824    LDRH	R4, [R4, #0]
0x7400	0xB2BB    UXTH	R3, R7
0x7402	0xB2B2    UXTH	R2, R6
0x7404	0xB2A9    UXTH	R1, R5
0x7406	0xB2A0    UXTH	R0, R4
0x7408	0xF7FDFA82  BL	_TFT_GetCurrentColor+0
0x740C	0x2101    MOVS	R1, #1
0x740E	0xF002FACF  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 820 :: 		
0x7412	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7416	0xF9BD4018  LDRSH	R4, [SP, #24]
0x741A	0x1B67    SUB	R7, R4, R5
0x741C	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7420	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7424	0x1B66    SUB	R6, R4, R5
0x7426	0xF9BD5006  LDRSH	R5, [SP, #6]
0x742A	0xF9BD401C  LDRSH	R4, [SP, #28]
0x742E	0x1964    ADDS	R4, R4, R5
0x7430	0xB23A    SXTH	R2, R7
0x7432	0xB231    SXTH	R1, R6
0x7434	0xB220    SXTH	R0, R4
0x7436	0xF7FDFC07  BL	_TFT_V_Line+0
;__Lib_TFT.c, 822 :: 		
0x743A	0xF9BD500C  LDRSH	R5, [SP, #12]
0x743E	0xF9BD400E  LDRSH	R4, [SP, #14]
0x7442	0x1B67    SUB	R7, R4, R5
0x7444	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7448	0xF9BD401C  LDRSH	R4, [SP, #28]
0x744C	0x1965    ADDS	R5, R4, R5
0x744E	0xB22D    SXTH	R5, R5
0x7450	0xF9BD400A  LDRSH	R4, [SP, #10]
0x7454	0x1B2D    SUB	R5, R5, R4
0x7456	0xB22D    SXTH	R5, R5
0x7458	0xF9BD400C  LDRSH	R4, [SP, #12]
0x745C	0x1B2E    SUB	R6, R5, R4
0x745E	0x4C21    LDR	R4, [PC, #132]
0x7460	0x8825    LDRH	R5, [R4, #0]
0x7462	0x4C21    LDR	R4, [PC, #132]
0x7464	0x8824    LDRH	R4, [R4, #0]
0x7466	0xB2BB    UXTH	R3, R7
0x7468	0xB2B2    UXTH	R2, R6
0x746A	0xB2A9    UXTH	R1, R5
0x746C	0xB2A0    UXTH	R0, R4
0x746E	0xF7FDFA4F  BL	_TFT_GetCurrentColor+0
0x7472	0x2101    MOVS	R1, #1
0x7474	0xF002FA9C  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 823 :: 		
0x7478	0xF9BD5006  LDRSH	R5, [SP, #6]
0x747C	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7480	0x1965    ADDS	R5, R4, R5
0x7482	0xB22D    SXTH	R5, R5
0x7484	0xF9BD400A  LDRSH	R4, [SP, #10]
0x7488	0x1B2F    SUB	R7, R5, R4
0x748A	0xF9BD5008  LDRSH	R5, [SP, #8]
0x748E	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7492	0x1B66    SUB	R6, R4, R5
0x7494	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7498	0xF9BD401C  LDRSH	R4, [SP, #28]
0x749C	0x1964    ADDS	R4, R4, R5
0x749E	0xB23A    SXTH	R2, R7
0x74A0	0xB231    SXTH	R1, R6
0x74A2	0xB220    SXTH	R0, R4
0x74A4	0xF7FDFBD0  BL	_TFT_V_Line+0
;__Lib_TFT.c, 825 :: 		
0x74A8	0xF9BD500C  LDRSH	R5, [SP, #12]
0x74AC	0xF9BD400E  LDRSH	R4, [SP, #14]
0x74B0	0x1B67    SUB	R7, R4, R5
0x74B2	0xF9BD5006  LDRSH	R5, [SP, #6]
0x74B6	0xF9BD401C  LDRSH	R4, [SP, #28]
0x74BA	0x1B65    SUB	R5, R4, R5
0x74BC	0xB22D    SXTH	R5, R5
0x74BE	0xF9BD400A  LDRSH	R4, [SP, #10]
0x74C2	0x1B2D    SUB	R5, R5, R4
0x74C4	0xB22D    SXTH	R5, R5
0x74C6	0xF9BD400C  LDRSH	R4, [SP, #12]
0x74CA	0x1B2E    SUB	R6, R5, R4
0x74CC	0x4C05    LDR	R4, [PC, #20]
0x74CE	0xE00D    B	#26
0x74D0	0x2E102000  	__Lib_TFT_PenWidth+0
0x74D4	0x2E062000  	__Lib_TFT_PenColor+0
0x74D8	0x2DFE2000  	__Lib_TFT_BrushColor+0
0x74DC	0x2E002000  	__Lib_TFT_GradientEnabled+0
0x74E0	0x2E012000  	__Lib_TFT_GradientOrientation+0
0x74E4	0x2E042000  	__Lib_TFT_GradColorTo+0
0x74E8	0x2E022000  	__Lib_TFT_GradColorFrom+0
0x74EC	0x8825    LDRH	R5, [R4, #0]
0x74EE	0x4C8C    LDR	R4, [PC, #560]
0x74F0	0x8824    LDRH	R4, [R4, #0]
0x74F2	0xB2BB    UXTH	R3, R7
0x74F4	0xB2B2    UXTH	R2, R6
0x74F6	0xB2A9    UXTH	R1, R5
0x74F8	0xB2A0    UXTH	R0, R4
0x74FA	0xF7FDFA09  BL	_TFT_GetCurrentColor+0
0x74FE	0x2101    MOVS	R1, #1
0x7500	0xF002FA56  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 826 :: 		
0x7504	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7508	0xF9BD401C  LDRSH	R4, [SP, #28]
0x750C	0x1B65    SUB	R5, R4, R5
0x750E	0xB22D    SXTH	R5, R5
0x7510	0xF9BD400A  LDRSH	R4, [SP, #10]
0x7514	0x1B2F    SUB	R7, R5, R4
0x7516	0xF9BD5008  LDRSH	R5, [SP, #8]
0x751A	0xF9BD401C  LDRSH	R4, [SP, #28]
0x751E	0x1B66    SUB	R6, R4, R5
0x7520	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7524	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7528	0x1964    ADDS	R4, R4, R5
0x752A	0xB23A    SXTH	R2, R7
0x752C	0xB231    SXTH	R1, R6
0x752E	0xB220    SXTH	R0, R4
0x7530	0xF7FDFB8A  BL	_TFT_V_Line+0
;__Lib_TFT.c, 827 :: 		
L___Lib_TFT__TFT_Circle_Fill87:
;__Lib_TFT.c, 828 :: 		
0x7534	0xE0BC    B	L___Lib_TFT__TFT_Circle_Fill88
L___Lib_TFT__TFT_Circle_Fill85:
;__Lib_TFT.c, 829 :: 		
0x7536	0xF89D4020  LDRB	R4, [SP, #32]
0x753A	0x2C00    CMP	R4, #0
0x753C	0xD158    BNE	L___Lib_TFT__TFT_Circle_Fill89
;__Lib_TFT.c, 831 :: 		
0x753E	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7542	0xF9BD4018  LDRSH	R4, [SP, #24]
0x7546	0x1967    ADDS	R7, R4, R5
0x7548	0xF9BD5006  LDRSH	R5, [SP, #6]
0x754C	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7550	0x1B66    SUB	R6, R4, R5
0x7552	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7556	0xF9BD401C  LDRSH	R4, [SP, #28]
0x755A	0x1964    ADDS	R4, R4, R5
0x755C	0xB23A    SXTH	R2, R7
0x755E	0xB231    SXTH	R1, R6
0x7560	0xB220    SXTH	R0, R4
0x7562	0xF7FDFB71  BL	_TFT_V_Line+0
;__Lib_TFT.c, 832 :: 		
0x7566	0xF9BD5008  LDRSH	R5, [SP, #8]
0x756A	0xF9BD4018  LDRSH	R4, [SP, #24]
0x756E	0x1B67    SUB	R7, R4, R5
0x7570	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7574	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7578	0x1B66    SUB	R6, R4, R5
0x757A	0xF9BD5006  LDRSH	R5, [SP, #6]
0x757E	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7582	0x1964    ADDS	R4, R4, R5
0x7584	0xB23A    SXTH	R2, R7
0x7586	0xB231    SXTH	R1, R6
0x7588	0xB220    SXTH	R0, R4
0x758A	0xF7FDFB5D  BL	_TFT_V_Line+0
;__Lib_TFT.c, 833 :: 		
0x758E	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7592	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7596	0x1965    ADDS	R5, R4, R5
0x7598	0xB22D    SXTH	R5, R5
0x759A	0xF9BD400A  LDRSH	R4, [SP, #10]
0x759E	0x1B2F    SUB	R7, R5, R4
0x75A0	0xF9BD5008  LDRSH	R5, [SP, #8]
0x75A4	0xF9BD401C  LDRSH	R4, [SP, #28]
0x75A8	0x1B66    SUB	R6, R4, R5
0x75AA	0xF9BD5008  LDRSH	R5, [SP, #8]
0x75AE	0xF9BD401C  LDRSH	R4, [SP, #28]
0x75B2	0x1964    ADDS	R4, R4, R5
0x75B4	0xB23A    SXTH	R2, R7
0x75B6	0xB231    SXTH	R1, R6
0x75B8	0xB220    SXTH	R0, R4
0x75BA	0xF7FDFB45  BL	_TFT_V_Line+0
;__Lib_TFT.c, 834 :: 		
0x75BE	0xF9BD5006  LDRSH	R5, [SP, #6]
0x75C2	0xF9BD401C  LDRSH	R4, [SP, #28]
0x75C6	0x1B65    SUB	R5, R4, R5
0x75C8	0xB22D    SXTH	R5, R5
0x75CA	0xF9BD400A  LDRSH	R4, [SP, #10]
0x75CE	0x1B2F    SUB	R7, R5, R4
0x75D0	0xF9BD5008  LDRSH	R5, [SP, #8]
0x75D4	0xF9BD401C  LDRSH	R4, [SP, #28]
0x75D8	0x1B66    SUB	R6, R4, R5
0x75DA	0xF9BD5008  LDRSH	R5, [SP, #8]
0x75DE	0xF9BD401C  LDRSH	R4, [SP, #28]
0x75E2	0x1964    ADDS	R4, R4, R5
0x75E4	0xB23A    SXTH	R2, R7
0x75E6	0xB231    SXTH	R1, R6
0x75E8	0xB220    SXTH	R0, R4
0x75EA	0xF7FDFB2D  BL	_TFT_V_Line+0
;__Lib_TFT.c, 835 :: 		
0x75EE	0xE05F    B	L___Lib_TFT__TFT_Circle_Fill90
L___Lib_TFT__TFT_Circle_Fill89:
;__Lib_TFT.c, 837 :: 		
0x75F0	0xF9BD5006  LDRSH	R5, [SP, #6]
0x75F4	0xF9BD401C  LDRSH	R4, [SP, #28]
0x75F8	0x1967    ADDS	R7, R4, R5
0x75FA	0xF9BD5008  LDRSH	R5, [SP, #8]
0x75FE	0xF9BD4018  LDRSH	R4, [SP, #24]
0x7602	0x1B66    SUB	R6, R4, R5
0x7604	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7608	0xF9BD4018  LDRSH	R4, [SP, #24]
0x760C	0x1964    ADDS	R4, R4, R5
0x760E	0xB23A    SXTH	R2, R7
0x7610	0xB231    SXTH	R1, R6
0x7612	0xB220    SXTH	R0, R4
0x7614	0xF7FDFA1C  BL	_TFT_H_Line+0
;__Lib_TFT.c, 838 :: 		
0x7618	0xF9BD5006  LDRSH	R5, [SP, #6]
0x761C	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7620	0x1B67    SUB	R7, R4, R5
0x7622	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7626	0xF9BD4018  LDRSH	R4, [SP, #24]
0x762A	0x1B66    SUB	R6, R4, R5
0x762C	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7630	0xF9BD4018  LDRSH	R4, [SP, #24]
0x7634	0x1964    ADDS	R4, R4, R5
0x7636	0xB23A    SXTH	R2, R7
0x7638	0xB231    SXTH	R1, R6
0x763A	0xB220    SXTH	R0, R4
0x763C	0xF7FDFA08  BL	_TFT_H_Line+0
;__Lib_TFT.c, 839 :: 		
0x7640	0xF9BD5008  LDRSH	R5, [SP, #8]
0x7644	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7648	0x1967    ADDS	R7, R4, R5
0x764A	0xF9BD5006  LDRSH	R5, [SP, #6]
0x764E	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7652	0x1B65    SUB	R5, R4, R5
0x7654	0xB22D    SXTH	R5, R5
0x7656	0xF9BD400A  LDRSH	R4, [SP, #10]
0x765A	0x1B2E    SUB	R6, R5, R4
0x765C	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7660	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7664	0x1965    ADDS	R5, R4, R5
0x7666	0xB22D    SXTH	R5, R5
0x7668	0xF9BD400A  LDRSH	R4, [SP, #10]
0x766C	0x1B2C    SUB	R4, R5, R4
0x766E	0xB23A    SXTH	R2, R7
0x7670	0xB231    SXTH	R1, R6
0x7672	0xB220    SXTH	R0, R4
0x7674	0xF7FDF9EC  BL	_TFT_H_Line+0
;__Lib_TFT.c, 840 :: 		
0x7678	0xF9BD5008  LDRSH	R5, [SP, #8]
0x767C	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7680	0x1B67    SUB	R7, R4, R5
0x7682	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7686	0xF9BD401C  LDRSH	R4, [SP, #28]
0x768A	0x1B65    SUB	R5, R4, R5
0x768C	0xB22D    SXTH	R5, R5
0x768E	0xF9BD400A  LDRSH	R4, [SP, #10]
0x7692	0x1B2E    SUB	R6, R5, R4
0x7694	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7698	0xF9BD401C  LDRSH	R4, [SP, #28]
0x769C	0x1965    ADDS	R5, R4, R5
0x769E	0xB22D    SXTH	R5, R5
0x76A0	0xF9BD400A  LDRSH	R4, [SP, #10]
0x76A4	0x1B2C    SUB	R4, R5, R4
0x76A6	0xB23A    SXTH	R2, R7
0x76A8	0xB231    SXTH	R1, R6
0x76AA	0xB220    SXTH	R0, R4
0x76AC	0xF7FDF9D0  BL	_TFT_H_Line+0
;__Lib_TFT.c, 841 :: 		
L___Lib_TFT__TFT_Circle_Fill90:
;__Lib_TFT.c, 842 :: 		
L___Lib_TFT__TFT_Circle_Fill88:
;__Lib_TFT.c, 844 :: 		
0x76B0	0xF9BD4004  LDRSH	R4, [SP, #4]
0x76B4	0x2C00    CMP	R4, #0
0x76B6	0xDA0B    BGE	L___Lib_TFT__TFT_Circle_Fill91
;__Lib_TFT.c, 845 :: 		
0x76B8	0xF9BD4008  LDRSH	R4, [SP, #8]
0x76BC	0x00A4    LSLS	R4, R4, #2
0x76BE	0xB224    SXTH	R4, R4
0x76C0	0x1DA5    ADDS	R5, R4, #6
0x76C2	0xB22D    SXTH	R5, R5
0x76C4	0xF9BD4004  LDRSH	R4, [SP, #4]
0x76C8	0x1964    ADDS	R4, R4, R5
0x76CA	0xF8AD4004  STRH	R4, [SP, #4]
0x76CE	0xE014    B	L___Lib_TFT__TFT_Circle_Fill92
L___Lib_TFT__TFT_Circle_Fill91:
;__Lib_TFT.c, 847 :: 		
0x76D0	0xF9BD5006  LDRSH	R5, [SP, #6]
0x76D4	0xF9BD4008  LDRSH	R4, [SP, #8]
0x76D8	0x1B64    SUB	R4, R4, R5
0x76DA	0xB224    SXTH	R4, R4
0x76DC	0x00A4    LSLS	R4, R4, #2
0x76DE	0xB224    SXTH	R4, R4
0x76E0	0xF204050A  ADDW	R5, R4, #10
0x76E4	0xB22D    SXTH	R5, R5
0x76E6	0xF9BD4004  LDRSH	R4, [SP, #4]
0x76EA	0x1964    ADDS	R4, R4, R5
0x76EC	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 848 :: 		
0x76F0	0xF9BD4006  LDRSH	R4, [SP, #6]
0x76F4	0x1E64    SUBS	R4, R4, #1
0x76F6	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 849 :: 		
L___Lib_TFT__TFT_Circle_Fill92:
;__Lib_TFT.c, 850 :: 		
0x76FA	0xF9BD4008  LDRSH	R4, [SP, #8]
0x76FE	0x1C64    ADDS	R4, R4, #1
0x7700	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 851 :: 		
0x7704	0xE55B    B	L___Lib_TFT__TFT_Circle_Fill83
L___Lib_TFT__TFT_Circle_Fill84:
;__Lib_TFT.c, 853 :: 		
0x7706	0xF89D5014  LDRB	R5, [SP, #20]
0x770A	0x4C06    LDR	R4, [PC, #24]
0x770C	0x7025    STRB	R5, [R4, #0]
;__Lib_TFT.c, 854 :: 		
0x770E	0xF8BD5016  LDRH	R5, [SP, #22]
0x7712	0x4C05    LDR	R4, [PC, #20]
0x7714	0x8025    STRH	R5, [R4, #0]
;__Lib_TFT.c, 855 :: 		
L_end__TFT_Circle_Fill:
0x7716	0xF8DDE000  LDR	LR, [SP, #0]
0x771A	0xB009    ADD	SP, SP, #36
0x771C	0x4770    BX	LR
0x771E	0xBF00    NOP
0x7720	0x2E022000  	__Lib_TFT_GradColorFrom+0
0x7724	0x2E102000  	__Lib_TFT_PenWidth+0
0x7728	0x2E062000  	__Lib_TFT_PenColor+0
; end of __Lib_TFT__TFT_Circle_Fill
_TFT_GetCurrentColor:
;__Lib_TFT.c, 230 :: 		
; range start address is: 12 (R3)
; distance start address is: 8 (R2)
; end_color start address is: 4 (R1)
; start_color start address is: 0 (R0)
0x4910	0xB083    SUB	SP, SP, #12
0x4912	0xF8CDE000  STR	LR, [SP, #0]
0x4916	0xFA1FF980  UXTH	R9, R0
0x491A	0xFA1FFA81  UXTH	R10, R1
0x491E	0xB297    UXTH	R7, R2
0x4920	0xFA1FF883  UXTH	R8, R3
; range end address is: 12 (R3)
; distance end address is: 8 (R2)
; end_color end address is: 4 (R1)
; start_color end address is: 0 (R0)
; start_color start address is: 36 (R9)
; end_color start address is: 40 (R10)
; distance start address is: 28 (R7)
; range start address is: 32 (R8)
;__Lib_TFT.c, 236 :: 		
0x4924	0xB917    CBNZ	R7, L_TFT_GetCurrentColor0
; end_color end address is: 40 (R10)
; distance end address is: 28 (R7)
; range end address is: 32 (R8)
;__Lib_TFT.c, 237 :: 		
0x4926	0xFA1FF089  UXTH	R0, R9
; start_color end address is: 36 (R9)
0x492A	0xE048    B	L_end_TFT_GetCurrentColor
L_TFT_GetCurrentColor0:
;__Lib_TFT.c, 238 :: 		
; range start address is: 32 (R8)
; distance start address is: 28 (R7)
; end_color start address is: 40 (R10)
; start_color start address is: 36 (R9)
0x492C	0x4547    CMP	R7, R8
0x492E	0xD102    BNE	L_TFT_GetCurrentColor2
; start_color end address is: 36 (R9)
; distance end address is: 28 (R7)
; range end address is: 32 (R8)
;__Lib_TFT.c, 239 :: 		
0x4930	0xFA1FF08A  UXTH	R0, R10
; end_color end address is: 40 (R10)
0x4934	0xE043    B	L_end_TFT_GetCurrentColor
L_TFT_GetCurrentColor2:
;__Lib_TFT.c, 241 :: 		
; range start address is: 32 (R8)
; distance start address is: 28 (R7)
; end_color start address is: 40 (R10)
; start_color start address is: 36 (R9)
0x4936	0xAE02    ADD	R6, SP, #8
0x4938	0xF10D0506  ADD	R5, SP, #6
0x493C	0xAC01    ADD	R4, SP, #4
0x493E	0x4633    MOV	R3, R6
0x4940	0x462A    MOV	R2, R5
0x4942	0x4621    MOV	R1, R4
0x4944	0xFA1FF089  UXTH	R0, R9
; start_color end address is: 36 (R9)
0x4948	0xF7FFF870  BL	_TFT_Color16bitToRGB+0
;__Lib_TFT.c, 242 :: 		
0x494C	0xF10D0609  ADD	R6, SP, #9
0x4950	0xF10D0507  ADD	R5, SP, #7
0x4954	0xF10D0405  ADD	R4, SP, #5
0x4958	0x4633    MOV	R3, R6
0x495A	0x462A    MOV	R2, R5
0x495C	0x4621    MOV	R1, R4
0x495E	0xFA1FF08A  UXTH	R0, R10
; end_color end address is: 40 (R10)
0x4962	0xF7FFF863  BL	_TFT_Color16bitToRGB+0
;__Lib_TFT.c, 244 :: 		
0x4966	0xB2BE    UXTH	R6, R7
0x4968	0xF89D5005  LDRB	R5, [SP, #5]
0x496C	0xF89D4004  LDRB	R4, [SP, #4]
0x4970	0x1B2C    SUB	R4, R5, R4
0x4972	0xB224    SXTH	R4, R4
0x4974	0x4374    MULS	R4, R6, R4
0x4976	0xFB94F5F8  SDIV	R5, R4, R8
0x497A	0xF89D4004  LDRB	R4, [SP, #4]
0x497E	0x1964    ADDS	R4, R4, R5
; red_current start address is: 0 (R0)
0x4980	0xB2E0    UXTB	R0, R4
;__Lib_TFT.c, 245 :: 		
0x4982	0xB2BE    UXTH	R6, R7
0x4984	0xF89D5007  LDRB	R5, [SP, #7]
0x4988	0xF89D4006  LDRB	R4, [SP, #6]
0x498C	0x1B2C    SUB	R4, R5, R4
0x498E	0xB224    SXTH	R4, R4
0x4990	0x4374    MULS	R4, R6, R4
0x4992	0xFB94F5F8  SDIV	R5, R4, R8
0x4996	0xF89D4006  LDRB	R4, [SP, #6]
0x499A	0x1964    ADDS	R4, R4, R5
; green_current start address is: 4 (R1)
0x499C	0xB2E1    UXTB	R1, R4
;__Lib_TFT.c, 246 :: 		
0x499E	0xB2BE    UXTH	R6, R7
; distance end address is: 28 (R7)
0x49A0	0xF89D5009  LDRB	R5, [SP, #9]
0x49A4	0xF89D4008  LDRB	R4, [SP, #8]
0x49A8	0x1B2C    SUB	R4, R5, R4
0x49AA	0xB224    SXTH	R4, R4
0x49AC	0x4374    MULS	R4, R6, R4
0x49AE	0xFB94F5F8  SDIV	R5, R4, R8
; range end address is: 32 (R8)
0x49B2	0xF89D4008  LDRB	R4, [SP, #8]
0x49B6	0x1964    ADDS	R4, R4, R5
;__Lib_TFT.c, 247 :: 		
0x49B8	0xB2E2    UXTB	R2, R4
; green_current end address is: 4 (R1)
; red_current end address is: 0 (R0)
0x49BA	0xF7FFF845  BL	_TFT_RGBToColor16bit+0
;__Lib_TFT.c, 249 :: 		
L_end_TFT_GetCurrentColor:
0x49BE	0xF8DDE000  LDR	LR, [SP, #0]
0x49C2	0xB003    ADD	SP, SP, #12
0x49C4	0x4770    BX	LR
; end of _TFT_GetCurrentColor
_TFT_Color16bitToRGB:
;__Lib_TFT.c, 223 :: 		
; rgb_blue start address is: 12 (R3)
; rgb_green start address is: 8 (R2)
; rgb_red start address is: 4 (R1)
; color start address is: 0 (R0)
0x3A2C	0xB081    SUB	SP, SP, #4
; rgb_blue end address is: 12 (R3)
; rgb_green end address is: 8 (R2)
; rgb_red end address is: 4 (R1)
; color end address is: 0 (R0)
; color start address is: 0 (R0)
; rgb_red start address is: 4 (R1)
; rgb_green start address is: 8 (R2)
; rgb_blue start address is: 12 (R3)
;__Lib_TFT.c, 224 :: 		
0x3A2E	0x0AC4    LSRS	R4, R0, #11
0x3A30	0xB2A4    UXTH	R4, R4
0x3A32	0x00E4    LSLS	R4, R4, #3
0x3A34	0x700C    STRB	R4, [R1, #0]
; rgb_red end address is: 4 (R1)
;__Lib_TFT.c, 225 :: 		
0x3A36	0x0944    LSRS	R4, R0, #5
0x3A38	0xB2A4    UXTH	R4, R4
0x3A3A	0x00A4    LSLS	R4, R4, #2
0x3A3C	0x7014    STRB	R4, [R2, #0]
; rgb_green end address is: 8 (R2)
;__Lib_TFT.c, 226 :: 		
0x3A3E	0x00C4    LSLS	R4, R0, #3
; color end address is: 0 (R0)
0x3A40	0x701C    STRB	R4, [R3, #0]
; rgb_blue end address is: 12 (R3)
;__Lib_TFT.c, 227 :: 		
L_end_TFT_Color16bitToRGB:
0x3A42	0xB001    ADD	SP, SP, #4
0x3A44	0x4770    BX	LR
; end of _TFT_Color16bitToRGB
_TFT_RGBToColor16bit:
;__Lib_TFT.c, 207 :: 		
; rgb_blue start address is: 8 (R2)
; rgb_green start address is: 4 (R1)
; rgb_red start address is: 0 (R0)
0x3A48	0xB081    SUB	SP, SP, #4
; rgb_blue end address is: 8 (R2)
; rgb_green end address is: 4 (R1)
; rgb_red end address is: 0 (R0)
; rgb_red start address is: 0 (R0)
; rgb_green start address is: 4 (R1)
; rgb_blue start address is: 8 (R2)
;__Lib_TFT.c, 210 :: 		
0x3A4A	0x08C3    LSRS	R3, R0, #3
0x3A4C	0xB2DB    UXTB	R3, R3
; rgb_red end address is: 0 (R0)
;__Lib_TFT.c, 211 :: 		
0x3A4E	0x02DC    LSLS	R4, R3, #11
0x3A50	0xB2A4    UXTH	R4, R4
;__Lib_TFT.c, 213 :: 		
0x3A52	0x088B    LSRS	R3, R1, #2
0x3A54	0xB2DB    UXTB	R3, R3
; rgb_green end address is: 4 (R1)
;__Lib_TFT.c, 214 :: 		
0x3A56	0x015B    LSLS	R3, R3, #5
0x3A58	0xB29B    UXTH	R3, R3
0x3A5A	0x431C    ORRS	R4, R3
0x3A5C	0xB2A4    UXTH	R4, R4
;__Lib_TFT.c, 217 :: 		
0x3A5E	0x08D3    LSRS	R3, R2, #3
0x3A60	0xB2DB    UXTB	R3, R3
; rgb_blue end address is: 8 (R2)
;__Lib_TFT.c, 219 :: 		
0x3A62	0xEA440303  ORR	R3, R4, R3, LSL #0
;__Lib_TFT.c, 220 :: 		
0x3A66	0xB298    UXTH	R0, R3
;__Lib_TFT.c, 221 :: 		
L_end_TFT_RGBToColor16bit:
0x3A68	0xB001    ADD	SP, SP, #4
0x3A6A	0x4770    BX	LR
; end of _TFT_RGBToColor16bit
_TFT_H_Line:
;__Lib_TFT.c, 570 :: 		
0x4A50	0xB086    SUB	SP, SP, #24
0x4A52	0xF8CDE000  STR	LR, [SP, #0]
0x4A56	0xF8AD000C  STRH	R0, [SP, #12]
0x4A5A	0xF8AD1010  STRH	R1, [SP, #16]
0x4A5E	0xF8AD2014  STRH	R2, [SP, #20]
;__Lib_TFT.c, 575 :: 		
0x4A62	0xF9BD4010  LDRSH	R4, [SP, #16]
0x4A66	0xF9BD300C  LDRSH	R3, [SP, #12]
0x4A6A	0x42A3    CMP	R3, R4
0x4A6C	0xDD07    BLE	L_TFT_H_Line12
;__Lib_TFT.c, 576 :: 		
; loc start address is: 0 (R0)
0x4A6E	0xF9BD000C  LDRSH	R0, [SP, #12]
;__Lib_TFT.c, 577 :: 		
0x4A72	0xF9BD3010  LDRSH	R3, [SP, #16]
0x4A76	0xF8AD300C  STRH	R3, [SP, #12]
;__Lib_TFT.c, 578 :: 		
0x4A7A	0xF8AD0010  STRH	R0, [SP, #16]
; loc end address is: 0 (R0)
;__Lib_TFT.c, 579 :: 		
L_TFT_H_Line12:
;__Lib_TFT.c, 581 :: 		
0x4A7E	0xF9BD300C  LDRSH	R3, [SP, #12]
0x4A82	0x2B00    CMP	R3, #0
0x4A84	0xDA04    BGE	L_TFT_H_Line13
;__Lib_TFT.c, 582 :: 		
0x4A86	0x2300    MOVS	R3, #0
0x4A88	0xB21B    SXTH	R3, R3
0x4A8A	0xF8AD300C  STRH	R3, [SP, #12]
0x4A8E	0xE006    B	L_TFT_H_Line14
L_TFT_H_Line13:
;__Lib_TFT.c, 583 :: 		
0x4A90	0x4B4B    LDR	R3, [PC, #300]
0x4A92	0x881C    LDRH	R4, [R3, #0]
0x4A94	0xF9BD300C  LDRSH	R3, [SP, #12]
0x4A98	0x42A3    CMP	R3, R4
0x4A9A	0xD300    BCC	L_TFT_H_Line15
;__Lib_TFT.c, 584 :: 		
0x4A9C	0xE08C    B	L_end_TFT_H_Line
L_TFT_H_Line15:
L_TFT_H_Line14:
;__Lib_TFT.c, 586 :: 		
0x4A9E	0xF9BD3010  LDRSH	R3, [SP, #16]
0x4AA2	0x2B00    CMP	R3, #0
0x4AA4	0xDA00    BGE	L_TFT_H_Line16
;__Lib_TFT.c, 587 :: 		
0x4AA6	0xE087    B	L_end_TFT_H_Line
L_TFT_H_Line16:
;__Lib_TFT.c, 588 :: 		
0x4AA8	0x4B45    LDR	R3, [PC, #276]
0x4AAA	0x881C    LDRH	R4, [R3, #0]
0x4AAC	0xF9BD3010  LDRSH	R3, [SP, #16]
0x4AB0	0x42A3    CMP	R3, R4
0x4AB2	0xD304    BCC	L_TFT_H_Line18
;__Lib_TFT.c, 589 :: 		
0x4AB4	0x4B42    LDR	R3, [PC, #264]
0x4AB6	0x881B    LDRH	R3, [R3, #0]
0x4AB8	0x1E5B    SUBS	R3, R3, #1
0x4ABA	0xF8AD3010  STRH	R3, [SP, #16]
L_TFT_H_Line18:
;__Lib_TFT.c, 591 :: 		
0x4ABE	0x2301    MOVS	R3, #1
0x4AC0	0xF88D3008  STRB	R3, [SP, #8]
L_TFT_H_Line19:
0x4AC4	0x4B3F    LDR	R3, [PC, #252]
0x4AC6	0x781C    LDRB	R4, [R3, #0]
0x4AC8	0xF89D3008  LDRB	R3, [SP, #8]
0x4ACC	0x42A3    CMP	R3, R4
0x4ACE	0xF2008073  BHI	L_TFT_H_Line20
;__Lib_TFT.c, 592 :: 		
; offset start address is: 0 (R0)
0x4AD2	0xF89D0008  LDRB	R0, [SP, #8]
;__Lib_TFT.c, 593 :: 		
0x4AD6	0xF0000301  AND	R3, R0, #1
0x4ADA	0xB21B    SXTH	R3, R3
0x4ADC	0xB91B    CBNZ	R3, L__TFT_H_Line943
;__Lib_TFT.c, 594 :: 		
0x4ADE	0x4241    RSBS	R1, R0, #0
0x4AE0	0xB209    SXTH	R1, R1
; offset end address is: 0 (R0)
; offset start address is: 4 (R1)
; offset end address is: 4 (R1)
0x4AE2	0xB208    SXTH	R0, R1
0x4AE4	0xE7FF    B	L_TFT_H_Line22
L__TFT_H_Line943:
;__Lib_TFT.c, 593 :: 		
;__Lib_TFT.c, 594 :: 		
L_TFT_H_Line22:
;__Lib_TFT.c, 595 :: 		
; offset start address is: 0 (R0)
0x4AE6	0x1044    ASRS	R4, R0, #1
0x4AE8	0xB224    SXTH	R4, R4
; offset end address is: 0 (R0)
; offset start address is: 4 (R1)
0x4AEA	0xB221    SXTH	R1, R4
;__Lib_TFT.c, 597 :: 		
0x4AEC	0xF9BD3014  LDRSH	R3, [SP, #20]
0x4AF0	0x191B    ADDS	R3, R3, R4
0x4AF2	0xB21B    SXTH	R3, R3
0x4AF4	0x2B00    CMP	R3, #0
0x4AF6	0xDB08    BLT	L__TFT_H_Line942
0x4AF8	0xF9BD3014  LDRSH	R3, [SP, #20]
0x4AFC	0x185C    ADDS	R4, R3, R1
0x4AFE	0xB224    SXTH	R4, R4
0x4B00	0x4B31    LDR	R3, [PC, #196]
0x4B02	0x881B    LDRH	R3, [R3, #0]
0x4B04	0x429C    CMP	R4, R3
0x4B06	0xD200    BCS	L__TFT_H_Line941
0x4B08	0xE000    B	L_TFT_H_Line25
; offset end address is: 4 (R1)
L__TFT_H_Line942:
L__TFT_H_Line941:
;__Lib_TFT.c, 598 :: 		
0x4B0A	0xE04F    B	L_TFT_H_Line21
L_TFT_H_Line25:
;__Lib_TFT.c, 600 :: 		
; offset start address is: 4 (R1)
0x4B0C	0x4B2F    LDR	R3, [PC, #188]
0x4B0E	0x781B    LDRB	R3, [R3, #0]
0x4B10	0x2B00    CMP	R3, #0
0x4B12	0xD135    BNE	L_TFT_H_Line26
;__Lib_TFT.c, 601 :: 		
0x4B14	0x2400    MOVS	R4, #0
0x4B16	0xB264    SXTB	R4, R4
0x4B18	0x4B2D    LDR	R3, [PC, #180]
0x4B1A	0x601C    STR	R4, [R3, #0]
;__Lib_TFT.c, 602 :: 		
0x4B1C	0xF007FDAC  BL	__Lib_TFT_Is_SSD1963_Set+0
0x4B20	0xB160    CBZ	R0, L_TFT_H_Line27
;__Lib_TFT.c, 603 :: 		
0x4B22	0xF9BD3014  LDRSH	R3, [SP, #20]
0x4B26	0x185C    ADDS	R4, R3, R1
; offset end address is: 4 (R1)
0x4B28	0xB2A3    UXTH	R3, R4
0x4B2A	0xF9BD2010  LDRSH	R2, [SP, #16]
0x4B2E	0xB2A1    UXTH	R1, R4
0x4B30	0xF9BD000C  LDRSH	R0, [SP, #12]
0x4B34	0x4C27    LDR	R4, [PC, #156]
0x4B36	0x6824    LDR	R4, [R4, #0]
0x4B38	0x47A0    BLX	R4
0x4B3A	0xE008    B	L_TFT_H_Line28
L_TFT_H_Line27:
;__Lib_TFT.c, 605 :: 		
; offset start address is: 4 (R1)
0x4B3C	0xF9BD3014  LDRSH	R3, [SP, #20]
0x4B40	0x185C    ADDS	R4, R3, R1
; offset end address is: 4 (R1)
0x4B42	0xB2A1    UXTH	R1, R4
0x4B44	0xF9BD000C  LDRSH	R0, [SP, #12]
0x4B48	0x4C23    LDR	R4, [PC, #140]
0x4B4A	0x6824    LDR	R4, [R4, #0]
0x4B4C	0x47A0    BLX	R4
L_TFT_H_Line28:
;__Lib_TFT.c, 606 :: 		
; loc start address is: 0 (R0)
0x4B4E	0xF9BD000C  LDRSH	R0, [SP, #12]
; loc end address is: 0 (R0)
L_TFT_H_Line29:
; loc start address is: 0 (R0)
0x4B52	0xF9BD3010  LDRSH	R3, [SP, #16]
0x4B56	0x4298    CMP	R0, R3
0x4B58	0xD80D    BHI	L_TFT_H_Line30
;__Lib_TFT.c, 607 :: 		
0x4B5A	0x4B20    LDR	R3, [PC, #128]
0x4B5C	0x881C    LDRH	R4, [R3, #0]
0x4B5E	0xF8AD0004  STRH	R0, [SP, #4]
0x4B62	0xB2A0    UXTH	R0, R4
0x4B64	0x4C1E    LDR	R4, [PC, #120]
0x4B66	0x6824    LDR	R4, [R4, #0]
0x4B68	0x47A0    BLX	R4
0x4B6A	0xF8BD0004  LDRH	R0, [SP, #4]
;__Lib_TFT.c, 606 :: 		
0x4B6E	0x1C41    ADDS	R1, R0, #1
0x4B70	0xB289    UXTH	R1, R1
; loc end address is: 0 (R0)
; loc start address is: 4 (R1)
;__Lib_TFT.c, 608 :: 		
0x4B72	0xB288    UXTH	R0, R1
; loc end address is: 4 (R1)
0x4B74	0xE7ED    B	L_TFT_H_Line29
L_TFT_H_Line30:
;__Lib_TFT.c, 609 :: 		
0x4B76	0x2401    MOVS	R4, #1
0x4B78	0xB264    SXTB	R4, R4
0x4B7A	0x4B15    LDR	R3, [PC, #84]
0x4B7C	0x601C    STR	R4, [R3, #0]
;__Lib_TFT.c, 610 :: 		
0x4B7E	0xE015    B	L_TFT_H_Line32
L_TFT_H_Line26:
;__Lib_TFT.c, 611 :: 		
; loc start address is: 0 (R0)
0x4B80	0xF9BD000C  LDRSH	R0, [SP, #12]
; loc end address is: 0 (R0)
L_TFT_H_Line33:
; loc start address is: 0 (R0)
0x4B84	0xF9BD3010  LDRSH	R3, [SP, #16]
0x4B88	0x4298    CMP	R0, R3
0x4B8A	0xD80F    BHI	L_TFT_H_Line34
;__Lib_TFT.c, 612 :: 		
0x4B8C	0x4B13    LDR	R3, [PC, #76]
0x4B8E	0x881B    LDRH	R3, [R3, #0]
0x4B90	0xF8AD0004  STRH	R0, [SP, #4]
0x4B94	0xB29A    UXTH	R2, R3
0x4B96	0xF9BD1014  LDRSH	R1, [SP, #20]
0x4B9A	0xB200    SXTH	R0, R0
0x4B9C	0xF7FFFF14  BL	_TFT_Dot+0
0x4BA0	0xF8BD0004  LDRH	R0, [SP, #4]
;__Lib_TFT.c, 611 :: 		
0x4BA4	0x1C43    ADDS	R3, R0, #1
; loc end address is: 0 (R0)
; loc start address is: 4 (R1)
0x4BA6	0xB299    UXTH	R1, R3
;__Lib_TFT.c, 613 :: 		
0x4BA8	0xB288    UXTH	R0, R1
; loc end address is: 4 (R1)
0x4BAA	0xE7EB    B	L_TFT_H_Line33
L_TFT_H_Line34:
;__Lib_TFT.c, 614 :: 		
L_TFT_H_Line32:
;__Lib_TFT.c, 615 :: 		
L_TFT_H_Line21:
;__Lib_TFT.c, 591 :: 		
0x4BAC	0xF89D3008  LDRB	R3, [SP, #8]
0x4BB0	0x1C5B    ADDS	R3, R3, #1
0x4BB2	0xF88D3008  STRB	R3, [SP, #8]
;__Lib_TFT.c, 615 :: 		
0x4BB6	0xE785    B	L_TFT_H_Line19
L_TFT_H_Line20:
;__Lib_TFT.c, 616 :: 		
L_end_TFT_H_Line:
0x4BB8	0xF8DDE000  LDR	LR, [SP, #0]
0x4BBC	0xB006    ADD	SP, SP, #24
0x4BBE	0x4770    BX	LR
0x4BC0	0x22262000  	_TFT_DISP_WIDTH+0
0x4BC4	0x2E102000  	__Lib_TFT_PenWidth+0
0x4BC8	0x22242000  	_TFT_DISP_HEIGHT+0
0x4BCC	0x03442000  	__Lib_TFT___no_acceleration+0
0x4BD0	0x82B44242  	TFT_CS+0
0x4BD4	0x045C2000  	_TFT_SSD1963_Set_Address_Ptr+0
0x4BD8	0x2DF82000  	_TFT_Set_Address_Ptr+0
0x4BDC	0x2E062000  	__Lib_TFT_PenColor+0
0x4BE0	0x04602000  	_TFT_Write_Data_Ptr+0
; end of _TFT_H_Line
_TFT_V_Line:
;__Lib_TFT.c, 620 :: 		
; x_pos start address is: 8 (R2)
; y_end start address is: 4 (R1)
; y_start start address is: 0 (R0)
0x4C48	0xB086    SUB	SP, SP, #24
0x4C4A	0xF8CDE000  STR	LR, [SP, #0]
0x4C4E	0xB20C    SXTH	R4, R1
0x4C50	0xB201    SXTH	R1, R0
; x_pos end address is: 8 (R2)
; y_end end address is: 4 (R1)
; y_start end address is: 0 (R0)
; y_start start address is: 4 (R1)
; y_end start address is: 16 (R4)
; x_pos start address is: 8 (R2)
;__Lib_TFT.c, 625 :: 		
0x4C52	0x42A1    CMP	R1, R4
0x4C54	0xDD04    BLE	L__TFT_V_Line947
;__Lib_TFT.c, 626 :: 		
; loc start address is: 0 (R0)
0x4C56	0xB288    UXTH	R0, R1
;__Lib_TFT.c, 627 :: 		
0x4C58	0xB221    SXTH	R1, R4
; y_end end address is: 16 (R4)
;__Lib_TFT.c, 628 :: 		
; y_end start address is: 12 (R3)
0x4C5A	0xB203    SXTH	R3, R0
; loc end address is: 0 (R0)
; y_start end address is: 4 (R1)
; y_end end address is: 12 (R3)
0x4C5C	0xB218    SXTH	R0, R3
;__Lib_TFT.c, 629 :: 		
0x4C5E	0xE000    B	L_TFT_V_Line36
L__TFT_V_Line947:
;__Lib_TFT.c, 625 :: 		
0x4C60	0xB220    SXTH	R0, R4
;__Lib_TFT.c, 629 :: 		
L_TFT_V_Line36:
;__Lib_TFT.c, 631 :: 		
; y_end start address is: 0 (R0)
; y_start start address is: 4 (R1)
0x4C62	0x2900    CMP	R1, #0
0x4C64	0xDA02    BGE	L_TFT_V_Line37
;__Lib_TFT.c, 632 :: 		
0x4C66	0x2100    MOVS	R1, #0
0x4C68	0xB209    SXTH	R1, R1
0x4C6A	0xE004    B	L_TFT_V_Line38
L_TFT_V_Line37:
;__Lib_TFT.c, 633 :: 		
0x4C6C	0x4B2F    LDR	R3, [PC, #188]
0x4C6E	0x881B    LDRH	R3, [R3, #0]
0x4C70	0x4299    CMP	R1, R3
0x4C72	0xD300    BCC	L_TFT_V_Line39
; x_pos end address is: 8 (R2)
; y_start end address is: 4 (R1)
; y_end end address is: 0 (R0)
;__Lib_TFT.c, 634 :: 		
0x4C74	0xE055    B	L_end_TFT_V_Line
L_TFT_V_Line39:
; y_end start address is: 0 (R0)
; y_start start address is: 4 (R1)
; y_start end address is: 4 (R1)
; x_pos start address is: 8 (R2)
L_TFT_V_Line38:
;__Lib_TFT.c, 636 :: 		
; y_start start address is: 4 (R1)
0x4C76	0x2800    CMP	R0, #0
0x4C78	0xDA00    BGE	L_TFT_V_Line40
; x_pos end address is: 8 (R2)
; y_start end address is: 4 (R1)
; y_end end address is: 0 (R0)
;__Lib_TFT.c, 637 :: 		
0x4C7A	0xE052    B	L_end_TFT_V_Line
L_TFT_V_Line40:
;__Lib_TFT.c, 638 :: 		
; y_end start address is: 0 (R0)
; y_start start address is: 4 (R1)
; x_pos start address is: 8 (R2)
0x4C7C	0x4B2B    LDR	R3, [PC, #172]
0x4C7E	0x881B    LDRH	R3, [R3, #0]
0x4C80	0x4298    CMP	R0, R3
0x4C82	0xD305    BCC	L__TFT_V_Line948
; y_end end address is: 0 (R0)
;__Lib_TFT.c, 639 :: 		
0x4C84	0x4B29    LDR	R3, [PC, #164]
0x4C86	0x881B    LDRH	R3, [R3, #0]
0x4C88	0x1E5B    SUBS	R3, R3, #1
; y_end start address is: 0 (R0)
0x4C8A	0xB218    SXTH	R0, R3
; y_end end address is: 0 (R0)
0x4C8C	0xB203    SXTH	R3, R0
0x4C8E	0xE000    B	L_TFT_V_Line42
L__TFT_V_Line948:
;__Lib_TFT.c, 638 :: 		
0x4C90	0xB203    SXTH	R3, R0
;__Lib_TFT.c, 639 :: 		
L_TFT_V_Line42:
;__Lib_TFT.c, 641 :: 		
; y_end start address is: 12 (R3)
; thick start address is: 0 (R0)
0x4C92	0x2001    MOVS	R0, #1
; x_pos end address is: 8 (R2)
; y_start end address is: 4 (R1)
; y_end end address is: 12 (R3)
; thick end address is: 0 (R0)
0x4C94	0xB215    SXTH	R5, R2
0x4C96	0xB20A    SXTH	R2, R1
0x4C98	0xB219    SXTH	R1, R3
L_TFT_V_Line43:
; thick start address is: 0 (R0)
; y_end start address is: 4 (R1)
; y_start start address is: 8 (R2)
; x_pos start address is: 20 (R5)
0x4C9A	0x4B25    LDR	R3, [PC, #148]
0x4C9C	0x781B    LDRB	R3, [R3, #0]
0x4C9E	0x4298    CMP	R0, R3
0x4CA0	0xD83F    BHI	L_TFT_V_Line44
;__Lib_TFT.c, 642 :: 		
; offset start address is: 16 (R4)
0x4CA2	0xB2C4    UXTB	R4, R0
;__Lib_TFT.c, 643 :: 		
0x4CA4	0xF0040301  AND	R3, R4, #1
0x4CA8	0xB21B    SXTH	R3, R3
0x4CAA	0xB913    CBNZ	R3, L__TFT_V_Line949
;__Lib_TFT.c, 644 :: 		
0x4CAC	0x4264    RSBS	R4, R4, #0
0x4CAE	0xB224    SXTH	R4, R4
; offset end address is: 16 (R4)
0x4CB0	0xE7FF    B	L_TFT_V_Line46
L__TFT_V_Line949:
;__Lib_TFT.c, 643 :: 		
;__Lib_TFT.c, 644 :: 		
L_TFT_V_Line46:
;__Lib_TFT.c, 645 :: 		
; offset start address is: 16 (R4)
0x4CB2	0x1063    ASRS	R3, R4, #1
0x4CB4	0xB21B    SXTH	R3, R3
; offset end address is: 16 (R4)
; offset start address is: 24 (R6)
0x4CB6	0xB21E    SXTH	R6, R3
;__Lib_TFT.c, 647 :: 		
0x4CB8	0x18EB    ADDS	R3, R5, R3
0x4CBA	0xB21B    SXTH	R3, R3
0x4CBC	0x2B00    CMP	R3, #0
0x4CBE	0xDB06    BLT	L__TFT_V_Line946
0x4CC0	0x19AC    ADDS	R4, R5, R6
0x4CC2	0xB224    SXTH	R4, R4
0x4CC4	0x4B1B    LDR	R3, [PC, #108]
0x4CC6	0x881B    LDRH	R3, [R3, #0]
0x4CC8	0x429C    CMP	R4, R3
0x4CCA	0xD200    BCS	L__TFT_V_Line945
0x4CCC	0xE000    B	L_TFT_V_Line49
; offset end address is: 24 (R6)
L__TFT_V_Line946:
L__TFT_V_Line945:
;__Lib_TFT.c, 648 :: 		
0x4CCE	0xE025    B	L_TFT_V_Line45
L_TFT_V_Line49:
;__Lib_TFT.c, 650 :: 		
; loc start address is: 28 (R7)
; offset start address is: 24 (R6)
0x4CD0	0xB297    UXTH	R7, R2
; loc end address is: 28 (R7)
; x_pos end address is: 20 (R5)
; y_start end address is: 8 (R2)
; y_end end address is: 4 (R1)
; thick end address is: 0 (R0)
L_TFT_V_Line50:
; loc start address is: 28 (R7)
; offset start address is: 24 (R6)
; offset end address is: 24 (R6)
; x_pos start address is: 20 (R5)
; y_start start address is: 8 (R2)
; y_end start address is: 4 (R1)
; thick start address is: 0 (R0)
0x4CD2	0x428F    CMP	R7, R1
0x4CD4	0xD822    BHI	L_TFT_V_Line51
; offset end address is: 24 (R6)
;__Lib_TFT.c, 651 :: 		
; offset start address is: 24 (R6)
0x4CD6	0x4B18    LDR	R3, [PC, #96]
0x4CD8	0x881C    LDRH	R4, [R3, #0]
0x4CDA	0x19AB    ADDS	R3, R5, R6
0x4CDC	0xF88D0004  STRB	R0, [SP, #4]
0x4CE0	0xF8AD1008  STRH	R1, [SP, #8]
0x4CE4	0xF8AD200C  STRH	R2, [SP, #12]
0x4CE8	0xF8AD5010  STRH	R5, [SP, #16]
0x4CEC	0xF8AD6012  STRH	R6, [SP, #18]
0x4CF0	0xF8AD7014  STRH	R7, [SP, #20]
0x4CF4	0xB2A2    UXTH	R2, R4
0x4CF6	0xB239    SXTH	R1, R7
0x4CF8	0xB218    SXTH	R0, R3
0x4CFA	0xF7FFFE65  BL	_TFT_Dot+0
0x4CFE	0xF8BD7014  LDRH	R7, [SP, #20]
0x4D02	0xF9BD6012  LDRSH	R6, [SP, #18]
0x4D06	0xF9BD5010  LDRSH	R5, [SP, #16]
0x4D0A	0xF9BD200C  LDRSH	R2, [SP, #12]
0x4D0E	0xF9BD1008  LDRSH	R1, [SP, #8]
0x4D12	0xF89D0004  LDRB	R0, [SP, #4]
;__Lib_TFT.c, 650 :: 		
0x4D16	0x1C7F    ADDS	R7, R7, #1
0x4D18	0xB2BF    UXTH	R7, R7
;__Lib_TFT.c, 652 :: 		
; offset end address is: 24 (R6)
; loc end address is: 28 (R7)
0x4D1A	0xE7DA    B	L_TFT_V_Line50
L_TFT_V_Line51:
;__Lib_TFT.c, 653 :: 		
; y_start end address is: 8 (R2)
; y_end end address is: 4 (R1)
; thick end address is: 0 (R0)
L_TFT_V_Line45:
; x_pos end address is: 20 (R5)
;__Lib_TFT.c, 641 :: 		
; x_pos start address is: 20 (R5)
; y_start start address is: 8 (R2)
; y_end start address is: 4 (R1)
; thick start address is: 0 (R0)
0x4D1C	0x1C40    ADDS	R0, R0, #1
0x4D1E	0xB2C0    UXTB	R0, R0
;__Lib_TFT.c, 653 :: 		
; x_pos end address is: 20 (R5)
; y_start end address is: 8 (R2)
; y_end end address is: 4 (R1)
; thick end address is: 0 (R0)
0x4D20	0xE7BB    B	L_TFT_V_Line43
L_TFT_V_Line44:
;__Lib_TFT.c, 654 :: 		
L_end_TFT_V_Line:
0x4D22	0xF8DDE000  LDR	LR, [SP, #0]
0x4D26	0xB006    ADD	SP, SP, #24
0x4D28	0x4770    BX	LR
0x4D2A	0xBF00    NOP
0x4D2C	0x22242000  	_TFT_DISP_HEIGHT+0
0x4D30	0x2E102000  	__Lib_TFT_PenWidth+0
0x4D34	0x22262000  	_TFT_DISP_WIDTH+0
0x4D38	0x2E062000  	__Lib_TFT_PenColor+0
; end of _TFT_V_Line
_STMPE610_CalibratePoint:
;__Lib_STMPE610.c, 938 :: 		
; _point start address is: 0 (R0)
0xE0C4	0xB081    SUB	SP, SP, #4
0xE0C6	0xF8CDE000  STR	LR, [SP, #0]
; _point end address is: 0 (R0)
; _point start address is: 0 (R0)
;__Lib_STMPE610.c, 939 :: 		
; _point end address is: 0 (R0)
0xE0CA	0xF7F8FF81  BL	__Lib_STMPE610_load_values+0
;__Lib_STMPE610.c, 940 :: 		
L_end_STMPE610_CalibratePoint:
0xE0CE	0xF8DDE000  LDR	LR, [SP, #0]
0xE0D2	0xB001    ADD	SP, SP, #4
0xE0D4	0x4770    BX	LR
; end of _STMPE610_CalibratePoint
__Lib_STMPE610_load_values:
;__Lib_STMPE610.c, 902 :: 		
; _point start address is: 0 (R0)
0x6FD0	0xB082    SUB	SP, SP, #8
0x6FD2	0xF8CDE000  STR	LR, [SP, #0]
; _point end address is: 0 (R0)
; _point start address is: 0 (R0)
0x6FD6	0xB2C5    UXTB	R5, R0
; _point end address is: 0 (R0)
;__Lib_STMPE610.c, 904 :: 		
L___Lib_STMPE610_load_values67:
; _point start address is: 20 (R5)
0x6FD8	0xF88D5004  STRB	R5, [SP, #4]
0x6FDC	0xF7FDFE02  BL	_STMPE610_PressDetect+0
0x6FE0	0xF89D5004  LDRB	R5, [SP, #4]
0x6FE4	0xB900    CBNZ	R0, L___Lib_STMPE610_load_values68
0x6FE6	0xE7F7    B	L___Lib_STMPE610_load_values67
L___Lib_STMPE610_load_values68:
;__Lib_STMPE610.c, 905 :: 		
0x6FE8	0xF88D5004  STRB	R5, [SP, #4]
0x6FEC	0x2200    MOVS	R2, #0
0x6FEE	0x491F    LDR	R1, [PC, #124]
0x6FF0	0x481F    LDR	R0, [PC, #124]
0x6FF2	0xF7FDFC39  BL	_STMPE610_GetRawXYZ+0
0x6FF6	0xF89D5004  LDRB	R5, [SP, #4]
;__Lib_STMPE610.c, 906 :: 		
0x6FFA	0x006A    LSLS	R2, R5, #1
0x6FFC	0x491D    LDR	R1, [PC, #116]
0x6FFE	0x188A    ADDS	R2, R1, R2
0x7000	0x4C1B    LDR	R4, [PC, #108]
0x7002	0x8821    LDRH	R1, [R4, #0]
0x7004	0x8011    STRH	R1, [R2, #0]
;__Lib_STMPE610.c, 907 :: 		
0x7006	0x006A    LSLS	R2, R5, #1
0x7008	0x491B    LDR	R1, [PC, #108]
0x700A	0x188B    ADDS	R3, R1, R2
0x700C	0x4A17    LDR	R2, [PC, #92]
0x700E	0x8811    LDRH	R1, [R2, #0]
0x7010	0x8019    STRH	R1, [R3, #0]
;__Lib_STMPE610.c, 908 :: 		
0x7012	0x4611    MOV	R1, R2
0x7014	0x880A    LDRH	R2, [R1, #0]
0x7016	0x4621    MOV	R1, R4
0x7018	0x8809    LDRH	R1, [R1, #0]
0x701A	0x1889    ADDS	R1, R1, R2
; _temp start address is: 0 (R0)
0x701C	0xB288    UXTH	R0, R1
;__Lib_STMPE610.c, 909 :: 		
0x701E	0xB945    CBNZ	R5, L___Lib_STMPE610_load_values69
;__Lib_STMPE610.c, 910 :: 		
0x7020	0x4916    LDR	R1, [PC, #88]
0x7022	0x8008    STRH	R0, [R1, #0]
;__Lib_STMPE610.c, 911 :: 		
0x7024	0x4916    LDR	R1, [PC, #88]
0x7026	0x8008    STRH	R0, [R1, #0]
; _temp end address is: 0 (R0)
;__Lib_STMPE610.c, 912 :: 		
0x7028	0x4916    LDR	R1, [PC, #88]
0x702A	0x700D    STRB	R5, [R1, #0]
;__Lib_STMPE610.c, 913 :: 		
0x702C	0x4916    LDR	R1, [PC, #88]
0x702E	0x700D    STRB	R5, [R1, #0]
;__Lib_STMPE610.c, 914 :: 		
0x7030	0xE014    B	L___Lib_STMPE610_load_values70
L___Lib_STMPE610_load_values69:
;__Lib_STMPE610.c, 915 :: 		
; _temp start address is: 0 (R0)
0x7032	0x4912    LDR	R1, [PC, #72]
0x7034	0x8809    LDRH	R1, [R1, #0]
0x7036	0x4288    CMP	R0, R1
0x7038	0xD904    BLS	L___Lib_STMPE610_load_values71
;__Lib_STMPE610.c, 916 :: 		
0x703A	0x4910    LDR	R1, [PC, #64]
0x703C	0x8008    STRH	R0, [R1, #0]
; _temp end address is: 0 (R0)
;__Lib_STMPE610.c, 917 :: 		
0x703E	0x4911    LDR	R1, [PC, #68]
0x7040	0x700D    STRB	R5, [R1, #0]
;__Lib_STMPE610.c, 918 :: 		
0x7042	0xE007    B	L___Lib_STMPE610_load_values72
L___Lib_STMPE610_load_values71:
;__Lib_STMPE610.c, 919 :: 		
; _temp start address is: 0 (R0)
0x7044	0x490E    LDR	R1, [PC, #56]
0x7046	0x8809    LDRH	R1, [R1, #0]
0x7048	0x4288    CMP	R0, R1
0x704A	0xD203    BCS	L___Lib_STMPE610_load_values73
;__Lib_STMPE610.c, 920 :: 		
0x704C	0x490C    LDR	R1, [PC, #48]
0x704E	0x8008    STRH	R0, [R1, #0]
; _temp end address is: 0 (R0)
;__Lib_STMPE610.c, 921 :: 		
0x7050	0x490D    LDR	R1, [PC, #52]
0x7052	0x700D    STRB	R5, [R1, #0]
;__Lib_STMPE610.c, 922 :: 		
L___Lib_STMPE610_load_values73:
L___Lib_STMPE610_load_values72:
;__Lib_STMPE610.c, 923 :: 		
0x7054	0x490C    LDR	R1, [PC, #48]
0x7056	0x780A    LDRB	R2, [R1, #0]
0x7058	0x490C    LDR	R1, [PC, #48]
0x705A	0x700A    STRB	R2, [R1, #0]
;__Lib_STMPE610.c, 924 :: 		
L___Lib_STMPE610_load_values70:
;__Lib_STMPE610.c, 925 :: 		
0x705C	0x2D03    CMP	R5, #3
0x705E	0xD101    BNE	L___Lib_STMPE610_load_values74
; _point end address is: 20 (R5)
;__Lib_STMPE610.c, 926 :: 		
0x7060	0xF7FDFA22  BL	__Lib_STMPE610_STMPE610_SetDispOrientation+0
L___Lib_STMPE610_load_values74:
;__Lib_STMPE610.c, 927 :: 		
L_end_load_values:
0x7064	0xF8DDE000  LDR	LR, [SP, #0]
0x7068	0xB002    ADD	SP, SP, #8
0x706A	0x4770    BX	LR
0x706C	0x2DCC2000  	__Lib_STMPE610_Y_val+0
0x7070	0x2DCA2000  	__Lib_STMPE610_X_val+0
0x7074	0x2DCE2000  	__Lib_STMPE610_X_colection+0
0x7078	0x2DD62000  	__Lib_STMPE610_Y_colection+0
0x707C	0x2DDE2000  	__Lib_STMPE610_Max_val+0
0x7080	0x2DE02000  	__Lib_STMPE610_Min_val+0
0x7084	0x2DC92000  	__Lib_STMPE610_max_idx+0
0x7088	0x2DE22000  	__Lib_STMPE610_min_idx+0
0x708C	0x2DBD2000  	__Lib_STMPE610_TPOrientation+5
; end of __Lib_STMPE610_load_values
_STMPE610_PressDetect:
;__Lib_STMPE610.c, 747 :: 		
0x4BE4	0xB082    SUB	SP, SP, #8
0x4BE6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_STMPE610.c, 749 :: 		
0x4BEA	0x2040    MOVS	R0, #64
0x4BEC	0xF7FFFB16  BL	_STMPE610_ReadReg+0
;__Lib_STMPE610.c, 750 :: 		
0x4BF0	0xF0000080  AND	R0, R0, #128
; t2 start address is: 8 (R2)
0x4BF4	0xB2C2    UXTB	R2, R0
;__Lib_STMPE610.c, 752 :: 		
0x4BF6	0x4813    LDR	R0, [PC, #76]
0x4BF8	0x7800    LDRB	R0, [R0, #0]
0x4BFA	0xB958    CBNZ	R0, L__STMPE610_PressDetect80
0x4BFC	0xB152    CBZ	R2, L__STMPE610_PressDetect79
L__STMPE610_PressDetect78:
;__Lib_STMPE610.c, 753 :: 		
0x4BFE	0xF88D2004  STRB	R2, [SP, #4]
0x4C02	0x204C    MOVS	R0, #76
0x4C04	0xF7FFFB0A  BL	_STMPE610_ReadReg+0
0x4C08	0xF89D2004  LDRB	R2, [SP, #4]
0x4C0C	0xB110    CBZ	R0, L_STMPE610_PressDetect53
;__Lib_STMPE610.c, 754 :: 		
0x4C0E	0x2101    MOVS	R1, #1
0x4C10	0x480C    LDR	R0, [PC, #48]
0x4C12	0x7001    STRB	R1, [R0, #0]
L_STMPE610_PressDetect53:
;__Lib_STMPE610.c, 752 :: 		
L__STMPE610_PressDetect80:
L__STMPE610_PressDetect79:
;__Lib_STMPE610.c, 756 :: 		
0x4C14	0xB952    CBNZ	R2, L_STMPE610_PressDetect54
; t2 end address is: 8 (R2)
;__Lib_STMPE610.c, 757 :: 		
0x4C16	0x2100    MOVS	R1, #0
0x4C18	0x480A    LDR	R0, [PC, #40]
0x4C1A	0x7001    STRB	R1, [R0, #0]
;__Lib_STMPE610.c, 758 :: 		
0x4C1C	0x2101    MOVS	R1, #1
0x4C1E	0x204B    MOVS	R0, #75
0x4C20	0xF002F9AE  BL	_STMPE610_WriteReg+0
;__Lib_STMPE610.c, 759 :: 		
0x4C24	0x2100    MOVS	R1, #0
0x4C26	0x204B    MOVS	R0, #75
0x4C28	0xF002F9AA  BL	_STMPE610_WriteReg+0
;__Lib_STMPE610.c, 760 :: 		
L_STMPE610_PressDetect54:
;__Lib_STMPE610.c, 761 :: 		
0x4C2C	0x4805    LDR	R0, [PC, #20]
0x4C2E	0x7800    LDRB	R0, [R0, #0]
0x4C30	0x2800    CMP	R0, #0
0x4C32	0xF2400000  MOVW	R0, #0
0x4C36	0xD000    BEQ	L__STMPE610_PressDetect109
0x4C38	0x2001    MOVS	R0, #1
L__STMPE610_PressDetect109:
;__Lib_STMPE610.c, 762 :: 		
L_end_STMPE610_PressDetect:
0x4C3A	0xF8DDE000  LDR	LR, [SP, #0]
0x4C3E	0xB002    ADD	SP, SP, #8
0x4C40	0x4770    BX	LR
0x4C42	0xBF00    NOP
0x4C44	0x03302000  	__Lib_STMPE610_pressed+0
; end of _STMPE610_PressDetect
_STMPE610_GetRawXYZ:
;__Lib_STMPE610.c, 650 :: 		
0x4868	0xB086    SUB	SP, SP, #24
0x486A	0xF8CDE000  STR	LR, [SP, #0]
0x486E	0x9003    STR	R0, [SP, #12]
0x4870	0x9104    STR	R1, [SP, #16]
0x4872	0x9205    STR	R2, [SP, #20]
;__Lib_STMPE610.c, 654 :: 		
0x4874	0x204C    MOVS	R0, #76
0x4876	0xF7FFFCD1  BL	_STMPE610_ReadReg+0
;__Lib_STMPE610.c, 655 :: 		
0x487A	0xB908    CBNZ	R0, L_STMPE610_GetRawXYZ36
;__Lib_STMPE610.c, 656 :: 		
0x487C	0x2001    MOVS	R0, #1
0x487E	0xE03B    B	L_end_STMPE610_GetRawXYZ
;__Lib_STMPE610.c, 657 :: 		
L_STMPE610_GetRawXYZ36:
;__Lib_STMPE610.c, 659 :: 		
0x4880	0x4C1F    LDR	R4, [PC, #124]
0x4882	0x6824    LDR	R4, [R4, #0]
0x4884	0x47A0    BLX	R4
;__Lib_STMPE610.c, 661 :: 		
0x4886	0xAC01    ADD	R4, SP, #4
0x4888	0x234D    MOVS	R3, #77
0x488A	0x7023    STRB	R3, [R4, #0]
;__Lib_STMPE610.c, 662 :: 		
0x488C	0x4B1D    LDR	R3, [PC, #116]
0x488E	0x781B    LDRB	R3, [R3, #0]
0x4890	0x085B    LSRS	R3, R3, #1
0x4892	0x2201    MOVS	R2, #1
0x4894	0x4621    MOV	R1, R4
0x4896	0xB2D8    UXTB	R0, R3
0x4898	0xF2400300  MOVW	R3, #0
0x489C	0x4C1A    LDR	R4, [PC, #104]
0x489E	0x6824    LDR	R4, [R4, #0]
0x48A0	0x47A0    BLX	R4
;__Lib_STMPE610.c, 663 :: 		
0x48A2	0xAC01    ADD	R4, SP, #4
0x48A4	0x4B17    LDR	R3, [PC, #92]
0x48A6	0x781B    LDRB	R3, [R3, #0]
0x48A8	0x085B    LSRS	R3, R3, #1
0x48AA	0x2205    MOVS	R2, #5
0x48AC	0x4621    MOV	R1, R4
0x48AE	0xB2D8    UXTB	R0, R3
0x48B0	0xF2400301  MOVW	R3, #1
0x48B4	0x4C15    LDR	R4, [PC, #84]
0x48B6	0x6824    LDR	R4, [R4, #0]
0x48B8	0x47A0    BLX	R4
;__Lib_STMPE610.c, 665 :: 		
0x48BA	0x9B03    LDR	R3, [SP, #12]
0x48BC	0xB143    CBZ	R3, L_STMPE610_GetRawXYZ37
;__Lib_STMPE610.c, 666 :: 		
0x48BE	0xAD01    ADD	R5, SP, #4
0x48C0	0x1C6B    ADDS	R3, R5, #1
0x48C2	0x781C    LDRB	R4, [R3, #0]
0x48C4	0x782B    LDRB	R3, [R5, #0]
0x48C6	0x021B    LSLS	R3, R3, #8
0x48C8	0xB29B    UXTH	R3, R3
0x48CA	0x18E4    ADDS	R4, R4, R3
0x48CC	0x9B03    LDR	R3, [SP, #12]
0x48CE	0x801C    STRH	R4, [R3, #0]
L_STMPE610_GetRawXYZ37:
;__Lib_STMPE610.c, 667 :: 		
0x48D0	0x9B04    LDR	R3, [SP, #16]
0x48D2	0xB14B    CBZ	R3, L_STMPE610_GetRawXYZ38
;__Lib_STMPE610.c, 668 :: 		
0x48D4	0xAD01    ADD	R5, SP, #4
0x48D6	0x1CEB    ADDS	R3, R5, #3
0x48D8	0x781C    LDRB	R4, [R3, #0]
0x48DA	0x1CAB    ADDS	R3, R5, #2
0x48DC	0x781B    LDRB	R3, [R3, #0]
0x48DE	0x021B    LSLS	R3, R3, #8
0x48E0	0xB29B    UXTH	R3, R3
0x48E2	0x18E4    ADDS	R4, R4, R3
0x48E4	0x9B04    LDR	R3, [SP, #16]
0x48E6	0x801C    STRH	R4, [R3, #0]
L_STMPE610_GetRawXYZ38:
;__Lib_STMPE610.c, 669 :: 		
0x48E8	0x9B05    LDR	R3, [SP, #20]
0x48EA	0xB123    CBZ	R3, L_STMPE610_GetRawXYZ39
;__Lib_STMPE610.c, 670 :: 		
0x48EC	0xAB01    ADD	R3, SP, #4
0x48EE	0x1D1B    ADDS	R3, R3, #4
0x48F0	0x781C    LDRB	R4, [R3, #0]
0x48F2	0x9B05    LDR	R3, [SP, #20]
0x48F4	0x701C    STRB	R4, [R3, #0]
L_STMPE610_GetRawXYZ39:
;__Lib_STMPE610.c, 672 :: 		
0x48F6	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 673 :: 		
L_end_STMPE610_GetRawXYZ:
0x48F8	0xF8DDE000  LDR	LR, [SP, #0]
0x48FC	0xB006    ADD	SP, SP, #24
0x48FE	0x4770    BX	LR
0x4900	0x2A942000  	_I2C_Start_Ptr+0
0x4904	0x2DC82000  	__Lib_STMPE610_STMPE610_I2C_ADDRESS+0
0x4908	0x2A9C2000  	_I2C_Write_Ptr+0
0x490C	0x2A982000  	_I2C_Read_Ptr+0
; end of _STMPE610_GetRawXYZ
__Lib_STMPE610_STMPE610_SetDispOrientation:
;__Lib_STMPE610.c, 865 :: 		
0x44A8	0xB084    SUB	SP, SP, #16
0x44AA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_STMPE610.c, 867 :: 		
0x44AE	0x4812    LDR	R0, [PC, #72]
0x44B0	0x7800    LDRB	R0, [R0, #0]
0x44B2	0x0042    LSLS	R2, R0, #1
0x44B4	0x4811    LDR	R0, [PC, #68]
0x44B6	0x1880    ADDS	R0, R0, R2
0x44B8	0x8800    LDRH	R0, [R0, #0]
0x44BA	0xF8AD0004  STRH	R0, [SP, #4]
;__Lib_STMPE610.c, 868 :: 		
0x44BE	0x4810    LDR	R0, [PC, #64]
0x44C0	0x7800    LDRB	R0, [R0, #0]
0x44C2	0x0041    LSLS	R1, R0, #1
0x44C4	0x480D    LDR	R0, [PC, #52]
0x44C6	0x1840    ADDS	R0, R0, R1
0x44C8	0x8800    LDRH	R0, [R0, #0]
0x44CA	0xF8AD0006  STRH	R0, [SP, #6]
;__Lib_STMPE610.c, 869 :: 		
0x44CE	0x480D    LDR	R0, [PC, #52]
0x44D0	0x1880    ADDS	R0, R0, R2
0x44D2	0x8800    LDRH	R0, [R0, #0]
0x44D4	0xF8AD0008  STRH	R0, [SP, #8]
;__Lib_STMPE610.c, 870 :: 		
0x44D8	0x480A    LDR	R0, [PC, #40]
0x44DA	0x1840    ADDS	R0, R0, R1
0x44DC	0x8800    LDRH	R0, [R0, #0]
0x44DE	0xF8AD000A  STRH	R0, [SP, #10]
;__Lib_STMPE610.c, 871 :: 		
0x44E2	0x4809    LDR	R0, [PC, #36]
0x44E4	0x7800    LDRB	R0, [R0, #0]
0x44E6	0xF88D000C  STRB	R0, [SP, #12]
;__Lib_STMPE610.c, 872 :: 		
0x44EA	0xA801    ADD	R0, SP, #4
0x44EC	0xF7FEFDA6  BL	_STMPE610_SetCalibrationConsts+0
;__Lib_STMPE610.c, 873 :: 		
L_end_STMPE610_SetDispOrientation:
0x44F0	0xF8DDE000  LDR	LR, [SP, #0]
0x44F4	0xB004    ADD	SP, SP, #16
0x44F6	0x4770    BX	LR
0x44F8	0x2DE22000  	__Lib_STMPE610_min_idx+0
0x44FC	0x2DCE2000  	__Lib_STMPE610_X_colection+0
0x4500	0x2DC92000  	__Lib_STMPE610_max_idx+0
0x4504	0x2DD62000  	__Lib_STMPE610_Y_colection+0
0x4508	0x2DBD2000  	__Lib_STMPE610_TPOrientation+5
; end of __Lib_STMPE610_STMPE610_SetDispOrientation
_STMPE610_SetCalibrationConsts:
;__Lib_STMPE610.c, 839 :: 		
; TPConstsStruct start address is: 0 (R0)
0x303C	0xB081    SUB	SP, SP, #4
; TPConstsStruct end address is: 0 (R0)
; TPConstsStruct start address is: 0 (R0)
;__Lib_STMPE610.c, 840 :: 		
0x303E	0x1C81    ADDS	R1, R0, #2
0x3040	0x880A    LDRH	R2, [R1, #0]
0x3042	0x490E    LDR	R1, [PC, #56]
0x3044	0x800A    STRH	R2, [R1, #0]
;__Lib_STMPE610.c, 841 :: 		
0x3046	0x8802    LDRH	R2, [R0, #0]
0x3048	0x490D    LDR	R1, [PC, #52]
0x304A	0x800A    STRH	R2, [R1, #0]
;__Lib_STMPE610.c, 842 :: 		
0x304C	0x1D81    ADDS	R1, R0, #6
0x304E	0x880A    LDRH	R2, [R1, #0]
0x3050	0x490C    LDR	R1, [PC, #48]
0x3052	0x800A    STRH	R2, [R1, #0]
;__Lib_STMPE610.c, 843 :: 		
0x3054	0x1D01    ADDS	R1, R0, #4
0x3056	0x880A    LDRH	R2, [R1, #0]
0x3058	0x490B    LDR	R1, [PC, #44]
0x305A	0x800A    STRH	R2, [R1, #0]
;__Lib_STMPE610.c, 844 :: 		
0x305C	0xF2000108  ADDW	R1, R0, #8
; TPConstsStruct end address is: 0 (R0)
0x3060	0x780A    LDRB	R2, [R1, #0]
0x3062	0x490A    LDR	R1, [PC, #40]
0x3064	0x700A    STRB	R2, [R1, #0]
;__Lib_STMPE610.c, 845 :: 		
0x3066	0x490A    LDR	R1, [PC, #40]
0x3068	0x880A    LDRH	R2, [R1, #0]
0x306A	0x490A    LDR	R1, [PC, #40]
0x306C	0x800A    STRH	R2, [R1, #0]
;__Lib_STMPE610.c, 846 :: 		
0x306E	0x490A    LDR	R1, [PC, #40]
0x3070	0x880A    LDRH	R2, [R1, #0]
0x3072	0x490A    LDR	R1, [PC, #40]
0x3074	0x800A    STRH	R2, [R1, #0]
;__Lib_STMPE610.c, 847 :: 		
L_end_STMPE610_SetCalibrationConsts:
0x3076	0xB001    ADD	SP, SP, #4
0x3078	0x4770    BX	LR
0x307A	0xBF00    NOP
0x307C	0x2DC22000  	__Lib_STMPE610_CAL_X_MAX+0
0x3080	0x2DB42000  	__Lib_STMPE610_CAL_X_MIN+0
0x3084	0x2DC62000  	__Lib_STMPE610_CAL_Y_MAX+0
0x3088	0x2DB62000  	__Lib_STMPE610_CAL_Y_MIN+0
0x308C	0x2DBD2000  	__Lib_STMPE610_TPOrientation+5
0x3090	0x2DC02000  	__Lib_STMPE610_STMPE610_TP_WIDTH+0
0x3094	0x2DB82000  	__Lib_STMPE610_TPOrientation+0
0x3098	0x2DC42000  	__Lib_STMPE610_STMPE610_TP_HEIGHT+0
0x309C	0x2DBA2000  	__Lib_STMPE610_TPOrientation+2
; end of _STMPE610_SetCalibrationConsts
Ducati_logger_driver_InitializeObjects:
;Ducati_logger_driver.c, 852 :: 		static void InitializeObjects() {
;Ducati_logger_driver.c, 853 :: 		Boot.Color                     = 0x41E6;
0xFEEC	0xF24411E6  MOVW	R1, #16870
0xFEF0	0x4872    LDR	R0, [PC, #456]
0xFEF2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 854 :: 		Boot.Width                     = 480;
0xFEF4	0xF24011E0  MOVW	R1, #480
0xFEF8	0x4871    LDR	R0, [PC, #452]
0xFEFA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 855 :: 		Boot.Height                    = 272;
0xFEFC	0xF2401110  MOVW	R1, #272
0xFF00	0x4870    LDR	R0, [PC, #448]
0xFF02	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 856 :: 		Boot.Buttons_RoundCount        = 0;
0xFF04	0x2100    MOVS	R1, #0
0xFF06	0x4870    LDR	R0, [PC, #448]
0xFF08	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 857 :: 		Boot.LabelsCount               = 0;
0xFF0A	0x2100    MOVS	R1, #0
0xFF0C	0x486F    LDR	R0, [PC, #444]
0xFF0E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 858 :: 		Boot.ImagesCount               = 26;
0xFF10	0x211A    MOVS	R1, #26
0xFF12	0x486F    LDR	R0, [PC, #444]
0xFF14	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 859 :: 		Boot.Images                    = Screen1_Images;
0xFF16	0x496F    LDR	R1, [PC, #444]
0xFF18	0x486F    LDR	R0, [PC, #444]
0xFF1A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 860 :: 		Boot.CImagesCount              = 0;
0xFF1C	0x2100    MOVS	R1, #0
0xFF1E	0x486F    LDR	R0, [PC, #444]
0xFF20	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 861 :: 		Boot.CirclesCount              = 0;
0xFF22	0x2100    MOVS	R1, #0
0xFF24	0x486E    LDR	R0, [PC, #440]
0xFF26	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 862 :: 		Boot.CircleButtonsCount        = 0;
0xFF28	0x2100    MOVS	R1, #0
0xFF2A	0x486E    LDR	R0, [PC, #440]
0xFF2C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 863 :: 		Boot.BoxesCount                = 0;
0xFF2E	0x2100    MOVS	R1, #0
0xFF30	0x486D    LDR	R0, [PC, #436]
0xFF32	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 864 :: 		Boot.CBoxesCount               = 0;
0xFF34	0x2100    MOVS	R1, #0
0xFF36	0x486D    LDR	R0, [PC, #436]
0xFF38	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 865 :: 		Boot.LinesCount                = 0;
0xFF3A	0x2100    MOVS	R1, #0
0xFF3C	0x486C    LDR	R0, [PC, #432]
0xFF3E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 866 :: 		Boot.ObjectsCount              = 26;
0xFF40	0x211A    MOVS	R1, #26
0xFF42	0x486C    LDR	R0, [PC, #432]
0xFF44	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 868 :: 		Speedometer_graphics.Color                     = 0x5AEB;
0xFF46	0xF64521EB  MOVW	R1, #23275
0xFF4A	0x486B    LDR	R0, [PC, #428]
0xFF4C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 869 :: 		Speedometer_graphics.Width                     = 480;
0xFF4E	0xF24011E0  MOVW	R1, #480
0xFF52	0x486A    LDR	R0, [PC, #424]
0xFF54	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 870 :: 		Speedometer_graphics.Height                    = 272;
0xFF56	0xF2401110  MOVW	R1, #272
0xFF5A	0x4869    LDR	R0, [PC, #420]
0xFF5C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 871 :: 		Speedometer_graphics.Buttons_RoundCount        = 1;
0xFF5E	0x2101    MOVS	R1, #1
0xFF60	0x4868    LDR	R0, [PC, #416]
0xFF62	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 872 :: 		Speedometer_graphics.Buttons_Round             = Screen2_Buttons_Round;
0xFF64	0x4968    LDR	R1, [PC, #416]
0xFF66	0x4869    LDR	R0, [PC, #420]
0xFF68	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 873 :: 		Speedometer_graphics.LabelsCount               = 10;
0xFF6A	0x210A    MOVS	R1, #10
0xFF6C	0x4868    LDR	R0, [PC, #416]
0xFF6E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 874 :: 		Speedometer_graphics.Labels                    = Screen2_Labels;
0xFF70	0x4968    LDR	R1, [PC, #416]
0xFF72	0x4869    LDR	R0, [PC, #420]
0xFF74	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 875 :: 		Speedometer_graphics.ImagesCount               = 8;
0xFF76	0x2108    MOVS	R1, #8
0xFF78	0x4868    LDR	R0, [PC, #416]
0xFF7A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 876 :: 		Speedometer_graphics.Images                    = Screen2_Images;
0xFF7C	0x4968    LDR	R1, [PC, #416]
0xFF7E	0x4869    LDR	R0, [PC, #420]
0xFF80	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 877 :: 		Speedometer_graphics.CImagesCount              = 1;
0xFF82	0x2101    MOVS	R1, #1
0xFF84	0x4868    LDR	R0, [PC, #416]
0xFF86	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 878 :: 		Speedometer_graphics.CImages                   = Screen2_CImages;
0xFF88	0x4968    LDR	R1, [PC, #416]
0xFF8A	0x4869    LDR	R0, [PC, #420]
0xFF8C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 879 :: 		Speedometer_graphics.CirclesCount              = 0;
0xFF8E	0x2100    MOVS	R1, #0
0xFF90	0x4868    LDR	R0, [PC, #416]
0xFF92	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 880 :: 		Speedometer_graphics.CircleButtonsCount        = 1;
0xFF94	0x2101    MOVS	R1, #1
0xFF96	0x4868    LDR	R0, [PC, #416]
0xFF98	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 881 :: 		Speedometer_graphics.CircleButtons             = Screen2_CircleButtons;
0xFF9A	0x4968    LDR	R1, [PC, #416]
0xFF9C	0x4868    LDR	R0, [PC, #416]
0xFF9E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 882 :: 		Speedometer_graphics.BoxesCount                = 1;
0xFFA0	0x2101    MOVS	R1, #1
0xFFA2	0x4868    LDR	R0, [PC, #416]
0xFFA4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 883 :: 		Speedometer_graphics.Boxes                     = Screen2_Boxes;
0xFFA6	0x4968    LDR	R1, [PC, #416]
0xFFA8	0x4868    LDR	R0, [PC, #416]
0xFFAA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 884 :: 		Speedometer_graphics.CBoxesCount               = 0;
0xFFAC	0x2100    MOVS	R1, #0
0xFFAE	0x4868    LDR	R0, [PC, #416]
0xFFB0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 885 :: 		Speedometer_graphics.LinesCount                = 1;
0xFFB2	0x2101    MOVS	R1, #1
0xFFB4	0x4867    LDR	R0, [PC, #412]
0xFFB6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 886 :: 		Speedometer_graphics.Lines                     = Screen2_Lines;
0xFFB8	0x4967    LDR	R1, [PC, #412]
0xFFBA	0x4868    LDR	R0, [PC, #416]
0xFFBC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 887 :: 		Speedometer_graphics.ObjectsCount              = 23;
0xFFBE	0x2117    MOVS	R1, #23
0xFFC0	0x4867    LDR	R0, [PC, #412]
0xFFC2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 889 :: 		Tachometer_graphics.Color                     = 0x5AEB;
0xFFC4	0xF64521EB  MOVW	R1, #23275
0xFFC8	0x4866    LDR	R0, [PC, #408]
0xFFCA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 890 :: 		Tachometer_graphics.Width                     = 480;
0xFFCC	0xF24011E0  MOVW	R1, #480
0xFFD0	0x4865    LDR	R0, [PC, #404]
0xFFD2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 891 :: 		Tachometer_graphics.Height                    = 272;
0xFFD4	0xF2401110  MOVW	R1, #272
0xFFD8	0x4864    LDR	R0, [PC, #400]
0xFFDA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 892 :: 		Tachometer_graphics.Buttons_RoundCount        = 1;
0xFFDC	0x2101    MOVS	R1, #1
0xFFDE	0x4864    LDR	R0, [PC, #400]
0xFFE0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 893 :: 		Tachometer_graphics.Buttons_Round             = Screen3_Buttons_Round;
0xFFE2	0x4964    LDR	R1, [PC, #400]
0xFFE4	0x4864    LDR	R0, [PC, #400]
0xFFE6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 894 :: 		Tachometer_graphics.LabelsCount               = 10;
0xFFE8	0x210A    MOVS	R1, #10
0xFFEA	0x4864    LDR	R0, [PC, #400]
0xFFEC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 895 :: 		Tachometer_graphics.Labels                    = Screen3_Labels;
0xFFEE	0x4964    LDR	R1, [PC, #400]
0xFFF0	0x4864    LDR	R0, [PC, #400]
0xFFF2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 896 :: 		Tachometer_graphics.ImagesCount               = 8;
0xFFF4	0x2108    MOVS	R1, #8
0xFFF6	0x4864    LDR	R0, [PC, #400]
0xFFF8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 897 :: 		Tachometer_graphics.Images                    = Screen3_Images;
0xFFFA	0x4964    LDR	R1, [PC, #400]
0xFFFC	0x4864    LDR	R0, [PC, #400]
0xFFFE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 898 :: 		Tachometer_graphics.CImagesCount              = 1;
0x10000	0x2101    MOVS	R1, #1
0x10002	0x4864    LDR	R0, [PC, #400]
0x10004	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 899 :: 		Tachometer_graphics.CImages                   = Screen3_CImages;
0x10006	0x4964    LDR	R1, [PC, #400]
0x10008	0x4864    LDR	R0, [PC, #400]
0x1000A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 900 :: 		Tachometer_graphics.CirclesCount              = 1;
0x1000C	0x2101    MOVS	R1, #1
0x1000E	0x4864    LDR	R0, [PC, #400]
0x10010	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 901 :: 		Tachometer_graphics.Circles                   = Screen3_Circles;
0x10012	0x4964    LDR	R1, [PC, #400]
0x10014	0x4864    LDR	R0, [PC, #400]
0x10016	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 902 :: 		Tachometer_graphics.CircleButtonsCount        = 1;
0x10018	0x2101    MOVS	R1, #1
0x1001A	0x4864    LDR	R0, [PC, #400]
0x1001C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 903 :: 		Tachometer_graphics.CircleButtons             = Screen3_CircleButtons;
0x1001E	0x4964    LDR	R1, [PC, #400]
0x10020	0x4864    LDR	R0, [PC, #400]
0x10022	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 904 :: 		Tachometer_graphics.BoxesCount                = 1;
0x10024	0x2101    MOVS	R1, #1
0x10026	0x4864    LDR	R0, [PC, #400]
0x10028	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 905 :: 		Tachometer_graphics.Boxes                     = Screen3_Boxes;
0x1002A	0x4964    LDR	R1, [PC, #400]
0x1002C	0x4864    LDR	R0, [PC, #400]
0x1002E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 906 :: 		Tachometer_graphics.CBoxesCount               = 0;
0x10030	0x2100    MOVS	R1, #0
0x10032	0x4864    LDR	R0, [PC, #400]
0x10034	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 907 :: 		Tachometer_graphics.LinesCount                = 1;
0x10036	0x2101    MOVS	R1, #1
0x10038	0x4863    LDR	R0, [PC, #396]
0x1003A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 908 :: 		Tachometer_graphics.Lines                     = Screen3_Lines;
0x1003C	0x4963    LDR	R1, [PC, #396]
0x1003E	0x4864    LDR	R0, [PC, #400]
0x10040	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 909 :: 		Tachometer_graphics.ObjectsCount              = 24;
0x10042	0x2118    MOVS	R1, #24
0x10044	0x4863    LDR	R0, [PC, #396]
0x10046	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 911 :: 		Settings.Color                     = 0x5AEB;
0x10048	0xF64521EB  MOVW	R1, #23275
0x1004C	0x4862    LDR	R0, [PC, #392]
0x1004E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 912 :: 		Settings.Width                     = 480;
0x10050	0xF24011E0  MOVW	R1, #480
0x10054	0x4861    LDR	R0, [PC, #388]
0x10056	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 913 :: 		Settings.Height                    = 272;
0x10058	0xF2401110  MOVW	R1, #272
0x1005C	0x4860    LDR	R0, [PC, #384]
0x1005E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 914 :: 		Settings.Buttons_RoundCount        = 7;
0x10060	0x2107    MOVS	R1, #7
0x10062	0x4860    LDR	R0, [PC, #384]
0x10064	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 915 :: 		Settings.Buttons_Round             = Screen4_Buttons_Round;
0x10066	0x4960    LDR	R1, [PC, #384]
0x10068	0x4860    LDR	R0, [PC, #384]
0x1006A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 916 :: 		Settings.LabelsCount               = 2;
0x1006C	0x2102    MOVS	R1, #2
0x1006E	0x4860    LDR	R0, [PC, #384]
0x10070	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 917 :: 		Settings.Labels                    = Screen4_Labels;
0x10072	0x4960    LDR	R1, [PC, #384]
0x10074	0x4860    LDR	R0, [PC, #384]
0x10076	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 918 :: 		Settings.ImagesCount               = 2;
0x10078	0x2102    MOVS	R1, #2
0x1007A	0x4860    LDR	R0, [PC, #384]
0x1007C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 919 :: 		Settings.Images                    = Screen4_Images;
0x1007E	0x4960    LDR	R1, [PC, #384]
0x10080	0x4860    LDR	R0, [PC, #384]
0x10082	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 920 :: 		Settings.CImagesCount              = 0;
0x10084	0x2100    MOVS	R1, #0
0x10086	0x4860    LDR	R0, [PC, #384]
0x10088	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 921 :: 		Settings.CirclesCount              = 0;
0x1008A	0x2100    MOVS	R1, #0
0x1008C	0x485F    LDR	R0, [PC, #380]
0x1008E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 922 :: 		Settings.CircleButtonsCount        = 0;
0x10090	0x2100    MOVS	R1, #0
0x10092	0x485F    LDR	R0, [PC, #380]
0x10094	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 923 :: 		Settings.BoxesCount                = 1;
0x10096	0x2101    MOVS	R1, #1
0x10098	0x485E    LDR	R0, [PC, #376]
0x1009A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 924 :: 		Settings.Boxes                     = Screen4_Boxes;
0x1009C	0x495E    LDR	R1, [PC, #376]
0x1009E	0x485F    LDR	R0, [PC, #380]
0x100A0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 925 :: 		Settings.CBoxesCount               = 1;
0x100A2	0x2101    MOVS	R1, #1
0x100A4	0x485E    LDR	R0, [PC, #376]
0x100A6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 926 :: 		Settings.CBoxes                    = Screen4_CBoxes;
0x100A8	0x495E    LDR	R1, [PC, #376]
0x100AA	0x485F    LDR	R0, [PC, #380]
0x100AC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 927 :: 		Settings.LinesCount                = 0;
0x100AE	0x2100    MOVS	R1, #0
0x100B0	0x485E    LDR	R0, [PC, #376]
0x100B2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 928 :: 		Settings.ObjectsCount              = 13;
0x100B4	0x210D    MOVS	R1, #13
0x100B6	0x485E    LDR	R0, [PC, #376]
0x100B8	0x8001    STRH	R1, [R0, #0]
0x100BA	0xE0BB    B	#374
0x100BC	0x22982000  	_Boot+0
0x100C0	0x229A2000  	_Boot+2
0x100C4	0x229C2000  	_Boot+4
0x100C8	0x22A02000  	_Boot+8
0x100CC	0x22A82000  	_Boot+16
0x100D0	0x22B02000  	_Boot+24
0x100D4	0x8B6C0001  	_Screen1_Images+0
0x100D8	0x22B42000  	_Boot+28
0x100DC	0x22B82000  	_Boot+32
0x100E0	0x22C02000  	_Boot+40
0x100E4	0x22C82000  	_Boot+48
0x100E8	0x22D02000  	_Boot+56
0x100EC	0x22D82000  	_Boot+64
0x100F0	0x22E02000  	_Boot+72
0x100F4	0x229E2000  	_Boot+6
0x100F8	0x08742000  	_Speedometer_graphics+0
0x100FC	0x08762000  	_Speedometer_graphics+2
0x10100	0x08782000  	_Speedometer_graphics+4
0x10104	0x087C2000  	_Speedometer_graphics+8
0x10108	0x8E3C0001  	_Screen2_Buttons_Round+0
0x1010C	0x08802000  	_Speedometer_graphics+12
0x10110	0x08842000  	_Speedometer_graphics+16
0x10114	0x8CAC0001  	_Screen2_Labels+0
0x10118	0x08882000  	_Speedometer_graphics+20
0x1011C	0x088C2000  	_Speedometer_graphics+24
0x10120	0x8D1C0001  	_Screen2_Images+0
0x10124	0x08902000  	_Speedometer_graphics+28
0x10128	0x08942000  	_Speedometer_graphics+32
0x1012C	0x8E400001  	_Screen2_CImages+0
0x10130	0x08982000  	_Speedometer_graphics+36
0x10134	0x089C2000  	_Speedometer_graphics+40
0x10138	0x08A42000  	_Speedometer_graphics+48
0x1013C	0x8E440001  	_Screen2_CircleButtons+0
0x10140	0x08A82000  	_Speedometer_graphics+52
0x10144	0x08AC2000  	_Speedometer_graphics+56
0x10148	0x8E380001  	_Screen2_Boxes+0
0x1014C	0x08B02000  	_Speedometer_graphics+60
0x10150	0x08B42000  	_Speedometer_graphics+64
0x10154	0x08BC2000  	_Speedometer_graphics+72
0x10158	0x7E5C0000  	_Screen2_Lines+0
0x1015C	0x08C02000  	_Speedometer_graphics+76
0x10160	0x087A2000  	_Speedometer_graphics+6
0x10164	0x0C882000  	_Tachometer_graphics+0
0x10168	0x0C8A2000  	_Tachometer_graphics+2
0x1016C	0x0C8C2000  	_Tachometer_graphics+4
0x10170	0x0C902000  	_Tachometer_graphics+8
0x10174	0x8DDC0000  	_Screen3_Buttons_Round+0
0x10178	0x0C942000  	_Tachometer_graphics+12
0x1017C	0x0C982000  	_Tachometer_graphics+16
0x10180	0x8CD40001  	_Screen3_Labels+0
0x10184	0x0C9C2000  	_Tachometer_graphics+20
0x10188	0x0CA02000  	_Tachometer_graphics+24
0x1018C	0x8CFC0001  	_Screen3_Images+0
0x10190	0x0CA42000  	_Tachometer_graphics+28
0x10194	0x0CA82000  	_Tachometer_graphics+32
0x10198	0xEDAC0000  	_Screen3_CImages+0
0x1019C	0x0CAC2000  	_Tachometer_graphics+36
0x101A0	0x0CB02000  	_Tachometer_graphics+40
0x101A4	0x8E480001  	_Screen3_Circles+0
0x101A8	0x0CB42000  	_Tachometer_graphics+44
0x101AC	0x0CB82000  	_Tachometer_graphics+48
0x101B0	0x8E5C0001  	_Screen3_CircleButtons+0
0x101B4	0x0CBC2000  	_Tachometer_graphics+52
0x101B8	0x0CC02000  	_Tachometer_graphics+56
0x101BC	0x8E600001  	_Screen3_Boxes+0
0x101C0	0x0CC42000  	_Tachometer_graphics+60
0x101C4	0x0CC82000  	_Tachometer_graphics+64
0x101C8	0x0CD02000  	_Tachometer_graphics+72
0x101CC	0x8E640001  	_Screen3_Lines+0
0x101D0	0x0CD42000  	_Tachometer_graphics+76
0x101D4	0x0C8E2000  	_Tachometer_graphics+6
0x101D8	0x10CC2000  	_Settings+0
0x101DC	0x10CE2000  	_Settings+2
0x101E0	0x10D02000  	_Settings+4
0x101E4	0x10D42000  	_Settings+8
0x101E8	0x8D3C0001  	_Screen4_Buttons_Round+0
0x101EC	0x10D82000  	_Settings+12
0x101F0	0x10DC2000  	_Settings+16
0x101F4	0x8E180001  	_Screen4_Labels+0
0x101F8	0x10E02000  	_Settings+20
0x101FC	0x10E42000  	_Settings+24
0x10200	0x8E300001  	_Screen4_Images+0
0x10204	0x10E82000  	_Settings+28
0x10208	0x10EC2000  	_Settings+32
0x1020C	0x10F42000  	_Settings+40
0x10210	0x10FC2000  	_Settings+48
0x10214	0x11042000  	_Settings+56
0x10218	0x8E580001  	_Screen4_Boxes+0
0x1021C	0x11082000  	_Settings+60
0x10220	0x110C2000  	_Settings+64
0x10224	0x8E4C0001  	_Screen4_CBoxes+0
0x10228	0x11102000  	_Settings+68
0x1022C	0x11142000  	_Settings+72
0x10230	0x10D22000  	_Settings+6
;Ducati_logger_driver.c, 930 :: 		Set_clock.Color                     = 0x0000;
0x10234	0x2100    MOVS	R1, #0
0x10236	0x4879    LDR	R0, [PC, #484]
0x10238	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 931 :: 		Set_clock.Width                     = 480;
0x1023A	0xF24011E0  MOVW	R1, #480
0x1023E	0x4878    LDR	R0, [PC, #480]
0x10240	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 932 :: 		Set_clock.Height                    = 272;
0x10242	0xF2401110  MOVW	R1, #272
0x10246	0x4877    LDR	R0, [PC, #476]
0x10248	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 933 :: 		Set_clock.Buttons_RoundCount        = 0;
0x1024A	0x2100    MOVS	R1, #0
0x1024C	0x4876    LDR	R0, [PC, #472]
0x1024E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 934 :: 		Set_clock.LabelsCount               = 3;
0x10250	0x2103    MOVS	R1, #3
0x10252	0x4876    LDR	R0, [PC, #472]
0x10254	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 935 :: 		Set_clock.Labels                    = Screen5_Labels;
0x10256	0x4976    LDR	R1, [PC, #472]
0x10258	0x4876    LDR	R0, [PC, #472]
0x1025A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 936 :: 		Set_clock.ImagesCount               = 3;
0x1025C	0x2103    MOVS	R1, #3
0x1025E	0x4876    LDR	R0, [PC, #472]
0x10260	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 937 :: 		Set_clock.Images                    = Screen5_Images;
0x10262	0x4976    LDR	R1, [PC, #472]
0x10264	0x4876    LDR	R0, [PC, #472]
0x10266	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 938 :: 		Set_clock.CImagesCount              = 0;
0x10268	0x2100    MOVS	R1, #0
0x1026A	0x4876    LDR	R0, [PC, #472]
0x1026C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 939 :: 		Set_clock.CirclesCount              = 0;
0x1026E	0x2100    MOVS	R1, #0
0x10270	0x4875    LDR	R0, [PC, #468]
0x10272	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 940 :: 		Set_clock.CircleButtonsCount        = 0;
0x10274	0x2100    MOVS	R1, #0
0x10276	0x4875    LDR	R0, [PC, #468]
0x10278	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 941 :: 		Set_clock.BoxesCount                = 7;
0x1027A	0x2107    MOVS	R1, #7
0x1027C	0x4874    LDR	R0, [PC, #464]
0x1027E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 942 :: 		Set_clock.Boxes                     = Screen5_Boxes;
0x10280	0x4974    LDR	R1, [PC, #464]
0x10282	0x4875    LDR	R0, [PC, #468]
0x10284	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 943 :: 		Set_clock.CBoxesCount               = 0;
0x10286	0x2100    MOVS	R1, #0
0x10288	0x4874    LDR	R0, [PC, #464]
0x1028A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 944 :: 		Set_clock.LinesCount                = 0;
0x1028C	0x2100    MOVS	R1, #0
0x1028E	0x4874    LDR	R0, [PC, #464]
0x10290	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 945 :: 		Set_clock.ObjectsCount              = 13;
0x10292	0x210D    MOVS	R1, #13
0x10294	0x4873    LDR	R0, [PC, #460]
0x10296	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 947 :: 		Accelerometer_test.Color                     = 0x5AEB;
0x10298	0xF64521EB  MOVW	R1, #23275
0x1029C	0x4872    LDR	R0, [PC, #456]
0x1029E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 948 :: 		Accelerometer_test.Width                     = 480;
0x102A0	0xF24011E0  MOVW	R1, #480
0x102A4	0x4871    LDR	R0, [PC, #452]
0x102A6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 949 :: 		Accelerometer_test.Height                    = 272;
0x102A8	0xF2401110  MOVW	R1, #272
0x102AC	0x4870    LDR	R0, [PC, #448]
0x102AE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 950 :: 		Accelerometer_test.Buttons_RoundCount        = 0;
0x102B0	0x2100    MOVS	R1, #0
0x102B2	0x4870    LDR	R0, [PC, #448]
0x102B4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 951 :: 		Accelerometer_test.LabelsCount               = 4;
0x102B6	0x2104    MOVS	R1, #4
0x102B8	0x486F    LDR	R0, [PC, #444]
0x102BA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 952 :: 		Accelerometer_test.Labels                    = Screen6_Labels;
0x102BC	0x496F    LDR	R1, [PC, #444]
0x102BE	0x4870    LDR	R0, [PC, #448]
0x102C0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 953 :: 		Accelerometer_test.ImagesCount               = 1;
0x102C2	0x2101    MOVS	R1, #1
0x102C4	0x486F    LDR	R0, [PC, #444]
0x102C6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 954 :: 		Accelerometer_test.Images                    = Screen6_Images;
0x102C8	0x496F    LDR	R1, [PC, #444]
0x102CA	0x4870    LDR	R0, [PC, #448]
0x102CC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 955 :: 		Accelerometer_test.CImagesCount              = 0;
0x102CE	0x2100    MOVS	R1, #0
0x102D0	0x486F    LDR	R0, [PC, #444]
0x102D2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 956 :: 		Accelerometer_test.CirclesCount              = 0;
0x102D4	0x2100    MOVS	R1, #0
0x102D6	0x486F    LDR	R0, [PC, #444]
0x102D8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 957 :: 		Accelerometer_test.CircleButtonsCount        = 0;
0x102DA	0x2100    MOVS	R1, #0
0x102DC	0x486E    LDR	R0, [PC, #440]
0x102DE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 958 :: 		Accelerometer_test.BoxesCount                = 2;
0x102E0	0x2102    MOVS	R1, #2
0x102E2	0x486E    LDR	R0, [PC, #440]
0x102E4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 959 :: 		Accelerometer_test.Boxes                     = Screen6_Boxes;
0x102E6	0x496E    LDR	R1, [PC, #440]
0x102E8	0x486E    LDR	R0, [PC, #440]
0x102EA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 960 :: 		Accelerometer_test.CBoxesCount               = 0;
0x102EC	0x2100    MOVS	R1, #0
0x102EE	0x486E    LDR	R0, [PC, #440]
0x102F0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 961 :: 		Accelerometer_test.LinesCount                = 0;
0x102F2	0x2100    MOVS	R1, #0
0x102F4	0x486D    LDR	R0, [PC, #436]
0x102F6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 962 :: 		Accelerometer_test.ObjectsCount              = 7;
0x102F8	0x2107    MOVS	R1, #7
0x102FA	0x486D    LDR	R0, [PC, #436]
0x102FC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 964 :: 		GPS_Test.Color                     = 0x5AEB;
0x102FE	0xF64521EB  MOVW	R1, #23275
0x10302	0x486C    LDR	R0, [PC, #432]
0x10304	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 965 :: 		GPS_Test.Width                     = 480;
0x10306	0xF24011E0  MOVW	R1, #480
0x1030A	0x486B    LDR	R0, [PC, #428]
0x1030C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 966 :: 		GPS_Test.Height                    = 272;
0x1030E	0xF2401110  MOVW	R1, #272
0x10312	0x486A    LDR	R0, [PC, #424]
0x10314	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 967 :: 		GPS_Test.Buttons_RoundCount        = 0;
0x10316	0x2100    MOVS	R1, #0
0x10318	0x4869    LDR	R0, [PC, #420]
0x1031A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 968 :: 		GPS_Test.LabelsCount               = 21;
0x1031C	0x2115    MOVS	R1, #21
0x1031E	0x4869    LDR	R0, [PC, #420]
0x10320	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 969 :: 		GPS_Test.Labels                    = Screen7_Labels;
0x10322	0x4969    LDR	R1, [PC, #420]
0x10324	0x4869    LDR	R0, [PC, #420]
0x10326	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 970 :: 		GPS_Test.ImagesCount               = 1;
0x10328	0x2101    MOVS	R1, #1
0x1032A	0x4869    LDR	R0, [PC, #420]
0x1032C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 971 :: 		GPS_Test.Images                    = Screen7_Images;
0x1032E	0x4969    LDR	R1, [PC, #420]
0x10330	0x4869    LDR	R0, [PC, #420]
0x10332	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 972 :: 		GPS_Test.CImagesCount              = 0;
0x10334	0x2100    MOVS	R1, #0
0x10336	0x4869    LDR	R0, [PC, #420]
0x10338	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 973 :: 		GPS_Test.CirclesCount              = 0;
0x1033A	0x2100    MOVS	R1, #0
0x1033C	0x4868    LDR	R0, [PC, #416]
0x1033E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 974 :: 		GPS_Test.CircleButtonsCount        = 0;
0x10340	0x2100    MOVS	R1, #0
0x10342	0x4868    LDR	R0, [PC, #416]
0x10344	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 975 :: 		GPS_Test.BoxesCount                = 2;
0x10346	0x2102    MOVS	R1, #2
0x10348	0x4867    LDR	R0, [PC, #412]
0x1034A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 976 :: 		GPS_Test.Boxes                     = Screen7_Boxes;
0x1034C	0x4967    LDR	R1, [PC, #412]
0x1034E	0x4868    LDR	R0, [PC, #416]
0x10350	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 977 :: 		GPS_Test.CBoxesCount               = 0;
0x10352	0x2100    MOVS	R1, #0
0x10354	0x4867    LDR	R0, [PC, #412]
0x10356	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 978 :: 		GPS_Test.LinesCount                = 0;
0x10358	0x2100    MOVS	R1, #0
0x1035A	0x4867    LDR	R0, [PC, #412]
0x1035C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 979 :: 		GPS_Test.ObjectsCount              = 24;
0x1035E	0x2118    MOVS	R1, #24
0x10360	0x4866    LDR	R0, [PC, #408]
0x10362	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 981 :: 		Gyro_test.Color                     = 0x5AEB;
0x10364	0xF64521EB  MOVW	R1, #23275
0x10368	0x4865    LDR	R0, [PC, #404]
0x1036A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 982 :: 		Gyro_test.Width                     = 480;
0x1036C	0xF24011E0  MOVW	R1, #480
0x10370	0x4864    LDR	R0, [PC, #400]
0x10372	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 983 :: 		Gyro_test.Height                    = 272;
0x10374	0xF2401110  MOVW	R1, #272
0x10378	0x4863    LDR	R0, [PC, #396]
0x1037A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 984 :: 		Gyro_test.Buttons_RoundCount        = 0;
0x1037C	0x2100    MOVS	R1, #0
0x1037E	0x4863    LDR	R0, [PC, #396]
0x10380	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 985 :: 		Gyro_test.LabelsCount               = 4;
0x10382	0x2104    MOVS	R1, #4
0x10384	0x4862    LDR	R0, [PC, #392]
0x10386	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 986 :: 		Gyro_test.Labels                    = Screen8_Labels;
0x10388	0x4962    LDR	R1, [PC, #392]
0x1038A	0x4863    LDR	R0, [PC, #396]
0x1038C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 987 :: 		Gyro_test.ImagesCount               = 1;
0x1038E	0x2101    MOVS	R1, #1
0x10390	0x4862    LDR	R0, [PC, #392]
0x10392	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 988 :: 		Gyro_test.Images                    = Screen8_Images;
0x10394	0x4962    LDR	R1, [PC, #392]
0x10396	0x4863    LDR	R0, [PC, #396]
0x10398	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 989 :: 		Gyro_test.CImagesCount              = 0;
0x1039A	0x2100    MOVS	R1, #0
0x1039C	0x4862    LDR	R0, [PC, #392]
0x1039E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 990 :: 		Gyro_test.CirclesCount              = 0;
0x103A0	0x2100    MOVS	R1, #0
0x103A2	0x4862    LDR	R0, [PC, #392]
0x103A4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 991 :: 		Gyro_test.CircleButtonsCount        = 0;
0x103A6	0x2100    MOVS	R1, #0
0x103A8	0x4861    LDR	R0, [PC, #388]
0x103AA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 992 :: 		Gyro_test.BoxesCount                = 2;
0x103AC	0x2102    MOVS	R1, #2
0x103AE	0x4861    LDR	R0, [PC, #388]
0x103B0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 993 :: 		Gyro_test.Boxes                     = Screen8_Boxes;
0x103B2	0x4961    LDR	R1, [PC, #388]
0x103B4	0x4861    LDR	R0, [PC, #388]
0x103B6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 994 :: 		Gyro_test.CBoxesCount               = 0;
0x103B8	0x2100    MOVS	R1, #0
0x103BA	0x4861    LDR	R0, [PC, #388]
0x103BC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 995 :: 		Gyro_test.LinesCount                = 0;
0x103BE	0x2100    MOVS	R1, #0
0x103C0	0x4860    LDR	R0, [PC, #384]
0x103C2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 996 :: 		Gyro_test.ObjectsCount              = 7;
0x103C4	0x2107    MOVS	R1, #7
0x103C6	0x4860    LDR	R0, [PC, #384]
0x103C8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 998 :: 		Magnetometer_test.Color                     = 0x5AEB;
0x103CA	0xF64521EB  MOVW	R1, #23275
0x103CE	0x485F    LDR	R0, [PC, #380]
0x103D0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 999 :: 		Magnetometer_test.Width                     = 480;
0x103D2	0xF24011E0  MOVW	R1, #480
0x103D6	0x485E    LDR	R0, [PC, #376]
0x103D8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1000 :: 		Magnetometer_test.Height                    = 272;
0x103DA	0xF2401110  MOVW	R1, #272
0x103DE	0x485D    LDR	R0, [PC, #372]
0x103E0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1001 :: 		Magnetometer_test.Buttons_RoundCount        = 0;
0x103E2	0x2100    MOVS	R1, #0
0x103E4	0x485C    LDR	R0, [PC, #368]
0x103E6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1002 :: 		Magnetometer_test.LabelsCount               = 4;
0x103E8	0x2104    MOVS	R1, #4
0x103EA	0x485C    LDR	R0, [PC, #368]
0x103EC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1003 :: 		Magnetometer_test.Labels                    = Screen9_Labels;
0x103EE	0x495C    LDR	R1, [PC, #368]
0x103F0	0x485C    LDR	R0, [PC, #368]
0x103F2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1004 :: 		Magnetometer_test.ImagesCount               = 1;
0x103F4	0x2101    MOVS	R1, #1
0x103F6	0x485C    LDR	R0, [PC, #368]
0x103F8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1005 :: 		Magnetometer_test.Images                    = Screen9_Images;
0x103FA	0x495C    LDR	R1, [PC, #368]
0x103FC	0x485C    LDR	R0, [PC, #368]
0x103FE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1006 :: 		Magnetometer_test.CImagesCount              = 0;
0x10400	0x2100    MOVS	R1, #0
0x10402	0x485C    LDR	R0, [PC, #368]
0x10404	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1007 :: 		Magnetometer_test.CirclesCount              = 0;
0x10406	0x2100    MOVS	R1, #0
0x10408	0x485B    LDR	R0, [PC, #364]
0x1040A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1008 :: 		Magnetometer_test.CircleButtonsCount        = 0;
0x1040C	0x2100    MOVS	R1, #0
0x1040E	0x485B    LDR	R0, [PC, #364]
0x10410	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1009 :: 		Magnetometer_test.BoxesCount                = 2;
0x10412	0x2102    MOVS	R1, #2
0x10414	0x485A    LDR	R0, [PC, #360]
0x10416	0x8001    STRH	R1, [R0, #0]
0x10418	0xF000B8B4  B	#360
0x1041C	0x22E82000  	_Set_clock+0
0x10420	0x22EA2000  	_Set_clock+2
0x10424	0x22EC2000  	_Set_clock+4
0x10428	0x22F02000  	_Set_clock+8
0x1042C	0x22F82000  	_Set_clock+16
0x10430	0x8DD40001  	_Screen5_Labels+0
0x10434	0x22FC2000  	_Set_clock+20
0x10438	0x23002000  	_Set_clock+24
0x1043C	0x8DE00001  	_Screen5_Images+0
0x10440	0x23042000  	_Set_clock+28
0x10444	0x23082000  	_Set_clock+32
0x10448	0x23102000  	_Set_clock+40
0x1044C	0x23182000  	_Set_clock+48
0x10450	0x23202000  	_Set_clock+56
0x10454	0x8D580001  	_Screen5_Boxes+0
0x10458	0x23242000  	_Set_clock+60
0x1045C	0x23282000  	_Set_clock+64
0x10460	0x23302000  	_Set_clock+72
0x10464	0x22EE2000  	_Set_clock+6
0x10468	0x040C2000  	_Accelerometer_test+0
0x1046C	0x040E2000  	_Accelerometer_test+2
0x10470	0x04102000  	_Accelerometer_test+4
0x10474	0x04142000  	_Accelerometer_test+8
0x10478	0x041C2000  	_Accelerometer_test+16
0x1047C	0x8D940001  	_Screen6_Labels+0
0x10480	0x04202000  	_Accelerometer_test+20
0x10484	0x04242000  	_Accelerometer_test+24
0x10488	0x8E500001  	_Screen6_Images+0
0x1048C	0x04282000  	_Accelerometer_test+28
0x10490	0x042C2000  	_Accelerometer_test+32
0x10494	0x04342000  	_Accelerometer_test+40
0x10498	0x043C2000  	_Accelerometer_test+48
0x1049C	0x04442000  	_Accelerometer_test+56
0x104A0	0x8DF80001  	_Screen6_Boxes+0
0x104A4	0x04482000  	_Accelerometer_test+60
0x104A8	0x044C2000  	_Accelerometer_test+64
0x104AC	0x04542000  	_Accelerometer_test+72
0x104B0	0x04122000  	_Accelerometer_test+6
0x104B4	0x23382000  	_GPS_Test+0
0x104B8	0x233A2000  	_GPS_Test+2
0x104BC	0x233C2000  	_GPS_Test+4
0x104C0	0x23402000  	_GPS_Test+8
0x104C4	0x23482000  	_GPS_Test+16
0x104C8	0x8BD40001  	_Screen7_Labels+0
0x104CC	0x234C2000  	_GPS_Test+20
0x104D0	0x23502000  	_GPS_Test+24
0x104D4	0x8E540001  	_Screen7_Images+0
0x104D8	0x23542000  	_GPS_Test+28
0x104DC	0x23582000  	_GPS_Test+32
0x104E0	0x23602000  	_GPS_Test+40
0x104E4	0x23682000  	_GPS_Test+48
0x104E8	0x23702000  	_GPS_Test+56
0x104EC	0x8E000001  	_Screen7_Boxes+0
0x104F0	0x23742000  	_GPS_Test+60
0x104F4	0x23782000  	_GPS_Test+64
0x104F8	0x23802000  	_GPS_Test+72
0x104FC	0x233E2000  	_GPS_Test+6
0x10500	0x23882000  	_Gyro_test+0
0x10504	0x238A2000  	_Gyro_test+2
0x10508	0x238C2000  	_Gyro_test+4
0x1050C	0x23902000  	_Gyro_test+8
0x10510	0x23982000  	_Gyro_test+16
0x10514	0x8DA40001  	_Screen8_Labels+0
0x10518	0x239C2000  	_Gyro_test+20
0x1051C	0x23A02000  	_Gyro_test+24
0x10520	0x6EDC0000  	_Screen8_Images+0
0x10524	0x23A42000  	_Gyro_test+28
0x10528	0x23A82000  	_Gyro_test+32
0x1052C	0x23B02000  	_Gyro_test+40
0x10530	0x23B82000  	_Gyro_test+48
0x10534	0x23C02000  	_Gyro_test+56
0x10538	0x8E200001  	_Screen8_Boxes+0
0x1053C	0x23C42000  	_Gyro_test+60
0x10540	0x23C82000  	_Gyro_test+64
0x10544	0x23D02000  	_Gyro_test+72
0x10548	0x238E2000  	_Gyro_test+6
0x1054C	0x23D82000  	_Magnetometer_test+0
0x10550	0x23DA2000  	_Magnetometer_test+2
0x10554	0x23DC2000  	_Magnetometer_test+4
0x10558	0x23E02000  	_Magnetometer_test+8
0x1055C	0x23E82000  	_Magnetometer_test+16
0x10560	0x8D740001  	_Screen9_Labels+0
0x10564	0x23EC2000  	_Magnetometer_test+20
0x10568	0x23F02000  	_Magnetometer_test+24
0x1056C	0x6C040000  	_Screen9_Images+0
0x10570	0x23F42000  	_Magnetometer_test+28
0x10574	0x23F82000  	_Magnetometer_test+32
0x10578	0x24002000  	_Magnetometer_test+40
0x1057C	0x24082000  	_Magnetometer_test+48
0x10580	0x24102000  	_Magnetometer_test+56
;Ducati_logger_driver.c, 1010 :: 		Magnetometer_test.Boxes                     = Screen9_Boxes;
0x10584	0x4978    LDR	R1, [PC, #480]
0x10586	0x4879    LDR	R0, [PC, #484]
0x10588	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1011 :: 		Magnetometer_test.CBoxesCount               = 0;
0x1058A	0x2100    MOVS	R1, #0
0x1058C	0x4878    LDR	R0, [PC, #480]
0x1058E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1012 :: 		Magnetometer_test.LinesCount                = 0;
0x10590	0x2100    MOVS	R1, #0
0x10592	0x4878    LDR	R0, [PC, #480]
0x10594	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1013 :: 		Magnetometer_test.ObjectsCount              = 7;
0x10596	0x2107    MOVS	R1, #7
0x10598	0x4877    LDR	R0, [PC, #476]
0x1059A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1015 :: 		Pressure_test.Color                     = 0x5AEB;
0x1059C	0xF64521EB  MOVW	R1, #23275
0x105A0	0x4876    LDR	R0, [PC, #472]
0x105A2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1016 :: 		Pressure_test.Width                     = 480;
0x105A4	0xF24011E0  MOVW	R1, #480
0x105A8	0x4875    LDR	R0, [PC, #468]
0x105AA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1017 :: 		Pressure_test.Height                    = 272;
0x105AC	0xF2401110  MOVW	R1, #272
0x105B0	0x4874    LDR	R0, [PC, #464]
0x105B2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1018 :: 		Pressure_test.Buttons_RoundCount        = 0;
0x105B4	0x2100    MOVS	R1, #0
0x105B6	0x4874    LDR	R0, [PC, #464]
0x105B8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1019 :: 		Pressure_test.LabelsCount               = 4;
0x105BA	0x2104    MOVS	R1, #4
0x105BC	0x4873    LDR	R0, [PC, #460]
0x105BE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1020 :: 		Pressure_test.Labels                    = Screen10_Labels;
0x105C0	0x4973    LDR	R1, [PC, #460]
0x105C2	0x4874    LDR	R0, [PC, #464]
0x105C4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1021 :: 		Pressure_test.ImagesCount               = 1;
0x105C6	0x2101    MOVS	R1, #1
0x105C8	0x4873    LDR	R0, [PC, #460]
0x105CA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1022 :: 		Pressure_test.Images                    = Screen10_Images;
0x105CC	0x4973    LDR	R1, [PC, #460]
0x105CE	0x4874    LDR	R0, [PC, #464]
0x105D0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1023 :: 		Pressure_test.CImagesCount              = 0;
0x105D2	0x2100    MOVS	R1, #0
0x105D4	0x4873    LDR	R0, [PC, #460]
0x105D6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1024 :: 		Pressure_test.CirclesCount              = 0;
0x105D8	0x2100    MOVS	R1, #0
0x105DA	0x4873    LDR	R0, [PC, #460]
0x105DC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1025 :: 		Pressure_test.CircleButtonsCount        = 0;
0x105DE	0x2100    MOVS	R1, #0
0x105E0	0x4872    LDR	R0, [PC, #456]
0x105E2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1026 :: 		Pressure_test.BoxesCount                = 2;
0x105E4	0x2102    MOVS	R1, #2
0x105E6	0x4872    LDR	R0, [PC, #456]
0x105E8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1027 :: 		Pressure_test.Boxes                     = Screen10_Boxes;
0x105EA	0x4972    LDR	R1, [PC, #456]
0x105EC	0x4872    LDR	R0, [PC, #456]
0x105EE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1028 :: 		Pressure_test.CBoxesCount               = 0;
0x105F0	0x2100    MOVS	R1, #0
0x105F2	0x4872    LDR	R0, [PC, #456]
0x105F4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1029 :: 		Pressure_test.LinesCount                = 0;
0x105F6	0x2100    MOVS	R1, #0
0x105F8	0x4871    LDR	R0, [PC, #452]
0x105FA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1030 :: 		Pressure_test.ObjectsCount              = 7;
0x105FC	0x2107    MOVS	R1, #7
0x105FE	0x4871    LDR	R0, [PC, #452]
0x10600	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1032 :: 		Humidity_test.Color                     = 0x5AEB;
0x10602	0xF64521EB  MOVW	R1, #23275
0x10606	0x4870    LDR	R0, [PC, #448]
0x10608	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1033 :: 		Humidity_test.Width                     = 480;
0x1060A	0xF24011E0  MOVW	R1, #480
0x1060E	0x486F    LDR	R0, [PC, #444]
0x10610	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1034 :: 		Humidity_test.Height                    = 272;
0x10612	0xF2401110  MOVW	R1, #272
0x10616	0x486E    LDR	R0, [PC, #440]
0x10618	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1035 :: 		Humidity_test.Buttons_RoundCount        = 0;
0x1061A	0x2100    MOVS	R1, #0
0x1061C	0x486D    LDR	R0, [PC, #436]
0x1061E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1036 :: 		Humidity_test.LabelsCount               = 4;
0x10620	0x2104    MOVS	R1, #4
0x10622	0x486D    LDR	R0, [PC, #436]
0x10624	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1037 :: 		Humidity_test.Labels                    = Screen11_Labels;
0x10626	0x496D    LDR	R1, [PC, #436]
0x10628	0x486D    LDR	R0, [PC, #436]
0x1062A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1038 :: 		Humidity_test.ImagesCount               = 1;
0x1062C	0x2101    MOVS	R1, #1
0x1062E	0x486D    LDR	R0, [PC, #436]
0x10630	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1039 :: 		Humidity_test.Images                    = Screen11_Images;
0x10632	0x496D    LDR	R1, [PC, #436]
0x10634	0x486D    LDR	R0, [PC, #436]
0x10636	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1040 :: 		Humidity_test.CImagesCount              = 0;
0x10638	0x2100    MOVS	R1, #0
0x1063A	0x486D    LDR	R0, [PC, #436]
0x1063C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1041 :: 		Humidity_test.CirclesCount              = 0;
0x1063E	0x2100    MOVS	R1, #0
0x10640	0x486C    LDR	R0, [PC, #432]
0x10642	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1042 :: 		Humidity_test.CircleButtonsCount        = 0;
0x10644	0x2100    MOVS	R1, #0
0x10646	0x486C    LDR	R0, [PC, #432]
0x10648	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1043 :: 		Humidity_test.BoxesCount                = 2;
0x1064A	0x2102    MOVS	R1, #2
0x1064C	0x486B    LDR	R0, [PC, #428]
0x1064E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1044 :: 		Humidity_test.Boxes                     = Screen11_Boxes;
0x10650	0x496B    LDR	R1, [PC, #428]
0x10652	0x486C    LDR	R0, [PC, #432]
0x10654	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1045 :: 		Humidity_test.CBoxesCount               = 0;
0x10656	0x2100    MOVS	R1, #0
0x10658	0x486B    LDR	R0, [PC, #428]
0x1065A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1046 :: 		Humidity_test.LinesCount                = 0;
0x1065C	0x2100    MOVS	R1, #0
0x1065E	0x486B    LDR	R0, [PC, #428]
0x10660	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1047 :: 		Humidity_test.ObjectsCount              = 7;
0x10662	0x2107    MOVS	R1, #7
0x10664	0x486A    LDR	R0, [PC, #424]
0x10666	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1050 :: 		Image1.OwnerScreen     = &Boot;
0x10668	0x496A    LDR	R1, [PC, #424]
0x1066A	0x486B    LDR	R0, [PC, #428]
0x1066C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1051 :: 		Image1.Order           = 0;
0x1066E	0x2100    MOVS	R1, #0
0x10670	0x486A    LDR	R0, [PC, #424]
0x10672	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1052 :: 		Image1.Left            = 115;
0x10674	0x2173    MOVS	R1, #115
0x10676	0x486A    LDR	R0, [PC, #424]
0x10678	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1053 :: 		Image1.Top             = 0;
0x1067A	0x2100    MOVS	R1, #0
0x1067C	0x4869    LDR	R0, [PC, #420]
0x1067E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1054 :: 		Image1.Width           = 249;
0x10680	0x21F9    MOVS	R1, #249
0x10682	0x4869    LDR	R0, [PC, #420]
0x10684	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1055 :: 		Image1.Height          = 263;
0x10686	0xF2401107  MOVW	R1, #263
0x1068A	0x4868    LDR	R0, [PC, #416]
0x1068C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1056 :: 		Image1.Picture_Type    = 1;
0x1068E	0x2101    MOVS	R1, #1
0x10690	0x4867    LDR	R0, [PC, #412]
0x10692	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1057 :: 		Image1.Picture_Ratio   = 1;
0x10694	0x2101    MOVS	R1, #1
0x10696	0x4867    LDR	R0, [PC, #412]
0x10698	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1058 :: 		Image1.Picture_Name    = logo00_jpg;
0x1069A	0x4967    LDR	R1, [PC, #412]
0x1069C	0x4867    LDR	R0, [PC, #412]
0x1069E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1059 :: 		Image1.Visible         = 1;
0x106A0	0x2101    MOVS	R1, #1
0x106A2	0x4867    LDR	R0, [PC, #412]
0x106A4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1060 :: 		Image1.Active          = 1;
0x106A6	0x2101    MOVS	R1, #1
0x106A8	0x4866    LDR	R0, [PC, #408]
0x106AA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1061 :: 		Image1.OnUpPtr         = 0;
0x106AC	0x2100    MOVS	R1, #0
0x106AE	0x4866    LDR	R0, [PC, #408]
0x106B0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1062 :: 		Image1.OnDownPtr       = 0;
0x106B2	0x2100    MOVS	R1, #0
0x106B4	0x4865    LDR	R0, [PC, #404]
0x106B6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1063 :: 		Image1.OnClickPtr      = 0;
0x106B8	0x2100    MOVS	R1, #0
0x106BA	0x4865    LDR	R0, [PC, #404]
0x106BC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1064 :: 		Image1.OnPressPtr      = 0;
0x106BE	0x2100    MOVS	R1, #0
0x106C0	0x4864    LDR	R0, [PC, #400]
0x106C2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1066 :: 		Image2.OwnerScreen     = &Boot;
0x106C4	0x4953    LDR	R1, [PC, #332]
0x106C6	0x4864    LDR	R0, [PC, #400]
0x106C8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1067 :: 		Image2.Order           = 1;
0x106CA	0x2101    MOVS	R1, #1
0x106CC	0x4863    LDR	R0, [PC, #396]
0x106CE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1068 :: 		Image2.Left            = 115;
0x106D0	0x2173    MOVS	R1, #115
0x106D2	0x4863    LDR	R0, [PC, #396]
0x106D4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1069 :: 		Image2.Top             = 0;
0x106D6	0x2100    MOVS	R1, #0
0x106D8	0x4862    LDR	R0, [PC, #392]
0x106DA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1070 :: 		Image2.Width           = 249;
0x106DC	0x21F9    MOVS	R1, #249
0x106DE	0x4862    LDR	R0, [PC, #392]
0x106E0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1071 :: 		Image2.Height          = 263;
0x106E2	0xF2401107  MOVW	R1, #263
0x106E6	0x4861    LDR	R0, [PC, #388]
0x106E8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1072 :: 		Image2.Picture_Type    = 1;
0x106EA	0x2101    MOVS	R1, #1
0x106EC	0x4860    LDR	R0, [PC, #384]
0x106EE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1073 :: 		Image2.Picture_Ratio   = 1;
0x106F0	0x2101    MOVS	R1, #1
0x106F2	0x4860    LDR	R0, [PC, #384]
0x106F4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1074 :: 		Image2.Picture_Name    = logo01_jpg;
0x106F6	0x4960    LDR	R1, [PC, #384]
0x106F8	0x4860    LDR	R0, [PC, #384]
0x106FA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1075 :: 		Image2.Visible         = 1;
0x106FC	0x2101    MOVS	R1, #1
0x106FE	0x4860    LDR	R0, [PC, #384]
0x10700	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1076 :: 		Image2.Active          = 1;
0x10702	0x2101    MOVS	R1, #1
0x10704	0x485F    LDR	R0, [PC, #380]
0x10706	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1077 :: 		Image2.OnUpPtr         = 0;
0x10708	0x2100    MOVS	R1, #0
0x1070A	0x485F    LDR	R0, [PC, #380]
0x1070C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1078 :: 		Image2.OnDownPtr       = 0;
0x1070E	0x2100    MOVS	R1, #0
0x10710	0x485E    LDR	R0, [PC, #376]
0x10712	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1079 :: 		Image2.OnClickPtr      = 0;
0x10714	0x2100    MOVS	R1, #0
0x10716	0x485E    LDR	R0, [PC, #376]
0x10718	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1080 :: 		Image2.OnPressPtr      = 0;
0x1071A	0x2100    MOVS	R1, #0
0x1071C	0x485D    LDR	R0, [PC, #372]
0x1071E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1082 :: 		Image10.OwnerScreen     = &Boot;
0x10720	0x493C    LDR	R1, [PC, #240]
0x10722	0x485D    LDR	R0, [PC, #372]
0x10724	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1083 :: 		Image10.Order           = 2;
0x10726	0x2102    MOVS	R1, #2
0x10728	0x485C    LDR	R0, [PC, #368]
0x1072A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1084 :: 		Image10.Left            = 115;
0x1072C	0x2173    MOVS	R1, #115
0x1072E	0x485C    LDR	R0, [PC, #368]
0x10730	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1085 :: 		Image10.Top             = 0;
0x10732	0x2100    MOVS	R1, #0
0x10734	0x485B    LDR	R0, [PC, #364]
0x10736	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1086 :: 		Image10.Width           = 249;
0x10738	0x21F9    MOVS	R1, #249
0x1073A	0x485B    LDR	R0, [PC, #364]
0x1073C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1087 :: 		Image10.Height          = 263;
0x1073E	0xF2401107  MOVW	R1, #263
0x10742	0x485A    LDR	R0, [PC, #360]
0x10744	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1088 :: 		Image10.Picture_Type    = 1;
0x10746	0x2101    MOVS	R1, #1
0x10748	0x4859    LDR	R0, [PC, #356]
0x1074A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1089 :: 		Image10.Picture_Ratio   = 1;
0x1074C	0x2101    MOVS	R1, #1
0x1074E	0x4859    LDR	R0, [PC, #356]
0x10750	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1090 :: 		Image10.Picture_Name    = logo02_jpg;
0x10752	0x4959    LDR	R1, [PC, #356]
0x10754	0x4859    LDR	R0, [PC, #356]
0x10756	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1091 :: 		Image10.Visible         = 1;
0x10758	0x2101    MOVS	R1, #1
0x1075A	0x4859    LDR	R0, [PC, #356]
0x1075C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1092 :: 		Image10.Active          = 1;
0x1075E	0x2101    MOVS	R1, #1
0x10760	0x4858    LDR	R0, [PC, #352]
0x10762	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1093 :: 		Image10.OnUpPtr         = 0;
0x10764	0x2100    MOVS	R1, #0
0x10766	0xE0AF    B	#350
0x10768	0x8E280001  	_Screen9_Boxes+0
0x1076C	0x24142000  	_Magnetometer_test+60
0x10770	0x24182000  	_Magnetometer_test+64
0x10774	0x24202000  	_Magnetometer_test+72
0x10778	0x23DE2000  	_Magnetometer_test+6
0x1077C	0x24282000  	_Pressure_test+0
0x10780	0x242A2000  	_Pressure_test+2
0x10784	0x242C2000  	_Pressure_test+4
0x10788	0x24302000  	_Pressure_test+8
0x1078C	0x24382000  	_Pressure_test+16
0x10790	0x8D840001  	_Screen10_Labels+0
0x10794	0x243C2000  	_Pressure_test+20
0x10798	0x24402000  	_Pressure_test+24
0x1079C	0x6AB40000  	_Screen10_Images+0
0x107A0	0x24442000  	_Pressure_test+28
0x107A4	0x24482000  	_Pressure_test+32
0x107A8	0x24502000  	_Pressure_test+40
0x107AC	0x24582000  	_Pressure_test+48
0x107B0	0x24602000  	_Pressure_test+56
0x107B4	0x8E080001  	_Screen10_Boxes+0
0x107B8	0x24642000  	_Pressure_test+60
0x107BC	0x24682000  	_Pressure_test+64
0x107C0	0x24702000  	_Pressure_test+72
0x107C4	0x242E2000  	_Pressure_test+6
0x107C8	0x24782000  	_Humidity_test+0
0x107CC	0x247A2000  	_Humidity_test+2
0x107D0	0x247C2000  	_Humidity_test+4
0x107D4	0x24802000  	_Humidity_test+8
0x107D8	0x24882000  	_Humidity_test+16
0x107DC	0x8DC40001  	_Screen11_Labels+0
0x107E0	0x248C2000  	_Humidity_test+20
0x107E4	0x24902000  	_Humidity_test+24
0x107E8	0x035C0000  	_Screen11_Images+0
0x107EC	0x24942000  	_Humidity_test+28
0x107F0	0x24982000  	_Humidity_test+32
0x107F4	0x24A02000  	_Humidity_test+40
0x107F8	0x24A82000  	_Humidity_test+48
0x107FC	0x24B02000  	_Humidity_test+56
0x10800	0x8E100001  	_Screen11_Boxes+0
0x10804	0x24B42000  	_Humidity_test+60
0x10808	0x24B82000  	_Humidity_test+64
0x1080C	0x24C02000  	_Humidity_test+72
0x10810	0x247E2000  	_Humidity_test+6
0x10814	0x22982000  	_Boot+0
0x10818	0x04642000  	_Image1+0
0x1081C	0x04682000  	_Image1+4
0x10820	0x046A2000  	_Image1+6
0x10824	0x046C2000  	_Image1+8
0x10828	0x046E2000  	_Image1+10
0x1082C	0x04702000  	_Image1+12
0x10830	0x047A2000  	_Image1+22
0x10834	0x047B2000  	_Image1+23
0x10838	0x1E340001  	#73268
0x1083C	0x04742000  	_Image1+16
0x10840	0x04782000  	_Image1+20
0x10844	0x04792000  	_Image1+21
0x10848	0x047C2000  	_Image1+24
0x1084C	0x04802000  	_Image1+28
0x10850	0x04842000  	_Image1+32
0x10854	0x04882000  	_Image1+36
0x10858	0x048C2000  	_Image2+0
0x1085C	0x04902000  	_Image2+4
0x10860	0x04922000  	_Image2+6
0x10864	0x04942000  	_Image2+8
0x10868	0x04962000  	_Image2+10
0x1086C	0x04982000  	_Image2+12
0x10870	0x04A22000  	_Image2+22
0x10874	0x04A32000  	_Image2+23
0x10878	0x1DD80003  	#204248
0x1087C	0x049C2000  	_Image2+16
0x10880	0x04A02000  	_Image2+20
0x10884	0x04A12000  	_Image2+21
0x10888	0x04A42000  	_Image2+24
0x1088C	0x04A82000  	_Image2+28
0x10890	0x04AC2000  	_Image2+32
0x10894	0x04B02000  	_Image2+36
0x10898	0x04B42000  	_Image10+0
0x1089C	0x04B82000  	_Image10+4
0x108A0	0x04BA2000  	_Image10+6
0x108A4	0x04BC2000  	_Image10+8
0x108A8	0x04BE2000  	_Image10+10
0x108AC	0x04C02000  	_Image10+12
0x108B0	0x04CA2000  	_Image10+22
0x108B4	0x04CB2000  	_Image10+23
0x108B8	0x1D7C0005  	#335228
0x108BC	0x04C42000  	_Image10+16
0x108C0	0x04C82000  	_Image10+20
0x108C4	0x04C92000  	_Image10+21
0x108C8	0x4879    LDR	R0, [PC, #484]
0x108CA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1094 :: 		Image10.OnDownPtr       = 0;
0x108CC	0x2100    MOVS	R1, #0
0x108CE	0x4879    LDR	R0, [PC, #484]
0x108D0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1095 :: 		Image10.OnClickPtr      = 0;
0x108D2	0x2100    MOVS	R1, #0
0x108D4	0x4878    LDR	R0, [PC, #480]
0x108D6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1096 :: 		Image10.OnPressPtr      = 0;
0x108D8	0x2100    MOVS	R1, #0
0x108DA	0x4878    LDR	R0, [PC, #480]
0x108DC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1098 :: 		Image11.OwnerScreen     = &Boot;
0x108DE	0x4978    LDR	R1, [PC, #480]
0x108E0	0x4878    LDR	R0, [PC, #480]
0x108E2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1099 :: 		Image11.Order           = 3;
0x108E4	0x2103    MOVS	R1, #3
0x108E6	0x4878    LDR	R0, [PC, #480]
0x108E8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1100 :: 		Image11.Left            = 115;
0x108EA	0x2173    MOVS	R1, #115
0x108EC	0x4877    LDR	R0, [PC, #476]
0x108EE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1101 :: 		Image11.Top             = 0;
0x108F0	0x2100    MOVS	R1, #0
0x108F2	0x4877    LDR	R0, [PC, #476]
0x108F4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1102 :: 		Image11.Width           = 249;
0x108F6	0x21F9    MOVS	R1, #249
0x108F8	0x4876    LDR	R0, [PC, #472]
0x108FA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1103 :: 		Image11.Height          = 263;
0x108FC	0xF2401107  MOVW	R1, #263
0x10900	0x4875    LDR	R0, [PC, #468]
0x10902	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1104 :: 		Image11.Picture_Type    = 1;
0x10904	0x2101    MOVS	R1, #1
0x10906	0x4875    LDR	R0, [PC, #468]
0x10908	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1105 :: 		Image11.Picture_Ratio   = 1;
0x1090A	0x2101    MOVS	R1, #1
0x1090C	0x4874    LDR	R0, [PC, #464]
0x1090E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1106 :: 		Image11.Picture_Name    = logo03_jpg;
0x10910	0x4974    LDR	R1, [PC, #464]
0x10912	0x4875    LDR	R0, [PC, #468]
0x10914	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1107 :: 		Image11.Visible         = 1;
0x10916	0x2101    MOVS	R1, #1
0x10918	0x4874    LDR	R0, [PC, #464]
0x1091A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1108 :: 		Image11.Active          = 1;
0x1091C	0x2101    MOVS	R1, #1
0x1091E	0x4874    LDR	R0, [PC, #464]
0x10920	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1109 :: 		Image11.OnUpPtr         = 0;
0x10922	0x2100    MOVS	R1, #0
0x10924	0x4873    LDR	R0, [PC, #460]
0x10926	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1110 :: 		Image11.OnDownPtr       = 0;
0x10928	0x2100    MOVS	R1, #0
0x1092A	0x4873    LDR	R0, [PC, #460]
0x1092C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1111 :: 		Image11.OnClickPtr      = 0;
0x1092E	0x2100    MOVS	R1, #0
0x10930	0x4872    LDR	R0, [PC, #456]
0x10932	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1112 :: 		Image11.OnPressPtr      = 0;
0x10934	0x2100    MOVS	R1, #0
0x10936	0x4872    LDR	R0, [PC, #456]
0x10938	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1114 :: 		Image12.OwnerScreen     = &Boot;
0x1093A	0x4961    LDR	R1, [PC, #388]
0x1093C	0x4871    LDR	R0, [PC, #452]
0x1093E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1115 :: 		Image12.Order           = 4;
0x10940	0x2104    MOVS	R1, #4
0x10942	0x4871    LDR	R0, [PC, #452]
0x10944	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1116 :: 		Image12.Left            = 115;
0x10946	0x2173    MOVS	R1, #115
0x10948	0x4870    LDR	R0, [PC, #448]
0x1094A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1117 :: 		Image12.Top             = 0;
0x1094C	0x2100    MOVS	R1, #0
0x1094E	0x4870    LDR	R0, [PC, #448]
0x10950	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1118 :: 		Image12.Width           = 249;
0x10952	0x21F9    MOVS	R1, #249
0x10954	0x486F    LDR	R0, [PC, #444]
0x10956	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1119 :: 		Image12.Height          = 263;
0x10958	0xF2401107  MOVW	R1, #263
0x1095C	0x486E    LDR	R0, [PC, #440]
0x1095E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1120 :: 		Image12.Picture_Type    = 1;
0x10960	0x2101    MOVS	R1, #1
0x10962	0x486E    LDR	R0, [PC, #440]
0x10964	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1121 :: 		Image12.Picture_Ratio   = 1;
0x10966	0x2101    MOVS	R1, #1
0x10968	0x486D    LDR	R0, [PC, #436]
0x1096A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1122 :: 		Image12.Picture_Name    = logo04_jpg;
0x1096C	0x496D    LDR	R1, [PC, #436]
0x1096E	0x486E    LDR	R0, [PC, #440]
0x10970	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1123 :: 		Image12.Visible         = 1;
0x10972	0x2101    MOVS	R1, #1
0x10974	0x486D    LDR	R0, [PC, #436]
0x10976	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1124 :: 		Image12.Active          = 1;
0x10978	0x2101    MOVS	R1, #1
0x1097A	0x486D    LDR	R0, [PC, #436]
0x1097C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1125 :: 		Image12.OnUpPtr         = 0;
0x1097E	0x2100    MOVS	R1, #0
0x10980	0x486C    LDR	R0, [PC, #432]
0x10982	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1126 :: 		Image12.OnDownPtr       = 0;
0x10984	0x2100    MOVS	R1, #0
0x10986	0x486C    LDR	R0, [PC, #432]
0x10988	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1127 :: 		Image12.OnClickPtr      = 0;
0x1098A	0x2100    MOVS	R1, #0
0x1098C	0x486B    LDR	R0, [PC, #428]
0x1098E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1128 :: 		Image12.OnPressPtr      = 0;
0x10990	0x2100    MOVS	R1, #0
0x10992	0x486B    LDR	R0, [PC, #428]
0x10994	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1130 :: 		Image16.OwnerScreen     = &Boot;
0x10996	0x494A    LDR	R1, [PC, #296]
0x10998	0x486A    LDR	R0, [PC, #424]
0x1099A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1131 :: 		Image16.Order           = 5;
0x1099C	0x2105    MOVS	R1, #5
0x1099E	0x486A    LDR	R0, [PC, #424]
0x109A0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1132 :: 		Image16.Left            = 115;
0x109A2	0x2173    MOVS	R1, #115
0x109A4	0x4869    LDR	R0, [PC, #420]
0x109A6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1133 :: 		Image16.Top             = 0;
0x109A8	0x2100    MOVS	R1, #0
0x109AA	0x4869    LDR	R0, [PC, #420]
0x109AC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1134 :: 		Image16.Width           = 249;
0x109AE	0x21F9    MOVS	R1, #249
0x109B0	0x4868    LDR	R0, [PC, #416]
0x109B2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1135 :: 		Image16.Height          = 263;
0x109B4	0xF2401107  MOVW	R1, #263
0x109B8	0x4867    LDR	R0, [PC, #412]
0x109BA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1136 :: 		Image16.Picture_Type    = 1;
0x109BC	0x2101    MOVS	R1, #1
0x109BE	0x4867    LDR	R0, [PC, #412]
0x109C0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1137 :: 		Image16.Picture_Ratio   = 1;
0x109C2	0x2101    MOVS	R1, #1
0x109C4	0x4866    LDR	R0, [PC, #408]
0x109C6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1138 :: 		Image16.Picture_Name    = logo05_jpg;
0x109C8	0x4966    LDR	R1, [PC, #408]
0x109CA	0x4867    LDR	R0, [PC, #412]
0x109CC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1139 :: 		Image16.Visible         = 1;
0x109CE	0x2101    MOVS	R1, #1
0x109D0	0x4866    LDR	R0, [PC, #408]
0x109D2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1140 :: 		Image16.Active          = 1;
0x109D4	0x2101    MOVS	R1, #1
0x109D6	0x4866    LDR	R0, [PC, #408]
0x109D8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1141 :: 		Image16.OnUpPtr         = 0;
0x109DA	0x2100    MOVS	R1, #0
0x109DC	0x4865    LDR	R0, [PC, #404]
0x109DE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1142 :: 		Image16.OnDownPtr       = 0;
0x109E0	0x2100    MOVS	R1, #0
0x109E2	0x4865    LDR	R0, [PC, #404]
0x109E4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1143 :: 		Image16.OnClickPtr      = 0;
0x109E6	0x2100    MOVS	R1, #0
0x109E8	0x4864    LDR	R0, [PC, #400]
0x109EA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1144 :: 		Image16.OnPressPtr      = 0;
0x109EC	0x2100    MOVS	R1, #0
0x109EE	0x4864    LDR	R0, [PC, #400]
0x109F0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1146 :: 		Image17.OwnerScreen     = &Boot;
0x109F2	0x4933    LDR	R1, [PC, #204]
0x109F4	0x4863    LDR	R0, [PC, #396]
0x109F6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1147 :: 		Image17.Order           = 6;
0x109F8	0x2106    MOVS	R1, #6
0x109FA	0x4863    LDR	R0, [PC, #396]
0x109FC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1148 :: 		Image17.Left            = 115;
0x109FE	0x2173    MOVS	R1, #115
0x10A00	0x4862    LDR	R0, [PC, #392]
0x10A02	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1149 :: 		Image17.Top             = 0;
0x10A04	0x2100    MOVS	R1, #0
0x10A06	0x4862    LDR	R0, [PC, #392]
0x10A08	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1150 :: 		Image17.Width           = 249;
0x10A0A	0x21F9    MOVS	R1, #249
0x10A0C	0x4861    LDR	R0, [PC, #388]
0x10A0E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1151 :: 		Image17.Height          = 263;
0x10A10	0xF2401107  MOVW	R1, #263
0x10A14	0x4860    LDR	R0, [PC, #384]
0x10A16	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1152 :: 		Image17.Picture_Type    = 1;
0x10A18	0x2101    MOVS	R1, #1
0x10A1A	0x4860    LDR	R0, [PC, #384]
0x10A1C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1153 :: 		Image17.Picture_Ratio   = 1;
0x10A1E	0x2101    MOVS	R1, #1
0x10A20	0x485F    LDR	R0, [PC, #380]
0x10A22	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1154 :: 		Image17.Picture_Name    = logo06_jpg;
0x10A24	0x495F    LDR	R1, [PC, #380]
0x10A26	0x4860    LDR	R0, [PC, #384]
0x10A28	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1155 :: 		Image17.Visible         = 1;
0x10A2A	0x2101    MOVS	R1, #1
0x10A2C	0x485F    LDR	R0, [PC, #380]
0x10A2E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1156 :: 		Image17.Active          = 1;
0x10A30	0x2101    MOVS	R1, #1
0x10A32	0x485F    LDR	R0, [PC, #380]
0x10A34	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1157 :: 		Image17.OnUpPtr         = 0;
0x10A36	0x2100    MOVS	R1, #0
0x10A38	0x485E    LDR	R0, [PC, #376]
0x10A3A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1158 :: 		Image17.OnDownPtr       = 0;
0x10A3C	0x2100    MOVS	R1, #0
0x10A3E	0x485E    LDR	R0, [PC, #376]
0x10A40	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1159 :: 		Image17.OnClickPtr      = 0;
0x10A42	0x2100    MOVS	R1, #0
0x10A44	0x485D    LDR	R0, [PC, #372]
0x10A46	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1160 :: 		Image17.OnPressPtr      = 0;
0x10A48	0x2100    MOVS	R1, #0
0x10A4A	0x485D    LDR	R0, [PC, #372]
0x10A4C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1162 :: 		Image21.OwnerScreen     = &Boot;
0x10A4E	0x491C    LDR	R1, [PC, #112]
0x10A50	0x485C    LDR	R0, [PC, #368]
0x10A52	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1163 :: 		Image21.Order           = 7;
0x10A54	0x2107    MOVS	R1, #7
0x10A56	0x485C    LDR	R0, [PC, #368]
0x10A58	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1164 :: 		Image21.Left            = 115;
0x10A5A	0x2173    MOVS	R1, #115
0x10A5C	0x485B    LDR	R0, [PC, #364]
0x10A5E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1165 :: 		Image21.Top             = 0;
0x10A60	0x2100    MOVS	R1, #0
0x10A62	0x485B    LDR	R0, [PC, #364]
0x10A64	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1166 :: 		Image21.Width           = 249;
0x10A66	0x21F9    MOVS	R1, #249
0x10A68	0x485A    LDR	R0, [PC, #360]
0x10A6A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1167 :: 		Image21.Height          = 263;
0x10A6C	0xF2401107  MOVW	R1, #263
0x10A70	0x4859    LDR	R0, [PC, #356]
0x10A72	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1168 :: 		Image21.Picture_Type    = 1;
0x10A74	0x2101    MOVS	R1, #1
0x10A76	0x4859    LDR	R0, [PC, #356]
0x10A78	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1169 :: 		Image21.Picture_Ratio   = 1;
0x10A7A	0x2101    MOVS	R1, #1
0x10A7C	0x4858    LDR	R0, [PC, #352]
0x10A7E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1170 :: 		Image21.Picture_Name    = logo07_jpg;
0x10A80	0x4958    LDR	R1, [PC, #352]
0x10A82	0x4859    LDR	R0, [PC, #356]
0x10A84	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1171 :: 		Image21.Visible         = 1;
0x10A86	0x2101    MOVS	R1, #1
0x10A88	0x4858    LDR	R0, [PC, #352]
0x10A8A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1172 :: 		Image21.Active          = 1;
0x10A8C	0x2101    MOVS	R1, #1
0x10A8E	0x4858    LDR	R0, [PC, #352]
0x10A90	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1173 :: 		Image21.OnUpPtr         = 0;
0x10A92	0x2100    MOVS	R1, #0
0x10A94	0x4857    LDR	R0, [PC, #348]
0x10A96	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1174 :: 		Image21.OnDownPtr       = 0;
0x10A98	0x2100    MOVS	R1, #0
0x10A9A	0x4857    LDR	R0, [PC, #348]
0x10A9C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1175 :: 		Image21.OnClickPtr      = 0;
0x10A9E	0x2100    MOVS	R1, #0
0x10AA0	0x4856    LDR	R0, [PC, #344]
0x10AA2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1176 :: 		Image21.OnPressPtr      = 0;
0x10AA4	0x2100    MOVS	R1, #0
0x10AA6	0x4856    LDR	R0, [PC, #344]
0x10AA8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1178 :: 		Image22.OwnerScreen     = &Boot;
0x10AAA	0x4905    LDR	R1, [PC, #20]
0x10AAC	0xF000B8AA  B	#340
0x10AB0	0x04CC2000  	_Image10+24
0x10AB4	0x04D02000  	_Image10+28
0x10AB8	0x04D42000  	_Image10+32
0x10ABC	0x04D82000  	_Image10+36
0x10AC0	0x22982000  	_Boot+0
0x10AC4	0x04DC2000  	_Image11+0
0x10AC8	0x04E02000  	_Image11+4
0x10ACC	0x04E22000  	_Image11+6
0x10AD0	0x04E42000  	_Image11+8
0x10AD4	0x04E62000  	_Image11+10
0x10AD8	0x04E82000  	_Image11+12
0x10ADC	0x04F22000  	_Image11+22
0x10AE0	0x04F32000  	_Image11+23
0x10AE4	0x1D200007  	#466208
0x10AE8	0x04EC2000  	_Image11+16
0x10AEC	0x04F02000  	_Image11+20
0x10AF0	0x04F12000  	_Image11+21
0x10AF4	0x04F42000  	_Image11+24
0x10AF8	0x04F82000  	_Image11+28
0x10AFC	0x04FC2000  	_Image11+32
0x10B00	0x05002000  	_Image11+36
0x10B04	0x05042000  	_Image12+0
0x10B08	0x05082000  	_Image12+4
0x10B0C	0x050A2000  	_Image12+6
0x10B10	0x050C2000  	_Image12+8
0x10B14	0x050E2000  	_Image12+10
0x10B18	0x05102000  	_Image12+12
0x10B1C	0x051A2000  	_Image12+22
0x10B20	0x051B2000  	_Image12+23
0x10B24	0x1CC40009  	#597188
0x10B28	0x05142000  	_Image12+16
0x10B2C	0x05182000  	_Image12+20
0x10B30	0x05192000  	_Image12+21
0x10B34	0x051C2000  	_Image12+24
0x10B38	0x05202000  	_Image12+28
0x10B3C	0x05242000  	_Image12+32
0x10B40	0x05282000  	_Image12+36
0x10B44	0x052C2000  	_Image16+0
0x10B48	0x05302000  	_Image16+4
0x10B4C	0x05322000  	_Image16+6
0x10B50	0x05342000  	_Image16+8
0x10B54	0x05362000  	_Image16+10
0x10B58	0x05382000  	_Image16+12
0x10B5C	0x05422000  	_Image16+22
0x10B60	0x05432000  	_Image16+23
0x10B64	0x1C68000B  	#728168
0x10B68	0x053C2000  	_Image16+16
0x10B6C	0x05402000  	_Image16+20
0x10B70	0x05412000  	_Image16+21
0x10B74	0x05442000  	_Image16+24
0x10B78	0x05482000  	_Image16+28
0x10B7C	0x054C2000  	_Image16+32
0x10B80	0x05502000  	_Image16+36
0x10B84	0x05542000  	_Image17+0
0x10B88	0x05582000  	_Image17+4
0x10B8C	0x055A2000  	_Image17+6
0x10B90	0x055C2000  	_Image17+8
0x10B94	0x055E2000  	_Image17+10
0x10B98	0x05602000  	_Image17+12
0x10B9C	0x056A2000  	_Image17+22
0x10BA0	0x056B2000  	_Image17+23
0x10BA4	0x1C0C000D  	#859148
0x10BA8	0x05642000  	_Image17+16
0x10BAC	0x05682000  	_Image17+20
0x10BB0	0x05692000  	_Image17+21
0x10BB4	0x056C2000  	_Image17+24
0x10BB8	0x05702000  	_Image17+28
0x10BBC	0x05742000  	_Image17+32
0x10BC0	0x05782000  	_Image17+36
0x10BC4	0x057C2000  	_Image21+0
0x10BC8	0x05802000  	_Image21+4
0x10BCC	0x05822000  	_Image21+6
0x10BD0	0x05842000  	_Image21+8
0x10BD4	0x05862000  	_Image21+10
0x10BD8	0x05882000  	_Image21+12
0x10BDC	0x05922000  	_Image21+22
0x10BE0	0x05932000  	_Image21+23
0x10BE4	0x1BB0000F  	#990128
0x10BE8	0x058C2000  	_Image21+16
0x10BEC	0x05902000  	_Image21+20
0x10BF0	0x05912000  	_Image21+21
0x10BF4	0x05942000  	_Image21+24
0x10BF8	0x05982000  	_Image21+28
0x10BFC	0x059C2000  	_Image21+32
0x10C00	0x05A02000  	_Image21+36
0x10C04	0x4879    LDR	R0, [PC, #484]
0x10C06	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1179 :: 		Image22.Order           = 8;
0x10C08	0x2108    MOVS	R1, #8
0x10C0A	0x4879    LDR	R0, [PC, #484]
0x10C0C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1180 :: 		Image22.Left            = 115;
0x10C0E	0x2173    MOVS	R1, #115
0x10C10	0x4878    LDR	R0, [PC, #480]
0x10C12	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1181 :: 		Image22.Top             = 0;
0x10C14	0x2100    MOVS	R1, #0
0x10C16	0x4878    LDR	R0, [PC, #480]
0x10C18	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1182 :: 		Image22.Width           = 249;
0x10C1A	0x21F9    MOVS	R1, #249
0x10C1C	0x4877    LDR	R0, [PC, #476]
0x10C1E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1183 :: 		Image22.Height          = 263;
0x10C20	0xF2401107  MOVW	R1, #263
0x10C24	0x4876    LDR	R0, [PC, #472]
0x10C26	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1184 :: 		Image22.Picture_Type    = 1;
0x10C28	0x2101    MOVS	R1, #1
0x10C2A	0x4876    LDR	R0, [PC, #472]
0x10C2C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1185 :: 		Image22.Picture_Ratio   = 1;
0x10C2E	0x2101    MOVS	R1, #1
0x10C30	0x4875    LDR	R0, [PC, #468]
0x10C32	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1186 :: 		Image22.Picture_Name    = logo08_jpg;
0x10C34	0x4975    LDR	R1, [PC, #468]
0x10C36	0x4876    LDR	R0, [PC, #472]
0x10C38	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1187 :: 		Image22.Visible         = 1;
0x10C3A	0x2101    MOVS	R1, #1
0x10C3C	0x4875    LDR	R0, [PC, #468]
0x10C3E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1188 :: 		Image22.Active          = 1;
0x10C40	0x2101    MOVS	R1, #1
0x10C42	0x4875    LDR	R0, [PC, #468]
0x10C44	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1189 :: 		Image22.OnUpPtr         = 0;
0x10C46	0x2100    MOVS	R1, #0
0x10C48	0x4874    LDR	R0, [PC, #464]
0x10C4A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1190 :: 		Image22.OnDownPtr       = 0;
0x10C4C	0x2100    MOVS	R1, #0
0x10C4E	0x4874    LDR	R0, [PC, #464]
0x10C50	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1191 :: 		Image22.OnClickPtr      = 0;
0x10C52	0x2100    MOVS	R1, #0
0x10C54	0x4873    LDR	R0, [PC, #460]
0x10C56	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1192 :: 		Image22.OnPressPtr      = 0;
0x10C58	0x2100    MOVS	R1, #0
0x10C5A	0x4873    LDR	R0, [PC, #460]
0x10C5C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1194 :: 		Image23.OwnerScreen     = &Boot;
0x10C5E	0x4973    LDR	R1, [PC, #460]
0x10C60	0x4873    LDR	R0, [PC, #460]
0x10C62	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1195 :: 		Image23.Order           = 9;
0x10C64	0x2109    MOVS	R1, #9
0x10C66	0x4873    LDR	R0, [PC, #460]
0x10C68	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1196 :: 		Image23.Left            = 115;
0x10C6A	0x2173    MOVS	R1, #115
0x10C6C	0x4872    LDR	R0, [PC, #456]
0x10C6E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1197 :: 		Image23.Top             = 0;
0x10C70	0x2100    MOVS	R1, #0
0x10C72	0x4872    LDR	R0, [PC, #456]
0x10C74	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1198 :: 		Image23.Width           = 249;
0x10C76	0x21F9    MOVS	R1, #249
0x10C78	0x4871    LDR	R0, [PC, #452]
0x10C7A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1199 :: 		Image23.Height          = 263;
0x10C7C	0xF2401107  MOVW	R1, #263
0x10C80	0x4870    LDR	R0, [PC, #448]
0x10C82	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1200 :: 		Image23.Picture_Type    = 1;
0x10C84	0x2101    MOVS	R1, #1
0x10C86	0x4870    LDR	R0, [PC, #448]
0x10C88	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1201 :: 		Image23.Picture_Ratio   = 1;
0x10C8A	0x2101    MOVS	R1, #1
0x10C8C	0x486F    LDR	R0, [PC, #444]
0x10C8E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1202 :: 		Image23.Picture_Name    = logo09_jpg;
0x10C90	0x496F    LDR	R1, [PC, #444]
0x10C92	0x4870    LDR	R0, [PC, #448]
0x10C94	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1203 :: 		Image23.Visible         = 1;
0x10C96	0x2101    MOVS	R1, #1
0x10C98	0x486F    LDR	R0, [PC, #444]
0x10C9A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1204 :: 		Image23.Active          = 1;
0x10C9C	0x2101    MOVS	R1, #1
0x10C9E	0x486F    LDR	R0, [PC, #444]
0x10CA0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1205 :: 		Image23.OnUpPtr         = 0;
0x10CA2	0x2100    MOVS	R1, #0
0x10CA4	0x486E    LDR	R0, [PC, #440]
0x10CA6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1206 :: 		Image23.OnDownPtr       = 0;
0x10CA8	0x2100    MOVS	R1, #0
0x10CAA	0x486E    LDR	R0, [PC, #440]
0x10CAC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1207 :: 		Image23.OnClickPtr      = 0;
0x10CAE	0x2100    MOVS	R1, #0
0x10CB0	0x486D    LDR	R0, [PC, #436]
0x10CB2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1208 :: 		Image23.OnPressPtr      = 0;
0x10CB4	0x2100    MOVS	R1, #0
0x10CB6	0x486D    LDR	R0, [PC, #436]
0x10CB8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1210 :: 		Image24.OwnerScreen     = &Boot;
0x10CBA	0x495C    LDR	R1, [PC, #368]
0x10CBC	0x486C    LDR	R0, [PC, #432]
0x10CBE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1211 :: 		Image24.Order           = 10;
0x10CC0	0x210A    MOVS	R1, #10
0x10CC2	0x486C    LDR	R0, [PC, #432]
0x10CC4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1212 :: 		Image24.Left            = 115;
0x10CC6	0x2173    MOVS	R1, #115
0x10CC8	0x486B    LDR	R0, [PC, #428]
0x10CCA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1213 :: 		Image24.Top             = 0;
0x10CCC	0x2100    MOVS	R1, #0
0x10CCE	0x486B    LDR	R0, [PC, #428]
0x10CD0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1214 :: 		Image24.Width           = 249;
0x10CD2	0x21F9    MOVS	R1, #249
0x10CD4	0x486A    LDR	R0, [PC, #424]
0x10CD6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1215 :: 		Image24.Height          = 263;
0x10CD8	0xF2401107  MOVW	R1, #263
0x10CDC	0x4869    LDR	R0, [PC, #420]
0x10CDE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1216 :: 		Image24.Picture_Type    = 1;
0x10CE0	0x2101    MOVS	R1, #1
0x10CE2	0x4869    LDR	R0, [PC, #420]
0x10CE4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1217 :: 		Image24.Picture_Ratio   = 1;
0x10CE6	0x2101    MOVS	R1, #1
0x10CE8	0x4868    LDR	R0, [PC, #416]
0x10CEA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1218 :: 		Image24.Picture_Name    = logo10_jpg;
0x10CEC	0x4968    LDR	R1, [PC, #416]
0x10CEE	0x4869    LDR	R0, [PC, #420]
0x10CF0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1219 :: 		Image24.Visible         = 1;
0x10CF2	0x2101    MOVS	R1, #1
0x10CF4	0x4868    LDR	R0, [PC, #416]
0x10CF6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1220 :: 		Image24.Active          = 1;
0x10CF8	0x2101    MOVS	R1, #1
0x10CFA	0x4868    LDR	R0, [PC, #416]
0x10CFC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1221 :: 		Image24.OnUpPtr         = 0;
0x10CFE	0x2100    MOVS	R1, #0
0x10D00	0x4867    LDR	R0, [PC, #412]
0x10D02	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1222 :: 		Image24.OnDownPtr       = 0;
0x10D04	0x2100    MOVS	R1, #0
0x10D06	0x4867    LDR	R0, [PC, #412]
0x10D08	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1223 :: 		Image24.OnClickPtr      = 0;
0x10D0A	0x2100    MOVS	R1, #0
0x10D0C	0x4866    LDR	R0, [PC, #408]
0x10D0E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1224 :: 		Image24.OnPressPtr      = 0;
0x10D10	0x2100    MOVS	R1, #0
0x10D12	0x4866    LDR	R0, [PC, #408]
0x10D14	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1226 :: 		Image25.OwnerScreen     = &Boot;
0x10D16	0x4945    LDR	R1, [PC, #276]
0x10D18	0x4865    LDR	R0, [PC, #404]
0x10D1A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1227 :: 		Image25.Order           = 11;
0x10D1C	0x210B    MOVS	R1, #11
0x10D1E	0x4865    LDR	R0, [PC, #404]
0x10D20	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1228 :: 		Image25.Left            = 115;
0x10D22	0x2173    MOVS	R1, #115
0x10D24	0x4864    LDR	R0, [PC, #400]
0x10D26	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1229 :: 		Image25.Top             = 0;
0x10D28	0x2100    MOVS	R1, #0
0x10D2A	0x4864    LDR	R0, [PC, #400]
0x10D2C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1230 :: 		Image25.Width           = 249;
0x10D2E	0x21F9    MOVS	R1, #249
0x10D30	0x4863    LDR	R0, [PC, #396]
0x10D32	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1231 :: 		Image25.Height          = 263;
0x10D34	0xF2401107  MOVW	R1, #263
0x10D38	0x4862    LDR	R0, [PC, #392]
0x10D3A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1232 :: 		Image25.Picture_Type    = 1;
0x10D3C	0x2101    MOVS	R1, #1
0x10D3E	0x4862    LDR	R0, [PC, #392]
0x10D40	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1233 :: 		Image25.Picture_Ratio   = 1;
0x10D42	0x2101    MOVS	R1, #1
0x10D44	0x4861    LDR	R0, [PC, #388]
0x10D46	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1234 :: 		Image25.Picture_Name    = logo11_jpg;
0x10D48	0x4961    LDR	R1, [PC, #388]
0x10D4A	0x4862    LDR	R0, [PC, #392]
0x10D4C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1235 :: 		Image25.Visible         = 1;
0x10D4E	0x2101    MOVS	R1, #1
0x10D50	0x4861    LDR	R0, [PC, #388]
0x10D52	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1236 :: 		Image25.Active          = 1;
0x10D54	0x2101    MOVS	R1, #1
0x10D56	0x4861    LDR	R0, [PC, #388]
0x10D58	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1237 :: 		Image25.OnUpPtr         = 0;
0x10D5A	0x2100    MOVS	R1, #0
0x10D5C	0x4860    LDR	R0, [PC, #384]
0x10D5E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1238 :: 		Image25.OnDownPtr       = 0;
0x10D60	0x2100    MOVS	R1, #0
0x10D62	0x4860    LDR	R0, [PC, #384]
0x10D64	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1239 :: 		Image25.OnClickPtr      = 0;
0x10D66	0x2100    MOVS	R1, #0
0x10D68	0x485F    LDR	R0, [PC, #380]
0x10D6A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1240 :: 		Image25.OnPressPtr      = 0;
0x10D6C	0x2100    MOVS	R1, #0
0x10D6E	0x485F    LDR	R0, [PC, #380]
0x10D70	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1242 :: 		Image26.OwnerScreen     = &Boot;
0x10D72	0x492E    LDR	R1, [PC, #184]
0x10D74	0x485E    LDR	R0, [PC, #376]
0x10D76	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1243 :: 		Image26.Order           = 12;
0x10D78	0x210C    MOVS	R1, #12
0x10D7A	0x485E    LDR	R0, [PC, #376]
0x10D7C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1244 :: 		Image26.Left            = 115;
0x10D7E	0x2173    MOVS	R1, #115
0x10D80	0x485D    LDR	R0, [PC, #372]
0x10D82	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1245 :: 		Image26.Top             = 0;
0x10D84	0x2100    MOVS	R1, #0
0x10D86	0x485D    LDR	R0, [PC, #372]
0x10D88	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1246 :: 		Image26.Width           = 249;
0x10D8A	0x21F9    MOVS	R1, #249
0x10D8C	0x485C    LDR	R0, [PC, #368]
0x10D8E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1247 :: 		Image26.Height          = 263;
0x10D90	0xF2401107  MOVW	R1, #263
0x10D94	0x485B    LDR	R0, [PC, #364]
0x10D96	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1248 :: 		Image26.Picture_Type    = 1;
0x10D98	0x2101    MOVS	R1, #1
0x10D9A	0x485B    LDR	R0, [PC, #364]
0x10D9C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1249 :: 		Image26.Picture_Ratio   = 1;
0x10D9E	0x2101    MOVS	R1, #1
0x10DA0	0x485A    LDR	R0, [PC, #360]
0x10DA2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1250 :: 		Image26.Picture_Name    = logo12_jpg;
0x10DA4	0x495A    LDR	R1, [PC, #360]
0x10DA6	0x485B    LDR	R0, [PC, #364]
0x10DA8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1251 :: 		Image26.Visible         = 1;
0x10DAA	0x2101    MOVS	R1, #1
0x10DAC	0x485A    LDR	R0, [PC, #360]
0x10DAE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1252 :: 		Image26.Active          = 1;
0x10DB0	0x2101    MOVS	R1, #1
0x10DB2	0x485A    LDR	R0, [PC, #360]
0x10DB4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1253 :: 		Image26.OnUpPtr         = 0;
0x10DB6	0x2100    MOVS	R1, #0
0x10DB8	0x4859    LDR	R0, [PC, #356]
0x10DBA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1254 :: 		Image26.OnDownPtr       = 0;
0x10DBC	0x2100    MOVS	R1, #0
0x10DBE	0x4859    LDR	R0, [PC, #356]
0x10DC0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1255 :: 		Image26.OnClickPtr      = 0;
0x10DC2	0x2100    MOVS	R1, #0
0x10DC4	0x4858    LDR	R0, [PC, #352]
0x10DC6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1256 :: 		Image26.OnPressPtr      = 0;
0x10DC8	0x2100    MOVS	R1, #0
0x10DCA	0x4858    LDR	R0, [PC, #352]
0x10DCC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1258 :: 		Image27.OwnerScreen     = &Boot;
0x10DCE	0x4917    LDR	R1, [PC, #92]
0x10DD0	0x4857    LDR	R0, [PC, #348]
0x10DD2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1259 :: 		Image27.Order           = 13;
0x10DD4	0x210D    MOVS	R1, #13
0x10DD6	0x4857    LDR	R0, [PC, #348]
0x10DD8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1260 :: 		Image27.Left            = 115;
0x10DDA	0x2173    MOVS	R1, #115
0x10DDC	0x4856    LDR	R0, [PC, #344]
0x10DDE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1261 :: 		Image27.Top             = 0;
0x10DE0	0x2100    MOVS	R1, #0
0x10DE2	0x4856    LDR	R0, [PC, #344]
0x10DE4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1262 :: 		Image27.Width           = 249;
0x10DE6	0x21F9    MOVS	R1, #249
0x10DE8	0xF000B8AA  B	#340
0x10DEC	0x05A42000  	_Image22+0
0x10DF0	0x05A82000  	_Image22+4
0x10DF4	0x05AA2000  	_Image22+6
0x10DF8	0x05AC2000  	_Image22+8
0x10DFC	0x05AE2000  	_Image22+10
0x10E00	0x05B02000  	_Image22+12
0x10E04	0x05BA2000  	_Image22+22
0x10E08	0x05BB2000  	_Image22+23
0x10E0C	0x1B540011  	#1121108
0x10E10	0x05B42000  	_Image22+16
0x10E14	0x05B82000  	_Image22+20
0x10E18	0x05B92000  	_Image22+21
0x10E1C	0x05BC2000  	_Image22+24
0x10E20	0x05C02000  	_Image22+28
0x10E24	0x05C42000  	_Image22+32
0x10E28	0x05C82000  	_Image22+36
0x10E2C	0x22982000  	_Boot+0
0x10E30	0x05CC2000  	_Image23+0
0x10E34	0x05D02000  	_Image23+4
0x10E38	0x05D22000  	_Image23+6
0x10E3C	0x05D42000  	_Image23+8
0x10E40	0x05D62000  	_Image23+10
0x10E44	0x05D82000  	_Image23+12
0x10E48	0x05E22000  	_Image23+22
0x10E4C	0x05E32000  	_Image23+23
0x10E50	0x1AF80013  	#1252088
0x10E54	0x05DC2000  	_Image23+16
0x10E58	0x05E02000  	_Image23+20
0x10E5C	0x05E12000  	_Image23+21
0x10E60	0x05E42000  	_Image23+24
0x10E64	0x05E82000  	_Image23+28
0x10E68	0x05EC2000  	_Image23+32
0x10E6C	0x05F02000  	_Image23+36
0x10E70	0x05F42000  	_Image24+0
0x10E74	0x05F82000  	_Image24+4
0x10E78	0x05FA2000  	_Image24+6
0x10E7C	0x05FC2000  	_Image24+8
0x10E80	0x05FE2000  	_Image24+10
0x10E84	0x06002000  	_Image24+12
0x10E88	0x060A2000  	_Image24+22
0x10E8C	0x060B2000  	_Image24+23
0x10E90	0x1A9C0015  	#1383068
0x10E94	0x06042000  	_Image24+16
0x10E98	0x06082000  	_Image24+20
0x10E9C	0x06092000  	_Image24+21
0x10EA0	0x060C2000  	_Image24+24
0x10EA4	0x06102000  	_Image24+28
0x10EA8	0x06142000  	_Image24+32
0x10EAC	0x06182000  	_Image24+36
0x10EB0	0x061C2000  	_Image25+0
0x10EB4	0x06202000  	_Image25+4
0x10EB8	0x06222000  	_Image25+6
0x10EBC	0x06242000  	_Image25+8
0x10EC0	0x06262000  	_Image25+10
0x10EC4	0x06282000  	_Image25+12
0x10EC8	0x06322000  	_Image25+22
0x10ECC	0x06332000  	_Image25+23
0x10ED0	0x1A400017  	#1514048
0x10ED4	0x062C2000  	_Image25+16
0x10ED8	0x06302000  	_Image25+20
0x10EDC	0x06312000  	_Image25+21
0x10EE0	0x06342000  	_Image25+24
0x10EE4	0x06382000  	_Image25+28
0x10EE8	0x063C2000  	_Image25+32
0x10EEC	0x06402000  	_Image25+36
0x10EF0	0x06442000  	_Image26+0
0x10EF4	0x06482000  	_Image26+4
0x10EF8	0x064A2000  	_Image26+6
0x10EFC	0x064C2000  	_Image26+8
0x10F00	0x064E2000  	_Image26+10
0x10F04	0x06502000  	_Image26+12
0x10F08	0x065A2000  	_Image26+22
0x10F0C	0x065B2000  	_Image26+23
0x10F10	0x19E40019  	#1645028
0x10F14	0x06542000  	_Image26+16
0x10F18	0x06582000  	_Image26+20
0x10F1C	0x06592000  	_Image26+21
0x10F20	0x065C2000  	_Image26+24
0x10F24	0x06602000  	_Image26+28
0x10F28	0x06642000  	_Image26+32
0x10F2C	0x06682000  	_Image26+36
0x10F30	0x066C2000  	_Image27+0
0x10F34	0x06702000  	_Image27+4
0x10F38	0x06722000  	_Image27+6
0x10F3C	0x06742000  	_Image27+8
0x10F40	0x4879    LDR	R0, [PC, #484]
0x10F42	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1263 :: 		Image27.Height          = 263;
0x10F44	0xF2401107  MOVW	R1, #263
0x10F48	0x4878    LDR	R0, [PC, #480]
0x10F4A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1264 :: 		Image27.Picture_Type    = 1;
0x10F4C	0x2101    MOVS	R1, #1
0x10F4E	0x4878    LDR	R0, [PC, #480]
0x10F50	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1265 :: 		Image27.Picture_Ratio   = 1;
0x10F52	0x2101    MOVS	R1, #1
0x10F54	0x4877    LDR	R0, [PC, #476]
0x10F56	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1266 :: 		Image27.Picture_Name    = logo13_jpg;
0x10F58	0x4977    LDR	R1, [PC, #476]
0x10F5A	0x4878    LDR	R0, [PC, #480]
0x10F5C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1267 :: 		Image27.Visible         = 1;
0x10F5E	0x2101    MOVS	R1, #1
0x10F60	0x4877    LDR	R0, [PC, #476]
0x10F62	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1268 :: 		Image27.Active          = 1;
0x10F64	0x2101    MOVS	R1, #1
0x10F66	0x4877    LDR	R0, [PC, #476]
0x10F68	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1269 :: 		Image27.OnUpPtr         = 0;
0x10F6A	0x2100    MOVS	R1, #0
0x10F6C	0x4876    LDR	R0, [PC, #472]
0x10F6E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1270 :: 		Image27.OnDownPtr       = 0;
0x10F70	0x2100    MOVS	R1, #0
0x10F72	0x4876    LDR	R0, [PC, #472]
0x10F74	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1271 :: 		Image27.OnClickPtr      = 0;
0x10F76	0x2100    MOVS	R1, #0
0x10F78	0x4875    LDR	R0, [PC, #468]
0x10F7A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1272 :: 		Image27.OnPressPtr      = 0;
0x10F7C	0x2100    MOVS	R1, #0
0x10F7E	0x4875    LDR	R0, [PC, #468]
0x10F80	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1274 :: 		Image28.OwnerScreen     = &Boot;
0x10F82	0x4975    LDR	R1, [PC, #468]
0x10F84	0x4875    LDR	R0, [PC, #468]
0x10F86	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1275 :: 		Image28.Order           = 14;
0x10F88	0x210E    MOVS	R1, #14
0x10F8A	0x4875    LDR	R0, [PC, #468]
0x10F8C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1276 :: 		Image28.Left            = 115;
0x10F8E	0x2173    MOVS	R1, #115
0x10F90	0x4874    LDR	R0, [PC, #464]
0x10F92	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1277 :: 		Image28.Top             = 0;
0x10F94	0x2100    MOVS	R1, #0
0x10F96	0x4874    LDR	R0, [PC, #464]
0x10F98	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1278 :: 		Image28.Width           = 249;
0x10F9A	0x21F9    MOVS	R1, #249
0x10F9C	0x4873    LDR	R0, [PC, #460]
0x10F9E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1279 :: 		Image28.Height          = 263;
0x10FA0	0xF2401107  MOVW	R1, #263
0x10FA4	0x4872    LDR	R0, [PC, #456]
0x10FA6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1280 :: 		Image28.Picture_Type    = 1;
0x10FA8	0x2101    MOVS	R1, #1
0x10FAA	0x4872    LDR	R0, [PC, #456]
0x10FAC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1281 :: 		Image28.Picture_Ratio   = 1;
0x10FAE	0x2101    MOVS	R1, #1
0x10FB0	0x4871    LDR	R0, [PC, #452]
0x10FB2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1282 :: 		Image28.Picture_Name    = logo14_jpg;
0x10FB4	0x4971    LDR	R1, [PC, #452]
0x10FB6	0x4872    LDR	R0, [PC, #456]
0x10FB8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1283 :: 		Image28.Visible         = 1;
0x10FBA	0x2101    MOVS	R1, #1
0x10FBC	0x4871    LDR	R0, [PC, #452]
0x10FBE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1284 :: 		Image28.Active          = 1;
0x10FC0	0x2101    MOVS	R1, #1
0x10FC2	0x4871    LDR	R0, [PC, #452]
0x10FC4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1285 :: 		Image28.OnUpPtr         = 0;
0x10FC6	0x2100    MOVS	R1, #0
0x10FC8	0x4870    LDR	R0, [PC, #448]
0x10FCA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1286 :: 		Image28.OnDownPtr       = 0;
0x10FCC	0x2100    MOVS	R1, #0
0x10FCE	0x4870    LDR	R0, [PC, #448]
0x10FD0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1287 :: 		Image28.OnClickPtr      = 0;
0x10FD2	0x2100    MOVS	R1, #0
0x10FD4	0x486F    LDR	R0, [PC, #444]
0x10FD6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1288 :: 		Image28.OnPressPtr      = 0;
0x10FD8	0x2100    MOVS	R1, #0
0x10FDA	0x486F    LDR	R0, [PC, #444]
0x10FDC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1290 :: 		Image29.OwnerScreen     = &Boot;
0x10FDE	0x495E    LDR	R1, [PC, #376]
0x10FE0	0x486E    LDR	R0, [PC, #440]
0x10FE2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1291 :: 		Image29.Order           = 15;
0x10FE4	0x210F    MOVS	R1, #15
0x10FE6	0x486E    LDR	R0, [PC, #440]
0x10FE8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1292 :: 		Image29.Left            = 115;
0x10FEA	0x2173    MOVS	R1, #115
0x10FEC	0x486D    LDR	R0, [PC, #436]
0x10FEE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1293 :: 		Image29.Top             = 0;
0x10FF0	0x2100    MOVS	R1, #0
0x10FF2	0x486D    LDR	R0, [PC, #436]
0x10FF4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1294 :: 		Image29.Width           = 249;
0x10FF6	0x21F9    MOVS	R1, #249
0x10FF8	0x486C    LDR	R0, [PC, #432]
0x10FFA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1295 :: 		Image29.Height          = 263;
0x10FFC	0xF2401107  MOVW	R1, #263
0x11000	0x486B    LDR	R0, [PC, #428]
0x11002	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1296 :: 		Image29.Picture_Type    = 1;
0x11004	0x2101    MOVS	R1, #1
0x11006	0x486B    LDR	R0, [PC, #428]
0x11008	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1297 :: 		Image29.Picture_Ratio   = 1;
0x1100A	0x2101    MOVS	R1, #1
0x1100C	0x486A    LDR	R0, [PC, #424]
0x1100E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1298 :: 		Image29.Picture_Name    = logo15_jpg;
0x11010	0x496A    LDR	R1, [PC, #424]
0x11012	0x486B    LDR	R0, [PC, #428]
0x11014	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1299 :: 		Image29.Visible         = 1;
0x11016	0x2101    MOVS	R1, #1
0x11018	0x486A    LDR	R0, [PC, #424]
0x1101A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1300 :: 		Image29.Active          = 1;
0x1101C	0x2101    MOVS	R1, #1
0x1101E	0x486A    LDR	R0, [PC, #424]
0x11020	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1301 :: 		Image29.OnUpPtr         = 0;
0x11022	0x2100    MOVS	R1, #0
0x11024	0x4869    LDR	R0, [PC, #420]
0x11026	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1302 :: 		Image29.OnDownPtr       = 0;
0x11028	0x2100    MOVS	R1, #0
0x1102A	0x4869    LDR	R0, [PC, #420]
0x1102C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1303 :: 		Image29.OnClickPtr      = 0;
0x1102E	0x2100    MOVS	R1, #0
0x11030	0x4868    LDR	R0, [PC, #416]
0x11032	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1304 :: 		Image29.OnPressPtr      = 0;
0x11034	0x2100    MOVS	R1, #0
0x11036	0x4868    LDR	R0, [PC, #416]
0x11038	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1306 :: 		Image30.OwnerScreen     = &Boot;
0x1103A	0x4947    LDR	R1, [PC, #284]
0x1103C	0x4867    LDR	R0, [PC, #412]
0x1103E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1307 :: 		Image30.Order           = 16;
0x11040	0x2110    MOVS	R1, #16
0x11042	0x4867    LDR	R0, [PC, #412]
0x11044	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1308 :: 		Image30.Left            = 115;
0x11046	0x2173    MOVS	R1, #115
0x11048	0x4866    LDR	R0, [PC, #408]
0x1104A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1309 :: 		Image30.Top             = 0;
0x1104C	0x2100    MOVS	R1, #0
0x1104E	0x4866    LDR	R0, [PC, #408]
0x11050	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1310 :: 		Image30.Width           = 249;
0x11052	0x21F9    MOVS	R1, #249
0x11054	0x4865    LDR	R0, [PC, #404]
0x11056	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1311 :: 		Image30.Height          = 263;
0x11058	0xF2401107  MOVW	R1, #263
0x1105C	0x4864    LDR	R0, [PC, #400]
0x1105E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1312 :: 		Image30.Picture_Type    = 1;
0x11060	0x2101    MOVS	R1, #1
0x11062	0x4864    LDR	R0, [PC, #400]
0x11064	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1313 :: 		Image30.Picture_Ratio   = 1;
0x11066	0x2101    MOVS	R1, #1
0x11068	0x4863    LDR	R0, [PC, #396]
0x1106A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1314 :: 		Image30.Picture_Name    = logo16_jpg;
0x1106C	0x4963    LDR	R1, [PC, #396]
0x1106E	0x4864    LDR	R0, [PC, #400]
0x11070	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1315 :: 		Image30.Visible         = 1;
0x11072	0x2101    MOVS	R1, #1
0x11074	0x4863    LDR	R0, [PC, #396]
0x11076	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1316 :: 		Image30.Active          = 1;
0x11078	0x2101    MOVS	R1, #1
0x1107A	0x4863    LDR	R0, [PC, #396]
0x1107C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1317 :: 		Image30.OnUpPtr         = 0;
0x1107E	0x2100    MOVS	R1, #0
0x11080	0x4862    LDR	R0, [PC, #392]
0x11082	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1318 :: 		Image30.OnDownPtr       = 0;
0x11084	0x2100    MOVS	R1, #0
0x11086	0x4862    LDR	R0, [PC, #392]
0x11088	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1319 :: 		Image30.OnClickPtr      = 0;
0x1108A	0x2100    MOVS	R1, #0
0x1108C	0x4861    LDR	R0, [PC, #388]
0x1108E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1320 :: 		Image30.OnPressPtr      = 0;
0x11090	0x2100    MOVS	R1, #0
0x11092	0x4861    LDR	R0, [PC, #388]
0x11094	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1322 :: 		Image31.OwnerScreen     = &Boot;
0x11096	0x4930    LDR	R1, [PC, #192]
0x11098	0x4860    LDR	R0, [PC, #384]
0x1109A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1323 :: 		Image31.Order           = 17;
0x1109C	0x2111    MOVS	R1, #17
0x1109E	0x4860    LDR	R0, [PC, #384]
0x110A0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1324 :: 		Image31.Left            = 115;
0x110A2	0x2173    MOVS	R1, #115
0x110A4	0x485F    LDR	R0, [PC, #380]
0x110A6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1325 :: 		Image31.Top             = 0;
0x110A8	0x2100    MOVS	R1, #0
0x110AA	0x485F    LDR	R0, [PC, #380]
0x110AC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1326 :: 		Image31.Width           = 249;
0x110AE	0x21F9    MOVS	R1, #249
0x110B0	0x485E    LDR	R0, [PC, #376]
0x110B2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1327 :: 		Image31.Height          = 263;
0x110B4	0xF2401107  MOVW	R1, #263
0x110B8	0x485D    LDR	R0, [PC, #372]
0x110BA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1328 :: 		Image31.Picture_Type    = 1;
0x110BC	0x2101    MOVS	R1, #1
0x110BE	0x485D    LDR	R0, [PC, #372]
0x110C0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1329 :: 		Image31.Picture_Ratio   = 1;
0x110C2	0x2101    MOVS	R1, #1
0x110C4	0x485C    LDR	R0, [PC, #368]
0x110C6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1330 :: 		Image31.Picture_Name    = logo17_jpg;
0x110C8	0x495C    LDR	R1, [PC, #368]
0x110CA	0x485D    LDR	R0, [PC, #372]
0x110CC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1331 :: 		Image31.Visible         = 1;
0x110CE	0x2101    MOVS	R1, #1
0x110D0	0x485C    LDR	R0, [PC, #368]
0x110D2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1332 :: 		Image31.Active          = 1;
0x110D4	0x2101    MOVS	R1, #1
0x110D6	0x485C    LDR	R0, [PC, #368]
0x110D8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1333 :: 		Image31.OnUpPtr         = 0;
0x110DA	0x2100    MOVS	R1, #0
0x110DC	0x485B    LDR	R0, [PC, #364]
0x110DE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1334 :: 		Image31.OnDownPtr       = 0;
0x110E0	0x2100    MOVS	R1, #0
0x110E2	0x485B    LDR	R0, [PC, #364]
0x110E4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1335 :: 		Image31.OnClickPtr      = 0;
0x110E6	0x2100    MOVS	R1, #0
0x110E8	0x485A    LDR	R0, [PC, #360]
0x110EA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1336 :: 		Image31.OnPressPtr      = 0;
0x110EC	0x2100    MOVS	R1, #0
0x110EE	0x485A    LDR	R0, [PC, #360]
0x110F0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1338 :: 		Image32.OwnerScreen     = &Boot;
0x110F2	0x4919    LDR	R1, [PC, #100]
0x110F4	0x4859    LDR	R0, [PC, #356]
0x110F6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1339 :: 		Image32.Order           = 18;
0x110F8	0x2112    MOVS	R1, #18
0x110FA	0x4859    LDR	R0, [PC, #356]
0x110FC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1340 :: 		Image32.Left            = 115;
0x110FE	0x2173    MOVS	R1, #115
0x11100	0x4858    LDR	R0, [PC, #352]
0x11102	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1341 :: 		Image32.Top             = 0;
0x11104	0x2100    MOVS	R1, #0
0x11106	0x4858    LDR	R0, [PC, #352]
0x11108	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1342 :: 		Image32.Width           = 249;
0x1110A	0x21F9    MOVS	R1, #249
0x1110C	0x4857    LDR	R0, [PC, #348]
0x1110E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1343 :: 		Image32.Height          = 263;
0x11110	0xF2401107  MOVW	R1, #263
0x11114	0x4856    LDR	R0, [PC, #344]
0x11116	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1344 :: 		Image32.Picture_Type    = 1;
0x11118	0x2101    MOVS	R1, #1
0x1111A	0x4856    LDR	R0, [PC, #344]
0x1111C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1345 :: 		Image32.Picture_Ratio   = 1;
0x1111E	0x2101    MOVS	R1, #1
0x11120	0x4855    LDR	R0, [PC, #340]
0x11122	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1346 :: 		Image32.Picture_Name    = logo18_jpg;
0x11124	0xF000B8AA  B	#340
0x11128	0x06762000  	_Image27+10
0x1112C	0x06782000  	_Image27+12
0x11130	0x06822000  	_Image27+22
0x11134	0x06832000  	_Image27+23
0x11138	0x1988001B  	#1776008
0x1113C	0x067C2000  	_Image27+16
0x11140	0x06802000  	_Image27+20
0x11144	0x06812000  	_Image27+21
0x11148	0x06842000  	_Image27+24
0x1114C	0x06882000  	_Image27+28
0x11150	0x068C2000  	_Image27+32
0x11154	0x06902000  	_Image27+36
0x11158	0x22982000  	_Boot+0
0x1115C	0x06942000  	_Image28+0
0x11160	0x06982000  	_Image28+4
0x11164	0x069A2000  	_Image28+6
0x11168	0x069C2000  	_Image28+8
0x1116C	0x069E2000  	_Image28+10
0x11170	0x06A02000  	_Image28+12
0x11174	0x06AA2000  	_Image28+22
0x11178	0x06AB2000  	_Image28+23
0x1117C	0x192C001D  	#1906988
0x11180	0x06A42000  	_Image28+16
0x11184	0x06A82000  	_Image28+20
0x11188	0x06A92000  	_Image28+21
0x1118C	0x06AC2000  	_Image28+24
0x11190	0x06B02000  	_Image28+28
0x11194	0x06B42000  	_Image28+32
0x11198	0x06B82000  	_Image28+36
0x1119C	0x06BC2000  	_Image29+0
0x111A0	0x06C02000  	_Image29+4
0x111A4	0x06C22000  	_Image29+6
0x111A8	0x06C42000  	_Image29+8
0x111AC	0x06C62000  	_Image29+10
0x111B0	0x06C82000  	_Image29+12
0x111B4	0x06D22000  	_Image29+22
0x111B8	0x06D32000  	_Image29+23
0x111BC	0x18D0001F  	#2037968
0x111C0	0x06CC2000  	_Image29+16
0x111C4	0x06D02000  	_Image29+20
0x111C8	0x06D12000  	_Image29+21
0x111CC	0x06D42000  	_Image29+24
0x111D0	0x06D82000  	_Image29+28
0x111D4	0x06DC2000  	_Image29+32
0x111D8	0x06E02000  	_Image29+36
0x111DC	0x06E42000  	_Image30+0
0x111E0	0x06E82000  	_Image30+4
0x111E4	0x06EA2000  	_Image30+6
0x111E8	0x06EC2000  	_Image30+8
0x111EC	0x06EE2000  	_Image30+10
0x111F0	0x06F02000  	_Image30+12
0x111F4	0x06FA2000  	_Image30+22
0x111F8	0x06FB2000  	_Image30+23
0x111FC	0x18740021  	#2168948
0x11200	0x06F42000  	_Image30+16
0x11204	0x06F82000  	_Image30+20
0x11208	0x06F92000  	_Image30+21
0x1120C	0x06FC2000  	_Image30+24
0x11210	0x07002000  	_Image30+28
0x11214	0x07042000  	_Image30+32
0x11218	0x07082000  	_Image30+36
0x1121C	0x070C2000  	_Image31+0
0x11220	0x07102000  	_Image31+4
0x11224	0x07122000  	_Image31+6
0x11228	0x07142000  	_Image31+8
0x1122C	0x07162000  	_Image31+10
0x11230	0x07182000  	_Image31+12
0x11234	0x07222000  	_Image31+22
0x11238	0x07232000  	_Image31+23
0x1123C	0x18180023  	#2299928
0x11240	0x071C2000  	_Image31+16
0x11244	0x07202000  	_Image31+20
0x11248	0x07212000  	_Image31+21
0x1124C	0x07242000  	_Image31+24
0x11250	0x07282000  	_Image31+28
0x11254	0x072C2000  	_Image31+32
0x11258	0x07302000  	_Image31+36
0x1125C	0x07342000  	_Image32+0
0x11260	0x07382000  	_Image32+4
0x11264	0x073A2000  	_Image32+6
0x11268	0x073C2000  	_Image32+8
0x1126C	0x073E2000  	_Image32+10
0x11270	0x07402000  	_Image32+12
0x11274	0x074A2000  	_Image32+22
0x11278	0x074B2000  	_Image32+23
0x1127C	0x4978    LDR	R1, [PC, #480]
0x1127E	0x4879    LDR	R0, [PC, #484]
0x11280	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1347 :: 		Image32.Visible         = 1;
0x11282	0x2101    MOVS	R1, #1
0x11284	0x4878    LDR	R0, [PC, #480]
0x11286	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1348 :: 		Image32.Active          = 1;
0x11288	0x2101    MOVS	R1, #1
0x1128A	0x4878    LDR	R0, [PC, #480]
0x1128C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1349 :: 		Image32.OnUpPtr         = 0;
0x1128E	0x2100    MOVS	R1, #0
0x11290	0x4877    LDR	R0, [PC, #476]
0x11292	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1350 :: 		Image32.OnDownPtr       = 0;
0x11294	0x2100    MOVS	R1, #0
0x11296	0x4877    LDR	R0, [PC, #476]
0x11298	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1351 :: 		Image32.OnClickPtr      = 0;
0x1129A	0x2100    MOVS	R1, #0
0x1129C	0x4876    LDR	R0, [PC, #472]
0x1129E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1352 :: 		Image32.OnPressPtr      = 0;
0x112A0	0x2100    MOVS	R1, #0
0x112A2	0x4876    LDR	R0, [PC, #472]
0x112A4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1354 :: 		Image33.OwnerScreen     = &Boot;
0x112A6	0x4976    LDR	R1, [PC, #472]
0x112A8	0x4876    LDR	R0, [PC, #472]
0x112AA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1355 :: 		Image33.Order           = 19;
0x112AC	0x2113    MOVS	R1, #19
0x112AE	0x4876    LDR	R0, [PC, #472]
0x112B0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1356 :: 		Image33.Left            = 115;
0x112B2	0x2173    MOVS	R1, #115
0x112B4	0x4875    LDR	R0, [PC, #468]
0x112B6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1357 :: 		Image33.Top             = 0;
0x112B8	0x2100    MOVS	R1, #0
0x112BA	0x4875    LDR	R0, [PC, #468]
0x112BC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1358 :: 		Image33.Width           = 249;
0x112BE	0x21F9    MOVS	R1, #249
0x112C0	0x4874    LDR	R0, [PC, #464]
0x112C2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1359 :: 		Image33.Height          = 263;
0x112C4	0xF2401107  MOVW	R1, #263
0x112C8	0x4873    LDR	R0, [PC, #460]
0x112CA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1360 :: 		Image33.Picture_Type    = 1;
0x112CC	0x2101    MOVS	R1, #1
0x112CE	0x4873    LDR	R0, [PC, #460]
0x112D0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1361 :: 		Image33.Picture_Ratio   = 1;
0x112D2	0x2101    MOVS	R1, #1
0x112D4	0x4872    LDR	R0, [PC, #456]
0x112D6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1362 :: 		Image33.Picture_Name    = logo19_jpg;
0x112D8	0x4972    LDR	R1, [PC, #456]
0x112DA	0x4873    LDR	R0, [PC, #460]
0x112DC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1363 :: 		Image33.Visible         = 1;
0x112DE	0x2101    MOVS	R1, #1
0x112E0	0x4872    LDR	R0, [PC, #456]
0x112E2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1364 :: 		Image33.Active          = 1;
0x112E4	0x2101    MOVS	R1, #1
0x112E6	0x4872    LDR	R0, [PC, #456]
0x112E8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1365 :: 		Image33.OnUpPtr         = 0;
0x112EA	0x2100    MOVS	R1, #0
0x112EC	0x4871    LDR	R0, [PC, #452]
0x112EE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1366 :: 		Image33.OnDownPtr       = 0;
0x112F0	0x2100    MOVS	R1, #0
0x112F2	0x4871    LDR	R0, [PC, #452]
0x112F4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1367 :: 		Image33.OnClickPtr      = 0;
0x112F6	0x2100    MOVS	R1, #0
0x112F8	0x4870    LDR	R0, [PC, #448]
0x112FA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1368 :: 		Image33.OnPressPtr      = 0;
0x112FC	0x2100    MOVS	R1, #0
0x112FE	0x4870    LDR	R0, [PC, #448]
0x11300	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1370 :: 		Image34.OwnerScreen     = &Boot;
0x11302	0x495F    LDR	R1, [PC, #380]
0x11304	0x486F    LDR	R0, [PC, #444]
0x11306	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1371 :: 		Image34.Order           = 20;
0x11308	0x2114    MOVS	R1, #20
0x1130A	0x486F    LDR	R0, [PC, #444]
0x1130C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1372 :: 		Image34.Left            = 115;
0x1130E	0x2173    MOVS	R1, #115
0x11310	0x486E    LDR	R0, [PC, #440]
0x11312	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1373 :: 		Image34.Top             = 0;
0x11314	0x2100    MOVS	R1, #0
0x11316	0x486E    LDR	R0, [PC, #440]
0x11318	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1374 :: 		Image34.Width           = 249;
0x1131A	0x21F9    MOVS	R1, #249
0x1131C	0x486D    LDR	R0, [PC, #436]
0x1131E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1375 :: 		Image34.Height          = 263;
0x11320	0xF2401107  MOVW	R1, #263
0x11324	0x486C    LDR	R0, [PC, #432]
0x11326	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1376 :: 		Image34.Picture_Type    = 1;
0x11328	0x2101    MOVS	R1, #1
0x1132A	0x486C    LDR	R0, [PC, #432]
0x1132C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1377 :: 		Image34.Picture_Ratio   = 1;
0x1132E	0x2101    MOVS	R1, #1
0x11330	0x486B    LDR	R0, [PC, #428]
0x11332	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1378 :: 		Image34.Picture_Name    = logo20_jpg;
0x11334	0x496B    LDR	R1, [PC, #428]
0x11336	0x486C    LDR	R0, [PC, #432]
0x11338	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1379 :: 		Image34.Visible         = 1;
0x1133A	0x2101    MOVS	R1, #1
0x1133C	0x486B    LDR	R0, [PC, #428]
0x1133E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1380 :: 		Image34.Active          = 1;
0x11340	0x2101    MOVS	R1, #1
0x11342	0x486B    LDR	R0, [PC, #428]
0x11344	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1381 :: 		Image34.OnUpPtr         = 0;
0x11346	0x2100    MOVS	R1, #0
0x11348	0x486A    LDR	R0, [PC, #424]
0x1134A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1382 :: 		Image34.OnDownPtr       = 0;
0x1134C	0x2100    MOVS	R1, #0
0x1134E	0x486A    LDR	R0, [PC, #424]
0x11350	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1383 :: 		Image34.OnClickPtr      = 0;
0x11352	0x2100    MOVS	R1, #0
0x11354	0x4869    LDR	R0, [PC, #420]
0x11356	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1384 :: 		Image34.OnPressPtr      = 0;
0x11358	0x2100    MOVS	R1, #0
0x1135A	0x4869    LDR	R0, [PC, #420]
0x1135C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1386 :: 		Image35.OwnerScreen     = &Boot;
0x1135E	0x4948    LDR	R1, [PC, #288]
0x11360	0x4868    LDR	R0, [PC, #416]
0x11362	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1387 :: 		Image35.Order           = 21;
0x11364	0x2115    MOVS	R1, #21
0x11366	0x4868    LDR	R0, [PC, #416]
0x11368	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1388 :: 		Image35.Left            = 115;
0x1136A	0x2173    MOVS	R1, #115
0x1136C	0x4867    LDR	R0, [PC, #412]
0x1136E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1389 :: 		Image35.Top             = 0;
0x11370	0x2100    MOVS	R1, #0
0x11372	0x4867    LDR	R0, [PC, #412]
0x11374	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1390 :: 		Image35.Width           = 249;
0x11376	0x21F9    MOVS	R1, #249
0x11378	0x4866    LDR	R0, [PC, #408]
0x1137A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1391 :: 		Image35.Height          = 263;
0x1137C	0xF2401107  MOVW	R1, #263
0x11380	0x4865    LDR	R0, [PC, #404]
0x11382	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1392 :: 		Image35.Picture_Type    = 1;
0x11384	0x2101    MOVS	R1, #1
0x11386	0x4865    LDR	R0, [PC, #404]
0x11388	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1393 :: 		Image35.Picture_Ratio   = 1;
0x1138A	0x2101    MOVS	R1, #1
0x1138C	0x4864    LDR	R0, [PC, #400]
0x1138E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1394 :: 		Image35.Picture_Name    = logo21_jpg;
0x11390	0x4964    LDR	R1, [PC, #400]
0x11392	0x4865    LDR	R0, [PC, #404]
0x11394	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1395 :: 		Image35.Visible         = 1;
0x11396	0x2101    MOVS	R1, #1
0x11398	0x4864    LDR	R0, [PC, #400]
0x1139A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1396 :: 		Image35.Active          = 1;
0x1139C	0x2101    MOVS	R1, #1
0x1139E	0x4864    LDR	R0, [PC, #400]
0x113A0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1397 :: 		Image35.OnUpPtr         = 0;
0x113A2	0x2100    MOVS	R1, #0
0x113A4	0x4863    LDR	R0, [PC, #396]
0x113A6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1398 :: 		Image35.OnDownPtr       = 0;
0x113A8	0x2100    MOVS	R1, #0
0x113AA	0x4863    LDR	R0, [PC, #396]
0x113AC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1399 :: 		Image35.OnClickPtr      = 0;
0x113AE	0x2100    MOVS	R1, #0
0x113B0	0x4862    LDR	R0, [PC, #392]
0x113B2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1400 :: 		Image35.OnPressPtr      = 0;
0x113B4	0x2100    MOVS	R1, #0
0x113B6	0x4862    LDR	R0, [PC, #392]
0x113B8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1402 :: 		Image36.OwnerScreen     = &Boot;
0x113BA	0x4931    LDR	R1, [PC, #196]
0x113BC	0x4861    LDR	R0, [PC, #388]
0x113BE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1403 :: 		Image36.Order           = 22;
0x113C0	0x2116    MOVS	R1, #22
0x113C2	0x4861    LDR	R0, [PC, #388]
0x113C4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1404 :: 		Image36.Left            = 115;
0x113C6	0x2173    MOVS	R1, #115
0x113C8	0x4860    LDR	R0, [PC, #384]
0x113CA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1405 :: 		Image36.Top             = 0;
0x113CC	0x2100    MOVS	R1, #0
0x113CE	0x4860    LDR	R0, [PC, #384]
0x113D0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1406 :: 		Image36.Width           = 249;
0x113D2	0x21F9    MOVS	R1, #249
0x113D4	0x485F    LDR	R0, [PC, #380]
0x113D6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1407 :: 		Image36.Height          = 263;
0x113D8	0xF2401107  MOVW	R1, #263
0x113DC	0x485E    LDR	R0, [PC, #376]
0x113DE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1408 :: 		Image36.Picture_Type    = 1;
0x113E0	0x2101    MOVS	R1, #1
0x113E2	0x485E    LDR	R0, [PC, #376]
0x113E4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1409 :: 		Image36.Picture_Ratio   = 1;
0x113E6	0x2101    MOVS	R1, #1
0x113E8	0x485D    LDR	R0, [PC, #372]
0x113EA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1410 :: 		Image36.Picture_Name    = logo22_jpg;
0x113EC	0x495D    LDR	R1, [PC, #372]
0x113EE	0x485E    LDR	R0, [PC, #376]
0x113F0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1411 :: 		Image36.Visible         = 1;
0x113F2	0x2101    MOVS	R1, #1
0x113F4	0x485D    LDR	R0, [PC, #372]
0x113F6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1412 :: 		Image36.Active          = 1;
0x113F8	0x2101    MOVS	R1, #1
0x113FA	0x485D    LDR	R0, [PC, #372]
0x113FC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1413 :: 		Image36.OnUpPtr         = 0;
0x113FE	0x2100    MOVS	R1, #0
0x11400	0x485C    LDR	R0, [PC, #368]
0x11402	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1414 :: 		Image36.OnDownPtr       = 0;
0x11404	0x2100    MOVS	R1, #0
0x11406	0x485C    LDR	R0, [PC, #368]
0x11408	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1415 :: 		Image36.OnClickPtr      = 0;
0x1140A	0x2100    MOVS	R1, #0
0x1140C	0x485B    LDR	R0, [PC, #364]
0x1140E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1416 :: 		Image36.OnPressPtr      = 0;
0x11410	0x2100    MOVS	R1, #0
0x11412	0x485B    LDR	R0, [PC, #364]
0x11414	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1418 :: 		Image37.OwnerScreen     = &Boot;
0x11416	0x491A    LDR	R1, [PC, #104]
0x11418	0x485A    LDR	R0, [PC, #360]
0x1141A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1419 :: 		Image37.Order           = 23;
0x1141C	0x2117    MOVS	R1, #23
0x1141E	0x485A    LDR	R0, [PC, #360]
0x11420	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1420 :: 		Image37.Left            = 115;
0x11422	0x2173    MOVS	R1, #115
0x11424	0x4859    LDR	R0, [PC, #356]
0x11426	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1421 :: 		Image37.Top             = 0;
0x11428	0x2100    MOVS	R1, #0
0x1142A	0x4859    LDR	R0, [PC, #356]
0x1142C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1422 :: 		Image37.Width           = 249;
0x1142E	0x21F9    MOVS	R1, #249
0x11430	0x4858    LDR	R0, [PC, #352]
0x11432	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1423 :: 		Image37.Height          = 263;
0x11434	0xF2401107  MOVW	R1, #263
0x11438	0x4857    LDR	R0, [PC, #348]
0x1143A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1424 :: 		Image37.Picture_Type    = 1;
0x1143C	0x2101    MOVS	R1, #1
0x1143E	0x4857    LDR	R0, [PC, #348]
0x11440	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1425 :: 		Image37.Picture_Ratio   = 1;
0x11442	0x2101    MOVS	R1, #1
0x11444	0x4856    LDR	R0, [PC, #344]
0x11446	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1426 :: 		Image37.Picture_Name    = logo23_jpg;
0x11448	0x4956    LDR	R1, [PC, #344]
0x1144A	0x4857    LDR	R0, [PC, #348]
0x1144C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1427 :: 		Image37.Visible         = 1;
0x1144E	0x2101    MOVS	R1, #1
0x11450	0x4856    LDR	R0, [PC, #344]
0x11452	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1428 :: 		Image37.Active          = 1;
0x11454	0x2101    MOVS	R1, #1
0x11456	0x4856    LDR	R0, [PC, #344]
0x11458	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1429 :: 		Image37.OnUpPtr         = 0;
0x1145A	0x2100    MOVS	R1, #0
0x1145C	0x4855    LDR	R0, [PC, #340]
0x1145E	0xE0AB    B	#342
0x11460	0x17BC0025  	#2430908
0x11464	0x07442000  	_Image32+16
0x11468	0x07482000  	_Image32+20
0x1146C	0x07492000  	_Image32+21
0x11470	0x074C2000  	_Image32+24
0x11474	0x07502000  	_Image32+28
0x11478	0x07542000  	_Image32+32
0x1147C	0x07582000  	_Image32+36
0x11480	0x22982000  	_Boot+0
0x11484	0x075C2000  	_Image33+0
0x11488	0x07602000  	_Image33+4
0x1148C	0x07622000  	_Image33+6
0x11490	0x07642000  	_Image33+8
0x11494	0x07662000  	_Image33+10
0x11498	0x07682000  	_Image33+12
0x1149C	0x07722000  	_Image33+22
0x114A0	0x07732000  	_Image33+23
0x114A4	0x17600027  	#2561888
0x114A8	0x076C2000  	_Image33+16
0x114AC	0x07702000  	_Image33+20
0x114B0	0x07712000  	_Image33+21
0x114B4	0x07742000  	_Image33+24
0x114B8	0x07782000  	_Image33+28
0x114BC	0x077C2000  	_Image33+32
0x114C0	0x07802000  	_Image33+36
0x114C4	0x07842000  	_Image34+0
0x114C8	0x07882000  	_Image34+4
0x114CC	0x078A2000  	_Image34+6
0x114D0	0x078C2000  	_Image34+8
0x114D4	0x078E2000  	_Image34+10
0x114D8	0x07902000  	_Image34+12
0x114DC	0x079A2000  	_Image34+22
0x114E0	0x079B2000  	_Image34+23
0x114E4	0x17040029  	#2692868
0x114E8	0x07942000  	_Image34+16
0x114EC	0x07982000  	_Image34+20
0x114F0	0x07992000  	_Image34+21
0x114F4	0x079C2000  	_Image34+24
0x114F8	0x07A02000  	_Image34+28
0x114FC	0x07A42000  	_Image34+32
0x11500	0x07A82000  	_Image34+36
0x11504	0x07AC2000  	_Image35+0
0x11508	0x07B02000  	_Image35+4
0x1150C	0x07B22000  	_Image35+6
0x11510	0x07B42000  	_Image35+8
0x11514	0x07B62000  	_Image35+10
0x11518	0x07B82000  	_Image35+12
0x1151C	0x07C22000  	_Image35+22
0x11520	0x07C32000  	_Image35+23
0x11524	0x16A8002B  	#2823848
0x11528	0x07BC2000  	_Image35+16
0x1152C	0x07C02000  	_Image35+20
0x11530	0x07C12000  	_Image35+21
0x11534	0x07C42000  	_Image35+24
0x11538	0x07C82000  	_Image35+28
0x1153C	0x07CC2000  	_Image35+32
0x11540	0x07D02000  	_Image35+36
0x11544	0x07D42000  	_Image36+0
0x11548	0x07D82000  	_Image36+4
0x1154C	0x07DA2000  	_Image36+6
0x11550	0x07DC2000  	_Image36+8
0x11554	0x07DE2000  	_Image36+10
0x11558	0x07E02000  	_Image36+12
0x1155C	0x07EA2000  	_Image36+22
0x11560	0x07EB2000  	_Image36+23
0x11564	0x164C002D  	#2954828
0x11568	0x07E42000  	_Image36+16
0x1156C	0x07E82000  	_Image36+20
0x11570	0x07E92000  	_Image36+21
0x11574	0x07EC2000  	_Image36+24
0x11578	0x07F02000  	_Image36+28
0x1157C	0x07F42000  	_Image36+32
0x11580	0x07F82000  	_Image36+36
0x11584	0x07FC2000  	_Image37+0
0x11588	0x08002000  	_Image37+4
0x1158C	0x08022000  	_Image37+6
0x11590	0x08042000  	_Image37+8
0x11594	0x08062000  	_Image37+10
0x11598	0x08082000  	_Image37+12
0x1159C	0x08122000  	_Image37+22
0x115A0	0x08132000  	_Image37+23
0x115A4	0x15F0002F  	#3085808
0x115A8	0x080C2000  	_Image37+16
0x115AC	0x08102000  	_Image37+20
0x115B0	0x08112000  	_Image37+21
0x115B4	0x08142000  	_Image37+24
0x115B8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1430 :: 		Image37.OnDownPtr       = 0;
0x115BA	0x2100    MOVS	R1, #0
0x115BC	0x4878    LDR	R0, [PC, #480]
0x115BE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1431 :: 		Image37.OnClickPtr      = 0;
0x115C0	0x2100    MOVS	R1, #0
0x115C2	0x4878    LDR	R0, [PC, #480]
0x115C4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1432 :: 		Image37.OnPressPtr      = 0;
0x115C6	0x2100    MOVS	R1, #0
0x115C8	0x4877    LDR	R0, [PC, #476]
0x115CA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1434 :: 		Image38.OwnerScreen     = &Boot;
0x115CC	0x4977    LDR	R1, [PC, #476]
0x115CE	0x4878    LDR	R0, [PC, #480]
0x115D0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1435 :: 		Image38.Order           = 24;
0x115D2	0x2118    MOVS	R1, #24
0x115D4	0x4877    LDR	R0, [PC, #476]
0x115D6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1436 :: 		Image38.Left            = 115;
0x115D8	0x2173    MOVS	R1, #115
0x115DA	0x4877    LDR	R0, [PC, #476]
0x115DC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1437 :: 		Image38.Top             = 0;
0x115DE	0x2100    MOVS	R1, #0
0x115E0	0x4876    LDR	R0, [PC, #472]
0x115E2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1438 :: 		Image38.Width           = 249;
0x115E4	0x21F9    MOVS	R1, #249
0x115E6	0x4876    LDR	R0, [PC, #472]
0x115E8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1439 :: 		Image38.Height          = 263;
0x115EA	0xF2401107  MOVW	R1, #263
0x115EE	0x4875    LDR	R0, [PC, #468]
0x115F0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1440 :: 		Image38.Picture_Type    = 1;
0x115F2	0x2101    MOVS	R1, #1
0x115F4	0x4874    LDR	R0, [PC, #464]
0x115F6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1441 :: 		Image38.Picture_Ratio   = 1;
0x115F8	0x2101    MOVS	R1, #1
0x115FA	0x4874    LDR	R0, [PC, #464]
0x115FC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1442 :: 		Image38.Picture_Name    = logo24_jpg;
0x115FE	0x4974    LDR	R1, [PC, #464]
0x11600	0x4874    LDR	R0, [PC, #464]
0x11602	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1443 :: 		Image38.Visible         = 1;
0x11604	0x2101    MOVS	R1, #1
0x11606	0x4874    LDR	R0, [PC, #464]
0x11608	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1444 :: 		Image38.Active          = 1;
0x1160A	0x2101    MOVS	R1, #1
0x1160C	0x4873    LDR	R0, [PC, #460]
0x1160E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1445 :: 		Image38.OnUpPtr         = 0;
0x11610	0x2100    MOVS	R1, #0
0x11612	0x4873    LDR	R0, [PC, #460]
0x11614	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1446 :: 		Image38.OnDownPtr       = 0;
0x11616	0x2100    MOVS	R1, #0
0x11618	0x4872    LDR	R0, [PC, #456]
0x1161A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1447 :: 		Image38.OnClickPtr      = 0;
0x1161C	0x2100    MOVS	R1, #0
0x1161E	0x4872    LDR	R0, [PC, #456]
0x11620	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1448 :: 		Image38.OnPressPtr      = 0;
0x11622	0x2100    MOVS	R1, #0
0x11624	0x4871    LDR	R0, [PC, #452]
0x11626	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1450 :: 		Image39.OwnerScreen     = &Boot;
0x11628	0x4960    LDR	R1, [PC, #384]
0x1162A	0x4871    LDR	R0, [PC, #452]
0x1162C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1451 :: 		Image39.Order           = 25;
0x1162E	0x2119    MOVS	R1, #25
0x11630	0x4870    LDR	R0, [PC, #448]
0x11632	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1452 :: 		Image39.Left            = 115;
0x11634	0x2173    MOVS	R1, #115
0x11636	0x4870    LDR	R0, [PC, #448]
0x11638	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1453 :: 		Image39.Top             = 0;
0x1163A	0x2100    MOVS	R1, #0
0x1163C	0x486F    LDR	R0, [PC, #444]
0x1163E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1454 :: 		Image39.Width           = 249;
0x11640	0x21F9    MOVS	R1, #249
0x11642	0x486F    LDR	R0, [PC, #444]
0x11644	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1455 :: 		Image39.Height          = 263;
0x11646	0xF2401107  MOVW	R1, #263
0x1164A	0x486E    LDR	R0, [PC, #440]
0x1164C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1456 :: 		Image39.Picture_Type    = 1;
0x1164E	0x2101    MOVS	R1, #1
0x11650	0x486D    LDR	R0, [PC, #436]
0x11652	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1457 :: 		Image39.Picture_Ratio   = 1;
0x11654	0x2101    MOVS	R1, #1
0x11656	0x486D    LDR	R0, [PC, #436]
0x11658	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1458 :: 		Image39.Picture_Name    = logo25_jpg;
0x1165A	0x496D    LDR	R1, [PC, #436]
0x1165C	0x486D    LDR	R0, [PC, #436]
0x1165E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1459 :: 		Image39.Visible         = 1;
0x11660	0x2101    MOVS	R1, #1
0x11662	0x486D    LDR	R0, [PC, #436]
0x11664	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1460 :: 		Image39.Active          = 1;
0x11666	0x2101    MOVS	R1, #1
0x11668	0x486C    LDR	R0, [PC, #432]
0x1166A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1461 :: 		Image39.OnUpPtr         = 0;
0x1166C	0x2100    MOVS	R1, #0
0x1166E	0x486C    LDR	R0, [PC, #432]
0x11670	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1462 :: 		Image39.OnDownPtr       = 0;
0x11672	0x2100    MOVS	R1, #0
0x11674	0x486B    LDR	R0, [PC, #428]
0x11676	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1463 :: 		Image39.OnClickPtr      = 0;
0x11678	0x2100    MOVS	R1, #0
0x1167A	0x486B    LDR	R0, [PC, #428]
0x1167C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1464 :: 		Image39.OnPressPtr      = 0;
0x1167E	0x2100    MOVS	R1, #0
0x11680	0x486A    LDR	R0, [PC, #424]
0x11682	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1466 :: 		Label19.OwnerScreen     = &Speedometer_graphics;
0x11684	0x496A    LDR	R1, [PC, #424]
0x11686	0x486B    LDR	R0, [PC, #428]
0x11688	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1467 :: 		Label19.Order           = 1;
0x1168A	0x2101    MOVS	R1, #1
0x1168C	0x486A    LDR	R0, [PC, #424]
0x1168E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1468 :: 		Label19.Left            = 365;
0x11690	0xF240116D  MOVW	R1, #365
0x11694	0x4869    LDR	R0, [PC, #420]
0x11696	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1469 :: 		Label19.Top             = 21;
0x11698	0x2115    MOVS	R1, #21
0x1169A	0x4869    LDR	R0, [PC, #420]
0x1169C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1470 :: 		Label19.Width           = 109;
0x1169E	0x216D    MOVS	R1, #109
0x116A0	0x4868    LDR	R0, [PC, #416]
0x116A2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1471 :: 		Label19.Height          = 32;
0x116A4	0x2120    MOVS	R1, #32
0x116A6	0x4868    LDR	R0, [PC, #416]
0x116A8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1472 :: 		Label19.Visible         = 1;
0x116AA	0x2101    MOVS	R1, #1
0x116AC	0x4867    LDR	R0, [PC, #412]
0x116AE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1473 :: 		Label19.Active          = 1;
0x116B0	0x2101    MOVS	R1, #1
0x116B2	0x4867    LDR	R0, [PC, #412]
0x116B4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1474 :: 		Label19.Caption         = Label19_Caption;
0x116B6	0x4967    LDR	R1, [PC, #412]
0x116B8	0x4867    LDR	R0, [PC, #412]
0x116BA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1475 :: 		Label19.FontName        = Arial_Black21x30_Regular;
0x116BC	0xF24211A1  MOVW	R1, #8609
0x116C0	0x4866    LDR	R0, [PC, #408]
0x116C2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1476 :: 		Label19.Font_Color      = 0xFFFF;
0x116C4	0xF64F71FF  MOVW	R1, #65535
0x116C8	0x4865    LDR	R0, [PC, #404]
0x116CA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1477 :: 		Label19.OnUpPtr         = 0;
0x116CC	0x2100    MOVS	R1, #0
0x116CE	0x4865    LDR	R0, [PC, #404]
0x116D0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1478 :: 		Label19.OnDownPtr       = 0;
0x116D2	0x2100    MOVS	R1, #0
0x116D4	0x4864    LDR	R0, [PC, #400]
0x116D6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1479 :: 		Label19.OnClickPtr      = 0;
0x116D8	0x2100    MOVS	R1, #0
0x116DA	0x4864    LDR	R0, [PC, #400]
0x116DC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1480 :: 		Label19.OnPressPtr      = 0;
0x116DE	0x2100    MOVS	R1, #0
0x116E0	0x4863    LDR	R0, [PC, #396]
0x116E2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1482 :: 		Image15.OwnerScreen     = &Speedometer_graphics;
0x116E4	0x4952    LDR	R1, [PC, #328]
0x116E6	0x4863    LDR	R0, [PC, #396]
0x116E8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1483 :: 		Image15.Order           = 2;
0x116EA	0x2102    MOVS	R1, #2
0x116EC	0x4862    LDR	R0, [PC, #392]
0x116EE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1484 :: 		Image15.Left            = 432;
0x116F0	0xF24011B0  MOVW	R1, #432
0x116F4	0x4861    LDR	R0, [PC, #388]
0x116F6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1485 :: 		Image15.Top             = 2;
0x116F8	0x2102    MOVS	R1, #2
0x116FA	0x4861    LDR	R0, [PC, #388]
0x116FC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1486 :: 		Image15.Width           = 44;
0x116FE	0x212C    MOVS	R1, #44
0x11700	0x4860    LDR	R0, [PC, #384]
0x11702	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1487 :: 		Image15.Height          = 20;
0x11704	0x2114    MOVS	R1, #20
0x11706	0x4860    LDR	R0, [PC, #384]
0x11708	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1488 :: 		Image15.Picture_Type    = 0;
0x1170A	0x2100    MOVS	R1, #0
0x1170C	0x485F    LDR	R0, [PC, #380]
0x1170E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1489 :: 		Image15.Picture_Ratio   = 1;
0x11710	0x2101    MOVS	R1, #1
0x11712	0x485F    LDR	R0, [PC, #380]
0x11714	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1490 :: 		Image15.Picture_Name    = icon_battery_bmp;
0x11716	0x495F    LDR	R1, [PC, #380]
0x11718	0x485F    LDR	R0, [PC, #380]
0x1171A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1491 :: 		Image15.Visible         = 1;
0x1171C	0x2101    MOVS	R1, #1
0x1171E	0x485F    LDR	R0, [PC, #380]
0x11720	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1492 :: 		Image15.Active          = 0;
0x11722	0x2100    MOVS	R1, #0
0x11724	0x485E    LDR	R0, [PC, #376]
0x11726	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1493 :: 		Image15.OnUpPtr         = 0;
0x11728	0x2100    MOVS	R1, #0
0x1172A	0x485E    LDR	R0, [PC, #376]
0x1172C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1494 :: 		Image15.OnDownPtr       = 0;
0x1172E	0x2100    MOVS	R1, #0
0x11730	0x485D    LDR	R0, [PC, #372]
0x11732	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1495 :: 		Image15.OnClickPtr      = 0;
0x11734	0x2100    MOVS	R1, #0
0x11736	0x485D    LDR	R0, [PC, #372]
0x11738	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1496 :: 		Image15.OnPressPtr      = 0;
0x1173A	0x2100    MOVS	R1, #0
0x1173C	0x485C    LDR	R0, [PC, #368]
0x1173E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1498 :: 		Image3.OwnerScreen     = &Speedometer_graphics;
0x11740	0x493B    LDR	R1, [PC, #236]
0x11742	0x485C    LDR	R0, [PC, #368]
0x11744	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1499 :: 		Image3.Order           = 3;
0x11746	0x2103    MOVS	R1, #3
0x11748	0x485B    LDR	R0, [PC, #364]
0x1174A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1500 :: 		Image3.Left            = 0;
0x1174C	0x2100    MOVS	R1, #0
0x1174E	0x485B    LDR	R0, [PC, #364]
0x11750	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1501 :: 		Image3.Top             = 0;
0x11752	0x2100    MOVS	R1, #0
0x11754	0x485A    LDR	R0, [PC, #360]
0x11756	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1502 :: 		Image3.Width           = 50;
0x11758	0x2132    MOVS	R1, #50
0x1175A	0x485A    LDR	R0, [PC, #360]
0x1175C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1503 :: 		Image3.Height          = 50;
0x1175E	0x2132    MOVS	R1, #50
0x11760	0x4859    LDR	R0, [PC, #356]
0x11762	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1504 :: 		Image3.Picture_Type    = 1;
0x11764	0x2101    MOVS	R1, #1
0x11766	0x4859    LDR	R0, [PC, #356]
0x11768	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1505 :: 		Image3.Picture_Ratio   = 1;
0x1176A	0x2101    MOVS	R1, #1
0x1176C	0x4858    LDR	R0, [PC, #352]
0x1176E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1506 :: 		Image3.Picture_Name    = WaterTemperatureIcon_jpg;
0x11770	0x4958    LDR	R1, [PC, #352]
0x11772	0x4859    LDR	R0, [PC, #356]
0x11774	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1507 :: 		Image3.Visible         = 1;
0x11776	0x2101    MOVS	R1, #1
0x11778	0x4858    LDR	R0, [PC, #352]
0x1177A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1508 :: 		Image3.Active          = 1;
0x1177C	0x2101    MOVS	R1, #1
0x1177E	0x4858    LDR	R0, [PC, #352]
0x11780	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1509 :: 		Image3.OnUpPtr         = 0;
0x11782	0x2100    MOVS	R1, #0
0x11784	0x4857    LDR	R0, [PC, #348]
0x11786	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1510 :: 		Image3.OnDownPtr       = 0;
0x11788	0x2100    MOVS	R1, #0
0x1178A	0x4857    LDR	R0, [PC, #348]
0x1178C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1511 :: 		Image3.OnClickPtr      = 0;
0x1178E	0x2100    MOVS	R1, #0
0x11790	0x4856    LDR	R0, [PC, #344]
0x11792	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1512 :: 		Image3.OnPressPtr      = 0;
0x11794	0x2100    MOVS	R1, #0
0x11796	0x4856    LDR	R0, [PC, #344]
0x11798	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1514 :: 		Image4.OwnerScreen     = &Speedometer_graphics;
0x1179A	0x4925    LDR	R1, [PC, #148]
0x1179C	0x4855    LDR	R0, [PC, #340]
0x1179E	0xE0AB    B	#342
0x117A0	0x08182000  	_Image37+28
0x117A4	0x081C2000  	_Image37+32
0x117A8	0x08202000  	_Image37+36
0x117AC	0x22982000  	_Boot+0
0x117B0	0x08242000  	_Image38+0
0x117B4	0x08282000  	_Image38+4
0x117B8	0x082A2000  	_Image38+6
0x117BC	0x082C2000  	_Image38+8
0x117C0	0x082E2000  	_Image38+10
0x117C4	0x08302000  	_Image38+12
0x117C8	0x083A2000  	_Image38+22
0x117CC	0x083B2000  	_Image38+23
0x117D0	0x15940031  	#3216788
0x117D4	0x08342000  	_Image38+16
0x117D8	0x08382000  	_Image38+20
0x117DC	0x08392000  	_Image38+21
0x117E0	0x083C2000  	_Image38+24
0x117E4	0x08402000  	_Image38+28
0x117E8	0x08442000  	_Image38+32
0x117EC	0x08482000  	_Image38+36
0x117F0	0x084C2000  	_Image39+0
0x117F4	0x08502000  	_Image39+4
0x117F8	0x08522000  	_Image39+6
0x117FC	0x08542000  	_Image39+8
0x11800	0x08562000  	_Image39+10
0x11804	0x08582000  	_Image39+12
0x11808	0x08622000  	_Image39+22
0x1180C	0x08632000  	_Image39+23
0x11810	0x15380033  	#3347768
0x11814	0x085C2000  	_Image39+16
0x11818	0x08602000  	_Image39+20
0x1181C	0x08612000  	_Image39+21
0x11820	0x08642000  	_Image39+24
0x11824	0x08682000  	_Image39+28
0x11828	0x086C2000  	_Image39+32
0x1182C	0x08702000  	_Image39+36
0x11830	0x08742000  	_Speedometer_graphics+0
0x11834	0x09082000  	_Label19+0
0x11838	0x090C2000  	_Label19+4
0x1183C	0x090E2000  	_Label19+6
0x11840	0x09102000  	_Label19+8
0x11844	0x09122000  	_Label19+10
0x11848	0x09142000  	_Label19+12
0x1184C	0x09222000  	_Label19+26
0x11850	0x09232000  	_Label19+27
0x11854	0x00652000  	_Label19_Caption+0
0x11858	0x09182000  	_Label19+16
0x1185C	0x091C2000  	_Label19+20
0x11860	0x09202000  	_Label19+24
0x11864	0x09242000  	_Label19+28
0x11868	0x09282000  	_Label19+32
0x1186C	0x092C2000  	_Label19+36
0x11870	0x09302000  	_Label19+40
0x11874	0x0AC02000  	_Image15+0
0x11878	0x0AC42000  	_Image15+4
0x1187C	0x0AC62000  	_Image15+6
0x11880	0x0AC82000  	_Image15+8
0x11884	0x0ACA2000  	_Image15+10
0x11888	0x0ACC2000  	_Image15+12
0x1188C	0x0AD62000  	_Image15+22
0x11890	0x0AD72000  	_Image15+23
0x11894	0x10E20039  	#3739874
0x11898	0x0AD02000  	_Image15+16
0x1189C	0x0AD42000  	_Image15+20
0x118A0	0x0AD52000  	_Image15+21
0x118A4	0x0AD82000  	_Image15+24
0x118A8	0x0ADC2000  	_Image15+28
0x118AC	0x0AE02000  	_Image15+32
0x118B0	0x0AE42000  	_Image15+36
0x118B4	0x0AE82000  	_Image3+0
0x118B8	0x0AEC2000  	_Image3+4
0x118BC	0x0AEE2000  	_Image3+6
0x118C0	0x0AF02000  	_Image3+8
0x118C4	0x0AF22000  	_Image3+10
0x118C8	0x0AF42000  	_Image3+12
0x118CC	0x0AFE2000  	_Image3+22
0x118D0	0x0AFF2000  	_Image3+23
0x118D4	0x17C80039  	#3741640
0x118D8	0x0AF82000  	_Image3+16
0x118DC	0x0AFC2000  	_Image3+20
0x118E0	0x0AFD2000  	_Image3+21
0x118E4	0x0B002000  	_Image3+24
0x118E8	0x0B042000  	_Image3+28
0x118EC	0x0B082000  	_Image3+32
0x118F0	0x0B0C2000  	_Image3+36
0x118F4	0x0B102000  	_Image4+0
0x118F8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1515 :: 		Image4.Order           = 4;
0x118FA	0x2104    MOVS	R1, #4
0x118FC	0x4877    LDR	R0, [PC, #476]
0x118FE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1516 :: 		Image4.Left            = 0;
0x11900	0x2100    MOVS	R1, #0
0x11902	0x4877    LDR	R0, [PC, #476]
0x11904	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1517 :: 		Image4.Top             = 49;
0x11906	0x2131    MOVS	R1, #49
0x11908	0x4876    LDR	R0, [PC, #472]
0x1190A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1518 :: 		Image4.Width           = 50;
0x1190C	0x2132    MOVS	R1, #50
0x1190E	0x4876    LDR	R0, [PC, #472]
0x11910	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1519 :: 		Image4.Height          = 50;
0x11912	0x2132    MOVS	R1, #50
0x11914	0x4875    LDR	R0, [PC, #468]
0x11916	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1520 :: 		Image4.Picture_Type    = 1;
0x11918	0x2101    MOVS	R1, #1
0x1191A	0x4875    LDR	R0, [PC, #468]
0x1191C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1521 :: 		Image4.Picture_Ratio   = 1;
0x1191E	0x2101    MOVS	R1, #1
0x11920	0x4874    LDR	R0, [PC, #464]
0x11922	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1522 :: 		Image4.Picture_Name    = fuel_jpg;
0x11924	0x4974    LDR	R1, [PC, #464]
0x11926	0x4875    LDR	R0, [PC, #468]
0x11928	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1523 :: 		Image4.Visible         = 1;
0x1192A	0x2101    MOVS	R1, #1
0x1192C	0x4874    LDR	R0, [PC, #464]
0x1192E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1524 :: 		Image4.Active          = 1;
0x11930	0x2101    MOVS	R1, #1
0x11932	0x4874    LDR	R0, [PC, #464]
0x11934	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1525 :: 		Image4.OnUpPtr         = 0;
0x11936	0x2100    MOVS	R1, #0
0x11938	0x4873    LDR	R0, [PC, #460]
0x1193A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1526 :: 		Image4.OnDownPtr       = 0;
0x1193C	0x2100    MOVS	R1, #0
0x1193E	0x4873    LDR	R0, [PC, #460]
0x11940	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1527 :: 		Image4.OnClickPtr      = 0;
0x11942	0x2100    MOVS	R1, #0
0x11944	0x4872    LDR	R0, [PC, #456]
0x11946	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1528 :: 		Image4.OnPressPtr      = 0;
0x11948	0x2100    MOVS	R1, #0
0x1194A	0x4872    LDR	R0, [PC, #456]
0x1194C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1530 :: 		Image5.OwnerScreen     = &Speedometer_graphics;
0x1194E	0x4972    LDR	R1, [PC, #456]
0x11950	0x4872    LDR	R0, [PC, #456]
0x11952	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1531 :: 		Image5.Order           = 5;
0x11954	0x2105    MOVS	R1, #5
0x11956	0x4872    LDR	R0, [PC, #456]
0x11958	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1532 :: 		Image5.Left            = 49;
0x1195A	0x2131    MOVS	R1, #49
0x1195C	0x4871    LDR	R0, [PC, #452]
0x1195E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1533 :: 		Image5.Top             = 0;
0x11960	0x2100    MOVS	R1, #0
0x11962	0x4871    LDR	R0, [PC, #452]
0x11964	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1534 :: 		Image5.Width           = 50;
0x11966	0x2132    MOVS	R1, #50
0x11968	0x4870    LDR	R0, [PC, #448]
0x1196A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1535 :: 		Image5.Height          = 50;
0x1196C	0x2132    MOVS	R1, #50
0x1196E	0x4870    LDR	R0, [PC, #448]
0x11970	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1536 :: 		Image5.Picture_Type    = 1;
0x11972	0x2101    MOVS	R1, #1
0x11974	0x486F    LDR	R0, [PC, #444]
0x11976	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1537 :: 		Image5.Picture_Ratio   = 1;
0x11978	0x2101    MOVS	R1, #1
0x1197A	0x486F    LDR	R0, [PC, #444]
0x1197C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1538 :: 		Image5.Picture_Name    = HeadlightIcon_jpg;
0x1197E	0x496F    LDR	R1, [PC, #444]
0x11980	0x486F    LDR	R0, [PC, #444]
0x11982	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1539 :: 		Image5.Visible         = 1;
0x11984	0x2101    MOVS	R1, #1
0x11986	0x486F    LDR	R0, [PC, #444]
0x11988	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1540 :: 		Image5.Active          = 1;
0x1198A	0x2101    MOVS	R1, #1
0x1198C	0x486E    LDR	R0, [PC, #440]
0x1198E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1541 :: 		Image5.OnUpPtr         = 0;
0x11990	0x2100    MOVS	R1, #0
0x11992	0x486E    LDR	R0, [PC, #440]
0x11994	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1542 :: 		Image5.OnDownPtr       = 0;
0x11996	0x2100    MOVS	R1, #0
0x11998	0x486D    LDR	R0, [PC, #436]
0x1199A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1543 :: 		Image5.OnClickPtr      = 0;
0x1199C	0x2100    MOVS	R1, #0
0x1199E	0x486D    LDR	R0, [PC, #436]
0x119A0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1544 :: 		Image5.OnPressPtr      = 0;
0x119A2	0x2100    MOVS	R1, #0
0x119A4	0x486C    LDR	R0, [PC, #432]
0x119A6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1546 :: 		Image6.OwnerScreen     = &Speedometer_graphics;
0x119A8	0x495B    LDR	R1, [PC, #364]
0x119AA	0x486C    LDR	R0, [PC, #432]
0x119AC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1547 :: 		Image6.Order           = 6;
0x119AE	0x2106    MOVS	R1, #6
0x119B0	0x486B    LDR	R0, [PC, #428]
0x119B2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1548 :: 		Image6.Left            = 49;
0x119B4	0x2131    MOVS	R1, #49
0x119B6	0x486B    LDR	R0, [PC, #428]
0x119B8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1549 :: 		Image6.Top             = 49;
0x119BA	0x2131    MOVS	R1, #49
0x119BC	0x486A    LDR	R0, [PC, #424]
0x119BE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1550 :: 		Image6.Width           = 50;
0x119C0	0x2132    MOVS	R1, #50
0x119C2	0x486A    LDR	R0, [PC, #424]
0x119C4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1551 :: 		Image6.Height          = 50;
0x119C6	0x2132    MOVS	R1, #50
0x119C8	0x4869    LDR	R0, [PC, #420]
0x119CA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1552 :: 		Image6.Picture_Type    = 1;
0x119CC	0x2101    MOVS	R1, #1
0x119CE	0x4869    LDR	R0, [PC, #420]
0x119D0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1553 :: 		Image6.Picture_Ratio   = 1;
0x119D2	0x2101    MOVS	R1, #1
0x119D4	0x4868    LDR	R0, [PC, #416]
0x119D6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1554 :: 		Image6.Picture_Name    = OilAlertIcon_jpg;
0x119D8	0x4968    LDR	R1, [PC, #416]
0x119DA	0x4869    LDR	R0, [PC, #420]
0x119DC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1555 :: 		Image6.Visible         = 1;
0x119DE	0x2101    MOVS	R1, #1
0x119E0	0x4868    LDR	R0, [PC, #416]
0x119E2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1556 :: 		Image6.Active          = 1;
0x119E4	0x2101    MOVS	R1, #1
0x119E6	0x4868    LDR	R0, [PC, #416]
0x119E8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1557 :: 		Image6.OnUpPtr         = 0;
0x119EA	0x2100    MOVS	R1, #0
0x119EC	0x4867    LDR	R0, [PC, #412]
0x119EE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1558 :: 		Image6.OnDownPtr       = 0;
0x119F0	0x2100    MOVS	R1, #0
0x119F2	0x4867    LDR	R0, [PC, #412]
0x119F4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1559 :: 		Image6.OnClickPtr      = 0;
0x119F6	0x2100    MOVS	R1, #0
0x119F8	0x4866    LDR	R0, [PC, #408]
0x119FA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1560 :: 		Image6.OnPressPtr      = 0;
0x119FC	0x2100    MOVS	R1, #0
0x119FE	0x4866    LDR	R0, [PC, #408]
0x11A00	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1562 :: 		Image7.OwnerScreen     = &Speedometer_graphics;
0x11A02	0x4945    LDR	R1, [PC, #276]
0x11A04	0x4865    LDR	R0, [PC, #404]
0x11A06	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1563 :: 		Image7.Order           = 7;
0x11A08	0x2107    MOVS	R1, #7
0x11A0A	0x4865    LDR	R0, [PC, #404]
0x11A0C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1564 :: 		Image7.Left            = 429;
0x11A0E	0xF24011AD  MOVW	R1, #429
0x11A12	0x4864    LDR	R0, [PC, #400]
0x11A14	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1565 :: 		Image7.Top             = 221;
0x11A16	0x21DD    MOVS	R1, #221
0x11A18	0x4863    LDR	R0, [PC, #396]
0x11A1A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1566 :: 		Image7.Width           = 50;
0x11A1C	0x2132    MOVS	R1, #50
0x11A1E	0x4863    LDR	R0, [PC, #396]
0x11A20	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1567 :: 		Image7.Height          = 50;
0x11A22	0x2132    MOVS	R1, #50
0x11A24	0x4862    LDR	R0, [PC, #392]
0x11A26	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1568 :: 		Image7.Picture_Type    = 1;
0x11A28	0x2101    MOVS	R1, #1
0x11A2A	0x4862    LDR	R0, [PC, #392]
0x11A2C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1569 :: 		Image7.Picture_Ratio   = 1;
0x11A2E	0x2101    MOVS	R1, #1
0x11A30	0x4861    LDR	R0, [PC, #388]
0x11A32	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1570 :: 		Image7.Picture_Name    = Settings_icon_JPG;
0x11A34	0x4961    LDR	R1, [PC, #388]
0x11A36	0x4862    LDR	R0, [PC, #392]
0x11A38	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1571 :: 		Image7.Visible         = 1;
0x11A3A	0x2101    MOVS	R1, #1
0x11A3C	0x4861    LDR	R0, [PC, #388]
0x11A3E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1572 :: 		Image7.Active          = 1;
0x11A40	0x2101    MOVS	R1, #1
0x11A42	0x4861    LDR	R0, [PC, #388]
0x11A44	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1573 :: 		Image7.OnUpPtr         = 0;
0x11A46	0x2100    MOVS	R1, #0
0x11A48	0x4860    LDR	R0, [PC, #384]
0x11A4A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1574 :: 		Image7.OnDownPtr       = 0;
0x11A4C	0x2100    MOVS	R1, #0
0x11A4E	0x4860    LDR	R0, [PC, #384]
0x11A50	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1575 :: 		Image7.OnClickPtr      = doSettings;
0x11A52	0x4960    LDR	R1, [PC, #384]
0x11A54	0x4860    LDR	R0, [PC, #384]
0x11A56	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1576 :: 		Image7.OnPressPtr      = doSettings;
0x11A58	0x495E    LDR	R1, [PC, #376]
0x11A5A	0x4860    LDR	R0, [PC, #384]
0x11A5C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1578 :: 		Image8.OwnerScreen     = &Speedometer_graphics;
0x11A5E	0x492E    LDR	R1, [PC, #184]
0x11A60	0x485F    LDR	R0, [PC, #380]
0x11A62	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1579 :: 		Image8.Order           = 8;
0x11A64	0x2108    MOVS	R1, #8
0x11A66	0x485F    LDR	R0, [PC, #380]
0x11A68	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1580 :: 		Image8.Left            = 55;
0x11A6A	0x2137    MOVS	R1, #55
0x11A6C	0x485E    LDR	R0, [PC, #376]
0x11A6E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1581 :: 		Image8.Top             = 116;
0x11A70	0x2174    MOVS	R1, #116
0x11A72	0x485E    LDR	R0, [PC, #376]
0x11A74	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1582 :: 		Image8.Width           = 51;
0x11A76	0x2133    MOVS	R1, #51
0x11A78	0x485D    LDR	R0, [PC, #372]
0x11A7A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1583 :: 		Image8.Height          = 39;
0x11A7C	0x2127    MOVS	R1, #39
0x11A7E	0x485D    LDR	R0, [PC, #372]
0x11A80	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1584 :: 		Image8.Picture_Type    = 1;
0x11A82	0x2101    MOVS	R1, #1
0x11A84	0x485C    LDR	R0, [PC, #368]
0x11A86	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1585 :: 		Image8.Picture_Ratio   = 1;
0x11A88	0x2101    MOVS	R1, #1
0x11A8A	0x485C    LDR	R0, [PC, #368]
0x11A8C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1586 :: 		Image8.Picture_Name    = red_left_arrow_103_jpg;
0x11A8E	0x495C    LDR	R1, [PC, #368]
0x11A90	0x485C    LDR	R0, [PC, #368]
0x11A92	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1587 :: 		Image8.Visible         = 1;
0x11A94	0x2101    MOVS	R1, #1
0x11A96	0x485C    LDR	R0, [PC, #368]
0x11A98	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1588 :: 		Image8.Active          = 1;
0x11A9A	0x2101    MOVS	R1, #1
0x11A9C	0x485B    LDR	R0, [PC, #364]
0x11A9E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1589 :: 		Image8.OnUpPtr         = 0;
0x11AA0	0x2100    MOVS	R1, #0
0x11AA2	0x485B    LDR	R0, [PC, #364]
0x11AA4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1590 :: 		Image8.OnDownPtr       = 0;
0x11AA6	0x2100    MOVS	R1, #0
0x11AA8	0x485A    LDR	R0, [PC, #360]
0x11AAA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1591 :: 		Image8.OnClickPtr      = 0;
0x11AAC	0x2100    MOVS	R1, #0
0x11AAE	0x485A    LDR	R0, [PC, #360]
0x11AB0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1592 :: 		Image8.OnPressPtr      = 0;
0x11AB2	0x2100    MOVS	R1, #0
0x11AB4	0x4859    LDR	R0, [PC, #356]
0x11AB6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1594 :: 		Image9.OwnerScreen     = &Speedometer_graphics;
0x11AB8	0x4917    LDR	R1, [PC, #92]
0x11ABA	0x4859    LDR	R0, [PC, #356]
0x11ABC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1595 :: 		Image9.Order           = 9;
0x11ABE	0x2109    MOVS	R1, #9
0x11AC0	0x4858    LDR	R0, [PC, #352]
0x11AC2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1596 :: 		Image9.Left            = 373;
0x11AC4	0xF2401175  MOVW	R1, #373
0x11AC8	0x4857    LDR	R0, [PC, #348]
0x11ACA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1597 :: 		Image9.Top             = 116;
0x11ACC	0x2174    MOVS	R1, #116
0x11ACE	0x4857    LDR	R0, [PC, #348]
0x11AD0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1598 :: 		Image9.Width           = 51;
0x11AD2	0x2133    MOVS	R1, #51
0x11AD4	0x4856    LDR	R0, [PC, #344]
0x11AD6	0x8001    STRH	R1, [R0, #0]
0x11AD8	0xF000B8AC  B	#344
0x11ADC	0x0B142000  	_Image4+4
0x11AE0	0x0B162000  	_Image4+6
0x11AE4	0x0B182000  	_Image4+8
0x11AE8	0x0B1A2000  	_Image4+10
0x11AEC	0x0B1C2000  	_Image4+12
0x11AF0	0x0B262000  	_Image4+22
0x11AF4	0x0B272000  	_Image4+23
0x11AF8	0x2B560039  	#3746646
0x11AFC	0x0B202000  	_Image4+16
0x11B00	0x0B242000  	_Image4+20
0x11B04	0x0B252000  	_Image4+21
0x11B08	0x0B282000  	_Image4+24
0x11B0C	0x0B2C2000  	_Image4+28
0x11B10	0x0B302000  	_Image4+32
0x11B14	0x0B342000  	_Image4+36
0x11B18	0x08742000  	_Speedometer_graphics+0
0x11B1C	0x0B382000  	_Image5+0
0x11B20	0x0B3C2000  	_Image5+4
0x11B24	0x0B3E2000  	_Image5+6
0x11B28	0x0B402000  	_Image5+8
0x11B2C	0x0B422000  	_Image5+10
0x11B30	0x0B442000  	_Image5+12
0x11B34	0x0B4E2000  	_Image5+22
0x11B38	0x0B4F2000  	_Image5+23
0x11B3C	0x3EE40039  	#3751652
0x11B40	0x0B482000  	_Image5+16
0x11B44	0x0B4C2000  	_Image5+20
0x11B48	0x0B4D2000  	_Image5+21
0x11B4C	0x0B502000  	_Image5+24
0x11B50	0x0B542000  	_Image5+28
0x11B54	0x0B582000  	_Image5+32
0x11B58	0x0B5C2000  	_Image5+36
0x11B5C	0x0B602000  	_Image6+0
0x11B60	0x0B642000  	_Image6+4
0x11B64	0x0B662000  	_Image6+6
0x11B68	0x0B682000  	_Image6+8
0x11B6C	0x0B6A2000  	_Image6+10
0x11B70	0x0B6C2000  	_Image6+12
0x11B74	0x0B762000  	_Image6+22
0x11B78	0x0B772000  	_Image6+23
0x11B7C	0x52720039  	#3756658
0x11B80	0x0B702000  	_Image6+16
0x11B84	0x0B742000  	_Image6+20
0x11B88	0x0B752000  	_Image6+21
0x11B8C	0x0B782000  	_Image6+24
0x11B90	0x0B7C2000  	_Image6+28
0x11B94	0x0B802000  	_Image6+32
0x11B98	0x0B842000  	_Image6+36
0x11B9C	0x0B882000  	_Image7+0
0x11BA0	0x0B8C2000  	_Image7+4
0x11BA4	0x0B8E2000  	_Image7+6
0x11BA8	0x0B902000  	_Image7+8
0x11BAC	0x0B922000  	_Image7+10
0x11BB0	0x0B942000  	_Image7+12
0x11BB4	0x0B9E2000  	_Image7+22
0x11BB8	0x0B9F2000  	_Image7+23
0x11BBC	0x66000039  	#3761664
0x11BC0	0x0B982000  	_Image7+16
0x11BC4	0x0B9C2000  	_Image7+20
0x11BC8	0x0B9D2000  	_Image7+21
0x11BCC	0x0BA02000  	_Image7+24
0x11BD0	0x0BA42000  	_Image7+28
0x11BD4	0xB2A50000  	_doSettings+0
0x11BD8	0x0BA82000  	_Image7+32
0x11BDC	0x0BAC2000  	_Image7+36
0x11BE0	0x0BB02000  	_Image8+0
0x11BE4	0x0BB42000  	_Image8+4
0x11BE8	0x0BB62000  	_Image8+6
0x11BEC	0x0BB82000  	_Image8+8
0x11BF0	0x0BBA2000  	_Image8+10
0x11BF4	0x0BBC2000  	_Image8+12
0x11BF8	0x0BC62000  	_Image8+22
0x11BFC	0x0BC72000  	_Image8+23
0x11C00	0x798E0039  	#3766670
0x11C04	0x0BC02000  	_Image8+16
0x11C08	0x0BC42000  	_Image8+20
0x11C0C	0x0BC52000  	_Image8+21
0x11C10	0x0BC82000  	_Image8+24
0x11C14	0x0BCC2000  	_Image8+28
0x11C18	0x0BD02000  	_Image8+32
0x11C1C	0x0BD42000  	_Image8+36
0x11C20	0x0BD82000  	_Image9+0
0x11C24	0x0BDC2000  	_Image9+4
0x11C28	0x0BDE2000  	_Image9+6
0x11C2C	0x0BE02000  	_Image9+8
0x11C30	0x0BE22000  	_Image9+10
;Ducati_logger_driver.c, 1599 :: 		Image9.Height          = 39;
0x11C34	0x2127    MOVS	R1, #39
0x11C36	0x4879    LDR	R0, [PC, #484]
0x11C38	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1600 :: 		Image9.Picture_Type    = 1;
0x11C3A	0x2101    MOVS	R1, #1
0x11C3C	0x4878    LDR	R0, [PC, #480]
0x11C3E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1601 :: 		Image9.Picture_Ratio   = 1;
0x11C40	0x2101    MOVS	R1, #1
0x11C42	0x4878    LDR	R0, [PC, #480]
0x11C44	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1602 :: 		Image9.Picture_Name    = red_left_arrow_copy_jpg;
0x11C46	0x4978    LDR	R1, [PC, #480]
0x11C48	0x4878    LDR	R0, [PC, #480]
0x11C4A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1603 :: 		Image9.Visible         = 1;
0x11C4C	0x2101    MOVS	R1, #1
0x11C4E	0x4878    LDR	R0, [PC, #480]
0x11C50	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1604 :: 		Image9.Active          = 1;
0x11C52	0x2101    MOVS	R1, #1
0x11C54	0x4877    LDR	R0, [PC, #476]
0x11C56	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1605 :: 		Image9.OnUpPtr         = 0;
0x11C58	0x2100    MOVS	R1, #0
0x11C5A	0x4877    LDR	R0, [PC, #476]
0x11C5C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1606 :: 		Image9.OnDownPtr       = 0;
0x11C5E	0x2100    MOVS	R1, #0
0x11C60	0x4876    LDR	R0, [PC, #472]
0x11C62	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1607 :: 		Image9.OnClickPtr      = 0;
0x11C64	0x2100    MOVS	R1, #0
0x11C66	0x4876    LDR	R0, [PC, #472]
0x11C68	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1608 :: 		Image9.OnPressPtr      = 0;
0x11C6A	0x2100    MOVS	R1, #0
0x11C6C	0x4875    LDR	R0, [PC, #468]
0x11C6E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1610 :: 		Label10.OwnerScreen     = &Speedometer_graphics;
0x11C70	0x4975    LDR	R1, [PC, #468]
0x11C72	0x4876    LDR	R0, [PC, #472]
0x11C74	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1611 :: 		Label10.Order           = 10;
0x11C76	0x210A    MOVS	R1, #10
0x11C78	0x4875    LDR	R0, [PC, #468]
0x11C7A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1612 :: 		Label10.Left            = 373;
0x11C7C	0xF2401175  MOVW	R1, #373
0x11C80	0x4874    LDR	R0, [PC, #464]
0x11C82	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1613 :: 		Label10.Top             = 46;
0x11C84	0x212E    MOVS	R1, #46
0x11C86	0x4874    LDR	R0, [PC, #464]
0x11C88	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1614 :: 		Label10.Width           = 56;
0x11C8A	0x2138    MOVS	R1, #56
0x11C8C	0x4873    LDR	R0, [PC, #460]
0x11C8E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1615 :: 		Label10.Height          = 25;
0x11C90	0x2119    MOVS	R1, #25
0x11C92	0x4873    LDR	R0, [PC, #460]
0x11C94	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1616 :: 		Label10.Visible         = 1;
0x11C96	0x2101    MOVS	R1, #1
0x11C98	0x4872    LDR	R0, [PC, #456]
0x11C9A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1617 :: 		Label10.Active          = 1;
0x11C9C	0x2101    MOVS	R1, #1
0x11C9E	0x4872    LDR	R0, [PC, #456]
0x11CA0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1618 :: 		Label10.Caption         = Label10_Caption;
0x11CA2	0x4972    LDR	R1, [PC, #456]
0x11CA4	0x4872    LDR	R0, [PC, #456]
0x11CA6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1619 :: 		Label10.FontName        = Arial_Black16x23_Regular;
0x11CA8	0xF6402123  MOVW	R1, #2595
0x11CAC	0x4871    LDR	R0, [PC, #452]
0x11CAE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1620 :: 		Label10.Font_Color      = 0xFFFF;
0x11CB0	0xF64F71FF  MOVW	R1, #65535
0x11CB4	0x4870    LDR	R0, [PC, #448]
0x11CB6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1621 :: 		Label10.OnUpPtr         = 0;
0x11CB8	0x2100    MOVS	R1, #0
0x11CBA	0x4870    LDR	R0, [PC, #448]
0x11CBC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1622 :: 		Label10.OnDownPtr       = 0;
0x11CBE	0x2100    MOVS	R1, #0
0x11CC0	0x486F    LDR	R0, [PC, #444]
0x11CC2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1623 :: 		Label10.OnClickPtr      = 0;
0x11CC4	0x2100    MOVS	R1, #0
0x11CC6	0x486F    LDR	R0, [PC, #444]
0x11CC8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1624 :: 		Label10.OnPressPtr      = 0;
0x11CCA	0x2100    MOVS	R1, #0
0x11CCC	0x486E    LDR	R0, [PC, #440]
0x11CCE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1626 :: 		Label11.OwnerScreen     = &Speedometer_graphics;
0x11CD0	0x495D    LDR	R1, [PC, #372]
0x11CD2	0x486E    LDR	R0, [PC, #440]
0x11CD4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1627 :: 		Label11.Order           = 11;
0x11CD6	0x210B    MOVS	R1, #11
0x11CD8	0x486D    LDR	R0, [PC, #436]
0x11CDA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1628 :: 		Label11.Left            = 6;
0x11CDC	0x2106    MOVS	R1, #6
0x11CDE	0x486D    LDR	R0, [PC, #436]
0x11CE0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1629 :: 		Label11.Top             = 36;
0x11CE2	0x2124    MOVS	R1, #36
0x11CE4	0x486C    LDR	R0, [PC, #432]
0x11CE6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1630 :: 		Label11.Width           = 39;
0x11CE8	0x2127    MOVS	R1, #39
0x11CEA	0x486C    LDR	R0, [PC, #432]
0x11CEC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1631 :: 		Label11.Height          = 17;
0x11CEE	0x2111    MOVS	R1, #17
0x11CF0	0x486B    LDR	R0, [PC, #428]
0x11CF2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1632 :: 		Label11.Visible         = 1;
0x11CF4	0x2101    MOVS	R1, #1
0x11CF6	0x486B    LDR	R0, [PC, #428]
0x11CF8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1633 :: 		Label11.Active          = 1;
0x11CFA	0x2101    MOVS	R1, #1
0x11CFC	0x486A    LDR	R0, [PC, #424]
0x11CFE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1634 :: 		Label11.Caption         = Label11_Caption;
0x11D00	0x496A    LDR	R1, [PC, #424]
0x11D02	0x486B    LDR	R0, [PC, #428]
0x11D04	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1635 :: 		Label11.FontName        = Arial_Black11x15_Regular;
0x11D06	0xF64A5109  MOVW	R1, #44297
0x11D0A	0x486A    LDR	R0, [PC, #424]
0x11D0C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1636 :: 		Label11.Font_Color      = 0xFFFF;
0x11D0E	0xF64F71FF  MOVW	R1, #65535
0x11D12	0x4869    LDR	R0, [PC, #420]
0x11D14	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1637 :: 		Label11.OnUpPtr         = 0;
0x11D16	0x2100    MOVS	R1, #0
0x11D18	0x4868    LDR	R0, [PC, #416]
0x11D1A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1638 :: 		Label11.OnDownPtr       = 0;
0x11D1C	0x2100    MOVS	R1, #0
0x11D1E	0x4868    LDR	R0, [PC, #416]
0x11D20	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1639 :: 		Label11.OnClickPtr      = 0;
0x11D22	0x2100    MOVS	R1, #0
0x11D24	0x4867    LDR	R0, [PC, #412]
0x11D26	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1640 :: 		Label11.OnPressPtr      = 0;
0x11D28	0x2100    MOVS	R1, #0
0x11D2A	0x4867    LDR	R0, [PC, #412]
0x11D2C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1642 :: 		CircleButton1.OwnerScreen     = &Speedometer_graphics;
0x11D2E	0x4946    LDR	R1, [PC, #280]
0x11D30	0x4866    LDR	R0, [PC, #408]
0x11D32	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1643 :: 		CircleButton1.Order           = 12;
0x11D34	0x210C    MOVS	R1, #12
0x11D36	0x4866    LDR	R0, [PC, #408]
0x11D38	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1644 :: 		CircleButton1.Left            = 216;
0x11D3A	0x21D8    MOVS	R1, #216
0x11D3C	0x4865    LDR	R0, [PC, #404]
0x11D3E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1645 :: 		CircleButton1.Top             = 112;
0x11D40	0x2170    MOVS	R1, #112
0x11D42	0x4865    LDR	R0, [PC, #404]
0x11D44	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1646 :: 		CircleButton1.Radius          = 23;
0x11D46	0x2117    MOVS	R1, #23
0x11D48	0x4864    LDR	R0, [PC, #400]
0x11D4A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1647 :: 		CircleButton1.Pen_Width       = 1;
0x11D4C	0x2101    MOVS	R1, #1
0x11D4E	0x4864    LDR	R0, [PC, #400]
0x11D50	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1648 :: 		CircleButton1.Pen_Color       = 0x0000;
0x11D52	0x2100    MOVS	R1, #0
0x11D54	0x4863    LDR	R0, [PC, #396]
0x11D56	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1649 :: 		CircleButton1.Visible         = 1;
0x11D58	0x2101    MOVS	R1, #1
0x11D5A	0x4863    LDR	R0, [PC, #396]
0x11D5C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1650 :: 		CircleButton1.Active          = 1;
0x11D5E	0x2101    MOVS	R1, #1
0x11D60	0x4862    LDR	R0, [PC, #392]
0x11D62	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1651 :: 		CircleButton1.Transparent     = 0;
0x11D64	0x2100    MOVS	R1, #0
0x11D66	0x4862    LDR	R0, [PC, #392]
0x11D68	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1652 :: 		CircleButton1.Caption         = CircleButton1_Caption;
0x11D6A	0x4962    LDR	R1, [PC, #392]
0x11D6C	0x4862    LDR	R0, [PC, #392]
0x11D6E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1653 :: 		CircleButton1.TextAlign       = _taCenter;
0x11D70	0x2101    MOVS	R1, #1
0x11D72	0x4862    LDR	R0, [PC, #392]
0x11D74	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1654 :: 		CircleButton1.FontName        = Tahoma11x13_Regular;
0x11D76	0x4962    LDR	R1, [PC, #392]
0x11D78	0x4862    LDR	R0, [PC, #392]
0x11D7A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1655 :: 		CircleButton1.PressColEnabled = 1;
0x11D7C	0x2101    MOVS	R1, #1
0x11D7E	0x4862    LDR	R0, [PC, #392]
0x11D80	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1656 :: 		CircleButton1.Font_Color      = 0x0000;
0x11D82	0x2100    MOVS	R1, #0
0x11D84	0x4861    LDR	R0, [PC, #388]
0x11D86	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1657 :: 		CircleButton1.Gradient        = 0;
0x11D88	0x2100    MOVS	R1, #0
0x11D8A	0x4861    LDR	R0, [PC, #388]
0x11D8C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1658 :: 		CircleButton1.Gradient_Orientation = 0;
0x11D8E	0x2100    MOVS	R1, #0
0x11D90	0x4860    LDR	R0, [PC, #384]
0x11D92	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1659 :: 		CircleButton1.Gradient_Start_Color = 0xFFFF;
0x11D94	0xF64F71FF  MOVW	R1, #65535
0x11D98	0x485F    LDR	R0, [PC, #380]
0x11D9A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1660 :: 		CircleButton1.Gradient_End_Color = 0xC618;
0x11D9C	0xF24C6118  MOVW	R1, #50712
0x11DA0	0x485E    LDR	R0, [PC, #376]
0x11DA2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1661 :: 		CircleButton1.Color           = 0xC618;
0x11DA4	0xF24C6118  MOVW	R1, #50712
0x11DA8	0x485D    LDR	R0, [PC, #372]
0x11DAA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1662 :: 		CircleButton1.Press_Color     = 0xE71C;
0x11DAC	0xF24E711C  MOVW	R1, #59164
0x11DB0	0x485C    LDR	R0, [PC, #368]
0x11DB2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1663 :: 		CircleButton1.OnUpPtr         = 0;
0x11DB4	0x2100    MOVS	R1, #0
0x11DB6	0x485C    LDR	R0, [PC, #368]
0x11DB8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1664 :: 		CircleButton1.OnDownPtr       = 0;
0x11DBA	0x2100    MOVS	R1, #0
0x11DBC	0x485B    LDR	R0, [PC, #364]
0x11DBE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1665 :: 		CircleButton1.OnClickPtr      = doNextScreen;
0x11DC0	0x495B    LDR	R1, [PC, #364]
0x11DC2	0x485C    LDR	R0, [PC, #368]
0x11DC4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1666 :: 		CircleButton1.OnPressPtr      = doNextScreen;
0x11DC6	0x495A    LDR	R1, [PC, #360]
0x11DC8	0x485B    LDR	R0, [PC, #364]
0x11DCA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1668 :: 		Label12.OwnerScreen     = &Speedometer_graphics;
0x11DCC	0x491E    LDR	R1, [PC, #120]
0x11DCE	0x485B    LDR	R0, [PC, #364]
0x11DD0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1669 :: 		Label12.Order           = 13;
0x11DD2	0x210D    MOVS	R1, #13
0x11DD4	0x485A    LDR	R0, [PC, #360]
0x11DD6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1670 :: 		Label12.Left            = 33;
0x11DD8	0x2121    MOVS	R1, #33
0x11DDA	0x485A    LDR	R0, [PC, #360]
0x11DDC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1671 :: 		Label12.Top             = 189;
0x11DDE	0x21BD    MOVS	R1, #189
0x11DE0	0x4859    LDR	R0, [PC, #356]
0x11DE2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1672 :: 		Label12.Width           = 68;
0x11DE4	0x2144    MOVS	R1, #68
0x11DE6	0x4859    LDR	R0, [PC, #356]
0x11DE8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1673 :: 		Label12.Height          = 41;
0x11DEA	0x2129    MOVS	R1, #41
0x11DEC	0x4858    LDR	R0, [PC, #352]
0x11DEE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1674 :: 		Label12.Visible         = 1;
0x11DF0	0x2101    MOVS	R1, #1
0x11DF2	0x4858    LDR	R0, [PC, #352]
0x11DF4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1675 :: 		Label12.Active          = 1;
0x11DF6	0x2101    MOVS	R1, #1
0x11DF8	0x4857    LDR	R0, [PC, #348]
0x11DFA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1676 :: 		Label12.Caption         = Label12_Caption;
0x11DFC	0x4957    LDR	R1, [PC, #348]
0x11DFE	0x4858    LDR	R0, [PC, #352]
0x11E00	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1677 :: 		Label12.FontName        = Arial_Black27x38_Regular;
0x11E02	0xF643015F  MOVW	R1, #14431
0x11E06	0x4857    LDR	R0, [PC, #348]
0x11E08	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1678 :: 		Label12.Font_Color      = 0xFFFF;
0x11E0A	0xF64F71FF  MOVW	R1, #65535
0x11E0E	0x4856    LDR	R0, [PC, #344]
0x11E10	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1679 :: 		Label12.OnUpPtr         = 0;
0x11E12	0x2100    MOVS	R1, #0
0x11E14	0x4855    LDR	R0, [PC, #340]
0x11E16	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1680 :: 		Label12.OnDownPtr       = 0;
0x11E18	0x2100    MOVS	R1, #0
0x11E1A	0xE0A9    B	#338
0x11E1C	0x0BE42000  	_Image9+12
0x11E20	0x0BEE2000  	_Image9+22
0x11E24	0x0BEF2000  	_Image9+23
0x11E28	0x891E0039  	#3770654
0x11E2C	0x0BE82000  	_Image9+16
0x11E30	0x0BEC2000  	_Image9+20
0x11E34	0x0BED2000  	_Image9+21
0x11E38	0x0BF02000  	_Image9+24
0x11E3C	0x0BF42000  	_Image9+28
0x11E40	0x0BF82000  	_Image9+32
0x11E44	0x0BFC2000  	_Image9+36
0x11E48	0x08742000  	_Speedometer_graphics+0
0x11E4C	0x09342000  	_Label10+0
0x11E50	0x09382000  	_Label10+4
0x11E54	0x093A2000  	_Label10+6
0x11E58	0x093C2000  	_Label10+8
0x11E5C	0x093E2000  	_Label10+10
0x11E60	0x09402000  	_Label10+12
0x11E64	0x094E2000  	_Label10+26
0x11E68	0x094F2000  	_Label10+27
0x11E6C	0x006E2000  	_Label10_Caption+0
0x11E70	0x09442000  	_Label10+16
0x11E74	0x09482000  	_Label10+20
0x11E78	0x094C2000  	_Label10+24
0x11E7C	0x09502000  	_Label10+28
0x11E80	0x09542000  	_Label10+32
0x11E84	0x09582000  	_Label10+36
0x11E88	0x095C2000  	_Label10+40
0x11E8C	0x09602000  	_Label11+0
0x11E90	0x09642000  	_Label11+4
0x11E94	0x09662000  	_Label11+6
0x11E98	0x09682000  	_Label11+8
0x11E9C	0x096A2000  	_Label11+10
0x11EA0	0x096C2000  	_Label11+12
0x11EA4	0x097A2000  	_Label11+26
0x11EA8	0x097B2000  	_Label11+27
0x11EAC	0x007A2000  	_Label11_Caption+0
0x11EB0	0x09702000  	_Label11+16
0x11EB4	0x09742000  	_Label11+20
0x11EB8	0x09782000  	_Label11+24
0x11EBC	0x097C2000  	_Label11+28
0x11EC0	0x09802000  	_Label11+32
0x11EC4	0x09842000  	_Label11+36
0x11EC8	0x09882000  	_Label11+40
0x11ECC	0x0C002000  	_CircleButton1+0
0x11ED0	0x0C042000  	_CircleButton1+4
0x11ED4	0x0C062000  	_CircleButton1+6
0x11ED8	0x0C082000  	_CircleButton1+8
0x11EDC	0x0C0A2000  	_CircleButton1+10
0x11EE0	0x0C0C2000  	_CircleButton1+12
0x11EE4	0x0C0E2000  	_CircleButton1+14
0x11EE8	0x0C102000  	_CircleButton1+16
0x11EEC	0x0C112000  	_CircleButton1+17
0x11EF0	0x0C122000  	_CircleButton1+18
0x11EF4	0x000E2000  	_CircleButton1_Caption+0
0x11EF8	0x0C142000  	_CircleButton1+20
0x11EFC	0x0C182000  	_CircleButton1+24
0x11F00	0x17A50001  	#71589
0x11F04	0x0C1C2000  	_CircleButton1+28
0x11F08	0x0C2A2000  	_CircleButton1+42
0x11F0C	0x0C202000  	_CircleButton1+32
0x11F10	0x0C222000  	_CircleButton1+34
0x11F14	0x0C232000  	_CircleButton1+35
0x11F18	0x0C242000  	_CircleButton1+36
0x11F1C	0x0C262000  	_CircleButton1+38
0x11F20	0x0C282000  	_CircleButton1+40
0x11F24	0x0C2C2000  	_CircleButton1+44
0x11F28	0x0C302000  	_CircleButton1+48
0x11F2C	0x0C342000  	_CircleButton1+52
0x11F30	0xBBC50000  	_doNextScreen+0
0x11F34	0x0C382000  	_CircleButton1+56
0x11F38	0x0C3C2000  	_CircleButton1+60
0x11F3C	0x098C2000  	_Label12+0
0x11F40	0x09902000  	_Label12+4
0x11F44	0x09922000  	_Label12+6
0x11F48	0x09942000  	_Label12+8
0x11F4C	0x09962000  	_Label12+10
0x11F50	0x09982000  	_Label12+12
0x11F54	0x09A62000  	_Label12+26
0x11F58	0x09A72000  	_Label12+27
0x11F5C	0x00862000  	_Label12_Caption+0
0x11F60	0x099C2000  	_Label12+16
0x11F64	0x09A02000  	_Label12+20
0x11F68	0x09A42000  	_Label12+24
0x11F6C	0x09A82000  	_Label12+28
0x11F70	0x487C    LDR	R0, [PC, #496]
0x11F72	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1681 :: 		Label12.OnClickPtr      = 0;
0x11F74	0x2100    MOVS	R1, #0
0x11F76	0x487C    LDR	R0, [PC, #496]
0x11F78	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1682 :: 		Label12.OnPressPtr      = 0;
0x11F7A	0x2100    MOVS	R1, #0
0x11F7C	0x487B    LDR	R0, [PC, #492]
0x11F7E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1684 :: 		Label13.OwnerScreen     = &Speedometer_graphics;
0x11F80	0x497B    LDR	R1, [PC, #492]
0x11F82	0x487C    LDR	R0, [PC, #496]
0x11F84	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1685 :: 		Label13.Order           = 14;
0x11F86	0x210E    MOVS	R1, #14
0x11F88	0x487B    LDR	R0, [PC, #492]
0x11F8A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1686 :: 		Label13.Left            = 0;
0x11F8C	0x2100    MOVS	R1, #0
0x11F8E	0x487B    LDR	R0, [PC, #492]
0x11F90	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1687 :: 		Label13.Top             = 213;
0x11F92	0x21D5    MOVS	R1, #213
0x11F94	0x487A    LDR	R0, [PC, #488]
0x11F96	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1688 :: 		Label13.Width           = 148;
0x11F98	0x2194    MOVS	R1, #148
0x11F9A	0x487A    LDR	R0, [PC, #488]
0x11F9C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1689 :: 		Label13.Height          = 66;
0x11F9E	0x2142    MOVS	R1, #66
0x11FA0	0x4879    LDR	R0, [PC, #484]
0x11FA2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1690 :: 		Label13.Visible         = 1;
0x11FA4	0x2101    MOVS	R1, #1
0x11FA6	0x4879    LDR	R0, [PC, #484]
0x11FA8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1691 :: 		Label13.Active          = 1;
0x11FAA	0x2101    MOVS	R1, #1
0x11FAC	0x4878    LDR	R0, [PC, #480]
0x11FAE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1692 :: 		Label13.Caption         = Label13_Caption;
0x11FB0	0x4978    LDR	R1, [PC, #480]
0x11FB2	0x4879    LDR	R0, [PC, #484]
0x11FB4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1693 :: 		Label13.FontName        = Arial_Black43x60_Regular;
0x11FB6	0xF6452169  MOVW	R1, #23145
0x11FBA	0x4878    LDR	R0, [PC, #480]
0x11FBC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1694 :: 		Label13.Font_Color      = 0xFFFF;
0x11FBE	0xF64F71FF  MOVW	R1, #65535
0x11FC2	0x4877    LDR	R0, [PC, #476]
0x11FC4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1695 :: 		Label13.OnUpPtr         = 0;
0x11FC6	0x2100    MOVS	R1, #0
0x11FC8	0x4876    LDR	R0, [PC, #472]
0x11FCA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1696 :: 		Label13.OnDownPtr       = 0;
0x11FCC	0x2100    MOVS	R1, #0
0x11FCE	0x4876    LDR	R0, [PC, #472]
0x11FD0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1697 :: 		Label13.OnClickPtr      = 0;
0x11FD2	0x2100    MOVS	R1, #0
0x11FD4	0x4875    LDR	R0, [PC, #468]
0x11FD6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1698 :: 		Label13.OnPressPtr      = 0;
0x11FD8	0x2100    MOVS	R1, #0
0x11FDA	0x4875    LDR	R0, [PC, #468]
0x11FDC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1700 :: 		Box2.OwnerScreen     = &Speedometer_graphics;
0x11FDE	0x4964    LDR	R1, [PC, #400]
0x11FE0	0x4874    LDR	R0, [PC, #464]
0x11FE2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1701 :: 		Box2.Order           = 15;
0x11FE4	0x210F    MOVS	R1, #15
0x11FE6	0x4874    LDR	R0, [PC, #464]
0x11FE8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1702 :: 		Box2.Left            = 350;
0x11FEA	0xF240115E  MOVW	R1, #350
0x11FEE	0x4873    LDR	R0, [PC, #460]
0x11FF0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1703 :: 		Box2.Top             = 221;
0x11FF2	0x21DD    MOVS	R1, #221
0x11FF4	0x4872    LDR	R0, [PC, #456]
0x11FF6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1704 :: 		Box2.Width           = 75;
0x11FF8	0x214B    MOVS	R1, #75
0x11FFA	0x4872    LDR	R0, [PC, #456]
0x11FFC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1705 :: 		Box2.Height          = 50;
0x11FFE	0x2132    MOVS	R1, #50
0x12000	0x4871    LDR	R0, [PC, #452]
0x12002	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1706 :: 		Box2.Pen_Width       = 1;
0x12004	0x2101    MOVS	R1, #1
0x12006	0x4871    LDR	R0, [PC, #452]
0x12008	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1707 :: 		Box2.Pen_Color       = 0x0000;
0x1200A	0x2100    MOVS	R1, #0
0x1200C	0x4870    LDR	R0, [PC, #448]
0x1200E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1708 :: 		Box2.Visible         = 1;
0x12010	0x2101    MOVS	R1, #1
0x12012	0x4870    LDR	R0, [PC, #448]
0x12014	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1709 :: 		Box2.Active          = 1;
0x12016	0x2101    MOVS	R1, #1
0x12018	0x486F    LDR	R0, [PC, #444]
0x1201A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1710 :: 		Box2.Transparent     = 1;
0x1201C	0x2101    MOVS	R1, #1
0x1201E	0x486F    LDR	R0, [PC, #444]
0x12020	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1711 :: 		Box2.Gradient        = 1;
0x12022	0x2101    MOVS	R1, #1
0x12024	0x486E    LDR	R0, [PC, #440]
0x12026	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1712 :: 		Box2.Gradient_Orientation = 0;
0x12028	0x2100    MOVS	R1, #0
0x1202A	0x486E    LDR	R0, [PC, #440]
0x1202C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1713 :: 		Box2.Gradient_Start_Color = 0xFFFF;
0x1202E	0xF64F71FF  MOVW	R1, #65535
0x12032	0x486D    LDR	R0, [PC, #436]
0x12034	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1714 :: 		Box2.Gradient_End_Color = 0xC618;
0x12036	0xF24C6118  MOVW	R1, #50712
0x1203A	0x486C    LDR	R0, [PC, #432]
0x1203C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1715 :: 		Box2.Color           = 0xC618;
0x1203E	0xF24C6118  MOVW	R1, #50712
0x12042	0x486B    LDR	R0, [PC, #428]
0x12044	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1716 :: 		Box2.PressColEnabled = 1;
0x12046	0x2101    MOVS	R1, #1
0x12048	0x486A    LDR	R0, [PC, #424]
0x1204A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1717 :: 		Box2.Press_Color     = 0xE71C;
0x1204C	0xF24E711C  MOVW	R1, #59164
0x12050	0x4869    LDR	R0, [PC, #420]
0x12052	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1718 :: 		Box2.OnUpPtr         = 0;
0x12054	0x2100    MOVS	R1, #0
0x12056	0x4869    LDR	R0, [PC, #420]
0x12058	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1719 :: 		Box2.OnDownPtr       = 0;
0x1205A	0x2100    MOVS	R1, #0
0x1205C	0x4868    LDR	R0, [PC, #416]
0x1205E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1720 :: 		Box2.OnClickPtr      = 0;
0x12060	0x2100    MOVS	R1, #0
0x12062	0x4868    LDR	R0, [PC, #416]
0x12064	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1721 :: 		Box2.OnPressPtr      = 0;
0x12066	0x2100    MOVS	R1, #0
0x12068	0x4867    LDR	R0, [PC, #412]
0x1206A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1723 :: 		Label14.OwnerScreen     = &Speedometer_graphics;
0x1206C	0x4940    LDR	R1, [PC, #256]
0x1206E	0x4867    LDR	R0, [PC, #412]
0x12070	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1724 :: 		Label14.Order           = 16;
0x12072	0x2110    MOVS	R1, #16
0x12074	0x4866    LDR	R0, [PC, #408]
0x12076	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1725 :: 		Label14.Left            = 358;
0x12078	0xF2401166  MOVW	R1, #358
0x1207C	0x4865    LDR	R0, [PC, #404]
0x1207E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1726 :: 		Label14.Top             = 221;
0x12080	0x21DD    MOVS	R1, #221
0x12082	0x4865    LDR	R0, [PC, #404]
0x12084	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1727 :: 		Label14.Width           = 62;
0x12086	0x213E    MOVS	R1, #62
0x12088	0x4864    LDR	R0, [PC, #400]
0x1208A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1728 :: 		Label14.Height          = 17;
0x1208C	0x2111    MOVS	R1, #17
0x1208E	0x4864    LDR	R0, [PC, #400]
0x12090	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1729 :: 		Label14.Visible         = 1;
0x12092	0x2101    MOVS	R1, #1
0x12094	0x4863    LDR	R0, [PC, #396]
0x12096	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1730 :: 		Label14.Active          = 1;
0x12098	0x2101    MOVS	R1, #1
0x1209A	0x4863    LDR	R0, [PC, #396]
0x1209C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1731 :: 		Label14.Caption         = Label14_Caption;
0x1209E	0x4963    LDR	R1, [PC, #396]
0x120A0	0x4863    LDR	R0, [PC, #396]
0x120A2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1732 :: 		Label14.FontName        = Arial_Black11x15_Regular;
0x120A4	0xF64A5109  MOVW	R1, #44297
0x120A8	0x4862    LDR	R0, [PC, #392]
0x120AA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1733 :: 		Label14.Font_Color      = 0x0000;
0x120AC	0x2100    MOVS	R1, #0
0x120AE	0x4862    LDR	R0, [PC, #392]
0x120B0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1734 :: 		Label14.OnUpPtr         = 0;
0x120B2	0x2100    MOVS	R1, #0
0x120B4	0x4861    LDR	R0, [PC, #388]
0x120B6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1735 :: 		Label14.OnDownPtr       = 0;
0x120B8	0x2100    MOVS	R1, #0
0x120BA	0x4861    LDR	R0, [PC, #388]
0x120BC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1736 :: 		Label14.OnClickPtr      = 0;
0x120BE	0x2100    MOVS	R1, #0
0x120C0	0x4860    LDR	R0, [PC, #384]
0x120C2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1737 :: 		Label14.OnPressPtr      = 0;
0x120C4	0x2100    MOVS	R1, #0
0x120C6	0x4860    LDR	R0, [PC, #384]
0x120C8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1739 :: 		Label15.OwnerScreen     = &Speedometer_graphics;
0x120CA	0x4929    LDR	R1, [PC, #164]
0x120CC	0x485F    LDR	R0, [PC, #380]
0x120CE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1740 :: 		Label15.Order           = 17;
0x120D0	0x2111    MOVS	R1, #17
0x120D2	0x485F    LDR	R0, [PC, #380]
0x120D4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1741 :: 		Label15.Left            = 198;
0x120D6	0x21C6    MOVS	R1, #198
0x120D8	0x485E    LDR	R0, [PC, #376]
0x120DA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1742 :: 		Label15.Top             = 203;
0x120DC	0x21CB    MOVS	R1, #203
0x120DE	0x485E    LDR	R0, [PC, #376]
0x120E0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1743 :: 		Label15.Width           = 86;
0x120E2	0x2156    MOVS	R1, #86
0x120E4	0x485D    LDR	R0, [PC, #372]
0x120E6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1744 :: 		Label15.Height          = 25;
0x120E8	0x2119    MOVS	R1, #25
0x120EA	0x485D    LDR	R0, [PC, #372]
0x120EC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1745 :: 		Label15.Visible         = 1;
0x120EE	0x2101    MOVS	R1, #1
0x120F0	0x485C    LDR	R0, [PC, #368]
0x120F2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1746 :: 		Label15.Active          = 1;
0x120F4	0x2101    MOVS	R1, #1
0x120F6	0x485C    LDR	R0, [PC, #368]
0x120F8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1747 :: 		Label15.Caption         = Label15_Caption;
0x120FA	0x495C    LDR	R1, [PC, #368]
0x120FC	0x485C    LDR	R0, [PC, #368]
0x120FE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1748 :: 		Label15.FontName        = Arial_Black16x23_Regular;
0x12100	0xF6402123  MOVW	R1, #2595
0x12104	0x485B    LDR	R0, [PC, #364]
0x12106	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1749 :: 		Label15.Font_Color      = 0x0000;
0x12108	0x2100    MOVS	R1, #0
0x1210A	0x485B    LDR	R0, [PC, #364]
0x1210C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1750 :: 		Label15.OnUpPtr         = 0;
0x1210E	0x2100    MOVS	R1, #0
0x12110	0x485A    LDR	R0, [PC, #360]
0x12112	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1751 :: 		Label15.OnDownPtr       = 0;
0x12114	0x2100    MOVS	R1, #0
0x12116	0x485A    LDR	R0, [PC, #360]
0x12118	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1752 :: 		Label15.OnClickPtr      = 0;
0x1211A	0x2100    MOVS	R1, #0
0x1211C	0x4859    LDR	R0, [PC, #356]
0x1211E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1753 :: 		Label15.OnPressPtr      = 0;
0x12120	0x2100    MOVS	R1, #0
0x12122	0x4859    LDR	R0, [PC, #356]
0x12124	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1755 :: 		Label16.OwnerScreen     = &Speedometer_graphics;
0x12126	0x4912    LDR	R1, [PC, #72]
0x12128	0x4858    LDR	R0, [PC, #352]
0x1212A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1756 :: 		Label16.Order           = 18;
0x1212C	0x2112    MOVS	R1, #18
0x1212E	0x4858    LDR	R0, [PC, #352]
0x12130	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1757 :: 		Label16.Left            = 218;
0x12132	0x21DA    MOVS	R1, #218
0x12134	0x4857    LDR	R0, [PC, #348]
0x12136	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1758 :: 		Label16.Top             = 221;
0x12138	0x21DD    MOVS	R1, #221
0x1213A	0x4857    LDR	R0, [PC, #348]
0x1213C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1759 :: 		Label16.Width           = 38;
0x1213E	0x2126    MOVS	R1, #38
0x12140	0x4856    LDR	R0, [PC, #344]
0x12142	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1760 :: 		Label16.Height          = 17;
0x12144	0x2111    MOVS	R1, #17
0x12146	0x4856    LDR	R0, [PC, #344]
0x12148	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1761 :: 		Label16.Visible         = 1;
0x1214A	0x2101    MOVS	R1, #1
0x1214C	0x4855    LDR	R0, [PC, #340]
0x1214E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1762 :: 		Label16.Active          = 1;
0x12150	0x2101    MOVS	R1, #1
0x12152	0x4855    LDR	R0, [PC, #340]
0x12154	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1763 :: 		Label16.Caption         = Label16_Caption;
0x12156	0x4955    LDR	R1, [PC, #340]
0x12158	0x4855    LDR	R0, [PC, #340]
0x1215A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1764 :: 		Label16.FontName        = Arial_Black11x15_Regular;
0x1215C	0xF64A5109  MOVW	R1, #44297
0x12160	0xF000B8A8  B	#336
0x12164	0x09AC2000  	_Label12+32
0x12168	0x09B02000  	_Label12+36
0x1216C	0x09B42000  	_Label12+40
0x12170	0x08742000  	_Speedometer_graphics+0
0x12174	0x09B82000  	_Label13+0
0x12178	0x09BC2000  	_Label13+4
0x1217C	0x09BE2000  	_Label13+6
0x12180	0x09C02000  	_Label13+8
0x12184	0x09C22000  	_Label13+10
0x12188	0x09C42000  	_Label13+12
0x1218C	0x09D22000  	_Label13+26
0x12190	0x09D32000  	_Label13+27
0x12194	0x008A2000  	_Label13_Caption+0
0x12198	0x09C82000  	_Label13+16
0x1219C	0x09CC2000  	_Label13+20
0x121A0	0x09D02000  	_Label13+24
0x121A4	0x09D42000  	_Label13+28
0x121A8	0x09D82000  	_Label13+32
0x121AC	0x09DC2000  	_Label13+36
0x121B0	0x09E02000  	_Label13+40
0x121B4	0x0C402000  	_Box2+0
0x121B8	0x0C442000  	_Box2+4
0x121BC	0x0C462000  	_Box2+6
0x121C0	0x0C482000  	_Box2+8
0x121C4	0x0C4A2000  	_Box2+10
0x121C8	0x0C4C2000  	_Box2+12
0x121CC	0x0C4E2000  	_Box2+14
0x121D0	0x0C502000  	_Box2+16
0x121D4	0x0C522000  	_Box2+18
0x121D8	0x0C532000  	_Box2+19
0x121DC	0x0C542000  	_Box2+20
0x121E0	0x0C552000  	_Box2+21
0x121E4	0x0C562000  	_Box2+22
0x121E8	0x0C582000  	_Box2+24
0x121EC	0x0C5A2000  	_Box2+26
0x121F0	0x0C5C2000  	_Box2+28
0x121F4	0x0C5E2000  	_Box2+30
0x121F8	0x0C602000  	_Box2+32
0x121FC	0x0C642000  	_Box2+36
0x12200	0x0C682000  	_Box2+40
0x12204	0x0C6C2000  	_Box2+44
0x12208	0x0C702000  	_Box2+48
0x1220C	0x09E42000  	_Label14+0
0x12210	0x09E82000  	_Label14+4
0x12214	0x09EA2000  	_Label14+6
0x12218	0x09EC2000  	_Label14+8
0x1221C	0x09EE2000  	_Label14+10
0x12220	0x09F02000  	_Label14+12
0x12224	0x09FE2000  	_Label14+26
0x12228	0x09FF2000  	_Label14+27
0x1222C	0x00902000  	_Label14_Caption+0
0x12230	0x09F42000  	_Label14+16
0x12234	0x09F82000  	_Label14+20
0x12238	0x09FC2000  	_Label14+24
0x1223C	0x0A002000  	_Label14+28
0x12240	0x0A042000  	_Label14+32
0x12244	0x0A082000  	_Label14+36
0x12248	0x0A0C2000  	_Label14+40
0x1224C	0x0A102000  	_Label15+0
0x12250	0x0A142000  	_Label15+4
0x12254	0x0A162000  	_Label15+6
0x12258	0x0A182000  	_Label15+8
0x1225C	0x0A1A2000  	_Label15+10
0x12260	0x0A1C2000  	_Label15+12
0x12264	0x0A2A2000  	_Label15+26
0x12268	0x0A2B2000  	_Label15+27
0x1226C	0x009A2000  	_Label15_Caption+0
0x12270	0x0A202000  	_Label15+16
0x12274	0x0A242000  	_Label15+20
0x12278	0x0A282000  	_Label15+24
0x1227C	0x0A2C2000  	_Label15+28
0x12280	0x0A302000  	_Label15+32
0x12284	0x0A342000  	_Label15+36
0x12288	0x0A382000  	_Label15+40
0x1228C	0x0A3C2000  	_Label16+0
0x12290	0x0A402000  	_Label16+4
0x12294	0x0A422000  	_Label16+6
0x12298	0x0A442000  	_Label16+8
0x1229C	0x0A462000  	_Label16+10
0x122A0	0x0A482000  	_Label16+12
0x122A4	0x0A562000  	_Label16+26
0x122A8	0x0A572000  	_Label16+27
0x122AC	0x00A22000  	_Label16_Caption+0
0x122B0	0x0A4C2000  	_Label16+16
0x122B4	0x487B    LDR	R0, [PC, #492]
0x122B6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1765 :: 		Label16.Font_Color      = 0x0000;
0x122B8	0x2100    MOVS	R1, #0
0x122BA	0x487B    LDR	R0, [PC, #492]
0x122BC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1766 :: 		Label16.OnUpPtr         = 0;
0x122BE	0x2100    MOVS	R1, #0
0x122C0	0x487A    LDR	R0, [PC, #488]
0x122C2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1767 :: 		Label16.OnDownPtr       = 0;
0x122C4	0x2100    MOVS	R1, #0
0x122C6	0x487A    LDR	R0, [PC, #488]
0x122C8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1768 :: 		Label16.OnClickPtr      = 0;
0x122CA	0x2100    MOVS	R1, #0
0x122CC	0x4879    LDR	R0, [PC, #484]
0x122CE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1769 :: 		Label16.OnPressPtr      = 0;
0x122D0	0x2100    MOVS	R1, #0
0x122D2	0x4879    LDR	R0, [PC, #484]
0x122D4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1771 :: 		Label17.OwnerScreen     = &Speedometer_graphics;
0x122D6	0x4979    LDR	R1, [PC, #484]
0x122D8	0x4879    LDR	R0, [PC, #484]
0x122DA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1772 :: 		Label17.Order           = 19;
0x122DC	0x2113    MOVS	R1, #19
0x122DE	0x4879    LDR	R0, [PC, #484]
0x122E0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1773 :: 		Label17.Left            = 195;
0x122E2	0x21C3    MOVS	R1, #195
0x122E4	0x4878    LDR	R0, [PC, #480]
0x122E6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1774 :: 		Label17.Top             = 192;
0x122E8	0x21C0    MOVS	R1, #192
0x122EA	0x4878    LDR	R0, [PC, #480]
0x122EC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1775 :: 		Label17.Width           = 9;
0x122EE	0x2109    MOVS	R1, #9
0x122F0	0x4877    LDR	R0, [PC, #476]
0x122F2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1776 :: 		Label17.Height          = 17;
0x122F4	0x2111    MOVS	R1, #17
0x122F6	0x4877    LDR	R0, [PC, #476]
0x122F8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1777 :: 		Label17.Visible         = 1;
0x122FA	0x2101    MOVS	R1, #1
0x122FC	0x4876    LDR	R0, [PC, #472]
0x122FE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1778 :: 		Label17.Active          = 1;
0x12300	0x2101    MOVS	R1, #1
0x12302	0x4876    LDR	R0, [PC, #472]
0x12304	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1779 :: 		Label17.Caption         = Label17_Caption;
0x12306	0x4976    LDR	R1, [PC, #472]
0x12308	0x4876    LDR	R0, [PC, #472]
0x1230A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1780 :: 		Label17.FontName        = Arial_Black11x15_Regular;
0x1230C	0xF64A5109  MOVW	R1, #44297
0x12310	0x4875    LDR	R0, [PC, #468]
0x12312	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1781 :: 		Label17.Font_Color      = 0x0000;
0x12314	0x2100    MOVS	R1, #0
0x12316	0x4875    LDR	R0, [PC, #468]
0x12318	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1782 :: 		Label17.OnUpPtr         = 0;
0x1231A	0x2100    MOVS	R1, #0
0x1231C	0x4874    LDR	R0, [PC, #464]
0x1231E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1783 :: 		Label17.OnDownPtr       = 0;
0x12320	0x2100    MOVS	R1, #0
0x12322	0x4874    LDR	R0, [PC, #464]
0x12324	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1784 :: 		Label17.OnClickPtr      = 0;
0x12326	0x2100    MOVS	R1, #0
0x12328	0x4873    LDR	R0, [PC, #460]
0x1232A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1785 :: 		Label17.OnPressPtr      = 0;
0x1232C	0x2100    MOVS	R1, #0
0x1232E	0x4873    LDR	R0, [PC, #460]
0x12330	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1787 :: 		Line1.OwnerScreen     = &Speedometer_graphics;
0x12332	0x4962    LDR	R1, [PC, #392]
0x12334	0x4872    LDR	R0, [PC, #456]
0x12336	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1788 :: 		Line1.Order           = 20;
0x12338	0x2114    MOVS	R1, #20
0x1233A	0x4872    LDR	R0, [PC, #456]
0x1233C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1789 :: 		Line1.First_Point_X   = 238;
0x1233E	0x21EE    MOVS	R1, #238
0x12340	0x4871    LDR	R0, [PC, #452]
0x12342	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1790 :: 		Line1.First_Point_Y   = 135;
0x12344	0x2187    MOVS	R1, #135
0x12346	0x4871    LDR	R0, [PC, #452]
0x12348	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1791 :: 		Line1.Second_Point_X  = 160;
0x1234A	0x21A0    MOVS	R1, #160
0x1234C	0x4870    LDR	R0, [PC, #448]
0x1234E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1792 :: 		Line1.Second_Point_Y  = 214;
0x12350	0x21D6    MOVS	R1, #214
0x12352	0x4870    LDR	R0, [PC, #448]
0x12354	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1793 :: 		Line1.Visible         = 1;
0x12356	0x2101    MOVS	R1, #1
0x12358	0x486F    LDR	R0, [PC, #444]
0x1235A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1794 :: 		Line1.Pen_Width       = 5;
0x1235C	0x2105    MOVS	R1, #5
0x1235E	0x486F    LDR	R0, [PC, #444]
0x12360	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1795 :: 		Line1.Color           = 0xF800;
0x12362	0xF64F0100  MOVW	R1, #63488
0x12366	0x486E    LDR	R0, [PC, #440]
0x12368	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1797 :: 		Label18.OwnerScreen     = &Speedometer_graphics;
0x1236A	0x4954    LDR	R1, [PC, #336]
0x1236C	0x486D    LDR	R0, [PC, #436]
0x1236E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1798 :: 		Label18.Order           = 21;
0x12370	0x2115    MOVS	R1, #21
0x12372	0x486D    LDR	R0, [PC, #436]
0x12374	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1799 :: 		Label18.Left            = 222;
0x12376	0x21DE    MOVS	R1, #222
0x12378	0x486C    LDR	R0, [PC, #432]
0x1237A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1800 :: 		Label18.Top             = 103;
0x1237C	0x2167    MOVS	R1, #103
0x1237E	0x486C    LDR	R0, [PC, #432]
0x12380	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1801 :: 		Label18.Width           = 37;
0x12382	0x2125    MOVS	R1, #37
0x12384	0x486B    LDR	R0, [PC, #428]
0x12386	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1802 :: 		Label18.Height          = 66;
0x12388	0x2142    MOVS	R1, #66
0x1238A	0x486B    LDR	R0, [PC, #428]
0x1238C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1803 :: 		Label18.Visible         = 1;
0x1238E	0x2101    MOVS	R1, #1
0x12390	0x486A    LDR	R0, [PC, #424]
0x12392	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1804 :: 		Label18.Active          = 1;
0x12394	0x2101    MOVS	R1, #1
0x12396	0x486A    LDR	R0, [PC, #424]
0x12398	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1805 :: 		Label18.Caption         = Label18_Caption;
0x1239A	0x496A    LDR	R1, [PC, #424]
0x1239C	0x486A    LDR	R0, [PC, #424]
0x1239E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1806 :: 		Label18.FontName        = Arial_Black43x60_Regular;
0x123A0	0xF6452169  MOVW	R1, #23145
0x123A4	0x4869    LDR	R0, [PC, #420]
0x123A6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1807 :: 		Label18.Font_Color      = 0x07E0;
0x123A8	0xF24071E0  MOVW	R1, #2016
0x123AC	0x4868    LDR	R0, [PC, #416]
0x123AE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1808 :: 		Label18.OnUpPtr         = 0;
0x123B0	0x2100    MOVS	R1, #0
0x123B2	0x4868    LDR	R0, [PC, #416]
0x123B4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1809 :: 		Label18.OnDownPtr       = 0;
0x123B6	0x2100    MOVS	R1, #0
0x123B8	0x4867    LDR	R0, [PC, #412]
0x123BA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1810 :: 		Label18.OnClickPtr      = 0;
0x123BC	0x2100    MOVS	R1, #0
0x123BE	0x4867    LDR	R0, [PC, #412]
0x123C0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1811 :: 		Label18.OnPressPtr      = 0;
0x123C2	0x2100    MOVS	R1, #0
0x123C4	0x4866    LDR	R0, [PC, #408]
0x123C6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1813 :: 		ButtonRound8.OwnerScreen     = &Speedometer_graphics;
0x123C8	0x493C    LDR	R1, [PC, #240]
0x123CA	0x4866    LDR	R0, [PC, #408]
0x123CC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1814 :: 		ButtonRound8.Order           = 22;
0x123CE	0x2116    MOVS	R1, #22
0x123D0	0x4865    LDR	R0, [PC, #404]
0x123D2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1815 :: 		ButtonRound8.Left            = 378;
0x123D4	0xF240117A  MOVW	R1, #378
0x123D8	0x4864    LDR	R0, [PC, #400]
0x123DA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1816 :: 		ButtonRound8.Top             = 165;
0x123DC	0x21A5    MOVS	R1, #165
0x123DE	0x4864    LDR	R0, [PC, #400]
0x123E0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1817 :: 		ButtonRound8.Width           = 100;
0x123E2	0x2164    MOVS	R1, #100
0x123E4	0x4863    LDR	R0, [PC, #396]
0x123E6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1818 :: 		ButtonRound8.Height          = 50;
0x123E8	0x2132    MOVS	R1, #50
0x123EA	0x4863    LDR	R0, [PC, #396]
0x123EC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1819 :: 		ButtonRound8.Pen_Width       = 1;
0x123EE	0x2101    MOVS	R1, #1
0x123F0	0x4862    LDR	R0, [PC, #392]
0x123F2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1820 :: 		ButtonRound8.Pen_Color       = 0x0000;
0x123F4	0x2100    MOVS	R1, #0
0x123F6	0x4862    LDR	R0, [PC, #392]
0x123F8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1821 :: 		ButtonRound8.Visible         = 1;
0x123FA	0x2101    MOVS	R1, #1
0x123FC	0x4861    LDR	R0, [PC, #388]
0x123FE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1822 :: 		ButtonRound8.Active          = 1;
0x12400	0x2101    MOVS	R1, #1
0x12402	0x4861    LDR	R0, [PC, #388]
0x12404	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1823 :: 		ButtonRound8.Transparent     = 1;
0x12406	0x2101    MOVS	R1, #1
0x12408	0x4860    LDR	R0, [PC, #384]
0x1240A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1824 :: 		ButtonRound8.Caption         = ButtonRound8_Caption;
0x1240C	0x4960    LDR	R1, [PC, #384]
0x1240E	0x4861    LDR	R0, [PC, #388]
0x12410	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1825 :: 		ButtonRound8.TextAlign       = _taCenter;
0x12412	0x2101    MOVS	R1, #1
0x12414	0x4860    LDR	R0, [PC, #384]
0x12416	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1826 :: 		ButtonRound8.FontName        = Arial_Black11x15_Regular;
0x12418	0xF64A5109  MOVW	R1, #44297
0x1241C	0x485F    LDR	R0, [PC, #380]
0x1241E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1827 :: 		ButtonRound8.PressColEnabled = 1;
0x12420	0x2101    MOVS	R1, #1
0x12422	0x485F    LDR	R0, [PC, #380]
0x12424	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1828 :: 		ButtonRound8.Font_Color      = 0x0000;
0x12426	0x2100    MOVS	R1, #0
0x12428	0x485E    LDR	R0, [PC, #376]
0x1242A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1829 :: 		ButtonRound8.Gradient        = 1;
0x1242C	0x2101    MOVS	R1, #1
0x1242E	0x485E    LDR	R0, [PC, #376]
0x12430	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1830 :: 		ButtonRound8.Gradient_Orientation = 0;
0x12432	0x2100    MOVS	R1, #0
0x12434	0x485D    LDR	R0, [PC, #372]
0x12436	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1831 :: 		ButtonRound8.Gradient_Start_Color = 0xF800;
0x12438	0xF64F0100  MOVW	R1, #63488
0x1243C	0x485C    LDR	R0, [PC, #368]
0x1243E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1832 :: 		ButtonRound8.Gradient_End_Color = 0x0000;
0x12440	0x2100    MOVS	R1, #0
0x12442	0x485C    LDR	R0, [PC, #368]
0x12444	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1833 :: 		ButtonRound8.Color           = 0xC618;
0x12446	0xF24C6118  MOVW	R1, #50712
0x1244A	0x485B    LDR	R0, [PC, #364]
0x1244C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1834 :: 		ButtonRound8.Press_Color     = 0xE71C;
0x1244E	0xF24E711C  MOVW	R1, #59164
0x12452	0x485A    LDR	R0, [PC, #360]
0x12454	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1835 :: 		ButtonRound8.Corner_Radius   = 3;
0x12456	0x2103    MOVS	R1, #3
0x12458	0x4859    LDR	R0, [PC, #356]
0x1245A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1836 :: 		ButtonRound8.OnUpPtr         = 0;
0x1245C	0x2100    MOVS	R1, #0
0x1245E	0x4859    LDR	R0, [PC, #356]
0x12460	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1837 :: 		ButtonRound8.OnDownPtr       = 0;
0x12462	0x2100    MOVS	R1, #0
0x12464	0x4858    LDR	R0, [PC, #352]
0x12466	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1838 :: 		ButtonRound8.OnClickPtr      = 0;
0x12468	0x2100    MOVS	R1, #0
0x1246A	0x4858    LDR	R0, [PC, #352]
0x1246C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1839 :: 		ButtonRound8.OnPressPtr      = doLog;
0x1246E	0x4958    LDR	R1, [PC, #352]
0x12470	0x4858    LDR	R0, [PC, #352]
0x12472	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1841 :: 		Image40.OwnerScreen     = &Tachometer_graphics;
0x12474	0x4958    LDR	R1, [PC, #352]
0x12476	0x4859    LDR	R0, [PC, #356]
0x12478	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1842 :: 		Image40.Order           = 1;
0x1247A	0x2101    MOVS	R1, #1
0x1247C	0x4858    LDR	R0, [PC, #352]
0x1247E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1843 :: 		Image40.Left            = 0;
0x12480	0x2100    MOVS	R1, #0
0x12482	0x4858    LDR	R0, [PC, #352]
0x12484	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1844 :: 		Image40.Top             = 0;
0x12486	0x2100    MOVS	R1, #0
0x12488	0x4857    LDR	R0, [PC, #348]
0x1248A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1845 :: 		Image40.Width           = 50;
0x1248C	0x2132    MOVS	R1, #50
0x1248E	0x4857    LDR	R0, [PC, #348]
0x12490	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1846 :: 		Image40.Height          = 50;
0x12492	0x2132    MOVS	R1, #50
0x12494	0x4856    LDR	R0, [PC, #344]
0x12496	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1847 :: 		Image40.Picture_Type    = 1;
0x12498	0x2101    MOVS	R1, #1
0x1249A	0x4856    LDR	R0, [PC, #344]
0x1249C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1848 :: 		Image40.Picture_Ratio   = 1;
0x1249E	0x2101    MOVS	R1, #1
0x124A0	0xF000B8AA  B	#340
0x124A4	0x0A502000  	_Label16+20
0x124A8	0x0A542000  	_Label16+24
0x124AC	0x0A582000  	_Label16+28
0x124B0	0x0A5C2000  	_Label16+32
0x124B4	0x0A602000  	_Label16+36
0x124B8	0x0A642000  	_Label16+40
0x124BC	0x08742000  	_Speedometer_graphics+0
0x124C0	0x0A682000  	_Label17+0
0x124C4	0x0A6C2000  	_Label17+4
0x124C8	0x0A6E2000  	_Label17+6
0x124CC	0x0A702000  	_Label17+8
0x124D0	0x0A722000  	_Label17+10
0x124D4	0x0A742000  	_Label17+12
0x124D8	0x0A822000  	_Label17+26
0x124DC	0x0A832000  	_Label17+27
0x124E0	0x00A82000  	_Label17_Caption+0
0x124E4	0x0A782000  	_Label17+16
0x124E8	0x0A7C2000  	_Label17+20
0x124EC	0x0A802000  	_Label17+24
0x124F0	0x0A842000  	_Label17+28
0x124F4	0x0A882000  	_Label17+32
0x124F8	0x0A8C2000  	_Label17+36
0x124FC	0x0A902000  	_Label17+40
0x12500	0x0C742000  	_Line1+0
0x12504	0x0C782000  	_Line1+4
0x12508	0x0C7A2000  	_Line1+6
0x1250C	0x0C7C2000  	_Line1+8
0x12510	0x0C7E2000  	_Line1+10
0x12514	0x0C802000  	_Line1+12
0x12518	0x0C832000  	_Line1+15
0x1251C	0x0C822000  	_Line1+14
0x12520	0x0C842000  	_Line1+16
0x12524	0x0A942000  	_Label18+0
0x12528	0x0A982000  	_Label18+4
0x1252C	0x0A9A2000  	_Label18+6
0x12530	0x0A9C2000  	_Label18+8
0x12534	0x0A9E2000  	_Label18+10
0x12538	0x0AA02000  	_Label18+12
0x1253C	0x0AAE2000  	_Label18+26
0x12540	0x0AAF2000  	_Label18+27
0x12544	0x00AA2000  	_Label18_Caption+0
0x12548	0x0AA42000  	_Label18+16
0x1254C	0x0AA82000  	_Label18+20
0x12550	0x0AAC2000  	_Label18+24
0x12554	0x0AB02000  	_Label18+28
0x12558	0x0AB42000  	_Label18+32
0x1255C	0x0AB82000  	_Label18+36
0x12560	0x0ABC2000  	_Label18+40
0x12564	0x08C42000  	_ButtonRound8+0
0x12568	0x08C82000  	_ButtonRound8+4
0x1256C	0x08CA2000  	_ButtonRound8+6
0x12570	0x08CC2000  	_ButtonRound8+8
0x12574	0x08CE2000  	_ButtonRound8+10
0x12578	0x08D02000  	_ButtonRound8+12
0x1257C	0x08D22000  	_ButtonRound8+14
0x12580	0x08D42000  	_ButtonRound8+16
0x12584	0x08D62000  	_ButtonRound8+18
0x12588	0x08D72000  	_ButtonRound8+19
0x1258C	0x08D82000  	_ButtonRound8+20
0x12590	0x00AC2000  	_ButtonRound8_Caption+0
0x12594	0x08DC2000  	_ButtonRound8+24
0x12598	0x08E02000  	_ButtonRound8+28
0x1259C	0x08E42000  	_ButtonRound8+32
0x125A0	0x08F32000  	_ButtonRound8+47
0x125A4	0x08E82000  	_ButtonRound8+36
0x125A8	0x08EA2000  	_ButtonRound8+38
0x125AC	0x08EB2000  	_ButtonRound8+39
0x125B0	0x08EC2000  	_ButtonRound8+40
0x125B4	0x08EE2000  	_ButtonRound8+42
0x125B8	0x08F02000  	_ButtonRound8+44
0x125BC	0x08F42000  	_ButtonRound8+48
0x125C0	0x08F22000  	_ButtonRound8+46
0x125C4	0x08F82000  	_ButtonRound8+52
0x125C8	0x08FC2000  	_ButtonRound8+56
0x125CC	0x09002000  	_ButtonRound8+60
0x125D0	0xBBF10000  	_doLog+0
0x125D4	0x09042000  	_ButtonRound8+64
0x125D8	0x0C882000  	_Tachometer_graphics+0
0x125DC	0x0ED42000  	_Image40+0
0x125E0	0x0ED82000  	_Image40+4
0x125E4	0x0EDA2000  	_Image40+6
0x125E8	0x0EDC2000  	_Image40+8
0x125EC	0x0EDE2000  	_Image40+10
0x125F0	0x0EE02000  	_Image40+12
0x125F4	0x0EEA2000  	_Image40+22
0x125F8	0x4877    LDR	R0, [PC, #476]
0x125FA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1849 :: 		Image40.Picture_Name    = WaterTemperatureIcon_jpg;
0x125FC	0x4977    LDR	R1, [PC, #476]
0x125FE	0x4878    LDR	R0, [PC, #480]
0x12600	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1850 :: 		Image40.Visible         = 1;
0x12602	0x2101    MOVS	R1, #1
0x12604	0x4877    LDR	R0, [PC, #476]
0x12606	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1851 :: 		Image40.Active          = 1;
0x12608	0x2101    MOVS	R1, #1
0x1260A	0x4877    LDR	R0, [PC, #476]
0x1260C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1852 :: 		Image40.OnUpPtr         = 0;
0x1260E	0x2100    MOVS	R1, #0
0x12610	0x4876    LDR	R0, [PC, #472]
0x12612	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1853 :: 		Image40.OnDownPtr       = 0;
0x12614	0x2100    MOVS	R1, #0
0x12616	0x4876    LDR	R0, [PC, #472]
0x12618	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1854 :: 		Image40.OnClickPtr      = 0;
0x1261A	0x2100    MOVS	R1, #0
0x1261C	0x4875    LDR	R0, [PC, #468]
0x1261E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1855 :: 		Image40.OnPressPtr      = 0;
0x12620	0x2100    MOVS	R1, #0
0x12622	0x4875    LDR	R0, [PC, #468]
0x12624	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1857 :: 		Image41.OwnerScreen     = &Tachometer_graphics;
0x12626	0x4975    LDR	R1, [PC, #468]
0x12628	0x4875    LDR	R0, [PC, #468]
0x1262A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1858 :: 		Image41.Order           = 2;
0x1262C	0x2102    MOVS	R1, #2
0x1262E	0x4875    LDR	R0, [PC, #468]
0x12630	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1859 :: 		Image41.Left            = 49;
0x12632	0x2131    MOVS	R1, #49
0x12634	0x4874    LDR	R0, [PC, #464]
0x12636	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1860 :: 		Image41.Top             = 0;
0x12638	0x2100    MOVS	R1, #0
0x1263A	0x4874    LDR	R0, [PC, #464]
0x1263C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1861 :: 		Image41.Width           = 50;
0x1263E	0x2132    MOVS	R1, #50
0x12640	0x4873    LDR	R0, [PC, #460]
0x12642	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1862 :: 		Image41.Height          = 50;
0x12644	0x2132    MOVS	R1, #50
0x12646	0x4873    LDR	R0, [PC, #460]
0x12648	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1863 :: 		Image41.Picture_Type    = 1;
0x1264A	0x2101    MOVS	R1, #1
0x1264C	0x4872    LDR	R0, [PC, #456]
0x1264E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1864 :: 		Image41.Picture_Ratio   = 1;
0x12650	0x2101    MOVS	R1, #1
0x12652	0x4872    LDR	R0, [PC, #456]
0x12654	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1865 :: 		Image41.Picture_Name    = HeadlightIcon_jpg;
0x12656	0x4972    LDR	R1, [PC, #456]
0x12658	0x4872    LDR	R0, [PC, #456]
0x1265A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1866 :: 		Image41.Visible         = 1;
0x1265C	0x2101    MOVS	R1, #1
0x1265E	0x4872    LDR	R0, [PC, #456]
0x12660	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1867 :: 		Image41.Active          = 1;
0x12662	0x2101    MOVS	R1, #1
0x12664	0x4871    LDR	R0, [PC, #452]
0x12666	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1868 :: 		Image41.OnUpPtr         = 0;
0x12668	0x2100    MOVS	R1, #0
0x1266A	0x4871    LDR	R0, [PC, #452]
0x1266C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1869 :: 		Image41.OnDownPtr       = 0;
0x1266E	0x2100    MOVS	R1, #0
0x12670	0x4870    LDR	R0, [PC, #448]
0x12672	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1870 :: 		Image41.OnClickPtr      = 0;
0x12674	0x2100    MOVS	R1, #0
0x12676	0x4870    LDR	R0, [PC, #448]
0x12678	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1871 :: 		Image41.OnPressPtr      = 0;
0x1267A	0x2100    MOVS	R1, #0
0x1267C	0x486F    LDR	R0, [PC, #444]
0x1267E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1873 :: 		Image42.OwnerScreen     = &Tachometer_graphics;
0x12680	0x495E    LDR	R1, [PC, #376]
0x12682	0x486F    LDR	R0, [PC, #444]
0x12684	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1874 :: 		Image42.Order           = 3;
0x12686	0x2103    MOVS	R1, #3
0x12688	0x486E    LDR	R0, [PC, #440]
0x1268A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1875 :: 		Image42.Left            = 0;
0x1268C	0x2100    MOVS	R1, #0
0x1268E	0x486E    LDR	R0, [PC, #440]
0x12690	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1876 :: 		Image42.Top             = 49;
0x12692	0x2131    MOVS	R1, #49
0x12694	0x486D    LDR	R0, [PC, #436]
0x12696	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1877 :: 		Image42.Width           = 50;
0x12698	0x2132    MOVS	R1, #50
0x1269A	0x486D    LDR	R0, [PC, #436]
0x1269C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1878 :: 		Image42.Height          = 50;
0x1269E	0x2132    MOVS	R1, #50
0x126A0	0x486C    LDR	R0, [PC, #432]
0x126A2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1879 :: 		Image42.Picture_Type    = 1;
0x126A4	0x2101    MOVS	R1, #1
0x126A6	0x486C    LDR	R0, [PC, #432]
0x126A8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1880 :: 		Image42.Picture_Ratio   = 1;
0x126AA	0x2101    MOVS	R1, #1
0x126AC	0x486B    LDR	R0, [PC, #428]
0x126AE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1881 :: 		Image42.Picture_Name    = fuel_jpg;
0x126B0	0x496B    LDR	R1, [PC, #428]
0x126B2	0x486C    LDR	R0, [PC, #432]
0x126B4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1882 :: 		Image42.Visible         = 1;
0x126B6	0x2101    MOVS	R1, #1
0x126B8	0x486B    LDR	R0, [PC, #428]
0x126BA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1883 :: 		Image42.Active          = 1;
0x126BC	0x2101    MOVS	R1, #1
0x126BE	0x486B    LDR	R0, [PC, #428]
0x126C0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1884 :: 		Image42.OnUpPtr         = 0;
0x126C2	0x2100    MOVS	R1, #0
0x126C4	0x486A    LDR	R0, [PC, #424]
0x126C6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1885 :: 		Image42.OnDownPtr       = 0;
0x126C8	0x2100    MOVS	R1, #0
0x126CA	0x486A    LDR	R0, [PC, #424]
0x126CC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1886 :: 		Image42.OnClickPtr      = 0;
0x126CE	0x2100    MOVS	R1, #0
0x126D0	0x4869    LDR	R0, [PC, #420]
0x126D2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1887 :: 		Image42.OnPressPtr      = 0;
0x126D4	0x2100    MOVS	R1, #0
0x126D6	0x4869    LDR	R0, [PC, #420]
0x126D8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1889 :: 		Image43.OwnerScreen     = &Tachometer_graphics;
0x126DA	0x4948    LDR	R1, [PC, #288]
0x126DC	0x4868    LDR	R0, [PC, #416]
0x126DE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1890 :: 		Image43.Order           = 4;
0x126E0	0x2104    MOVS	R1, #4
0x126E2	0x4868    LDR	R0, [PC, #416]
0x126E4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1891 :: 		Image43.Left            = 49;
0x126E6	0x2131    MOVS	R1, #49
0x126E8	0x4867    LDR	R0, [PC, #412]
0x126EA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1892 :: 		Image43.Top             = 49;
0x126EC	0x2131    MOVS	R1, #49
0x126EE	0x4867    LDR	R0, [PC, #412]
0x126F0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1893 :: 		Image43.Width           = 50;
0x126F2	0x2132    MOVS	R1, #50
0x126F4	0x4866    LDR	R0, [PC, #408]
0x126F6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1894 :: 		Image43.Height          = 50;
0x126F8	0x2132    MOVS	R1, #50
0x126FA	0x4866    LDR	R0, [PC, #408]
0x126FC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1895 :: 		Image43.Picture_Type    = 1;
0x126FE	0x2101    MOVS	R1, #1
0x12700	0x4865    LDR	R0, [PC, #404]
0x12702	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1896 :: 		Image43.Picture_Ratio   = 1;
0x12704	0x2101    MOVS	R1, #1
0x12706	0x4865    LDR	R0, [PC, #404]
0x12708	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1897 :: 		Image43.Picture_Name    = OilAlertIcon_jpg;
0x1270A	0x4965    LDR	R1, [PC, #404]
0x1270C	0x4865    LDR	R0, [PC, #404]
0x1270E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1898 :: 		Image43.Visible         = 1;
0x12710	0x2101    MOVS	R1, #1
0x12712	0x4865    LDR	R0, [PC, #404]
0x12714	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1899 :: 		Image43.Active          = 1;
0x12716	0x2101    MOVS	R1, #1
0x12718	0x4864    LDR	R0, [PC, #400]
0x1271A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1900 :: 		Image43.OnUpPtr         = 0;
0x1271C	0x2100    MOVS	R1, #0
0x1271E	0x4864    LDR	R0, [PC, #400]
0x12720	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1901 :: 		Image43.OnDownPtr       = 0;
0x12722	0x2100    MOVS	R1, #0
0x12724	0x4863    LDR	R0, [PC, #396]
0x12726	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1902 :: 		Image43.OnClickPtr      = 0;
0x12728	0x2100    MOVS	R1, #0
0x1272A	0x4863    LDR	R0, [PC, #396]
0x1272C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1903 :: 		Image43.OnPressPtr      = 0;
0x1272E	0x2100    MOVS	R1, #0
0x12730	0x4862    LDR	R0, [PC, #392]
0x12732	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1905 :: 		Image44.OwnerScreen     = &Tachometer_graphics;
0x12734	0x4931    LDR	R1, [PC, #196]
0x12736	0x4862    LDR	R0, [PC, #392]
0x12738	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1906 :: 		Image44.Order           = 5;
0x1273A	0x2105    MOVS	R1, #5
0x1273C	0x4861    LDR	R0, [PC, #388]
0x1273E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1907 :: 		Image44.Left            = 55;
0x12740	0x2137    MOVS	R1, #55
0x12742	0x4861    LDR	R0, [PC, #388]
0x12744	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1908 :: 		Image44.Top             = 116;
0x12746	0x2174    MOVS	R1, #116
0x12748	0x4860    LDR	R0, [PC, #384]
0x1274A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1909 :: 		Image44.Width           = 51;
0x1274C	0x2133    MOVS	R1, #51
0x1274E	0x4860    LDR	R0, [PC, #384]
0x12750	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1910 :: 		Image44.Height          = 39;
0x12752	0x2127    MOVS	R1, #39
0x12754	0x485F    LDR	R0, [PC, #380]
0x12756	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1911 :: 		Image44.Picture_Type    = 1;
0x12758	0x2101    MOVS	R1, #1
0x1275A	0x485F    LDR	R0, [PC, #380]
0x1275C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1912 :: 		Image44.Picture_Ratio   = 1;
0x1275E	0x2101    MOVS	R1, #1
0x12760	0x485E    LDR	R0, [PC, #376]
0x12762	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1913 :: 		Image44.Picture_Name    = red_left_arrow_103_jpg;
0x12764	0x495E    LDR	R1, [PC, #376]
0x12766	0x485F    LDR	R0, [PC, #380]
0x12768	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1914 :: 		Image44.Visible         = 1;
0x1276A	0x2101    MOVS	R1, #1
0x1276C	0x485E    LDR	R0, [PC, #376]
0x1276E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1915 :: 		Image44.Active          = 1;
0x12770	0x2101    MOVS	R1, #1
0x12772	0x485E    LDR	R0, [PC, #376]
0x12774	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1916 :: 		Image44.OnUpPtr         = 0;
0x12776	0x2100    MOVS	R1, #0
0x12778	0x485D    LDR	R0, [PC, #372]
0x1277A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1917 :: 		Image44.OnDownPtr       = 0;
0x1277C	0x2100    MOVS	R1, #0
0x1277E	0x485D    LDR	R0, [PC, #372]
0x12780	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1918 :: 		Image44.OnClickPtr      = 0;
0x12782	0x2100    MOVS	R1, #0
0x12784	0x485C    LDR	R0, [PC, #368]
0x12786	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1919 :: 		Image44.OnPressPtr      = 0;
0x12788	0x2100    MOVS	R1, #0
0x1278A	0x485C    LDR	R0, [PC, #368]
0x1278C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1921 :: 		Image45.OwnerScreen     = &Tachometer_graphics;
0x1278E	0x491B    LDR	R1, [PC, #108]
0x12790	0x485B    LDR	R0, [PC, #364]
0x12792	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1922 :: 		Image45.Order           = 6;
0x12794	0x2106    MOVS	R1, #6
0x12796	0x485B    LDR	R0, [PC, #364]
0x12798	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1923 :: 		Image45.Left            = 373;
0x1279A	0xF2401175  MOVW	R1, #373
0x1279E	0x485A    LDR	R0, [PC, #360]
0x127A0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1924 :: 		Image45.Top             = 116;
0x127A2	0x2174    MOVS	R1, #116
0x127A4	0x4859    LDR	R0, [PC, #356]
0x127A6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1925 :: 		Image45.Width           = 51;
0x127A8	0x2133    MOVS	R1, #51
0x127AA	0x4859    LDR	R0, [PC, #356]
0x127AC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1926 :: 		Image45.Height          = 39;
0x127AE	0x2127    MOVS	R1, #39
0x127B0	0x4858    LDR	R0, [PC, #352]
0x127B2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1927 :: 		Image45.Picture_Type    = 1;
0x127B4	0x2101    MOVS	R1, #1
0x127B6	0x4858    LDR	R0, [PC, #352]
0x127B8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1928 :: 		Image45.Picture_Ratio   = 1;
0x127BA	0x2101    MOVS	R1, #1
0x127BC	0x4857    LDR	R0, [PC, #348]
0x127BE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1929 :: 		Image45.Picture_Name    = red_left_arrow_copy_jpg;
0x127C0	0x4957    LDR	R1, [PC, #348]
0x127C2	0x4858    LDR	R0, [PC, #352]
0x127C4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1930 :: 		Image45.Visible         = 1;
0x127C6	0x2101    MOVS	R1, #1
0x127C8	0x4857    LDR	R0, [PC, #348]
0x127CA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1931 :: 		Image45.Active          = 1;
0x127CC	0x2101    MOVS	R1, #1
0x127CE	0x4857    LDR	R0, [PC, #348]
0x127D0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1932 :: 		Image45.OnUpPtr         = 0;
0x127D2	0x2100    MOVS	R1, #0
0x127D4	0x4856    LDR	R0, [PC, #344]
0x127D6	0xE0AD    B	#346
0x127D8	0x0EEB2000  	_Image40+23
0x127DC	0x17C80039  	#3741640
0x127E0	0x0EE42000  	_Image40+16
0x127E4	0x0EE82000  	_Image40+20
0x127E8	0x0EE92000  	_Image40+21
0x127EC	0x0EEC2000  	_Image40+24
0x127F0	0x0EF02000  	_Image40+28
0x127F4	0x0EF42000  	_Image40+32
0x127F8	0x0EF82000  	_Image40+36
0x127FC	0x0C882000  	_Tachometer_graphics+0
0x12800	0x0EFC2000  	_Image41+0
0x12804	0x0F002000  	_Image41+4
0x12808	0x0F022000  	_Image41+6
0x1280C	0x0F042000  	_Image41+8
0x12810	0x0F062000  	_Image41+10
0x12814	0x0F082000  	_Image41+12
0x12818	0x0F122000  	_Image41+22
0x1281C	0x0F132000  	_Image41+23
0x12820	0x3EE40039  	#3751652
0x12824	0x0F0C2000  	_Image41+16
0x12828	0x0F102000  	_Image41+20
0x1282C	0x0F112000  	_Image41+21
0x12830	0x0F142000  	_Image41+24
0x12834	0x0F182000  	_Image41+28
0x12838	0x0F1C2000  	_Image41+32
0x1283C	0x0F202000  	_Image41+36
0x12840	0x0F242000  	_Image42+0
0x12844	0x0F282000  	_Image42+4
0x12848	0x0F2A2000  	_Image42+6
0x1284C	0x0F2C2000  	_Image42+8
0x12850	0x0F2E2000  	_Image42+10
0x12854	0x0F302000  	_Image42+12
0x12858	0x0F3A2000  	_Image42+22
0x1285C	0x0F3B2000  	_Image42+23
0x12860	0x2B560039  	#3746646
0x12864	0x0F342000  	_Image42+16
0x12868	0x0F382000  	_Image42+20
0x1286C	0x0F392000  	_Image42+21
0x12870	0x0F3C2000  	_Image42+24
0x12874	0x0F402000  	_Image42+28
0x12878	0x0F442000  	_Image42+32
0x1287C	0x0F482000  	_Image42+36
0x12880	0x0F4C2000  	_Image43+0
0x12884	0x0F502000  	_Image43+4
0x12888	0x0F522000  	_Image43+6
0x1288C	0x0F542000  	_Image43+8
0x12890	0x0F562000  	_Image43+10
0x12894	0x0F582000  	_Image43+12
0x12898	0x0F622000  	_Image43+22
0x1289C	0x0F632000  	_Image43+23
0x128A0	0x52720039  	#3756658
0x128A4	0x0F5C2000  	_Image43+16
0x128A8	0x0F602000  	_Image43+20
0x128AC	0x0F612000  	_Image43+21
0x128B0	0x0F642000  	_Image43+24
0x128B4	0x0F682000  	_Image43+28
0x128B8	0x0F6C2000  	_Image43+32
0x128BC	0x0F702000  	_Image43+36
0x128C0	0x0F742000  	_Image44+0
0x128C4	0x0F782000  	_Image44+4
0x128C8	0x0F7A2000  	_Image44+6
0x128CC	0x0F7C2000  	_Image44+8
0x128D0	0x0F7E2000  	_Image44+10
0x128D4	0x0F802000  	_Image44+12
0x128D8	0x0F8A2000  	_Image44+22
0x128DC	0x0F8B2000  	_Image44+23
0x128E0	0x798E0039  	#3766670
0x128E4	0x0F842000  	_Image44+16
0x128E8	0x0F882000  	_Image44+20
0x128EC	0x0F892000  	_Image44+21
0x128F0	0x0F8C2000  	_Image44+24
0x128F4	0x0F902000  	_Image44+28
0x128F8	0x0F942000  	_Image44+32
0x128FC	0x0F982000  	_Image44+36
0x12900	0x0F9C2000  	_Image45+0
0x12904	0x0FA02000  	_Image45+4
0x12908	0x0FA22000  	_Image45+6
0x1290C	0x0FA42000  	_Image45+8
0x12910	0x0FA62000  	_Image45+10
0x12914	0x0FA82000  	_Image45+12
0x12918	0x0FB22000  	_Image45+22
0x1291C	0x0FB32000  	_Image45+23
0x12920	0x891E0039  	#3770654
0x12924	0x0FAC2000  	_Image45+16
0x12928	0x0FB02000  	_Image45+20
0x1292C	0x0FB12000  	_Image45+21
0x12930	0x0FB42000  	_Image45+24
0x12934	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1933 :: 		Image45.OnDownPtr       = 0;
0x12936	0x2100    MOVS	R1, #0
0x12938	0x487B    LDR	R0, [PC, #492]
0x1293A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1934 :: 		Image45.OnClickPtr      = 0;
0x1293C	0x2100    MOVS	R1, #0
0x1293E	0x487B    LDR	R0, [PC, #492]
0x12940	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1935 :: 		Image45.OnPressPtr      = 0;
0x12942	0x2100    MOVS	R1, #0
0x12944	0x487A    LDR	R0, [PC, #488]
0x12946	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1937 :: 		Label20.OwnerScreen     = &Tachometer_graphics;
0x12948	0x497A    LDR	R1, [PC, #488]
0x1294A	0x487B    LDR	R0, [PC, #492]
0x1294C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1938 :: 		Label20.Order           = 7;
0x1294E	0x2107    MOVS	R1, #7
0x12950	0x487A    LDR	R0, [PC, #488]
0x12952	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1939 :: 		Label20.Left            = 33;
0x12954	0x2121    MOVS	R1, #33
0x12956	0x487A    LDR	R0, [PC, #488]
0x12958	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1940 :: 		Label20.Top             = 189;
0x1295A	0x21BD    MOVS	R1, #189
0x1295C	0x4879    LDR	R0, [PC, #484]
0x1295E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1941 :: 		Label20.Width           = 69;
0x12960	0x2145    MOVS	R1, #69
0x12962	0x4879    LDR	R0, [PC, #484]
0x12964	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1942 :: 		Label20.Height          = 41;
0x12966	0x2129    MOVS	R1, #41
0x12968	0x4878    LDR	R0, [PC, #480]
0x1296A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1943 :: 		Label20.Visible         = 1;
0x1296C	0x2101    MOVS	R1, #1
0x1296E	0x4878    LDR	R0, [PC, #480]
0x12970	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1944 :: 		Label20.Active          = 1;
0x12972	0x2101    MOVS	R1, #1
0x12974	0x4877    LDR	R0, [PC, #476]
0x12976	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1945 :: 		Label20.Caption         = Label20_Caption;
0x12978	0x4977    LDR	R1, [PC, #476]
0x1297A	0x4878    LDR	R0, [PC, #480]
0x1297C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1946 :: 		Label20.FontName        = Arial_Black27x38_Regular;
0x1297E	0xF643015F  MOVW	R1, #14431
0x12982	0x4877    LDR	R0, [PC, #476]
0x12984	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1947 :: 		Label20.Font_Color      = 0xFFFF;
0x12986	0xF64F71FF  MOVW	R1, #65535
0x1298A	0x4876    LDR	R0, [PC, #472]
0x1298C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1948 :: 		Label20.OnUpPtr         = 0;
0x1298E	0x2100    MOVS	R1, #0
0x12990	0x4875    LDR	R0, [PC, #468]
0x12992	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1949 :: 		Label20.OnDownPtr       = 0;
0x12994	0x2100    MOVS	R1, #0
0x12996	0x4875    LDR	R0, [PC, #468]
0x12998	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1950 :: 		Label20.OnClickPtr      = 0;
0x1299A	0x2100    MOVS	R1, #0
0x1299C	0x4874    LDR	R0, [PC, #464]
0x1299E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1951 :: 		Label20.OnPressPtr      = 0;
0x129A0	0x2100    MOVS	R1, #0
0x129A2	0x4874    LDR	R0, [PC, #464]
0x129A4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1953 :: 		Label21.OwnerScreen     = &Tachometer_graphics;
0x129A6	0x4963    LDR	R1, [PC, #396]
0x129A8	0x4873    LDR	R0, [PC, #460]
0x129AA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1954 :: 		Label21.Order           = 8;
0x129AC	0x2108    MOVS	R1, #8
0x129AE	0x4873    LDR	R0, [PC, #460]
0x129B0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1955 :: 		Label21.Left            = 23;
0x129B2	0x2117    MOVS	R1, #23
0x129B4	0x4872    LDR	R0, [PC, #456]
0x129B6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1956 :: 		Label21.Top             = 213;
0x129B8	0x21D5    MOVS	R1, #213
0x129BA	0x4872    LDR	R0, [PC, #456]
0x129BC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1957 :: 		Label21.Width           = 89;
0x129BE	0x2159    MOVS	R1, #89
0x129C0	0x4871    LDR	R0, [PC, #452]
0x129C2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1958 :: 		Label21.Height          = 66;
0x129C4	0x2142    MOVS	R1, #66
0x129C6	0x4871    LDR	R0, [PC, #452]
0x129C8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1959 :: 		Label21.Visible         = 1;
0x129CA	0x2101    MOVS	R1, #1
0x129CC	0x4870    LDR	R0, [PC, #448]
0x129CE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1960 :: 		Label21.Active          = 1;
0x129D0	0x2101    MOVS	R1, #1
0x129D2	0x4870    LDR	R0, [PC, #448]
0x129D4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1961 :: 		Label21.Caption         = Label21_Caption;
0x129D6	0x4970    LDR	R1, [PC, #448]
0x129D8	0x4870    LDR	R0, [PC, #448]
0x129DA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1962 :: 		Label21.FontName        = Arial_Black43x60_Regular;
0x129DC	0xF6452169  MOVW	R1, #23145
0x129E0	0x486F    LDR	R0, [PC, #444]
0x129E2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1963 :: 		Label21.Font_Color      = 0xFFFF;
0x129E4	0xF64F71FF  MOVW	R1, #65535
0x129E8	0x486E    LDR	R0, [PC, #440]
0x129EA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1964 :: 		Label21.OnUpPtr         = 0;
0x129EC	0x2100    MOVS	R1, #0
0x129EE	0x486E    LDR	R0, [PC, #440]
0x129F0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1965 :: 		Label21.OnDownPtr       = 0;
0x129F2	0x2100    MOVS	R1, #0
0x129F4	0x486D    LDR	R0, [PC, #436]
0x129F6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1966 :: 		Label21.OnClickPtr      = 0;
0x129F8	0x2100    MOVS	R1, #0
0x129FA	0x486D    LDR	R0, [PC, #436]
0x129FC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1967 :: 		Label21.OnPressPtr      = 0;
0x129FE	0x2100    MOVS	R1, #0
0x12A00	0x486C    LDR	R0, [PC, #432]
0x12A02	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1969 :: 		Label22.OwnerScreen     = &Tachometer_graphics;
0x12A04	0x494B    LDR	R1, [PC, #300]
0x12A06	0x486C    LDR	R0, [PC, #432]
0x12A08	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1970 :: 		Label22.Order           = 9;
0x12A0A	0x2109    MOVS	R1, #9
0x12A0C	0x486B    LDR	R0, [PC, #428]
0x12A0E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1971 :: 		Label22.Left            = 6;
0x12A10	0x2106    MOVS	R1, #6
0x12A12	0x486B    LDR	R0, [PC, #428]
0x12A14	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1972 :: 		Label22.Top             = 36;
0x12A16	0x2124    MOVS	R1, #36
0x12A18	0x486A    LDR	R0, [PC, #424]
0x12A1A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1973 :: 		Label22.Width           = 39;
0x12A1C	0x2127    MOVS	R1, #39
0x12A1E	0x486A    LDR	R0, [PC, #424]
0x12A20	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1974 :: 		Label22.Height          = 17;
0x12A22	0x2111    MOVS	R1, #17
0x12A24	0x4869    LDR	R0, [PC, #420]
0x12A26	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1975 :: 		Label22.Visible         = 1;
0x12A28	0x2101    MOVS	R1, #1
0x12A2A	0x4869    LDR	R0, [PC, #420]
0x12A2C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1976 :: 		Label22.Active          = 1;
0x12A2E	0x2101    MOVS	R1, #1
0x12A30	0x4868    LDR	R0, [PC, #416]
0x12A32	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1977 :: 		Label22.Caption         = Label22_Caption;
0x12A34	0x4968    LDR	R1, [PC, #416]
0x12A36	0x4869    LDR	R0, [PC, #420]
0x12A38	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1978 :: 		Label22.FontName        = Arial_Black11x15_Regular;
0x12A3A	0xF64A5109  MOVW	R1, #44297
0x12A3E	0x4868    LDR	R0, [PC, #416]
0x12A40	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1979 :: 		Label22.Font_Color      = 0xFFFF;
0x12A42	0xF64F71FF  MOVW	R1, #65535
0x12A46	0x4867    LDR	R0, [PC, #412]
0x12A48	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1980 :: 		Label22.OnUpPtr         = 0;
0x12A4A	0x2100    MOVS	R1, #0
0x12A4C	0x4866    LDR	R0, [PC, #408]
0x12A4E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1981 :: 		Label22.OnDownPtr       = 0;
0x12A50	0x2100    MOVS	R1, #0
0x12A52	0x4866    LDR	R0, [PC, #408]
0x12A54	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1982 :: 		Label22.OnClickPtr      = 0;
0x12A56	0x2100    MOVS	R1, #0
0x12A58	0x4865    LDR	R0, [PC, #404]
0x12A5A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1983 :: 		Label22.OnPressPtr      = 0;
0x12A5C	0x2100    MOVS	R1, #0
0x12A5E	0x4865    LDR	R0, [PC, #404]
0x12A60	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1985 :: 		Box12.OwnerScreen     = &Tachometer_graphics;
0x12A62	0x4934    LDR	R1, [PC, #208]
0x12A64	0x4864    LDR	R0, [PC, #400]
0x12A66	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 1986 :: 		Box12.Order           = 10;
0x12A68	0x210A    MOVS	R1, #10
0x12A6A	0x4864    LDR	R0, [PC, #400]
0x12A6C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1987 :: 		Box12.Left            = 350;
0x12A6E	0xF240115E  MOVW	R1, #350
0x12A72	0x4863    LDR	R0, [PC, #396]
0x12A74	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1988 :: 		Box12.Top             = 221;
0x12A76	0x21DD    MOVS	R1, #221
0x12A78	0x4862    LDR	R0, [PC, #392]
0x12A7A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1989 :: 		Box12.Width           = 75;
0x12A7C	0x214B    MOVS	R1, #75
0x12A7E	0x4862    LDR	R0, [PC, #392]
0x12A80	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1990 :: 		Box12.Height          = 50;
0x12A82	0x2132    MOVS	R1, #50
0x12A84	0x4861    LDR	R0, [PC, #388]
0x12A86	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1991 :: 		Box12.Pen_Width       = 1;
0x12A88	0x2101    MOVS	R1, #1
0x12A8A	0x4861    LDR	R0, [PC, #388]
0x12A8C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1992 :: 		Box12.Pen_Color       = 0x0000;
0x12A8E	0x2100    MOVS	R1, #0
0x12A90	0x4860    LDR	R0, [PC, #384]
0x12A92	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1993 :: 		Box12.Visible         = 1;
0x12A94	0x2101    MOVS	R1, #1
0x12A96	0x4860    LDR	R0, [PC, #384]
0x12A98	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1994 :: 		Box12.Active          = 1;
0x12A9A	0x2101    MOVS	R1, #1
0x12A9C	0x485F    LDR	R0, [PC, #380]
0x12A9E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1995 :: 		Box12.Transparent     = 1;
0x12AA0	0x2101    MOVS	R1, #1
0x12AA2	0x485F    LDR	R0, [PC, #380]
0x12AA4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1996 :: 		Box12.Gradient        = 1;
0x12AA6	0x2101    MOVS	R1, #1
0x12AA8	0x485E    LDR	R0, [PC, #376]
0x12AAA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1997 :: 		Box12.Gradient_Orientation = 0;
0x12AAC	0x2100    MOVS	R1, #0
0x12AAE	0x485E    LDR	R0, [PC, #376]
0x12AB0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 1998 :: 		Box12.Gradient_Start_Color = 0xFFFF;
0x12AB2	0xF64F71FF  MOVW	R1, #65535
0x12AB6	0x485D    LDR	R0, [PC, #372]
0x12AB8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 1999 :: 		Box12.Gradient_End_Color = 0xC618;
0x12ABA	0xF24C6118  MOVW	R1, #50712
0x12ABE	0x485C    LDR	R0, [PC, #368]
0x12AC0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2000 :: 		Box12.Color           = 0xC618;
0x12AC2	0xF24C6118  MOVW	R1, #50712
0x12AC6	0x485B    LDR	R0, [PC, #364]
0x12AC8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2001 :: 		Box12.PressColEnabled = 1;
0x12ACA	0x2101    MOVS	R1, #1
0x12ACC	0x485A    LDR	R0, [PC, #360]
0x12ACE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2002 :: 		Box12.Press_Color     = 0xE71C;
0x12AD0	0xF24E711C  MOVW	R1, #59164
0x12AD4	0x4859    LDR	R0, [PC, #356]
0x12AD6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2003 :: 		Box12.OnUpPtr         = 0;
0x12AD8	0x2100    MOVS	R1, #0
0x12ADA	0x4859    LDR	R0, [PC, #356]
0x12ADC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2004 :: 		Box12.OnDownPtr       = 0;
0x12ADE	0x2100    MOVS	R1, #0
0x12AE0	0x4858    LDR	R0, [PC, #352]
0x12AE2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2005 :: 		Box12.OnClickPtr      = 0;
0x12AE4	0x2100    MOVS	R1, #0
0x12AE6	0x4858    LDR	R0, [PC, #352]
0x12AE8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2006 :: 		Box12.OnPressPtr      = 0;
0x12AEA	0x2100    MOVS	R1, #0
0x12AEC	0x4857    LDR	R0, [PC, #348]
0x12AEE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2008 :: 		Label23.OwnerScreen     = &Tachometer_graphics;
0x12AF0	0x4910    LDR	R1, [PC, #64]
0x12AF2	0x4857    LDR	R0, [PC, #348]
0x12AF4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2009 :: 		Label23.Order           = 11;
0x12AF6	0x210B    MOVS	R1, #11
0x12AF8	0x4856    LDR	R0, [PC, #344]
0x12AFA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2010 :: 		Label23.Left            = 353;
0x12AFC	0xF2401161  MOVW	R1, #353
0x12B00	0x4855    LDR	R0, [PC, #340]
0x12B02	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2011 :: 		Label23.Top             = 221;
0x12B04	0x21DD    MOVS	R1, #221
0x12B06	0x4855    LDR	R0, [PC, #340]
0x12B08	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2012 :: 		Label23.Width           = 69;
0x12B0A	0x2145    MOVS	R1, #69
0x12B0C	0x4854    LDR	R0, [PC, #336]
0x12B0E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2013 :: 		Label23.Height          = 17;
0x12B10	0x2111    MOVS	R1, #17
0x12B12	0x4854    LDR	R0, [PC, #336]
0x12B14	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2014 :: 		Label23.Visible         = 1;
0x12B16	0x2101    MOVS	R1, #1
0x12B18	0x4853    LDR	R0, [PC, #332]
0x12B1A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2015 :: 		Label23.Active          = 1;
0x12B1C	0x2101    MOVS	R1, #1
0x12B1E	0x4853    LDR	R0, [PC, #332]
0x12B20	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2016 :: 		Label23.Caption         = Label23_Caption;
0x12B22	0x4953    LDR	R1, [PC, #332]
0x12B24	0x4853    LDR	R0, [PC, #332]
0x12B26	0xE0A7    B	#334
0x12B28	0x0FB82000  	_Image45+28
0x12B2C	0x0FBC2000  	_Image45+32
0x12B30	0x0FC02000  	_Image45+36
0x12B34	0x0C882000  	_Tachometer_graphics+0
0x12B38	0x0D1C2000  	_Label20+0
0x12B3C	0x0D202000  	_Label20+4
0x12B40	0x0D222000  	_Label20+6
0x12B44	0x0D242000  	_Label20+8
0x12B48	0x0D262000  	_Label20+10
0x12B4C	0x0D282000  	_Label20+12
0x12B50	0x0D362000  	_Label20+26
0x12B54	0x0D372000  	_Label20+27
0x12B58	0x00B02000  	_Label20_Caption+0
0x12B5C	0x0D2C2000  	_Label20+16
0x12B60	0x0D302000  	_Label20+20
0x12B64	0x0D342000  	_Label20+24
0x12B68	0x0D382000  	_Label20+28
0x12B6C	0x0D3C2000  	_Label20+32
0x12B70	0x0D402000  	_Label20+36
0x12B74	0x0D442000  	_Label20+40
0x12B78	0x0D482000  	_Label21+0
0x12B7C	0x0D4C2000  	_Label21+4
0x12B80	0x0D4E2000  	_Label21+6
0x12B84	0x0D502000  	_Label21+8
0x12B88	0x0D522000  	_Label21+10
0x12B8C	0x0D542000  	_Label21+12
0x12B90	0x0D622000  	_Label21+26
0x12B94	0x0D632000  	_Label21+27
0x12B98	0x00B42000  	_Label21_Caption+0
0x12B9C	0x0D582000  	_Label21+16
0x12BA0	0x0D5C2000  	_Label21+20
0x12BA4	0x0D602000  	_Label21+24
0x12BA8	0x0D642000  	_Label21+28
0x12BAC	0x0D682000  	_Label21+32
0x12BB0	0x0D6C2000  	_Label21+36
0x12BB4	0x0D702000  	_Label21+40
0x12BB8	0x0D742000  	_Label22+0
0x12BBC	0x0D782000  	_Label22+4
0x12BC0	0x0D7A2000  	_Label22+6
0x12BC4	0x0D7C2000  	_Label22+8
0x12BC8	0x0D7E2000  	_Label22+10
0x12BCC	0x0D802000  	_Label22+12
0x12BD0	0x0D8E2000  	_Label22+26
0x12BD4	0x0D8F2000  	_Label22+27
0x12BD8	0x00B82000  	_Label22_Caption+0
0x12BDC	0x0D842000  	_Label22+16
0x12BE0	0x0D882000  	_Label22+20
0x12BE4	0x0D8C2000  	_Label22+24
0x12BE8	0x0D902000  	_Label22+28
0x12BEC	0x0D942000  	_Label22+32
0x12BF0	0x0D982000  	_Label22+36
0x12BF4	0x0D9C2000  	_Label22+40
0x12BF8	0x10842000  	_Box12+0
0x12BFC	0x10882000  	_Box12+4
0x12C00	0x108A2000  	_Box12+6
0x12C04	0x108C2000  	_Box12+8
0x12C08	0x108E2000  	_Box12+10
0x12C0C	0x10902000  	_Box12+12
0x12C10	0x10922000  	_Box12+14
0x12C14	0x10942000  	_Box12+16
0x12C18	0x10962000  	_Box12+18
0x12C1C	0x10972000  	_Box12+19
0x12C20	0x10982000  	_Box12+20
0x12C24	0x10992000  	_Box12+21
0x12C28	0x109A2000  	_Box12+22
0x12C2C	0x109C2000  	_Box12+24
0x12C30	0x109E2000  	_Box12+26
0x12C34	0x10A02000  	_Box12+28
0x12C38	0x10A22000  	_Box12+30
0x12C3C	0x10A42000  	_Box12+32
0x12C40	0x10A82000  	_Box12+36
0x12C44	0x10AC2000  	_Box12+40
0x12C48	0x10B02000  	_Box12+44
0x12C4C	0x10B42000  	_Box12+48
0x12C50	0x0DA02000  	_Label23+0
0x12C54	0x0DA42000  	_Label23+4
0x12C58	0x0DA62000  	_Label23+6
0x12C5C	0x0DA82000  	_Label23+8
0x12C60	0x0DAA2000  	_Label23+10
0x12C64	0x0DAC2000  	_Label23+12
0x12C68	0x0DBA2000  	_Label23+26
0x12C6C	0x0DBB2000  	_Label23+27
0x12C70	0x00C42000  	_Label23_Caption+0
0x12C74	0x0DB02000  	_Label23+16
0x12C78	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2017 :: 		Label23.FontName        = Arial_Black11x15_Regular;
0x12C7A	0xF64A5109  MOVW	R1, #44297
0x12C7E	0x487B    LDR	R0, [PC, #492]
0x12C80	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2018 :: 		Label23.Font_Color      = 0x0000;
0x12C82	0x2100    MOVS	R1, #0
0x12C84	0x487A    LDR	R0, [PC, #488]
0x12C86	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2019 :: 		Label23.OnUpPtr         = 0;
0x12C88	0x2100    MOVS	R1, #0
0x12C8A	0x487A    LDR	R0, [PC, #488]
0x12C8C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2020 :: 		Label23.OnDownPtr       = 0;
0x12C8E	0x2100    MOVS	R1, #0
0x12C90	0x4879    LDR	R0, [PC, #484]
0x12C92	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2021 :: 		Label23.OnClickPtr      = 0;
0x12C94	0x2100    MOVS	R1, #0
0x12C96	0x4879    LDR	R0, [PC, #484]
0x12C98	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2022 :: 		Label23.OnPressPtr      = 0;
0x12C9A	0x2100    MOVS	R1, #0
0x12C9C	0x4878    LDR	R0, [PC, #480]
0x12C9E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2024 :: 		Image46.OwnerScreen     = &Tachometer_graphics;
0x12CA0	0x4978    LDR	R1, [PC, #480]
0x12CA2	0x4879    LDR	R0, [PC, #484]
0x12CA4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2025 :: 		Image46.Order           = 12;
0x12CA6	0x210C    MOVS	R1, #12
0x12CA8	0x4878    LDR	R0, [PC, #480]
0x12CAA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2026 :: 		Image46.Left            = 429;
0x12CAC	0xF24011AD  MOVW	R1, #429
0x12CB0	0x4877    LDR	R0, [PC, #476]
0x12CB2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2027 :: 		Image46.Top             = 221;
0x12CB4	0x21DD    MOVS	R1, #221
0x12CB6	0x4877    LDR	R0, [PC, #476]
0x12CB8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2028 :: 		Image46.Width           = 50;
0x12CBA	0x2132    MOVS	R1, #50
0x12CBC	0x4876    LDR	R0, [PC, #472]
0x12CBE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2029 :: 		Image46.Height          = 50;
0x12CC0	0x2132    MOVS	R1, #50
0x12CC2	0x4876    LDR	R0, [PC, #472]
0x12CC4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2030 :: 		Image46.Picture_Type    = 1;
0x12CC6	0x2101    MOVS	R1, #1
0x12CC8	0x4875    LDR	R0, [PC, #468]
0x12CCA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2031 :: 		Image46.Picture_Ratio   = 1;
0x12CCC	0x2101    MOVS	R1, #1
0x12CCE	0x4875    LDR	R0, [PC, #468]
0x12CD0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2032 :: 		Image46.Picture_Name    = Settings_icon_JPG;
0x12CD2	0x4975    LDR	R1, [PC, #468]
0x12CD4	0x4875    LDR	R0, [PC, #468]
0x12CD6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2033 :: 		Image46.Visible         = 1;
0x12CD8	0x2101    MOVS	R1, #1
0x12CDA	0x4875    LDR	R0, [PC, #468]
0x12CDC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2034 :: 		Image46.Active          = 1;
0x12CDE	0x2101    MOVS	R1, #1
0x12CE0	0x4874    LDR	R0, [PC, #464]
0x12CE2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2035 :: 		Image46.OnUpPtr         = 0;
0x12CE4	0x2100    MOVS	R1, #0
0x12CE6	0x4874    LDR	R0, [PC, #464]
0x12CE8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2036 :: 		Image46.OnDownPtr       = 0;
0x12CEA	0x2100    MOVS	R1, #0
0x12CEC	0x4873    LDR	R0, [PC, #460]
0x12CEE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2037 :: 		Image46.OnClickPtr      = 0;
0x12CF0	0x2100    MOVS	R1, #0
0x12CF2	0x4873    LDR	R0, [PC, #460]
0x12CF4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2038 :: 		Image46.OnPressPtr      = doSettings;
0x12CF6	0x4973    LDR	R1, [PC, #460]
0x12CF8	0x4873    LDR	R0, [PC, #460]
0x12CFA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2040 :: 		ButtonRound9.OwnerScreen     = &Tachometer_graphics;
0x12CFC	0x4961    LDR	R1, [PC, #388]
0x12CFE	0x4873    LDR	R0, [PC, #460]
0x12D00	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2041 :: 		ButtonRound9.Order           = 13;
0x12D02	0x210D    MOVS	R1, #13
0x12D04	0x4872    LDR	R0, [PC, #456]
0x12D06	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2042 :: 		ButtonRound9.Left            = 378;
0x12D08	0xF240117A  MOVW	R1, #378
0x12D0C	0x4871    LDR	R0, [PC, #452]
0x12D0E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2043 :: 		ButtonRound9.Top             = 165;
0x12D10	0x21A5    MOVS	R1, #165
0x12D12	0x4871    LDR	R0, [PC, #452]
0x12D14	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2044 :: 		ButtonRound9.Width           = 100;
0x12D16	0x2164    MOVS	R1, #100
0x12D18	0x4870    LDR	R0, [PC, #448]
0x12D1A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2045 :: 		ButtonRound9.Height          = 50;
0x12D1C	0x2132    MOVS	R1, #50
0x12D1E	0x4870    LDR	R0, [PC, #448]
0x12D20	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2046 :: 		ButtonRound9.Pen_Width       = 1;
0x12D22	0x2101    MOVS	R1, #1
0x12D24	0x486F    LDR	R0, [PC, #444]
0x12D26	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2047 :: 		ButtonRound9.Pen_Color       = 0x0000;
0x12D28	0x2100    MOVS	R1, #0
0x12D2A	0x486F    LDR	R0, [PC, #444]
0x12D2C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2048 :: 		ButtonRound9.Visible         = 1;
0x12D2E	0x2101    MOVS	R1, #1
0x12D30	0x486E    LDR	R0, [PC, #440]
0x12D32	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2049 :: 		ButtonRound9.Active          = 1;
0x12D34	0x2101    MOVS	R1, #1
0x12D36	0x486E    LDR	R0, [PC, #440]
0x12D38	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2050 :: 		ButtonRound9.Transparent     = 1;
0x12D3A	0x2101    MOVS	R1, #1
0x12D3C	0x486D    LDR	R0, [PC, #436]
0x12D3E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2051 :: 		ButtonRound9.Caption         = ButtonRound9_Caption;
0x12D40	0x496D    LDR	R1, [PC, #436]
0x12D42	0x486E    LDR	R0, [PC, #440]
0x12D44	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2052 :: 		ButtonRound9.TextAlign       = _taCenter;
0x12D46	0x2101    MOVS	R1, #1
0x12D48	0x486D    LDR	R0, [PC, #436]
0x12D4A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2053 :: 		ButtonRound9.FontName        = Arial_Black11x15_Regular;
0x12D4C	0xF64A5109  MOVW	R1, #44297
0x12D50	0x486C    LDR	R0, [PC, #432]
0x12D52	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2054 :: 		ButtonRound9.PressColEnabled = 1;
0x12D54	0x2101    MOVS	R1, #1
0x12D56	0x486C    LDR	R0, [PC, #432]
0x12D58	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2055 :: 		ButtonRound9.Font_Color      = 0x0000;
0x12D5A	0x2100    MOVS	R1, #0
0x12D5C	0x486B    LDR	R0, [PC, #428]
0x12D5E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2056 :: 		ButtonRound9.Gradient        = 1;
0x12D60	0x2101    MOVS	R1, #1
0x12D62	0x486B    LDR	R0, [PC, #428]
0x12D64	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2057 :: 		ButtonRound9.Gradient_Orientation = 0;
0x12D66	0x2100    MOVS	R1, #0
0x12D68	0x486A    LDR	R0, [PC, #424]
0x12D6A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2058 :: 		ButtonRound9.Gradient_Start_Color = 0xF800;
0x12D6C	0xF64F0100  MOVW	R1, #63488
0x12D70	0x4869    LDR	R0, [PC, #420]
0x12D72	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2059 :: 		ButtonRound9.Gradient_End_Color = 0x0000;
0x12D74	0x2100    MOVS	R1, #0
0x12D76	0x4869    LDR	R0, [PC, #420]
0x12D78	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2060 :: 		ButtonRound9.Color           = 0xC618;
0x12D7A	0xF24C6118  MOVW	R1, #50712
0x12D7E	0x4868    LDR	R0, [PC, #416]
0x12D80	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2061 :: 		ButtonRound9.Press_Color     = 0xE71C;
0x12D82	0xF24E711C  MOVW	R1, #59164
0x12D86	0x4867    LDR	R0, [PC, #412]
0x12D88	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2062 :: 		ButtonRound9.Corner_Radius   = 3;
0x12D8A	0x2103    MOVS	R1, #3
0x12D8C	0x4866    LDR	R0, [PC, #408]
0x12D8E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2063 :: 		ButtonRound9.OnUpPtr         = 0;
0x12D90	0x2100    MOVS	R1, #0
0x12D92	0x4866    LDR	R0, [PC, #408]
0x12D94	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2064 :: 		ButtonRound9.OnDownPtr       = 0;
0x12D96	0x2100    MOVS	R1, #0
0x12D98	0x4865    LDR	R0, [PC, #404]
0x12D9A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2065 :: 		ButtonRound9.OnClickPtr      = 0;
0x12D9C	0x2100    MOVS	R1, #0
0x12D9E	0x4865    LDR	R0, [PC, #404]
0x12DA0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2066 :: 		ButtonRound9.OnPressPtr      = doLog;
0x12DA2	0x4965    LDR	R1, [PC, #404]
0x12DA4	0x4865    LDR	R0, [PC, #404]
0x12DA6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2068 :: 		Label24.OwnerScreen     = &Tachometer_graphics;
0x12DA8	0x4936    LDR	R1, [PC, #216]
0x12DAA	0x4865    LDR	R0, [PC, #404]
0x12DAC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2069 :: 		Label24.Order           = 14;
0x12DAE	0x210E    MOVS	R1, #14
0x12DB0	0x4864    LDR	R0, [PC, #400]
0x12DB2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2070 :: 		Label24.Left            = 373;
0x12DB4	0xF2401175  MOVW	R1, #373
0x12DB8	0x4863    LDR	R0, [PC, #396]
0x12DBA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2071 :: 		Label24.Top             = 46;
0x12DBC	0x212E    MOVS	R1, #46
0x12DBE	0x4863    LDR	R0, [PC, #396]
0x12DC0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2072 :: 		Label24.Width           = 56;
0x12DC2	0x2138    MOVS	R1, #56
0x12DC4	0x4862    LDR	R0, [PC, #392]
0x12DC6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2073 :: 		Label24.Height          = 25;
0x12DC8	0x2119    MOVS	R1, #25
0x12DCA	0x4862    LDR	R0, [PC, #392]
0x12DCC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2074 :: 		Label24.Visible         = 1;
0x12DCE	0x2101    MOVS	R1, #1
0x12DD0	0x4861    LDR	R0, [PC, #388]
0x12DD2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2075 :: 		Label24.Active          = 1;
0x12DD4	0x2101    MOVS	R1, #1
0x12DD6	0x4861    LDR	R0, [PC, #388]
0x12DD8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2076 :: 		Label24.Caption         = Label24_Caption;
0x12DDA	0x4961    LDR	R1, [PC, #388]
0x12DDC	0x4861    LDR	R0, [PC, #388]
0x12DDE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2077 :: 		Label24.FontName        = Arial_Black16x23_Regular;
0x12DE0	0xF6402123  MOVW	R1, #2595
0x12DE4	0x4860    LDR	R0, [PC, #384]
0x12DE6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2078 :: 		Label24.Font_Color      = 0xFFFF;
0x12DE8	0xF64F71FF  MOVW	R1, #65535
0x12DEC	0x485F    LDR	R0, [PC, #380]
0x12DEE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2079 :: 		Label24.OnUpPtr         = 0;
0x12DF0	0x2100    MOVS	R1, #0
0x12DF2	0x485F    LDR	R0, [PC, #380]
0x12DF4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2080 :: 		Label24.OnDownPtr       = 0;
0x12DF6	0x2100    MOVS	R1, #0
0x12DF8	0x485E    LDR	R0, [PC, #376]
0x12DFA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2081 :: 		Label24.OnClickPtr      = 0;
0x12DFC	0x2100    MOVS	R1, #0
0x12DFE	0x485E    LDR	R0, [PC, #376]
0x12E00	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2082 :: 		Label24.OnPressPtr      = 0;
0x12E02	0x2100    MOVS	R1, #0
0x12E04	0x485D    LDR	R0, [PC, #372]
0x12E06	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2084 :: 		Label25.OwnerScreen     = &Tachometer_graphics;
0x12E08	0x491E    LDR	R1, [PC, #120]
0x12E0A	0x485D    LDR	R0, [PC, #372]
0x12E0C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2085 :: 		Label25.Order           = 15;
0x12E0E	0x210F    MOVS	R1, #15
0x12E10	0x485C    LDR	R0, [PC, #368]
0x12E12	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2086 :: 		Label25.Left            = 365;
0x12E14	0xF240116D  MOVW	R1, #365
0x12E18	0x485B    LDR	R0, [PC, #364]
0x12E1A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2087 :: 		Label25.Top             = 21;
0x12E1C	0x2115    MOVS	R1, #21
0x12E1E	0x485B    LDR	R0, [PC, #364]
0x12E20	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2088 :: 		Label25.Width           = 109;
0x12E22	0x216D    MOVS	R1, #109
0x12E24	0x485A    LDR	R0, [PC, #360]
0x12E26	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2089 :: 		Label25.Height          = 32;
0x12E28	0x2120    MOVS	R1, #32
0x12E2A	0x485A    LDR	R0, [PC, #360]
0x12E2C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2090 :: 		Label25.Visible         = 1;
0x12E2E	0x2101    MOVS	R1, #1
0x12E30	0x4859    LDR	R0, [PC, #356]
0x12E32	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2091 :: 		Label25.Active          = 1;
0x12E34	0x2101    MOVS	R1, #1
0x12E36	0x4859    LDR	R0, [PC, #356]
0x12E38	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2092 :: 		Label25.Caption         = Label25_Caption;
0x12E3A	0x4959    LDR	R1, [PC, #356]
0x12E3C	0x4859    LDR	R0, [PC, #356]
0x12E3E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2093 :: 		Label25.FontName        = Arial_Black21x30_Regular;
0x12E40	0xF24211A1  MOVW	R1, #8609
0x12E44	0x4858    LDR	R0, [PC, #352]
0x12E46	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2094 :: 		Label25.Font_Color      = 0xFFFF;
0x12E48	0xF64F71FF  MOVW	R1, #65535
0x12E4C	0x4857    LDR	R0, [PC, #348]
0x12E4E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2095 :: 		Label25.OnUpPtr         = 0;
0x12E50	0x2100    MOVS	R1, #0
0x12E52	0x4857    LDR	R0, [PC, #348]
0x12E54	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2096 :: 		Label25.OnDownPtr       = 0;
0x12E56	0x2100    MOVS	R1, #0
0x12E58	0x4856    LDR	R0, [PC, #344]
0x12E5A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2097 :: 		Label25.OnClickPtr      = 0;
0x12E5C	0x2100    MOVS	R1, #0
0x12E5E	0x4856    LDR	R0, [PC, #344]
0x12E60	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2098 :: 		Label25.OnPressPtr      = 0;
0x12E62	0x2100    MOVS	R1, #0
0x12E64	0x4855    LDR	R0, [PC, #340]
0x12E66	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2100 :: 		Image47.OwnerScreen     = &Tachometer_graphics;
0x12E68	0xF000B8AA  B	#340
0x12E6C	0x0DB42000  	_Label23+20
0x12E70	0x0DB82000  	_Label23+24
0x12E74	0x0DBC2000  	_Label23+28
0x12E78	0x0DC02000  	_Label23+32
0x12E7C	0x0DC42000  	_Label23+36
0x12E80	0x0DC82000  	_Label23+40
0x12E84	0x0C882000  	_Tachometer_graphics+0
0x12E88	0x0FC42000  	_Image46+0
0x12E8C	0x0FC82000  	_Image46+4
0x12E90	0x0FCA2000  	_Image46+6
0x12E94	0x0FCC2000  	_Image46+8
0x12E98	0x0FCE2000  	_Image46+10
0x12E9C	0x0FD02000  	_Image46+12
0x12EA0	0x0FDA2000  	_Image46+22
0x12EA4	0x0FDB2000  	_Image46+23
0x12EA8	0x66000039  	#3761664
0x12EAC	0x0FD42000  	_Image46+16
0x12EB0	0x0FD82000  	_Image46+20
0x12EB4	0x0FD92000  	_Image46+21
0x12EB8	0x0FDC2000  	_Image46+24
0x12EBC	0x0FE02000  	_Image46+28
0x12EC0	0x0FE42000  	_Image46+32
0x12EC4	0xB2A50000  	_doSettings+0
0x12EC8	0x0FE82000  	_Image46+36
0x12ECC	0x0CD82000  	_ButtonRound9+0
0x12ED0	0x0CDC2000  	_ButtonRound9+4
0x12ED4	0x0CDE2000  	_ButtonRound9+6
0x12ED8	0x0CE02000  	_ButtonRound9+8
0x12EDC	0x0CE22000  	_ButtonRound9+10
0x12EE0	0x0CE42000  	_ButtonRound9+12
0x12EE4	0x0CE62000  	_ButtonRound9+14
0x12EE8	0x0CE82000  	_ButtonRound9+16
0x12EEC	0x0CEA2000  	_ButtonRound9+18
0x12EF0	0x0CEB2000  	_ButtonRound9+19
0x12EF4	0x0CEC2000  	_ButtonRound9+20
0x12EF8	0x00CF2000  	_ButtonRound9_Caption+0
0x12EFC	0x0CF02000  	_ButtonRound9+24
0x12F00	0x0CF42000  	_ButtonRound9+28
0x12F04	0x0CF82000  	_ButtonRound9+32
0x12F08	0x0D072000  	_ButtonRound9+47
0x12F0C	0x0CFC2000  	_ButtonRound9+36
0x12F10	0x0CFE2000  	_ButtonRound9+38
0x12F14	0x0CFF2000  	_ButtonRound9+39
0x12F18	0x0D002000  	_ButtonRound9+40
0x12F1C	0x0D022000  	_ButtonRound9+42
0x12F20	0x0D042000  	_ButtonRound9+44
0x12F24	0x0D082000  	_ButtonRound9+48
0x12F28	0x0D062000  	_ButtonRound9+46
0x12F2C	0x0D0C2000  	_ButtonRound9+52
0x12F30	0x0D102000  	_ButtonRound9+56
0x12F34	0x0D142000  	_ButtonRound9+60
0x12F38	0xBBF10000  	_doLog+0
0x12F3C	0x0D182000  	_ButtonRound9+64
0x12F40	0x0DCC2000  	_Label24+0
0x12F44	0x0DD02000  	_Label24+4
0x12F48	0x0DD22000  	_Label24+6
0x12F4C	0x0DD42000  	_Label24+8
0x12F50	0x0DD62000  	_Label24+10
0x12F54	0x0DD82000  	_Label24+12
0x12F58	0x0DE62000  	_Label24+26
0x12F5C	0x0DE72000  	_Label24+27
0x12F60	0x00D32000  	_Label24_Caption+0
0x12F64	0x0DDC2000  	_Label24+16
0x12F68	0x0DE02000  	_Label24+20
0x12F6C	0x0DE42000  	_Label24+24
0x12F70	0x0DE82000  	_Label24+28
0x12F74	0x0DEC2000  	_Label24+32
0x12F78	0x0DF02000  	_Label24+36
0x12F7C	0x0DF42000  	_Label24+40
0x12F80	0x0DF82000  	_Label25+0
0x12F84	0x0DFC2000  	_Label25+4
0x12F88	0x0DFE2000  	_Label25+6
0x12F8C	0x0E002000  	_Label25+8
0x12F90	0x0E022000  	_Label25+10
0x12F94	0x0E042000  	_Label25+12
0x12F98	0x0E122000  	_Label25+26
0x12F9C	0x0E132000  	_Label25+27
0x12FA0	0x00DF2000  	_Label25_Caption+0
0x12FA4	0x0E082000  	_Label25+16
0x12FA8	0x0E0C2000  	_Label25+20
0x12FAC	0x0E102000  	_Label25+24
0x12FB0	0x0E142000  	_Label25+28
0x12FB4	0x0E182000  	_Label25+32
0x12FB8	0x0E1C2000  	_Label25+36
0x12FBC	0x0E202000  	_Label25+40
0x12FC0	0x4979    LDR	R1, [PC, #484]
0x12FC2	0x487A    LDR	R0, [PC, #488]
0x12FC4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2101 :: 		Image47.Order           = 16;
0x12FC6	0x2110    MOVS	R1, #16
0x12FC8	0x4879    LDR	R0, [PC, #484]
0x12FCA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2102 :: 		Image47.Left            = 432;
0x12FCC	0xF24011B0  MOVW	R1, #432
0x12FD0	0x4878    LDR	R0, [PC, #480]
0x12FD2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2103 :: 		Image47.Top             = 2;
0x12FD4	0x2102    MOVS	R1, #2
0x12FD6	0x4878    LDR	R0, [PC, #480]
0x12FD8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2104 :: 		Image47.Width           = 44;
0x12FDA	0x212C    MOVS	R1, #44
0x12FDC	0x4877    LDR	R0, [PC, #476]
0x12FDE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2105 :: 		Image47.Height          = 20;
0x12FE0	0x2114    MOVS	R1, #20
0x12FE2	0x4877    LDR	R0, [PC, #476]
0x12FE4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2106 :: 		Image47.Picture_Type    = 0;
0x12FE6	0x2100    MOVS	R1, #0
0x12FE8	0x4876    LDR	R0, [PC, #472]
0x12FEA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2107 :: 		Image47.Picture_Ratio   = 1;
0x12FEC	0x2101    MOVS	R1, #1
0x12FEE	0x4876    LDR	R0, [PC, #472]
0x12FF0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2108 :: 		Image47.Picture_Name    = icon_battery_bmp;
0x12FF2	0x4976    LDR	R1, [PC, #472]
0x12FF4	0x4876    LDR	R0, [PC, #472]
0x12FF6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2109 :: 		Image47.Visible         = 1;
0x12FF8	0x2101    MOVS	R1, #1
0x12FFA	0x4876    LDR	R0, [PC, #472]
0x12FFC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2110 :: 		Image47.Active          = 0;
0x12FFE	0x2100    MOVS	R1, #0
0x13000	0x4875    LDR	R0, [PC, #468]
0x13002	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2111 :: 		Image47.OnUpPtr         = 0;
0x13004	0x2100    MOVS	R1, #0
0x13006	0x4875    LDR	R0, [PC, #468]
0x13008	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2112 :: 		Image47.OnDownPtr       = 0;
0x1300A	0x2100    MOVS	R1, #0
0x1300C	0x4874    LDR	R0, [PC, #464]
0x1300E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2113 :: 		Image47.OnClickPtr      = 0;
0x13010	0x2100    MOVS	R1, #0
0x13012	0x4874    LDR	R0, [PC, #464]
0x13014	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2114 :: 		Image47.OnPressPtr      = 0;
0x13016	0x2100    MOVS	R1, #0
0x13018	0x4873    LDR	R0, [PC, #460]
0x1301A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2116 :: 		Label26.OwnerScreen     = &Tachometer_graphics;
0x1301C	0x4962    LDR	R1, [PC, #392]
0x1301E	0x4873    LDR	R0, [PC, #460]
0x13020	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2117 :: 		Label26.Order           = 17;
0x13022	0x2111    MOVS	R1, #17
0x13024	0x4872    LDR	R0, [PC, #456]
0x13026	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2118 :: 		Label26.Left            = 198;
0x13028	0x21C6    MOVS	R1, #198
0x1302A	0x4872    LDR	R0, [PC, #456]
0x1302C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2119 :: 		Label26.Top             = 203;
0x1302E	0x21CB    MOVS	R1, #203
0x13030	0x4871    LDR	R0, [PC, #452]
0x13032	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2120 :: 		Label26.Width           = 86;
0x13034	0x2156    MOVS	R1, #86
0x13036	0x4871    LDR	R0, [PC, #452]
0x13038	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2121 :: 		Label26.Height          = 25;
0x1303A	0x2119    MOVS	R1, #25
0x1303C	0x4870    LDR	R0, [PC, #448]
0x1303E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2122 :: 		Label26.Visible         = 1;
0x13040	0x2101    MOVS	R1, #1
0x13042	0x4870    LDR	R0, [PC, #448]
0x13044	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2123 :: 		Label26.Active          = 1;
0x13046	0x2101    MOVS	R1, #1
0x13048	0x486F    LDR	R0, [PC, #444]
0x1304A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2124 :: 		Label26.Caption         = Label26_Caption;
0x1304C	0x496F    LDR	R1, [PC, #444]
0x1304E	0x4870    LDR	R0, [PC, #448]
0x13050	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2125 :: 		Label26.FontName        = Arial_Black16x23_Regular;
0x13052	0xF6402123  MOVW	R1, #2595
0x13056	0x486F    LDR	R0, [PC, #444]
0x13058	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2126 :: 		Label26.Font_Color      = 0x0000;
0x1305A	0x2100    MOVS	R1, #0
0x1305C	0x486E    LDR	R0, [PC, #440]
0x1305E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2127 :: 		Label26.OnUpPtr         = 0;
0x13060	0x2100    MOVS	R1, #0
0x13062	0x486E    LDR	R0, [PC, #440]
0x13064	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2128 :: 		Label26.OnDownPtr       = 0;
0x13066	0x2100    MOVS	R1, #0
0x13068	0x486D    LDR	R0, [PC, #436]
0x1306A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2129 :: 		Label26.OnClickPtr      = 0;
0x1306C	0x2100    MOVS	R1, #0
0x1306E	0x486D    LDR	R0, [PC, #436]
0x13070	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2130 :: 		Label26.OnPressPtr      = 0;
0x13072	0x2100    MOVS	R1, #0
0x13074	0x486C    LDR	R0, [PC, #432]
0x13076	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2132 :: 		Label27.OwnerScreen     = &Tachometer_graphics;
0x13078	0x494B    LDR	R1, [PC, #300]
0x1307A	0x486C    LDR	R0, [PC, #432]
0x1307C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2133 :: 		Label27.Order           = 18;
0x1307E	0x2112    MOVS	R1, #18
0x13080	0x486B    LDR	R0, [PC, #428]
0x13082	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2134 :: 		Label27.Left            = 218;
0x13084	0x21DA    MOVS	R1, #218
0x13086	0x486B    LDR	R0, [PC, #428]
0x13088	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2135 :: 		Label27.Top             = 221;
0x1308A	0x21DD    MOVS	R1, #221
0x1308C	0x486A    LDR	R0, [PC, #424]
0x1308E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2136 :: 		Label27.Width           = 38;
0x13090	0x2126    MOVS	R1, #38
0x13092	0x486A    LDR	R0, [PC, #424]
0x13094	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2137 :: 		Label27.Height          = 17;
0x13096	0x2111    MOVS	R1, #17
0x13098	0x4869    LDR	R0, [PC, #420]
0x1309A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2138 :: 		Label27.Visible         = 1;
0x1309C	0x2101    MOVS	R1, #1
0x1309E	0x4869    LDR	R0, [PC, #420]
0x130A0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2139 :: 		Label27.Active          = 1;
0x130A2	0x2101    MOVS	R1, #1
0x130A4	0x4868    LDR	R0, [PC, #416]
0x130A6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2140 :: 		Label27.Caption         = Label27_Caption;
0x130A8	0x4968    LDR	R1, [PC, #416]
0x130AA	0x4869    LDR	R0, [PC, #420]
0x130AC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2141 :: 		Label27.FontName        = Arial_Black11x15_Regular;
0x130AE	0xF64A5109  MOVW	R1, #44297
0x130B2	0x4868    LDR	R0, [PC, #416]
0x130B4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2142 :: 		Label27.Font_Color      = 0x0000;
0x130B6	0x2100    MOVS	R1, #0
0x130B8	0x4867    LDR	R0, [PC, #412]
0x130BA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2143 :: 		Label27.OnUpPtr         = 0;
0x130BC	0x2100    MOVS	R1, #0
0x130BE	0x4867    LDR	R0, [PC, #412]
0x130C0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2144 :: 		Label27.OnDownPtr       = 0;
0x130C2	0x2100    MOVS	R1, #0
0x130C4	0x4866    LDR	R0, [PC, #408]
0x130C6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2145 :: 		Label27.OnClickPtr      = 0;
0x130C8	0x2100    MOVS	R1, #0
0x130CA	0x4866    LDR	R0, [PC, #408]
0x130CC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2146 :: 		Label27.OnPressPtr      = 0;
0x130CE	0x2100    MOVS	R1, #0
0x130D0	0x4865    LDR	R0, [PC, #404]
0x130D2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2148 :: 		Label28.OwnerScreen     = &Tachometer_graphics;
0x130D4	0x4934    LDR	R1, [PC, #208]
0x130D6	0x4865    LDR	R0, [PC, #404]
0x130D8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2149 :: 		Label28.Order           = 19;
0x130DA	0x2113    MOVS	R1, #19
0x130DC	0x4864    LDR	R0, [PC, #400]
0x130DE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2150 :: 		Label28.Left            = 195;
0x130E0	0x21C3    MOVS	R1, #195
0x130E2	0x4864    LDR	R0, [PC, #400]
0x130E4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2151 :: 		Label28.Top             = 192;
0x130E6	0x21C0    MOVS	R1, #192
0x130E8	0x4863    LDR	R0, [PC, #396]
0x130EA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2152 :: 		Label28.Width           = 9;
0x130EC	0x2109    MOVS	R1, #9
0x130EE	0x4863    LDR	R0, [PC, #396]
0x130F0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2153 :: 		Label28.Height          = 17;
0x130F2	0x2111    MOVS	R1, #17
0x130F4	0x4862    LDR	R0, [PC, #392]
0x130F6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2154 :: 		Label28.Visible         = 1;
0x130F8	0x2101    MOVS	R1, #1
0x130FA	0x4862    LDR	R0, [PC, #392]
0x130FC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2155 :: 		Label28.Active          = 1;
0x130FE	0x2101    MOVS	R1, #1
0x13100	0x4861    LDR	R0, [PC, #388]
0x13102	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2156 :: 		Label28.Caption         = Label28_Caption;
0x13104	0x4961    LDR	R1, [PC, #388]
0x13106	0x4862    LDR	R0, [PC, #392]
0x13108	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2157 :: 		Label28.FontName        = Arial_Black11x15_Regular;
0x1310A	0xF64A5109  MOVW	R1, #44297
0x1310E	0x4861    LDR	R0, [PC, #388]
0x13110	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2158 :: 		Label28.Font_Color      = 0x0000;
0x13112	0x2100    MOVS	R1, #0
0x13114	0x4860    LDR	R0, [PC, #384]
0x13116	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2159 :: 		Label28.OnUpPtr         = 0;
0x13118	0x2100    MOVS	R1, #0
0x1311A	0x4860    LDR	R0, [PC, #384]
0x1311C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2160 :: 		Label28.OnDownPtr       = 0;
0x1311E	0x2100    MOVS	R1, #0
0x13120	0x485F    LDR	R0, [PC, #380]
0x13122	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2161 :: 		Label28.OnClickPtr      = 0;
0x13124	0x2100    MOVS	R1, #0
0x13126	0x485F    LDR	R0, [PC, #380]
0x13128	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2162 :: 		Label28.OnPressPtr      = 0;
0x1312A	0x2100    MOVS	R1, #0
0x1312C	0x485E    LDR	R0, [PC, #376]
0x1312E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2164 :: 		CircleButton2.OwnerScreen     = &Tachometer_graphics;
0x13130	0x491D    LDR	R1, [PC, #116]
0x13132	0x485E    LDR	R0, [PC, #376]
0x13134	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2165 :: 		CircleButton2.Order           = 20;
0x13136	0x2114    MOVS	R1, #20
0x13138	0x485D    LDR	R0, [PC, #372]
0x1313A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2166 :: 		CircleButton2.Left            = 216;
0x1313C	0x21D8    MOVS	R1, #216
0x1313E	0x485D    LDR	R0, [PC, #372]
0x13140	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2167 :: 		CircleButton2.Top             = 112;
0x13142	0x2170    MOVS	R1, #112
0x13144	0x485C    LDR	R0, [PC, #368]
0x13146	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2168 :: 		CircleButton2.Radius          = 23;
0x13148	0x2117    MOVS	R1, #23
0x1314A	0x485C    LDR	R0, [PC, #368]
0x1314C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2169 :: 		CircleButton2.Pen_Width       = 1;
0x1314E	0x2101    MOVS	R1, #1
0x13150	0x485B    LDR	R0, [PC, #364]
0x13152	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2170 :: 		CircleButton2.Pen_Color       = 0x0000;
0x13154	0x2100    MOVS	R1, #0
0x13156	0x485B    LDR	R0, [PC, #364]
0x13158	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2171 :: 		CircleButton2.Visible         = 1;
0x1315A	0x2101    MOVS	R1, #1
0x1315C	0x485A    LDR	R0, [PC, #360]
0x1315E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2172 :: 		CircleButton2.Active          = 1;
0x13160	0x2101    MOVS	R1, #1
0x13162	0x485A    LDR	R0, [PC, #360]
0x13164	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2173 :: 		CircleButton2.Transparent     = 0;
0x13166	0x2100    MOVS	R1, #0
0x13168	0x4859    LDR	R0, [PC, #356]
0x1316A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2174 :: 		CircleButton2.Caption         = CircleButton2_Caption;
0x1316C	0x4959    LDR	R1, [PC, #356]
0x1316E	0x485A    LDR	R0, [PC, #360]
0x13170	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2175 :: 		CircleButton2.TextAlign       = _taCenter;
0x13172	0x2101    MOVS	R1, #1
0x13174	0x4859    LDR	R0, [PC, #356]
0x13176	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2176 :: 		CircleButton2.FontName        = Tahoma11x13_Regular;
0x13178	0x4959    LDR	R1, [PC, #356]
0x1317A	0x485A    LDR	R0, [PC, #360]
0x1317C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2177 :: 		CircleButton2.PressColEnabled = 1;
0x1317E	0x2101    MOVS	R1, #1
0x13180	0x4859    LDR	R0, [PC, #356]
0x13182	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2178 :: 		CircleButton2.Font_Color      = 0x0000;
0x13184	0x2100    MOVS	R1, #0
0x13186	0x4859    LDR	R0, [PC, #356]
0x13188	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2179 :: 		CircleButton2.Gradient        = 0;
0x1318A	0x2100    MOVS	R1, #0
0x1318C	0x4858    LDR	R0, [PC, #352]
0x1318E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2180 :: 		CircleButton2.Gradient_Orientation = 0;
0x13190	0x2100    MOVS	R1, #0
0x13192	0x4858    LDR	R0, [PC, #352]
0x13194	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2181 :: 		CircleButton2.Gradient_Start_Color = 0xFFFF;
0x13196	0xF64F71FF  MOVW	R1, #65535
0x1319A	0x4857    LDR	R0, [PC, #348]
0x1319C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2182 :: 		CircleButton2.Gradient_End_Color = 0xC618;
0x1319E	0xF24C6118  MOVW	R1, #50712
0x131A2	0x4856    LDR	R0, [PC, #344]
0x131A4	0xF000B8AC  B	#344
0x131A8	0x0C882000  	_Tachometer_graphics+0
0x131AC	0x0FEC2000  	_Image47+0
0x131B0	0x0FF02000  	_Image47+4
0x131B4	0x0FF22000  	_Image47+6
0x131B8	0x0FF42000  	_Image47+8
0x131BC	0x0FF62000  	_Image47+10
0x131C0	0x0FF82000  	_Image47+12
0x131C4	0x10022000  	_Image47+22
0x131C8	0x10032000  	_Image47+23
0x131CC	0x10E20039  	#3739874
0x131D0	0x0FFC2000  	_Image47+16
0x131D4	0x10002000  	_Image47+20
0x131D8	0x10012000  	_Image47+21
0x131DC	0x10042000  	_Image47+24
0x131E0	0x10082000  	_Image47+28
0x131E4	0x100C2000  	_Image47+32
0x131E8	0x10102000  	_Image47+36
0x131EC	0x0E242000  	_Label26+0
0x131F0	0x0E282000  	_Label26+4
0x131F4	0x0E2A2000  	_Label26+6
0x131F8	0x0E2C2000  	_Label26+8
0x131FC	0x0E2E2000  	_Label26+10
0x13200	0x0E302000  	_Label26+12
0x13204	0x0E3E2000  	_Label26+26
0x13208	0x0E3F2000  	_Label26+27
0x1320C	0x00E82000  	_Label26_Caption+0
0x13210	0x0E342000  	_Label26+16
0x13214	0x0E382000  	_Label26+20
0x13218	0x0E3C2000  	_Label26+24
0x1321C	0x0E402000  	_Label26+28
0x13220	0x0E442000  	_Label26+32
0x13224	0x0E482000  	_Label26+36
0x13228	0x0E4C2000  	_Label26+40
0x1322C	0x0E502000  	_Label27+0
0x13230	0x0E542000  	_Label27+4
0x13234	0x0E562000  	_Label27+6
0x13238	0x0E582000  	_Label27+8
0x1323C	0x0E5A2000  	_Label27+10
0x13240	0x0E5C2000  	_Label27+12
0x13244	0x0E6A2000  	_Label27+26
0x13248	0x0E6B2000  	_Label27+27
0x1324C	0x00F02000  	_Label27_Caption+0
0x13250	0x0E602000  	_Label27+16
0x13254	0x0E642000  	_Label27+20
0x13258	0x0E682000  	_Label27+24
0x1325C	0x0E6C2000  	_Label27+28
0x13260	0x0E702000  	_Label27+32
0x13264	0x0E742000  	_Label27+36
0x13268	0x0E782000  	_Label27+40
0x1326C	0x0E7C2000  	_Label28+0
0x13270	0x0E802000  	_Label28+4
0x13274	0x0E822000  	_Label28+6
0x13278	0x0E842000  	_Label28+8
0x1327C	0x0E862000  	_Label28+10
0x13280	0x0E882000  	_Label28+12
0x13284	0x0E962000  	_Label28+26
0x13288	0x0E972000  	_Label28+27
0x1328C	0x00F62000  	_Label28_Caption+0
0x13290	0x0E8C2000  	_Label28+16
0x13294	0x0E902000  	_Label28+20
0x13298	0x0E942000  	_Label28+24
0x1329C	0x0E982000  	_Label28+28
0x132A0	0x0E9C2000  	_Label28+32
0x132A4	0x0EA02000  	_Label28+36
0x132A8	0x0EA42000  	_Label28+40
0x132AC	0x10442000  	_CircleButton2+0
0x132B0	0x10482000  	_CircleButton2+4
0x132B4	0x104A2000  	_CircleButton2+6
0x132B8	0x104C2000  	_CircleButton2+8
0x132BC	0x104E2000  	_CircleButton2+10
0x132C0	0x10502000  	_CircleButton2+12
0x132C4	0x10522000  	_CircleButton2+14
0x132C8	0x10542000  	_CircleButton2+16
0x132CC	0x10552000  	_CircleButton2+17
0x132D0	0x10562000  	_CircleButton2+18
0x132D4	0x000F2000  	_CircleButton2_Caption+0
0x132D8	0x10582000  	_CircleButton2+20
0x132DC	0x105C2000  	_CircleButton2+24
0x132E0	0x17A50001  	#71589
0x132E4	0x10602000  	_CircleButton2+28
0x132E8	0x106E2000  	_CircleButton2+42
0x132EC	0x10642000  	_CircleButton2+32
0x132F0	0x10662000  	_CircleButton2+34
0x132F4	0x10672000  	_CircleButton2+35
0x132F8	0x10682000  	_CircleButton2+36
0x132FC	0x106A2000  	_CircleButton2+38
0x13300	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2183 :: 		CircleButton2.Color           = 0xC618;
0x13302	0xF24C6118  MOVW	R1, #50712
0x13306	0x487C    LDR	R0, [PC, #496]
0x13308	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2184 :: 		CircleButton2.Press_Color     = 0xE71C;
0x1330A	0xF24E711C  MOVW	R1, #59164
0x1330E	0x487B    LDR	R0, [PC, #492]
0x13310	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2185 :: 		CircleButton2.OnUpPtr         = 0;
0x13312	0x2100    MOVS	R1, #0
0x13314	0x487A    LDR	R0, [PC, #488]
0x13316	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2186 :: 		CircleButton2.OnDownPtr       = 0;
0x13318	0x2100    MOVS	R1, #0
0x1331A	0x487A    LDR	R0, [PC, #488]
0x1331C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2187 :: 		CircleButton2.OnClickPtr      = 0;
0x1331E	0x2100    MOVS	R1, #0
0x13320	0x4879    LDR	R0, [PC, #484]
0x13322	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2188 :: 		CircleButton2.OnPressPtr      = doPrevScreen;
0x13324	0x4979    LDR	R1, [PC, #484]
0x13326	0x487A    LDR	R0, [PC, #488]
0x13328	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2190 :: 		Line2.OwnerScreen     = &Tachometer_graphics;
0x1332A	0x497A    LDR	R1, [PC, #488]
0x1332C	0x487A    LDR	R0, [PC, #488]
0x1332E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2191 :: 		Line2.Order           = 21;
0x13330	0x2115    MOVS	R1, #21
0x13332	0x487A    LDR	R0, [PC, #488]
0x13334	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2192 :: 		Line2.First_Point_X   = 238;
0x13336	0x21EE    MOVS	R1, #238
0x13338	0x4879    LDR	R0, [PC, #484]
0x1333A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2193 :: 		Line2.First_Point_Y   = 135;
0x1333C	0x2187    MOVS	R1, #135
0x1333E	0x4879    LDR	R0, [PC, #484]
0x13340	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2194 :: 		Line2.Second_Point_X  = 160;
0x13342	0x21A0    MOVS	R1, #160
0x13344	0x4878    LDR	R0, [PC, #480]
0x13346	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2195 :: 		Line2.Second_Point_Y  = 214;
0x13348	0x21D6    MOVS	R1, #214
0x1334A	0x4878    LDR	R0, [PC, #480]
0x1334C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2196 :: 		Line2.Visible         = 1;
0x1334E	0x2101    MOVS	R1, #1
0x13350	0x4877    LDR	R0, [PC, #476]
0x13352	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2197 :: 		Line2.Pen_Width       = 5;
0x13354	0x2105    MOVS	R1, #5
0x13356	0x4877    LDR	R0, [PC, #476]
0x13358	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2198 :: 		Line2.Color           = 0xF800;
0x1335A	0xF64F0100  MOVW	R1, #63488
0x1335E	0x4876    LDR	R0, [PC, #472]
0x13360	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2200 :: 		Label29.OwnerScreen     = &Tachometer_graphics;
0x13362	0x496C    LDR	R1, [PC, #432]
0x13364	0x4875    LDR	R0, [PC, #468]
0x13366	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2201 :: 		Label29.Order           = 22;
0x13368	0x2116    MOVS	R1, #22
0x1336A	0x4875    LDR	R0, [PC, #468]
0x1336C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2202 :: 		Label29.Left            = 222;
0x1336E	0x21DE    MOVS	R1, #222
0x13370	0x4874    LDR	R0, [PC, #464]
0x13372	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2203 :: 		Label29.Top             = 103;
0x13374	0x2167    MOVS	R1, #103
0x13376	0x4874    LDR	R0, [PC, #464]
0x13378	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2204 :: 		Label29.Width           = 37;
0x1337A	0x2125    MOVS	R1, #37
0x1337C	0x4873    LDR	R0, [PC, #460]
0x1337E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2205 :: 		Label29.Height          = 66;
0x13380	0x2142    MOVS	R1, #66
0x13382	0x4873    LDR	R0, [PC, #460]
0x13384	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2206 :: 		Label29.Visible         = 1;
0x13386	0x2101    MOVS	R1, #1
0x13388	0x4872    LDR	R0, [PC, #456]
0x1338A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2207 :: 		Label29.Active          = 1;
0x1338C	0x2101    MOVS	R1, #1
0x1338E	0x4872    LDR	R0, [PC, #456]
0x13390	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2208 :: 		Label29.Caption         = Label29_Caption;
0x13392	0x4972    LDR	R1, [PC, #456]
0x13394	0x4872    LDR	R0, [PC, #456]
0x13396	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2209 :: 		Label29.FontName        = Arial_Black43x60_Regular;
0x13398	0xF6452169  MOVW	R1, #23145
0x1339C	0x4871    LDR	R0, [PC, #452]
0x1339E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2210 :: 		Label29.Font_Color      = 0x07E0;
0x133A0	0xF24071E0  MOVW	R1, #2016
0x133A4	0x4870    LDR	R0, [PC, #448]
0x133A6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2211 :: 		Label29.OnUpPtr         = 0;
0x133A8	0x2100    MOVS	R1, #0
0x133AA	0x4870    LDR	R0, [PC, #448]
0x133AC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2212 :: 		Label29.OnDownPtr       = 0;
0x133AE	0x2100    MOVS	R1, #0
0x133B0	0x486F    LDR	R0, [PC, #444]
0x133B2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2213 :: 		Label29.OnClickPtr      = 0;
0x133B4	0x2100    MOVS	R1, #0
0x133B6	0x486F    LDR	R0, [PC, #444]
0x133B8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2214 :: 		Label29.OnPressPtr      = 0;
0x133BA	0x2100    MOVS	R1, #0
0x133BC	0x486E    LDR	R0, [PC, #440]
0x133BE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2216 :: 		Circle1.OwnerScreen     = &Tachometer_graphics;
0x133C0	0x4954    LDR	R1, [PC, #336]
0x133C2	0x486E    LDR	R0, [PC, #440]
0x133C4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2217 :: 		Circle1.Order           = 23;
0x133C6	0x2117    MOVS	R1, #23
0x133C8	0x486D    LDR	R0, [PC, #436]
0x133CA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2218 :: 		Circle1.Left            = 331;
0x133CC	0xF240114B  MOVW	R1, #331
0x133D0	0x486C    LDR	R0, [PC, #432]
0x133D2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2219 :: 		Circle1.Top             = 138;
0x133D4	0x218A    MOVS	R1, #138
0x133D6	0x486C    LDR	R0, [PC, #432]
0x133D8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2220 :: 		Circle1.Radius          = 5;
0x133DA	0x2105    MOVS	R1, #5
0x133DC	0x486B    LDR	R0, [PC, #428]
0x133DE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2221 :: 		Circle1.Pen_Width       = 1;
0x133E0	0x2101    MOVS	R1, #1
0x133E2	0x486B    LDR	R0, [PC, #428]
0x133E4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2222 :: 		Circle1.Pen_Color       = 0x0000;
0x133E6	0x2100    MOVS	R1, #0
0x133E8	0x486A    LDR	R0, [PC, #424]
0x133EA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2223 :: 		Circle1.Visible         = 1;
0x133EC	0x2101    MOVS	R1, #1
0x133EE	0x486A    LDR	R0, [PC, #424]
0x133F0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2224 :: 		Circle1.Active          = 1;
0x133F2	0x2101    MOVS	R1, #1
0x133F4	0x4869    LDR	R0, [PC, #420]
0x133F6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2225 :: 		Circle1.Transparent     = 1;
0x133F8	0x2101    MOVS	R1, #1
0x133FA	0x4869    LDR	R0, [PC, #420]
0x133FC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2226 :: 		Circle1.Gradient        = 0;
0x133FE	0x2100    MOVS	R1, #0
0x13400	0x4868    LDR	R0, [PC, #416]
0x13402	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2227 :: 		Circle1.Gradient_Orientation = 0;
0x13404	0x2100    MOVS	R1, #0
0x13406	0x4868    LDR	R0, [PC, #416]
0x13408	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2228 :: 		Circle1.Gradient_Start_Color = 0xFFFF;
0x1340A	0xF64F71FF  MOVW	R1, #65535
0x1340E	0x4867    LDR	R0, [PC, #412]
0x13410	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2229 :: 		Circle1.Gradient_End_Color = 0xC618;
0x13412	0xF24C6118  MOVW	R1, #50712
0x13416	0x4866    LDR	R0, [PC, #408]
0x13418	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2230 :: 		Circle1.Color           = 0xF800;
0x1341A	0xF64F0100  MOVW	R1, #63488
0x1341E	0x4865    LDR	R0, [PC, #404]
0x13420	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2231 :: 		Circle1.PressColEnabled = 1;
0x13422	0x2101    MOVS	R1, #1
0x13424	0x4864    LDR	R0, [PC, #400]
0x13426	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2232 :: 		Circle1.Press_Color     = 0xE71C;
0x13428	0xF24E711C  MOVW	R1, #59164
0x1342C	0x4863    LDR	R0, [PC, #396]
0x1342E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2233 :: 		Circle1.OnUpPtr         = 0;
0x13430	0x2100    MOVS	R1, #0
0x13432	0x4863    LDR	R0, [PC, #396]
0x13434	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2234 :: 		Circle1.OnDownPtr       = 0;
0x13436	0x2100    MOVS	R1, #0
0x13438	0x4862    LDR	R0, [PC, #392]
0x1343A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2235 :: 		Circle1.OnClickPtr      = 0;
0x1343C	0x2100    MOVS	R1, #0
0x1343E	0x4862    LDR	R0, [PC, #392]
0x13440	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2236 :: 		Circle1.OnPressPtr      = 0;
0x13442	0x2100    MOVS	R1, #0
0x13444	0x4861    LDR	R0, [PC, #388]
0x13446	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2238 :: 		ButtonRound1.OwnerScreen     = &Settings;
0x13448	0x4961    LDR	R1, [PC, #388]
0x1344A	0x4862    LDR	R0, [PC, #392]
0x1344C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2239 :: 		ButtonRound1.Order           = 1;
0x1344E	0x2101    MOVS	R1, #1
0x13450	0x4861    LDR	R0, [PC, #388]
0x13452	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2240 :: 		ButtonRound1.Left            = 194;
0x13454	0x21C2    MOVS	R1, #194
0x13456	0x4861    LDR	R0, [PC, #388]
0x13458	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2241 :: 		ButtonRound1.Top             = 10;
0x1345A	0x210A    MOVS	R1, #10
0x1345C	0x4860    LDR	R0, [PC, #384]
0x1345E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2242 :: 		ButtonRound1.Width           = 90;
0x13460	0x215A    MOVS	R1, #90
0x13462	0x4860    LDR	R0, [PC, #384]
0x13464	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2243 :: 		ButtonRound1.Height          = 40;
0x13466	0x2128    MOVS	R1, #40
0x13468	0x485F    LDR	R0, [PC, #380]
0x1346A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2244 :: 		ButtonRound1.Pen_Width       = 1;
0x1346C	0x2101    MOVS	R1, #1
0x1346E	0x485F    LDR	R0, [PC, #380]
0x13470	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2245 :: 		ButtonRound1.Pen_Color       = 0x0000;
0x13472	0x2100    MOVS	R1, #0
0x13474	0x485E    LDR	R0, [PC, #376]
0x13476	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2246 :: 		ButtonRound1.Visible         = 1;
0x13478	0x2101    MOVS	R1, #1
0x1347A	0x485E    LDR	R0, [PC, #376]
0x1347C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2247 :: 		ButtonRound1.Active          = 1;
0x1347E	0x2101    MOVS	R1, #1
0x13480	0x485D    LDR	R0, [PC, #372]
0x13482	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2248 :: 		ButtonRound1.Transparent     = 1;
0x13484	0x2101    MOVS	R1, #1
0x13486	0x485D    LDR	R0, [PC, #372]
0x13488	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2249 :: 		ButtonRound1.Caption         = ButtonRound1_Caption;
0x1348A	0x495D    LDR	R1, [PC, #372]
0x1348C	0x485D    LDR	R0, [PC, #372]
0x1348E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2250 :: 		ButtonRound1.TextAlign       = _taCenter;
0x13490	0x2101    MOVS	R1, #1
0x13492	0x485D    LDR	R0, [PC, #372]
0x13494	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2251 :: 		ButtonRound1.FontName        = Impact13x20_Regular;
0x13496	0xF64B1177  MOVW	R1, #47479
0x1349A	0x485C    LDR	R0, [PC, #368]
0x1349C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2252 :: 		ButtonRound1.PressColEnabled = 1;
0x1349E	0x2101    MOVS	R1, #1
0x134A0	0x485B    LDR	R0, [PC, #364]
0x134A2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2253 :: 		ButtonRound1.Font_Color      = 0x0000;
0x134A4	0x2100    MOVS	R1, #0
0x134A6	0x485B    LDR	R0, [PC, #364]
0x134A8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2254 :: 		ButtonRound1.Gradient        = 1;
0x134AA	0x2101    MOVS	R1, #1
0x134AC	0x485A    LDR	R0, [PC, #360]
0x134AE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2255 :: 		ButtonRound1.Gradient_Orientation = 0;
0x134B0	0x2100    MOVS	R1, #0
0x134B2	0x485A    LDR	R0, [PC, #360]
0x134B4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2256 :: 		ButtonRound1.Gradient_Start_Color = 0xFFFF;
0x134B6	0xF64F71FF  MOVW	R1, #65535
0x134BA	0x4859    LDR	R0, [PC, #356]
0x134BC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2257 :: 		ButtonRound1.Gradient_End_Color = 0xC618;
0x134BE	0xF24C6118  MOVW	R1, #50712
0x134C2	0x4858    LDR	R0, [PC, #352]
0x134C4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2258 :: 		ButtonRound1.Color           = 0xC618;
0x134C6	0xF24C6118  MOVW	R1, #50712
0x134CA	0x4857    LDR	R0, [PC, #348]
0x134CC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2259 :: 		ButtonRound1.Press_Color     = 0xE71C;
0x134CE	0xF24E711C  MOVW	R1, #59164
0x134D2	0x4856    LDR	R0, [PC, #344]
0x134D4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2260 :: 		ButtonRound1.Corner_Radius   = 3;
0x134D6	0x2103    MOVS	R1, #3
0x134D8	0x4855    LDR	R0, [PC, #340]
0x134DA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2261 :: 		ButtonRound1.OnUpPtr         = 0;
0x134DC	0x2100    MOVS	R1, #0
0x134DE	0x4855    LDR	R0, [PC, #340]
0x134E0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2262 :: 		ButtonRound1.OnDownPtr       = 0;
0x134E2	0x2100    MOVS	R1, #0
0x134E4	0x4854    LDR	R0, [PC, #336]
0x134E6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2263 :: 		ButtonRound1.OnClickPtr      = doSetClock;
0x134E8	0x4954    LDR	R1, [PC, #336]
0x134EA	0x4855    LDR	R0, [PC, #340]
0x134EC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2264 :: 		ButtonRound1.OnPressPtr      = doSetClock;
0x134EE	0x4953    LDR	R1, [PC, #332]
0x134F0	0x4854    LDR	R0, [PC, #336]
0x134F2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2266 :: 		ButtonRound2.OwnerScreen     = &Settings;
0x134F4	0x4936    LDR	R1, [PC, #216]
0x134F6	0xE0A7    B	#334
0x134F8	0x106C2000  	_CircleButton2+40
0x134FC	0x10702000  	_CircleButton2+44
0x13500	0x10742000  	_CircleButton2+48
0x13504	0x10782000  	_CircleButton2+52
0x13508	0x107C2000  	_CircleButton2+56
0x1350C	0xC2B50000  	_doPrevScreen+0
0x13510	0x10802000  	_CircleButton2+60
0x13514	0x0C882000  	_Tachometer_graphics+0
0x13518	0x10B82000  	_Line2+0
0x1351C	0x10BC2000  	_Line2+4
0x13520	0x10BE2000  	_Line2+6
0x13524	0x10C02000  	_Line2+8
0x13528	0x10C22000  	_Line2+10
0x1352C	0x10C42000  	_Line2+12
0x13530	0x10C72000  	_Line2+15
0x13534	0x10C62000  	_Line2+14
0x13538	0x10C82000  	_Line2+16
0x1353C	0x0EA82000  	_Label29+0
0x13540	0x0EAC2000  	_Label29+4
0x13544	0x0EAE2000  	_Label29+6
0x13548	0x0EB02000  	_Label29+8
0x1354C	0x0EB22000  	_Label29+10
0x13550	0x0EB42000  	_Label29+12
0x13554	0x0EC22000  	_Label29+26
0x13558	0x0EC32000  	_Label29+27
0x1355C	0x00F82000  	_Label29_Caption+0
0x13560	0x0EB82000  	_Label29+16
0x13564	0x0EBC2000  	_Label29+20
0x13568	0x0EC02000  	_Label29+24
0x1356C	0x0EC42000  	_Label29+28
0x13570	0x0EC82000  	_Label29+32
0x13574	0x0ECC2000  	_Label29+36
0x13578	0x0ED02000  	_Label29+40
0x1357C	0x10142000  	_Circle1+0
0x13580	0x10182000  	_Circle1+4
0x13584	0x101A2000  	_Circle1+6
0x13588	0x101C2000  	_Circle1+8
0x1358C	0x101E2000  	_Circle1+10
0x13590	0x10202000  	_Circle1+12
0x13594	0x10222000  	_Circle1+14
0x13598	0x10242000  	_Circle1+16
0x1359C	0x10252000  	_Circle1+17
0x135A0	0x10262000  	_Circle1+18
0x135A4	0x10272000  	_Circle1+19
0x135A8	0x10282000  	_Circle1+20
0x135AC	0x102A2000  	_Circle1+22
0x135B0	0x102C2000  	_Circle1+24
0x135B4	0x102E2000  	_Circle1+26
0x135B8	0x10302000  	_Circle1+28
0x135BC	0x10322000  	_Circle1+30
0x135C0	0x10342000  	_Circle1+32
0x135C4	0x10382000  	_Circle1+36
0x135C8	0x103C2000  	_Circle1+40
0x135CC	0x10402000  	_Circle1+44
0x135D0	0x10CC2000  	_Settings+0
0x135D4	0x111C2000  	_ButtonRound1+0
0x135D8	0x11202000  	_ButtonRound1+4
0x135DC	0x11222000  	_ButtonRound1+6
0x135E0	0x11242000  	_ButtonRound1+8
0x135E4	0x11262000  	_ButtonRound1+10
0x135E8	0x11282000  	_ButtonRound1+12
0x135EC	0x112A2000  	_ButtonRound1+14
0x135F0	0x112C2000  	_ButtonRound1+16
0x135F4	0x112E2000  	_ButtonRound1+18
0x135F8	0x112F2000  	_ButtonRound1+19
0x135FC	0x11302000  	_ButtonRound1+20
0x13600	0x00FA2000  	_ButtonRound1_Caption+0
0x13604	0x11342000  	_ButtonRound1+24
0x13608	0x11382000  	_ButtonRound1+28
0x1360C	0x113C2000  	_ButtonRound1+32
0x13610	0x114B2000  	_ButtonRound1+47
0x13614	0x11402000  	_ButtonRound1+36
0x13618	0x11422000  	_ButtonRound1+38
0x1361C	0x11432000  	_ButtonRound1+39
0x13620	0x11442000  	_ButtonRound1+40
0x13624	0x11462000  	_ButtonRound1+42
0x13628	0x11482000  	_ButtonRound1+44
0x1362C	0x114C2000  	_ButtonRound1+48
0x13630	0x114A2000  	_ButtonRound1+46
0x13634	0x11502000  	_ButtonRound1+52
0x13638	0x11542000  	_ButtonRound1+56
0x1363C	0xC2850000  	_doSetClock+0
0x13640	0x11582000  	_ButtonRound1+60
0x13644	0x115C2000  	_ButtonRound1+64
0x13648	0x487D    LDR	R0, [PC, #500]
0x1364A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2267 :: 		ButtonRound2.Order           = 2;
0x1364C	0x2102    MOVS	R1, #2
0x1364E	0x487D    LDR	R0, [PC, #500]
0x13650	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2268 :: 		ButtonRound2.Left            = 52;
0x13652	0x2134    MOVS	R1, #52
0x13654	0x487C    LDR	R0, [PC, #496]
0x13656	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2269 :: 		ButtonRound2.Top             = 60;
0x13658	0x213C    MOVS	R1, #60
0x1365A	0x487C    LDR	R0, [PC, #496]
0x1365C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2270 :: 		ButtonRound2.Width           = 164;
0x1365E	0x21A4    MOVS	R1, #164
0x13660	0x487B    LDR	R0, [PC, #492]
0x13662	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2271 :: 		ButtonRound2.Height          = 48;
0x13664	0x2130    MOVS	R1, #48
0x13666	0x487B    LDR	R0, [PC, #492]
0x13668	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2272 :: 		ButtonRound2.Pen_Width       = 1;
0x1366A	0x2101    MOVS	R1, #1
0x1366C	0x487A    LDR	R0, [PC, #488]
0x1366E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2273 :: 		ButtonRound2.Pen_Color       = 0x0000;
0x13670	0x2100    MOVS	R1, #0
0x13672	0x487A    LDR	R0, [PC, #488]
0x13674	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2274 :: 		ButtonRound2.Visible         = 1;
0x13676	0x2101    MOVS	R1, #1
0x13678	0x4879    LDR	R0, [PC, #484]
0x1367A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2275 :: 		ButtonRound2.Active          = 1;
0x1367C	0x2101    MOVS	R1, #1
0x1367E	0x4879    LDR	R0, [PC, #484]
0x13680	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2276 :: 		ButtonRound2.Transparent     = 1;
0x13682	0x2101    MOVS	R1, #1
0x13684	0x4878    LDR	R0, [PC, #480]
0x13686	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2277 :: 		ButtonRound2.Caption         = ButtonRound2_Caption;
0x13688	0x4978    LDR	R1, [PC, #480]
0x1368A	0x4879    LDR	R0, [PC, #484]
0x1368C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2278 :: 		ButtonRound2.TextAlign       = _taCenter;
0x1368E	0x2101    MOVS	R1, #1
0x13690	0x4878    LDR	R0, [PC, #480]
0x13692	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2279 :: 		ButtonRound2.FontName        = Impact13x20_Regular;
0x13694	0xF64B1177  MOVW	R1, #47479
0x13698	0x4877    LDR	R0, [PC, #476]
0x1369A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2280 :: 		ButtonRound2.PressColEnabled = 1;
0x1369C	0x2101    MOVS	R1, #1
0x1369E	0x4877    LDR	R0, [PC, #476]
0x136A0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2281 :: 		ButtonRound2.Font_Color      = 0x0000;
0x136A2	0x2100    MOVS	R1, #0
0x136A4	0x4876    LDR	R0, [PC, #472]
0x136A6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2282 :: 		ButtonRound2.Gradient        = 1;
0x136A8	0x2101    MOVS	R1, #1
0x136AA	0x4876    LDR	R0, [PC, #472]
0x136AC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2283 :: 		ButtonRound2.Gradient_Orientation = 0;
0x136AE	0x2100    MOVS	R1, #0
0x136B0	0x4875    LDR	R0, [PC, #468]
0x136B2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2284 :: 		ButtonRound2.Gradient_Start_Color = 0xFFFF;
0x136B4	0xF64F71FF  MOVW	R1, #65535
0x136B8	0x4874    LDR	R0, [PC, #464]
0x136BA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2285 :: 		ButtonRound2.Gradient_End_Color = 0xC618;
0x136BC	0xF24C6118  MOVW	R1, #50712
0x136C0	0x4873    LDR	R0, [PC, #460]
0x136C2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2286 :: 		ButtonRound2.Color           = 0xC618;
0x136C4	0xF24C6118  MOVW	R1, #50712
0x136C8	0x4872    LDR	R0, [PC, #456]
0x136CA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2287 :: 		ButtonRound2.Press_Color     = 0xE71C;
0x136CC	0xF24E711C  MOVW	R1, #59164
0x136D0	0x4871    LDR	R0, [PC, #452]
0x136D2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2288 :: 		ButtonRound2.Corner_Radius   = 3;
0x136D4	0x2103    MOVS	R1, #3
0x136D6	0x4871    LDR	R0, [PC, #452]
0x136D8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2289 :: 		ButtonRound2.OnUpPtr         = 0;
0x136DA	0x2100    MOVS	R1, #0
0x136DC	0x4870    LDR	R0, [PC, #448]
0x136DE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2290 :: 		ButtonRound2.OnDownPtr       = 0;
0x136E0	0x2100    MOVS	R1, #0
0x136E2	0x4870    LDR	R0, [PC, #448]
0x136E4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2291 :: 		ButtonRound2.OnClickPtr      = doAccelerometerTest;
0x136E6	0x4970    LDR	R1, [PC, #448]
0x136E8	0x4870    LDR	R0, [PC, #448]
0x136EA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2292 :: 		ButtonRound2.OnPressPtr      = doAccelerometerTest;
0x136EC	0x496E    LDR	R1, [PC, #440]
0x136EE	0x4870    LDR	R0, [PC, #448]
0x136F0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2294 :: 		ButtonRound3.OwnerScreen     = &Settings;
0x136F2	0x4970    LDR	R1, [PC, #448]
0x136F4	0x4870    LDR	R0, [PC, #448]
0x136F6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2295 :: 		ButtonRound3.Order           = 3;
0x136F8	0x2103    MOVS	R1, #3
0x136FA	0x4870    LDR	R0, [PC, #448]
0x136FC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2296 :: 		ButtonRound3.Left            = 262;
0x136FE	0xF2401106  MOVW	R1, #262
0x13702	0x486F    LDR	R0, [PC, #444]
0x13704	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2297 :: 		ButtonRound3.Top             = 60;
0x13706	0x213C    MOVS	R1, #60
0x13708	0x486E    LDR	R0, [PC, #440]
0x1370A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2298 :: 		ButtonRound3.Width           = 164;
0x1370C	0x21A4    MOVS	R1, #164
0x1370E	0x486E    LDR	R0, [PC, #440]
0x13710	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2299 :: 		ButtonRound3.Height          = 48;
0x13712	0x2130    MOVS	R1, #48
0x13714	0x486D    LDR	R0, [PC, #436]
0x13716	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2300 :: 		ButtonRound3.Pen_Width       = 1;
0x13718	0x2101    MOVS	R1, #1
0x1371A	0x486D    LDR	R0, [PC, #436]
0x1371C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2301 :: 		ButtonRound3.Pen_Color       = 0x0000;
0x1371E	0x2100    MOVS	R1, #0
0x13720	0x486C    LDR	R0, [PC, #432]
0x13722	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2302 :: 		ButtonRound3.Visible         = 1;
0x13724	0x2101    MOVS	R1, #1
0x13726	0x486C    LDR	R0, [PC, #432]
0x13728	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2303 :: 		ButtonRound3.Active          = 1;
0x1372A	0x2101    MOVS	R1, #1
0x1372C	0x486B    LDR	R0, [PC, #428]
0x1372E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2304 :: 		ButtonRound3.Transparent     = 1;
0x13730	0x2101    MOVS	R1, #1
0x13732	0x486B    LDR	R0, [PC, #428]
0x13734	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2305 :: 		ButtonRound3.Caption         = ButtonRound3_Caption;
0x13736	0x496B    LDR	R1, [PC, #428]
0x13738	0x486B    LDR	R0, [PC, #428]
0x1373A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2306 :: 		ButtonRound3.TextAlign       = _taCenter;
0x1373C	0x2101    MOVS	R1, #1
0x1373E	0x486B    LDR	R0, [PC, #428]
0x13740	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2307 :: 		ButtonRound3.FontName        = Impact13x20_Regular;
0x13742	0xF64B1177  MOVW	R1, #47479
0x13746	0x486A    LDR	R0, [PC, #424]
0x13748	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2308 :: 		ButtonRound3.PressColEnabled = 1;
0x1374A	0x2101    MOVS	R1, #1
0x1374C	0x4869    LDR	R0, [PC, #420]
0x1374E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2309 :: 		ButtonRound3.Font_Color      = 0x0000;
0x13750	0x2100    MOVS	R1, #0
0x13752	0x4869    LDR	R0, [PC, #420]
0x13754	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2310 :: 		ButtonRound3.Gradient        = 1;
0x13756	0x2101    MOVS	R1, #1
0x13758	0x4868    LDR	R0, [PC, #416]
0x1375A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2311 :: 		ButtonRound3.Gradient_Orientation = 0;
0x1375C	0x2100    MOVS	R1, #0
0x1375E	0x4868    LDR	R0, [PC, #416]
0x13760	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2312 :: 		ButtonRound3.Gradient_Start_Color = 0xFFFF;
0x13762	0xF64F71FF  MOVW	R1, #65535
0x13766	0x4867    LDR	R0, [PC, #412]
0x13768	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2313 :: 		ButtonRound3.Gradient_End_Color = 0xC618;
0x1376A	0xF24C6118  MOVW	R1, #50712
0x1376E	0x4866    LDR	R0, [PC, #408]
0x13770	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2314 :: 		ButtonRound3.Color           = 0xC618;
0x13772	0xF24C6118  MOVW	R1, #50712
0x13776	0x4865    LDR	R0, [PC, #404]
0x13778	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2315 :: 		ButtonRound3.Press_Color     = 0xE71C;
0x1377A	0xF24E711C  MOVW	R1, #59164
0x1377E	0x4864    LDR	R0, [PC, #400]
0x13780	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2316 :: 		ButtonRound3.Corner_Radius   = 3;
0x13782	0x2103    MOVS	R1, #3
0x13784	0x4863    LDR	R0, [PC, #396]
0x13786	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2317 :: 		ButtonRound3.OnUpPtr         = 0;
0x13788	0x2100    MOVS	R1, #0
0x1378A	0x4863    LDR	R0, [PC, #396]
0x1378C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2318 :: 		ButtonRound3.OnDownPtr       = 0;
0x1378E	0x2100    MOVS	R1, #0
0x13790	0x4862    LDR	R0, [PC, #392]
0x13792	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2319 :: 		ButtonRound3.OnClickPtr      = doGPSTest;
0x13794	0x4962    LDR	R1, [PC, #392]
0x13796	0x4863    LDR	R0, [PC, #396]
0x13798	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2320 :: 		ButtonRound3.OnPressPtr      = doGPSTest;
0x1379A	0x4961    LDR	R1, [PC, #388]
0x1379C	0x4862    LDR	R0, [PC, #392]
0x1379E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2322 :: 		ButtonRound4.OwnerScreen     = &Settings;
0x137A0	0x4944    LDR	R1, [PC, #272]
0x137A2	0x4862    LDR	R0, [PC, #392]
0x137A4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2323 :: 		ButtonRound4.Order           = 4;
0x137A6	0x2104    MOVS	R1, #4
0x137A8	0x4861    LDR	R0, [PC, #388]
0x137AA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2324 :: 		ButtonRound4.Left            = 52;
0x137AC	0x2134    MOVS	R1, #52
0x137AE	0x4861    LDR	R0, [PC, #388]
0x137B0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2325 :: 		ButtonRound4.Top             = 208;
0x137B2	0x21D0    MOVS	R1, #208
0x137B4	0x4860    LDR	R0, [PC, #384]
0x137B6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2326 :: 		ButtonRound4.Width           = 164;
0x137B8	0x21A4    MOVS	R1, #164
0x137BA	0x4860    LDR	R0, [PC, #384]
0x137BC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2327 :: 		ButtonRound4.Height          = 48;
0x137BE	0x2130    MOVS	R1, #48
0x137C0	0x485F    LDR	R0, [PC, #380]
0x137C2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2328 :: 		ButtonRound4.Pen_Width       = 1;
0x137C4	0x2101    MOVS	R1, #1
0x137C6	0x485F    LDR	R0, [PC, #380]
0x137C8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2329 :: 		ButtonRound4.Pen_Color       = 0x0000;
0x137CA	0x2100    MOVS	R1, #0
0x137CC	0x485E    LDR	R0, [PC, #376]
0x137CE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2330 :: 		ButtonRound4.Visible         = 1;
0x137D0	0x2101    MOVS	R1, #1
0x137D2	0x485E    LDR	R0, [PC, #376]
0x137D4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2331 :: 		ButtonRound4.Active          = 1;
0x137D6	0x2101    MOVS	R1, #1
0x137D8	0x485D    LDR	R0, [PC, #372]
0x137DA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2332 :: 		ButtonRound4.Transparent     = 1;
0x137DC	0x2101    MOVS	R1, #1
0x137DE	0x485D    LDR	R0, [PC, #372]
0x137E0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2333 :: 		ButtonRound4.Caption         = ButtonRound4_Caption;
0x137E2	0x495D    LDR	R1, [PC, #372]
0x137E4	0x485D    LDR	R0, [PC, #372]
0x137E6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2334 :: 		ButtonRound4.TextAlign       = _taCenter;
0x137E8	0x2101    MOVS	R1, #1
0x137EA	0x485D    LDR	R0, [PC, #372]
0x137EC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2335 :: 		ButtonRound4.FontName        = Impact13x20_Regular;
0x137EE	0xF64B1177  MOVW	R1, #47479
0x137F2	0x485C    LDR	R0, [PC, #368]
0x137F4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2336 :: 		ButtonRound4.PressColEnabled = 1;
0x137F6	0x2101    MOVS	R1, #1
0x137F8	0x485B    LDR	R0, [PC, #364]
0x137FA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2337 :: 		ButtonRound4.Font_Color      = 0x0000;
0x137FC	0x2100    MOVS	R1, #0
0x137FE	0x485B    LDR	R0, [PC, #364]
0x13800	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2338 :: 		ButtonRound4.Gradient        = 1;
0x13802	0x2101    MOVS	R1, #1
0x13804	0x485A    LDR	R0, [PC, #360]
0x13806	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2339 :: 		ButtonRound4.Gradient_Orientation = 0;
0x13808	0x2100    MOVS	R1, #0
0x1380A	0x485A    LDR	R0, [PC, #360]
0x1380C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2340 :: 		ButtonRound4.Gradient_Start_Color = 0xFFFF;
0x1380E	0xF64F71FF  MOVW	R1, #65535
0x13812	0x4859    LDR	R0, [PC, #356]
0x13814	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2341 :: 		ButtonRound4.Gradient_End_Color = 0xC618;
0x13816	0xF24C6118  MOVW	R1, #50712
0x1381A	0x4858    LDR	R0, [PC, #352]
0x1381C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2342 :: 		ButtonRound4.Color           = 0xC618;
0x1381E	0xF24C6118  MOVW	R1, #50712
0x13822	0x4857    LDR	R0, [PC, #348]
0x13824	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2343 :: 		ButtonRound4.Press_Color     = 0xE71C;
0x13826	0xF24E711C  MOVW	R1, #59164
0x1382A	0x4856    LDR	R0, [PC, #344]
0x1382C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2344 :: 		ButtonRound4.Corner_Radius   = 3;
0x1382E	0x2103    MOVS	R1, #3
0x13830	0x4855    LDR	R0, [PC, #340]
0x13832	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2345 :: 		ButtonRound4.OnUpPtr         = 0;
0x13834	0x2100    MOVS	R1, #0
0x13836	0x4855    LDR	R0, [PC, #340]
0x13838	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2346 :: 		ButtonRound4.OnDownPtr       = 0;
0x1383A	0x2100    MOVS	R1, #0
0x1383C	0xF000B8A8  B	#336
0x13840	0x11602000  	_ButtonRound2+0
0x13844	0x11642000  	_ButtonRound2+4
0x13848	0x11662000  	_ButtonRound2+6
0x1384C	0x11682000  	_ButtonRound2+8
0x13850	0x116A2000  	_ButtonRound2+10
0x13854	0x116C2000  	_ButtonRound2+12
0x13858	0x116E2000  	_ButtonRound2+14
0x1385C	0x11702000  	_ButtonRound2+16
0x13860	0x11722000  	_ButtonRound2+18
0x13864	0x11732000  	_ButtonRound2+19
0x13868	0x11742000  	_ButtonRound2+20
0x1386C	0x01042000  	_ButtonRound2_Caption+0
0x13870	0x11782000  	_ButtonRound2+24
0x13874	0x117C2000  	_ButtonRound2+28
0x13878	0x11802000  	_ButtonRound2+32
0x1387C	0x118F2000  	_ButtonRound2+47
0x13880	0x11842000  	_ButtonRound2+36
0x13884	0x11862000  	_ButtonRound2+38
0x13888	0x11872000  	_ButtonRound2+39
0x1388C	0x11882000  	_ButtonRound2+40
0x13890	0x118A2000  	_ButtonRound2+42
0x13894	0x118C2000  	_ButtonRound2+44
0x13898	0x11902000  	_ButtonRound2+48
0x1389C	0x118E2000  	_ButtonRound2+46
0x138A0	0x11942000  	_ButtonRound2+52
0x138A4	0x11982000  	_ButtonRound2+56
0x138A8	0xC1990000  	_doAccelerometerTest+0
0x138AC	0x119C2000  	_ButtonRound2+60
0x138B0	0x11A02000  	_ButtonRound2+64
0x138B4	0x10CC2000  	_Settings+0
0x138B8	0x11A42000  	_ButtonRound3+0
0x138BC	0x11A82000  	_ButtonRound3+4
0x138C0	0x11AA2000  	_ButtonRound3+6
0x138C4	0x11AC2000  	_ButtonRound3+8
0x138C8	0x11AE2000  	_ButtonRound3+10
0x138CC	0x11B02000  	_ButtonRound3+12
0x138D0	0x11B22000  	_ButtonRound3+14
0x138D4	0x11B42000  	_ButtonRound3+16
0x138D8	0x11B62000  	_ButtonRound3+18
0x138DC	0x11B72000  	_ButtonRound3+19
0x138E0	0x11B82000  	_ButtonRound3+20
0x138E4	0x01172000  	_ButtonRound3_Caption+0
0x138E8	0x11BC2000  	_ButtonRound3+24
0x138EC	0x11C02000  	_ButtonRound3+28
0x138F0	0x11C42000  	_ButtonRound3+32
0x138F4	0x11D32000  	_ButtonRound3+47
0x138F8	0x11C82000  	_ButtonRound3+36
0x138FC	0x11CA2000  	_ButtonRound3+38
0x13900	0x11CB2000  	_ButtonRound3+39
0x13904	0x11CC2000  	_ButtonRound3+40
0x13908	0x11CE2000  	_ButtonRound3+42
0x1390C	0x11D02000  	_ButtonRound3+44
0x13910	0x11D42000  	_ButtonRound3+48
0x13914	0x11D22000  	_ButtonRound3+46
0x13918	0x11D82000  	_ButtonRound3+52
0x1391C	0x11DC2000  	_ButtonRound3+56
0x13920	0xC2650000  	_doGPSTest+0
0x13924	0x11E02000  	_ButtonRound3+60
0x13928	0x11E42000  	_ButtonRound3+64
0x1392C	0x11E82000  	_ButtonRound4+0
0x13930	0x11EC2000  	_ButtonRound4+4
0x13934	0x11EE2000  	_ButtonRound4+6
0x13938	0x11F02000  	_ButtonRound4+8
0x1393C	0x11F22000  	_ButtonRound4+10
0x13940	0x11F42000  	_ButtonRound4+12
0x13944	0x11F62000  	_ButtonRound4+14
0x13948	0x11F82000  	_ButtonRound4+16
0x1394C	0x11FA2000  	_ButtonRound4+18
0x13950	0x11FB2000  	_ButtonRound4+19
0x13954	0x11FC2000  	_ButtonRound4+20
0x13958	0x01202000  	_ButtonRound4_Caption+0
0x1395C	0x12002000  	_ButtonRound4+24
0x13960	0x12042000  	_ButtonRound4+28
0x13964	0x12082000  	_ButtonRound4+32
0x13968	0x12172000  	_ButtonRound4+47
0x1396C	0x120C2000  	_ButtonRound4+36
0x13970	0x120E2000  	_ButtonRound4+38
0x13974	0x120F2000  	_ButtonRound4+39
0x13978	0x12102000  	_ButtonRound4+40
0x1397C	0x12122000  	_ButtonRound4+42
0x13980	0x12142000  	_ButtonRound4+44
0x13984	0x12182000  	_ButtonRound4+48
0x13988	0x12162000  	_ButtonRound4+46
0x1398C	0x121C2000  	_ButtonRound4+52
0x13990	0x487A    LDR	R0, [PC, #488]
0x13992	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2347 :: 		ButtonRound4.OnClickPtr      = doMagnetTest;
0x13994	0x497A    LDR	R1, [PC, #488]
0x13996	0x487B    LDR	R0, [PC, #492]
0x13998	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2348 :: 		ButtonRound4.OnPressPtr      = doMagnetTest;
0x1399A	0x4979    LDR	R1, [PC, #484]
0x1399C	0x487A    LDR	R0, [PC, #488]
0x1399E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2350 :: 		ButtonRound5.OwnerScreen     = &Settings;
0x139A0	0x497A    LDR	R1, [PC, #488]
0x139A2	0x487B    LDR	R0, [PC, #492]
0x139A4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2351 :: 		ButtonRound5.Order           = 5;
0x139A6	0x2105    MOVS	R1, #5
0x139A8	0x487A    LDR	R0, [PC, #488]
0x139AA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2352 :: 		ButtonRound5.Left            = 262;
0x139AC	0xF2401106  MOVW	R1, #262
0x139B0	0x4879    LDR	R0, [PC, #484]
0x139B2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2353 :: 		ButtonRound5.Top             = 208;
0x139B4	0x21D0    MOVS	R1, #208
0x139B6	0x4879    LDR	R0, [PC, #484]
0x139B8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2354 :: 		ButtonRound5.Width           = 164;
0x139BA	0x21A4    MOVS	R1, #164
0x139BC	0x4878    LDR	R0, [PC, #480]
0x139BE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2355 :: 		ButtonRound5.Height          = 48;
0x139C0	0x2130    MOVS	R1, #48
0x139C2	0x4878    LDR	R0, [PC, #480]
0x139C4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2356 :: 		ButtonRound5.Pen_Width       = 1;
0x139C6	0x2101    MOVS	R1, #1
0x139C8	0x4877    LDR	R0, [PC, #476]
0x139CA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2357 :: 		ButtonRound5.Pen_Color       = 0x0000;
0x139CC	0x2100    MOVS	R1, #0
0x139CE	0x4877    LDR	R0, [PC, #476]
0x139D0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2358 :: 		ButtonRound5.Visible         = 1;
0x139D2	0x2101    MOVS	R1, #1
0x139D4	0x4876    LDR	R0, [PC, #472]
0x139D6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2359 :: 		ButtonRound5.Active          = 1;
0x139D8	0x2101    MOVS	R1, #1
0x139DA	0x4876    LDR	R0, [PC, #472]
0x139DC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2360 :: 		ButtonRound5.Transparent     = 1;
0x139DE	0x2101    MOVS	R1, #1
0x139E0	0x4875    LDR	R0, [PC, #468]
0x139E2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2361 :: 		ButtonRound5.Caption         = ButtonRound5_Caption;
0x139E4	0x4975    LDR	R1, [PC, #468]
0x139E6	0x4876    LDR	R0, [PC, #472]
0x139E8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2362 :: 		ButtonRound5.TextAlign       = _taCenter;
0x139EA	0x2101    MOVS	R1, #1
0x139EC	0x4875    LDR	R0, [PC, #468]
0x139EE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2363 :: 		ButtonRound5.FontName        = Impact13x20_Regular;
0x139F0	0xF64B1177  MOVW	R1, #47479
0x139F4	0x4874    LDR	R0, [PC, #464]
0x139F6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2364 :: 		ButtonRound5.PressColEnabled = 1;
0x139F8	0x2101    MOVS	R1, #1
0x139FA	0x4874    LDR	R0, [PC, #464]
0x139FC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2365 :: 		ButtonRound5.Font_Color      = 0x0000;
0x139FE	0x2100    MOVS	R1, #0
0x13A00	0x4873    LDR	R0, [PC, #460]
0x13A02	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2366 :: 		ButtonRound5.Gradient        = 1;
0x13A04	0x2101    MOVS	R1, #1
0x13A06	0x4873    LDR	R0, [PC, #460]
0x13A08	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2367 :: 		ButtonRound5.Gradient_Orientation = 0;
0x13A0A	0x2100    MOVS	R1, #0
0x13A0C	0x4872    LDR	R0, [PC, #456]
0x13A0E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2368 :: 		ButtonRound5.Gradient_Start_Color = 0xFFFF;
0x13A10	0xF64F71FF  MOVW	R1, #65535
0x13A14	0x4871    LDR	R0, [PC, #452]
0x13A16	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2369 :: 		ButtonRound5.Gradient_End_Color = 0xC618;
0x13A18	0xF24C6118  MOVW	R1, #50712
0x13A1C	0x4870    LDR	R0, [PC, #448]
0x13A1E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2370 :: 		ButtonRound5.Color           = 0xC618;
0x13A20	0xF24C6118  MOVW	R1, #50712
0x13A24	0x486F    LDR	R0, [PC, #444]
0x13A26	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2371 :: 		ButtonRound5.Press_Color     = 0xE71C;
0x13A28	0xF24E711C  MOVW	R1, #59164
0x13A2C	0x486E    LDR	R0, [PC, #440]
0x13A2E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2372 :: 		ButtonRound5.Corner_Radius   = 3;
0x13A30	0x2103    MOVS	R1, #3
0x13A32	0x486E    LDR	R0, [PC, #440]
0x13A34	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2373 :: 		ButtonRound5.OnUpPtr         = 0;
0x13A36	0x2100    MOVS	R1, #0
0x13A38	0x486D    LDR	R0, [PC, #436]
0x13A3A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2374 :: 		ButtonRound5.OnDownPtr       = 0;
0x13A3C	0x2100    MOVS	R1, #0
0x13A3E	0x486D    LDR	R0, [PC, #436]
0x13A40	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2375 :: 		ButtonRound5.OnClickPtr      = doPressureTest;
0x13A42	0x496D    LDR	R1, [PC, #436]
0x13A44	0x486D    LDR	R0, [PC, #436]
0x13A46	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2376 :: 		ButtonRound5.OnPressPtr      = doPressureTest;
0x13A48	0x496B    LDR	R1, [PC, #428]
0x13A4A	0x486D    LDR	R0, [PC, #436]
0x13A4C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2378 :: 		ButtonRound6.OwnerScreen     = &Settings;
0x13A4E	0x494F    LDR	R1, [PC, #316]
0x13A50	0x486C    LDR	R0, [PC, #432]
0x13A52	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2379 :: 		ButtonRound6.Order           = 6;
0x13A54	0x2106    MOVS	R1, #6
0x13A56	0x486C    LDR	R0, [PC, #432]
0x13A58	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2380 :: 		ButtonRound6.Left            = 52;
0x13A5A	0x2134    MOVS	R1, #52
0x13A5C	0x486B    LDR	R0, [PC, #428]
0x13A5E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2381 :: 		ButtonRound6.Top             = 134;
0x13A60	0x2186    MOVS	R1, #134
0x13A62	0x486B    LDR	R0, [PC, #428]
0x13A64	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2382 :: 		ButtonRound6.Width           = 164;
0x13A66	0x21A4    MOVS	R1, #164
0x13A68	0x486A    LDR	R0, [PC, #424]
0x13A6A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2383 :: 		ButtonRound6.Height          = 48;
0x13A6C	0x2130    MOVS	R1, #48
0x13A6E	0x486A    LDR	R0, [PC, #424]
0x13A70	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2384 :: 		ButtonRound6.Pen_Width       = 1;
0x13A72	0x2101    MOVS	R1, #1
0x13A74	0x4869    LDR	R0, [PC, #420]
0x13A76	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2385 :: 		ButtonRound6.Pen_Color       = 0x0000;
0x13A78	0x2100    MOVS	R1, #0
0x13A7A	0x4869    LDR	R0, [PC, #420]
0x13A7C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2386 :: 		ButtonRound6.Visible         = 1;
0x13A7E	0x2101    MOVS	R1, #1
0x13A80	0x4868    LDR	R0, [PC, #416]
0x13A82	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2387 :: 		ButtonRound6.Active          = 1;
0x13A84	0x2101    MOVS	R1, #1
0x13A86	0x4868    LDR	R0, [PC, #416]
0x13A88	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2388 :: 		ButtonRound6.Transparent     = 1;
0x13A8A	0x2101    MOVS	R1, #1
0x13A8C	0x4867    LDR	R0, [PC, #412]
0x13A8E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2389 :: 		ButtonRound6.Caption         = ButtonRound6_Caption;
0x13A90	0x4967    LDR	R1, [PC, #412]
0x13A92	0x4868    LDR	R0, [PC, #416]
0x13A94	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2390 :: 		ButtonRound6.TextAlign       = _taCenter;
0x13A96	0x2101    MOVS	R1, #1
0x13A98	0x4867    LDR	R0, [PC, #412]
0x13A9A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2391 :: 		ButtonRound6.FontName        = Impact13x20_Regular;
0x13A9C	0xF64B1177  MOVW	R1, #47479
0x13AA0	0x4866    LDR	R0, [PC, #408]
0x13AA2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2392 :: 		ButtonRound6.PressColEnabled = 1;
0x13AA4	0x2101    MOVS	R1, #1
0x13AA6	0x4866    LDR	R0, [PC, #408]
0x13AA8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2393 :: 		ButtonRound6.Font_Color      = 0x0000;
0x13AAA	0x2100    MOVS	R1, #0
0x13AAC	0x4865    LDR	R0, [PC, #404]
0x13AAE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2394 :: 		ButtonRound6.Gradient        = 1;
0x13AB0	0x2101    MOVS	R1, #1
0x13AB2	0x4865    LDR	R0, [PC, #404]
0x13AB4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2395 :: 		ButtonRound6.Gradient_Orientation = 0;
0x13AB6	0x2100    MOVS	R1, #0
0x13AB8	0x4864    LDR	R0, [PC, #400]
0x13ABA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2396 :: 		ButtonRound6.Gradient_Start_Color = 0xFFFF;
0x13ABC	0xF64F71FF  MOVW	R1, #65535
0x13AC0	0x4863    LDR	R0, [PC, #396]
0x13AC2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2397 :: 		ButtonRound6.Gradient_End_Color = 0xC618;
0x13AC4	0xF24C6118  MOVW	R1, #50712
0x13AC8	0x4862    LDR	R0, [PC, #392]
0x13ACA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2398 :: 		ButtonRound6.Color           = 0xC618;
0x13ACC	0xF24C6118  MOVW	R1, #50712
0x13AD0	0x4861    LDR	R0, [PC, #388]
0x13AD2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2399 :: 		ButtonRound6.Press_Color     = 0xE71C;
0x13AD4	0xF24E711C  MOVW	R1, #59164
0x13AD8	0x4860    LDR	R0, [PC, #384]
0x13ADA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2400 :: 		ButtonRound6.Corner_Radius   = 3;
0x13ADC	0x2103    MOVS	R1, #3
0x13ADE	0x4860    LDR	R0, [PC, #384]
0x13AE0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2401 :: 		ButtonRound6.OnUpPtr         = 0;
0x13AE2	0x2100    MOVS	R1, #0
0x13AE4	0x485F    LDR	R0, [PC, #380]
0x13AE6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2402 :: 		ButtonRound6.OnDownPtr       = 0;
0x13AE8	0x2100    MOVS	R1, #0
0x13AEA	0x485F    LDR	R0, [PC, #380]
0x13AEC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2403 :: 		ButtonRound6.OnClickPtr      = doGyroTest;
0x13AEE	0x495F    LDR	R1, [PC, #380]
0x13AF0	0x485F    LDR	R0, [PC, #380]
0x13AF2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2404 :: 		ButtonRound6.OnPressPtr      = doGyroTest;
0x13AF4	0x495D    LDR	R1, [PC, #372]
0x13AF6	0x485F    LDR	R0, [PC, #380]
0x13AF8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2406 :: 		ButtonRound7.OwnerScreen     = &Settings;
0x13AFA	0x4924    LDR	R1, [PC, #144]
0x13AFC	0x485E    LDR	R0, [PC, #376]
0x13AFE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2407 :: 		ButtonRound7.Order           = 7;
0x13B00	0x2107    MOVS	R1, #7
0x13B02	0x485E    LDR	R0, [PC, #376]
0x13B04	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2408 :: 		ButtonRound7.Left            = 262;
0x13B06	0xF2401106  MOVW	R1, #262
0x13B0A	0x485D    LDR	R0, [PC, #372]
0x13B0C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2409 :: 		ButtonRound7.Top             = 134;
0x13B0E	0x2186    MOVS	R1, #134
0x13B10	0x485C    LDR	R0, [PC, #368]
0x13B12	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2410 :: 		ButtonRound7.Width           = 164;
0x13B14	0x21A4    MOVS	R1, #164
0x13B16	0x485C    LDR	R0, [PC, #368]
0x13B18	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2411 :: 		ButtonRound7.Height          = 48;
0x13B1A	0x2130    MOVS	R1, #48
0x13B1C	0x485B    LDR	R0, [PC, #364]
0x13B1E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2412 :: 		ButtonRound7.Pen_Width       = 1;
0x13B20	0x2101    MOVS	R1, #1
0x13B22	0x485B    LDR	R0, [PC, #364]
0x13B24	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2413 :: 		ButtonRound7.Pen_Color       = 0x0000;
0x13B26	0x2100    MOVS	R1, #0
0x13B28	0x485A    LDR	R0, [PC, #360]
0x13B2A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2414 :: 		ButtonRound7.Visible         = 1;
0x13B2C	0x2101    MOVS	R1, #1
0x13B2E	0x485A    LDR	R0, [PC, #360]
0x13B30	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2415 :: 		ButtonRound7.Active          = 1;
0x13B32	0x2101    MOVS	R1, #1
0x13B34	0x4859    LDR	R0, [PC, #356]
0x13B36	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2416 :: 		ButtonRound7.Transparent     = 1;
0x13B38	0x2101    MOVS	R1, #1
0x13B3A	0x4859    LDR	R0, [PC, #356]
0x13B3C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2417 :: 		ButtonRound7.Caption         = ButtonRound7_Caption;
0x13B3E	0x4959    LDR	R1, [PC, #356]
0x13B40	0x4859    LDR	R0, [PC, #356]
0x13B42	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2418 :: 		ButtonRound7.TextAlign       = _taCenter;
0x13B44	0x2101    MOVS	R1, #1
0x13B46	0x4859    LDR	R0, [PC, #356]
0x13B48	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2419 :: 		ButtonRound7.FontName        = Impact13x20_Regular;
0x13B4A	0xF64B1177  MOVW	R1, #47479
0x13B4E	0x4858    LDR	R0, [PC, #352]
0x13B50	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2420 :: 		ButtonRound7.PressColEnabled = 1;
0x13B52	0x2101    MOVS	R1, #1
0x13B54	0x4857    LDR	R0, [PC, #348]
0x13B56	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2421 :: 		ButtonRound7.Font_Color      = 0x0000;
0x13B58	0x2100    MOVS	R1, #0
0x13B5A	0x4857    LDR	R0, [PC, #348]
0x13B5C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2422 :: 		ButtonRound7.Gradient        = 1;
0x13B5E	0x2101    MOVS	R1, #1
0x13B60	0x4856    LDR	R0, [PC, #344]
0x13B62	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2423 :: 		ButtonRound7.Gradient_Orientation = 0;
0x13B64	0x2100    MOVS	R1, #0
0x13B66	0x4856    LDR	R0, [PC, #344]
0x13B68	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2424 :: 		ButtonRound7.Gradient_Start_Color = 0xFFFF;
0x13B6A	0xF64F71FF  MOVW	R1, #65535
0x13B6E	0x4855    LDR	R0, [PC, #340]
0x13B70	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2425 :: 		ButtonRound7.Gradient_End_Color = 0xC618;
0x13B72	0xF24C6118  MOVW	R1, #50712
0x13B76	0x4854    LDR	R0, [PC, #336]
0x13B78	0xF000B8A8  B	#336
0x13B7C	0x12202000  	_ButtonRound4+56
0x13B80	0xC2310000  	_doMagnetTest+0
0x13B84	0x12242000  	_ButtonRound4+60
0x13B88	0x12282000  	_ButtonRound4+64
0x13B8C	0x10CC2000  	_Settings+0
0x13B90	0x122C2000  	_ButtonRound5+0
0x13B94	0x12302000  	_ButtonRound5+4
0x13B98	0x12322000  	_ButtonRound5+6
0x13B9C	0x12342000  	_ButtonRound5+8
0x13BA0	0x12362000  	_ButtonRound5+10
0x13BA4	0x12382000  	_ButtonRound5+12
0x13BA8	0x123A2000  	_ButtonRound5+14
0x13BAC	0x123C2000  	_ButtonRound5+16
0x13BB0	0x123E2000  	_ButtonRound5+18
0x13BB4	0x123F2000  	_ButtonRound5+19
0x13BB8	0x12402000  	_ButtonRound5+20
0x13BBC	0x01322000  	_ButtonRound5_Caption+0
0x13BC0	0x12442000  	_ButtonRound5+24
0x13BC4	0x12482000  	_ButtonRound5+28
0x13BC8	0x124C2000  	_ButtonRound5+32
0x13BCC	0x125B2000  	_ButtonRound5+47
0x13BD0	0x12502000  	_ButtonRound5+36
0x13BD4	0x12522000  	_ButtonRound5+38
0x13BD8	0x12532000  	_ButtonRound5+39
0x13BDC	0x12542000  	_ButtonRound5+40
0x13BE0	0x12562000  	_ButtonRound5+42
0x13BE4	0x12582000  	_ButtonRound5+44
0x13BE8	0x125C2000  	_ButtonRound5+48
0x13BEC	0x125A2000  	_ButtonRound5+46
0x13BF0	0x12602000  	_ButtonRound5+52
0x13BF4	0x12642000  	_ButtonRound5+56
0x13BF8	0xC4CD0000  	_doPressureTest+0
0x13BFC	0x12682000  	_ButtonRound5+60
0x13C00	0x126C2000  	_ButtonRound5+64
0x13C04	0x12702000  	_ButtonRound6+0
0x13C08	0x12742000  	_ButtonRound6+4
0x13C0C	0x12762000  	_ButtonRound6+6
0x13C10	0x12782000  	_ButtonRound6+8
0x13C14	0x127A2000  	_ButtonRound6+10
0x13C18	0x127C2000  	_ButtonRound6+12
0x13C1C	0x127E2000  	_ButtonRound6+14
0x13C20	0x12802000  	_ButtonRound6+16
0x13C24	0x12822000  	_ButtonRound6+18
0x13C28	0x12832000  	_ButtonRound6+19
0x13C2C	0x12842000  	_ButtonRound6+20
0x13C30	0x01472000  	_ButtonRound6_Caption+0
0x13C34	0x12882000  	_ButtonRound6+24
0x13C38	0x128C2000  	_ButtonRound6+28
0x13C3C	0x12902000  	_ButtonRound6+32
0x13C40	0x129F2000  	_ButtonRound6+47
0x13C44	0x12942000  	_ButtonRound6+36
0x13C48	0x12962000  	_ButtonRound6+38
0x13C4C	0x12972000  	_ButtonRound6+39
0x13C50	0x12982000  	_ButtonRound6+40
0x13C54	0x129A2000  	_ButtonRound6+42
0x13C58	0x129C2000  	_ButtonRound6+44
0x13C5C	0x12A02000  	_ButtonRound6+48
0x13C60	0x129E2000  	_ButtonRound6+46
0x13C64	0x12A42000  	_ButtonRound6+52
0x13C68	0x12A82000  	_ButtonRound6+56
0x13C6C	0xC57D0000  	_doGyroTest+0
0x13C70	0x12AC2000  	_ButtonRound6+60
0x13C74	0x12B02000  	_ButtonRound6+64
0x13C78	0x12B42000  	_ButtonRound7+0
0x13C7C	0x12B82000  	_ButtonRound7+4
0x13C80	0x12BA2000  	_ButtonRound7+6
0x13C84	0x12BC2000  	_ButtonRound7+8
0x13C88	0x12BE2000  	_ButtonRound7+10
0x13C8C	0x12C02000  	_ButtonRound7+12
0x13C90	0x12C22000  	_ButtonRound7+14
0x13C94	0x12C42000  	_ButtonRound7+16
0x13C98	0x12C62000  	_ButtonRound7+18
0x13C9C	0x12C72000  	_ButtonRound7+19
0x13CA0	0x12C82000  	_ButtonRound7+20
0x13CA4	0x01512000  	_ButtonRound7_Caption+0
0x13CA8	0x12CC2000  	_ButtonRound7+24
0x13CAC	0x12D02000  	_ButtonRound7+28
0x13CB0	0x12D42000  	_ButtonRound7+32
0x13CB4	0x12E32000  	_ButtonRound7+47
0x13CB8	0x12D82000  	_ButtonRound7+36
0x13CBC	0x12DA2000  	_ButtonRound7+38
0x13CC0	0x12DB2000  	_ButtonRound7+39
0x13CC4	0x12DC2000  	_ButtonRound7+40
0x13CC8	0x12DE2000  	_ButtonRound7+42
0x13CCC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2426 :: 		ButtonRound7.Color           = 0xC618;
0x13CCE	0xF24C6118  MOVW	R1, #50712
0x13CD2	0x4879    LDR	R0, [PC, #484]
0x13CD4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2427 :: 		ButtonRound7.Press_Color     = 0xE71C;
0x13CD6	0xF24E711C  MOVW	R1, #59164
0x13CDA	0x4878    LDR	R0, [PC, #480]
0x13CDC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2428 :: 		ButtonRound7.Corner_Radius   = 3;
0x13CDE	0x2103    MOVS	R1, #3
0x13CE0	0x4877    LDR	R0, [PC, #476]
0x13CE2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2429 :: 		ButtonRound7.OnUpPtr         = 0;
0x13CE4	0x2100    MOVS	R1, #0
0x13CE6	0x4877    LDR	R0, [PC, #476]
0x13CE8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2430 :: 		ButtonRound7.OnDownPtr       = 0;
0x13CEA	0x2100    MOVS	R1, #0
0x13CEC	0x4876    LDR	R0, [PC, #472]
0x13CEE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2431 :: 		ButtonRound7.OnClickPtr      = doCalibration;
0x13CF0	0x4976    LDR	R1, [PC, #472]
0x13CF2	0x4877    LDR	R0, [PC, #476]
0x13CF4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2432 :: 		ButtonRound7.OnPressPtr      = doCalibration;
0x13CF6	0x4975    LDR	R1, [PC, #468]
0x13CF8	0x4876    LDR	R0, [PC, #472]
0x13CFA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2434 :: 		Image48.OwnerScreen     = &Settings;
0x13CFC	0x4976    LDR	R1, [PC, #472]
0x13CFE	0x4877    LDR	R0, [PC, #476]
0x13D00	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2435 :: 		Image48.Order           = 8;
0x13D02	0x2108    MOVS	R1, #8
0x13D04	0x4876    LDR	R0, [PC, #472]
0x13D06	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2436 :: 		Image48.Left            = 432;
0x13D08	0xF24011B0  MOVW	R1, #432
0x13D0C	0x4875    LDR	R0, [PC, #468]
0x13D0E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2437 :: 		Image48.Top             = 2;
0x13D10	0x2102    MOVS	R1, #2
0x13D12	0x4875    LDR	R0, [PC, #468]
0x13D14	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2438 :: 		Image48.Width           = 44;
0x13D16	0x212C    MOVS	R1, #44
0x13D18	0x4874    LDR	R0, [PC, #464]
0x13D1A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2439 :: 		Image48.Height          = 20;
0x13D1C	0x2114    MOVS	R1, #20
0x13D1E	0x4874    LDR	R0, [PC, #464]
0x13D20	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2440 :: 		Image48.Picture_Type    = 0;
0x13D22	0x2100    MOVS	R1, #0
0x13D24	0x4873    LDR	R0, [PC, #460]
0x13D26	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2441 :: 		Image48.Picture_Ratio   = 1;
0x13D28	0x2101    MOVS	R1, #1
0x13D2A	0x4873    LDR	R0, [PC, #460]
0x13D2C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2442 :: 		Image48.Picture_Name    = icon_battery_bmp;
0x13D2E	0x4973    LDR	R1, [PC, #460]
0x13D30	0x4873    LDR	R0, [PC, #460]
0x13D32	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2443 :: 		Image48.Visible         = 1;
0x13D34	0x2101    MOVS	R1, #1
0x13D36	0x4873    LDR	R0, [PC, #460]
0x13D38	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2444 :: 		Image48.Active          = 0;
0x13D3A	0x2100    MOVS	R1, #0
0x13D3C	0x4872    LDR	R0, [PC, #456]
0x13D3E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2445 :: 		Image48.OnUpPtr         = 0;
0x13D40	0x2100    MOVS	R1, #0
0x13D42	0x4872    LDR	R0, [PC, #456]
0x13D44	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2446 :: 		Image48.OnDownPtr       = 0;
0x13D46	0x2100    MOVS	R1, #0
0x13D48	0x4871    LDR	R0, [PC, #452]
0x13D4A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2447 :: 		Image48.OnClickPtr      = 0;
0x13D4C	0x2100    MOVS	R1, #0
0x13D4E	0x4871    LDR	R0, [PC, #452]
0x13D50	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2448 :: 		Image48.OnPressPtr      = 0;
0x13D52	0x2100    MOVS	R1, #0
0x13D54	0x4870    LDR	R0, [PC, #448]
0x13D56	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2450 :: 		Label30.OwnerScreen     = &Settings;
0x13D58	0x495F    LDR	R1, [PC, #380]
0x13D5A	0x4870    LDR	R0, [PC, #448]
0x13D5C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2451 :: 		Label30.Order           = 9;
0x13D5E	0x2109    MOVS	R1, #9
0x13D60	0x486F    LDR	R0, [PC, #444]
0x13D62	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2452 :: 		Label30.Left            = 365;
0x13D64	0xF240116D  MOVW	R1, #365
0x13D68	0x486E    LDR	R0, [PC, #440]
0x13D6A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2453 :: 		Label30.Top             = 21;
0x13D6C	0x2115    MOVS	R1, #21
0x13D6E	0x486E    LDR	R0, [PC, #440]
0x13D70	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2454 :: 		Label30.Width           = 109;
0x13D72	0x216D    MOVS	R1, #109
0x13D74	0x486D    LDR	R0, [PC, #436]
0x13D76	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2455 :: 		Label30.Height          = 32;
0x13D78	0x2120    MOVS	R1, #32
0x13D7A	0x486D    LDR	R0, [PC, #436]
0x13D7C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2456 :: 		Label30.Visible         = 1;
0x13D7E	0x2101    MOVS	R1, #1
0x13D80	0x486C    LDR	R0, [PC, #432]
0x13D82	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2457 :: 		Label30.Active          = 1;
0x13D84	0x2101    MOVS	R1, #1
0x13D86	0x486C    LDR	R0, [PC, #432]
0x13D88	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2458 :: 		Label30.Caption         = Label30_Caption;
0x13D8A	0x496C    LDR	R1, [PC, #432]
0x13D8C	0x486C    LDR	R0, [PC, #432]
0x13D8E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2459 :: 		Label30.FontName        = Arial_Black21x30_Regular;
0x13D90	0xF24211A1  MOVW	R1, #8609
0x13D94	0x486B    LDR	R0, [PC, #428]
0x13D96	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2460 :: 		Label30.Font_Color      = 0xFFFF;
0x13D98	0xF64F71FF  MOVW	R1, #65535
0x13D9C	0x486A    LDR	R0, [PC, #424]
0x13D9E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2461 :: 		Label30.OnUpPtr         = 0;
0x13DA0	0x2100    MOVS	R1, #0
0x13DA2	0x486A    LDR	R0, [PC, #424]
0x13DA4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2462 :: 		Label30.OnDownPtr       = 0;
0x13DA6	0x2100    MOVS	R1, #0
0x13DA8	0x4869    LDR	R0, [PC, #420]
0x13DAA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2463 :: 		Label30.OnClickPtr      = 0;
0x13DAC	0x2100    MOVS	R1, #0
0x13DAE	0x4869    LDR	R0, [PC, #420]
0x13DB0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2464 :: 		Label30.OnPressPtr      = 0;
0x13DB2	0x2100    MOVS	R1, #0
0x13DB4	0x4868    LDR	R0, [PC, #416]
0x13DB6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2466 :: 		Box17.OwnerScreen     = &Settings;
0x13DB8	0x4947    LDR	R1, [PC, #284]
0x13DBA	0x4868    LDR	R0, [PC, #416]
0x13DBC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2467 :: 		Box17.Order           = 10;
0x13DBE	0x210A    MOVS	R1, #10
0x13DC0	0x4867    LDR	R0, [PC, #412]
0x13DC2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2468 :: 		Box17.Left            = 25;
0x13DC4	0x2119    MOVS	R1, #25
0x13DC6	0x4867    LDR	R0, [PC, #412]
0x13DC8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2469 :: 		Box17.Top             = 15;
0x13DCA	0x210F    MOVS	R1, #15
0x13DCC	0x4866    LDR	R0, [PC, #408]
0x13DCE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2470 :: 		Box17.Width           = 78;
0x13DD0	0x214E    MOVS	R1, #78
0x13DD2	0x4866    LDR	R0, [PC, #408]
0x13DD4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2471 :: 		Box17.Height          = 26;
0x13DD6	0x211A    MOVS	R1, #26
0x13DD8	0x4865    LDR	R0, [PC, #404]
0x13DDA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2472 :: 		Box17.Pen_Width       = 1;
0x13DDC	0x2101    MOVS	R1, #1
0x13DDE	0x4865    LDR	R0, [PC, #404]
0x13DE0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2473 :: 		Box17.Pen_Color       = 0x0000;
0x13DE2	0x2100    MOVS	R1, #0
0x13DE4	0x4864    LDR	R0, [PC, #400]
0x13DE6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2474 :: 		Box17.Visible         = 0;
0x13DE8	0x2100    MOVS	R1, #0
0x13DEA	0x4864    LDR	R0, [PC, #400]
0x13DEC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2475 :: 		Box17.Active          = 1;
0x13DEE	0x2101    MOVS	R1, #1
0x13DF0	0x4863    LDR	R0, [PC, #396]
0x13DF2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2476 :: 		Box17.Transparent     = 1;
0x13DF4	0x2101    MOVS	R1, #1
0x13DF6	0x4863    LDR	R0, [PC, #396]
0x13DF8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2477 :: 		Box17.Gradient        = 1;
0x13DFA	0x2101    MOVS	R1, #1
0x13DFC	0x4862    LDR	R0, [PC, #392]
0x13DFE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2478 :: 		Box17.Gradient_Orientation = 0;
0x13E00	0x2100    MOVS	R1, #0
0x13E02	0x4862    LDR	R0, [PC, #392]
0x13E04	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2479 :: 		Box17.Gradient_Start_Color = 0xFFFF;
0x13E06	0xF64F71FF  MOVW	R1, #65535
0x13E0A	0x4861    LDR	R0, [PC, #388]
0x13E0C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2480 :: 		Box17.Gradient_End_Color = 0xC618;
0x13E0E	0xF24C6118  MOVW	R1, #50712
0x13E12	0x4860    LDR	R0, [PC, #384]
0x13E14	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2481 :: 		Box17.Color           = 0xC618;
0x13E16	0xF24C6118  MOVW	R1, #50712
0x13E1A	0x485F    LDR	R0, [PC, #380]
0x13E1C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2482 :: 		Box17.PressColEnabled = 0;
0x13E1E	0x2100    MOVS	R1, #0
0x13E20	0x485E    LDR	R0, [PC, #376]
0x13E22	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2483 :: 		Box17.Press_Color     = 0xE71C;
0x13E24	0xF24E711C  MOVW	R1, #59164
0x13E28	0x485D    LDR	R0, [PC, #372]
0x13E2A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2484 :: 		Box17.OnUpPtr         = 0;
0x13E2C	0x2100    MOVS	R1, #0
0x13E2E	0x485D    LDR	R0, [PC, #372]
0x13E30	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2485 :: 		Box17.OnDownPtr       = 0;
0x13E32	0x2100    MOVS	R1, #0
0x13E34	0x485C    LDR	R0, [PC, #368]
0x13E36	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2486 :: 		Box17.OnClickPtr      = Image18OnPress;
0x13E38	0x495C    LDR	R1, [PC, #368]
0x13E3A	0x485D    LDR	R0, [PC, #372]
0x13E3C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2487 :: 		Box17.OnPressPtr      = 0;
0x13E3E	0x2100    MOVS	R1, #0
0x13E40	0x485C    LDR	R0, [PC, #368]
0x13E42	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2489 :: 		Image51.OwnerScreen     = &Settings;
0x13E44	0x4924    LDR	R1, [PC, #144]
0x13E46	0x485C    LDR	R0, [PC, #368]
0x13E48	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2490 :: 		Image51.Order           = 11;
0x13E4A	0x210B    MOVS	R1, #11
0x13E4C	0x485B    LDR	R0, [PC, #364]
0x13E4E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2491 :: 		Image51.Left            = 29;
0x13E50	0x211D    MOVS	R1, #29
0x13E52	0x485B    LDR	R0, [PC, #364]
0x13E54	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2492 :: 		Image51.Top             = 17;
0x13E56	0x2111    MOVS	R1, #17
0x13E58	0x485A    LDR	R0, [PC, #360]
0x13E5A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2493 :: 		Image51.Width           = 22;
0x13E5C	0x2116    MOVS	R1, #22
0x13E5E	0x485A    LDR	R0, [PC, #360]
0x13E60	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2494 :: 		Image51.Height          = 22;
0x13E62	0x2116    MOVS	R1, #22
0x13E64	0x4859    LDR	R0, [PC, #356]
0x13E66	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2495 :: 		Image51.Picture_Type    = 0;
0x13E68	0x2100    MOVS	R1, #0
0x13E6A	0x4859    LDR	R0, [PC, #356]
0x13E6C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2496 :: 		Image51.Picture_Ratio   = 1;
0x13E6E	0x2101    MOVS	R1, #1
0x13E70	0x4858    LDR	R0, [PC, #352]
0x13E72	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2497 :: 		Image51.Picture_Name    = icon_ok_bmp;
0x13E74	0x4958    LDR	R1, [PC, #352]
0x13E76	0x4859    LDR	R0, [PC, #356]
0x13E78	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2498 :: 		Image51.Visible         = 1;
0x13E7A	0x2101    MOVS	R1, #1
0x13E7C	0x4858    LDR	R0, [PC, #352]
0x13E7E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2499 :: 		Image51.Active          = 0;
0x13E80	0x2100    MOVS	R1, #0
0x13E82	0x4858    LDR	R0, [PC, #352]
0x13E84	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2500 :: 		Image51.OnUpPtr         = 0;
0x13E86	0x2100    MOVS	R1, #0
0x13E88	0x4857    LDR	R0, [PC, #348]
0x13E8A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2501 :: 		Image51.OnDownPtr       = 0;
0x13E8C	0x2100    MOVS	R1, #0
0x13E8E	0x4857    LDR	R0, [PC, #348]
0x13E90	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2502 :: 		Image51.OnClickPtr      = 0;
0x13E92	0x2100    MOVS	R1, #0
0x13E94	0x4856    LDR	R0, [PC, #344]
0x13E96	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2503 :: 		Image51.OnPressPtr      = Image18OnPress;
0x13E98	0x4944    LDR	R1, [PC, #272]
0x13E9A	0x4856    LDR	R0, [PC, #344]
0x13E9C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2505 :: 		Label73.OwnerScreen     = &Settings;
0x13E9E	0x490E    LDR	R1, [PC, #56]
0x13EA0	0x4855    LDR	R0, [PC, #340]
0x13EA2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2506 :: 		Label73.Order           = 12;
0x13EA4	0x210C    MOVS	R1, #12
0x13EA6	0x4855    LDR	R0, [PC, #340]
0x13EA8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2507 :: 		Label73.Left            = 57;
0x13EAA	0x2139    MOVS	R1, #57
0x13EAC	0x4854    LDR	R0, [PC, #336]
0x13EAE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2508 :: 		Label73.Top             = 17;
0x13EB0	0x2111    MOVS	R1, #17
0x13EB2	0x4854    LDR	R0, [PC, #336]
0x13EB4	0xF000B8A8  B	#336
0x13EB8	0x12E02000  	_ButtonRound7+44
0x13EBC	0x12E42000  	_ButtonRound7+48
0x13EC0	0x12E22000  	_ButtonRound7+46
0x13EC4	0x12E82000  	_ButtonRound7+52
0x13EC8	0x12EC2000  	_ButtonRound7+56
0x13ECC	0xC5F10000  	_doCalibration+0
0x13ED0	0x12F02000  	_ButtonRound7+60
0x13ED4	0x12F42000  	_ButtonRound7+64
0x13ED8	0x10CC2000  	_Settings+0
0x13EDC	0x13502000  	_Image48+0
0x13EE0	0x13542000  	_Image48+4
0x13EE4	0x13562000  	_Image48+6
0x13EE8	0x13582000  	_Image48+8
0x13EEC	0x135A2000  	_Image48+10
0x13EF0	0x135C2000  	_Image48+12
0x13EF4	0x13662000  	_Image48+22
0x13EF8	0x13672000  	_Image48+23
0x13EFC	0x10E20039  	#3739874
0x13F00	0x13602000  	_Image48+16
0x13F04	0x13642000  	_Image48+20
0x13F08	0x13652000  	_Image48+21
0x13F0C	0x13682000  	_Image48+24
0x13F10	0x136C2000  	_Image48+28
0x13F14	0x13702000  	_Image48+32
0x13F18	0x13742000  	_Image48+36
0x13F1C	0x12F82000  	_Label30+0
0x13F20	0x12FC2000  	_Label30+4
0x13F24	0x12FE2000  	_Label30+6
0x13F28	0x13002000  	_Label30+8
0x13F2C	0x13022000  	_Label30+10
0x13F30	0x13042000  	_Label30+12
0x13F34	0x13122000  	_Label30+26
0x13F38	0x13132000  	_Label30+27
0x13F3C	0x01672000  	_Label30_Caption+0
0x13F40	0x13082000  	_Label30+16
0x13F44	0x130C2000  	_Label30+20
0x13F48	0x13102000  	_Label30+24
0x13F4C	0x13142000  	_Label30+28
0x13F50	0x13182000  	_Label30+32
0x13F54	0x131C2000  	_Label30+36
0x13F58	0x13202000  	_Label30+40
0x13F5C	0x13A02000  	_Box17+0
0x13F60	0x13A42000  	_Box17+4
0x13F64	0x13A62000  	_Box17+6
0x13F68	0x13A82000  	_Box17+8
0x13F6C	0x13AA2000  	_Box17+10
0x13F70	0x13AC2000  	_Box17+12
0x13F74	0x13AE2000  	_Box17+14
0x13F78	0x13B02000  	_Box17+16
0x13F7C	0x13B22000  	_Box17+18
0x13F80	0x13B32000  	_Box17+19
0x13F84	0x13B42000  	_Box17+20
0x13F88	0x13B52000  	_Box17+21
0x13F8C	0x13B62000  	_Box17+22
0x13F90	0x13B82000  	_Box17+24
0x13F94	0x13BA2000  	_Box17+26
0x13F98	0x13BC2000  	_Box17+28
0x13F9C	0x13BE2000  	_Box17+30
0x13FA0	0x13C02000  	_Box17+32
0x13FA4	0x13C42000  	_Box17+36
0x13FA8	0x13C82000  	_Box17+40
0x13FAC	0xC5B10000  	_Image18OnPress+0
0x13FB0	0x13CC2000  	_Box17+44
0x13FB4	0x13D02000  	_Box17+48
0x13FB8	0x13782000  	_Image51+0
0x13FBC	0x137C2000  	_Image51+4
0x13FC0	0x137E2000  	_Image51+6
0x13FC4	0x13802000  	_Image51+8
0x13FC8	0x13822000  	_Image51+10
0x13FCC	0x13842000  	_Image51+12
0x13FD0	0x138E2000  	_Image51+22
0x13FD4	0x138F2000  	_Image51+23
0x13FD8	0x94B4003D  	#4035764
0x13FDC	0x13882000  	_Image51+16
0x13FE0	0x138C2000  	_Image51+20
0x13FE4	0x138D2000  	_Image51+21
0x13FE8	0x13902000  	_Image51+24
0x13FEC	0x13942000  	_Image51+28
0x13FF0	0x13982000  	_Image51+32
0x13FF4	0x139C2000  	_Image51+36
0x13FF8	0x13242000  	_Label73+0
0x13FFC	0x13282000  	_Label73+4
0x14000	0x132A2000  	_Label73+6
0x14004	0x132C2000  	_Label73+8
0x14008	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2509 :: 		Label73.Width           = 46;
0x1400A	0x212E    MOVS	R1, #46
0x1400C	0x487C    LDR	R0, [PC, #496]
0x1400E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2510 :: 		Label73.Height          = 25;
0x14010	0x2119    MOVS	R1, #25
0x14012	0x487C    LDR	R0, [PC, #496]
0x14014	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2511 :: 		Label73.Visible         = 1;
0x14016	0x2101    MOVS	R1, #1
0x14018	0x487B    LDR	R0, [PC, #492]
0x1401A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2512 :: 		Label73.Active          = 0;
0x1401C	0x2100    MOVS	R1, #0
0x1401E	0x487B    LDR	R0, [PC, #492]
0x14020	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2513 :: 		Label73.Caption         = Label73_Caption;
0x14022	0x497B    LDR	R1, [PC, #492]
0x14024	0x487B    LDR	R0, [PC, #492]
0x14026	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2514 :: 		Label73.FontName        = Arial_Black16x23_Regular;
0x14028	0xF6402123  MOVW	R1, #2595
0x1402C	0x487A    LDR	R0, [PC, #488]
0x1402E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2515 :: 		Label73.Font_Color      = 0x0000;
0x14030	0x2100    MOVS	R1, #0
0x14032	0x487A    LDR	R0, [PC, #488]
0x14034	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2516 :: 		Label73.OnUpPtr         = 0;
0x14036	0x2100    MOVS	R1, #0
0x14038	0x4879    LDR	R0, [PC, #484]
0x1403A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2517 :: 		Label73.OnDownPtr       = 0;
0x1403C	0x2100    MOVS	R1, #0
0x1403E	0x4879    LDR	R0, [PC, #484]
0x14040	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2518 :: 		Label73.OnClickPtr      = 0;
0x14042	0x2100    MOVS	R1, #0
0x14044	0x4878    LDR	R0, [PC, #480]
0x14046	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2519 :: 		Label73.OnPressPtr      = 0;
0x14048	0x2100    MOVS	R1, #0
0x1404A	0x4878    LDR	R0, [PC, #480]
0x1404C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2521 :: 		Box7.OwnerScreen     = &Set_clock;
0x1404E	0x4978    LDR	R1, [PC, #480]
0x14050	0x4878    LDR	R0, [PC, #480]
0x14052	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2522 :: 		Box7.Order           = 0;
0x14054	0x2100    MOVS	R1, #0
0x14056	0x4878    LDR	R0, [PC, #480]
0x14058	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2523 :: 		Box7.Left            = 376;
0x1405A	0xF2401178  MOVW	R1, #376
0x1405E	0x4877    LDR	R0, [PC, #476]
0x14060	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2524 :: 		Box7.Top             = 234;
0x14062	0x21EA    MOVS	R1, #234
0x14064	0x4876    LDR	R0, [PC, #472]
0x14066	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2525 :: 		Box7.Width           = 78;
0x14068	0x214E    MOVS	R1, #78
0x1406A	0x4876    LDR	R0, [PC, #472]
0x1406C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2526 :: 		Box7.Height          = 26;
0x1406E	0x211A    MOVS	R1, #26
0x14070	0x4875    LDR	R0, [PC, #468]
0x14072	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2527 :: 		Box7.Pen_Width       = 1;
0x14074	0x2101    MOVS	R1, #1
0x14076	0x4875    LDR	R0, [PC, #468]
0x14078	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2528 :: 		Box7.Pen_Color       = 0x0000;
0x1407A	0x2100    MOVS	R1, #0
0x1407C	0x4874    LDR	R0, [PC, #464]
0x1407E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2529 :: 		Box7.Visible         = 0;
0x14080	0x2100    MOVS	R1, #0
0x14082	0x4874    LDR	R0, [PC, #464]
0x14084	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2530 :: 		Box7.Active          = 1;
0x14086	0x2101    MOVS	R1, #1
0x14088	0x4873    LDR	R0, [PC, #460]
0x1408A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2531 :: 		Box7.Transparent     = 1;
0x1408C	0x2101    MOVS	R1, #1
0x1408E	0x4873    LDR	R0, [PC, #460]
0x14090	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2532 :: 		Box7.Gradient        = 1;
0x14092	0x2101    MOVS	R1, #1
0x14094	0x4872    LDR	R0, [PC, #456]
0x14096	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2533 :: 		Box7.Gradient_Orientation = 0;
0x14098	0x2100    MOVS	R1, #0
0x1409A	0x4872    LDR	R0, [PC, #456]
0x1409C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2534 :: 		Box7.Gradient_Start_Color = 0xFFFF;
0x1409E	0xF64F71FF  MOVW	R1, #65535
0x140A2	0x4871    LDR	R0, [PC, #452]
0x140A4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2535 :: 		Box7.Gradient_End_Color = 0xC618;
0x140A6	0xF24C6118  MOVW	R1, #50712
0x140AA	0x4870    LDR	R0, [PC, #448]
0x140AC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2536 :: 		Box7.Color           = 0xC618;
0x140AE	0xF24C6118  MOVW	R1, #50712
0x140B2	0x486F    LDR	R0, [PC, #444]
0x140B4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2537 :: 		Box7.PressColEnabled = 0;
0x140B6	0x2100    MOVS	R1, #0
0x140B8	0x486E    LDR	R0, [PC, #440]
0x140BA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2538 :: 		Box7.Press_Color     = 0xE71C;
0x140BC	0xF24E711C  MOVW	R1, #59164
0x140C0	0x486D    LDR	R0, [PC, #436]
0x140C2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2539 :: 		Box7.OnUpPtr         = 0;
0x140C4	0x2100    MOVS	R1, #0
0x140C6	0x486D    LDR	R0, [PC, #436]
0x140C8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2540 :: 		Box7.OnDownPtr       = 0;
0x140CA	0x2100    MOVS	R1, #0
0x140CC	0x486C    LDR	R0, [PC, #432]
0x140CE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2541 :: 		Box7.OnClickPtr      = Image18OnPress;
0x140D0	0x496C    LDR	R1, [PC, #432]
0x140D2	0x486D    LDR	R0, [PC, #436]
0x140D4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2542 :: 		Box7.OnPressPtr      = Image18OnPress;
0x140D6	0x496B    LDR	R1, [PC, #428]
0x140D8	0x486C    LDR	R0, [PC, #432]
0x140DA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2544 :: 		Box8.OwnerScreen     = &Set_clock;
0x140DC	0x4954    LDR	R1, [PC, #336]
0x140DE	0x486C    LDR	R0, [PC, #432]
0x140E0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2545 :: 		Box8.Order           = 1;
0x140E2	0x2101    MOVS	R1, #1
0x140E4	0x486B    LDR	R0, [PC, #428]
0x140E6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2546 :: 		Box8.Left            = 0;
0x140E8	0x2100    MOVS	R1, #0
0x140EA	0x486B    LDR	R0, [PC, #428]
0x140EC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2547 :: 		Box8.Top             = 38;
0x140EE	0x2126    MOVS	R1, #38
0x140F0	0x486A    LDR	R0, [PC, #424]
0x140F2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2548 :: 		Box8.Width           = 480;
0x140F4	0xF24011E0  MOVW	R1, #480
0x140F8	0x4869    LDR	R0, [PC, #420]
0x140FA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2549 :: 		Box8.Height          = 193;
0x140FC	0x21C1    MOVS	R1, #193
0x140FE	0x4869    LDR	R0, [PC, #420]
0x14100	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2550 :: 		Box8.Pen_Width       = 0;
0x14102	0x2100    MOVS	R1, #0
0x14104	0x4868    LDR	R0, [PC, #416]
0x14106	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2551 :: 		Box8.Pen_Color       = 0x0000;
0x14108	0x2100    MOVS	R1, #0
0x1410A	0x4868    LDR	R0, [PC, #416]
0x1410C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2552 :: 		Box8.Visible         = 0;
0x1410E	0x2100    MOVS	R1, #0
0x14110	0x4867    LDR	R0, [PC, #412]
0x14112	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2553 :: 		Box8.Active          = 1;
0x14114	0x2101    MOVS	R1, #1
0x14116	0x4867    LDR	R0, [PC, #412]
0x14118	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2554 :: 		Box8.Transparent     = 0;
0x1411A	0x2100    MOVS	R1, #0
0x1411C	0x4866    LDR	R0, [PC, #408]
0x1411E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2555 :: 		Box8.Gradient        = 0;
0x14120	0x2100    MOVS	R1, #0
0x14122	0x4866    LDR	R0, [PC, #408]
0x14124	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2556 :: 		Box8.Gradient_Orientation = 0;
0x14126	0x2100    MOVS	R1, #0
0x14128	0x4865    LDR	R0, [PC, #404]
0x1412A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2557 :: 		Box8.Gradient_Start_Color = 0xFFFF;
0x1412C	0xF64F71FF  MOVW	R1, #65535
0x14130	0x4864    LDR	R0, [PC, #400]
0x14132	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2558 :: 		Box8.Gradient_End_Color = 0xC618;
0x14134	0xF24C6118  MOVW	R1, #50712
0x14138	0x4863    LDR	R0, [PC, #396]
0x1413A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2559 :: 		Box8.Color           = 0x54C3;
0x1413C	0xF24541C3  MOVW	R1, #21699
0x14140	0x4862    LDR	R0, [PC, #392]
0x14142	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2560 :: 		Box8.PressColEnabled = 0;
0x14144	0x2100    MOVS	R1, #0
0x14146	0x4862    LDR	R0, [PC, #392]
0x14148	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2561 :: 		Box8.Press_Color     = 0xE71C;
0x1414A	0xF24E711C  MOVW	R1, #59164
0x1414E	0x4861    LDR	R0, [PC, #388]
0x14150	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2562 :: 		Box8.OnUpPtr         = 0;
0x14152	0x2100    MOVS	R1, #0
0x14154	0x4860    LDR	R0, [PC, #384]
0x14156	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2563 :: 		Box8.OnDownPtr       = 0;
0x14158	0x2100    MOVS	R1, #0
0x1415A	0x4860    LDR	R0, [PC, #384]
0x1415C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2564 :: 		Box8.OnClickPtr      = Box8OnClick;
0x1415E	0x4960    LDR	R1, [PC, #384]
0x14160	0x4860    LDR	R0, [PC, #384]
0x14162	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2565 :: 		Box8.OnPressPtr      = 0;
0x14164	0x2100    MOVS	R1, #0
0x14166	0x4860    LDR	R0, [PC, #384]
0x14168	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2567 :: 		Label2.OwnerScreen     = &Set_clock;
0x1416A	0x4931    LDR	R1, [PC, #196]
0x1416C	0x485F    LDR	R0, [PC, #380]
0x1416E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2568 :: 		Label2.Order           = 2;
0x14170	0x2102    MOVS	R1, #2
0x14172	0x485F    LDR	R0, [PC, #380]
0x14174	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2569 :: 		Label2.Left            = 191;
0x14176	0x21BF    MOVS	R1, #191
0x14178	0x485E    LDR	R0, [PC, #376]
0x1417A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2570 :: 		Label2.Top             = 94;
0x1417C	0x215E    MOVS	R1, #94
0x1417E	0x485E    LDR	R0, [PC, #376]
0x14180	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2571 :: 		Label2.Width           = 14;
0x14182	0x210E    MOVS	R1, #14
0x14184	0x485D    LDR	R0, [PC, #372]
0x14186	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2572 :: 		Label2.Height          = 85;
0x14188	0x2155    MOVS	R1, #85
0x1418A	0x485D    LDR	R0, [PC, #372]
0x1418C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2573 :: 		Label2.Visible         = 1;
0x1418E	0x2101    MOVS	R1, #1
0x14190	0x485C    LDR	R0, [PC, #368]
0x14192	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2574 :: 		Label2.Active          = 1;
0x14194	0x2101    MOVS	R1, #1
0x14196	0x485C    LDR	R0, [PC, #368]
0x14198	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2575 :: 		Label2.Caption         = Label2_Caption;
0x1419A	0x495C    LDR	R1, [PC, #368]
0x1419C	0x485C    LDR	R0, [PC, #368]
0x1419E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2576 :: 		Label2.FontName        = Open_Sans_Light51x78_Regular;
0x141A0	0xF64E31CD  MOVW	R1, #60365
0x141A4	0x485B    LDR	R0, [PC, #364]
0x141A6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2577 :: 		Label2.Font_Color      = 0xFFFF;
0x141A8	0xF64F71FF  MOVW	R1, #65535
0x141AC	0x485A    LDR	R0, [PC, #360]
0x141AE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2578 :: 		Label2.OnUpPtr         = 0;
0x141B0	0x2100    MOVS	R1, #0
0x141B2	0x485A    LDR	R0, [PC, #360]
0x141B4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2579 :: 		Label2.OnDownPtr       = 0;
0x141B6	0x2100    MOVS	R1, #0
0x141B8	0x4859    LDR	R0, [PC, #356]
0x141BA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2580 :: 		Label2.OnClickPtr      = 0;
0x141BC	0x2100    MOVS	R1, #0
0x141BE	0x4859    LDR	R0, [PC, #356]
0x141C0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2581 :: 		Label2.OnPressPtr      = 0;
0x141C2	0x2100    MOVS	R1, #0
0x141C4	0x4858    LDR	R0, [PC, #352]
0x141C6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2583 :: 		Box10.OwnerScreen     = &Set_clock;
0x141C8	0x4919    LDR	R1, [PC, #100]
0x141CA	0x4858    LDR	R0, [PC, #352]
0x141CC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2584 :: 		Box10.Order           = 3;
0x141CE	0x2103    MOVS	R1, #3
0x141D0	0x4857    LDR	R0, [PC, #348]
0x141D2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2585 :: 		Box10.Left            = 108;
0x141D4	0x216C    MOVS	R1, #108
0x141D6	0x4857    LDR	R0, [PC, #348]
0x141D8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2586 :: 		Box10.Top             = 42;
0x141DA	0x212A    MOVS	R1, #42
0x141DC	0x4856    LDR	R0, [PC, #344]
0x141DE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2587 :: 		Box10.Width           = 37;
0x141E0	0x2125    MOVS	R1, #37
0x141E2	0x4856    LDR	R0, [PC, #344]
0x141E4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2588 :: 		Box10.Height          = 194;
0x141E6	0x21C2    MOVS	R1, #194
0x141E8	0x4855    LDR	R0, [PC, #340]
0x141EA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2589 :: 		Box10.Pen_Width       = 0;
0x141EC	0x2100    MOVS	R1, #0
0x141EE	0x4855    LDR	R0, [PC, #340]
0x141F0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2590 :: 		Box10.Pen_Color       = 0x0000;
0x141F2	0x2100    MOVS	R1, #0
0x141F4	0x4854    LDR	R0, [PC, #336]
0x141F6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2591 :: 		Box10.Visible         = 0;
0x141F8	0x2100    MOVS	R1, #0
0x141FA	0x4854    LDR	R0, [PC, #336]
0x141FC	0xF000B8A8  B	#336
0x14200	0x132E2000  	_Label73+10
0x14204	0x13302000  	_Label73+12
0x14208	0x133E2000  	_Label73+26
0x1420C	0x133F2000  	_Label73+27
0x14210	0x01702000  	_Label73_Caption+0
0x14214	0x13342000  	_Label73+16
0x14218	0x13382000  	_Label73+20
0x1421C	0x133C2000  	_Label73+24
0x14220	0x13402000  	_Label73+28
0x14224	0x13442000  	_Label73+32
0x14228	0x13482000  	_Label73+36
0x1422C	0x134C2000  	_Label73+40
0x14230	0x22E82000  	_Set_clock+0
0x14234	0x14D02000  	_Box7+0
0x14238	0x14D42000  	_Box7+4
0x1423C	0x14D62000  	_Box7+6
0x14240	0x14D82000  	_Box7+8
0x14244	0x14DA2000  	_Box7+10
0x14248	0x14DC2000  	_Box7+12
0x1424C	0x14DE2000  	_Box7+14
0x14250	0x14E02000  	_Box7+16
0x14254	0x14E22000  	_Box7+18
0x14258	0x14E32000  	_Box7+19
0x1425C	0x14E42000  	_Box7+20
0x14260	0x14E52000  	_Box7+21
0x14264	0x14E62000  	_Box7+22
0x14268	0x14E82000  	_Box7+24
0x1426C	0x14EA2000  	_Box7+26
0x14270	0x14EC2000  	_Box7+28
0x14274	0x14EE2000  	_Box7+30
0x14278	0x14F02000  	_Box7+32
0x1427C	0x14F42000  	_Box7+36
0x14280	0x14F82000  	_Box7+40
0x14284	0xC5B10000  	_Image18OnPress+0
0x14288	0x14FC2000  	_Box7+44
0x1428C	0x15002000  	_Box7+48
0x14290	0x15042000  	_Box8+0
0x14294	0x15082000  	_Box8+4
0x14298	0x150A2000  	_Box8+6
0x1429C	0x150C2000  	_Box8+8
0x142A0	0x150E2000  	_Box8+10
0x142A4	0x15102000  	_Box8+12
0x142A8	0x15122000  	_Box8+14
0x142AC	0x15142000  	_Box8+16
0x142B0	0x15162000  	_Box8+18
0x142B4	0x15172000  	_Box8+19
0x142B8	0x15182000  	_Box8+20
0x142BC	0x15192000  	_Box8+21
0x142C0	0x151A2000  	_Box8+22
0x142C4	0x151C2000  	_Box8+24
0x142C8	0x151E2000  	_Box8+26
0x142CC	0x15202000  	_Box8+28
0x142D0	0x15222000  	_Box8+30
0x142D4	0x15242000  	_Box8+32
0x142D8	0x15282000  	_Box8+36
0x142DC	0x152C2000  	_Box8+40
0x142E0	0xC5010000  	_Box8OnClick+0
0x142E4	0x15302000  	_Box8+44
0x142E8	0x15342000  	_Box8+48
0x142EC	0x13D42000  	_Label2+0
0x142F0	0x13D82000  	_Label2+4
0x142F4	0x13DA2000  	_Label2+6
0x142F8	0x13DC2000  	_Label2+8
0x142FC	0x13DE2000  	_Label2+10
0x14300	0x13E02000  	_Label2+12
0x14304	0x13EE2000  	_Label2+26
0x14308	0x13EF2000  	_Label2+27
0x1430C	0x01752000  	_Label2_Caption+0
0x14310	0x13E42000  	_Label2+16
0x14314	0x13E82000  	_Label2+20
0x14318	0x13EC2000  	_Label2+24
0x1431C	0x13F02000  	_Label2+28
0x14320	0x13F42000  	_Label2+32
0x14324	0x13F82000  	_Label2+36
0x14328	0x13FC2000  	_Label2+40
0x1432C	0x15382000  	_Box10+0
0x14330	0x153C2000  	_Box10+4
0x14334	0x153E2000  	_Box10+6
0x14338	0x15402000  	_Box10+8
0x1433C	0x15422000  	_Box10+10
0x14340	0x15442000  	_Box10+12
0x14344	0x15462000  	_Box10+14
0x14348	0x15482000  	_Box10+16
0x1434C	0x154A2000  	_Box10+18
0x14350	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2592 :: 		Box10.Active          = 1;
0x14352	0x2101    MOVS	R1, #1
0x14354	0x487B    LDR	R0, [PC, #492]
0x14356	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2593 :: 		Box10.Transparent     = 0;
0x14358	0x2100    MOVS	R1, #0
0x1435A	0x487B    LDR	R0, [PC, #492]
0x1435C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2594 :: 		Box10.Gradient        = 0;
0x1435E	0x2100    MOVS	R1, #0
0x14360	0x487A    LDR	R0, [PC, #488]
0x14362	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2595 :: 		Box10.Gradient_Orientation = 0;
0x14364	0x2100    MOVS	R1, #0
0x14366	0x487A    LDR	R0, [PC, #488]
0x14368	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2596 :: 		Box10.Gradient_Start_Color = 0xFFFF;
0x1436A	0xF64F71FF  MOVW	R1, #65535
0x1436E	0x4879    LDR	R0, [PC, #484]
0x14370	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2597 :: 		Box10.Gradient_End_Color = 0xC618;
0x14372	0xF24C6118  MOVW	R1, #50712
0x14376	0x4878    LDR	R0, [PC, #480]
0x14378	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2598 :: 		Box10.Color           = 0xC618;
0x1437A	0xF24C6118  MOVW	R1, #50712
0x1437E	0x4877    LDR	R0, [PC, #476]
0x14380	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2599 :: 		Box10.PressColEnabled = 1;
0x14382	0x2101    MOVS	R1, #1
0x14384	0x4876    LDR	R0, [PC, #472]
0x14386	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2600 :: 		Box10.Press_Color     = 0xE71C;
0x14388	0xF24E711C  MOVW	R1, #59164
0x1438C	0x4875    LDR	R0, [PC, #468]
0x1438E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2601 :: 		Box10.OnUpPtr         = 0;
0x14390	0x2100    MOVS	R1, #0
0x14392	0x4875    LDR	R0, [PC, #468]
0x14394	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2602 :: 		Box10.OnDownPtr       = 0;
0x14396	0x2100    MOVS	R1, #0
0x14398	0x4874    LDR	R0, [PC, #464]
0x1439A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2603 :: 		Box10.OnClickPtr      = 0;
0x1439C	0x2100    MOVS	R1, #0
0x1439E	0x4874    LDR	R0, [PC, #464]
0x143A0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2604 :: 		Box10.OnPressPtr      = Box10OnPress;
0x143A2	0x4974    LDR	R1, [PC, #464]
0x143A4	0x4874    LDR	R0, [PC, #464]
0x143A6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2606 :: 		Box11.OwnerScreen     = &Set_clock;
0x143A8	0x4974    LDR	R1, [PC, #464]
0x143AA	0x4875    LDR	R0, [PC, #468]
0x143AC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2607 :: 		Box11.Order           = 4;
0x143AE	0x2104    MOVS	R1, #4
0x143B0	0x4874    LDR	R0, [PC, #464]
0x143B2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2608 :: 		Box11.Left            = 146;
0x143B4	0x2192    MOVS	R1, #146
0x143B6	0x4874    LDR	R0, [PC, #464]
0x143B8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2609 :: 		Box11.Top             = 42;
0x143BA	0x212A    MOVS	R1, #42
0x143BC	0x4873    LDR	R0, [PC, #460]
0x143BE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2610 :: 		Box11.Width           = 37;
0x143C0	0x2125    MOVS	R1, #37
0x143C2	0x4873    LDR	R0, [PC, #460]
0x143C4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2611 :: 		Box11.Height          = 194;
0x143C6	0x21C2    MOVS	R1, #194
0x143C8	0x4872    LDR	R0, [PC, #456]
0x143CA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2612 :: 		Box11.Pen_Width       = 0;
0x143CC	0x2100    MOVS	R1, #0
0x143CE	0x4872    LDR	R0, [PC, #456]
0x143D0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2613 :: 		Box11.Pen_Color       = 0x0000;
0x143D2	0x2100    MOVS	R1, #0
0x143D4	0x4871    LDR	R0, [PC, #452]
0x143D6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2614 :: 		Box11.Visible         = 0;
0x143D8	0x2100    MOVS	R1, #0
0x143DA	0x4871    LDR	R0, [PC, #452]
0x143DC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2615 :: 		Box11.Active          = 1;
0x143DE	0x2101    MOVS	R1, #1
0x143E0	0x4870    LDR	R0, [PC, #448]
0x143E2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2616 :: 		Box11.Transparent     = 0;
0x143E4	0x2100    MOVS	R1, #0
0x143E6	0x4870    LDR	R0, [PC, #448]
0x143E8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2617 :: 		Box11.Gradient        = 0;
0x143EA	0x2100    MOVS	R1, #0
0x143EC	0x486F    LDR	R0, [PC, #444]
0x143EE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2618 :: 		Box11.Gradient_Orientation = 0;
0x143F0	0x2100    MOVS	R1, #0
0x143F2	0x486F    LDR	R0, [PC, #444]
0x143F4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2619 :: 		Box11.Gradient_Start_Color = 0xFFFF;
0x143F6	0xF64F71FF  MOVW	R1, #65535
0x143FA	0x486E    LDR	R0, [PC, #440]
0x143FC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2620 :: 		Box11.Gradient_End_Color = 0xC618;
0x143FE	0xF24C6118  MOVW	R1, #50712
0x14402	0x486D    LDR	R0, [PC, #436]
0x14404	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2621 :: 		Box11.Color           = 0xC618;
0x14406	0xF24C6118  MOVW	R1, #50712
0x1440A	0x486C    LDR	R0, [PC, #432]
0x1440C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2622 :: 		Box11.PressColEnabled = 1;
0x1440E	0x2101    MOVS	R1, #1
0x14410	0x486B    LDR	R0, [PC, #428]
0x14412	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2623 :: 		Box11.Press_Color     = 0xE71C;
0x14414	0xF24E711C  MOVW	R1, #59164
0x14418	0x486A    LDR	R0, [PC, #424]
0x1441A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2624 :: 		Box11.OnUpPtr         = 0;
0x1441C	0x2100    MOVS	R1, #0
0x1441E	0x486A    LDR	R0, [PC, #424]
0x14420	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2625 :: 		Box11.OnDownPtr       = 0;
0x14422	0x2100    MOVS	R1, #0
0x14424	0x4869    LDR	R0, [PC, #420]
0x14426	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2626 :: 		Box11.OnClickPtr      = 0;
0x14428	0x2100    MOVS	R1, #0
0x1442A	0x4869    LDR	R0, [PC, #420]
0x1442C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2627 :: 		Box11.OnPressPtr      = Box11OnPress;
0x1442E	0x4969    LDR	R1, [PC, #420]
0x14430	0x4869    LDR	R0, [PC, #420]
0x14432	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2629 :: 		Label5.OwnerScreen     = &Set_clock;
0x14434	0x4951    LDR	R1, [PC, #324]
0x14436	0x4869    LDR	R0, [PC, #420]
0x14438	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2630 :: 		Label5.Order           = 5;
0x1443A	0x2105    MOVS	R1, #5
0x1443C	0x4868    LDR	R0, [PC, #416]
0x1443E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2631 :: 		Label5.Left            = 408;
0x14440	0xF2401198  MOVW	R1, #408
0x14444	0x4867    LDR	R0, [PC, #412]
0x14446	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2632 :: 		Label5.Top             = 236;
0x14448	0x21EC    MOVS	R1, #236
0x1444A	0x4867    LDR	R0, [PC, #412]
0x1444C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2633 :: 		Label5.Width           = 46;
0x1444E	0x212E    MOVS	R1, #46
0x14450	0x4866    LDR	R0, [PC, #408]
0x14452	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2634 :: 		Label5.Height          = 25;
0x14454	0x2119    MOVS	R1, #25
0x14456	0x4866    LDR	R0, [PC, #408]
0x14458	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2635 :: 		Label5.Visible         = 1;
0x1445A	0x2101    MOVS	R1, #1
0x1445C	0x4865    LDR	R0, [PC, #404]
0x1445E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2636 :: 		Label5.Active          = 0;
0x14460	0x2100    MOVS	R1, #0
0x14462	0x4865    LDR	R0, [PC, #404]
0x14464	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2637 :: 		Label5.Caption         = Label5_Caption;
0x14466	0x4965    LDR	R1, [PC, #404]
0x14468	0x4865    LDR	R0, [PC, #404]
0x1446A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2638 :: 		Label5.FontName        = Arial_Black16x23_Regular;
0x1446C	0xF6402123  MOVW	R1, #2595
0x14470	0x4864    LDR	R0, [PC, #400]
0x14472	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2639 :: 		Label5.Font_Color      = 0x0000;
0x14474	0x2100    MOVS	R1, #0
0x14476	0x4864    LDR	R0, [PC, #400]
0x14478	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2640 :: 		Label5.OnUpPtr         = 0;
0x1447A	0x2100    MOVS	R1, #0
0x1447C	0x4863    LDR	R0, [PC, #396]
0x1447E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2641 :: 		Label5.OnDownPtr       = 0;
0x14480	0x2100    MOVS	R1, #0
0x14482	0x4863    LDR	R0, [PC, #396]
0x14484	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2642 :: 		Label5.OnClickPtr      = 0;
0x14486	0x2100    MOVS	R1, #0
0x14488	0x4862    LDR	R0, [PC, #392]
0x1448A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2643 :: 		Label5.OnPressPtr      = 0;
0x1448C	0x2100    MOVS	R1, #0
0x1448E	0x4862    LDR	R0, [PC, #392]
0x14490	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2645 :: 		Image18.OwnerScreen     = &Set_clock;
0x14492	0x493A    LDR	R1, [PC, #232]
0x14494	0x4861    LDR	R0, [PC, #388]
0x14496	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2646 :: 		Image18.Order           = 6;
0x14498	0x2106    MOVS	R1, #6
0x1449A	0x4861    LDR	R0, [PC, #388]
0x1449C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2647 :: 		Image18.Left            = 380;
0x1449E	0xF240117C  MOVW	R1, #380
0x144A2	0x4860    LDR	R0, [PC, #384]
0x144A4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2648 :: 		Image18.Top             = 236;
0x144A6	0x21EC    MOVS	R1, #236
0x144A8	0x485F    LDR	R0, [PC, #380]
0x144AA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2649 :: 		Image18.Width           = 22;
0x144AC	0x2116    MOVS	R1, #22
0x144AE	0x485F    LDR	R0, [PC, #380]
0x144B0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2650 :: 		Image18.Height          = 22;
0x144B2	0x2116    MOVS	R1, #22
0x144B4	0x485E    LDR	R0, [PC, #376]
0x144B6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2651 :: 		Image18.Picture_Type    = 0;
0x144B8	0x2100    MOVS	R1, #0
0x144BA	0x485E    LDR	R0, [PC, #376]
0x144BC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2652 :: 		Image18.Picture_Ratio   = 1;
0x144BE	0x2101    MOVS	R1, #1
0x144C0	0x485D    LDR	R0, [PC, #372]
0x144C2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2653 :: 		Image18.Picture_Name    = icon_ok_bmp;
0x144C4	0x495D    LDR	R1, [PC, #372]
0x144C6	0x485E    LDR	R0, [PC, #376]
0x144C8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2654 :: 		Image18.Visible         = 1;
0x144CA	0x2101    MOVS	R1, #1
0x144CC	0x485D    LDR	R0, [PC, #372]
0x144CE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2655 :: 		Image18.Active          = 0;
0x144D0	0x2100    MOVS	R1, #0
0x144D2	0x485D    LDR	R0, [PC, #372]
0x144D4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2656 :: 		Image18.OnUpPtr         = 0;
0x144D6	0x2100    MOVS	R1, #0
0x144D8	0x485C    LDR	R0, [PC, #368]
0x144DA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2657 :: 		Image18.OnDownPtr       = 0;
0x144DC	0x2100    MOVS	R1, #0
0x144DE	0x485C    LDR	R0, [PC, #368]
0x144E0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2658 :: 		Image18.OnClickPtr      = Image18OnPress;
0x144E2	0x495C    LDR	R1, [PC, #368]
0x144E4	0x485C    LDR	R0, [PC, #368]
0x144E6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2659 :: 		Image18.OnPressPtr      = Image18OnPress;
0x144E8	0x495A    LDR	R1, [PC, #360]
0x144EA	0x485C    LDR	R0, [PC, #368]
0x144EC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2661 :: 		Box3.OwnerScreen     = &Set_clock;
0x144EE	0x4923    LDR	R1, [PC, #140]
0x144F0	0x485B    LDR	R0, [PC, #364]
0x144F2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2662 :: 		Box3.Order           = 7;
0x144F4	0x2107    MOVS	R1, #7
0x144F6	0x485B    LDR	R0, [PC, #364]
0x144F8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2663 :: 		Box3.Left            = 212;
0x144FA	0x21D4    MOVS	R1, #212
0x144FC	0x485A    LDR	R0, [PC, #360]
0x144FE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2664 :: 		Box3.Top             = 42;
0x14500	0x212A    MOVS	R1, #42
0x14502	0x485A    LDR	R0, [PC, #360]
0x14504	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2665 :: 		Box3.Width           = 37;
0x14506	0x2125    MOVS	R1, #37
0x14508	0x4859    LDR	R0, [PC, #356]
0x1450A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2666 :: 		Box3.Height          = 194;
0x1450C	0x21C2    MOVS	R1, #194
0x1450E	0x4859    LDR	R0, [PC, #356]
0x14510	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2667 :: 		Box3.Pen_Width       = 0;
0x14512	0x2100    MOVS	R1, #0
0x14514	0x4858    LDR	R0, [PC, #352]
0x14516	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2668 :: 		Box3.Pen_Color       = 0x0000;
0x14518	0x2100    MOVS	R1, #0
0x1451A	0x4858    LDR	R0, [PC, #352]
0x1451C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2669 :: 		Box3.Visible         = 0;
0x1451E	0x2100    MOVS	R1, #0
0x14520	0x4857    LDR	R0, [PC, #348]
0x14522	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2670 :: 		Box3.Active          = 1;
0x14524	0x2101    MOVS	R1, #1
0x14526	0x4857    LDR	R0, [PC, #348]
0x14528	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2671 :: 		Box3.Transparent     = 0;
0x1452A	0x2100    MOVS	R1, #0
0x1452C	0x4856    LDR	R0, [PC, #344]
0x1452E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2672 :: 		Box3.Gradient        = 0;
0x14530	0x2100    MOVS	R1, #0
0x14532	0x4856    LDR	R0, [PC, #344]
0x14534	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2673 :: 		Box3.Gradient_Orientation = 0;
0x14536	0x2100    MOVS	R1, #0
0x14538	0x4855    LDR	R0, [PC, #340]
0x1453A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2674 :: 		Box3.Gradient_Start_Color = 0xFFFF;
0x1453C	0xF64F71FF  MOVW	R1, #65535
0x14540	0xF000B8A8  B	#336
0x14544	0x154B2000  	_Box10+19
0x14548	0x154C2000  	_Box10+20
0x1454C	0x154D2000  	_Box10+21
0x14550	0x154E2000  	_Box10+22
0x14554	0x15502000  	_Box10+24
0x14558	0x15522000  	_Box10+26
0x1455C	0x15542000  	_Box10+28
0x14560	0x15562000  	_Box10+30
0x14564	0x15582000  	_Box10+32
0x14568	0x155C2000  	_Box10+36
0x1456C	0x15602000  	_Box10+40
0x14570	0x15642000  	_Box10+44
0x14574	0xC4ED0000  	_Box10OnPress+0
0x14578	0x15682000  	_Box10+48
0x1457C	0x22E82000  	_Set_clock+0
0x14580	0x156C2000  	_Box11+0
0x14584	0x15702000  	_Box11+4
0x14588	0x15722000  	_Box11+6
0x1458C	0x15742000  	_Box11+8
0x14590	0x15762000  	_Box11+10
0x14594	0x15782000  	_Box11+12
0x14598	0x157A2000  	_Box11+14
0x1459C	0x157C2000  	_Box11+16
0x145A0	0x157E2000  	_Box11+18
0x145A4	0x157F2000  	_Box11+19
0x145A8	0x15802000  	_Box11+20
0x145AC	0x15812000  	_Box11+21
0x145B0	0x15822000  	_Box11+22
0x145B4	0x15842000  	_Box11+24
0x145B8	0x15862000  	_Box11+26
0x145BC	0x15882000  	_Box11+28
0x145C0	0x158A2000  	_Box11+30
0x145C4	0x158C2000  	_Box11+32
0x145C8	0x15902000  	_Box11+36
0x145CC	0x15942000  	_Box11+40
0x145D0	0x15982000  	_Box11+44
0x145D4	0xC5290000  	_Box11OnPress+0
0x145D8	0x159C2000  	_Box11+48
0x145DC	0x14002000  	_Label5+0
0x145E0	0x14042000  	_Label5+4
0x145E4	0x14062000  	_Label5+6
0x145E8	0x14082000  	_Label5+8
0x145EC	0x140A2000  	_Label5+10
0x145F0	0x140C2000  	_Label5+12
0x145F4	0x141A2000  	_Label5+26
0x145F8	0x141B2000  	_Label5+27
0x145FC	0x01772000  	_Label5_Caption+0
0x14600	0x14102000  	_Label5+16
0x14604	0x14142000  	_Label5+20
0x14608	0x14182000  	_Label5+24
0x1460C	0x141C2000  	_Label5+28
0x14610	0x14202000  	_Label5+32
0x14614	0x14242000  	_Label5+36
0x14618	0x14282000  	_Label5+40
0x1461C	0x14582000  	_Image18+0
0x14620	0x145C2000  	_Image18+4
0x14624	0x145E2000  	_Image18+6
0x14628	0x14602000  	_Image18+8
0x1462C	0x14622000  	_Image18+10
0x14630	0x14642000  	_Image18+12
0x14634	0x146E2000  	_Image18+22
0x14638	0x146F2000  	_Image18+23
0x1463C	0x94B4003D  	#4035764
0x14640	0x14682000  	_Image18+16
0x14644	0x146C2000  	_Image18+20
0x14648	0x146D2000  	_Image18+21
0x1464C	0x14702000  	_Image18+24
0x14650	0x14742000  	_Image18+28
0x14654	0xC5B10000  	_Image18OnPress+0
0x14658	0x14782000  	_Image18+32
0x1465C	0x147C2000  	_Image18+36
0x14660	0x15A02000  	_Box3+0
0x14664	0x15A42000  	_Box3+4
0x14668	0x15A62000  	_Box3+6
0x1466C	0x15A82000  	_Box3+8
0x14670	0x15AA2000  	_Box3+10
0x14674	0x15AC2000  	_Box3+12
0x14678	0x15AE2000  	_Box3+14
0x1467C	0x15B02000  	_Box3+16
0x14680	0x15B22000  	_Box3+18
0x14684	0x15B32000  	_Box3+19
0x14688	0x15B42000  	_Box3+20
0x1468C	0x15B52000  	_Box3+21
0x14690	0x15B62000  	_Box3+22
0x14694	0x487B    LDR	R0, [PC, #492]
0x14696	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2675 :: 		Box3.Gradient_End_Color = 0xC618;
0x14698	0xF24C6118  MOVW	R1, #50712
0x1469C	0x487A    LDR	R0, [PC, #488]
0x1469E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2676 :: 		Box3.Color           = 0xC618;
0x146A0	0xF24C6118  MOVW	R1, #50712
0x146A4	0x4879    LDR	R0, [PC, #484]
0x146A6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2677 :: 		Box3.PressColEnabled = 1;
0x146A8	0x2101    MOVS	R1, #1
0x146AA	0x4879    LDR	R0, [PC, #484]
0x146AC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2678 :: 		Box3.Press_Color     = 0xE71C;
0x146AE	0xF24E711C  MOVW	R1, #59164
0x146B2	0x4878    LDR	R0, [PC, #480]
0x146B4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2679 :: 		Box3.OnUpPtr         = 0;
0x146B6	0x2100    MOVS	R1, #0
0x146B8	0x4877    LDR	R0, [PC, #476]
0x146BA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2680 :: 		Box3.OnDownPtr       = 0;
0x146BC	0x2100    MOVS	R1, #0
0x146BE	0x4877    LDR	R0, [PC, #476]
0x146C0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2681 :: 		Box3.OnClickPtr      = 0;
0x146C2	0x2100    MOVS	R1, #0
0x146C4	0x4876    LDR	R0, [PC, #472]
0x146C6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2682 :: 		Box3.OnPressPtr      = Box3OnPress;
0x146C8	0x4976    LDR	R1, [PC, #472]
0x146CA	0x4877    LDR	R0, [PC, #476]
0x146CC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2684 :: 		Box4.OwnerScreen     = &Set_clock;
0x146CE	0x4977    LDR	R1, [PC, #476]
0x146D0	0x4877    LDR	R0, [PC, #476]
0x146D2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2685 :: 		Box4.Order           = 8;
0x146D4	0x2108    MOVS	R1, #8
0x146D6	0x4877    LDR	R0, [PC, #476]
0x146D8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2686 :: 		Box4.Left            = 250;
0x146DA	0x21FA    MOVS	R1, #250
0x146DC	0x4876    LDR	R0, [PC, #472]
0x146DE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2687 :: 		Box4.Top             = 42;
0x146E0	0x212A    MOVS	R1, #42
0x146E2	0x4876    LDR	R0, [PC, #472]
0x146E4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2688 :: 		Box4.Width           = 37;
0x146E6	0x2125    MOVS	R1, #37
0x146E8	0x4875    LDR	R0, [PC, #468]
0x146EA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2689 :: 		Box4.Height          = 194;
0x146EC	0x21C2    MOVS	R1, #194
0x146EE	0x4875    LDR	R0, [PC, #468]
0x146F0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2690 :: 		Box4.Pen_Width       = 0;
0x146F2	0x2100    MOVS	R1, #0
0x146F4	0x4874    LDR	R0, [PC, #464]
0x146F6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2691 :: 		Box4.Pen_Color       = 0x0000;
0x146F8	0x2100    MOVS	R1, #0
0x146FA	0x4874    LDR	R0, [PC, #464]
0x146FC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2692 :: 		Box4.Visible         = 0;
0x146FE	0x2100    MOVS	R1, #0
0x14700	0x4873    LDR	R0, [PC, #460]
0x14702	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2693 :: 		Box4.Active          = 1;
0x14704	0x2101    MOVS	R1, #1
0x14706	0x4873    LDR	R0, [PC, #460]
0x14708	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2694 :: 		Box4.Transparent     = 0;
0x1470A	0x2100    MOVS	R1, #0
0x1470C	0x4872    LDR	R0, [PC, #456]
0x1470E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2695 :: 		Box4.Gradient        = 0;
0x14710	0x2100    MOVS	R1, #0
0x14712	0x4872    LDR	R0, [PC, #456]
0x14714	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2696 :: 		Box4.Gradient_Orientation = 0;
0x14716	0x2100    MOVS	R1, #0
0x14718	0x4871    LDR	R0, [PC, #452]
0x1471A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2697 :: 		Box4.Gradient_Start_Color = 0xFFFF;
0x1471C	0xF64F71FF  MOVW	R1, #65535
0x14720	0x4870    LDR	R0, [PC, #448]
0x14722	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2698 :: 		Box4.Gradient_End_Color = 0xC618;
0x14724	0xF24C6118  MOVW	R1, #50712
0x14728	0x486F    LDR	R0, [PC, #444]
0x1472A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2699 :: 		Box4.Color           = 0xC618;
0x1472C	0xF24C6118  MOVW	R1, #50712
0x14730	0x486E    LDR	R0, [PC, #440]
0x14732	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2700 :: 		Box4.PressColEnabled = 1;
0x14734	0x2101    MOVS	R1, #1
0x14736	0x486E    LDR	R0, [PC, #440]
0x14738	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2701 :: 		Box4.Press_Color     = 0xE71C;
0x1473A	0xF24E711C  MOVW	R1, #59164
0x1473E	0x486D    LDR	R0, [PC, #436]
0x14740	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2702 :: 		Box4.OnUpPtr         = 0;
0x14742	0x2100    MOVS	R1, #0
0x14744	0x486C    LDR	R0, [PC, #432]
0x14746	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2703 :: 		Box4.OnDownPtr       = 0;
0x14748	0x2100    MOVS	R1, #0
0x1474A	0x486C    LDR	R0, [PC, #432]
0x1474C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2704 :: 		Box4.OnClickPtr      = 0;
0x1474E	0x2100    MOVS	R1, #0
0x14750	0x486B    LDR	R0, [PC, #428]
0x14752	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2705 :: 		Box4.OnPressPtr      = Box4OnPress;
0x14754	0x496B    LDR	R1, [PC, #428]
0x14756	0x486C    LDR	R0, [PC, #432]
0x14758	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2707 :: 		Image19.OwnerScreen     = &Set_clock;
0x1475A	0x4954    LDR	R1, [PC, #336]
0x1475C	0x486B    LDR	R0, [PC, #428]
0x1475E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2708 :: 		Image19.Order           = 9;
0x14760	0x2109    MOVS	R1, #9
0x14762	0x486B    LDR	R0, [PC, #428]
0x14764	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2709 :: 		Image19.Left            = 475;
0x14766	0xF24011DB  MOVW	R1, #475
0x1476A	0x486A    LDR	R0, [PC, #424]
0x1476C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2710 :: 		Image19.Top             = 248;
0x1476E	0x21F8    MOVS	R1, #248
0x14770	0x4869    LDR	R0, [PC, #420]
0x14772	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2711 :: 		Image19.Width           = 36;
0x14774	0x2124    MOVS	R1, #36
0x14776	0x4869    LDR	R0, [PC, #420]
0x14778	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2712 :: 		Image19.Height          = 740;
0x1477A	0xF24021E4  MOVW	R1, #740
0x1477E	0x4868    LDR	R0, [PC, #416]
0x14780	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2713 :: 		Image19.Picture_Type    = 0;
0x14782	0x2100    MOVS	R1, #0
0x14784	0x4867    LDR	R0, [PC, #412]
0x14786	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2714 :: 		Image19.Picture_Ratio   = 1;
0x14788	0x2101    MOVS	R1, #1
0x1478A	0x4867    LDR	R0, [PC, #412]
0x1478C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2715 :: 		Image19.Picture_Name    = stripe_black_bmp;
0x1478E	0x4967    LDR	R1, [PC, #412]
0x14790	0x4867    LDR	R0, [PC, #412]
0x14792	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2716 :: 		Image19.Visible         = 0;
0x14794	0x2100    MOVS	R1, #0
0x14796	0x4867    LDR	R0, [PC, #412]
0x14798	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2717 :: 		Image19.Active          = 0;
0x1479A	0x2100    MOVS	R1, #0
0x1479C	0x4866    LDR	R0, [PC, #408]
0x1479E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2718 :: 		Image19.OnUpPtr         = 0;
0x147A0	0x2100    MOVS	R1, #0
0x147A2	0x4866    LDR	R0, [PC, #408]
0x147A4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2719 :: 		Image19.OnDownPtr       = 0;
0x147A6	0x2100    MOVS	R1, #0
0x147A8	0x4865    LDR	R0, [PC, #404]
0x147AA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2720 :: 		Image19.OnClickPtr      = 0;
0x147AC	0x2100    MOVS	R1, #0
0x147AE	0x4865    LDR	R0, [PC, #404]
0x147B0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2721 :: 		Image19.OnPressPtr      = 0;
0x147B2	0x2100    MOVS	R1, #0
0x147B4	0x4864    LDR	R0, [PC, #400]
0x147B6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2723 :: 		Label6.OwnerScreen     = &Set_clock;
0x147B8	0x493C    LDR	R1, [PC, #240]
0x147BA	0x4864    LDR	R0, [PC, #400]
0x147BC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2724 :: 		Label6.Order           = 10;
0x147BE	0x210A    MOVS	R1, #10
0x147C0	0x4863    LDR	R0, [PC, #396]
0x147C2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2725 :: 		Label6.Left            = 15;
0x147C4	0x210F    MOVS	R1, #15
0x147C6	0x4863    LDR	R0, [PC, #396]
0x147C8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2726 :: 		Label6.Top             = 235;
0x147CA	0x21EB    MOVS	R1, #235
0x147CC	0x4862    LDR	R0, [PC, #392]
0x147CE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2727 :: 		Label6.Width           = 0;
0x147D0	0x2100    MOVS	R1, #0
0x147D2	0x4862    LDR	R0, [PC, #392]
0x147D4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2728 :: 		Label6.Height          = 19;
0x147D6	0x2113    MOVS	R1, #19
0x147D8	0x4861    LDR	R0, [PC, #388]
0x147DA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2729 :: 		Label6.Visible         = 1;
0x147DC	0x2101    MOVS	R1, #1
0x147DE	0x4861    LDR	R0, [PC, #388]
0x147E0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2730 :: 		Label6.Active          = 0;
0x147E2	0x2100    MOVS	R1, #0
0x147E4	0x4860    LDR	R0, [PC, #384]
0x147E6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2731 :: 		Label6.Caption         = Label6_Caption;
0x147E8	0x4960    LDR	R1, [PC, #384]
0x147EA	0x4861    LDR	R0, [PC, #388]
0x147EC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2732 :: 		Label6.FontName        = Open_Sans_Light12x18_Regular;
0x147EE	0xF24C3147  MOVW	R1, #49991
0x147F2	0x4860    LDR	R0, [PC, #384]
0x147F4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2733 :: 		Label6.Font_Color      = 0xFFFF;
0x147F6	0xF64F71FF  MOVW	R1, #65535
0x147FA	0x485F    LDR	R0, [PC, #380]
0x147FC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2734 :: 		Label6.OnUpPtr         = 0;
0x147FE	0x2100    MOVS	R1, #0
0x14800	0x485E    LDR	R0, [PC, #376]
0x14802	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2735 :: 		Label6.OnDownPtr       = 0;
0x14804	0x2100    MOVS	R1, #0
0x14806	0x485E    LDR	R0, [PC, #376]
0x14808	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2736 :: 		Label6.OnClickPtr      = 0;
0x1480A	0x2100    MOVS	R1, #0
0x1480C	0x485D    LDR	R0, [PC, #372]
0x1480E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2737 :: 		Label6.OnPressPtr      = 0;
0x14810	0x2100    MOVS	R1, #0
0x14812	0x485D    LDR	R0, [PC, #372]
0x14814	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2739 :: 		Image20.OwnerScreen     = &Set_clock;
0x14816	0x4925    LDR	R1, [PC, #148]
0x14818	0x485C    LDR	R0, [PC, #368]
0x1481A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2740 :: 		Image20.Order           = 11;
0x1481C	0x210B    MOVS	R1, #11
0x1481E	0x485C    LDR	R0, [PC, #368]
0x14820	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2741 :: 		Image20.Left            = 474;
0x14822	0xF24011DA  MOVW	R1, #474
0x14826	0x485B    LDR	R0, [PC, #364]
0x14828	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2742 :: 		Image20.Top             = 17;
0x1482A	0x2111    MOVS	R1, #17
0x1482C	0x485A    LDR	R0, [PC, #360]
0x1482E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2743 :: 		Image20.Width           = 90;
0x14830	0x215A    MOVS	R1, #90
0x14832	0x485A    LDR	R0, [PC, #360]
0x14834	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2744 :: 		Image20.Height          = 151;
0x14836	0x2197    MOVS	R1, #151
0x14838	0x4859    LDR	R0, [PC, #356]
0x1483A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2745 :: 		Image20.Picture_Type    = 0;
0x1483C	0x2100    MOVS	R1, #0
0x1483E	0x4859    LDR	R0, [PC, #356]
0x14840	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2746 :: 		Image20.Picture_Ratio   = 1;
0x14842	0x2101    MOVS	R1, #1
0x14844	0x4858    LDR	R0, [PC, #352]
0x14846	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2747 :: 		Image20.Picture_Name    = am_pm_bmp;
0x14848	0x4958    LDR	R1, [PC, #352]
0x1484A	0x4859    LDR	R0, [PC, #356]
0x1484C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2748 :: 		Image20.Visible         = 0;
0x1484E	0x2100    MOVS	R1, #0
0x14850	0x4858    LDR	R0, [PC, #352]
0x14852	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2749 :: 		Image20.Active          = 0;
0x14854	0x2100    MOVS	R1, #0
0x14856	0x4858    LDR	R0, [PC, #352]
0x14858	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2750 :: 		Image20.OnUpPtr         = 0;
0x1485A	0x2100    MOVS	R1, #0
0x1485C	0x4857    LDR	R0, [PC, #348]
0x1485E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2751 :: 		Image20.OnDownPtr       = 0;
0x14860	0x2100    MOVS	R1, #0
0x14862	0x4857    LDR	R0, [PC, #348]
0x14864	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2752 :: 		Image20.OnClickPtr      = 0;
0x14866	0x2100    MOVS	R1, #0
0x14868	0x4856    LDR	R0, [PC, #344]
0x1486A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2753 :: 		Image20.OnPressPtr      = 0;
0x1486C	0x2100    MOVS	R1, #0
0x1486E	0x4856    LDR	R0, [PC, #344]
0x14870	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2755 :: 		Box5.OwnerScreen     = &Set_clock;
0x14872	0x490E    LDR	R1, [PC, #56]
0x14874	0x4855    LDR	R0, [PC, #340]
0x14876	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2756 :: 		Box5.Order           = 12;
0x14878	0x210C    MOVS	R1, #12
0x1487A	0x4855    LDR	R0, [PC, #340]
0x1487C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2757 :: 		Box5.Left            = 305;
0x1487E	0xF2401131  MOVW	R1, #305
0x14882	0xE0A7    B	#334
0x14884	0x15B82000  	_Box3+24
0x14888	0x15BA2000  	_Box3+26
0x1488C	0x15BC2000  	_Box3+28
0x14890	0x15BE2000  	_Box3+30
0x14894	0x15C02000  	_Box3+32
0x14898	0x15C42000  	_Box3+36
0x1489C	0x15C82000  	_Box3+40
0x148A0	0x15CC2000  	_Box3+44
0x148A4	0xC5150000  	_Box3OnPress+0
0x148A8	0x15D02000  	_Box3+48
0x148AC	0x22E82000  	_Set_clock+0
0x148B0	0x15D42000  	_Box4+0
0x148B4	0x15D82000  	_Box4+4
0x148B8	0x15DA2000  	_Box4+6
0x148BC	0x15DC2000  	_Box4+8
0x148C0	0x15DE2000  	_Box4+10
0x148C4	0x15E02000  	_Box4+12
0x148C8	0x15E22000  	_Box4+14
0x148CC	0x15E42000  	_Box4+16
0x148D0	0x15E62000  	_Box4+18
0x148D4	0x15E72000  	_Box4+19
0x148D8	0x15E82000  	_Box4+20
0x148DC	0x15E92000  	_Box4+21
0x148E0	0x15EA2000  	_Box4+22
0x148E4	0x15EC2000  	_Box4+24
0x148E8	0x15EE2000  	_Box4+26
0x148EC	0x15F02000  	_Box4+28
0x148F0	0x15F22000  	_Box4+30
0x148F4	0x15F42000  	_Box4+32
0x148F8	0x15F82000  	_Box4+36
0x148FC	0x15FC2000  	_Box4+40
0x14900	0x16002000  	_Box4+44
0x14904	0xBC290000  	_Box4OnPress+0
0x14908	0x16042000  	_Box4+48
0x1490C	0x14802000  	_Image19+0
0x14910	0x14842000  	_Image19+4
0x14914	0x14862000  	_Image19+6
0x14918	0x14882000  	_Image19+8
0x1491C	0x148A2000  	_Image19+10
0x14920	0x148C2000  	_Image19+12
0x14924	0x14962000  	_Image19+22
0x14928	0x14972000  	_Image19+23
0x1492C	0x9882003D  	#4036738
0x14930	0x14902000  	_Image19+16
0x14934	0x14942000  	_Image19+20
0x14938	0x14952000  	_Image19+21
0x1493C	0x14982000  	_Image19+24
0x14940	0x149C2000  	_Image19+28
0x14944	0x14A02000  	_Image19+32
0x14948	0x14A42000  	_Image19+36
0x1494C	0x142C2000  	_Label6+0
0x14950	0x14302000  	_Label6+4
0x14954	0x14322000  	_Label6+6
0x14958	0x14342000  	_Label6+8
0x1495C	0x14362000  	_Label6+10
0x14960	0x14382000  	_Label6+12
0x14964	0x14462000  	_Label6+26
0x14968	0x14472000  	_Label6+27
0x1496C	0x017C2000  	_Label6_Caption+0
0x14970	0x143C2000  	_Label6+16
0x14974	0x14402000  	_Label6+20
0x14978	0x14442000  	_Label6+24
0x1497C	0x14482000  	_Label6+28
0x14980	0x144C2000  	_Label6+32
0x14984	0x14502000  	_Label6+36
0x14988	0x14542000  	_Label6+40
0x1498C	0x14A82000  	_Image20+0
0x14990	0x14AC2000  	_Image20+4
0x14994	0x14AE2000  	_Image20+6
0x14998	0x14B02000  	_Image20+8
0x1499C	0x14B22000  	_Image20+10
0x149A0	0x14B42000  	_Image20+12
0x149A4	0x14BE2000  	_Image20+22
0x149A8	0x14BF2000  	_Image20+23
0x149AC	0x68A8003E  	#4090024
0x149B0	0x14B82000  	_Image20+16
0x149B4	0x14BC2000  	_Image20+20
0x149B8	0x14BD2000  	_Image20+21
0x149BC	0x14C02000  	_Image20+24
0x149C0	0x14C42000  	_Image20+28
0x149C4	0x14C82000  	_Image20+32
0x149C8	0x14CC2000  	_Image20+36
0x149CC	0x16082000  	_Box5+0
0x149D0	0x160C2000  	_Box5+4
0x149D4	0x487D    LDR	R0, [PC, #500]
0x149D6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2758 :: 		Box5.Top             = 42;
0x149D8	0x212A    MOVS	R1, #42
0x149DA	0x487D    LDR	R0, [PC, #500]
0x149DC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2759 :: 		Box5.Width           = 90;
0x149DE	0x215A    MOVS	R1, #90
0x149E0	0x487C    LDR	R0, [PC, #496]
0x149E2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2760 :: 		Box5.Height          = 194;
0x149E4	0x21C2    MOVS	R1, #194
0x149E6	0x487C    LDR	R0, [PC, #496]
0x149E8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2761 :: 		Box5.Pen_Width       = 0;
0x149EA	0x2100    MOVS	R1, #0
0x149EC	0x487B    LDR	R0, [PC, #492]
0x149EE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2762 :: 		Box5.Pen_Color       = 0x0000;
0x149F0	0x2100    MOVS	R1, #0
0x149F2	0x487B    LDR	R0, [PC, #492]
0x149F4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2763 :: 		Box5.Visible         = 0;
0x149F6	0x2100    MOVS	R1, #0
0x149F8	0x487A    LDR	R0, [PC, #488]
0x149FA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2764 :: 		Box5.Active          = 1;
0x149FC	0x2101    MOVS	R1, #1
0x149FE	0x487A    LDR	R0, [PC, #488]
0x14A00	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2765 :: 		Box5.Transparent     = 0;
0x14A02	0x2100    MOVS	R1, #0
0x14A04	0x4879    LDR	R0, [PC, #484]
0x14A06	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2766 :: 		Box5.Gradient        = 0;
0x14A08	0x2100    MOVS	R1, #0
0x14A0A	0x4879    LDR	R0, [PC, #484]
0x14A0C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2767 :: 		Box5.Gradient_Orientation = 0;
0x14A0E	0x2100    MOVS	R1, #0
0x14A10	0x4878    LDR	R0, [PC, #480]
0x14A12	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2768 :: 		Box5.Gradient_Start_Color = 0xFFFF;
0x14A14	0xF64F71FF  MOVW	R1, #65535
0x14A18	0x4877    LDR	R0, [PC, #476]
0x14A1A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2769 :: 		Box5.Gradient_End_Color = 0xC618;
0x14A1C	0xF24C6118  MOVW	R1, #50712
0x14A20	0x4876    LDR	R0, [PC, #472]
0x14A22	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2770 :: 		Box5.Color           = 0xC618;
0x14A24	0xF24C6118  MOVW	R1, #50712
0x14A28	0x4875    LDR	R0, [PC, #468]
0x14A2A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2771 :: 		Box5.PressColEnabled = 1;
0x14A2C	0x2101    MOVS	R1, #1
0x14A2E	0x4875    LDR	R0, [PC, #468]
0x14A30	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2772 :: 		Box5.Press_Color     = 0xE71C;
0x14A32	0xF24E711C  MOVW	R1, #59164
0x14A36	0x4874    LDR	R0, [PC, #464]
0x14A38	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2773 :: 		Box5.OnUpPtr         = 0;
0x14A3A	0x2100    MOVS	R1, #0
0x14A3C	0x4873    LDR	R0, [PC, #460]
0x14A3E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2774 :: 		Box5.OnDownPtr       = 0;
0x14A40	0x2100    MOVS	R1, #0
0x14A42	0x4873    LDR	R0, [PC, #460]
0x14A44	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2775 :: 		Box5.OnClickPtr      = 0;
0x14A46	0x2100    MOVS	R1, #0
0x14A48	0x4872    LDR	R0, [PC, #456]
0x14A4A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2776 :: 		Box5.OnPressPtr      = Box5OnPress;
0x14A4C	0x4972    LDR	R1, [PC, #456]
0x14A4E	0x4873    LDR	R0, [PC, #460]
0x14A50	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2778 :: 		Box23.OwnerScreen     = &Accelerometer_test;
0x14A52	0x4973    LDR	R1, [PC, #460]
0x14A54	0x4873    LDR	R0, [PC, #460]
0x14A56	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2779 :: 		Box23.Order           = 0;
0x14A58	0x2100    MOVS	R1, #0
0x14A5A	0x4873    LDR	R0, [PC, #460]
0x14A5C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2780 :: 		Box23.Left            = 4;
0x14A5E	0x2104    MOVS	R1, #4
0x14A60	0x4872    LDR	R0, [PC, #456]
0x14A62	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2781 :: 		Box23.Top             = 5;
0x14A64	0x2105    MOVS	R1, #5
0x14A66	0x4872    LDR	R0, [PC, #456]
0x14A68	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2782 :: 		Box23.Width           = 236;
0x14A6A	0x21EC    MOVS	R1, #236
0x14A6C	0x4871    LDR	R0, [PC, #452]
0x14A6E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2783 :: 		Box23.Height          = 23;
0x14A70	0x2117    MOVS	R1, #23
0x14A72	0x4871    LDR	R0, [PC, #452]
0x14A74	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2784 :: 		Box23.Pen_Width       = 1;
0x14A76	0x2101    MOVS	R1, #1
0x14A78	0x4870    LDR	R0, [PC, #448]
0x14A7A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2785 :: 		Box23.Pen_Color       = 0x0000;
0x14A7C	0x2100    MOVS	R1, #0
0x14A7E	0x4870    LDR	R0, [PC, #448]
0x14A80	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2786 :: 		Box23.Visible         = 0;
0x14A82	0x2100    MOVS	R1, #0
0x14A84	0x486F    LDR	R0, [PC, #444]
0x14A86	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2787 :: 		Box23.Active          = 1;
0x14A88	0x2101    MOVS	R1, #1
0x14A8A	0x486F    LDR	R0, [PC, #444]
0x14A8C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2788 :: 		Box23.Transparent     = 1;
0x14A8E	0x2101    MOVS	R1, #1
0x14A90	0x486E    LDR	R0, [PC, #440]
0x14A92	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2789 :: 		Box23.Gradient        = 0;
0x14A94	0x2100    MOVS	R1, #0
0x14A96	0x486E    LDR	R0, [PC, #440]
0x14A98	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2790 :: 		Box23.Gradient_Orientation = 0;
0x14A9A	0x2100    MOVS	R1, #0
0x14A9C	0x486D    LDR	R0, [PC, #436]
0x14A9E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2791 :: 		Box23.Gradient_Start_Color = 0xFFFF;
0x14AA0	0xF64F71FF  MOVW	R1, #65535
0x14AA4	0x486C    LDR	R0, [PC, #432]
0x14AA6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2792 :: 		Box23.Gradient_End_Color = 0xC618;
0x14AA8	0xF24C6118  MOVW	R1, #50712
0x14AAC	0x486B    LDR	R0, [PC, #428]
0x14AAE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2793 :: 		Box23.Color           = 0xC618;
0x14AB0	0xF24C6118  MOVW	R1, #50712
0x14AB4	0x486A    LDR	R0, [PC, #424]
0x14AB6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2794 :: 		Box23.PressColEnabled = 0;
0x14AB8	0x2100    MOVS	R1, #0
0x14ABA	0x486A    LDR	R0, [PC, #424]
0x14ABC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2795 :: 		Box23.Press_Color     = 0xE71C;
0x14ABE	0xF24E711C  MOVW	R1, #59164
0x14AC2	0x4869    LDR	R0, [PC, #420]
0x14AC4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2796 :: 		Box23.OnUpPtr         = 0;
0x14AC6	0x2100    MOVS	R1, #0
0x14AC8	0x4868    LDR	R0, [PC, #416]
0x14ACA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2797 :: 		Box23.OnDownPtr       = 0;
0x14ACC	0x2100    MOVS	R1, #0
0x14ACE	0x4868    LDR	R0, [PC, #416]
0x14AD0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2798 :: 		Box23.OnClickPtr      = doSettings;
0x14AD2	0x4968    LDR	R1, [PC, #416]
0x14AD4	0x4868    LDR	R0, [PC, #416]
0x14AD6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2799 :: 		Box23.OnPressPtr      = 0;
0x14AD8	0x2100    MOVS	R1, #0
0x14ADA	0x4868    LDR	R0, [PC, #416]
0x14ADC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2801 :: 		Box6.OwnerScreen     = &Accelerometer_test;
0x14ADE	0x4950    LDR	R1, [PC, #320]
0x14AE0	0x4867    LDR	R0, [PC, #412]
0x14AE2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2802 :: 		Box6.Order           = 1;
0x14AE4	0x2101    MOVS	R1, #1
0x14AE6	0x4867    LDR	R0, [PC, #412]
0x14AE8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2803 :: 		Box6.Left            = 0;
0x14AEA	0x2100    MOVS	R1, #0
0x14AEC	0x4866    LDR	R0, [PC, #408]
0x14AEE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2804 :: 		Box6.Top             = 40;
0x14AF0	0x2128    MOVS	R1, #40
0x14AF2	0x4866    LDR	R0, [PC, #408]
0x14AF4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2805 :: 		Box6.Width           = 480;
0x14AF6	0xF24011E0  MOVW	R1, #480
0x14AFA	0x4865    LDR	R0, [PC, #404]
0x14AFC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2806 :: 		Box6.Height          = 207;
0x14AFE	0x21CF    MOVS	R1, #207
0x14B00	0x4864    LDR	R0, [PC, #400]
0x14B02	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2807 :: 		Box6.Pen_Width       = 1;
0x14B04	0x2101    MOVS	R1, #1
0x14B06	0x4864    LDR	R0, [PC, #400]
0x14B08	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2808 :: 		Box6.Pen_Color       = 0xFFFF;
0x14B0A	0xF64F71FF  MOVW	R1, #65535
0x14B0E	0x4863    LDR	R0, [PC, #396]
0x14B10	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2809 :: 		Box6.Visible         = 1;
0x14B12	0x2101    MOVS	R1, #1
0x14B14	0x4862    LDR	R0, [PC, #392]
0x14B16	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2810 :: 		Box6.Active          = 1;
0x14B18	0x2101    MOVS	R1, #1
0x14B1A	0x4862    LDR	R0, [PC, #392]
0x14B1C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2811 :: 		Box6.Transparent     = 1;
0x14B1E	0x2101    MOVS	R1, #1
0x14B20	0x4861    LDR	R0, [PC, #388]
0x14B22	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2812 :: 		Box6.Gradient        = 0;
0x14B24	0x2100    MOVS	R1, #0
0x14B26	0x4861    LDR	R0, [PC, #388]
0x14B28	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2813 :: 		Box6.Gradient_Orientation = 0;
0x14B2A	0x2100    MOVS	R1, #0
0x14B2C	0x4860    LDR	R0, [PC, #384]
0x14B2E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2814 :: 		Box6.Gradient_Start_Color = 0xFFFF;
0x14B30	0xF64F71FF  MOVW	R1, #65535
0x14B34	0x485F    LDR	R0, [PC, #380]
0x14B36	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2815 :: 		Box6.Gradient_End_Color = 0xFFFF;
0x14B38	0xF64F71FF  MOVW	R1, #65535
0x14B3C	0x485E    LDR	R0, [PC, #376]
0x14B3E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2816 :: 		Box6.Color           = 0xFFFF;
0x14B40	0xF64F71FF  MOVW	R1, #65535
0x14B44	0x485D    LDR	R0, [PC, #372]
0x14B46	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2817 :: 		Box6.PressColEnabled = 0;
0x14B48	0x2100    MOVS	R1, #0
0x14B4A	0x485D    LDR	R0, [PC, #372]
0x14B4C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2818 :: 		Box6.Press_Color     = 0xFFFF;
0x14B4E	0xF64F71FF  MOVW	R1, #65535
0x14B52	0x485C    LDR	R0, [PC, #368]
0x14B54	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2819 :: 		Box6.OnUpPtr         = 0;
0x14B56	0x2100    MOVS	R1, #0
0x14B58	0x485B    LDR	R0, [PC, #364]
0x14B5A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2820 :: 		Box6.OnDownPtr       = 0;
0x14B5C	0x2100    MOVS	R1, #0
0x14B5E	0x485B    LDR	R0, [PC, #364]
0x14B60	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2821 :: 		Box6.OnClickPtr      = 0;
0x14B62	0x2100    MOVS	R1, #0
0x14B64	0x485A    LDR	R0, [PC, #360]
0x14B66	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2822 :: 		Box6.OnPressPtr      = 0;
0x14B68	0x2100    MOVS	R1, #0
0x14B6A	0x485A    LDR	R0, [PC, #360]
0x14B6C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2824 :: 		Image49.OwnerScreen     = &Accelerometer_test;
0x14B6E	0x492C    LDR	R1, [PC, #176]
0x14B70	0x4859    LDR	R0, [PC, #356]
0x14B72	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2825 :: 		Image49.Order           = 2;
0x14B74	0x2102    MOVS	R1, #2
0x14B76	0x4859    LDR	R0, [PC, #356]
0x14B78	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2826 :: 		Image49.Left            = 5;
0x14B7A	0x2105    MOVS	R1, #5
0x14B7C	0x4858    LDR	R0, [PC, #352]
0x14B7E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2827 :: 		Image49.Top             = 6;
0x14B80	0x2106    MOVS	R1, #6
0x14B82	0x4858    LDR	R0, [PC, #352]
0x14B84	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2828 :: 		Image49.Width           = 22;
0x14B86	0x2116    MOVS	R1, #22
0x14B88	0x4857    LDR	R0, [PC, #348]
0x14B8A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2829 :: 		Image49.Height          = 22;
0x14B8C	0x2116    MOVS	R1, #22
0x14B8E	0x4857    LDR	R0, [PC, #348]
0x14B90	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2830 :: 		Image49.Picture_Type    = 0;
0x14B92	0x2100    MOVS	R1, #0
0x14B94	0x4856    LDR	R0, [PC, #344]
0x14B96	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2831 :: 		Image49.Picture_Ratio   = 1;
0x14B98	0x2101    MOVS	R1, #1
0x14B9A	0x4856    LDR	R0, [PC, #344]
0x14B9C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2832 :: 		Image49.Picture_Name    = icon_back_accel_bmp;
0x14B9E	0x4956    LDR	R1, [PC, #344]
0x14BA0	0x4856    LDR	R0, [PC, #344]
0x14BA2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2833 :: 		Image49.Visible         = 1;
0x14BA4	0x2101    MOVS	R1, #1
0x14BA6	0x4856    LDR	R0, [PC, #344]
0x14BA8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2834 :: 		Image49.Active          = 0;
0x14BAA	0x2100    MOVS	R1, #0
0x14BAC	0x4855    LDR	R0, [PC, #340]
0x14BAE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2835 :: 		Image49.OnUpPtr         = 0;
0x14BB0	0x2100    MOVS	R1, #0
0x14BB2	0x4855    LDR	R0, [PC, #340]
0x14BB4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2836 :: 		Image49.OnDownPtr       = 0;
0x14BB6	0x2100    MOVS	R1, #0
0x14BB8	0x4854    LDR	R0, [PC, #336]
0x14BBA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2837 :: 		Image49.OnClickPtr      = doSettings;
0x14BBC	0x492D    LDR	R1, [PC, #180]
0x14BBE	0x4854    LDR	R0, [PC, #336]
0x14BC0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2838 :: 		Image49.OnPressPtr      = doSettings;
0x14BC2	0x492C    LDR	R1, [PC, #176]
0x14BC4	0x4853    LDR	R0, [PC, #332]
0x14BC6	0x6001    STR	R1, [R0, #0]
0x14BC8	0xF000B8A6  B	#332
0x14BCC	0x160E2000  	_Box5+6
0x14BD0	0x16102000  	_Box5+8
0x14BD4	0x16122000  	_Box5+10
0x14BD8	0x16142000  	_Box5+12
0x14BDC	0x16162000  	_Box5+14
0x14BE0	0x16182000  	_Box5+16
0x14BE4	0x161A2000  	_Box5+18
0x14BE8	0x161B2000  	_Box5+19
0x14BEC	0x161C2000  	_Box5+20
0x14BF0	0x161D2000  	_Box5+21
0x14BF4	0x161E2000  	_Box5+22
0x14BF8	0x16202000  	_Box5+24
0x14BFC	0x16222000  	_Box5+26
0x14C00	0x16242000  	_Box5+28
0x14C04	0x16262000  	_Box5+30
0x14C08	0x16282000  	_Box5+32
0x14C0C	0x162C2000  	_Box5+36
0x14C10	0x16302000  	_Box5+40
0x14C14	0x16342000  	_Box5+44
0x14C18	0xBC150000  	_Box5OnPress+0
0x14C1C	0x16382000  	_Box5+48
0x14C20	0x040C2000  	_Accelerometer_test+0
0x14C24	0x16902000  	_Box23+0
0x14C28	0x16942000  	_Box23+4
0x14C2C	0x16962000  	_Box23+6
0x14C30	0x16982000  	_Box23+8
0x14C34	0x169A2000  	_Box23+10
0x14C38	0x169C2000  	_Box23+12
0x14C3C	0x169E2000  	_Box23+14
0x14C40	0x16A02000  	_Box23+16
0x14C44	0x16A22000  	_Box23+18
0x14C48	0x16A32000  	_Box23+19
0x14C4C	0x16A42000  	_Box23+20
0x14C50	0x16A52000  	_Box23+21
0x14C54	0x16A62000  	_Box23+22
0x14C58	0x16A82000  	_Box23+24
0x14C5C	0x16AA2000  	_Box23+26
0x14C60	0x16AC2000  	_Box23+28
0x14C64	0x16AE2000  	_Box23+30
0x14C68	0x16B02000  	_Box23+32
0x14C6C	0x16B42000  	_Box23+36
0x14C70	0x16B82000  	_Box23+40
0x14C74	0xB2A50000  	_doSettings+0
0x14C78	0x16BC2000  	_Box23+44
0x14C7C	0x16C02000  	_Box23+48
0x14C80	0x16C42000  	_Box6+0
0x14C84	0x16C82000  	_Box6+4
0x14C88	0x16CA2000  	_Box6+6
0x14C8C	0x16CC2000  	_Box6+8
0x14C90	0x16CE2000  	_Box6+10
0x14C94	0x16D02000  	_Box6+12
0x14C98	0x16D22000  	_Box6+14
0x14C9C	0x16D42000  	_Box6+16
0x14CA0	0x16D62000  	_Box6+18
0x14CA4	0x16D72000  	_Box6+19
0x14CA8	0x16D82000  	_Box6+20
0x14CAC	0x16D92000  	_Box6+21
0x14CB0	0x16DA2000  	_Box6+22
0x14CB4	0x16DC2000  	_Box6+24
0x14CB8	0x16DE2000  	_Box6+26
0x14CBC	0x16E02000  	_Box6+28
0x14CC0	0x16E22000  	_Box6+30
0x14CC4	0x16E42000  	_Box6+32
0x14CC8	0x16E82000  	_Box6+36
0x14CCC	0x16EC2000  	_Box6+40
0x14CD0	0x16F02000  	_Box6+44
0x14CD4	0x16F42000  	_Box6+48
0x14CD8	0x16682000  	_Image49+0
0x14CDC	0x166C2000  	_Image49+4
0x14CE0	0x166E2000  	_Image49+6
0x14CE4	0x16702000  	_Image49+8
0x14CE8	0x16722000  	_Image49+10
0x14CEC	0x16742000  	_Image49+12
0x14CF0	0x167E2000  	_Image49+22
0x14CF4	0x167F2000  	_Image49+23
0x14CF8	0xD2DA003E  	#4117210
0x14CFC	0x16782000  	_Image49+16
0x14D00	0x167C2000  	_Image49+20
0x14D04	0x167D2000  	_Image49+21
0x14D08	0x16802000  	_Image49+24
0x14D0C	0x16842000  	_Image49+28
0x14D10	0x16882000  	_Image49+32
0x14D14	0x168C2000  	_Image49+36
;Ducati_logger_driver.c, 2840 :: 		Label1.OwnerScreen     = &Accelerometer_test;
0x14D18	0x497C    LDR	R1, [PC, #496]
0x14D1A	0x487D    LDR	R0, [PC, #500]
0x14D1C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2841 :: 		Label1.Order           = 3;
0x14D1E	0x2103    MOVS	R1, #3
0x14D20	0x487C    LDR	R0, [PC, #496]
0x14D22	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2842 :: 		Label1.Left            = 32;
0x14D24	0x2120    MOVS	R1, #32
0x14D26	0x487C    LDR	R0, [PC, #496]
0x14D28	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2843 :: 		Label1.Top             = 2;
0x14D2A	0x2102    MOVS	R1, #2
0x14D2C	0x487B    LDR	R0, [PC, #492]
0x14D2E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2844 :: 		Label1.Width           = 209;
0x14D30	0x21D1    MOVS	R1, #209
0x14D32	0x487B    LDR	R0, [PC, #492]
0x14D34	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2845 :: 		Label1.Height          = 31;
0x14D36	0x211F    MOVS	R1, #31
0x14D38	0x487A    LDR	R0, [PC, #488]
0x14D3A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2846 :: 		Label1.Visible         = 1;
0x14D3C	0x2101    MOVS	R1, #1
0x14D3E	0x487A    LDR	R0, [PC, #488]
0x14D40	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2847 :: 		Label1.Active          = 0;
0x14D42	0x2100    MOVS	R1, #0
0x14D44	0x4879    LDR	R0, [PC, #484]
0x14D46	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2848 :: 		Label1.Caption         = Label1_Caption;
0x14D48	0x4979    LDR	R1, [PC, #484]
0x14D4A	0x487A    LDR	R0, [PC, #488]
0x14D4C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2849 :: 		Label1.FontName        = Open_Sans_Light19x28_Regular;
0x14D4E	0xF64D0139  MOVW	R1, #55353
0x14D52	0x4879    LDR	R0, [PC, #484]
0x14D54	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2850 :: 		Label1.Font_Color      = 0xFFFF;
0x14D56	0xF64F71FF  MOVW	R1, #65535
0x14D5A	0x4878    LDR	R0, [PC, #480]
0x14D5C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2851 :: 		Label1.OnUpPtr         = 0;
0x14D5E	0x2100    MOVS	R1, #0
0x14D60	0x4877    LDR	R0, [PC, #476]
0x14D62	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2852 :: 		Label1.OnDownPtr       = 0;
0x14D64	0x2100    MOVS	R1, #0
0x14D66	0x4877    LDR	R0, [PC, #476]
0x14D68	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2853 :: 		Label1.OnClickPtr      = 0;
0x14D6A	0x2100    MOVS	R1, #0
0x14D6C	0x4876    LDR	R0, [PC, #472]
0x14D6E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2854 :: 		Label1.OnPressPtr      = 0;
0x14D70	0x2100    MOVS	R1, #0
0x14D72	0x4876    LDR	R0, [PC, #472]
0x14D74	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2856 :: 		Label3.OwnerScreen     = &Accelerometer_test;
0x14D76	0x4965    LDR	R1, [PC, #404]
0x14D78	0x4875    LDR	R0, [PC, #468]
0x14D7A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2857 :: 		Label3.Order           = 4;
0x14D7C	0x2104    MOVS	R1, #4
0x14D7E	0x4875    LDR	R0, [PC, #468]
0x14D80	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2858 :: 		Label3.Left            = 75;
0x14D82	0x214B    MOVS	R1, #75
0x14D84	0x4874    LDR	R0, [PC, #464]
0x14D86	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2859 :: 		Label3.Top             = 250;
0x14D88	0x21FA    MOVS	R1, #250
0x14D8A	0x4874    LDR	R0, [PC, #464]
0x14D8C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2860 :: 		Label3.Width           = 13;
0x14D8E	0x210D    MOVS	R1, #13
0x14D90	0x4873    LDR	R0, [PC, #460]
0x14D92	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2861 :: 		Label3.Height          = 24;
0x14D94	0x2118    MOVS	R1, #24
0x14D96	0x4873    LDR	R0, [PC, #460]
0x14D98	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2862 :: 		Label3.Visible         = 1;
0x14D9A	0x2101    MOVS	R1, #1
0x14D9C	0x4872    LDR	R0, [PC, #456]
0x14D9E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2863 :: 		Label3.Active          = 1;
0x14DA0	0x2101    MOVS	R1, #1
0x14DA2	0x4872    LDR	R0, [PC, #456]
0x14DA4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2864 :: 		Label3.Caption         = Label3_Caption;
0x14DA6	0x4972    LDR	R1, [PC, #456]
0x14DA8	0x4872    LDR	R0, [PC, #456]
0x14DAA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2865 :: 		Label3.FontName        = Open_Sans_Light14x22_Regular;
0x14DAC	0xF64C411F  MOVW	R1, #52255
0x14DB0	0x4871    LDR	R0, [PC, #452]
0x14DB2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2866 :: 		Label3.Font_Color      = 0xF800;
0x14DB4	0xF64F0100  MOVW	R1, #63488
0x14DB8	0x4870    LDR	R0, [PC, #448]
0x14DBA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2867 :: 		Label3.OnUpPtr         = 0;
0x14DBC	0x2100    MOVS	R1, #0
0x14DBE	0x4870    LDR	R0, [PC, #448]
0x14DC0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2868 :: 		Label3.OnDownPtr       = 0;
0x14DC2	0x2100    MOVS	R1, #0
0x14DC4	0x486F    LDR	R0, [PC, #444]
0x14DC6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2869 :: 		Label3.OnClickPtr      = 0;
0x14DC8	0x2100    MOVS	R1, #0
0x14DCA	0x486F    LDR	R0, [PC, #444]
0x14DCC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2870 :: 		Label3.OnPressPtr      = 0;
0x14DCE	0x2100    MOVS	R1, #0
0x14DD0	0x486E    LDR	R0, [PC, #440]
0x14DD2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2872 :: 		Label4.OwnerScreen     = &Accelerometer_test;
0x14DD4	0x494D    LDR	R1, [PC, #308]
0x14DD6	0x486E    LDR	R0, [PC, #440]
0x14DD8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2873 :: 		Label4.Order           = 5;
0x14DDA	0x2105    MOVS	R1, #5
0x14DDC	0x486D    LDR	R0, [PC, #436]
0x14DDE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2874 :: 		Label4.Left            = 225;
0x14DE0	0x21E1    MOVS	R1, #225
0x14DE2	0x486D    LDR	R0, [PC, #436]
0x14DE4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2875 :: 		Label4.Top             = 250;
0x14DE6	0x21FA    MOVS	R1, #250
0x14DE8	0x486C    LDR	R0, [PC, #432]
0x14DEA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2876 :: 		Label4.Width           = 13;
0x14DEC	0x210D    MOVS	R1, #13
0x14DEE	0x486C    LDR	R0, [PC, #432]
0x14DF0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2877 :: 		Label4.Height          = 24;
0x14DF2	0x2118    MOVS	R1, #24
0x14DF4	0x486B    LDR	R0, [PC, #428]
0x14DF6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2878 :: 		Label4.Visible         = 1;
0x14DF8	0x2101    MOVS	R1, #1
0x14DFA	0x486B    LDR	R0, [PC, #428]
0x14DFC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2879 :: 		Label4.Active          = 1;
0x14DFE	0x2101    MOVS	R1, #1
0x14E00	0x486A    LDR	R0, [PC, #424]
0x14E02	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2880 :: 		Label4.Caption         = Label4_Caption;
0x14E04	0x496A    LDR	R1, [PC, #424]
0x14E06	0x486B    LDR	R0, [PC, #428]
0x14E08	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2881 :: 		Label4.FontName        = Open_Sans_Light14x22_Regular;
0x14E0A	0xF64C411F  MOVW	R1, #52255
0x14E0E	0x486A    LDR	R0, [PC, #424]
0x14E10	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2882 :: 		Label4.Font_Color      = 0x001F;
0x14E12	0x211F    MOVS	R1, #31
0x14E14	0x4869    LDR	R0, [PC, #420]
0x14E16	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2883 :: 		Label4.OnUpPtr         = 0;
0x14E18	0x2100    MOVS	R1, #0
0x14E1A	0x4869    LDR	R0, [PC, #420]
0x14E1C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2884 :: 		Label4.OnDownPtr       = 0;
0x14E1E	0x2100    MOVS	R1, #0
0x14E20	0x4868    LDR	R0, [PC, #416]
0x14E22	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2885 :: 		Label4.OnClickPtr      = 0;
0x14E24	0x2100    MOVS	R1, #0
0x14E26	0x4868    LDR	R0, [PC, #416]
0x14E28	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2886 :: 		Label4.OnPressPtr      = 0;
0x14E2A	0x2100    MOVS	R1, #0
0x14E2C	0x4867    LDR	R0, [PC, #412]
0x14E2E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2888 :: 		Label7.OwnerScreen     = &Accelerometer_test;
0x14E30	0x4936    LDR	R1, [PC, #216]
0x14E32	0x4867    LDR	R0, [PC, #412]
0x14E34	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2889 :: 		Label7.Order           = 6;
0x14E36	0x2106    MOVS	R1, #6
0x14E38	0x4866    LDR	R0, [PC, #408]
0x14E3A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2890 :: 		Label7.Left            = 375;
0x14E3C	0xF2401177  MOVW	R1, #375
0x14E40	0x4865    LDR	R0, [PC, #404]
0x14E42	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2891 :: 		Label7.Top             = 250;
0x14E44	0x21FA    MOVS	R1, #250
0x14E46	0x4865    LDR	R0, [PC, #404]
0x14E48	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2892 :: 		Label7.Width           = 13;
0x14E4A	0x210D    MOVS	R1, #13
0x14E4C	0x4864    LDR	R0, [PC, #400]
0x14E4E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2893 :: 		Label7.Height          = 24;
0x14E50	0x2118    MOVS	R1, #24
0x14E52	0x4864    LDR	R0, [PC, #400]
0x14E54	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2894 :: 		Label7.Visible         = 1;
0x14E56	0x2101    MOVS	R1, #1
0x14E58	0x4863    LDR	R0, [PC, #396]
0x14E5A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2895 :: 		Label7.Active          = 1;
0x14E5C	0x2101    MOVS	R1, #1
0x14E5E	0x4863    LDR	R0, [PC, #396]
0x14E60	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2896 :: 		Label7.Caption         = Label7_Caption;
0x14E62	0x4963    LDR	R1, [PC, #396]
0x14E64	0x4863    LDR	R0, [PC, #396]
0x14E66	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2897 :: 		Label7.FontName        = Open_Sans_Light14x22_Regular;
0x14E68	0xF64C411F  MOVW	R1, #52255
0x14E6C	0x4862    LDR	R0, [PC, #392]
0x14E6E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2898 :: 		Label7.Font_Color      = 0x0400;
0x14E70	0xF2404100  MOVW	R1, #1024
0x14E74	0x4861    LDR	R0, [PC, #388]
0x14E76	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2899 :: 		Label7.OnUpPtr         = 0;
0x14E78	0x2100    MOVS	R1, #0
0x14E7A	0x4861    LDR	R0, [PC, #388]
0x14E7C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2900 :: 		Label7.OnDownPtr       = 0;
0x14E7E	0x2100    MOVS	R1, #0
0x14E80	0x4860    LDR	R0, [PC, #384]
0x14E82	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2901 :: 		Label7.OnClickPtr      = 0;
0x14E84	0x2100    MOVS	R1, #0
0x14E86	0x4860    LDR	R0, [PC, #384]
0x14E88	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2902 :: 		Label7.OnPressPtr      = 0;
0x14E8A	0x2100    MOVS	R1, #0
0x14E8C	0x485F    LDR	R0, [PC, #380]
0x14E8E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2904 :: 		Box9.OwnerScreen     = &GPS_Test;
0x14E90	0x495F    LDR	R1, [PC, #380]
0x14E92	0x4860    LDR	R0, [PC, #384]
0x14E94	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2905 :: 		Box9.Order           = 0;
0x14E96	0x2100    MOVS	R1, #0
0x14E98	0x485F    LDR	R0, [PC, #380]
0x14E9A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2906 :: 		Box9.Left            = 0;
0x14E9C	0x2100    MOVS	R1, #0
0x14E9E	0x485F    LDR	R0, [PC, #380]
0x14EA0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2907 :: 		Box9.Top             = 0;
0x14EA2	0x2100    MOVS	R1, #0
0x14EA4	0x485E    LDR	R0, [PC, #376]
0x14EA6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2908 :: 		Box9.Width           = 480;
0x14EA8	0xF24011E0  MOVW	R1, #480
0x14EAC	0x485D    LDR	R0, [PC, #372]
0x14EAE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2909 :: 		Box9.Height          = 272;
0x14EB0	0xF2401110  MOVW	R1, #272
0x14EB4	0x485C    LDR	R0, [PC, #368]
0x14EB6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2910 :: 		Box9.Pen_Width       = 1;
0x14EB8	0x2101    MOVS	R1, #1
0x14EBA	0x485C    LDR	R0, [PC, #368]
0x14EBC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2911 :: 		Box9.Pen_Color       = 0x0000;
0x14EBE	0x2100    MOVS	R1, #0
0x14EC0	0x485B    LDR	R0, [PC, #364]
0x14EC2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2912 :: 		Box9.Visible         = 1;
0x14EC4	0x2101    MOVS	R1, #1
0x14EC6	0x485B    LDR	R0, [PC, #364]
0x14EC8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2913 :: 		Box9.Active          = 1;
0x14ECA	0x2101    MOVS	R1, #1
0x14ECC	0x485A    LDR	R0, [PC, #360]
0x14ECE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2914 :: 		Box9.Transparent     = 1;
0x14ED0	0x2101    MOVS	R1, #1
0x14ED2	0x485A    LDR	R0, [PC, #360]
0x14ED4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2915 :: 		Box9.Gradient        = 1;
0x14ED6	0x2101    MOVS	R1, #1
0x14ED8	0x4859    LDR	R0, [PC, #356]
0x14EDA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2916 :: 		Box9.Gradient_Orientation = 0;
0x14EDC	0x2100    MOVS	R1, #0
0x14EDE	0x4859    LDR	R0, [PC, #356]
0x14EE0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2917 :: 		Box9.Gradient_Start_Color = 0xF800;
0x14EE2	0xF64F0100  MOVW	R1, #63488
0x14EE6	0x4858    LDR	R0, [PC, #352]
0x14EE8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2918 :: 		Box9.Gradient_End_Color = 0x8410;
0x14EEA	0xF2484110  MOVW	R1, #33808
0x14EEE	0x4857    LDR	R0, [PC, #348]
0x14EF0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2919 :: 		Box9.Color           = 0xC618;
0x14EF2	0xF24C6118  MOVW	R1, #50712
0x14EF6	0x4856    LDR	R0, [PC, #344]
0x14EF8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2920 :: 		Box9.PressColEnabled = 1;
0x14EFA	0x2101    MOVS	R1, #1
0x14EFC	0x4855    LDR	R0, [PC, #340]
0x14EFE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2921 :: 		Box9.Press_Color     = 0xE71C;
0x14F00	0xF24E711C  MOVW	R1, #59164
0x14F04	0x4854    LDR	R0, [PC, #336]
0x14F06	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2922 :: 		Box9.OnUpPtr         = 0;
0x14F08	0x2100    MOVS	R1, #0
0x14F0A	0xE0A7    B	#334
0x14F0C	0x040C2000  	_Accelerometer_test+0
0x14F10	0x163C2000  	_Label1+0
0x14F14	0x16402000  	_Label1+4
0x14F18	0x16422000  	_Label1+6
0x14F1C	0x16442000  	_Label1+8
0x14F20	0x16462000  	_Label1+10
0x14F24	0x16482000  	_Label1+12
0x14F28	0x16562000  	_Label1+26
0x14F2C	0x16572000  	_Label1+27
0x14F30	0x01AF2000  	_Label1_Caption+0
0x14F34	0x164C2000  	_Label1+16
0x14F38	0x16502000  	_Label1+20
0x14F3C	0x16542000  	_Label1+24
0x14F40	0x16582000  	_Label1+28
0x14F44	0x165C2000  	_Label1+32
0x14F48	0x16602000  	_Label1+36
0x14F4C	0x16642000  	_Label1+40
0x14F50	0x03882000  	_Label3+0
0x14F54	0x038C2000  	_Label3+4
0x14F58	0x038E2000  	_Label3+6
0x14F5C	0x03902000  	_Label3+8
0x14F60	0x03922000  	_Label3+10
0x14F64	0x03942000  	_Label3+12
0x14F68	0x03A22000  	_Label3+26
0x14F6C	0x03A32000  	_Label3+27
0x14F70	0x01C32000  	_Label3_Caption+0
0x14F74	0x03982000  	_Label3+16
0x14F78	0x039C2000  	_Label3+20
0x14F7C	0x03A02000  	_Label3+24
0x14F80	0x03A42000  	_Label3+28
0x14F84	0x03A82000  	_Label3+32
0x14F88	0x03AC2000  	_Label3+36
0x14F8C	0x03B02000  	_Label3+40
0x14F90	0x03B42000  	_Label4+0
0x14F94	0x03B82000  	_Label4+4
0x14F98	0x03BA2000  	_Label4+6
0x14F9C	0x03BC2000  	_Label4+8
0x14FA0	0x03BE2000  	_Label4+10
0x14FA4	0x03C02000  	_Label4+12
0x14FA8	0x03CE2000  	_Label4+26
0x14FAC	0x03CF2000  	_Label4+27
0x14FB0	0x01C72000  	_Label4_Caption+0
0x14FB4	0x03C42000  	_Label4+16
0x14FB8	0x03C82000  	_Label4+20
0x14FBC	0x03CC2000  	_Label4+24
0x14FC0	0x03D02000  	_Label4+28
0x14FC4	0x03D42000  	_Label4+32
0x14FC8	0x03D82000  	_Label4+36
0x14FCC	0x03DC2000  	_Label4+40
0x14FD0	0x03E02000  	_Label7+0
0x14FD4	0x03E42000  	_Label7+4
0x14FD8	0x03E62000  	_Label7+6
0x14FDC	0x03E82000  	_Label7+8
0x14FE0	0x03EA2000  	_Label7+10
0x14FE4	0x03EC2000  	_Label7+12
0x14FE8	0x03FA2000  	_Label7+26
0x14FEC	0x03FB2000  	_Label7+27
0x14FF0	0x01CB2000  	_Label7_Caption+0
0x14FF4	0x03F02000  	_Label7+16
0x14FF8	0x03F42000  	_Label7+20
0x14FFC	0x03F82000  	_Label7+24
0x15000	0x03FC2000  	_Label7+28
0x15004	0x04002000  	_Label7+32
0x15008	0x04042000  	_Label7+36
0x1500C	0x04082000  	_Label7+40
0x15010	0x23382000  	_GPS_Test+0
0x15014	0x1ABC2000  	_Box9+0
0x15018	0x1AC02000  	_Box9+4
0x1501C	0x1AC22000  	_Box9+6
0x15020	0x1AC42000  	_Box9+8
0x15024	0x1AC62000  	_Box9+10
0x15028	0x1AC82000  	_Box9+12
0x1502C	0x1ACA2000  	_Box9+14
0x15030	0x1ACC2000  	_Box9+16
0x15034	0x1ACE2000  	_Box9+18
0x15038	0x1ACF2000  	_Box9+19
0x1503C	0x1AD02000  	_Box9+20
0x15040	0x1AD12000  	_Box9+21
0x15044	0x1AD22000  	_Box9+22
0x15048	0x1AD42000  	_Box9+24
0x1504C	0x1AD62000  	_Box9+26
0x15050	0x1AD82000  	_Box9+28
0x15054	0x1ADA2000  	_Box9+30
0x15058	0x1ADC2000  	_Box9+32
0x1505C	0x4877    LDR	R0, [PC, #476]
0x1505E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2923 :: 		Box9.OnDownPtr       = 0;
0x15060	0x2100    MOVS	R1, #0
0x15062	0x4877    LDR	R0, [PC, #476]
0x15064	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2924 :: 		Box9.OnClickPtr      = 0;
0x15066	0x2100    MOVS	R1, #0
0x15068	0x4876    LDR	R0, [PC, #472]
0x1506A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2925 :: 		Box9.OnPressPtr      = 0;
0x1506C	0x2100    MOVS	R1, #0
0x1506E	0x4876    LDR	R0, [PC, #472]
0x15070	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2927 :: 		Box16.OwnerScreen     = &GPS_Test;
0x15072	0x4976    LDR	R1, [PC, #472]
0x15074	0x4876    LDR	R0, [PC, #472]
0x15076	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2928 :: 		Box16.Order           = 1;
0x15078	0x2101    MOVS	R1, #1
0x1507A	0x4876    LDR	R0, [PC, #472]
0x1507C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2929 :: 		Box16.Left            = 12;
0x1507E	0x210C    MOVS	R1, #12
0x15080	0x4875    LDR	R0, [PC, #468]
0x15082	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2930 :: 		Box16.Top             = 12;
0x15084	0x210C    MOVS	R1, #12
0x15086	0x4875    LDR	R0, [PC, #468]
0x15088	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2931 :: 		Box16.Width           = 78;
0x1508A	0x214E    MOVS	R1, #78
0x1508C	0x4874    LDR	R0, [PC, #464]
0x1508E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2932 :: 		Box16.Height          = 26;
0x15090	0x211A    MOVS	R1, #26
0x15092	0x4874    LDR	R0, [PC, #464]
0x15094	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2933 :: 		Box16.Pen_Width       = 1;
0x15096	0x2101    MOVS	R1, #1
0x15098	0x4873    LDR	R0, [PC, #460]
0x1509A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2934 :: 		Box16.Pen_Color       = 0x0000;
0x1509C	0x2100    MOVS	R1, #0
0x1509E	0x4873    LDR	R0, [PC, #460]
0x150A0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2935 :: 		Box16.Visible         = 0;
0x150A2	0x2100    MOVS	R1, #0
0x150A4	0x4872    LDR	R0, [PC, #456]
0x150A6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2936 :: 		Box16.Active          = 1;
0x150A8	0x2101    MOVS	R1, #1
0x150AA	0x4872    LDR	R0, [PC, #456]
0x150AC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2937 :: 		Box16.Transparent     = 1;
0x150AE	0x2101    MOVS	R1, #1
0x150B0	0x4871    LDR	R0, [PC, #452]
0x150B2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2938 :: 		Box16.Gradient        = 1;
0x150B4	0x2101    MOVS	R1, #1
0x150B6	0x4871    LDR	R0, [PC, #452]
0x150B8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2939 :: 		Box16.Gradient_Orientation = 0;
0x150BA	0x2100    MOVS	R1, #0
0x150BC	0x4870    LDR	R0, [PC, #448]
0x150BE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2940 :: 		Box16.Gradient_Start_Color = 0xFFFF;
0x150C0	0xF64F71FF  MOVW	R1, #65535
0x150C4	0x486F    LDR	R0, [PC, #444]
0x150C6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2941 :: 		Box16.Gradient_End_Color = 0xC618;
0x150C8	0xF24C6118  MOVW	R1, #50712
0x150CC	0x486E    LDR	R0, [PC, #440]
0x150CE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2942 :: 		Box16.Color           = 0xC618;
0x150D0	0xF24C6118  MOVW	R1, #50712
0x150D4	0x486D    LDR	R0, [PC, #436]
0x150D6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2943 :: 		Box16.PressColEnabled = 0;
0x150D8	0x2100    MOVS	R1, #0
0x150DA	0x486D    LDR	R0, [PC, #436]
0x150DC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2944 :: 		Box16.Press_Color     = 0xE71C;
0x150DE	0xF24E711C  MOVW	R1, #59164
0x150E2	0x486C    LDR	R0, [PC, #432]
0x150E4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2945 :: 		Box16.OnUpPtr         = 0;
0x150E6	0x2100    MOVS	R1, #0
0x150E8	0x486B    LDR	R0, [PC, #428]
0x150EA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2946 :: 		Box16.OnDownPtr       = 0;
0x150EC	0x2100    MOVS	R1, #0
0x150EE	0x486B    LDR	R0, [PC, #428]
0x150F0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2947 :: 		Box16.OnClickPtr      = Image18OnPress;
0x150F2	0x496B    LDR	R1, [PC, #428]
0x150F4	0x486B    LDR	R0, [PC, #428]
0x150F6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2948 :: 		Box16.OnPressPtr      = Image18OnPress;
0x150F8	0x4969    LDR	R1, [PC, #420]
0x150FA	0x486B    LDR	R0, [PC, #428]
0x150FC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2950 :: 		Image50.OwnerScreen     = &GPS_Test;
0x150FE	0x4953    LDR	R1, [PC, #332]
0x15100	0x486A    LDR	R0, [PC, #424]
0x15102	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2951 :: 		Image50.Order           = 2;
0x15104	0x2102    MOVS	R1, #2
0x15106	0x486A    LDR	R0, [PC, #424]
0x15108	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2952 :: 		Image50.Left            = 16;
0x1510A	0x2110    MOVS	R1, #16
0x1510C	0x4869    LDR	R0, [PC, #420]
0x1510E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2953 :: 		Image50.Top             = 14;
0x15110	0x210E    MOVS	R1, #14
0x15112	0x4869    LDR	R0, [PC, #420]
0x15114	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2954 :: 		Image50.Width           = 22;
0x15116	0x2116    MOVS	R1, #22
0x15118	0x4868    LDR	R0, [PC, #416]
0x1511A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2955 :: 		Image50.Height          = 22;
0x1511C	0x2116    MOVS	R1, #22
0x1511E	0x4868    LDR	R0, [PC, #416]
0x15120	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2956 :: 		Image50.Picture_Type    = 0;
0x15122	0x2100    MOVS	R1, #0
0x15124	0x4867    LDR	R0, [PC, #412]
0x15126	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2957 :: 		Image50.Picture_Ratio   = 1;
0x15128	0x2101    MOVS	R1, #1
0x1512A	0x4867    LDR	R0, [PC, #412]
0x1512C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2958 :: 		Image50.Picture_Name    = icon_ok_bmp;
0x1512E	0x4967    LDR	R1, [PC, #412]
0x15130	0x4867    LDR	R0, [PC, #412]
0x15132	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2959 :: 		Image50.Visible         = 1;
0x15134	0x2101    MOVS	R1, #1
0x15136	0x4867    LDR	R0, [PC, #412]
0x15138	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2960 :: 		Image50.Active          = 0;
0x1513A	0x2100    MOVS	R1, #0
0x1513C	0x4866    LDR	R0, [PC, #408]
0x1513E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2961 :: 		Image50.OnUpPtr         = 0;
0x15140	0x2100    MOVS	R1, #0
0x15142	0x4866    LDR	R0, [PC, #408]
0x15144	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2962 :: 		Image50.OnDownPtr       = 0;
0x15146	0x2100    MOVS	R1, #0
0x15148	0x4865    LDR	R0, [PC, #404]
0x1514A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2963 :: 		Image50.OnClickPtr      = Image18OnPress;
0x1514C	0x4954    LDR	R1, [PC, #336]
0x1514E	0x4865    LDR	R0, [PC, #404]
0x15150	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2964 :: 		Image50.OnPressPtr      = Image18OnPress;
0x15152	0x4953    LDR	R1, [PC, #332]
0x15154	0x4864    LDR	R0, [PC, #400]
0x15156	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2966 :: 		Label32.OwnerScreen     = &GPS_Test;
0x15158	0x493C    LDR	R1, [PC, #240]
0x1515A	0x4864    LDR	R0, [PC, #400]
0x1515C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2967 :: 		Label32.Order           = 3;
0x1515E	0x2103    MOVS	R1, #3
0x15160	0x4863    LDR	R0, [PC, #396]
0x15162	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2968 :: 		Label32.Left            = 44;
0x15164	0x212C    MOVS	R1, #44
0x15166	0x4863    LDR	R0, [PC, #396]
0x15168	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2969 :: 		Label32.Top             = 14;
0x1516A	0x210E    MOVS	R1, #14
0x1516C	0x4862    LDR	R0, [PC, #392]
0x1516E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2970 :: 		Label32.Width           = 46;
0x15170	0x212E    MOVS	R1, #46
0x15172	0x4862    LDR	R0, [PC, #392]
0x15174	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2971 :: 		Label32.Height          = 25;
0x15176	0x2119    MOVS	R1, #25
0x15178	0x4861    LDR	R0, [PC, #388]
0x1517A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2972 :: 		Label32.Visible         = 1;
0x1517C	0x2101    MOVS	R1, #1
0x1517E	0x4861    LDR	R0, [PC, #388]
0x15180	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2973 :: 		Label32.Active          = 0;
0x15182	0x2100    MOVS	R1, #0
0x15184	0x4860    LDR	R0, [PC, #384]
0x15186	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2974 :: 		Label32.Caption         = Label32_Caption;
0x15188	0x4960    LDR	R1, [PC, #384]
0x1518A	0x4861    LDR	R0, [PC, #388]
0x1518C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2975 :: 		Label32.FontName        = Arial_Black16x23_Regular;
0x1518E	0xF6402123  MOVW	R1, #2595
0x15192	0x4860    LDR	R0, [PC, #384]
0x15194	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2976 :: 		Label32.Font_Color      = 0x0000;
0x15196	0x2100    MOVS	R1, #0
0x15198	0x485F    LDR	R0, [PC, #380]
0x1519A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2977 :: 		Label32.OnUpPtr         = 0;
0x1519C	0x2100    MOVS	R1, #0
0x1519E	0x485F    LDR	R0, [PC, #380]
0x151A0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2978 :: 		Label32.OnDownPtr       = 0;
0x151A2	0x2100    MOVS	R1, #0
0x151A4	0x485E    LDR	R0, [PC, #376]
0x151A6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2979 :: 		Label32.OnClickPtr      = 0;
0x151A8	0x2100    MOVS	R1, #0
0x151AA	0x485E    LDR	R0, [PC, #376]
0x151AC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2980 :: 		Label32.OnPressPtr      = 0;
0x151AE	0x2100    MOVS	R1, #0
0x151B0	0x485D    LDR	R0, [PC, #372]
0x151B2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2982 :: 		Label53.OwnerScreen     = &GPS_Test;
0x151B4	0x4925    LDR	R1, [PC, #148]
0x151B6	0x485D    LDR	R0, [PC, #372]
0x151B8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2983 :: 		Label53.Order           = 4;
0x151BA	0x2104    MOVS	R1, #4
0x151BC	0x485C    LDR	R0, [PC, #368]
0x151BE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2984 :: 		Label53.Left            = 159;
0x151C0	0x219F    MOVS	R1, #159
0x151C2	0x485C    LDR	R0, [PC, #368]
0x151C4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2985 :: 		Label53.Top             = 85;
0x151C6	0x2155    MOVS	R1, #85
0x151C8	0x485B    LDR	R0, [PC, #364]
0x151CA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2986 :: 		Label53.Width           = 65;
0x151CC	0x2141    MOVS	R1, #65
0x151CE	0x485B    LDR	R0, [PC, #364]
0x151D0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2987 :: 		Label53.Height          = 20;
0x151D2	0x2114    MOVS	R1, #20
0x151D4	0x485A    LDR	R0, [PC, #360]
0x151D6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2988 :: 		Label53.Visible         = 1;
0x151D8	0x2101    MOVS	R1, #1
0x151DA	0x485A    LDR	R0, [PC, #360]
0x151DC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2989 :: 		Label53.Active          = 1;
0x151DE	0x2101    MOVS	R1, #1
0x151E0	0x4859    LDR	R0, [PC, #356]
0x151E2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 2990 :: 		Label53.Caption         = Label53_Caption;
0x151E4	0x4959    LDR	R1, [PC, #356]
0x151E6	0x485A    LDR	R0, [PC, #360]
0x151E8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2991 :: 		Label53.FontName        = Arial_Black13x18_Regular;
0x151EA	0x2107    MOVS	R1, #7
0x151EC	0x4859    LDR	R0, [PC, #356]
0x151EE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2992 :: 		Label53.Font_Color      = 0x0000;
0x151F0	0x2100    MOVS	R1, #0
0x151F2	0x4859    LDR	R0, [PC, #356]
0x151F4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 2993 :: 		Label53.OnUpPtr         = 0;
0x151F6	0x2100    MOVS	R1, #0
0x151F8	0x4858    LDR	R0, [PC, #352]
0x151FA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2994 :: 		Label53.OnDownPtr       = 0;
0x151FC	0x2100    MOVS	R1, #0
0x151FE	0x4858    LDR	R0, [PC, #352]
0x15200	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2995 :: 		Label53.OnClickPtr      = 0;
0x15202	0x2100    MOVS	R1, #0
0x15204	0x4857    LDR	R0, [PC, #348]
0x15206	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2996 :: 		Label53.OnPressPtr      = 0;
0x15208	0x2100    MOVS	R1, #0
0x1520A	0x4857    LDR	R0, [PC, #348]
0x1520C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2998 :: 		Label54.OwnerScreen     = &GPS_Test;
0x1520E	0x490F    LDR	R1, [PC, #60]
0x15210	0x4856    LDR	R0, [PC, #344]
0x15212	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 2999 :: 		Label54.Order           = 5;
0x15214	0x2105    MOVS	R1, #5
0x15216	0x4856    LDR	R0, [PC, #344]
0x15218	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3000 :: 		Label54.Left            = 243;
0x1521A	0x21F3    MOVS	R1, #243
0x1521C	0x4855    LDR	R0, [PC, #340]
0x1521E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3001 :: 		Label54.Top             = 85;
0x15220	0x2155    MOVS	R1, #85
0x15222	0x4855    LDR	R0, [PC, #340]
0x15224	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3002 :: 		Label54.Width           = 36;
0x15226	0x2124    MOVS	R1, #36
0x15228	0x4854    LDR	R0, [PC, #336]
0x1522A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3003 :: 		Label54.Height          = 20;
0x1522C	0x2114    MOVS	R1, #20
0x1522E	0x4854    LDR	R0, [PC, #336]
0x15230	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3004 :: 		Label54.Visible         = 1;
0x15232	0x2101    MOVS	R1, #1
0x15234	0x4853    LDR	R0, [PC, #332]
0x15236	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3005 :: 		Label54.Active          = 1;
0x15238	0x2101    MOVS	R1, #1
0x1523A	0xE0A5    B	#330
0x1523C	0x1AE02000  	_Box9+36
0x15240	0x1AE42000  	_Box9+40
0x15244	0x1AE82000  	_Box9+44
0x15248	0x1AEC2000  	_Box9+48
0x1524C	0x23382000  	_GPS_Test+0
0x15250	0x1AF02000  	_Box16+0
0x15254	0x1AF42000  	_Box16+4
0x15258	0x1AF62000  	_Box16+6
0x1525C	0x1AF82000  	_Box16+8
0x15260	0x1AFA2000  	_Box16+10
0x15264	0x1AFC2000  	_Box16+12
0x15268	0x1AFE2000  	_Box16+14
0x1526C	0x1B002000  	_Box16+16
0x15270	0x1B022000  	_Box16+18
0x15274	0x1B032000  	_Box16+19
0x15278	0x1B042000  	_Box16+20
0x1527C	0x1B052000  	_Box16+21
0x15280	0x1B062000  	_Box16+22
0x15284	0x1B082000  	_Box16+24
0x15288	0x1B0A2000  	_Box16+26
0x1528C	0x1B0C2000  	_Box16+28
0x15290	0x1B0E2000  	_Box16+30
0x15294	0x1B102000  	_Box16+32
0x15298	0x1B142000  	_Box16+36
0x1529C	0x1B182000  	_Box16+40
0x152A0	0xC5B10000  	_Image18OnPress+0
0x152A4	0x1B1C2000  	_Box16+44
0x152A8	0x1B202000  	_Box16+48
0x152AC	0x1A942000  	_Image50+0
0x152B0	0x1A982000  	_Image50+4
0x152B4	0x1A9A2000  	_Image50+6
0x152B8	0x1A9C2000  	_Image50+8
0x152BC	0x1A9E2000  	_Image50+10
0x152C0	0x1AA02000  	_Image50+12
0x152C4	0x1AAA2000  	_Image50+22
0x152C8	0x1AAB2000  	_Image50+23
0x152CC	0x94B4003D  	#4035764
0x152D0	0x1AA42000  	_Image50+16
0x152D4	0x1AA82000  	_Image50+20
0x152D8	0x1AA92000  	_Image50+21
0x152DC	0x1AAC2000  	_Image50+24
0x152E0	0x1AB02000  	_Image50+28
0x152E4	0x1AB42000  	_Image50+32
0x152E8	0x1AB82000  	_Image50+36
0x152EC	0x16F82000  	_Label32+0
0x152F0	0x16FC2000  	_Label32+4
0x152F4	0x16FE2000  	_Label32+6
0x152F8	0x17002000  	_Label32+8
0x152FC	0x17022000  	_Label32+10
0x15300	0x17042000  	_Label32+12
0x15304	0x17122000  	_Label32+26
0x15308	0x17132000  	_Label32+27
0x1530C	0x01CF2000  	_Label32_Caption+0
0x15310	0x17082000  	_Label32+16
0x15314	0x170C2000  	_Label32+20
0x15318	0x17102000  	_Label32+24
0x1531C	0x17142000  	_Label32+28
0x15320	0x17182000  	_Label32+32
0x15324	0x171C2000  	_Label32+36
0x15328	0x17202000  	_Label32+40
0x1532C	0x17242000  	_Label53+0
0x15330	0x17282000  	_Label53+4
0x15334	0x172A2000  	_Label53+6
0x15338	0x172C2000  	_Label53+8
0x1533C	0x172E2000  	_Label53+10
0x15340	0x17302000  	_Label53+12
0x15344	0x173E2000  	_Label53+26
0x15348	0x173F2000  	_Label53+27
0x1534C	0x01D42000  	_Label53_Caption+0
0x15350	0x17342000  	_Label53+16
0x15354	0x17382000  	_Label53+20
0x15358	0x173C2000  	_Label53+24
0x1535C	0x17402000  	_Label53+28
0x15360	0x17442000  	_Label53+32
0x15364	0x17482000  	_Label53+36
0x15368	0x174C2000  	_Label53+40
0x1536C	0x17502000  	_Label54+0
0x15370	0x17542000  	_Label54+4
0x15374	0x17562000  	_Label54+6
0x15378	0x17582000  	_Label54+8
0x1537C	0x175A2000  	_Label54+10
0x15380	0x175C2000  	_Label54+12
0x15384	0x176A2000  	_Label54+26
0x15388	0x4878    LDR	R0, [PC, #480]
0x1538A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3006 :: 		Label54.Caption         = Label54_Caption;
0x1538C	0x4978    LDR	R1, [PC, #480]
0x1538E	0x4879    LDR	R0, [PC, #484]
0x15390	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3007 :: 		Label54.FontName        = Arial_Black13x18_Regular;
0x15392	0x2107    MOVS	R1, #7
0x15394	0x4878    LDR	R0, [PC, #480]
0x15396	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3008 :: 		Label54.Font_Color      = 0x0000;
0x15398	0x2100    MOVS	R1, #0
0x1539A	0x4878    LDR	R0, [PC, #480]
0x1539C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3009 :: 		Label54.OnUpPtr         = 0;
0x1539E	0x2100    MOVS	R1, #0
0x153A0	0x4877    LDR	R0, [PC, #476]
0x153A2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3010 :: 		Label54.OnDownPtr       = 0;
0x153A4	0x2100    MOVS	R1, #0
0x153A6	0x4877    LDR	R0, [PC, #476]
0x153A8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3011 :: 		Label54.OnClickPtr      = 0;
0x153AA	0x2100    MOVS	R1, #0
0x153AC	0x4876    LDR	R0, [PC, #472]
0x153AE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3012 :: 		Label54.OnPressPtr      = 0;
0x153B0	0x2100    MOVS	R1, #0
0x153B2	0x4876    LDR	R0, [PC, #472]
0x153B4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3014 :: 		Label55.OwnerScreen     = &GPS_Test;
0x153B6	0x4976    LDR	R1, [PC, #472]
0x153B8	0x4876    LDR	R0, [PC, #472]
0x153BA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3015 :: 		Label55.Order           = 6;
0x153BC	0x2106    MOVS	R1, #6
0x153BE	0x4876    LDR	R0, [PC, #472]
0x153C0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3016 :: 		Label55.Left            = 284;
0x153C2	0xF240111C  MOVW	R1, #284
0x153C6	0x4875    LDR	R0, [PC, #468]
0x153C8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3017 :: 		Label55.Top             = 85;
0x153CA	0x2155    MOVS	R1, #85
0x153CC	0x4874    LDR	R0, [PC, #464]
0x153CE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3018 :: 		Label55.Width           = 36;
0x153D0	0x2124    MOVS	R1, #36
0x153D2	0x4874    LDR	R0, [PC, #464]
0x153D4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3019 :: 		Label55.Height          = 20;
0x153D6	0x2114    MOVS	R1, #20
0x153D8	0x4873    LDR	R0, [PC, #460]
0x153DA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3020 :: 		Label55.Visible         = 1;
0x153DC	0x2101    MOVS	R1, #1
0x153DE	0x4873    LDR	R0, [PC, #460]
0x153E0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3021 :: 		Label55.Active          = 1;
0x153E2	0x2101    MOVS	R1, #1
0x153E4	0x4872    LDR	R0, [PC, #456]
0x153E6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3022 :: 		Label55.Caption         = Label55_Caption;
0x153E8	0x4972    LDR	R1, [PC, #456]
0x153EA	0x4873    LDR	R0, [PC, #460]
0x153EC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3023 :: 		Label55.FontName        = Arial_Black13x18_Regular;
0x153EE	0x2107    MOVS	R1, #7
0x153F0	0x4872    LDR	R0, [PC, #456]
0x153F2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3024 :: 		Label55.Font_Color      = 0x0000;
0x153F4	0x2100    MOVS	R1, #0
0x153F6	0x4872    LDR	R0, [PC, #456]
0x153F8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3025 :: 		Label55.OnUpPtr         = 0;
0x153FA	0x2100    MOVS	R1, #0
0x153FC	0x4871    LDR	R0, [PC, #452]
0x153FE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3026 :: 		Label55.OnDownPtr       = 0;
0x15400	0x2100    MOVS	R1, #0
0x15402	0x4871    LDR	R0, [PC, #452]
0x15404	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3027 :: 		Label55.OnClickPtr      = 0;
0x15406	0x2100    MOVS	R1, #0
0x15408	0x4870    LDR	R0, [PC, #448]
0x1540A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3028 :: 		Label55.OnPressPtr      = 0;
0x1540C	0x2100    MOVS	R1, #0
0x1540E	0x4870    LDR	R0, [PC, #448]
0x15410	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3030 :: 		Label56.OwnerScreen     = &GPS_Test;
0x15412	0x495F    LDR	R1, [PC, #380]
0x15414	0x486F    LDR	R0, [PC, #444]
0x15416	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3031 :: 		Label56.Order           = 7;
0x15418	0x2107    MOVS	R1, #7
0x1541A	0x486F    LDR	R0, [PC, #444]
0x1541C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3032 :: 		Label56.Left            = 279;
0x1541E	0xF2401117  MOVW	R1, #279
0x15422	0x486E    LDR	R0, [PC, #440]
0x15424	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3033 :: 		Label56.Top             = 85;
0x15426	0x2155    MOVS	R1, #85
0x15428	0x486D    LDR	R0, [PC, #436]
0x1542A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3034 :: 		Label56.Width           = 4;
0x1542C	0x2104    MOVS	R1, #4
0x1542E	0x486D    LDR	R0, [PC, #436]
0x15430	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3035 :: 		Label56.Height          = 20;
0x15432	0x2114    MOVS	R1, #20
0x15434	0x486C    LDR	R0, [PC, #432]
0x15436	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3036 :: 		Label56.Visible         = 1;
0x15438	0x2101    MOVS	R1, #1
0x1543A	0x486C    LDR	R0, [PC, #432]
0x1543C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3037 :: 		Label56.Active          = 1;
0x1543E	0x2101    MOVS	R1, #1
0x15440	0x486B    LDR	R0, [PC, #428]
0x15442	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3038 :: 		Label56.Caption         = Label56_Caption;
0x15444	0x496B    LDR	R1, [PC, #428]
0x15446	0x486C    LDR	R0, [PC, #432]
0x15448	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3039 :: 		Label56.FontName        = Arial_Black13x18_Regular;
0x1544A	0x2107    MOVS	R1, #7
0x1544C	0x486B    LDR	R0, [PC, #428]
0x1544E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3040 :: 		Label56.Font_Color      = 0x0000;
0x15450	0x2100    MOVS	R1, #0
0x15452	0x486B    LDR	R0, [PC, #428]
0x15454	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3041 :: 		Label56.OnUpPtr         = 0;
0x15456	0x2100    MOVS	R1, #0
0x15458	0x486A    LDR	R0, [PC, #424]
0x1545A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3042 :: 		Label56.OnDownPtr       = 0;
0x1545C	0x2100    MOVS	R1, #0
0x1545E	0x486A    LDR	R0, [PC, #424]
0x15460	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3043 :: 		Label56.OnClickPtr      = 0;
0x15462	0x2100    MOVS	R1, #0
0x15464	0x4869    LDR	R0, [PC, #420]
0x15466	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3044 :: 		Label56.OnPressPtr      = 0;
0x15468	0x2100    MOVS	R1, #0
0x1546A	0x4869    LDR	R0, [PC, #420]
0x1546C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3046 :: 		Label57.OwnerScreen     = &GPS_Test;
0x1546E	0x4948    LDR	R1, [PC, #288]
0x15470	0x4868    LDR	R0, [PC, #416]
0x15472	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3047 :: 		Label57.Order           = 8;
0x15474	0x2108    MOVS	R1, #8
0x15476	0x4868    LDR	R0, [PC, #416]
0x15478	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3048 :: 		Label57.Left            = 159;
0x1547A	0x219F    MOVS	R1, #159
0x1547C	0x4867    LDR	R0, [PC, #412]
0x1547E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3049 :: 		Label57.Top             = 108;
0x15480	0x216C    MOVS	R1, #108
0x15482	0x4867    LDR	R0, [PC, #412]
0x15484	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3050 :: 		Label57.Width           = 77;
0x15486	0x214D    MOVS	R1, #77
0x15488	0x4866    LDR	R0, [PC, #408]
0x1548A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3051 :: 		Label57.Height          = 20;
0x1548C	0x2114    MOVS	R1, #20
0x1548E	0x4866    LDR	R0, [PC, #408]
0x15490	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3052 :: 		Label57.Visible         = 1;
0x15492	0x2101    MOVS	R1, #1
0x15494	0x4865    LDR	R0, [PC, #404]
0x15496	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3053 :: 		Label57.Active          = 1;
0x15498	0x2101    MOVS	R1, #1
0x1549A	0x4865    LDR	R0, [PC, #404]
0x1549C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3054 :: 		Label57.Caption         = Label57_Caption;
0x1549E	0x4965    LDR	R1, [PC, #404]
0x154A0	0x4865    LDR	R0, [PC, #404]
0x154A2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3055 :: 		Label57.FontName        = Arial_Black13x18_Regular;
0x154A4	0x2107    MOVS	R1, #7
0x154A6	0x4865    LDR	R0, [PC, #404]
0x154A8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3056 :: 		Label57.Font_Color      = 0x0000;
0x154AA	0x2100    MOVS	R1, #0
0x154AC	0x4864    LDR	R0, [PC, #400]
0x154AE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3057 :: 		Label57.OnUpPtr         = 0;
0x154B0	0x2100    MOVS	R1, #0
0x154B2	0x4864    LDR	R0, [PC, #400]
0x154B4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3058 :: 		Label57.OnDownPtr       = 0;
0x154B6	0x2100    MOVS	R1, #0
0x154B8	0x4863    LDR	R0, [PC, #396]
0x154BA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3059 :: 		Label57.OnClickPtr      = 0;
0x154BC	0x2100    MOVS	R1, #0
0x154BE	0x4863    LDR	R0, [PC, #396]
0x154C0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3060 :: 		Label57.OnPressPtr      = 0;
0x154C2	0x2100    MOVS	R1, #0
0x154C4	0x4862    LDR	R0, [PC, #392]
0x154C6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3062 :: 		Label58.OwnerScreen     = &GPS_Test;
0x154C8	0x4931    LDR	R1, [PC, #196]
0x154CA	0x4862    LDR	R0, [PC, #392]
0x154CC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3063 :: 		Label58.Order           = 9;
0x154CE	0x2109    MOVS	R1, #9
0x154D0	0x4861    LDR	R0, [PC, #388]
0x154D2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3064 :: 		Label58.Left            = 243;
0x154D4	0x21F3    MOVS	R1, #243
0x154D6	0x4861    LDR	R0, [PC, #388]
0x154D8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3065 :: 		Label58.Top             = 108;
0x154DA	0x216C    MOVS	R1, #108
0x154DC	0x4860    LDR	R0, [PC, #384]
0x154DE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3066 :: 		Label58.Width           = 36;
0x154E0	0x2124    MOVS	R1, #36
0x154E2	0x4860    LDR	R0, [PC, #384]
0x154E4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3067 :: 		Label58.Height          = 20;
0x154E6	0x2114    MOVS	R1, #20
0x154E8	0x485F    LDR	R0, [PC, #380]
0x154EA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3068 :: 		Label58.Visible         = 1;
0x154EC	0x2101    MOVS	R1, #1
0x154EE	0x485F    LDR	R0, [PC, #380]
0x154F0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3069 :: 		Label58.Active          = 1;
0x154F2	0x2101    MOVS	R1, #1
0x154F4	0x485E    LDR	R0, [PC, #376]
0x154F6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3070 :: 		Label58.Caption         = Label58_Caption;
0x154F8	0x495E    LDR	R1, [PC, #376]
0x154FA	0x485F    LDR	R0, [PC, #380]
0x154FC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3071 :: 		Label58.FontName        = Arial_Black13x18_Regular;
0x154FE	0x2107    MOVS	R1, #7
0x15500	0x485E    LDR	R0, [PC, #376]
0x15502	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3072 :: 		Label58.Font_Color      = 0x0000;
0x15504	0x2100    MOVS	R1, #0
0x15506	0x485E    LDR	R0, [PC, #376]
0x15508	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3073 :: 		Label58.OnUpPtr         = 0;
0x1550A	0x2100    MOVS	R1, #0
0x1550C	0x485D    LDR	R0, [PC, #372]
0x1550E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3074 :: 		Label58.OnDownPtr       = 0;
0x15510	0x2100    MOVS	R1, #0
0x15512	0x485D    LDR	R0, [PC, #372]
0x15514	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3075 :: 		Label58.OnClickPtr      = 0;
0x15516	0x2100    MOVS	R1, #0
0x15518	0x485C    LDR	R0, [PC, #368]
0x1551A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3076 :: 		Label58.OnPressPtr      = 0;
0x1551C	0x2100    MOVS	R1, #0
0x1551E	0x485C    LDR	R0, [PC, #368]
0x15520	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3078 :: 		Label59.OwnerScreen     = &GPS_Test;
0x15522	0x491B    LDR	R1, [PC, #108]
0x15524	0x485B    LDR	R0, [PC, #364]
0x15526	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3079 :: 		Label59.Order           = 10;
0x15528	0x210A    MOVS	R1, #10
0x1552A	0x485B    LDR	R0, [PC, #364]
0x1552C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3080 :: 		Label59.Left            = 284;
0x1552E	0xF240111C  MOVW	R1, #284
0x15532	0x485A    LDR	R0, [PC, #360]
0x15534	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3081 :: 		Label59.Top             = 108;
0x15536	0x216C    MOVS	R1, #108
0x15538	0x4859    LDR	R0, [PC, #356]
0x1553A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3082 :: 		Label59.Width           = 36;
0x1553C	0x2124    MOVS	R1, #36
0x1553E	0x4859    LDR	R0, [PC, #356]
0x15540	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3083 :: 		Label59.Height          = 20;
0x15542	0x2114    MOVS	R1, #20
0x15544	0x4858    LDR	R0, [PC, #352]
0x15546	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3084 :: 		Label59.Visible         = 1;
0x15548	0x2101    MOVS	R1, #1
0x1554A	0x4858    LDR	R0, [PC, #352]
0x1554C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3085 :: 		Label59.Active          = 1;
0x1554E	0x2101    MOVS	R1, #1
0x15550	0x4857    LDR	R0, [PC, #348]
0x15552	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3086 :: 		Label59.Caption         = Label59_Caption;
0x15554	0x4957    LDR	R1, [PC, #348]
0x15556	0x4858    LDR	R0, [PC, #352]
0x15558	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3087 :: 		Label59.FontName        = Arial_Black13x18_Regular;
0x1555A	0x2107    MOVS	R1, #7
0x1555C	0x4857    LDR	R0, [PC, #348]
0x1555E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3088 :: 		Label59.Font_Color      = 0x0000;
0x15560	0x2100    MOVS	R1, #0
0x15562	0x4857    LDR	R0, [PC, #348]
0x15564	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3089 :: 		Label59.OnUpPtr         = 0;
0x15566	0x2100    MOVS	R1, #0
0x15568	0xF000B8AC  B	#344
0x1556C	0x176B2000  	_Label54+27
0x15570	0x01DE2000  	_Label54_Caption+0
0x15574	0x17602000  	_Label54+16
0x15578	0x17642000  	_Label54+20
0x1557C	0x17682000  	_Label54+24
0x15580	0x176C2000  	_Label54+28
0x15584	0x17702000  	_Label54+32
0x15588	0x17742000  	_Label54+36
0x1558C	0x17782000  	_Label54+40
0x15590	0x23382000  	_GPS_Test+0
0x15594	0x177C2000  	_Label55+0
0x15598	0x17802000  	_Label55+4
0x1559C	0x17822000  	_Label55+6
0x155A0	0x17842000  	_Label55+8
0x155A4	0x17862000  	_Label55+10
0x155A8	0x17882000  	_Label55+12
0x155AC	0x17962000  	_Label55+26
0x155B0	0x17972000  	_Label55+27
0x155B4	0x01E32000  	_Label55_Caption+0
0x155B8	0x178C2000  	_Label55+16
0x155BC	0x17902000  	_Label55+20
0x155C0	0x17942000  	_Label55+24
0x155C4	0x17982000  	_Label55+28
0x155C8	0x179C2000  	_Label55+32
0x155CC	0x17A02000  	_Label55+36
0x155D0	0x17A42000  	_Label55+40
0x155D4	0x17A82000  	_Label56+0
0x155D8	0x17AC2000  	_Label56+4
0x155DC	0x17AE2000  	_Label56+6
0x155E0	0x17B02000  	_Label56+8
0x155E4	0x17B22000  	_Label56+10
0x155E8	0x17B42000  	_Label56+12
0x155EC	0x17C22000  	_Label56+26
0x155F0	0x17C32000  	_Label56+27
0x155F4	0x01E82000  	_Label56_Caption+0
0x155F8	0x17B82000  	_Label56+16
0x155FC	0x17BC2000  	_Label56+20
0x15600	0x17C02000  	_Label56+24
0x15604	0x17C42000  	_Label56+28
0x15608	0x17C82000  	_Label56+32
0x1560C	0x17CC2000  	_Label56+36
0x15610	0x17D02000  	_Label56+40
0x15614	0x17D42000  	_Label57+0
0x15618	0x17D82000  	_Label57+4
0x1561C	0x17DA2000  	_Label57+6
0x15620	0x17DC2000  	_Label57+8
0x15624	0x17DE2000  	_Label57+10
0x15628	0x17E02000  	_Label57+12
0x1562C	0x17EE2000  	_Label57+26
0x15630	0x17EF2000  	_Label57+27
0x15634	0x01EA2000  	_Label57_Caption+0
0x15638	0x17E42000  	_Label57+16
0x1563C	0x17E82000  	_Label57+20
0x15640	0x17EC2000  	_Label57+24
0x15644	0x17F02000  	_Label57+28
0x15648	0x17F42000  	_Label57+32
0x1564C	0x17F82000  	_Label57+36
0x15650	0x17FC2000  	_Label57+40
0x15654	0x18002000  	_Label58+0
0x15658	0x18042000  	_Label58+4
0x1565C	0x18062000  	_Label58+6
0x15660	0x18082000  	_Label58+8
0x15664	0x180A2000  	_Label58+10
0x15668	0x180C2000  	_Label58+12
0x1566C	0x181A2000  	_Label58+26
0x15670	0x181B2000  	_Label58+27
0x15674	0x01F52000  	_Label58_Caption+0
0x15678	0x18102000  	_Label58+16
0x1567C	0x18142000  	_Label58+20
0x15680	0x18182000  	_Label58+24
0x15684	0x181C2000  	_Label58+28
0x15688	0x18202000  	_Label58+32
0x1568C	0x18242000  	_Label58+36
0x15690	0x18282000  	_Label58+40
0x15694	0x182C2000  	_Label59+0
0x15698	0x18302000  	_Label59+4
0x1569C	0x18322000  	_Label59+6
0x156A0	0x18342000  	_Label59+8
0x156A4	0x18362000  	_Label59+10
0x156A8	0x18382000  	_Label59+12
0x156AC	0x18462000  	_Label59+26
0x156B0	0x18472000  	_Label59+27
0x156B4	0x01FA2000  	_Label59_Caption+0
0x156B8	0x183C2000  	_Label59+16
0x156BC	0x18402000  	_Label59+20
0x156C0	0x18442000  	_Label59+24
0x156C4	0x4878    LDR	R0, [PC, #480]
0x156C6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3090 :: 		Label59.OnDownPtr       = 0;
0x156C8	0x2100    MOVS	R1, #0
0x156CA	0x4878    LDR	R0, [PC, #480]
0x156CC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3091 :: 		Label59.OnClickPtr      = 0;
0x156CE	0x2100    MOVS	R1, #0
0x156D0	0x4877    LDR	R0, [PC, #476]
0x156D2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3092 :: 		Label59.OnPressPtr      = 0;
0x156D4	0x2100    MOVS	R1, #0
0x156D6	0x4877    LDR	R0, [PC, #476]
0x156D8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3094 :: 		Label60.OwnerScreen     = &GPS_Test;
0x156DA	0x4977    LDR	R1, [PC, #476]
0x156DC	0x4877    LDR	R0, [PC, #476]
0x156DE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3095 :: 		Label60.Order           = 11;
0x156E0	0x210B    MOVS	R1, #11
0x156E2	0x4877    LDR	R0, [PC, #476]
0x156E4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3096 :: 		Label60.Left            = 279;
0x156E6	0xF2401117  MOVW	R1, #279
0x156EA	0x4876    LDR	R0, [PC, #472]
0x156EC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3097 :: 		Label60.Top             = 108;
0x156EE	0x216C    MOVS	R1, #108
0x156F0	0x4875    LDR	R0, [PC, #468]
0x156F2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3098 :: 		Label60.Width           = 4;
0x156F4	0x2104    MOVS	R1, #4
0x156F6	0x4875    LDR	R0, [PC, #468]
0x156F8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3099 :: 		Label60.Height          = 20;
0x156FA	0x2114    MOVS	R1, #20
0x156FC	0x4874    LDR	R0, [PC, #464]
0x156FE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3100 :: 		Label60.Visible         = 1;
0x15700	0x2101    MOVS	R1, #1
0x15702	0x4874    LDR	R0, [PC, #464]
0x15704	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3101 :: 		Label60.Active          = 1;
0x15706	0x2101    MOVS	R1, #1
0x15708	0x4873    LDR	R0, [PC, #460]
0x1570A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3102 :: 		Label60.Caption         = Label60_Caption;
0x1570C	0x4973    LDR	R1, [PC, #460]
0x1570E	0x4874    LDR	R0, [PC, #464]
0x15710	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3103 :: 		Label60.FontName        = Arial_Black13x18_Regular;
0x15712	0x2107    MOVS	R1, #7
0x15714	0x4873    LDR	R0, [PC, #460]
0x15716	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3104 :: 		Label60.Font_Color      = 0x0000;
0x15718	0x2100    MOVS	R1, #0
0x1571A	0x4873    LDR	R0, [PC, #460]
0x1571C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3105 :: 		Label60.OnUpPtr         = 0;
0x1571E	0x2100    MOVS	R1, #0
0x15720	0x4872    LDR	R0, [PC, #456]
0x15722	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3106 :: 		Label60.OnDownPtr       = 0;
0x15724	0x2100    MOVS	R1, #0
0x15726	0x4872    LDR	R0, [PC, #456]
0x15728	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3107 :: 		Label60.OnClickPtr      = 0;
0x1572A	0x2100    MOVS	R1, #0
0x1572C	0x4871    LDR	R0, [PC, #452]
0x1572E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3108 :: 		Label60.OnPressPtr      = 0;
0x15730	0x2100    MOVS	R1, #0
0x15732	0x4871    LDR	R0, [PC, #452]
0x15734	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3110 :: 		Label61.OwnerScreen     = &GPS_Test;
0x15736	0x4960    LDR	R1, [PC, #384]
0x15738	0x4870    LDR	R0, [PC, #448]
0x1573A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3111 :: 		Label61.Order           = 12;
0x1573C	0x210C    MOVS	R1, #12
0x1573E	0x4870    LDR	R0, [PC, #448]
0x15740	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3112 :: 		Label61.Left            = 159;
0x15742	0x219F    MOVS	R1, #159
0x15744	0x486F    LDR	R0, [PC, #444]
0x15746	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3113 :: 		Label61.Top             = 131;
0x15748	0x2183    MOVS	R1, #131
0x1574A	0x486F    LDR	R0, [PC, #444]
0x1574C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3114 :: 		Label61.Width           = 50;
0x1574E	0x2132    MOVS	R1, #50
0x15750	0x486E    LDR	R0, [PC, #440]
0x15752	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3115 :: 		Label61.Height          = 20;
0x15754	0x2114    MOVS	R1, #20
0x15756	0x486E    LDR	R0, [PC, #440]
0x15758	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3116 :: 		Label61.Visible         = 1;
0x1575A	0x2101    MOVS	R1, #1
0x1575C	0x486D    LDR	R0, [PC, #436]
0x1575E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3117 :: 		Label61.Active          = 1;
0x15760	0x2101    MOVS	R1, #1
0x15762	0x486D    LDR	R0, [PC, #436]
0x15764	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3118 :: 		Label61.Caption         = Label61_Caption;
0x15766	0x496D    LDR	R1, [PC, #436]
0x15768	0x486D    LDR	R0, [PC, #436]
0x1576A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3119 :: 		Label61.FontName        = Arial_Black13x18_Regular;
0x1576C	0x2107    MOVS	R1, #7
0x1576E	0x486D    LDR	R0, [PC, #436]
0x15770	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3120 :: 		Label61.Font_Color      = 0x0000;
0x15772	0x2100    MOVS	R1, #0
0x15774	0x486C    LDR	R0, [PC, #432]
0x15776	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3121 :: 		Label61.OnUpPtr         = 0;
0x15778	0x2100    MOVS	R1, #0
0x1577A	0x486C    LDR	R0, [PC, #432]
0x1577C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3122 :: 		Label61.OnDownPtr       = 0;
0x1577E	0x2100    MOVS	R1, #0
0x15780	0x486B    LDR	R0, [PC, #428]
0x15782	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3123 :: 		Label61.OnClickPtr      = 0;
0x15784	0x2100    MOVS	R1, #0
0x15786	0x486B    LDR	R0, [PC, #428]
0x15788	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3124 :: 		Label61.OnPressPtr      = 0;
0x1578A	0x2100    MOVS	R1, #0
0x1578C	0x486A    LDR	R0, [PC, #424]
0x1578E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3126 :: 		Label62.OwnerScreen     = &GPS_Test;
0x15790	0x4949    LDR	R1, [PC, #292]
0x15792	0x486A    LDR	R0, [PC, #424]
0x15794	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3127 :: 		Label62.Order           = 13;
0x15796	0x210D    MOVS	R1, #13
0x15798	0x4869    LDR	R0, [PC, #420]
0x1579A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3128 :: 		Label62.Left            = 243;
0x1579C	0x21F3    MOVS	R1, #243
0x1579E	0x4869    LDR	R0, [PC, #420]
0x157A0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3129 :: 		Label62.Top             = 131;
0x157A2	0x2183    MOVS	R1, #131
0x157A4	0x4868    LDR	R0, [PC, #416]
0x157A6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3130 :: 		Label62.Width           = 36;
0x157A8	0x2124    MOVS	R1, #36
0x157AA	0x4868    LDR	R0, [PC, #416]
0x157AC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3131 :: 		Label62.Height          = 20;
0x157AE	0x2114    MOVS	R1, #20
0x157B0	0x4867    LDR	R0, [PC, #412]
0x157B2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3132 :: 		Label62.Visible         = 1;
0x157B4	0x2101    MOVS	R1, #1
0x157B6	0x4867    LDR	R0, [PC, #412]
0x157B8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3133 :: 		Label62.Active          = 1;
0x157BA	0x2101    MOVS	R1, #1
0x157BC	0x4866    LDR	R0, [PC, #408]
0x157BE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3134 :: 		Label62.Caption         = Label62_Caption;
0x157C0	0x4966    LDR	R1, [PC, #408]
0x157C2	0x4867    LDR	R0, [PC, #412]
0x157C4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3135 :: 		Label62.FontName        = Arial_Black13x18_Regular;
0x157C6	0x2107    MOVS	R1, #7
0x157C8	0x4866    LDR	R0, [PC, #408]
0x157CA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3136 :: 		Label62.Font_Color      = 0x0000;
0x157CC	0x2100    MOVS	R1, #0
0x157CE	0x4866    LDR	R0, [PC, #408]
0x157D0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3137 :: 		Label62.OnUpPtr         = 0;
0x157D2	0x2100    MOVS	R1, #0
0x157D4	0x4865    LDR	R0, [PC, #404]
0x157D6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3138 :: 		Label62.OnDownPtr       = 0;
0x157D8	0x2100    MOVS	R1, #0
0x157DA	0x4865    LDR	R0, [PC, #404]
0x157DC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3139 :: 		Label62.OnClickPtr      = 0;
0x157DE	0x2100    MOVS	R1, #0
0x157E0	0x4864    LDR	R0, [PC, #400]
0x157E2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3140 :: 		Label62.OnPressPtr      = 0;
0x157E4	0x2100    MOVS	R1, #0
0x157E6	0x4864    LDR	R0, [PC, #400]
0x157E8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3142 :: 		Label63.OwnerScreen     = &GPS_Test;
0x157EA	0x4933    LDR	R1, [PC, #204]
0x157EC	0x4863    LDR	R0, [PC, #396]
0x157EE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3143 :: 		Label63.Order           = 14;
0x157F0	0x210E    MOVS	R1, #14
0x157F2	0x4863    LDR	R0, [PC, #396]
0x157F4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3144 :: 		Label63.Left            = 284;
0x157F6	0xF240111C  MOVW	R1, #284
0x157FA	0x4862    LDR	R0, [PC, #392]
0x157FC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3145 :: 		Label63.Top             = 131;
0x157FE	0x2183    MOVS	R1, #131
0x15800	0x4861    LDR	R0, [PC, #388]
0x15802	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3146 :: 		Label63.Width           = 36;
0x15804	0x2124    MOVS	R1, #36
0x15806	0x4861    LDR	R0, [PC, #388]
0x15808	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3147 :: 		Label63.Height          = 20;
0x1580A	0x2114    MOVS	R1, #20
0x1580C	0x4860    LDR	R0, [PC, #384]
0x1580E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3148 :: 		Label63.Visible         = 1;
0x15810	0x2101    MOVS	R1, #1
0x15812	0x4860    LDR	R0, [PC, #384]
0x15814	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3149 :: 		Label63.Active          = 1;
0x15816	0x2101    MOVS	R1, #1
0x15818	0x485F    LDR	R0, [PC, #380]
0x1581A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3150 :: 		Label63.Caption         = Label63_Caption;
0x1581C	0x495F    LDR	R1, [PC, #380]
0x1581E	0x4860    LDR	R0, [PC, #384]
0x15820	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3151 :: 		Label63.FontName        = Arial_Black13x18_Regular;
0x15822	0x2107    MOVS	R1, #7
0x15824	0x485F    LDR	R0, [PC, #380]
0x15826	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3152 :: 		Label63.Font_Color      = 0x0000;
0x15828	0x2100    MOVS	R1, #0
0x1582A	0x485F    LDR	R0, [PC, #380]
0x1582C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3153 :: 		Label63.OnUpPtr         = 0;
0x1582E	0x2100    MOVS	R1, #0
0x15830	0x485E    LDR	R0, [PC, #376]
0x15832	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3154 :: 		Label63.OnDownPtr       = 0;
0x15834	0x2100    MOVS	R1, #0
0x15836	0x485E    LDR	R0, [PC, #376]
0x15838	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3155 :: 		Label63.OnClickPtr      = 0;
0x1583A	0x2100    MOVS	R1, #0
0x1583C	0x485D    LDR	R0, [PC, #372]
0x1583E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3156 :: 		Label63.OnPressPtr      = 0;
0x15840	0x2100    MOVS	R1, #0
0x15842	0x485D    LDR	R0, [PC, #372]
0x15844	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3158 :: 		Label64.OwnerScreen     = &GPS_Test;
0x15846	0x491C    LDR	R1, [PC, #112]
0x15848	0x485C    LDR	R0, [PC, #368]
0x1584A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3159 :: 		Label64.Order           = 15;
0x1584C	0x210F    MOVS	R1, #15
0x1584E	0x485C    LDR	R0, [PC, #368]
0x15850	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3160 :: 		Label64.Left            = 279;
0x15852	0xF2401117  MOVW	R1, #279
0x15856	0x485B    LDR	R0, [PC, #364]
0x15858	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3161 :: 		Label64.Top             = 131;
0x1585A	0x2183    MOVS	R1, #131
0x1585C	0x485A    LDR	R0, [PC, #360]
0x1585E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3162 :: 		Label64.Width           = 4;
0x15860	0x2104    MOVS	R1, #4
0x15862	0x485A    LDR	R0, [PC, #360]
0x15864	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3163 :: 		Label64.Height          = 20;
0x15866	0x2114    MOVS	R1, #20
0x15868	0x4859    LDR	R0, [PC, #356]
0x1586A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3164 :: 		Label64.Visible         = 1;
0x1586C	0x2101    MOVS	R1, #1
0x1586E	0x4859    LDR	R0, [PC, #356]
0x15870	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3165 :: 		Label64.Active          = 1;
0x15872	0x2101    MOVS	R1, #1
0x15874	0x4858    LDR	R0, [PC, #352]
0x15876	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3166 :: 		Label64.Caption         = Label64_Caption;
0x15878	0x4958    LDR	R1, [PC, #352]
0x1587A	0x4859    LDR	R0, [PC, #356]
0x1587C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3167 :: 		Label64.FontName        = Arial_Black13x18_Regular;
0x1587E	0x2107    MOVS	R1, #7
0x15880	0x4858    LDR	R0, [PC, #352]
0x15882	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3168 :: 		Label64.Font_Color      = 0x0000;
0x15884	0x2100    MOVS	R1, #0
0x15886	0x4858    LDR	R0, [PC, #352]
0x15888	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3169 :: 		Label64.OnUpPtr         = 0;
0x1588A	0x2100    MOVS	R1, #0
0x1588C	0x4857    LDR	R0, [PC, #348]
0x1588E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3170 :: 		Label64.OnDownPtr       = 0;
0x15890	0x2100    MOVS	R1, #0
0x15892	0x4857    LDR	R0, [PC, #348]
0x15894	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3171 :: 		Label64.OnClickPtr      = 0;
0x15896	0x2100    MOVS	R1, #0
0x15898	0x4856    LDR	R0, [PC, #344]
0x1589A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3172 :: 		Label64.OnPressPtr      = 0;
0x1589C	0x2100    MOVS	R1, #0
0x1589E	0x4856    LDR	R0, [PC, #344]
0x158A0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3174 :: 		Label65.OwnerScreen     = &GPS_Test;
0x158A2	0x4905    LDR	R1, [PC, #20]
0x158A4	0xF000B8AA  B	#340
0x158A8	0x18482000  	_Label59+28
0x158AC	0x184C2000  	_Label59+32
0x158B0	0x18502000  	_Label59+36
0x158B4	0x18542000  	_Label59+40
0x158B8	0x23382000  	_GPS_Test+0
0x158BC	0x18582000  	_Label60+0
0x158C0	0x185C2000  	_Label60+4
0x158C4	0x185E2000  	_Label60+6
0x158C8	0x18602000  	_Label60+8
0x158CC	0x18622000  	_Label60+10
0x158D0	0x18642000  	_Label60+12
0x158D4	0x18722000  	_Label60+26
0x158D8	0x18732000  	_Label60+27
0x158DC	0x01FF2000  	_Label60_Caption+0
0x158E0	0x18682000  	_Label60+16
0x158E4	0x186C2000  	_Label60+20
0x158E8	0x18702000  	_Label60+24
0x158EC	0x18742000  	_Label60+28
0x158F0	0x18782000  	_Label60+32
0x158F4	0x187C2000  	_Label60+36
0x158F8	0x18802000  	_Label60+40
0x158FC	0x18842000  	_Label61+0
0x15900	0x18882000  	_Label61+4
0x15904	0x188A2000  	_Label61+6
0x15908	0x188C2000  	_Label61+8
0x1590C	0x188E2000  	_Label61+10
0x15910	0x18902000  	_Label61+12
0x15914	0x189E2000  	_Label61+26
0x15918	0x189F2000  	_Label61+27
0x1591C	0x02012000  	_Label61_Caption+0
0x15920	0x18942000  	_Label61+16
0x15924	0x18982000  	_Label61+20
0x15928	0x189C2000  	_Label61+24
0x1592C	0x18A02000  	_Label61+28
0x15930	0x18A42000  	_Label61+32
0x15934	0x18A82000  	_Label61+36
0x15938	0x18AC2000  	_Label61+40
0x1593C	0x18B02000  	_Label62+0
0x15940	0x18B42000  	_Label62+4
0x15944	0x18B62000  	_Label62+6
0x15948	0x18B82000  	_Label62+8
0x1594C	0x18BA2000  	_Label62+10
0x15950	0x18BC2000  	_Label62+12
0x15954	0x18CA2000  	_Label62+26
0x15958	0x18CB2000  	_Label62+27
0x1595C	0x02082000  	_Label62_Caption+0
0x15960	0x18C02000  	_Label62+16
0x15964	0x18C42000  	_Label62+20
0x15968	0x18C82000  	_Label62+24
0x1596C	0x18CC2000  	_Label62+28
0x15970	0x18D02000  	_Label62+32
0x15974	0x18D42000  	_Label62+36
0x15978	0x18D82000  	_Label62+40
0x1597C	0x18DC2000  	_Label63+0
0x15980	0x18E02000  	_Label63+4
0x15984	0x18E22000  	_Label63+6
0x15988	0x18E42000  	_Label63+8
0x1598C	0x18E62000  	_Label63+10
0x15990	0x18E82000  	_Label63+12
0x15994	0x18F62000  	_Label63+26
0x15998	0x18F72000  	_Label63+27
0x1599C	0x020D2000  	_Label63_Caption+0
0x159A0	0x18EC2000  	_Label63+16
0x159A4	0x18F02000  	_Label63+20
0x159A8	0x18F42000  	_Label63+24
0x159AC	0x18F82000  	_Label63+28
0x159B0	0x18FC2000  	_Label63+32
0x159B4	0x19002000  	_Label63+36
0x159B8	0x19042000  	_Label63+40
0x159BC	0x19082000  	_Label64+0
0x159C0	0x190C2000  	_Label64+4
0x159C4	0x190E2000  	_Label64+6
0x159C8	0x19102000  	_Label64+8
0x159CC	0x19122000  	_Label64+10
0x159D0	0x19142000  	_Label64+12
0x159D4	0x19222000  	_Label64+26
0x159D8	0x19232000  	_Label64+27
0x159DC	0x02122000  	_Label64_Caption+0
0x159E0	0x19182000  	_Label64+16
0x159E4	0x191C2000  	_Label64+20
0x159E8	0x19202000  	_Label64+24
0x159EC	0x19242000  	_Label64+28
0x159F0	0x19282000  	_Label64+32
0x159F4	0x192C2000  	_Label64+36
0x159F8	0x19302000  	_Label64+40
0x159FC	0x4878    LDR	R0, [PC, #480]
0x159FE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3175 :: 		Label65.Order           = 16;
0x15A00	0x2110    MOVS	R1, #16
0x15A02	0x4878    LDR	R0, [PC, #480]
0x15A04	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3176 :: 		Label65.Left            = 159;
0x15A06	0x219F    MOVS	R1, #159
0x15A08	0x4877    LDR	R0, [PC, #476]
0x15A0A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3177 :: 		Label65.Top             = 154;
0x15A0C	0x219A    MOVS	R1, #154
0x15A0E	0x4877    LDR	R0, [PC, #476]
0x15A10	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3178 :: 		Label65.Width           = 53;
0x15A12	0x2135    MOVS	R1, #53
0x15A14	0x4876    LDR	R0, [PC, #472]
0x15A16	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3179 :: 		Label65.Height          = 20;
0x15A18	0x2114    MOVS	R1, #20
0x15A1A	0x4876    LDR	R0, [PC, #472]
0x15A1C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3180 :: 		Label65.Visible         = 1;
0x15A1E	0x2101    MOVS	R1, #1
0x15A20	0x4875    LDR	R0, [PC, #468]
0x15A22	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3181 :: 		Label65.Active          = 1;
0x15A24	0x2101    MOVS	R1, #1
0x15A26	0x4875    LDR	R0, [PC, #468]
0x15A28	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3182 :: 		Label65.Caption         = Label65_Caption;
0x15A2A	0x4975    LDR	R1, [PC, #468]
0x15A2C	0x4875    LDR	R0, [PC, #468]
0x15A2E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3183 :: 		Label65.FontName        = Arial_Black13x18_Regular;
0x15A30	0x2107    MOVS	R1, #7
0x15A32	0x4875    LDR	R0, [PC, #468]
0x15A34	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3184 :: 		Label65.Font_Color      = 0x0000;
0x15A36	0x2100    MOVS	R1, #0
0x15A38	0x4874    LDR	R0, [PC, #464]
0x15A3A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3185 :: 		Label65.OnUpPtr         = 0;
0x15A3C	0x2100    MOVS	R1, #0
0x15A3E	0x4874    LDR	R0, [PC, #464]
0x15A40	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3186 :: 		Label65.OnDownPtr       = 0;
0x15A42	0x2100    MOVS	R1, #0
0x15A44	0x4873    LDR	R0, [PC, #460]
0x15A46	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3187 :: 		Label65.OnClickPtr      = 0;
0x15A48	0x2100    MOVS	R1, #0
0x15A4A	0x4873    LDR	R0, [PC, #460]
0x15A4C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3188 :: 		Label65.OnPressPtr      = 0;
0x15A4E	0x2100    MOVS	R1, #0
0x15A50	0x4872    LDR	R0, [PC, #456]
0x15A52	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3190 :: 		Label66.OwnerScreen     = &GPS_Test;
0x15A54	0x4972    LDR	R1, [PC, #456]
0x15A56	0x4873    LDR	R0, [PC, #460]
0x15A58	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3191 :: 		Label66.Order           = 17;
0x15A5A	0x2111    MOVS	R1, #17
0x15A5C	0x4872    LDR	R0, [PC, #456]
0x15A5E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3192 :: 		Label66.Left            = 243;
0x15A60	0x21F3    MOVS	R1, #243
0x15A62	0x4872    LDR	R0, [PC, #456]
0x15A64	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3193 :: 		Label66.Top             = 154;
0x15A66	0x219A    MOVS	R1, #154
0x15A68	0x4871    LDR	R0, [PC, #452]
0x15A6A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3194 :: 		Label66.Width           = 36;
0x15A6C	0x2124    MOVS	R1, #36
0x15A6E	0x4871    LDR	R0, [PC, #452]
0x15A70	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3195 :: 		Label66.Height          = 20;
0x15A72	0x2114    MOVS	R1, #20
0x15A74	0x4870    LDR	R0, [PC, #448]
0x15A76	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3196 :: 		Label66.Visible         = 1;
0x15A78	0x2101    MOVS	R1, #1
0x15A7A	0x4870    LDR	R0, [PC, #448]
0x15A7C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3197 :: 		Label66.Active          = 1;
0x15A7E	0x2101    MOVS	R1, #1
0x15A80	0x486F    LDR	R0, [PC, #444]
0x15A82	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3198 :: 		Label66.Caption         = Label66_Caption;
0x15A84	0x496F    LDR	R1, [PC, #444]
0x15A86	0x4870    LDR	R0, [PC, #448]
0x15A88	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3199 :: 		Label66.FontName        = Arial_Black13x18_Regular;
0x15A8A	0x2107    MOVS	R1, #7
0x15A8C	0x486F    LDR	R0, [PC, #444]
0x15A8E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3200 :: 		Label66.Font_Color      = 0x0000;
0x15A90	0x2100    MOVS	R1, #0
0x15A92	0x486F    LDR	R0, [PC, #444]
0x15A94	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3201 :: 		Label66.OnUpPtr         = 0;
0x15A96	0x2100    MOVS	R1, #0
0x15A98	0x486E    LDR	R0, [PC, #440]
0x15A9A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3202 :: 		Label66.OnDownPtr       = 0;
0x15A9C	0x2100    MOVS	R1, #0
0x15A9E	0x486E    LDR	R0, [PC, #440]
0x15AA0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3203 :: 		Label66.OnClickPtr      = 0;
0x15AA2	0x2100    MOVS	R1, #0
0x15AA4	0x486D    LDR	R0, [PC, #436]
0x15AA6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3204 :: 		Label66.OnPressPtr      = 0;
0x15AA8	0x2100    MOVS	R1, #0
0x15AAA	0x486D    LDR	R0, [PC, #436]
0x15AAC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3206 :: 		Label67.OwnerScreen     = &GPS_Test;
0x15AAE	0x495C    LDR	R1, [PC, #368]
0x15AB0	0x486C    LDR	R0, [PC, #432]
0x15AB2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3207 :: 		Label67.Order           = 18;
0x15AB4	0x2112    MOVS	R1, #18
0x15AB6	0x486C    LDR	R0, [PC, #432]
0x15AB8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3208 :: 		Label67.Left            = 284;
0x15ABA	0xF240111C  MOVW	R1, #284
0x15ABE	0x486B    LDR	R0, [PC, #428]
0x15AC0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3209 :: 		Label67.Top             = 154;
0x15AC2	0x219A    MOVS	R1, #154
0x15AC4	0x486A    LDR	R0, [PC, #424]
0x15AC6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3210 :: 		Label67.Width           = 36;
0x15AC8	0x2124    MOVS	R1, #36
0x15ACA	0x486A    LDR	R0, [PC, #424]
0x15ACC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3211 :: 		Label67.Height          = 20;
0x15ACE	0x2114    MOVS	R1, #20
0x15AD0	0x4869    LDR	R0, [PC, #420]
0x15AD2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3212 :: 		Label67.Visible         = 1;
0x15AD4	0x2101    MOVS	R1, #1
0x15AD6	0x4869    LDR	R0, [PC, #420]
0x15AD8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3213 :: 		Label67.Active          = 1;
0x15ADA	0x2101    MOVS	R1, #1
0x15ADC	0x4868    LDR	R0, [PC, #416]
0x15ADE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3214 :: 		Label67.Caption         = Label67_Caption;
0x15AE0	0x4968    LDR	R1, [PC, #416]
0x15AE2	0x4869    LDR	R0, [PC, #420]
0x15AE4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3215 :: 		Label67.FontName        = Arial_Black13x18_Regular;
0x15AE6	0x2107    MOVS	R1, #7
0x15AE8	0x4868    LDR	R0, [PC, #416]
0x15AEA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3216 :: 		Label67.Font_Color      = 0x0000;
0x15AEC	0x2100    MOVS	R1, #0
0x15AEE	0x4868    LDR	R0, [PC, #416]
0x15AF0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3217 :: 		Label67.OnUpPtr         = 0;
0x15AF2	0x2100    MOVS	R1, #0
0x15AF4	0x4867    LDR	R0, [PC, #412]
0x15AF6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3218 :: 		Label67.OnDownPtr       = 0;
0x15AF8	0x2100    MOVS	R1, #0
0x15AFA	0x4867    LDR	R0, [PC, #412]
0x15AFC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3219 :: 		Label67.OnClickPtr      = 0;
0x15AFE	0x2100    MOVS	R1, #0
0x15B00	0x4866    LDR	R0, [PC, #408]
0x15B02	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3220 :: 		Label67.OnPressPtr      = 0;
0x15B04	0x2100    MOVS	R1, #0
0x15B06	0x4866    LDR	R0, [PC, #408]
0x15B08	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3222 :: 		Label68.OwnerScreen     = &GPS_Test;
0x15B0A	0x4945    LDR	R1, [PC, #276]
0x15B0C	0x4865    LDR	R0, [PC, #404]
0x15B0E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3223 :: 		Label68.Order           = 19;
0x15B10	0x2113    MOVS	R1, #19
0x15B12	0x4865    LDR	R0, [PC, #404]
0x15B14	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3224 :: 		Label68.Left            = 279;
0x15B16	0xF2401117  MOVW	R1, #279
0x15B1A	0x4864    LDR	R0, [PC, #400]
0x15B1C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3225 :: 		Label68.Top             = 154;
0x15B1E	0x219A    MOVS	R1, #154
0x15B20	0x4863    LDR	R0, [PC, #396]
0x15B22	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3226 :: 		Label68.Width           = 4;
0x15B24	0x2104    MOVS	R1, #4
0x15B26	0x4863    LDR	R0, [PC, #396]
0x15B28	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3227 :: 		Label68.Height          = 20;
0x15B2A	0x2114    MOVS	R1, #20
0x15B2C	0x4862    LDR	R0, [PC, #392]
0x15B2E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3228 :: 		Label68.Visible         = 1;
0x15B30	0x2101    MOVS	R1, #1
0x15B32	0x4862    LDR	R0, [PC, #392]
0x15B34	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3229 :: 		Label68.Active          = 1;
0x15B36	0x2101    MOVS	R1, #1
0x15B38	0x4861    LDR	R0, [PC, #388]
0x15B3A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3230 :: 		Label68.Caption         = Label68_Caption;
0x15B3C	0x4961    LDR	R1, [PC, #388]
0x15B3E	0x4862    LDR	R0, [PC, #392]
0x15B40	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3231 :: 		Label68.FontName        = Arial_Black13x18_Regular;
0x15B42	0x2107    MOVS	R1, #7
0x15B44	0x4861    LDR	R0, [PC, #388]
0x15B46	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3232 :: 		Label68.Font_Color      = 0x0000;
0x15B48	0x2100    MOVS	R1, #0
0x15B4A	0x4861    LDR	R0, [PC, #388]
0x15B4C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3233 :: 		Label68.OnUpPtr         = 0;
0x15B4E	0x2100    MOVS	R1, #0
0x15B50	0x4860    LDR	R0, [PC, #384]
0x15B52	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3234 :: 		Label68.OnDownPtr       = 0;
0x15B54	0x2100    MOVS	R1, #0
0x15B56	0x4860    LDR	R0, [PC, #384]
0x15B58	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3235 :: 		Label68.OnClickPtr      = 0;
0x15B5A	0x2100    MOVS	R1, #0
0x15B5C	0x485F    LDR	R0, [PC, #380]
0x15B5E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3236 :: 		Label68.OnPressPtr      = 0;
0x15B60	0x2100    MOVS	R1, #0
0x15B62	0x485F    LDR	R0, [PC, #380]
0x15B64	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3238 :: 		Label69.OwnerScreen     = &GPS_Test;
0x15B66	0x492E    LDR	R1, [PC, #184]
0x15B68	0x485E    LDR	R0, [PC, #376]
0x15B6A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3239 :: 		Label69.Order           = 20;
0x15B6C	0x2114    MOVS	R1, #20
0x15B6E	0x485E    LDR	R0, [PC, #376]
0x15B70	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3240 :: 		Label69.Left            = 159;
0x15B72	0x219F    MOVS	R1, #159
0x15B74	0x485D    LDR	R0, [PC, #372]
0x15B76	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3241 :: 		Label69.Top             = 177;
0x15B78	0x21B1    MOVS	R1, #177
0x15B7A	0x485D    LDR	R0, [PC, #372]
0x15B7C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3242 :: 		Label69.Width           = 41;
0x15B7E	0x2129    MOVS	R1, #41
0x15B80	0x485C    LDR	R0, [PC, #368]
0x15B82	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3243 :: 		Label69.Height          = 20;
0x15B84	0x2114    MOVS	R1, #20
0x15B86	0x485C    LDR	R0, [PC, #368]
0x15B88	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3244 :: 		Label69.Visible         = 1;
0x15B8A	0x2101    MOVS	R1, #1
0x15B8C	0x485B    LDR	R0, [PC, #364]
0x15B8E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3245 :: 		Label69.Active          = 1;
0x15B90	0x2101    MOVS	R1, #1
0x15B92	0x485B    LDR	R0, [PC, #364]
0x15B94	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3246 :: 		Label69.Caption         = Label69_Caption;
0x15B96	0x495B    LDR	R1, [PC, #364]
0x15B98	0x485B    LDR	R0, [PC, #364]
0x15B9A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3247 :: 		Label69.FontName        = Arial_Black13x18_Regular;
0x15B9C	0x2107    MOVS	R1, #7
0x15B9E	0x485B    LDR	R0, [PC, #364]
0x15BA0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3248 :: 		Label69.Font_Color      = 0x0000;
0x15BA2	0x2100    MOVS	R1, #0
0x15BA4	0x485A    LDR	R0, [PC, #360]
0x15BA6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3249 :: 		Label69.OnUpPtr         = 0;
0x15BA8	0x2100    MOVS	R1, #0
0x15BAA	0x485A    LDR	R0, [PC, #360]
0x15BAC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3250 :: 		Label69.OnDownPtr       = 0;
0x15BAE	0x2100    MOVS	R1, #0
0x15BB0	0x4859    LDR	R0, [PC, #356]
0x15BB2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3251 :: 		Label69.OnClickPtr      = 0;
0x15BB4	0x2100    MOVS	R1, #0
0x15BB6	0x4859    LDR	R0, [PC, #356]
0x15BB8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3252 :: 		Label69.OnPressPtr      = 0;
0x15BBA	0x2100    MOVS	R1, #0
0x15BBC	0x4858    LDR	R0, [PC, #352]
0x15BBE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3254 :: 		Label70.OwnerScreen     = &GPS_Test;
0x15BC0	0x4917    LDR	R1, [PC, #92]
0x15BC2	0x4858    LDR	R0, [PC, #352]
0x15BC4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3255 :: 		Label70.Order           = 21;
0x15BC6	0x2115    MOVS	R1, #21
0x15BC8	0x4857    LDR	R0, [PC, #348]
0x15BCA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3256 :: 		Label70.Left            = 243;
0x15BCC	0x21F3    MOVS	R1, #243
0x15BCE	0x4857    LDR	R0, [PC, #348]
0x15BD0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3257 :: 		Label70.Top             = 177;
0x15BD2	0x21B1    MOVS	R1, #177
0x15BD4	0x4856    LDR	R0, [PC, #344]
0x15BD6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3258 :: 		Label70.Width           = 36;
0x15BD8	0x2124    MOVS	R1, #36
0x15BDA	0x4856    LDR	R0, [PC, #344]
0x15BDC	0x8001    STRH	R1, [R0, #0]
0x15BDE	0xE0AB    B	#342
0x15BE0	0x19342000  	_Label65+0
0x15BE4	0x19382000  	_Label65+4
0x15BE8	0x193A2000  	_Label65+6
0x15BEC	0x193C2000  	_Label65+8
0x15BF0	0x193E2000  	_Label65+10
0x15BF4	0x19402000  	_Label65+12
0x15BF8	0x194E2000  	_Label65+26
0x15BFC	0x194F2000  	_Label65+27
0x15C00	0x02142000  	_Label65_Caption+0
0x15C04	0x19442000  	_Label65+16
0x15C08	0x19482000  	_Label65+20
0x15C0C	0x194C2000  	_Label65+24
0x15C10	0x19502000  	_Label65+28
0x15C14	0x19542000  	_Label65+32
0x15C18	0x19582000  	_Label65+36
0x15C1C	0x195C2000  	_Label65+40
0x15C20	0x23382000  	_GPS_Test+0
0x15C24	0x19602000  	_Label66+0
0x15C28	0x19642000  	_Label66+4
0x15C2C	0x19662000  	_Label66+6
0x15C30	0x19682000  	_Label66+8
0x15C34	0x196A2000  	_Label66+10
0x15C38	0x196C2000  	_Label66+12
0x15C3C	0x197A2000  	_Label66+26
0x15C40	0x197B2000  	_Label66+27
0x15C44	0x021C2000  	_Label66_Caption+0
0x15C48	0x19702000  	_Label66+16
0x15C4C	0x19742000  	_Label66+20
0x15C50	0x19782000  	_Label66+24
0x15C54	0x197C2000  	_Label66+28
0x15C58	0x19802000  	_Label66+32
0x15C5C	0x19842000  	_Label66+36
0x15C60	0x19882000  	_Label66+40
0x15C64	0x198C2000  	_Label67+0
0x15C68	0x19902000  	_Label67+4
0x15C6C	0x19922000  	_Label67+6
0x15C70	0x19942000  	_Label67+8
0x15C74	0x19962000  	_Label67+10
0x15C78	0x19982000  	_Label67+12
0x15C7C	0x19A62000  	_Label67+26
0x15C80	0x19A72000  	_Label67+27
0x15C84	0x02212000  	_Label67_Caption+0
0x15C88	0x199C2000  	_Label67+16
0x15C8C	0x19A02000  	_Label67+20
0x15C90	0x19A42000  	_Label67+24
0x15C94	0x19A82000  	_Label67+28
0x15C98	0x19AC2000  	_Label67+32
0x15C9C	0x19B02000  	_Label67+36
0x15CA0	0x19B42000  	_Label67+40
0x15CA4	0x19B82000  	_Label68+0
0x15CA8	0x19BC2000  	_Label68+4
0x15CAC	0x19BE2000  	_Label68+6
0x15CB0	0x19C02000  	_Label68+8
0x15CB4	0x19C22000  	_Label68+10
0x15CB8	0x19C42000  	_Label68+12
0x15CBC	0x19D22000  	_Label68+26
0x15CC0	0x19D32000  	_Label68+27
0x15CC4	0x02262000  	_Label68_Caption+0
0x15CC8	0x19C82000  	_Label68+16
0x15CCC	0x19CC2000  	_Label68+20
0x15CD0	0x19D02000  	_Label68+24
0x15CD4	0x19D42000  	_Label68+28
0x15CD8	0x19D82000  	_Label68+32
0x15CDC	0x19DC2000  	_Label68+36
0x15CE0	0x19E02000  	_Label68+40
0x15CE4	0x19E42000  	_Label69+0
0x15CE8	0x19E82000  	_Label69+4
0x15CEC	0x19EA2000  	_Label69+6
0x15CF0	0x19EC2000  	_Label69+8
0x15CF4	0x19EE2000  	_Label69+10
0x15CF8	0x19F02000  	_Label69+12
0x15CFC	0x19FE2000  	_Label69+26
0x15D00	0x19FF2000  	_Label69+27
0x15D04	0x02282000  	_Label69_Caption+0
0x15D08	0x19F42000  	_Label69+16
0x15D0C	0x19F82000  	_Label69+20
0x15D10	0x19FC2000  	_Label69+24
0x15D14	0x1A002000  	_Label69+28
0x15D18	0x1A042000  	_Label69+32
0x15D1C	0x1A082000  	_Label69+36
0x15D20	0x1A0C2000  	_Label69+40
0x15D24	0x1A102000  	_Label70+0
0x15D28	0x1A142000  	_Label70+4
0x15D2C	0x1A162000  	_Label70+6
0x15D30	0x1A182000  	_Label70+8
0x15D34	0x1A1A2000  	_Label70+10
;Ducati_logger_driver.c, 3259 :: 		Label70.Height          = 20;
0x15D38	0x2114    MOVS	R1, #20
0x15D3A	0x487D    LDR	R0, [PC, #500]
0x15D3C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3260 :: 		Label70.Visible         = 1;
0x15D3E	0x2101    MOVS	R1, #1
0x15D40	0x487C    LDR	R0, [PC, #496]
0x15D42	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3261 :: 		Label70.Active          = 1;
0x15D44	0x2101    MOVS	R1, #1
0x15D46	0x487C    LDR	R0, [PC, #496]
0x15D48	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3262 :: 		Label70.Caption         = Label70_Caption;
0x15D4A	0x497C    LDR	R1, [PC, #496]
0x15D4C	0x487C    LDR	R0, [PC, #496]
0x15D4E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3263 :: 		Label70.FontName        = Arial_Black13x18_Regular;
0x15D50	0x2107    MOVS	R1, #7
0x15D52	0x487C    LDR	R0, [PC, #496]
0x15D54	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3264 :: 		Label70.Font_Color      = 0x0000;
0x15D56	0x2100    MOVS	R1, #0
0x15D58	0x487B    LDR	R0, [PC, #492]
0x15D5A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3265 :: 		Label70.OnUpPtr         = 0;
0x15D5C	0x2100    MOVS	R1, #0
0x15D5E	0x487B    LDR	R0, [PC, #492]
0x15D60	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3266 :: 		Label70.OnDownPtr       = 0;
0x15D62	0x2100    MOVS	R1, #0
0x15D64	0x487A    LDR	R0, [PC, #488]
0x15D66	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3267 :: 		Label70.OnClickPtr      = 0;
0x15D68	0x2100    MOVS	R1, #0
0x15D6A	0x487A    LDR	R0, [PC, #488]
0x15D6C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3268 :: 		Label70.OnPressPtr      = 0;
0x15D6E	0x2100    MOVS	R1, #0
0x15D70	0x4879    LDR	R0, [PC, #484]
0x15D72	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3270 :: 		Label71.OwnerScreen     = &GPS_Test;
0x15D74	0x4979    LDR	R1, [PC, #484]
0x15D76	0x487A    LDR	R0, [PC, #488]
0x15D78	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3271 :: 		Label71.Order           = 22;
0x15D7A	0x2116    MOVS	R1, #22
0x15D7C	0x4879    LDR	R0, [PC, #484]
0x15D7E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3272 :: 		Label71.Left            = 284;
0x15D80	0xF240111C  MOVW	R1, #284
0x15D84	0x4878    LDR	R0, [PC, #480]
0x15D86	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3273 :: 		Label71.Top             = 177;
0x15D88	0x21B1    MOVS	R1, #177
0x15D8A	0x4878    LDR	R0, [PC, #480]
0x15D8C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3274 :: 		Label71.Width           = 36;
0x15D8E	0x2124    MOVS	R1, #36
0x15D90	0x4877    LDR	R0, [PC, #476]
0x15D92	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3275 :: 		Label71.Height          = 20;
0x15D94	0x2114    MOVS	R1, #20
0x15D96	0x4877    LDR	R0, [PC, #476]
0x15D98	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3276 :: 		Label71.Visible         = 1;
0x15D9A	0x2101    MOVS	R1, #1
0x15D9C	0x4876    LDR	R0, [PC, #472]
0x15D9E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3277 :: 		Label71.Active          = 1;
0x15DA0	0x2101    MOVS	R1, #1
0x15DA2	0x4876    LDR	R0, [PC, #472]
0x15DA4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3278 :: 		Label71.Caption         = Label71_Caption;
0x15DA6	0x4976    LDR	R1, [PC, #472]
0x15DA8	0x4876    LDR	R0, [PC, #472]
0x15DAA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3279 :: 		Label71.FontName        = Arial_Black13x18_Regular;
0x15DAC	0x2107    MOVS	R1, #7
0x15DAE	0x4876    LDR	R0, [PC, #472]
0x15DB0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3280 :: 		Label71.Font_Color      = 0x0000;
0x15DB2	0x2100    MOVS	R1, #0
0x15DB4	0x4875    LDR	R0, [PC, #468]
0x15DB6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3281 :: 		Label71.OnUpPtr         = 0;
0x15DB8	0x2100    MOVS	R1, #0
0x15DBA	0x4875    LDR	R0, [PC, #468]
0x15DBC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3282 :: 		Label71.OnDownPtr       = 0;
0x15DBE	0x2100    MOVS	R1, #0
0x15DC0	0x4874    LDR	R0, [PC, #464]
0x15DC2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3283 :: 		Label71.OnClickPtr      = 0;
0x15DC4	0x2100    MOVS	R1, #0
0x15DC6	0x4874    LDR	R0, [PC, #464]
0x15DC8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3284 :: 		Label71.OnPressPtr      = 0;
0x15DCA	0x2100    MOVS	R1, #0
0x15DCC	0x4873    LDR	R0, [PC, #460]
0x15DCE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3286 :: 		Label72.OwnerScreen     = &GPS_Test;
0x15DD0	0x4962    LDR	R1, [PC, #392]
0x15DD2	0x4873    LDR	R0, [PC, #460]
0x15DD4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3287 :: 		Label72.Order           = 23;
0x15DD6	0x2117    MOVS	R1, #23
0x15DD8	0x4872    LDR	R0, [PC, #456]
0x15DDA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3288 :: 		Label72.Left            = 279;
0x15DDC	0xF2401117  MOVW	R1, #279
0x15DE0	0x4871    LDR	R0, [PC, #452]
0x15DE2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3289 :: 		Label72.Top             = 177;
0x15DE4	0x21B1    MOVS	R1, #177
0x15DE6	0x4871    LDR	R0, [PC, #452]
0x15DE8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3290 :: 		Label72.Width           = 4;
0x15DEA	0x2104    MOVS	R1, #4
0x15DEC	0x4870    LDR	R0, [PC, #448]
0x15DEE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3291 :: 		Label72.Height          = 20;
0x15DF0	0x2114    MOVS	R1, #20
0x15DF2	0x4870    LDR	R0, [PC, #448]
0x15DF4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3292 :: 		Label72.Visible         = 1;
0x15DF6	0x2101    MOVS	R1, #1
0x15DF8	0x486F    LDR	R0, [PC, #444]
0x15DFA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3293 :: 		Label72.Active          = 1;
0x15DFC	0x2101    MOVS	R1, #1
0x15DFE	0x486F    LDR	R0, [PC, #444]
0x15E00	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3294 :: 		Label72.Caption         = Label72_Caption;
0x15E02	0x496F    LDR	R1, [PC, #444]
0x15E04	0x486F    LDR	R0, [PC, #444]
0x15E06	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3295 :: 		Label72.FontName        = Arial_Black13x18_Regular;
0x15E08	0x2107    MOVS	R1, #7
0x15E0A	0x486F    LDR	R0, [PC, #444]
0x15E0C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3296 :: 		Label72.Font_Color      = 0x0000;
0x15E0E	0x2100    MOVS	R1, #0
0x15E10	0x486E    LDR	R0, [PC, #440]
0x15E12	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3297 :: 		Label72.OnUpPtr         = 0;
0x15E14	0x2100    MOVS	R1, #0
0x15E16	0x486E    LDR	R0, [PC, #440]
0x15E18	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3298 :: 		Label72.OnDownPtr       = 0;
0x15E1A	0x2100    MOVS	R1, #0
0x15E1C	0x486D    LDR	R0, [PC, #436]
0x15E1E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3299 :: 		Label72.OnClickPtr      = 0;
0x15E20	0x2100    MOVS	R1, #0
0x15E22	0x486D    LDR	R0, [PC, #436]
0x15E24	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3300 :: 		Label72.OnPressPtr      = 0;
0x15E26	0x2100    MOVS	R1, #0
0x15E28	0x486C    LDR	R0, [PC, #432]
0x15E2A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3302 :: 		Box13.OwnerScreen     = &Gyro_test;
0x15E2C	0x496C    LDR	R1, [PC, #432]
0x15E2E	0x486D    LDR	R0, [PC, #436]
0x15E30	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3303 :: 		Box13.Order           = 0;
0x15E32	0x2100    MOVS	R1, #0
0x15E34	0x486C    LDR	R0, [PC, #432]
0x15E36	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3304 :: 		Box13.Left            = 4;
0x15E38	0x2104    MOVS	R1, #4
0x15E3A	0x486C    LDR	R0, [PC, #432]
0x15E3C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3305 :: 		Box13.Top             = 5;
0x15E3E	0x2105    MOVS	R1, #5
0x15E40	0x486B    LDR	R0, [PC, #428]
0x15E42	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3306 :: 		Box13.Width           = 150;
0x15E44	0x2196    MOVS	R1, #150
0x15E46	0x486B    LDR	R0, [PC, #428]
0x15E48	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3307 :: 		Box13.Height          = 23;
0x15E4A	0x2117    MOVS	R1, #23
0x15E4C	0x486A    LDR	R0, [PC, #424]
0x15E4E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3308 :: 		Box13.Pen_Width       = 1;
0x15E50	0x2101    MOVS	R1, #1
0x15E52	0x486A    LDR	R0, [PC, #424]
0x15E54	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3309 :: 		Box13.Pen_Color       = 0x0000;
0x15E56	0x2100    MOVS	R1, #0
0x15E58	0x4869    LDR	R0, [PC, #420]
0x15E5A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3310 :: 		Box13.Visible         = 0;
0x15E5C	0x2100    MOVS	R1, #0
0x15E5E	0x4869    LDR	R0, [PC, #420]
0x15E60	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3311 :: 		Box13.Active          = 1;
0x15E62	0x2101    MOVS	R1, #1
0x15E64	0x4868    LDR	R0, [PC, #416]
0x15E66	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3312 :: 		Box13.Transparent     = 1;
0x15E68	0x2101    MOVS	R1, #1
0x15E6A	0x4868    LDR	R0, [PC, #416]
0x15E6C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3313 :: 		Box13.Gradient        = 0;
0x15E6E	0x2100    MOVS	R1, #0
0x15E70	0x4867    LDR	R0, [PC, #412]
0x15E72	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3314 :: 		Box13.Gradient_Orientation = 0;
0x15E74	0x2100    MOVS	R1, #0
0x15E76	0x4867    LDR	R0, [PC, #412]
0x15E78	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3315 :: 		Box13.Gradient_Start_Color = 0xFFFF;
0x15E7A	0xF64F71FF  MOVW	R1, #65535
0x15E7E	0x4866    LDR	R0, [PC, #408]
0x15E80	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3316 :: 		Box13.Gradient_End_Color = 0xC618;
0x15E82	0xF24C6118  MOVW	R1, #50712
0x15E86	0x4865    LDR	R0, [PC, #404]
0x15E88	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3317 :: 		Box13.Color           = 0xC618;
0x15E8A	0xF24C6118  MOVW	R1, #50712
0x15E8E	0x4864    LDR	R0, [PC, #400]
0x15E90	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3318 :: 		Box13.PressColEnabled = 0;
0x15E92	0x2100    MOVS	R1, #0
0x15E94	0x4863    LDR	R0, [PC, #396]
0x15E96	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3319 :: 		Box13.Press_Color     = 0xE71C;
0x15E98	0xF24E711C  MOVW	R1, #59164
0x15E9C	0x4862    LDR	R0, [PC, #392]
0x15E9E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3320 :: 		Box13.OnUpPtr         = 0;
0x15EA0	0x2100    MOVS	R1, #0
0x15EA2	0x4862    LDR	R0, [PC, #392]
0x15EA4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3321 :: 		Box13.OnDownPtr       = 0;
0x15EA6	0x2100    MOVS	R1, #0
0x15EA8	0x4861    LDR	R0, [PC, #388]
0x15EAA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3322 :: 		Box13.OnClickPtr      = doSettings;
0x15EAC	0x4961    LDR	R1, [PC, #388]
0x15EAE	0x4862    LDR	R0, [PC, #392]
0x15EB0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3323 :: 		Box13.OnPressPtr      = 0;
0x15EB2	0x2100    MOVS	R1, #0
0x15EB4	0x4861    LDR	R0, [PC, #388]
0x15EB6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3325 :: 		Box14.OwnerScreen     = &Gyro_test;
0x15EB8	0x4949    LDR	R1, [PC, #292]
0x15EBA	0x4861    LDR	R0, [PC, #388]
0x15EBC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3326 :: 		Box14.Order           = 1;
0x15EBE	0x2101    MOVS	R1, #1
0x15EC0	0x4860    LDR	R0, [PC, #384]
0x15EC2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3327 :: 		Box14.Left            = 0;
0x15EC4	0x2100    MOVS	R1, #0
0x15EC6	0x4860    LDR	R0, [PC, #384]
0x15EC8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3328 :: 		Box14.Top             = 40;
0x15ECA	0x2128    MOVS	R1, #40
0x15ECC	0x485F    LDR	R0, [PC, #380]
0x15ECE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3329 :: 		Box14.Width           = 480;
0x15ED0	0xF24011E0  MOVW	R1, #480
0x15ED4	0x485E    LDR	R0, [PC, #376]
0x15ED6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3330 :: 		Box14.Height          = 207;
0x15ED8	0x21CF    MOVS	R1, #207
0x15EDA	0x485E    LDR	R0, [PC, #376]
0x15EDC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3331 :: 		Box14.Pen_Width       = 1;
0x15EDE	0x2101    MOVS	R1, #1
0x15EE0	0x485D    LDR	R0, [PC, #372]
0x15EE2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3332 :: 		Box14.Pen_Color       = 0xFFFF;
0x15EE4	0xF64F71FF  MOVW	R1, #65535
0x15EE8	0x485C    LDR	R0, [PC, #368]
0x15EEA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3333 :: 		Box14.Visible         = 1;
0x15EEC	0x2101    MOVS	R1, #1
0x15EEE	0x485C    LDR	R0, [PC, #368]
0x15EF0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3334 :: 		Box14.Active          = 1;
0x15EF2	0x2101    MOVS	R1, #1
0x15EF4	0x485B    LDR	R0, [PC, #364]
0x15EF6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3335 :: 		Box14.Transparent     = 1;
0x15EF8	0x2101    MOVS	R1, #1
0x15EFA	0x485B    LDR	R0, [PC, #364]
0x15EFC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3336 :: 		Box14.Gradient        = 0;
0x15EFE	0x2100    MOVS	R1, #0
0x15F00	0x485A    LDR	R0, [PC, #360]
0x15F02	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3337 :: 		Box14.Gradient_Orientation = 0;
0x15F04	0x2100    MOVS	R1, #0
0x15F06	0x485A    LDR	R0, [PC, #360]
0x15F08	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3338 :: 		Box14.Gradient_Start_Color = 0xFFFF;
0x15F0A	0xF64F71FF  MOVW	R1, #65535
0x15F0E	0x4859    LDR	R0, [PC, #356]
0x15F10	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3339 :: 		Box14.Gradient_End_Color = 0xFFFF;
0x15F12	0xF64F71FF  MOVW	R1, #65535
0x15F16	0x4858    LDR	R0, [PC, #352]
0x15F18	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3340 :: 		Box14.Color           = 0xFFFF;
0x15F1A	0xF64F71FF  MOVW	R1, #65535
0x15F1E	0x4857    LDR	R0, [PC, #348]
0x15F20	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3341 :: 		Box14.PressColEnabled = 0;
0x15F22	0x2100    MOVS	R1, #0
0x15F24	0x4856    LDR	R0, [PC, #344]
0x15F26	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3342 :: 		Box14.Press_Color     = 0xFFFF;
0x15F28	0xF64F71FF  MOVW	R1, #65535
0x15F2C	0xF000B8AA  B	#340
0x15F30	0x1A1C2000  	_Label70+12
0x15F34	0x1A2A2000  	_Label70+26
0x15F38	0x1A2B2000  	_Label70+27
0x15F3C	0x022E2000  	_Label70_Caption+0
0x15F40	0x1A202000  	_Label70+16
0x15F44	0x1A242000  	_Label70+20
0x15F48	0x1A282000  	_Label70+24
0x15F4C	0x1A2C2000  	_Label70+28
0x15F50	0x1A302000  	_Label70+32
0x15F54	0x1A342000  	_Label70+36
0x15F58	0x1A382000  	_Label70+40
0x15F5C	0x23382000  	_GPS_Test+0
0x15F60	0x1A3C2000  	_Label71+0
0x15F64	0x1A402000  	_Label71+4
0x15F68	0x1A422000  	_Label71+6
0x15F6C	0x1A442000  	_Label71+8
0x15F70	0x1A462000  	_Label71+10
0x15F74	0x1A482000  	_Label71+12
0x15F78	0x1A562000  	_Label71+26
0x15F7C	0x1A572000  	_Label71+27
0x15F80	0x02332000  	_Label71_Caption+0
0x15F84	0x1A4C2000  	_Label71+16
0x15F88	0x1A502000  	_Label71+20
0x15F8C	0x1A542000  	_Label71+24
0x15F90	0x1A582000  	_Label71+28
0x15F94	0x1A5C2000  	_Label71+32
0x15F98	0x1A602000  	_Label71+36
0x15F9C	0x1A642000  	_Label71+40
0x15FA0	0x1A682000  	_Label72+0
0x15FA4	0x1A6C2000  	_Label72+4
0x15FA8	0x1A6E2000  	_Label72+6
0x15FAC	0x1A702000  	_Label72+8
0x15FB0	0x1A722000  	_Label72+10
0x15FB4	0x1A742000  	_Label72+12
0x15FB8	0x1A822000  	_Label72+26
0x15FBC	0x1A832000  	_Label72+27
0x15FC0	0x02382000  	_Label72_Caption+0
0x15FC4	0x1A782000  	_Label72+16
0x15FC8	0x1A7C2000  	_Label72+20
0x15FCC	0x1A802000  	_Label72+24
0x15FD0	0x1A842000  	_Label72+28
0x15FD4	0x1A882000  	_Label72+32
0x15FD8	0x1A8C2000  	_Label72+36
0x15FDC	0x1A902000  	_Label72+40
0x15FE0	0x23882000  	_Gyro_test+0
0x15FE4	0x1BFC2000  	_Box13+0
0x15FE8	0x1C002000  	_Box13+4
0x15FEC	0x1C022000  	_Box13+6
0x15FF0	0x1C042000  	_Box13+8
0x15FF4	0x1C062000  	_Box13+10
0x15FF8	0x1C082000  	_Box13+12
0x15FFC	0x1C0A2000  	_Box13+14
0x16000	0x1C0C2000  	_Box13+16
0x16004	0x1C0E2000  	_Box13+18
0x16008	0x1C0F2000  	_Box13+19
0x1600C	0x1C102000  	_Box13+20
0x16010	0x1C112000  	_Box13+21
0x16014	0x1C122000  	_Box13+22
0x16018	0x1C142000  	_Box13+24
0x1601C	0x1C162000  	_Box13+26
0x16020	0x1C182000  	_Box13+28
0x16024	0x1C1A2000  	_Box13+30
0x16028	0x1C1C2000  	_Box13+32
0x1602C	0x1C202000  	_Box13+36
0x16030	0x1C242000  	_Box13+40
0x16034	0xB2A50000  	_doSettings+0
0x16038	0x1C282000  	_Box13+44
0x1603C	0x1C2C2000  	_Box13+48
0x16040	0x1C302000  	_Box14+0
0x16044	0x1C342000  	_Box14+4
0x16048	0x1C362000  	_Box14+6
0x1604C	0x1C382000  	_Box14+8
0x16050	0x1C3A2000  	_Box14+10
0x16054	0x1C3C2000  	_Box14+12
0x16058	0x1C3E2000  	_Box14+14
0x1605C	0x1C402000  	_Box14+16
0x16060	0x1C422000  	_Box14+18
0x16064	0x1C432000  	_Box14+19
0x16068	0x1C442000  	_Box14+20
0x1606C	0x1C452000  	_Box14+21
0x16070	0x1C462000  	_Box14+22
0x16074	0x1C482000  	_Box14+24
0x16078	0x1C4A2000  	_Box14+26
0x1607C	0x1C4C2000  	_Box14+28
0x16080	0x1C4E2000  	_Box14+30
0x16084	0x4878    LDR	R0, [PC, #480]
0x16086	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3343 :: 		Box14.OnUpPtr         = 0;
0x16088	0x2100    MOVS	R1, #0
0x1608A	0x4878    LDR	R0, [PC, #480]
0x1608C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3344 :: 		Box14.OnDownPtr       = 0;
0x1608E	0x2100    MOVS	R1, #0
0x16090	0x4877    LDR	R0, [PC, #476]
0x16092	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3345 :: 		Box14.OnClickPtr      = 0;
0x16094	0x2100    MOVS	R1, #0
0x16096	0x4877    LDR	R0, [PC, #476]
0x16098	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3346 :: 		Box14.OnPressPtr      = 0;
0x1609A	0x2100    MOVS	R1, #0
0x1609C	0x4876    LDR	R0, [PC, #472]
0x1609E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3348 :: 		Image52.OwnerScreen     = &Gyro_test;
0x160A0	0x4976    LDR	R1, [PC, #472]
0x160A2	0x4877    LDR	R0, [PC, #476]
0x160A4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3349 :: 		Image52.Order           = 2;
0x160A6	0x2102    MOVS	R1, #2
0x160A8	0x4876    LDR	R0, [PC, #472]
0x160AA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3350 :: 		Image52.Left            = 5;
0x160AC	0x2105    MOVS	R1, #5
0x160AE	0x4876    LDR	R0, [PC, #472]
0x160B0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3351 :: 		Image52.Top             = 6;
0x160B2	0x2106    MOVS	R1, #6
0x160B4	0x4875    LDR	R0, [PC, #468]
0x160B6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3352 :: 		Image52.Width           = 22;
0x160B8	0x2116    MOVS	R1, #22
0x160BA	0x4875    LDR	R0, [PC, #468]
0x160BC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3353 :: 		Image52.Height          = 22;
0x160BE	0x2116    MOVS	R1, #22
0x160C0	0x4874    LDR	R0, [PC, #464]
0x160C2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3354 :: 		Image52.Picture_Type    = 0;
0x160C4	0x2100    MOVS	R1, #0
0x160C6	0x4874    LDR	R0, [PC, #464]
0x160C8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3355 :: 		Image52.Picture_Ratio   = 1;
0x160CA	0x2101    MOVS	R1, #1
0x160CC	0x4873    LDR	R0, [PC, #460]
0x160CE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3356 :: 		Image52.Picture_Name    = icon_back_gyro_bmp;
0x160D0	0x4973    LDR	R1, [PC, #460]
0x160D2	0x4874    LDR	R0, [PC, #464]
0x160D4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3357 :: 		Image52.Visible         = 1;
0x160D6	0x2101    MOVS	R1, #1
0x160D8	0x4873    LDR	R0, [PC, #460]
0x160DA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3358 :: 		Image52.Active          = 0;
0x160DC	0x2100    MOVS	R1, #0
0x160DE	0x4873    LDR	R0, [PC, #460]
0x160E0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3359 :: 		Image52.OnUpPtr         = 0;
0x160E2	0x2100    MOVS	R1, #0
0x160E4	0x4872    LDR	R0, [PC, #456]
0x160E6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3360 :: 		Image52.OnDownPtr       = 0;
0x160E8	0x2100    MOVS	R1, #0
0x160EA	0x4872    LDR	R0, [PC, #456]
0x160EC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3361 :: 		Image52.OnClickPtr      = doSettings;
0x160EE	0x4972    LDR	R1, [PC, #456]
0x160F0	0x4872    LDR	R0, [PC, #456]
0x160F2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3362 :: 		Image52.OnPressPtr      = doSettings;
0x160F4	0x4970    LDR	R1, [PC, #448]
0x160F6	0x4872    LDR	R0, [PC, #456]
0x160F8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3364 :: 		Label8.OwnerScreen     = &Gyro_test;
0x160FA	0x4960    LDR	R1, [PC, #384]
0x160FC	0x4871    LDR	R0, [PC, #452]
0x160FE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3365 :: 		Label8.Order           = 3;
0x16100	0x2103    MOVS	R1, #3
0x16102	0x4871    LDR	R0, [PC, #452]
0x16104	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3366 :: 		Label8.Left            = 32;
0x16106	0x2120    MOVS	R1, #32
0x16108	0x4870    LDR	R0, [PC, #448]
0x1610A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3367 :: 		Label8.Top             = 2;
0x1610C	0x2102    MOVS	R1, #2
0x1610E	0x4870    LDR	R0, [PC, #448]
0x16110	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3368 :: 		Label8.Width           = 113;
0x16112	0x2171    MOVS	R1, #113
0x16114	0x486F    LDR	R0, [PC, #444]
0x16116	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3369 :: 		Label8.Height          = 31;
0x16118	0x211F    MOVS	R1, #31
0x1611A	0x486F    LDR	R0, [PC, #444]
0x1611C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3370 :: 		Label8.Visible         = 1;
0x1611E	0x2101    MOVS	R1, #1
0x16120	0x486E    LDR	R0, [PC, #440]
0x16122	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3371 :: 		Label8.Active          = 0;
0x16124	0x2100    MOVS	R1, #0
0x16126	0x486E    LDR	R0, [PC, #440]
0x16128	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3372 :: 		Label8.Caption         = Label8_Caption;
0x1612A	0x496E    LDR	R1, [PC, #440]
0x1612C	0x486E    LDR	R0, [PC, #440]
0x1612E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3373 :: 		Label8.FontName        = Open_Sans_Light19x28_Regular;
0x16130	0xF64D0139  MOVW	R1, #55353
0x16134	0x486D    LDR	R0, [PC, #436]
0x16136	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3374 :: 		Label8.Font_Color      = 0xFFFF;
0x16138	0xF64F71FF  MOVW	R1, #65535
0x1613C	0x486C    LDR	R0, [PC, #432]
0x1613E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3375 :: 		Label8.OnUpPtr         = 0;
0x16140	0x2100    MOVS	R1, #0
0x16142	0x486C    LDR	R0, [PC, #432]
0x16144	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3376 :: 		Label8.OnDownPtr       = 0;
0x16146	0x2100    MOVS	R1, #0
0x16148	0x486B    LDR	R0, [PC, #428]
0x1614A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3377 :: 		Label8.OnClickPtr      = 0;
0x1614C	0x2100    MOVS	R1, #0
0x1614E	0x486B    LDR	R0, [PC, #428]
0x16150	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3378 :: 		Label8.OnPressPtr      = 0;
0x16152	0x2100    MOVS	R1, #0
0x16154	0x486A    LDR	R0, [PC, #424]
0x16156	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3380 :: 		Label9.OwnerScreen     = &Gyro_test;
0x16158	0x4948    LDR	R1, [PC, #288]
0x1615A	0x486A    LDR	R0, [PC, #424]
0x1615C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3381 :: 		Label9.Order           = 4;
0x1615E	0x2104    MOVS	R1, #4
0x16160	0x4869    LDR	R0, [PC, #420]
0x16162	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3382 :: 		Label9.Left            = 75;
0x16164	0x214B    MOVS	R1, #75
0x16166	0x4869    LDR	R0, [PC, #420]
0x16168	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3383 :: 		Label9.Top             = 250;
0x1616A	0x21FA    MOVS	R1, #250
0x1616C	0x4868    LDR	R0, [PC, #416]
0x1616E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3384 :: 		Label9.Width           = 13;
0x16170	0x210D    MOVS	R1, #13
0x16172	0x4868    LDR	R0, [PC, #416]
0x16174	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3385 :: 		Label9.Height          = 24;
0x16176	0x2118    MOVS	R1, #24
0x16178	0x4867    LDR	R0, [PC, #412]
0x1617A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3386 :: 		Label9.Visible         = 1;
0x1617C	0x2101    MOVS	R1, #1
0x1617E	0x4867    LDR	R0, [PC, #412]
0x16180	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3387 :: 		Label9.Active          = 1;
0x16182	0x2101    MOVS	R1, #1
0x16184	0x4866    LDR	R0, [PC, #408]
0x16186	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3388 :: 		Label9.Caption         = Label9_Caption;
0x16188	0x4966    LDR	R1, [PC, #408]
0x1618A	0x4867    LDR	R0, [PC, #412]
0x1618C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3389 :: 		Label9.FontName        = Open_Sans_Light14x22_Regular;
0x1618E	0xF64C411F  MOVW	R1, #52255
0x16192	0x4866    LDR	R0, [PC, #408]
0x16194	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3390 :: 		Label9.Font_Color      = 0xF800;
0x16196	0xF64F0100  MOVW	R1, #63488
0x1619A	0x4865    LDR	R0, [PC, #404]
0x1619C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3391 :: 		Label9.OnUpPtr         = 0;
0x1619E	0x2100    MOVS	R1, #0
0x161A0	0x4864    LDR	R0, [PC, #400]
0x161A2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3392 :: 		Label9.OnDownPtr       = 0;
0x161A4	0x2100    MOVS	R1, #0
0x161A6	0x4864    LDR	R0, [PC, #400]
0x161A8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3393 :: 		Label9.OnClickPtr      = 0;
0x161AA	0x2100    MOVS	R1, #0
0x161AC	0x4863    LDR	R0, [PC, #396]
0x161AE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3394 :: 		Label9.OnPressPtr      = 0;
0x161B0	0x2100    MOVS	R1, #0
0x161B2	0x4863    LDR	R0, [PC, #396]
0x161B4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3396 :: 		Label31.OwnerScreen     = &Gyro_test;
0x161B6	0x4931    LDR	R1, [PC, #196]
0x161B8	0x4862    LDR	R0, [PC, #392]
0x161BA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3397 :: 		Label31.Order           = 5;
0x161BC	0x2105    MOVS	R1, #5
0x161BE	0x4862    LDR	R0, [PC, #392]
0x161C0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3398 :: 		Label31.Left            = 225;
0x161C2	0x21E1    MOVS	R1, #225
0x161C4	0x4861    LDR	R0, [PC, #388]
0x161C6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3399 :: 		Label31.Top             = 250;
0x161C8	0x21FA    MOVS	R1, #250
0x161CA	0x4861    LDR	R0, [PC, #388]
0x161CC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3400 :: 		Label31.Width           = 13;
0x161CE	0x210D    MOVS	R1, #13
0x161D0	0x4860    LDR	R0, [PC, #384]
0x161D2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3401 :: 		Label31.Height          = 24;
0x161D4	0x2118    MOVS	R1, #24
0x161D6	0x4860    LDR	R0, [PC, #384]
0x161D8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3402 :: 		Label31.Visible         = 1;
0x161DA	0x2101    MOVS	R1, #1
0x161DC	0x485F    LDR	R0, [PC, #380]
0x161DE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3403 :: 		Label31.Active          = 1;
0x161E0	0x2101    MOVS	R1, #1
0x161E2	0x485F    LDR	R0, [PC, #380]
0x161E4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3404 :: 		Label31.Caption         = Label31_Caption;
0x161E6	0x495F    LDR	R1, [PC, #380]
0x161E8	0x485F    LDR	R0, [PC, #380]
0x161EA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3405 :: 		Label31.FontName        = Open_Sans_Light14x22_Regular;
0x161EC	0xF64C411F  MOVW	R1, #52255
0x161F0	0x485E    LDR	R0, [PC, #376]
0x161F2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3406 :: 		Label31.Font_Color      = 0x001F;
0x161F4	0x211F    MOVS	R1, #31
0x161F6	0x485E    LDR	R0, [PC, #376]
0x161F8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3407 :: 		Label31.OnUpPtr         = 0;
0x161FA	0x2100    MOVS	R1, #0
0x161FC	0x485D    LDR	R0, [PC, #372]
0x161FE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3408 :: 		Label31.OnDownPtr       = 0;
0x16200	0x2100    MOVS	R1, #0
0x16202	0x485D    LDR	R0, [PC, #372]
0x16204	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3409 :: 		Label31.OnClickPtr      = 0;
0x16206	0x2100    MOVS	R1, #0
0x16208	0x485C    LDR	R0, [PC, #368]
0x1620A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3410 :: 		Label31.OnPressPtr      = 0;
0x1620C	0x2100    MOVS	R1, #0
0x1620E	0x485C    LDR	R0, [PC, #368]
0x16210	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3412 :: 		Label33.OwnerScreen     = &Gyro_test;
0x16212	0x491A    LDR	R1, [PC, #104]
0x16214	0x485B    LDR	R0, [PC, #364]
0x16216	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3413 :: 		Label33.Order           = 6;
0x16218	0x2106    MOVS	R1, #6
0x1621A	0x485B    LDR	R0, [PC, #364]
0x1621C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3414 :: 		Label33.Left            = 375;
0x1621E	0xF2401177  MOVW	R1, #375
0x16222	0x485A    LDR	R0, [PC, #360]
0x16224	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3415 :: 		Label33.Top             = 250;
0x16226	0x21FA    MOVS	R1, #250
0x16228	0x4859    LDR	R0, [PC, #356]
0x1622A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3416 :: 		Label33.Width           = 13;
0x1622C	0x210D    MOVS	R1, #13
0x1622E	0x4859    LDR	R0, [PC, #356]
0x16230	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3417 :: 		Label33.Height          = 24;
0x16232	0x2118    MOVS	R1, #24
0x16234	0x4858    LDR	R0, [PC, #352]
0x16236	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3418 :: 		Label33.Visible         = 1;
0x16238	0x2101    MOVS	R1, #1
0x1623A	0x4858    LDR	R0, [PC, #352]
0x1623C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3419 :: 		Label33.Active          = 1;
0x1623E	0x2101    MOVS	R1, #1
0x16240	0x4857    LDR	R0, [PC, #348]
0x16242	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3420 :: 		Label33.Caption         = Label33_Caption;
0x16244	0x4957    LDR	R1, [PC, #348]
0x16246	0x4858    LDR	R0, [PC, #352]
0x16248	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3421 :: 		Label33.FontName        = Open_Sans_Light14x22_Regular;
0x1624A	0xF64C411F  MOVW	R1, #52255
0x1624E	0x4857    LDR	R0, [PC, #348]
0x16250	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3422 :: 		Label33.Font_Color      = 0x0400;
0x16252	0xF2404100  MOVW	R1, #1024
0x16256	0x4856    LDR	R0, [PC, #344]
0x16258	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3423 :: 		Label33.OnUpPtr         = 0;
0x1625A	0x2100    MOVS	R1, #0
0x1625C	0x4855    LDR	R0, [PC, #340]
0x1625E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3424 :: 		Label33.OnDownPtr       = 0;
0x16260	0x2100    MOVS	R1, #0
0x16262	0x4855    LDR	R0, [PC, #340]
0x16264	0x6001    STR	R1, [R0, #0]
0x16266	0xE0A9    B	#338
0x16268	0x1C502000  	_Box14+32
0x1626C	0x1C542000  	_Box14+36
0x16270	0x1C582000  	_Box14+40
0x16274	0x1C5C2000  	_Box14+44
0x16278	0x1C602000  	_Box14+48
0x1627C	0x23882000  	_Gyro_test+0
0x16280	0x1BD42000  	_Image52+0
0x16284	0x1BD82000  	_Image52+4
0x16288	0x1BDA2000  	_Image52+6
0x1628C	0x1BDC2000  	_Image52+8
0x16290	0x1BDE2000  	_Image52+10
0x16294	0x1BE02000  	_Image52+12
0x16298	0x1BEA2000  	_Image52+22
0x1629C	0x1BEB2000  	_Image52+23
0x162A0	0xD6A8003E  	#4118184
0x162A4	0x1BE42000  	_Image52+16
0x162A8	0x1BE82000  	_Image52+20
0x162AC	0x1BE92000  	_Image52+21
0x162B0	0x1BEC2000  	_Image52+24
0x162B4	0x1BF02000  	_Image52+28
0x162B8	0xB2A50000  	_doSettings+0
0x162BC	0x1BF42000  	_Image52+32
0x162C0	0x1BF82000  	_Image52+36
0x162C4	0x1B242000  	_Label8+0
0x162C8	0x1B282000  	_Label8+4
0x162CC	0x1B2A2000  	_Label8+6
0x162D0	0x1B2C2000  	_Label8+8
0x162D4	0x1B2E2000  	_Label8+10
0x162D8	0x1B302000  	_Label8+12
0x162DC	0x1B3E2000  	_Label8+26
0x162E0	0x1B3F2000  	_Label8+27
0x162E4	0x023A2000  	_Label8_Caption+0
0x162E8	0x1B342000  	_Label8+16
0x162EC	0x1B382000  	_Label8+20
0x162F0	0x1B3C2000  	_Label8+24
0x162F4	0x1B402000  	_Label8+28
0x162F8	0x1B442000  	_Label8+32
0x162FC	0x1B482000  	_Label8+36
0x16300	0x1B4C2000  	_Label8+40
0x16304	0x1B502000  	_Label9+0
0x16308	0x1B542000  	_Label9+4
0x1630C	0x1B562000  	_Label9+6
0x16310	0x1B582000  	_Label9+8
0x16314	0x1B5A2000  	_Label9+10
0x16318	0x1B5C2000  	_Label9+12
0x1631C	0x1B6A2000  	_Label9+26
0x16320	0x1B6B2000  	_Label9+27
0x16324	0x02452000  	_Label9_Caption+0
0x16328	0x1B602000  	_Label9+16
0x1632C	0x1B642000  	_Label9+20
0x16330	0x1B682000  	_Label9+24
0x16334	0x1B6C2000  	_Label9+28
0x16338	0x1B702000  	_Label9+32
0x1633C	0x1B742000  	_Label9+36
0x16340	0x1B782000  	_Label9+40
0x16344	0x1B7C2000  	_Label31+0
0x16348	0x1B802000  	_Label31+4
0x1634C	0x1B822000  	_Label31+6
0x16350	0x1B842000  	_Label31+8
0x16354	0x1B862000  	_Label31+10
0x16358	0x1B882000  	_Label31+12
0x1635C	0x1B962000  	_Label31+26
0x16360	0x1B972000  	_Label31+27
0x16364	0x02492000  	_Label31_Caption+0
0x16368	0x1B8C2000  	_Label31+16
0x1636C	0x1B902000  	_Label31+20
0x16370	0x1B942000  	_Label31+24
0x16374	0x1B982000  	_Label31+28
0x16378	0x1B9C2000  	_Label31+32
0x1637C	0x1BA02000  	_Label31+36
0x16380	0x1BA42000  	_Label31+40
0x16384	0x1BA82000  	_Label33+0
0x16388	0x1BAC2000  	_Label33+4
0x1638C	0x1BAE2000  	_Label33+6
0x16390	0x1BB02000  	_Label33+8
0x16394	0x1BB22000  	_Label33+10
0x16398	0x1BB42000  	_Label33+12
0x1639C	0x1BC22000  	_Label33+26
0x163A0	0x1BC32000  	_Label33+27
0x163A4	0x024D2000  	_Label33_Caption+0
0x163A8	0x1BB82000  	_Label33+16
0x163AC	0x1BBC2000  	_Label33+20
0x163B0	0x1BC02000  	_Label33+24
0x163B4	0x1BC42000  	_Label33+28
0x163B8	0x1BC82000  	_Label33+32
;Ducati_logger_driver.c, 3425 :: 		Label33.OnClickPtr      = 0;
0x163BC	0x2100    MOVS	R1, #0
0x163BE	0x487B    LDR	R0, [PC, #492]
0x163C0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3426 :: 		Label33.OnPressPtr      = 0;
0x163C2	0x2100    MOVS	R1, #0
0x163C4	0x487A    LDR	R0, [PC, #488]
0x163C6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3428 :: 		Box15.OwnerScreen     = &Magnetometer_test;
0x163C8	0x497A    LDR	R1, [PC, #488]
0x163CA	0x487B    LDR	R0, [PC, #492]
0x163CC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3429 :: 		Box15.Order           = 0;
0x163CE	0x2100    MOVS	R1, #0
0x163D0	0x487A    LDR	R0, [PC, #488]
0x163D2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3430 :: 		Box15.Left            = 4;
0x163D4	0x2104    MOVS	R1, #4
0x163D6	0x487A    LDR	R0, [PC, #488]
0x163D8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3431 :: 		Box15.Top             = 5;
0x163DA	0x2105    MOVS	R1, #5
0x163DC	0x4879    LDR	R0, [PC, #484]
0x163DE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3432 :: 		Box15.Width           = 240;
0x163E0	0x21F0    MOVS	R1, #240
0x163E2	0x4879    LDR	R0, [PC, #484]
0x163E4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3433 :: 		Box15.Height          = 23;
0x163E6	0x2117    MOVS	R1, #23
0x163E8	0x4878    LDR	R0, [PC, #480]
0x163EA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3434 :: 		Box15.Pen_Width       = 1;
0x163EC	0x2101    MOVS	R1, #1
0x163EE	0x4878    LDR	R0, [PC, #480]
0x163F0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3435 :: 		Box15.Pen_Color       = 0x0000;
0x163F2	0x2100    MOVS	R1, #0
0x163F4	0x4877    LDR	R0, [PC, #476]
0x163F6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3436 :: 		Box15.Visible         = 0;
0x163F8	0x2100    MOVS	R1, #0
0x163FA	0x4877    LDR	R0, [PC, #476]
0x163FC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3437 :: 		Box15.Active          = 1;
0x163FE	0x2101    MOVS	R1, #1
0x16400	0x4876    LDR	R0, [PC, #472]
0x16402	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3438 :: 		Box15.Transparent     = 1;
0x16404	0x2101    MOVS	R1, #1
0x16406	0x4876    LDR	R0, [PC, #472]
0x16408	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3439 :: 		Box15.Gradient        = 0;
0x1640A	0x2100    MOVS	R1, #0
0x1640C	0x4875    LDR	R0, [PC, #468]
0x1640E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3440 :: 		Box15.Gradient_Orientation = 0;
0x16410	0x2100    MOVS	R1, #0
0x16412	0x4875    LDR	R0, [PC, #468]
0x16414	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3441 :: 		Box15.Gradient_Start_Color = 0xFFFF;
0x16416	0xF64F71FF  MOVW	R1, #65535
0x1641A	0x4874    LDR	R0, [PC, #464]
0x1641C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3442 :: 		Box15.Gradient_End_Color = 0xC618;
0x1641E	0xF24C6118  MOVW	R1, #50712
0x16422	0x4873    LDR	R0, [PC, #460]
0x16424	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3443 :: 		Box15.Color           = 0xC618;
0x16426	0xF24C6118  MOVW	R1, #50712
0x1642A	0x4872    LDR	R0, [PC, #456]
0x1642C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3444 :: 		Box15.PressColEnabled = 0;
0x1642E	0x2100    MOVS	R1, #0
0x16430	0x4871    LDR	R0, [PC, #452]
0x16432	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3445 :: 		Box15.Press_Color     = 0xE71C;
0x16434	0xF24E711C  MOVW	R1, #59164
0x16438	0x4870    LDR	R0, [PC, #448]
0x1643A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3446 :: 		Box15.OnUpPtr         = 0;
0x1643C	0x2100    MOVS	R1, #0
0x1643E	0x4870    LDR	R0, [PC, #448]
0x16440	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3447 :: 		Box15.OnDownPtr       = 0;
0x16442	0x2100    MOVS	R1, #0
0x16444	0x486F    LDR	R0, [PC, #444]
0x16446	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3448 :: 		Box15.OnClickPtr      = doSettings;
0x16448	0x496F    LDR	R1, [PC, #444]
0x1644A	0x4870    LDR	R0, [PC, #448]
0x1644C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3449 :: 		Box15.OnPressPtr      = 0;
0x1644E	0x2100    MOVS	R1, #0
0x16450	0x486F    LDR	R0, [PC, #444]
0x16452	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3451 :: 		Box18.OwnerScreen     = &Magnetometer_test;
0x16454	0x4957    LDR	R1, [PC, #348]
0x16456	0x486F    LDR	R0, [PC, #444]
0x16458	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3452 :: 		Box18.Order           = 1;
0x1645A	0x2101    MOVS	R1, #1
0x1645C	0x486E    LDR	R0, [PC, #440]
0x1645E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3453 :: 		Box18.Left            = 0;
0x16460	0x2100    MOVS	R1, #0
0x16462	0x486E    LDR	R0, [PC, #440]
0x16464	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3454 :: 		Box18.Top             = 40;
0x16466	0x2128    MOVS	R1, #40
0x16468	0x486D    LDR	R0, [PC, #436]
0x1646A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3455 :: 		Box18.Width           = 480;
0x1646C	0xF24011E0  MOVW	R1, #480
0x16470	0x486C    LDR	R0, [PC, #432]
0x16472	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3456 :: 		Box18.Height          = 207;
0x16474	0x21CF    MOVS	R1, #207
0x16476	0x486C    LDR	R0, [PC, #432]
0x16478	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3457 :: 		Box18.Pen_Width       = 1;
0x1647A	0x2101    MOVS	R1, #1
0x1647C	0x486B    LDR	R0, [PC, #428]
0x1647E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3458 :: 		Box18.Pen_Color       = 0xFFFF;
0x16480	0xF64F71FF  MOVW	R1, #65535
0x16484	0x486A    LDR	R0, [PC, #424]
0x16486	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3459 :: 		Box18.Visible         = 1;
0x16488	0x2101    MOVS	R1, #1
0x1648A	0x486A    LDR	R0, [PC, #424]
0x1648C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3460 :: 		Box18.Active          = 1;
0x1648E	0x2101    MOVS	R1, #1
0x16490	0x4869    LDR	R0, [PC, #420]
0x16492	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3461 :: 		Box18.Transparent     = 1;
0x16494	0x2101    MOVS	R1, #1
0x16496	0x4869    LDR	R0, [PC, #420]
0x16498	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3462 :: 		Box18.Gradient        = 0;
0x1649A	0x2100    MOVS	R1, #0
0x1649C	0x4868    LDR	R0, [PC, #416]
0x1649E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3463 :: 		Box18.Gradient_Orientation = 0;
0x164A0	0x2100    MOVS	R1, #0
0x164A2	0x4868    LDR	R0, [PC, #416]
0x164A4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3464 :: 		Box18.Gradient_Start_Color = 0xFFFF;
0x164A6	0xF64F71FF  MOVW	R1, #65535
0x164AA	0x4867    LDR	R0, [PC, #412]
0x164AC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3465 :: 		Box18.Gradient_End_Color = 0xFFFF;
0x164AE	0xF64F71FF  MOVW	R1, #65535
0x164B2	0x4866    LDR	R0, [PC, #408]
0x164B4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3466 :: 		Box18.Color           = 0xFFFF;
0x164B6	0xF64F71FF  MOVW	R1, #65535
0x164BA	0x4865    LDR	R0, [PC, #404]
0x164BC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3467 :: 		Box18.PressColEnabled = 0;
0x164BE	0x2100    MOVS	R1, #0
0x164C0	0x4864    LDR	R0, [PC, #400]
0x164C2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3468 :: 		Box18.Press_Color     = 0xFFFF;
0x164C4	0xF64F71FF  MOVW	R1, #65535
0x164C8	0x4863    LDR	R0, [PC, #396]
0x164CA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3469 :: 		Box18.OnUpPtr         = 0;
0x164CC	0x2100    MOVS	R1, #0
0x164CE	0x4863    LDR	R0, [PC, #396]
0x164D0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3470 :: 		Box18.OnDownPtr       = 0;
0x164D2	0x2100    MOVS	R1, #0
0x164D4	0x4862    LDR	R0, [PC, #392]
0x164D6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3471 :: 		Box18.OnClickPtr      = 0;
0x164D8	0x2100    MOVS	R1, #0
0x164DA	0x4862    LDR	R0, [PC, #392]
0x164DC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3472 :: 		Box18.OnPressPtr      = 0;
0x164DE	0x2100    MOVS	R1, #0
0x164E0	0x4861    LDR	R0, [PC, #388]
0x164E2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3474 :: 		Image53.OwnerScreen     = &Magnetometer_test;
0x164E4	0x4933    LDR	R1, [PC, #204]
0x164E6	0x4861    LDR	R0, [PC, #388]
0x164E8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3475 :: 		Image53.Order           = 2;
0x164EA	0x2102    MOVS	R1, #2
0x164EC	0x4860    LDR	R0, [PC, #384]
0x164EE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3476 :: 		Image53.Left            = 5;
0x164F0	0x2105    MOVS	R1, #5
0x164F2	0x4860    LDR	R0, [PC, #384]
0x164F4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3477 :: 		Image53.Top             = 6;
0x164F6	0x2106    MOVS	R1, #6
0x164F8	0x485F    LDR	R0, [PC, #380]
0x164FA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3478 :: 		Image53.Width           = 22;
0x164FC	0x2116    MOVS	R1, #22
0x164FE	0x485F    LDR	R0, [PC, #380]
0x16500	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3479 :: 		Image53.Height          = 22;
0x16502	0x2116    MOVS	R1, #22
0x16504	0x485E    LDR	R0, [PC, #376]
0x16506	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3480 :: 		Image53.Picture_Type    = 0;
0x16508	0x2100    MOVS	R1, #0
0x1650A	0x485E    LDR	R0, [PC, #376]
0x1650C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3481 :: 		Image53.Picture_Ratio   = 1;
0x1650E	0x2101    MOVS	R1, #1
0x16510	0x485D    LDR	R0, [PC, #372]
0x16512	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3482 :: 		Image53.Picture_Name    = icon_back_magnet_bmp;
0x16514	0x495D    LDR	R1, [PC, #372]
0x16516	0x485E    LDR	R0, [PC, #376]
0x16518	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3483 :: 		Image53.Visible         = 1;
0x1651A	0x2101    MOVS	R1, #1
0x1651C	0x485D    LDR	R0, [PC, #372]
0x1651E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3484 :: 		Image53.Active          = 0;
0x16520	0x2100    MOVS	R1, #0
0x16522	0x485D    LDR	R0, [PC, #372]
0x16524	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3485 :: 		Image53.OnUpPtr         = 0;
0x16526	0x2100    MOVS	R1, #0
0x16528	0x485C    LDR	R0, [PC, #368]
0x1652A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3486 :: 		Image53.OnDownPtr       = 0;
0x1652C	0x2100    MOVS	R1, #0
0x1652E	0x485C    LDR	R0, [PC, #368]
0x16530	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3487 :: 		Image53.OnClickPtr      = doSettings;
0x16532	0x4935    LDR	R1, [PC, #212]
0x16534	0x485B    LDR	R0, [PC, #364]
0x16536	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3488 :: 		Image53.OnPressPtr      = doSettings;
0x16538	0x4933    LDR	R1, [PC, #204]
0x1653A	0x485B    LDR	R0, [PC, #364]
0x1653C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3490 :: 		Label34.OwnerScreen     = &Magnetometer_test;
0x1653E	0x491D    LDR	R1, [PC, #116]
0x16540	0x485A    LDR	R0, [PC, #360]
0x16542	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3491 :: 		Label34.Order           = 3;
0x16544	0x2103    MOVS	R1, #3
0x16546	0x485A    LDR	R0, [PC, #360]
0x16548	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3492 :: 		Label34.Left            = 32;
0x1654A	0x2120    MOVS	R1, #32
0x1654C	0x4859    LDR	R0, [PC, #356]
0x1654E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3493 :: 		Label34.Top             = 2;
0x16550	0x2102    MOVS	R1, #2
0x16552	0x4859    LDR	R0, [PC, #356]
0x16554	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3494 :: 		Label34.Width           = 211;
0x16556	0x21D3    MOVS	R1, #211
0x16558	0x4858    LDR	R0, [PC, #352]
0x1655A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3495 :: 		Label34.Height          = 31;
0x1655C	0x211F    MOVS	R1, #31
0x1655E	0x4858    LDR	R0, [PC, #352]
0x16560	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3496 :: 		Label34.Visible         = 1;
0x16562	0x2101    MOVS	R1, #1
0x16564	0x4857    LDR	R0, [PC, #348]
0x16566	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3497 :: 		Label34.Active          = 0;
0x16568	0x2100    MOVS	R1, #0
0x1656A	0x4857    LDR	R0, [PC, #348]
0x1656C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3498 :: 		Label34.Caption         = Label34_Caption;
0x1656E	0x4957    LDR	R1, [PC, #348]
0x16570	0x4857    LDR	R0, [PC, #348]
0x16572	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3499 :: 		Label34.FontName        = Open_Sans_Light19x28_Regular;
0x16574	0xF64D0139  MOVW	R1, #55353
0x16578	0x4856    LDR	R0, [PC, #344]
0x1657A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3500 :: 		Label34.Font_Color      = 0xFFFF;
0x1657C	0xF64F71FF  MOVW	R1, #65535
0x16580	0x4855    LDR	R0, [PC, #340]
0x16582	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3501 :: 		Label34.OnUpPtr         = 0;
0x16584	0x2100    MOVS	R1, #0
0x16586	0x4855    LDR	R0, [PC, #340]
0x16588	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3502 :: 		Label34.OnDownPtr       = 0;
0x1658A	0x2100    MOVS	R1, #0
0x1658C	0x4854    LDR	R0, [PC, #336]
0x1658E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3503 :: 		Label34.OnClickPtr      = 0;
0x16590	0x2100    MOVS	R1, #0
0x16592	0x4854    LDR	R0, [PC, #336]
0x16594	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3504 :: 		Label34.OnPressPtr      = 0;
0x16596	0x2100    MOVS	R1, #0
0x16598	0x4853    LDR	R0, [PC, #332]
0x1659A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3506 :: 		Label35.OwnerScreen     = &Magnetometer_test;
0x1659C	0x4905    LDR	R1, [PC, #20]
0x1659E	0x4853    LDR	R0, [PC, #332]
0x165A0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3507 :: 		Label35.Order           = 4;
0x165A2	0x2104    MOVS	R1, #4
0x165A4	0x4852    LDR	R0, [PC, #328]
0x165A6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3508 :: 		Label35.Left            = 75;
0x165A8	0x214B    MOVS	R1, #75
0x165AA	0xE0A3    B	#326
0x165AC	0x1BCC2000  	_Label33+36
0x165B0	0x1BD02000  	_Label33+40
0x165B4	0x23D82000  	_Magnetometer_test+0
0x165B8	0x1D3C2000  	_Box15+0
0x165BC	0x1D402000  	_Box15+4
0x165C0	0x1D422000  	_Box15+6
0x165C4	0x1D442000  	_Box15+8
0x165C8	0x1D462000  	_Box15+10
0x165CC	0x1D482000  	_Box15+12
0x165D0	0x1D4A2000  	_Box15+14
0x165D4	0x1D4C2000  	_Box15+16
0x165D8	0x1D4E2000  	_Box15+18
0x165DC	0x1D4F2000  	_Box15+19
0x165E0	0x1D502000  	_Box15+20
0x165E4	0x1D512000  	_Box15+21
0x165E8	0x1D522000  	_Box15+22
0x165EC	0x1D542000  	_Box15+24
0x165F0	0x1D562000  	_Box15+26
0x165F4	0x1D582000  	_Box15+28
0x165F8	0x1D5A2000  	_Box15+30
0x165FC	0x1D5C2000  	_Box15+32
0x16600	0x1D602000  	_Box15+36
0x16604	0x1D642000  	_Box15+40
0x16608	0xB2A50000  	_doSettings+0
0x1660C	0x1D682000  	_Box15+44
0x16610	0x1D6C2000  	_Box15+48
0x16614	0x1D702000  	_Box18+0
0x16618	0x1D742000  	_Box18+4
0x1661C	0x1D762000  	_Box18+6
0x16620	0x1D782000  	_Box18+8
0x16624	0x1D7A2000  	_Box18+10
0x16628	0x1D7C2000  	_Box18+12
0x1662C	0x1D7E2000  	_Box18+14
0x16630	0x1D802000  	_Box18+16
0x16634	0x1D822000  	_Box18+18
0x16638	0x1D832000  	_Box18+19
0x1663C	0x1D842000  	_Box18+20
0x16640	0x1D852000  	_Box18+21
0x16644	0x1D862000  	_Box18+22
0x16648	0x1D882000  	_Box18+24
0x1664C	0x1D8A2000  	_Box18+26
0x16650	0x1D8C2000  	_Box18+28
0x16654	0x1D8E2000  	_Box18+30
0x16658	0x1D902000  	_Box18+32
0x1665C	0x1D942000  	_Box18+36
0x16660	0x1D982000  	_Box18+40
0x16664	0x1D9C2000  	_Box18+44
0x16668	0x1DA02000  	_Box18+48
0x1666C	0x1D142000  	_Image53+0
0x16670	0x1D182000  	_Image53+4
0x16674	0x1D1A2000  	_Image53+6
0x16678	0x1D1C2000  	_Image53+8
0x1667C	0x1D1E2000  	_Image53+10
0x16680	0x1D202000  	_Image53+12
0x16684	0x1D2A2000  	_Image53+22
0x16688	0x1D2B2000  	_Image53+23
0x1668C	0xDA76003E  	#4119158
0x16690	0x1D242000  	_Image53+16
0x16694	0x1D282000  	_Image53+20
0x16698	0x1D292000  	_Image53+21
0x1669C	0x1D2C2000  	_Image53+24
0x166A0	0x1D302000  	_Image53+28
0x166A4	0x1D342000  	_Image53+32
0x166A8	0x1D382000  	_Image53+36
0x166AC	0x1C642000  	_Label34+0
0x166B0	0x1C682000  	_Label34+4
0x166B4	0x1C6A2000  	_Label34+6
0x166B8	0x1C6C2000  	_Label34+8
0x166BC	0x1C6E2000  	_Label34+10
0x166C0	0x1C702000  	_Label34+12
0x166C4	0x1C7E2000  	_Label34+26
0x166C8	0x1C7F2000  	_Label34+27
0x166CC	0x02512000  	_Label34_Caption+0
0x166D0	0x1C742000  	_Label34+16
0x166D4	0x1C782000  	_Label34+20
0x166D8	0x1C7C2000  	_Label34+24
0x166DC	0x1C802000  	_Label34+28
0x166E0	0x1C842000  	_Label34+32
0x166E4	0x1C882000  	_Label34+36
0x166E8	0x1C8C2000  	_Label34+40
0x166EC	0x1C902000  	_Label35+0
0x166F0	0x1C942000  	_Label35+4
0x166F4	0x487D    LDR	R0, [PC, #500]
0x166F6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3509 :: 		Label35.Top             = 250;
0x166F8	0x21FA    MOVS	R1, #250
0x166FA	0x487D    LDR	R0, [PC, #500]
0x166FC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3510 :: 		Label35.Width           = 13;
0x166FE	0x210D    MOVS	R1, #13
0x16700	0x487C    LDR	R0, [PC, #496]
0x16702	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3511 :: 		Label35.Height          = 24;
0x16704	0x2118    MOVS	R1, #24
0x16706	0x487C    LDR	R0, [PC, #496]
0x16708	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3512 :: 		Label35.Visible         = 1;
0x1670A	0x2101    MOVS	R1, #1
0x1670C	0x487B    LDR	R0, [PC, #492]
0x1670E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3513 :: 		Label35.Active          = 1;
0x16710	0x2101    MOVS	R1, #1
0x16712	0x487B    LDR	R0, [PC, #492]
0x16714	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3514 :: 		Label35.Caption         = Label35_Caption;
0x16716	0x497B    LDR	R1, [PC, #492]
0x16718	0x487B    LDR	R0, [PC, #492]
0x1671A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3515 :: 		Label35.FontName        = Open_Sans_Light14x22_Regular;
0x1671C	0xF64C411F  MOVW	R1, #52255
0x16720	0x487A    LDR	R0, [PC, #488]
0x16722	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3516 :: 		Label35.Font_Color      = 0xF800;
0x16724	0xF64F0100  MOVW	R1, #63488
0x16728	0x4879    LDR	R0, [PC, #484]
0x1672A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3517 :: 		Label35.OnUpPtr         = 0;
0x1672C	0x2100    MOVS	R1, #0
0x1672E	0x4879    LDR	R0, [PC, #484]
0x16730	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3518 :: 		Label35.OnDownPtr       = 0;
0x16732	0x2100    MOVS	R1, #0
0x16734	0x4878    LDR	R0, [PC, #480]
0x16736	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3519 :: 		Label35.OnClickPtr      = 0;
0x16738	0x2100    MOVS	R1, #0
0x1673A	0x4878    LDR	R0, [PC, #480]
0x1673C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3520 :: 		Label35.OnPressPtr      = 0;
0x1673E	0x2100    MOVS	R1, #0
0x16740	0x4877    LDR	R0, [PC, #476]
0x16742	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3522 :: 		Label36.OwnerScreen     = &Magnetometer_test;
0x16744	0x4977    LDR	R1, [PC, #476]
0x16746	0x4878    LDR	R0, [PC, #480]
0x16748	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3523 :: 		Label36.Order           = 5;
0x1674A	0x2105    MOVS	R1, #5
0x1674C	0x4877    LDR	R0, [PC, #476]
0x1674E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3524 :: 		Label36.Left            = 225;
0x16750	0x21E1    MOVS	R1, #225
0x16752	0x4877    LDR	R0, [PC, #476]
0x16754	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3525 :: 		Label36.Top             = 250;
0x16756	0x21FA    MOVS	R1, #250
0x16758	0x4876    LDR	R0, [PC, #472]
0x1675A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3526 :: 		Label36.Width           = 13;
0x1675C	0x210D    MOVS	R1, #13
0x1675E	0x4876    LDR	R0, [PC, #472]
0x16760	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3527 :: 		Label36.Height          = 24;
0x16762	0x2118    MOVS	R1, #24
0x16764	0x4875    LDR	R0, [PC, #468]
0x16766	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3528 :: 		Label36.Visible         = 1;
0x16768	0x2101    MOVS	R1, #1
0x1676A	0x4875    LDR	R0, [PC, #468]
0x1676C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3529 :: 		Label36.Active          = 1;
0x1676E	0x2101    MOVS	R1, #1
0x16770	0x4874    LDR	R0, [PC, #464]
0x16772	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3530 :: 		Label36.Caption         = Label36_Caption;
0x16774	0x4974    LDR	R1, [PC, #464]
0x16776	0x4875    LDR	R0, [PC, #468]
0x16778	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3531 :: 		Label36.FontName        = Open_Sans_Light14x22_Regular;
0x1677A	0xF64C411F  MOVW	R1, #52255
0x1677E	0x4874    LDR	R0, [PC, #464]
0x16780	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3532 :: 		Label36.Font_Color      = 0x001F;
0x16782	0x211F    MOVS	R1, #31
0x16784	0x4873    LDR	R0, [PC, #460]
0x16786	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3533 :: 		Label36.OnUpPtr         = 0;
0x16788	0x2100    MOVS	R1, #0
0x1678A	0x4873    LDR	R0, [PC, #460]
0x1678C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3534 :: 		Label36.OnDownPtr       = 0;
0x1678E	0x2100    MOVS	R1, #0
0x16790	0x4872    LDR	R0, [PC, #456]
0x16792	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3535 :: 		Label36.OnClickPtr      = 0;
0x16794	0x2100    MOVS	R1, #0
0x16796	0x4872    LDR	R0, [PC, #456]
0x16798	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3536 :: 		Label36.OnPressPtr      = 0;
0x1679A	0x2100    MOVS	R1, #0
0x1679C	0x4871    LDR	R0, [PC, #452]
0x1679E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3538 :: 		Label37.OwnerScreen     = &Magnetometer_test;
0x167A0	0x4960    LDR	R1, [PC, #384]
0x167A2	0x4871    LDR	R0, [PC, #452]
0x167A4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3539 :: 		Label37.Order           = 6;
0x167A6	0x2106    MOVS	R1, #6
0x167A8	0x4870    LDR	R0, [PC, #448]
0x167AA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3540 :: 		Label37.Left            = 375;
0x167AC	0xF2401177  MOVW	R1, #375
0x167B0	0x486F    LDR	R0, [PC, #444]
0x167B2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3541 :: 		Label37.Top             = 250;
0x167B4	0x21FA    MOVS	R1, #250
0x167B6	0x486F    LDR	R0, [PC, #444]
0x167B8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3542 :: 		Label37.Width           = 13;
0x167BA	0x210D    MOVS	R1, #13
0x167BC	0x486E    LDR	R0, [PC, #440]
0x167BE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3543 :: 		Label37.Height          = 24;
0x167C0	0x2118    MOVS	R1, #24
0x167C2	0x486E    LDR	R0, [PC, #440]
0x167C4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3544 :: 		Label37.Visible         = 1;
0x167C6	0x2101    MOVS	R1, #1
0x167C8	0x486D    LDR	R0, [PC, #436]
0x167CA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3545 :: 		Label37.Active          = 1;
0x167CC	0x2101    MOVS	R1, #1
0x167CE	0x486D    LDR	R0, [PC, #436]
0x167D0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3546 :: 		Label37.Caption         = Label37_Caption;
0x167D2	0x496D    LDR	R1, [PC, #436]
0x167D4	0x486D    LDR	R0, [PC, #436]
0x167D6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3547 :: 		Label37.FontName        = Open_Sans_Light14x22_Regular;
0x167D8	0xF64C411F  MOVW	R1, #52255
0x167DC	0x486C    LDR	R0, [PC, #432]
0x167DE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3548 :: 		Label37.Font_Color      = 0x0400;
0x167E0	0xF2404100  MOVW	R1, #1024
0x167E4	0x486B    LDR	R0, [PC, #428]
0x167E6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3549 :: 		Label37.OnUpPtr         = 0;
0x167E8	0x2100    MOVS	R1, #0
0x167EA	0x486B    LDR	R0, [PC, #428]
0x167EC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3550 :: 		Label37.OnDownPtr       = 0;
0x167EE	0x2100    MOVS	R1, #0
0x167F0	0x486A    LDR	R0, [PC, #424]
0x167F2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3551 :: 		Label37.OnClickPtr      = 0;
0x167F4	0x2100    MOVS	R1, #0
0x167F6	0x486A    LDR	R0, [PC, #424]
0x167F8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3552 :: 		Label37.OnPressPtr      = 0;
0x167FA	0x2100    MOVS	R1, #0
0x167FC	0x4869    LDR	R0, [PC, #420]
0x167FE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3554 :: 		Box19.OwnerScreen     = &Pressure_test;
0x16800	0x4969    LDR	R1, [PC, #420]
0x16802	0x486A    LDR	R0, [PC, #424]
0x16804	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3555 :: 		Box19.Order           = 0;
0x16806	0x2100    MOVS	R1, #0
0x16808	0x4869    LDR	R0, [PC, #420]
0x1680A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3556 :: 		Box19.Left            = 4;
0x1680C	0x2104    MOVS	R1, #4
0x1680E	0x4869    LDR	R0, [PC, #420]
0x16810	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3557 :: 		Box19.Top             = 5;
0x16812	0x2105    MOVS	R1, #5
0x16814	0x4868    LDR	R0, [PC, #416]
0x16816	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3558 :: 		Box19.Width           = 265;
0x16818	0xF2401109  MOVW	R1, #265
0x1681C	0x4867    LDR	R0, [PC, #412]
0x1681E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3559 :: 		Box19.Height          = 23;
0x16820	0x2117    MOVS	R1, #23
0x16822	0x4867    LDR	R0, [PC, #412]
0x16824	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3560 :: 		Box19.Pen_Width       = 1;
0x16826	0x2101    MOVS	R1, #1
0x16828	0x4866    LDR	R0, [PC, #408]
0x1682A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3561 :: 		Box19.Pen_Color       = 0x0000;
0x1682C	0x2100    MOVS	R1, #0
0x1682E	0x4866    LDR	R0, [PC, #408]
0x16830	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3562 :: 		Box19.Visible         = 0;
0x16832	0x2100    MOVS	R1, #0
0x16834	0x4865    LDR	R0, [PC, #404]
0x16836	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3563 :: 		Box19.Active          = 1;
0x16838	0x2101    MOVS	R1, #1
0x1683A	0x4865    LDR	R0, [PC, #404]
0x1683C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3564 :: 		Box19.Transparent     = 1;
0x1683E	0x2101    MOVS	R1, #1
0x16840	0x4864    LDR	R0, [PC, #400]
0x16842	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3565 :: 		Box19.Gradient        = 0;
0x16844	0x2100    MOVS	R1, #0
0x16846	0x4864    LDR	R0, [PC, #400]
0x16848	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3566 :: 		Box19.Gradient_Orientation = 0;
0x1684A	0x2100    MOVS	R1, #0
0x1684C	0x4863    LDR	R0, [PC, #396]
0x1684E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3567 :: 		Box19.Gradient_Start_Color = 0xFFFF;
0x16850	0xF64F71FF  MOVW	R1, #65535
0x16854	0x4862    LDR	R0, [PC, #392]
0x16856	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3568 :: 		Box19.Gradient_End_Color = 0xC618;
0x16858	0xF24C6118  MOVW	R1, #50712
0x1685C	0x4861    LDR	R0, [PC, #388]
0x1685E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3569 :: 		Box19.Color           = 0xC618;
0x16860	0xF24C6118  MOVW	R1, #50712
0x16864	0x4860    LDR	R0, [PC, #384]
0x16866	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3570 :: 		Box19.PressColEnabled = 0;
0x16868	0x2100    MOVS	R1, #0
0x1686A	0x4860    LDR	R0, [PC, #384]
0x1686C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3571 :: 		Box19.Press_Color     = 0xE71C;
0x1686E	0xF24E711C  MOVW	R1, #59164
0x16872	0x485F    LDR	R0, [PC, #380]
0x16874	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3572 :: 		Box19.OnUpPtr         = 0;
0x16876	0x2100    MOVS	R1, #0
0x16878	0x485E    LDR	R0, [PC, #376]
0x1687A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3573 :: 		Box19.OnDownPtr       = 0;
0x1687C	0x2100    MOVS	R1, #0
0x1687E	0x485E    LDR	R0, [PC, #376]
0x16880	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3574 :: 		Box19.OnClickPtr      = doSettings;
0x16882	0x495E    LDR	R1, [PC, #376]
0x16884	0x485E    LDR	R0, [PC, #376]
0x16886	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3575 :: 		Box19.OnPressPtr      = 0;
0x16888	0x2100    MOVS	R1, #0
0x1688A	0x485E    LDR	R0, [PC, #376]
0x1688C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3577 :: 		Box20.OwnerScreen     = &Pressure_test;
0x1688E	0x4946    LDR	R1, [PC, #280]
0x16890	0x485D    LDR	R0, [PC, #372]
0x16892	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3578 :: 		Box20.Order           = 1;
0x16894	0x2101    MOVS	R1, #1
0x16896	0x485D    LDR	R0, [PC, #372]
0x16898	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3579 :: 		Box20.Left            = 0;
0x1689A	0x2100    MOVS	R1, #0
0x1689C	0x485C    LDR	R0, [PC, #368]
0x1689E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3580 :: 		Box20.Top             = 40;
0x168A0	0x2128    MOVS	R1, #40
0x168A2	0x485C    LDR	R0, [PC, #368]
0x168A4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3581 :: 		Box20.Width           = 480;
0x168A6	0xF24011E0  MOVW	R1, #480
0x168AA	0x485B    LDR	R0, [PC, #364]
0x168AC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3582 :: 		Box20.Height          = 207;
0x168AE	0x21CF    MOVS	R1, #207
0x168B0	0x485A    LDR	R0, [PC, #360]
0x168B2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3583 :: 		Box20.Pen_Width       = 1;
0x168B4	0x2101    MOVS	R1, #1
0x168B6	0x485A    LDR	R0, [PC, #360]
0x168B8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3584 :: 		Box20.Pen_Color       = 0xFFFF;
0x168BA	0xF64F71FF  MOVW	R1, #65535
0x168BE	0x4859    LDR	R0, [PC, #356]
0x168C0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3585 :: 		Box20.Visible         = 1;
0x168C2	0x2101    MOVS	R1, #1
0x168C4	0x4858    LDR	R0, [PC, #352]
0x168C6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3586 :: 		Box20.Active          = 1;
0x168C8	0x2101    MOVS	R1, #1
0x168CA	0x4858    LDR	R0, [PC, #352]
0x168CC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3587 :: 		Box20.Transparent     = 1;
0x168CE	0x2101    MOVS	R1, #1
0x168D0	0x4857    LDR	R0, [PC, #348]
0x168D2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3588 :: 		Box20.Gradient        = 0;
0x168D4	0x2100    MOVS	R1, #0
0x168D6	0x4857    LDR	R0, [PC, #348]
0x168D8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3589 :: 		Box20.Gradient_Orientation = 0;
0x168DA	0x2100    MOVS	R1, #0
0x168DC	0x4856    LDR	R0, [PC, #344]
0x168DE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3590 :: 		Box20.Gradient_Start_Color = 0xFFFF;
0x168E0	0xF64F71FF  MOVW	R1, #65535
0x168E4	0x4855    LDR	R0, [PC, #340]
0x168E6	0x8001    STRH	R1, [R0, #0]
0x168E8	0xF000B8AA  B	#340
0x168EC	0x1C962000  	_Label35+6
0x168F0	0x1C982000  	_Label35+8
0x168F4	0x1C9A2000  	_Label35+10
0x168F8	0x1C9C2000  	_Label35+12
0x168FC	0x1CAA2000  	_Label35+26
0x16900	0x1CAB2000  	_Label35+27
0x16904	0x02642000  	_Label35_Caption+0
0x16908	0x1CA02000  	_Label35+16
0x1690C	0x1CA42000  	_Label35+20
0x16910	0x1CA82000  	_Label35+24
0x16914	0x1CAC2000  	_Label35+28
0x16918	0x1CB02000  	_Label35+32
0x1691C	0x1CB42000  	_Label35+36
0x16920	0x1CB82000  	_Label35+40
0x16924	0x23D82000  	_Magnetometer_test+0
0x16928	0x1CBC2000  	_Label36+0
0x1692C	0x1CC02000  	_Label36+4
0x16930	0x1CC22000  	_Label36+6
0x16934	0x1CC42000  	_Label36+8
0x16938	0x1CC62000  	_Label36+10
0x1693C	0x1CC82000  	_Label36+12
0x16940	0x1CD62000  	_Label36+26
0x16944	0x1CD72000  	_Label36+27
0x16948	0x02682000  	_Label36_Caption+0
0x1694C	0x1CCC2000  	_Label36+16
0x16950	0x1CD02000  	_Label36+20
0x16954	0x1CD42000  	_Label36+24
0x16958	0x1CD82000  	_Label36+28
0x1695C	0x1CDC2000  	_Label36+32
0x16960	0x1CE02000  	_Label36+36
0x16964	0x1CE42000  	_Label36+40
0x16968	0x1CE82000  	_Label37+0
0x1696C	0x1CEC2000  	_Label37+4
0x16970	0x1CEE2000  	_Label37+6
0x16974	0x1CF02000  	_Label37+8
0x16978	0x1CF22000  	_Label37+10
0x1697C	0x1CF42000  	_Label37+12
0x16980	0x1D022000  	_Label37+26
0x16984	0x1D032000  	_Label37+27
0x16988	0x026C2000  	_Label37_Caption+0
0x1698C	0x1CF82000  	_Label37+16
0x16990	0x1CFC2000  	_Label37+20
0x16994	0x1D002000  	_Label37+24
0x16998	0x1D042000  	_Label37+28
0x1699C	0x1D082000  	_Label37+32
0x169A0	0x1D0C2000  	_Label37+36
0x169A4	0x1D102000  	_Label37+40
0x169A8	0x24282000  	_Pressure_test+0
0x169AC	0x1E7C2000  	_Box19+0
0x169B0	0x1E802000  	_Box19+4
0x169B4	0x1E822000  	_Box19+6
0x169B8	0x1E842000  	_Box19+8
0x169BC	0x1E862000  	_Box19+10
0x169C0	0x1E882000  	_Box19+12
0x169C4	0x1E8A2000  	_Box19+14
0x169C8	0x1E8C2000  	_Box19+16
0x169CC	0x1E8E2000  	_Box19+18
0x169D0	0x1E8F2000  	_Box19+19
0x169D4	0x1E902000  	_Box19+20
0x169D8	0x1E912000  	_Box19+21
0x169DC	0x1E922000  	_Box19+22
0x169E0	0x1E942000  	_Box19+24
0x169E4	0x1E962000  	_Box19+26
0x169E8	0x1E982000  	_Box19+28
0x169EC	0x1E9A2000  	_Box19+30
0x169F0	0x1E9C2000  	_Box19+32
0x169F4	0x1EA02000  	_Box19+36
0x169F8	0x1EA42000  	_Box19+40
0x169FC	0xB2A50000  	_doSettings+0
0x16A00	0x1EA82000  	_Box19+44
0x16A04	0x1EAC2000  	_Box19+48
0x16A08	0x1EB02000  	_Box20+0
0x16A0C	0x1EB42000  	_Box20+4
0x16A10	0x1EB62000  	_Box20+6
0x16A14	0x1EB82000  	_Box20+8
0x16A18	0x1EBA2000  	_Box20+10
0x16A1C	0x1EBC2000  	_Box20+12
0x16A20	0x1EBE2000  	_Box20+14
0x16A24	0x1EC02000  	_Box20+16
0x16A28	0x1EC22000  	_Box20+18
0x16A2C	0x1EC32000  	_Box20+19
0x16A30	0x1EC42000  	_Box20+20
0x16A34	0x1EC52000  	_Box20+21
0x16A38	0x1EC62000  	_Box20+22
0x16A3C	0x1EC82000  	_Box20+24
;Ducati_logger_driver.c, 3591 :: 		Box20.Gradient_End_Color = 0xFFFF;
0x16A40	0xF64F71FF  MOVW	R1, #65535
0x16A44	0x4878    LDR	R0, [PC, #480]
0x16A46	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3592 :: 		Box20.Color           = 0xFFFF;
0x16A48	0xF64F71FF  MOVW	R1, #65535
0x16A4C	0x4877    LDR	R0, [PC, #476]
0x16A4E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3593 :: 		Box20.PressColEnabled = 0;
0x16A50	0x2100    MOVS	R1, #0
0x16A52	0x4877    LDR	R0, [PC, #476]
0x16A54	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3594 :: 		Box20.Press_Color     = 0xFFFF;
0x16A56	0xF64F71FF  MOVW	R1, #65535
0x16A5A	0x4876    LDR	R0, [PC, #472]
0x16A5C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3595 :: 		Box20.OnUpPtr         = 0;
0x16A5E	0x2100    MOVS	R1, #0
0x16A60	0x4875    LDR	R0, [PC, #468]
0x16A62	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3596 :: 		Box20.OnDownPtr       = 0;
0x16A64	0x2100    MOVS	R1, #0
0x16A66	0x4875    LDR	R0, [PC, #468]
0x16A68	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3597 :: 		Box20.OnClickPtr      = 0;
0x16A6A	0x2100    MOVS	R1, #0
0x16A6C	0x4874    LDR	R0, [PC, #464]
0x16A6E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3598 :: 		Box20.OnPressPtr      = 0;
0x16A70	0x2100    MOVS	R1, #0
0x16A72	0x4874    LDR	R0, [PC, #464]
0x16A74	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3600 :: 		Image54.OwnerScreen     = &Pressure_test;
0x16A76	0x4974    LDR	R1, [PC, #464]
0x16A78	0x4874    LDR	R0, [PC, #464]
0x16A7A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3601 :: 		Image54.Order           = 2;
0x16A7C	0x2102    MOVS	R1, #2
0x16A7E	0x4874    LDR	R0, [PC, #464]
0x16A80	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3602 :: 		Image54.Left            = 5;
0x16A82	0x2105    MOVS	R1, #5
0x16A84	0x4873    LDR	R0, [PC, #460]
0x16A86	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3603 :: 		Image54.Top             = 6;
0x16A88	0x2106    MOVS	R1, #6
0x16A8A	0x4873    LDR	R0, [PC, #460]
0x16A8C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3604 :: 		Image54.Width           = 22;
0x16A8E	0x2116    MOVS	R1, #22
0x16A90	0x4872    LDR	R0, [PC, #456]
0x16A92	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3605 :: 		Image54.Height          = 22;
0x16A94	0x2116    MOVS	R1, #22
0x16A96	0x4872    LDR	R0, [PC, #456]
0x16A98	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3606 :: 		Image54.Picture_Type    = 0;
0x16A9A	0x2100    MOVS	R1, #0
0x16A9C	0x4871    LDR	R0, [PC, #452]
0x16A9E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3607 :: 		Image54.Picture_Ratio   = 1;
0x16AA0	0x2101    MOVS	R1, #1
0x16AA2	0x4871    LDR	R0, [PC, #452]
0x16AA4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3608 :: 		Image54.Picture_Name    = icon_back_pressure_bmp;
0x16AA6	0x4971    LDR	R1, [PC, #452]
0x16AA8	0x4871    LDR	R0, [PC, #452]
0x16AAA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3609 :: 		Image54.Visible         = 1;
0x16AAC	0x2101    MOVS	R1, #1
0x16AAE	0x4871    LDR	R0, [PC, #452]
0x16AB0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3610 :: 		Image54.Active          = 0;
0x16AB2	0x2100    MOVS	R1, #0
0x16AB4	0x4870    LDR	R0, [PC, #448]
0x16AB6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3611 :: 		Image54.OnUpPtr         = 0;
0x16AB8	0x2100    MOVS	R1, #0
0x16ABA	0x4870    LDR	R0, [PC, #448]
0x16ABC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3612 :: 		Image54.OnDownPtr       = 0;
0x16ABE	0x2100    MOVS	R1, #0
0x16AC0	0x486F    LDR	R0, [PC, #444]
0x16AC2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3613 :: 		Image54.OnClickPtr      = doPrevScreen;
0x16AC4	0x496F    LDR	R1, [PC, #444]
0x16AC6	0x4870    LDR	R0, [PC, #448]
0x16AC8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3614 :: 		Image54.OnPressPtr      = doPrevScreen;
0x16ACA	0x496E    LDR	R1, [PC, #440]
0x16ACC	0x486F    LDR	R0, [PC, #444]
0x16ACE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3616 :: 		Label38.OwnerScreen     = &Pressure_test;
0x16AD0	0x495D    LDR	R1, [PC, #372]
0x16AD2	0x486F    LDR	R0, [PC, #444]
0x16AD4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3617 :: 		Label38.Order           = 3;
0x16AD6	0x2103    MOVS	R1, #3
0x16AD8	0x486E    LDR	R0, [PC, #440]
0x16ADA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3618 :: 		Label38.Left            = 32;
0x16ADC	0x2120    MOVS	R1, #32
0x16ADE	0x486E    LDR	R0, [PC, #440]
0x16AE0	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3619 :: 		Label38.Top             = 2;
0x16AE2	0x2102    MOVS	R1, #2
0x16AE4	0x486D    LDR	R0, [PC, #436]
0x16AE6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3620 :: 		Label38.Width           = 226;
0x16AE8	0x21E2    MOVS	R1, #226
0x16AEA	0x486D    LDR	R0, [PC, #436]
0x16AEC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3621 :: 		Label38.Height          = 31;
0x16AEE	0x211F    MOVS	R1, #31
0x16AF0	0x486C    LDR	R0, [PC, #432]
0x16AF2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3622 :: 		Label38.Visible         = 1;
0x16AF4	0x2101    MOVS	R1, #1
0x16AF6	0x486C    LDR	R0, [PC, #432]
0x16AF8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3623 :: 		Label38.Active          = 0;
0x16AFA	0x2100    MOVS	R1, #0
0x16AFC	0x486B    LDR	R0, [PC, #428]
0x16AFE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3624 :: 		Label38.Caption         = Label38_Caption;
0x16B00	0x496B    LDR	R1, [PC, #428]
0x16B02	0x486C    LDR	R0, [PC, #432]
0x16B04	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3625 :: 		Label38.FontName        = Open_Sans_Light19x28_Regular;
0x16B06	0xF64D0139  MOVW	R1, #55353
0x16B0A	0x486B    LDR	R0, [PC, #428]
0x16B0C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3626 :: 		Label38.Font_Color      = 0xFFFF;
0x16B0E	0xF64F71FF  MOVW	R1, #65535
0x16B12	0x486A    LDR	R0, [PC, #424]
0x16B14	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3627 :: 		Label38.OnUpPtr         = 0;
0x16B16	0x2100    MOVS	R1, #0
0x16B18	0x4869    LDR	R0, [PC, #420]
0x16B1A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3628 :: 		Label38.OnDownPtr       = 0;
0x16B1C	0x2100    MOVS	R1, #0
0x16B1E	0x4869    LDR	R0, [PC, #420]
0x16B20	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3629 :: 		Label38.OnClickPtr      = 0;
0x16B22	0x2100    MOVS	R1, #0
0x16B24	0x4868    LDR	R0, [PC, #416]
0x16B26	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3630 :: 		Label38.OnPressPtr      = 0;
0x16B28	0x2100    MOVS	R1, #0
0x16B2A	0x4868    LDR	R0, [PC, #416]
0x16B2C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3632 :: 		Label39.OwnerScreen     = &Pressure_test;
0x16B2E	0x4946    LDR	R1, [PC, #280]
0x16B30	0x4867    LDR	R0, [PC, #412]
0x16B32	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3633 :: 		Label39.Order           = 4;
0x16B34	0x2104    MOVS	R1, #4
0x16B36	0x4867    LDR	R0, [PC, #412]
0x16B38	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3634 :: 		Label39.Left            = 75;
0x16B3A	0x214B    MOVS	R1, #75
0x16B3C	0x4866    LDR	R0, [PC, #408]
0x16B3E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3635 :: 		Label39.Top             = 250;
0x16B40	0x21FA    MOVS	R1, #250
0x16B42	0x4866    LDR	R0, [PC, #408]
0x16B44	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3636 :: 		Label39.Width           = 13;
0x16B46	0x210D    MOVS	R1, #13
0x16B48	0x4865    LDR	R0, [PC, #404]
0x16B4A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3637 :: 		Label39.Height          = 24;
0x16B4C	0x2118    MOVS	R1, #24
0x16B4E	0x4865    LDR	R0, [PC, #404]
0x16B50	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3638 :: 		Label39.Visible         = 1;
0x16B52	0x2101    MOVS	R1, #1
0x16B54	0x4864    LDR	R0, [PC, #400]
0x16B56	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3639 :: 		Label39.Active          = 1;
0x16B58	0x2101    MOVS	R1, #1
0x16B5A	0x4864    LDR	R0, [PC, #400]
0x16B5C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3640 :: 		Label39.Caption         = Label39_Caption;
0x16B5E	0x4964    LDR	R1, [PC, #400]
0x16B60	0x4864    LDR	R0, [PC, #400]
0x16B62	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3641 :: 		Label39.FontName        = Open_Sans_Light14x22_Regular;
0x16B64	0xF64C411F  MOVW	R1, #52255
0x16B68	0x4863    LDR	R0, [PC, #396]
0x16B6A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3642 :: 		Label39.Font_Color      = 0xF800;
0x16B6C	0xF64F0100  MOVW	R1, #63488
0x16B70	0x4862    LDR	R0, [PC, #392]
0x16B72	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3643 :: 		Label39.OnUpPtr         = 0;
0x16B74	0x2100    MOVS	R1, #0
0x16B76	0x4862    LDR	R0, [PC, #392]
0x16B78	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3644 :: 		Label39.OnDownPtr       = 0;
0x16B7A	0x2100    MOVS	R1, #0
0x16B7C	0x4861    LDR	R0, [PC, #388]
0x16B7E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3645 :: 		Label39.OnClickPtr      = 0;
0x16B80	0x2100    MOVS	R1, #0
0x16B82	0x4861    LDR	R0, [PC, #388]
0x16B84	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3646 :: 		Label39.OnPressPtr      = 0;
0x16B86	0x2100    MOVS	R1, #0
0x16B88	0x4860    LDR	R0, [PC, #384]
0x16B8A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3648 :: 		Label40.OwnerScreen     = &Pressure_test;
0x16B8C	0x492E    LDR	R1, [PC, #184]
0x16B8E	0x4860    LDR	R0, [PC, #384]
0x16B90	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3649 :: 		Label40.Order           = 5;
0x16B92	0x2105    MOVS	R1, #5
0x16B94	0x485F    LDR	R0, [PC, #380]
0x16B96	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3650 :: 		Label40.Left            = 225;
0x16B98	0x21E1    MOVS	R1, #225
0x16B9A	0x485F    LDR	R0, [PC, #380]
0x16B9C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3651 :: 		Label40.Top             = 250;
0x16B9E	0x21FA    MOVS	R1, #250
0x16BA0	0x485E    LDR	R0, [PC, #376]
0x16BA2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3652 :: 		Label40.Width           = 13;
0x16BA4	0x210D    MOVS	R1, #13
0x16BA6	0x485E    LDR	R0, [PC, #376]
0x16BA8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3653 :: 		Label40.Height          = 24;
0x16BAA	0x2118    MOVS	R1, #24
0x16BAC	0x485D    LDR	R0, [PC, #372]
0x16BAE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3654 :: 		Label40.Visible         = 1;
0x16BB0	0x2101    MOVS	R1, #1
0x16BB2	0x485D    LDR	R0, [PC, #372]
0x16BB4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3655 :: 		Label40.Active          = 1;
0x16BB6	0x2101    MOVS	R1, #1
0x16BB8	0x485C    LDR	R0, [PC, #368]
0x16BBA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3656 :: 		Label40.Caption         = Label40_Caption;
0x16BBC	0x495C    LDR	R1, [PC, #368]
0x16BBE	0x485D    LDR	R0, [PC, #372]
0x16BC0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3657 :: 		Label40.FontName        = Open_Sans_Light14x22_Regular;
0x16BC2	0xF64C411F  MOVW	R1, #52255
0x16BC6	0x485C    LDR	R0, [PC, #368]
0x16BC8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3658 :: 		Label40.Font_Color      = 0x001F;
0x16BCA	0x211F    MOVS	R1, #31
0x16BCC	0x485B    LDR	R0, [PC, #364]
0x16BCE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3659 :: 		Label40.OnUpPtr         = 0;
0x16BD0	0x2100    MOVS	R1, #0
0x16BD2	0x485B    LDR	R0, [PC, #364]
0x16BD4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3660 :: 		Label40.OnDownPtr       = 0;
0x16BD6	0x2100    MOVS	R1, #0
0x16BD8	0x485A    LDR	R0, [PC, #360]
0x16BDA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3661 :: 		Label40.OnClickPtr      = 0;
0x16BDC	0x2100    MOVS	R1, #0
0x16BDE	0x485A    LDR	R0, [PC, #360]
0x16BE0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3662 :: 		Label40.OnPressPtr      = 0;
0x16BE2	0x2100    MOVS	R1, #0
0x16BE4	0x4859    LDR	R0, [PC, #356]
0x16BE6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3664 :: 		Label41.OwnerScreen     = &Pressure_test;
0x16BE8	0x4917    LDR	R1, [PC, #92]
0x16BEA	0x4859    LDR	R0, [PC, #356]
0x16BEC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3665 :: 		Label41.Order           = 6;
0x16BEE	0x2106    MOVS	R1, #6
0x16BF0	0x4858    LDR	R0, [PC, #352]
0x16BF2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3666 :: 		Label41.Left            = 375;
0x16BF4	0xF2401177  MOVW	R1, #375
0x16BF8	0x4857    LDR	R0, [PC, #348]
0x16BFA	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3667 :: 		Label41.Top             = 250;
0x16BFC	0x21FA    MOVS	R1, #250
0x16BFE	0x4857    LDR	R0, [PC, #348]
0x16C00	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3668 :: 		Label41.Width           = 13;
0x16C02	0x210D    MOVS	R1, #13
0x16C04	0x4856    LDR	R0, [PC, #344]
0x16C06	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3669 :: 		Label41.Height          = 24;
0x16C08	0x2118    MOVS	R1, #24
0x16C0A	0x4856    LDR	R0, [PC, #344]
0x16C0C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3670 :: 		Label41.Visible         = 1;
0x16C0E	0x2101    MOVS	R1, #1
0x16C10	0x4855    LDR	R0, [PC, #340]
0x16C12	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3671 :: 		Label41.Active          = 1;
0x16C14	0x2101    MOVS	R1, #1
0x16C16	0x4855    LDR	R0, [PC, #340]
0x16C18	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3672 :: 		Label41.Caption         = Label41_Caption;
0x16C1A	0x4955    LDR	R1, [PC, #340]
0x16C1C	0x4855    LDR	R0, [PC, #340]
0x16C1E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3673 :: 		Label41.FontName        = Open_Sans_Light14x22_Regular;
0x16C20	0xF64C411F  MOVW	R1, #52255
0x16C24	0x4854    LDR	R0, [PC, #336]
0x16C26	0xE0A9    B	#338
0x16C28	0x1ECA2000  	_Box20+26
0x16C2C	0x1ECC2000  	_Box20+28
0x16C30	0x1ECE2000  	_Box20+30
0x16C34	0x1ED02000  	_Box20+32
0x16C38	0x1ED42000  	_Box20+36
0x16C3C	0x1ED82000  	_Box20+40
0x16C40	0x1EDC2000  	_Box20+44
0x16C44	0x1EE02000  	_Box20+48
0x16C48	0x24282000  	_Pressure_test+0
0x16C4C	0x1E542000  	_Image54+0
0x16C50	0x1E582000  	_Image54+4
0x16C54	0x1E5A2000  	_Image54+6
0x16C58	0x1E5C2000  	_Image54+8
0x16C5C	0x1E5E2000  	_Image54+10
0x16C60	0x1E602000  	_Image54+12
0x16C64	0x1E6A2000  	_Image54+22
0x16C68	0x1E6B2000  	_Image54+23
0x16C6C	0xDE44003E  	#4120132
0x16C70	0x1E642000  	_Image54+16
0x16C74	0x1E682000  	_Image54+20
0x16C78	0x1E692000  	_Image54+21
0x16C7C	0x1E6C2000  	_Image54+24
0x16C80	0x1E702000  	_Image54+28
0x16C84	0xC2B50000  	_doPrevScreen+0
0x16C88	0x1E742000  	_Image54+32
0x16C8C	0x1E782000  	_Image54+36
0x16C90	0x1DA42000  	_Label38+0
0x16C94	0x1DA82000  	_Label38+4
0x16C98	0x1DAA2000  	_Label38+6
0x16C9C	0x1DAC2000  	_Label38+8
0x16CA0	0x1DAE2000  	_Label38+10
0x16CA4	0x1DB02000  	_Label38+12
0x16CA8	0x1DBE2000  	_Label38+26
0x16CAC	0x1DBF2000  	_Label38+27
0x16CB0	0x02702000  	_Label38_Caption+0
0x16CB4	0x1DB42000  	_Label38+16
0x16CB8	0x1DB82000  	_Label38+20
0x16CBC	0x1DBC2000  	_Label38+24
0x16CC0	0x1DC02000  	_Label38+28
0x16CC4	0x1DC42000  	_Label38+32
0x16CC8	0x1DC82000  	_Label38+36
0x16CCC	0x1DCC2000  	_Label38+40
0x16CD0	0x1DD02000  	_Label39+0
0x16CD4	0x1DD42000  	_Label39+4
0x16CD8	0x1DD62000  	_Label39+6
0x16CDC	0x1DD82000  	_Label39+8
0x16CE0	0x1DDA2000  	_Label39+10
0x16CE4	0x1DDC2000  	_Label39+12
0x16CE8	0x1DEA2000  	_Label39+26
0x16CEC	0x1DEB2000  	_Label39+27
0x16CF0	0x02862000  	_Label39_Caption+0
0x16CF4	0x1DE02000  	_Label39+16
0x16CF8	0x1DE42000  	_Label39+20
0x16CFC	0x1DE82000  	_Label39+24
0x16D00	0x1DEC2000  	_Label39+28
0x16D04	0x1DF02000  	_Label39+32
0x16D08	0x1DF42000  	_Label39+36
0x16D0C	0x1DF82000  	_Label39+40
0x16D10	0x1DFC2000  	_Label40+0
0x16D14	0x1E002000  	_Label40+4
0x16D18	0x1E022000  	_Label40+6
0x16D1C	0x1E042000  	_Label40+8
0x16D20	0x1E062000  	_Label40+10
0x16D24	0x1E082000  	_Label40+12
0x16D28	0x1E162000  	_Label40+26
0x16D2C	0x1E172000  	_Label40+27
0x16D30	0x028A2000  	_Label40_Caption+0
0x16D34	0x1E0C2000  	_Label40+16
0x16D38	0x1E102000  	_Label40+20
0x16D3C	0x1E142000  	_Label40+24
0x16D40	0x1E182000  	_Label40+28
0x16D44	0x1E1C2000  	_Label40+32
0x16D48	0x1E202000  	_Label40+36
0x16D4C	0x1E242000  	_Label40+40
0x16D50	0x1E282000  	_Label41+0
0x16D54	0x1E2C2000  	_Label41+4
0x16D58	0x1E2E2000  	_Label41+6
0x16D5C	0x1E302000  	_Label41+8
0x16D60	0x1E322000  	_Label41+10
0x16D64	0x1E342000  	_Label41+12
0x16D68	0x1E422000  	_Label41+26
0x16D6C	0x1E432000  	_Label41+27
0x16D70	0x028E2000  	_Label41_Caption+0
0x16D74	0x1E382000  	_Label41+16
0x16D78	0x1E3C2000  	_Label41+20
0x16D7C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3674 :: 		Label41.Font_Color      = 0x0400;
0x16D7E	0xF2404100  MOVW	R1, #1024
0x16D82	0x487C    LDR	R0, [PC, #496]
0x16D84	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3675 :: 		Label41.OnUpPtr         = 0;
0x16D86	0x2100    MOVS	R1, #0
0x16D88	0x487B    LDR	R0, [PC, #492]
0x16D8A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3676 :: 		Label41.OnDownPtr       = 0;
0x16D8C	0x2100    MOVS	R1, #0
0x16D8E	0x487B    LDR	R0, [PC, #492]
0x16D90	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3677 :: 		Label41.OnClickPtr      = 0;
0x16D92	0x2100    MOVS	R1, #0
0x16D94	0x487A    LDR	R0, [PC, #488]
0x16D96	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3678 :: 		Label41.OnPressPtr      = 0;
0x16D98	0x2100    MOVS	R1, #0
0x16D9A	0x487A    LDR	R0, [PC, #488]
0x16D9C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3680 :: 		Box21.OwnerScreen     = &Humidity_test;
0x16D9E	0x497A    LDR	R1, [PC, #488]
0x16DA0	0x487A    LDR	R0, [PC, #488]
0x16DA2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3681 :: 		Box21.Order           = 0;
0x16DA4	0x2100    MOVS	R1, #0
0x16DA6	0x487A    LDR	R0, [PC, #488]
0x16DA8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3682 :: 		Box21.Left            = 4;
0x16DAA	0x2104    MOVS	R1, #4
0x16DAC	0x4879    LDR	R0, [PC, #484]
0x16DAE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3683 :: 		Box21.Top             = 5;
0x16DB0	0x2105    MOVS	R1, #5
0x16DB2	0x4879    LDR	R0, [PC, #484]
0x16DB4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3684 :: 		Box21.Width           = 265;
0x16DB6	0xF2401109  MOVW	R1, #265
0x16DBA	0x4878    LDR	R0, [PC, #480]
0x16DBC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3685 :: 		Box21.Height          = 23;
0x16DBE	0x2117    MOVS	R1, #23
0x16DC0	0x4877    LDR	R0, [PC, #476]
0x16DC2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3686 :: 		Box21.Pen_Width       = 1;
0x16DC4	0x2101    MOVS	R1, #1
0x16DC6	0x4877    LDR	R0, [PC, #476]
0x16DC8	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3687 :: 		Box21.Pen_Color       = 0x0000;
0x16DCA	0x2100    MOVS	R1, #0
0x16DCC	0x4876    LDR	R0, [PC, #472]
0x16DCE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3688 :: 		Box21.Visible         = 0;
0x16DD0	0x2100    MOVS	R1, #0
0x16DD2	0x4876    LDR	R0, [PC, #472]
0x16DD4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3689 :: 		Box21.Active          = 1;
0x16DD6	0x2101    MOVS	R1, #1
0x16DD8	0x4875    LDR	R0, [PC, #468]
0x16DDA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3690 :: 		Box21.Transparent     = 1;
0x16DDC	0x2101    MOVS	R1, #1
0x16DDE	0x4875    LDR	R0, [PC, #468]
0x16DE0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3691 :: 		Box21.Gradient        = 0;
0x16DE2	0x2100    MOVS	R1, #0
0x16DE4	0x4874    LDR	R0, [PC, #464]
0x16DE6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3692 :: 		Box21.Gradient_Orientation = 0;
0x16DE8	0x2100    MOVS	R1, #0
0x16DEA	0x4874    LDR	R0, [PC, #464]
0x16DEC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3693 :: 		Box21.Gradient_Start_Color = 0xFFFF;
0x16DEE	0xF64F71FF  MOVW	R1, #65535
0x16DF2	0x4873    LDR	R0, [PC, #460]
0x16DF4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3694 :: 		Box21.Gradient_End_Color = 0xC618;
0x16DF6	0xF24C6118  MOVW	R1, #50712
0x16DFA	0x4872    LDR	R0, [PC, #456]
0x16DFC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3695 :: 		Box21.Color           = 0xC618;
0x16DFE	0xF24C6118  MOVW	R1, #50712
0x16E02	0x4871    LDR	R0, [PC, #452]
0x16E04	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3696 :: 		Box21.PressColEnabled = 0;
0x16E06	0x2100    MOVS	R1, #0
0x16E08	0x4870    LDR	R0, [PC, #448]
0x16E0A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3697 :: 		Box21.Press_Color     = 0xE71C;
0x16E0C	0xF24E711C  MOVW	R1, #59164
0x16E10	0x486F    LDR	R0, [PC, #444]
0x16E12	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3698 :: 		Box21.OnUpPtr         = 0;
0x16E14	0x2100    MOVS	R1, #0
0x16E16	0x486F    LDR	R0, [PC, #444]
0x16E18	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3699 :: 		Box21.OnDownPtr       = 0;
0x16E1A	0x2100    MOVS	R1, #0
0x16E1C	0x486E    LDR	R0, [PC, #440]
0x16E1E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3700 :: 		Box21.OnClickPtr      = doSettings;
0x16E20	0x496E    LDR	R1, [PC, #440]
0x16E22	0x486F    LDR	R0, [PC, #444]
0x16E24	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3701 :: 		Box21.OnPressPtr      = 0;
0x16E26	0x2100    MOVS	R1, #0
0x16E28	0x486E    LDR	R0, [PC, #440]
0x16E2A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3703 :: 		Box22.OwnerScreen     = &Humidity_test;
0x16E2C	0x4956    LDR	R1, [PC, #344]
0x16E2E	0x486E    LDR	R0, [PC, #440]
0x16E30	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3704 :: 		Box22.Order           = 1;
0x16E32	0x2101    MOVS	R1, #1
0x16E34	0x486D    LDR	R0, [PC, #436]
0x16E36	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3705 :: 		Box22.Left            = 0;
0x16E38	0x2100    MOVS	R1, #0
0x16E3A	0x486D    LDR	R0, [PC, #436]
0x16E3C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3706 :: 		Box22.Top             = 40;
0x16E3E	0x2128    MOVS	R1, #40
0x16E40	0x486C    LDR	R0, [PC, #432]
0x16E42	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3707 :: 		Box22.Width           = 480;
0x16E44	0xF24011E0  MOVW	R1, #480
0x16E48	0x486B    LDR	R0, [PC, #428]
0x16E4A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3708 :: 		Box22.Height          = 207;
0x16E4C	0x21CF    MOVS	R1, #207
0x16E4E	0x486B    LDR	R0, [PC, #428]
0x16E50	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3709 :: 		Box22.Pen_Width       = 1;
0x16E52	0x2101    MOVS	R1, #1
0x16E54	0x486A    LDR	R0, [PC, #424]
0x16E56	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3710 :: 		Box22.Pen_Color       = 0xFFFF;
0x16E58	0xF64F71FF  MOVW	R1, #65535
0x16E5C	0x4869    LDR	R0, [PC, #420]
0x16E5E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3711 :: 		Box22.Visible         = 1;
0x16E60	0x2101    MOVS	R1, #1
0x16E62	0x4869    LDR	R0, [PC, #420]
0x16E64	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3712 :: 		Box22.Active          = 1;
0x16E66	0x2101    MOVS	R1, #1
0x16E68	0x4868    LDR	R0, [PC, #416]
0x16E6A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3713 :: 		Box22.Transparent     = 1;
0x16E6C	0x2101    MOVS	R1, #1
0x16E6E	0x4868    LDR	R0, [PC, #416]
0x16E70	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3714 :: 		Box22.Gradient        = 0;
0x16E72	0x2100    MOVS	R1, #0
0x16E74	0x4867    LDR	R0, [PC, #412]
0x16E76	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3715 :: 		Box22.Gradient_Orientation = 0;
0x16E78	0x2100    MOVS	R1, #0
0x16E7A	0x4867    LDR	R0, [PC, #412]
0x16E7C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3716 :: 		Box22.Gradient_Start_Color = 0xFFFF;
0x16E7E	0xF64F71FF  MOVW	R1, #65535
0x16E82	0x4866    LDR	R0, [PC, #408]
0x16E84	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3717 :: 		Box22.Gradient_End_Color = 0xFFFF;
0x16E86	0xF64F71FF  MOVW	R1, #65535
0x16E8A	0x4865    LDR	R0, [PC, #404]
0x16E8C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3718 :: 		Box22.Color           = 0xFFFF;
0x16E8E	0xF64F71FF  MOVW	R1, #65535
0x16E92	0x4864    LDR	R0, [PC, #400]
0x16E94	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3719 :: 		Box22.PressColEnabled = 0;
0x16E96	0x2100    MOVS	R1, #0
0x16E98	0x4863    LDR	R0, [PC, #396]
0x16E9A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3720 :: 		Box22.Press_Color     = 0xFFFF;
0x16E9C	0xF64F71FF  MOVW	R1, #65535
0x16EA0	0x4862    LDR	R0, [PC, #392]
0x16EA2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3721 :: 		Box22.OnUpPtr         = 0;
0x16EA4	0x2100    MOVS	R1, #0
0x16EA6	0x4862    LDR	R0, [PC, #392]
0x16EA8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3722 :: 		Box22.OnDownPtr       = 0;
0x16EAA	0x2100    MOVS	R1, #0
0x16EAC	0x4861    LDR	R0, [PC, #388]
0x16EAE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3723 :: 		Box22.OnClickPtr      = 0;
0x16EB0	0x2100    MOVS	R1, #0
0x16EB2	0x4861    LDR	R0, [PC, #388]
0x16EB4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3724 :: 		Box22.OnPressPtr      = 0;
0x16EB6	0x2100    MOVS	R1, #0
0x16EB8	0x4860    LDR	R0, [PC, #384]
0x16EBA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3726 :: 		Image55.OwnerScreen     = &Humidity_test;
0x16EBC	0x4932    LDR	R1, [PC, #200]
0x16EBE	0x4860    LDR	R0, [PC, #384]
0x16EC0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3727 :: 		Image55.Order           = 2;
0x16EC2	0x2102    MOVS	R1, #2
0x16EC4	0x485F    LDR	R0, [PC, #380]
0x16EC6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3728 :: 		Image55.Left            = 5;
0x16EC8	0x2105    MOVS	R1, #5
0x16ECA	0x485F    LDR	R0, [PC, #380]
0x16ECC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3729 :: 		Image55.Top             = 6;
0x16ECE	0x2106    MOVS	R1, #6
0x16ED0	0x485E    LDR	R0, [PC, #376]
0x16ED2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3730 :: 		Image55.Width           = 22;
0x16ED4	0x2116    MOVS	R1, #22
0x16ED6	0x485E    LDR	R0, [PC, #376]
0x16ED8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3731 :: 		Image55.Height          = 22;
0x16EDA	0x2116    MOVS	R1, #22
0x16EDC	0x485D    LDR	R0, [PC, #372]
0x16EDE	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3732 :: 		Image55.Picture_Type    = 0;
0x16EE0	0x2100    MOVS	R1, #0
0x16EE2	0x485D    LDR	R0, [PC, #372]
0x16EE4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3733 :: 		Image55.Picture_Ratio   = 1;
0x16EE6	0x2101    MOVS	R1, #1
0x16EE8	0x485C    LDR	R0, [PC, #368]
0x16EEA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3734 :: 		Image55.Picture_Name    = icon_back_pressure_bmp;
0x16EEC	0x495C    LDR	R1, [PC, #368]
0x16EEE	0x485D    LDR	R0, [PC, #372]
0x16EF0	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3735 :: 		Image55.Visible         = 1;
0x16EF2	0x2101    MOVS	R1, #1
0x16EF4	0x485C    LDR	R0, [PC, #368]
0x16EF6	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3736 :: 		Image55.Active          = 0;
0x16EF8	0x2100    MOVS	R1, #0
0x16EFA	0x485C    LDR	R0, [PC, #368]
0x16EFC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3737 :: 		Image55.OnUpPtr         = 0;
0x16EFE	0x2100    MOVS	R1, #0
0x16F00	0x485B    LDR	R0, [PC, #364]
0x16F02	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3738 :: 		Image55.OnDownPtr       = 0;
0x16F04	0x2100    MOVS	R1, #0
0x16F06	0x485B    LDR	R0, [PC, #364]
0x16F08	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3739 :: 		Image55.OnClickPtr      = doPrevScreen;
0x16F0A	0x495B    LDR	R1, [PC, #364]
0x16F0C	0x485B    LDR	R0, [PC, #364]
0x16F0E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3740 :: 		Image55.OnPressPtr      = doPrevScreen;
0x16F10	0x4959    LDR	R1, [PC, #356]
0x16F12	0x485B    LDR	R0, [PC, #364]
0x16F14	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3742 :: 		Label42.OwnerScreen     = &Humidity_test;
0x16F16	0x491C    LDR	R1, [PC, #112]
0x16F18	0x485A    LDR	R0, [PC, #360]
0x16F1A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3743 :: 		Label42.Order           = 3;
0x16F1C	0x2103    MOVS	R1, #3
0x16F1E	0x485A    LDR	R0, [PC, #360]
0x16F20	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3744 :: 		Label42.Left            = 32;
0x16F22	0x2120    MOVS	R1, #32
0x16F24	0x4859    LDR	R0, [PC, #356]
0x16F26	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3745 :: 		Label42.Top             = 2;
0x16F28	0x2102    MOVS	R1, #2
0x16F2A	0x4859    LDR	R0, [PC, #356]
0x16F2C	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3746 :: 		Label42.Width           = 227;
0x16F2E	0x21E3    MOVS	R1, #227
0x16F30	0x4858    LDR	R0, [PC, #352]
0x16F32	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3747 :: 		Label42.Height          = 31;
0x16F34	0x211F    MOVS	R1, #31
0x16F36	0x4858    LDR	R0, [PC, #352]
0x16F38	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3748 :: 		Label42.Visible         = 1;
0x16F3A	0x2101    MOVS	R1, #1
0x16F3C	0x4857    LDR	R0, [PC, #348]
0x16F3E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3749 :: 		Label42.Active          = 0;
0x16F40	0x2100    MOVS	R1, #0
0x16F42	0x4857    LDR	R0, [PC, #348]
0x16F44	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3750 :: 		Label42.Caption         = Label42_Caption;
0x16F46	0x4957    LDR	R1, [PC, #348]
0x16F48	0x4857    LDR	R0, [PC, #348]
0x16F4A	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3751 :: 		Label42.FontName        = Open_Sans_Light19x28_Regular;
0x16F4C	0xF64D0139  MOVW	R1, #55353
0x16F50	0x4856    LDR	R0, [PC, #344]
0x16F52	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3752 :: 		Label42.Font_Color      = 0xFFFF;
0x16F54	0xF64F71FF  MOVW	R1, #65535
0x16F58	0x4855    LDR	R0, [PC, #340]
0x16F5A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3753 :: 		Label42.OnUpPtr         = 0;
0x16F5C	0x2100    MOVS	R1, #0
0x16F5E	0x4855    LDR	R0, [PC, #340]
0x16F60	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3754 :: 		Label42.OnDownPtr       = 0;
0x16F62	0x2100    MOVS	R1, #0
0x16F64	0x4854    LDR	R0, [PC, #336]
0x16F66	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3755 :: 		Label42.OnClickPtr      = 0;
0x16F68	0x2100    MOVS	R1, #0
0x16F6A	0x4854    LDR	R0, [PC, #336]
0x16F6C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3756 :: 		Label42.OnPressPtr      = 0;
0x16F6E	0x2100    MOVS	R1, #0
0x16F70	0x4853    LDR	R0, [PC, #332]
0x16F72	0xE0A7    B	#334
0x16F74	0x1E402000  	_Label41+24
0x16F78	0x1E442000  	_Label41+28
0x16F7C	0x1E482000  	_Label41+32
0x16F80	0x1E4C2000  	_Label41+36
0x16F84	0x1E502000  	_Label41+40
0x16F88	0x24782000  	_Humidity_test+0
0x16F8C	0x1FBC2000  	_Box21+0
0x16F90	0x1FC02000  	_Box21+4
0x16F94	0x1FC22000  	_Box21+6
0x16F98	0x1FC42000  	_Box21+8
0x16F9C	0x1FC62000  	_Box21+10
0x16FA0	0x1FC82000  	_Box21+12
0x16FA4	0x1FCA2000  	_Box21+14
0x16FA8	0x1FCC2000  	_Box21+16
0x16FAC	0x1FCE2000  	_Box21+18
0x16FB0	0x1FCF2000  	_Box21+19
0x16FB4	0x1FD02000  	_Box21+20
0x16FB8	0x1FD12000  	_Box21+21
0x16FBC	0x1FD22000  	_Box21+22
0x16FC0	0x1FD42000  	_Box21+24
0x16FC4	0x1FD62000  	_Box21+26
0x16FC8	0x1FD82000  	_Box21+28
0x16FCC	0x1FDA2000  	_Box21+30
0x16FD0	0x1FDC2000  	_Box21+32
0x16FD4	0x1FE02000  	_Box21+36
0x16FD8	0x1FE42000  	_Box21+40
0x16FDC	0xB2A50000  	_doSettings+0
0x16FE0	0x1FE82000  	_Box21+44
0x16FE4	0x1FEC2000  	_Box21+48
0x16FE8	0x1FF02000  	_Box22+0
0x16FEC	0x1FF42000  	_Box22+4
0x16FF0	0x1FF62000  	_Box22+6
0x16FF4	0x1FF82000  	_Box22+8
0x16FF8	0x1FFA2000  	_Box22+10
0x16FFC	0x1FFC2000  	_Box22+12
0x17000	0x1FFE2000  	_Box22+14
0x17004	0x20002000  	_Box22+16
0x17008	0x20022000  	_Box22+18
0x1700C	0x20032000  	_Box22+19
0x17010	0x20042000  	_Box22+20
0x17014	0x20052000  	_Box22+21
0x17018	0x20062000  	_Box22+22
0x1701C	0x20082000  	_Box22+24
0x17020	0x200A2000  	_Box22+26
0x17024	0x200C2000  	_Box22+28
0x17028	0x200E2000  	_Box22+30
0x1702C	0x20102000  	_Box22+32
0x17030	0x20142000  	_Box22+36
0x17034	0x20182000  	_Box22+40
0x17038	0x201C2000  	_Box22+44
0x1703C	0x20202000  	_Box22+48
0x17040	0x1F942000  	_Image55+0
0x17044	0x1F982000  	_Image55+4
0x17048	0x1F9A2000  	_Image55+6
0x1704C	0x1F9C2000  	_Image55+8
0x17050	0x1F9E2000  	_Image55+10
0x17054	0x1FA02000  	_Image55+12
0x17058	0x1FAA2000  	_Image55+22
0x1705C	0x1FAB2000  	_Image55+23
0x17060	0xDE44003E  	#4120132
0x17064	0x1FA42000  	_Image55+16
0x17068	0x1FA82000  	_Image55+20
0x1706C	0x1FA92000  	_Image55+21
0x17070	0x1FAC2000  	_Image55+24
0x17074	0x1FB02000  	_Image55+28
0x17078	0xC2B50000  	_doPrevScreen+0
0x1707C	0x1FB42000  	_Image55+32
0x17080	0x1FB82000  	_Image55+36
0x17084	0x1EE42000  	_Label42+0
0x17088	0x1EE82000  	_Label42+4
0x1708C	0x1EEA2000  	_Label42+6
0x17090	0x1EEC2000  	_Label42+8
0x17094	0x1EEE2000  	_Label42+10
0x17098	0x1EF02000  	_Label42+12
0x1709C	0x1EFE2000  	_Label42+26
0x170A0	0x1EFF2000  	_Label42+27
0x170A4	0x02922000  	_Label42_Caption+0
0x170A8	0x1EF42000  	_Label42+16
0x170AC	0x1EF82000  	_Label42+20
0x170B0	0x1EFC2000  	_Label42+24
0x170B4	0x1F002000  	_Label42+28
0x170B8	0x1F042000  	_Label42+32
0x170BC	0x1F082000  	_Label42+36
0x170C0	0x1F0C2000  	_Label42+40
0x170C4	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3758 :: 		Label43.OwnerScreen     = &Humidity_test;
0x170C6	0x4947    LDR	R1, [PC, #284]
0x170C8	0x4847    LDR	R0, [PC, #284]
0x170CA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3759 :: 		Label43.Order           = 4;
0x170CC	0x2104    MOVS	R1, #4
0x170CE	0x4847    LDR	R0, [PC, #284]
0x170D0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3760 :: 		Label43.Left            = 75;
0x170D2	0x214B    MOVS	R1, #75
0x170D4	0x4846    LDR	R0, [PC, #280]
0x170D6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3761 :: 		Label43.Top             = 250;
0x170D8	0x21FA    MOVS	R1, #250
0x170DA	0x4846    LDR	R0, [PC, #280]
0x170DC	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3762 :: 		Label43.Width           = 13;
0x170DE	0x210D    MOVS	R1, #13
0x170E0	0x4845    LDR	R0, [PC, #276]
0x170E2	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3763 :: 		Label43.Height          = 24;
0x170E4	0x2118    MOVS	R1, #24
0x170E6	0x4845    LDR	R0, [PC, #276]
0x170E8	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3764 :: 		Label43.Visible         = 1;
0x170EA	0x2101    MOVS	R1, #1
0x170EC	0x4844    LDR	R0, [PC, #272]
0x170EE	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3765 :: 		Label43.Active          = 1;
0x170F0	0x2101    MOVS	R1, #1
0x170F2	0x4844    LDR	R0, [PC, #272]
0x170F4	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3766 :: 		Label43.Caption         = Label43_Caption;
0x170F6	0x4944    LDR	R1, [PC, #272]
0x170F8	0x4844    LDR	R0, [PC, #272]
0x170FA	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3767 :: 		Label43.FontName        = Open_Sans_Light14x22_Regular;
0x170FC	0xF64C411F  MOVW	R1, #52255
0x17100	0x4843    LDR	R0, [PC, #268]
0x17102	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3768 :: 		Label43.Font_Color      = 0xF800;
0x17104	0xF64F0100  MOVW	R1, #63488
0x17108	0x4842    LDR	R0, [PC, #264]
0x1710A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3769 :: 		Label43.OnUpPtr         = 0;
0x1710C	0x2100    MOVS	R1, #0
0x1710E	0x4842    LDR	R0, [PC, #264]
0x17110	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3770 :: 		Label43.OnDownPtr       = 0;
0x17112	0x2100    MOVS	R1, #0
0x17114	0x4841    LDR	R0, [PC, #260]
0x17116	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3771 :: 		Label43.OnClickPtr      = 0;
0x17118	0x2100    MOVS	R1, #0
0x1711A	0x4841    LDR	R0, [PC, #260]
0x1711C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3772 :: 		Label43.OnPressPtr      = 0;
0x1711E	0x2100    MOVS	R1, #0
0x17120	0x4840    LDR	R0, [PC, #256]
0x17122	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3774 :: 		Label44.OwnerScreen     = &Humidity_test;
0x17124	0x492F    LDR	R1, [PC, #188]
0x17126	0x4840    LDR	R0, [PC, #256]
0x17128	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3775 :: 		Label44.Order           = 5;
0x1712A	0x2105    MOVS	R1, #5
0x1712C	0x483F    LDR	R0, [PC, #252]
0x1712E	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3776 :: 		Label44.Left            = 225;
0x17130	0x21E1    MOVS	R1, #225
0x17132	0x483F    LDR	R0, [PC, #252]
0x17134	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3777 :: 		Label44.Top             = 250;
0x17136	0x21FA    MOVS	R1, #250
0x17138	0x483E    LDR	R0, [PC, #248]
0x1713A	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3778 :: 		Label44.Width           = 13;
0x1713C	0x210D    MOVS	R1, #13
0x1713E	0x483E    LDR	R0, [PC, #248]
0x17140	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3779 :: 		Label44.Height          = 24;
0x17142	0x2118    MOVS	R1, #24
0x17144	0x483D    LDR	R0, [PC, #244]
0x17146	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3780 :: 		Label44.Visible         = 1;
0x17148	0x2101    MOVS	R1, #1
0x1714A	0x483D    LDR	R0, [PC, #244]
0x1714C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3781 :: 		Label44.Active          = 1;
0x1714E	0x2101    MOVS	R1, #1
0x17150	0x483C    LDR	R0, [PC, #240]
0x17152	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3782 :: 		Label44.Caption         = Label44_Caption;
0x17154	0x493C    LDR	R1, [PC, #240]
0x17156	0x483D    LDR	R0, [PC, #244]
0x17158	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3783 :: 		Label44.FontName        = Open_Sans_Light14x22_Regular;
0x1715A	0xF64C411F  MOVW	R1, #52255
0x1715E	0x483C    LDR	R0, [PC, #240]
0x17160	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3784 :: 		Label44.Font_Color      = 0x001F;
0x17162	0x211F    MOVS	R1, #31
0x17164	0x483B    LDR	R0, [PC, #236]
0x17166	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3785 :: 		Label44.OnUpPtr         = 0;
0x17168	0x2100    MOVS	R1, #0
0x1716A	0x483B    LDR	R0, [PC, #236]
0x1716C	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3786 :: 		Label44.OnDownPtr       = 0;
0x1716E	0x2100    MOVS	R1, #0
0x17170	0x483A    LDR	R0, [PC, #232]
0x17172	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3787 :: 		Label44.OnClickPtr      = 0;
0x17174	0x2100    MOVS	R1, #0
0x17176	0x483A    LDR	R0, [PC, #232]
0x17178	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3788 :: 		Label44.OnPressPtr      = 0;
0x1717A	0x2100    MOVS	R1, #0
0x1717C	0x4839    LDR	R0, [PC, #228]
0x1717E	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3790 :: 		Label45.OwnerScreen     = &Humidity_test;
0x17180	0x4918    LDR	R1, [PC, #96]
0x17182	0x4839    LDR	R0, [PC, #228]
0x17184	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3791 :: 		Label45.Order           = 6;
0x17186	0x2106    MOVS	R1, #6
0x17188	0x4838    LDR	R0, [PC, #224]
0x1718A	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3792 :: 		Label45.Left            = 375;
0x1718C	0xF2401177  MOVW	R1, #375
0x17190	0x4837    LDR	R0, [PC, #220]
0x17192	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3793 :: 		Label45.Top             = 250;
0x17194	0x21FA    MOVS	R1, #250
0x17196	0x4837    LDR	R0, [PC, #220]
0x17198	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3794 :: 		Label45.Width           = 13;
0x1719A	0x210D    MOVS	R1, #13
0x1719C	0x4836    LDR	R0, [PC, #216]
0x1719E	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3795 :: 		Label45.Height          = 24;
0x171A0	0x2118    MOVS	R1, #24
0x171A2	0x4836    LDR	R0, [PC, #216]
0x171A4	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3796 :: 		Label45.Visible         = 1;
0x171A6	0x2101    MOVS	R1, #1
0x171A8	0x4835    LDR	R0, [PC, #212]
0x171AA	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3797 :: 		Label45.Active          = 1;
0x171AC	0x2101    MOVS	R1, #1
0x171AE	0x4835    LDR	R0, [PC, #212]
0x171B0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 3798 :: 		Label45.Caption         = Label45_Caption;
0x171B2	0x4935    LDR	R1, [PC, #212]
0x171B4	0x4835    LDR	R0, [PC, #212]
0x171B6	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3799 :: 		Label45.FontName        = Open_Sans_Light14x22_Regular;
0x171B8	0xF64C411F  MOVW	R1, #52255
0x171BC	0x4834    LDR	R0, [PC, #208]
0x171BE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3800 :: 		Label45.Font_Color      = 0x0400;
0x171C0	0xF2404100  MOVW	R1, #1024
0x171C4	0x4833    LDR	R0, [PC, #204]
0x171C6	0x8001    STRH	R1, [R0, #0]
;Ducati_logger_driver.c, 3801 :: 		Label45.OnUpPtr         = 0;
0x171C8	0x2100    MOVS	R1, #0
0x171CA	0x4833    LDR	R0, [PC, #204]
0x171CC	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3802 :: 		Label45.OnDownPtr       = 0;
0x171CE	0x2100    MOVS	R1, #0
0x171D0	0x4832    LDR	R0, [PC, #200]
0x171D2	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3803 :: 		Label45.OnClickPtr      = 0;
0x171D4	0x2100    MOVS	R1, #0
0x171D6	0x4832    LDR	R0, [PC, #200]
0x171D8	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3804 :: 		Label45.OnPressPtr      = 0;
0x171DA	0x2100    MOVS	R1, #0
0x171DC	0x4831    LDR	R0, [PC, #196]
0x171DE	0x6001    STR	R1, [R0, #0]
;Ducati_logger_driver.c, 3805 :: 		}
L_end_InitializeObjects:
0x171E0	0x4770    BX	LR
0x171E2	0xBF00    NOP
0x171E4	0x24782000  	_Humidity_test+0
0x171E8	0x1F102000  	_Label43+0
0x171EC	0x1F142000  	_Label43+4
0x171F0	0x1F162000  	_Label43+6
0x171F4	0x1F182000  	_Label43+8
0x171F8	0x1F1A2000  	_Label43+10
0x171FC	0x1F1C2000  	_Label43+12
0x17200	0x1F2A2000  	_Label43+26
0x17204	0x1F2B2000  	_Label43+27
0x17208	0x02A82000  	_Label43_Caption+0
0x1720C	0x1F202000  	_Label43+16
0x17210	0x1F242000  	_Label43+20
0x17214	0x1F282000  	_Label43+24
0x17218	0x1F2C2000  	_Label43+28
0x1721C	0x1F302000  	_Label43+32
0x17220	0x1F342000  	_Label43+36
0x17224	0x1F382000  	_Label43+40
0x17228	0x1F3C2000  	_Label44+0
0x1722C	0x1F402000  	_Label44+4
0x17230	0x1F422000  	_Label44+6
0x17234	0x1F442000  	_Label44+8
0x17238	0x1F462000  	_Label44+10
0x1723C	0x1F482000  	_Label44+12
0x17240	0x1F562000  	_Label44+26
0x17244	0x1F572000  	_Label44+27
0x17248	0x02AC2000  	_Label44_Caption+0
0x1724C	0x1F4C2000  	_Label44+16
0x17250	0x1F502000  	_Label44+20
0x17254	0x1F542000  	_Label44+24
0x17258	0x1F582000  	_Label44+28
0x1725C	0x1F5C2000  	_Label44+32
0x17260	0x1F602000  	_Label44+36
0x17264	0x1F642000  	_Label44+40
0x17268	0x1F682000  	_Label45+0
0x1726C	0x1F6C2000  	_Label45+4
0x17270	0x1F6E2000  	_Label45+6
0x17274	0x1F702000  	_Label45+8
0x17278	0x1F722000  	_Label45+10
0x1727C	0x1F742000  	_Label45+12
0x17280	0x1F822000  	_Label45+26
0x17284	0x1F832000  	_Label45+27
0x17288	0x02B02000  	_Label45_Caption+0
0x1728C	0x1F782000  	_Label45+16
0x17290	0x1F7C2000  	_Label45+20
0x17294	0x1F802000  	_Label45+24
0x17298	0x1F842000  	_Label45+28
0x1729C	0x1F882000  	_Label45+32
0x172A0	0x1F8C2000  	_Label45+36
0x172A4	0x1F902000  	_Label45+40
; end of Ducati_logger_driver_InitializeObjects
_DrawScreen:
;Ducati_logger_driver.c, 3951 :: 		void DrawScreen(TScreen *aScreen) {
; aScreen start address is: 0 (R0)
0xF84C	0xB09E    SUB	SP, SP, #120
0xF84E	0xF8CDE000  STR	LR, [SP, #0]
; aScreen end address is: 0 (R0)
; aScreen start address is: 0 (R0)
;Ducati_logger_driver.c, 3973 :: 		object_pressed = 0;
0xF852	0x2200    MOVS	R2, #0
0xF854	0x49CC    LDR	R1, [PC, #816]
0xF856	0x700A    STRB	R2, [R1, #0]
;Ducati_logger_driver.c, 3974 :: 		order = 0;
0xF858	0x2100    MOVS	R1, #0
0xF85A	0xF8AD1004  STRH	R1, [SP, #4]
;Ducati_logger_driver.c, 3975 :: 		round_button_idx = 0;
0xF85E	0x2100    MOVS	R1, #0
0xF860	0xF88D1006  STRB	R1, [SP, #6]
;Ducati_logger_driver.c, 3976 :: 		label_idx = 0;
0xF864	0x2100    MOVS	R1, #0
0xF866	0xF88D100C  STRB	R1, [SP, #12]
;Ducati_logger_driver.c, 3977 :: 		image_idx = 0;
0xF86A	0x2100    MOVS	R1, #0
0xF86C	0xF88D1014  STRB	R1, [SP, #20]
;Ducati_logger_driver.c, 3978 :: 		cimage_idx = 0;
0xF870	0x2100    MOVS	R1, #0
0xF872	0xF88D101C  STRB	R1, [SP, #28]
;Ducati_logger_driver.c, 3979 :: 		circle_idx = 0;
0xF876	0x2100    MOVS	R1, #0
0xF878	0xF88D1024  STRB	R1, [SP, #36]
;Ducati_logger_driver.c, 3980 :: 		circle_button_idx = 0;
0xF87C	0x2100    MOVS	R1, #0
0xF87E	0xF88D102C  STRB	R1, [SP, #44]
;Ducati_logger_driver.c, 3981 :: 		box_idx = 0;
0xF882	0x2100    MOVS	R1, #0
0xF884	0xF88D1034  STRB	R1, [SP, #52]
;Ducati_logger_driver.c, 3982 :: 		cbox_idx = 0;
0xF888	0x2100    MOVS	R1, #0
0xF88A	0xF88D103C  STRB	R1, [SP, #60]
;Ducati_logger_driver.c, 3983 :: 		line_idx = 0;
0xF88E	0x2100    MOVS	R1, #0
0xF890	0xF88D1044  STRB	R1, [SP, #68]
;Ducati_logger_driver.c, 3984 :: 		CurrentScreen = aScreen;
0xF894	0x49BD    LDR	R1, [PC, #756]
0xF896	0x6008    STR	R0, [R1, #0]
;Ducati_logger_driver.c, 3986 :: 		if ((display_width != CurrentScreen->Width) || (display_height != CurrentScreen->Height)) {
0xF898	0x1C81    ADDS	R1, R0, #2
; aScreen end address is: 0 (R0)
0xF89A	0x880A    LDRH	R2, [R1, #0]
0xF89C	0x49BC    LDR	R1, [PC, #752]
0xF89E	0x8809    LDRH	R1, [R1, #0]
0xF8A0	0x4291    CMP	R1, R2
0xF8A2	0xD108    BNE	L__DrawScreen269
0xF8A4	0x49B9    LDR	R1, [PC, #740]
0xF8A6	0x6809    LDR	R1, [R1, #0]
0xF8A8	0x1D09    ADDS	R1, R1, #4
0xF8AA	0x880A    LDRH	R2, [R1, #0]
0xF8AC	0x49B9    LDR	R1, [PC, #740]
0xF8AE	0x8809    LDRH	R1, [R1, #0]
0xF8B0	0x4291    CMP	R1, R2
0xF8B2	0xD100    BNE	L__DrawScreen268
0xF8B4	0xE045    B	L_DrawScreen49
L__DrawScreen269:
L__DrawScreen268:
;Ducati_logger_driver.c, 3987 :: 		save_bled = TFT_BLED;
0xF8B6	0x4AB8    LDR	R2, [PC, #736]
0xF8B8	0x921D    STR	R2, [SP, #116]
0xF8BA	0x6811    LDR	R1, [R2, #0]
0xF8BC	0xF88D104C  STRB	R1, [SP, #76]
;Ducati_logger_driver.c, 3988 :: 		TFT_BLED           = 0;
0xF8C0	0x2100    MOVS	R1, #0
0xF8C2	0xB249    SXTB	R1, R1
0xF8C4	0x6011    STR	R1, [R2, #0]
;Ducati_logger_driver.c, 3989 :: 		TFT_Set_Active(Set_Index, Write_Command, Write_Data);
0xF8C6	0x4BB5    LDR	R3, [PC, #724]
0xF8C8	0x4AB5    LDR	R2, [PC, #724]
0xF8CA	0x49B6    LDR	R1, [PC, #728]
0xF8CC	0x4608    MOV	R0, R1
0xF8CE	0x4611    MOV	R1, R2
0xF8D0	0x461A    MOV	R2, R3
0xF8D2	0xF7FDFB97  BL	_TFT_Set_Active+0
;Ducati_logger_driver.c, 3990 :: 		TFT_Init_SSD1963(CurrentScreen->Width, CurrentScreen->Height);
0xF8D6	0x4BAD    LDR	R3, [PC, #692]
0xF8D8	0x931C    STR	R3, [SP, #112]
0xF8DA	0x6819    LDR	R1, [R3, #0]
0xF8DC	0x1D09    ADDS	R1, R1, #4
0xF8DE	0x8809    LDRH	R1, [R1, #0]
0xF8E0	0xB28A    UXTH	R2, R1
0xF8E2	0x4619    MOV	R1, R3
0xF8E4	0x6809    LDR	R1, [R1, #0]
0xF8E6	0x1C89    ADDS	R1, R1, #2
0xF8E8	0x8809    LDRH	R1, [R1, #0]
0xF8EA	0xB288    UXTH	R0, R1
0xF8EC	0xB291    UXTH	R1, R2
0xF8EE	0xF7FDFC83  BL	_TFT_Init_SSD1963+0
;Ducati_logger_driver.c, 3991 :: 		STMPE610_SetSize(CurrentScreen->Width, CurrentScreen->Height);
0xF8F2	0x4BA6    LDR	R3, [PC, #664]
0xF8F4	0x6819    LDR	R1, [R3, #0]
0xF8F6	0x1D09    ADDS	R1, R1, #4
0xF8F8	0x8809    LDRH	R1, [R1, #0]
0xF8FA	0xB28A    UXTH	R2, R1
0xF8FC	0x4619    MOV	R1, R3
0xF8FE	0x6809    LDR	R1, [R1, #0]
0xF900	0x1C89    ADDS	R1, R1, #2
0xF902	0x8809    LDRH	R1, [R1, #0]
0xF904	0xB288    UXTH	R0, R1
0xF906	0xB291    UXTH	R1, R2
0xF908	0xF7FDFBC4  BL	_STMPE610_SetSize+0
;Ducati_logger_driver.c, 3992 :: 		TFT_Set_Ext_Buffer(TFT_Get_Data);
0xF90C	0x49A6    LDR	R1, [PC, #664]
0xF90E	0x4608    MOV	R0, R1
0xF910	0xF7FDFC6A  BL	_TFT_Set_Ext_Buffer+0
;Ducati_logger_driver.c, 3993 :: 		TFT_Fill_Screen(CurrentScreen->Color);
0xF914	0x499D    LDR	R1, [PC, #628]
0xF916	0x6809    LDR	R1, [R1, #0]
0xF918	0x8809    LDRH	R1, [R1, #0]
0xF91A	0xB288    UXTH	R0, R1
0xF91C	0xF000FA9E  BL	_TFT_Fill_Screen+0
;Ducati_logger_driver.c, 3994 :: 		display_width = CurrentScreen->Width;
0xF920	0x499A    LDR	R1, [PC, #616]
0xF922	0x6809    LDR	R1, [R1, #0]
0xF924	0x1C89    ADDS	R1, R1, #2
0xF926	0x880A    LDRH	R2, [R1, #0]
0xF928	0x4999    LDR	R1, [PC, #612]
0xF92A	0x800A    STRH	R2, [R1, #0]
;Ducati_logger_driver.c, 3995 :: 		display_height = CurrentScreen->Height;
0xF92C	0x991C    LDR	R1, [SP, #112]
0xF92E	0x6809    LDR	R1, [R1, #0]
0xF930	0x1D09    ADDS	R1, R1, #4
0xF932	0x880A    LDRH	R2, [R1, #0]
0xF934	0x4997    LDR	R1, [PC, #604]
0xF936	0x800A    STRH	R2, [R1, #0]
;Ducati_logger_driver.c, 3996 :: 		TFT_BLED           = save_bled;
0xF938	0xF89D204C  LDRB	R2, [SP, #76]
0xF93C	0x991D    LDR	R1, [SP, #116]
0xF93E	0x600A    STR	R2, [R1, #0]
;Ducati_logger_driver.c, 3997 :: 		}
0xF940	0xE005    B	L_DrawScreen50
L_DrawScreen49:
;Ducati_logger_driver.c, 3999 :: 		TFT_Fill_Screen(CurrentScreen->Color);
0xF942	0x4992    LDR	R1, [PC, #584]
0xF944	0x6809    LDR	R1, [R1, #0]
0xF946	0x8809    LDRH	R1, [R1, #0]
0xF948	0xB288    UXTH	R0, R1
0xF94A	0xF000FA87  BL	_TFT_Fill_Screen+0
L_DrawScreen50:
;Ducati_logger_driver.c, 4002 :: 		while (order < CurrentScreen->ObjectsCount) {
L_DrawScreen51:
0xF94E	0x498F    LDR	R1, [PC, #572]
0xF950	0x6809    LDR	R1, [R1, #0]
0xF952	0x1D89    ADDS	R1, R1, #6
0xF954	0x880A    LDRH	R2, [R1, #0]
0xF956	0xF8BD1004  LDRH	R1, [SP, #4]
0xF95A	0x4291    CMP	R1, R2
0xF95C	0xF0808161  BCS	L_DrawScreen52
;Ducati_logger_driver.c, 4003 :: 		if (round_button_idx < CurrentScreen->Buttons_RoundCount) {
0xF960	0x498A    LDR	R1, [PC, #552]
0xF962	0x6809    LDR	R1, [R1, #0]
0xF964	0x3108    ADDS	R1, #8
0xF966	0x880A    LDRH	R2, [R1, #0]
0xF968	0xF89D1006  LDRB	R1, [SP, #6]
0xF96C	0x4291    CMP	R1, R2
0xF96E	0xD21C    BCS	L_DrawScreen53
;Ducati_logger_driver.c, 4004 :: 		local_round_button = GetRoundButton(round_button_idx);
0xF970	0x4986    LDR	R1, [PC, #536]
0xF972	0x6809    LDR	R1, [R1, #0]
0xF974	0x310C    ADDS	R1, #12
0xF976	0x680A    LDR	R2, [R1, #0]
0xF978	0xF89D1006  LDRB	R1, [SP, #6]
0xF97C	0x0089    LSLS	R1, R1, #2
0xF97E	0x1851    ADDS	R1, R2, R1
0xF980	0x6809    LDR	R1, [R1, #0]
0xF982	0x9102    STR	R1, [SP, #8]
;Ducati_logger_driver.c, 4005 :: 		if (order == local_round_button->Order) {
0xF984	0x1D09    ADDS	R1, R1, #4
0xF986	0x780A    LDRB	R2, [R1, #0]
0xF988	0xF8BD1004  LDRH	R1, [SP, #4]
0xF98C	0x4291    CMP	R1, R2
0xF98E	0xD10C    BNE	L_DrawScreen54
;Ducati_logger_driver.c, 4006 :: 		round_button_idx++;
0xF990	0xF89D1006  LDRB	R1, [SP, #6]
0xF994	0x1C49    ADDS	R1, R1, #1
0xF996	0xF88D1006  STRB	R1, [SP, #6]
;Ducati_logger_driver.c, 4007 :: 		order++;
0xF99A	0xF8BD1004  LDRH	R1, [SP, #4]
0xF99E	0x1C49    ADDS	R1, R1, #1
0xF9A0	0xF8AD1004  STRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4008 :: 		DrawRoundButton(local_round_button);
0xF9A4	0x9802    LDR	R0, [SP, #8]
0xF9A6	0xF7FEFBA5  BL	_DrawRoundButton+0
;Ducati_logger_driver.c, 4009 :: 		}
L_DrawScreen54:
;Ducati_logger_driver.c, 4010 :: 		}
L_DrawScreen53:
;Ducati_logger_driver.c, 4012 :: 		if (label_idx < CurrentScreen->LabelsCount) {
0xF9AA	0x4978    LDR	R1, [PC, #480]
0xF9AC	0x6809    LDR	R1, [R1, #0]
0xF9AE	0x3110    ADDS	R1, #16
0xF9B0	0x880A    LDRH	R2, [R1, #0]
0xF9B2	0xF89D100C  LDRB	R1, [SP, #12]
0xF9B6	0x4291    CMP	R1, R2
0xF9B8	0xD21C    BCS	L_DrawScreen55
;Ducati_logger_driver.c, 4013 :: 		local_label = GetLabel(label_idx);
0xF9BA	0x4974    LDR	R1, [PC, #464]
0xF9BC	0x6809    LDR	R1, [R1, #0]
0xF9BE	0x3114    ADDS	R1, #20
0xF9C0	0x680A    LDR	R2, [R1, #0]
0xF9C2	0xF89D100C  LDRB	R1, [SP, #12]
0xF9C6	0x0089    LSLS	R1, R1, #2
0xF9C8	0x1851    ADDS	R1, R2, R1
0xF9CA	0x6809    LDR	R1, [R1, #0]
0xF9CC	0x9104    STR	R1, [SP, #16]
;Ducati_logger_driver.c, 4014 :: 		if (order == local_label->Order) {
0xF9CE	0x1D09    ADDS	R1, R1, #4
0xF9D0	0x780A    LDRB	R2, [R1, #0]
0xF9D2	0xF8BD1004  LDRH	R1, [SP, #4]
0xF9D6	0x4291    CMP	R1, R2
0xF9D8	0xD10C    BNE	L_DrawScreen56
;Ducati_logger_driver.c, 4015 :: 		label_idx++;
0xF9DA	0xF89D100C  LDRB	R1, [SP, #12]
0xF9DE	0x1C49    ADDS	R1, R1, #1
0xF9E0	0xF88D100C  STRB	R1, [SP, #12]
;Ducati_logger_driver.c, 4016 :: 		order++;
0xF9E4	0xF8BD1004  LDRH	R1, [SP, #4]
0xF9E8	0x1C49    ADDS	R1, R1, #1
0xF9EA	0xF8AD1004  STRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4017 :: 		DrawLabel(local_label);
0xF9EE	0x9804    LDR	R0, [SP, #16]
0xF9F0	0xF7FDFF0A  BL	_DrawLabel+0
;Ducati_logger_driver.c, 4018 :: 		}
L_DrawScreen56:
;Ducati_logger_driver.c, 4019 :: 		}
L_DrawScreen55:
;Ducati_logger_driver.c, 4021 :: 		if (circle_idx < CurrentScreen->CirclesCount) {
0xF9F4	0x4965    LDR	R1, [PC, #404]
0xF9F6	0x6809    LDR	R1, [R1, #0]
0xF9F8	0x3128    ADDS	R1, #40
0xF9FA	0x880A    LDRH	R2, [R1, #0]
0xF9FC	0xF89D1024  LDRB	R1, [SP, #36]
0xFA00	0x4291    CMP	R1, R2
0xFA02	0xD21C    BCS	L_DrawScreen57
;Ducati_logger_driver.c, 4022 :: 		local_circle = GetCircle(circle_idx);
0xFA04	0x4961    LDR	R1, [PC, #388]
0xFA06	0x6809    LDR	R1, [R1, #0]
0xFA08	0x312C    ADDS	R1, #44
0xFA0A	0x680A    LDR	R2, [R1, #0]
0xFA0C	0xF89D1024  LDRB	R1, [SP, #36]
0xFA10	0x0089    LSLS	R1, R1, #2
0xFA12	0x1851    ADDS	R1, R2, R1
0xFA14	0x6809    LDR	R1, [R1, #0]
0xFA16	0x910A    STR	R1, [SP, #40]
;Ducati_logger_driver.c, 4023 :: 		if (order == local_circle->Order) {
0xFA18	0x1D09    ADDS	R1, R1, #4
0xFA1A	0x780A    LDRB	R2, [R1, #0]
0xFA1C	0xF8BD1004  LDRH	R1, [SP, #4]
0xFA20	0x4291    CMP	R1, R2
0xFA22	0xD10C    BNE	L_DrawScreen58
;Ducati_logger_driver.c, 4024 :: 		circle_idx++;
0xFA24	0xF89D1024  LDRB	R1, [SP, #36]
0xFA28	0x1C49    ADDS	R1, R1, #1
0xFA2A	0xF88D1024  STRB	R1, [SP, #36]
;Ducati_logger_driver.c, 4025 :: 		order++;
0xFA2E	0xF8BD1004  LDRH	R1, [SP, #4]
0xFA32	0x1C49    ADDS	R1, R1, #1
0xFA34	0xF8AD1004  STRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4026 :: 		DrawCircle(local_circle);
0xFA38	0x980A    LDR	R0, [SP, #40]
0xFA3A	0xF7FDFE6D  BL	_DrawCircle+0
;Ducati_logger_driver.c, 4027 :: 		}
L_DrawScreen58:
;Ducati_logger_driver.c, 4028 :: 		}
L_DrawScreen57:
;Ducati_logger_driver.c, 4030 :: 		if (circle_button_idx < CurrentScreen->CircleButtonsCount) {
0xFA3E	0x4953    LDR	R1, [PC, #332]
0xFA40	0x6809    LDR	R1, [R1, #0]
0xFA42	0x3130    ADDS	R1, #48
0xFA44	0x880A    LDRH	R2, [R1, #0]
0xFA46	0xF89D102C  LDRB	R1, [SP, #44]
0xFA4A	0x4291    CMP	R1, R2
0xFA4C	0xD21C    BCS	L_DrawScreen59
;Ducati_logger_driver.c, 4031 :: 		local_circle_button = GetCircleButton(circle_button_idx);
0xFA4E	0x494F    LDR	R1, [PC, #316]
0xFA50	0x6809    LDR	R1, [R1, #0]
0xFA52	0x3134    ADDS	R1, #52
0xFA54	0x680A    LDR	R2, [R1, #0]
0xFA56	0xF89D102C  LDRB	R1, [SP, #44]
0xFA5A	0x0089    LSLS	R1, R1, #2
0xFA5C	0x1851    ADDS	R1, R2, R1
0xFA5E	0x6809    LDR	R1, [R1, #0]
0xFA60	0x910C    STR	R1, [SP, #48]
;Ducati_logger_driver.c, 4032 :: 		if (order == local_circle_button->Order) {
0xFA62	0x1D09    ADDS	R1, R1, #4
0xFA64	0x780A    LDRB	R2, [R1, #0]
0xFA66	0xF8BD1004  LDRH	R1, [SP, #4]
0xFA6A	0x4291    CMP	R1, R2
0xFA6C	0xD10C    BNE	L_DrawScreen60
;Ducati_logger_driver.c, 4033 :: 		circle_button_idx++;
0xFA6E	0xF89D102C  LDRB	R1, [SP, #44]
0xFA72	0x1C49    ADDS	R1, R1, #1
0xFA74	0xF88D102C  STRB	R1, [SP, #44]
;Ducati_logger_driver.c, 4034 :: 		order++;
0xFA78	0xF8BD1004  LDRH	R1, [SP, #4]
0xFA7C	0x1C49    ADDS	R1, R1, #1
0xFA7E	0xF8AD1004  STRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4035 :: 		DrawCircleButton(local_circle_button);
0xFA82	0x980C    LDR	R0, [SP, #48]
0xFA84	0xF7FDFF6A  BL	_DrawCircleButton+0
;Ducati_logger_driver.c, 4036 :: 		}
L_DrawScreen60:
;Ducati_logger_driver.c, 4037 :: 		}
L_DrawScreen59:
;Ducati_logger_driver.c, 4039 :: 		if (box_idx < CurrentScreen->BoxesCount) {
0xFA88	0x4940    LDR	R1, [PC, #256]
0xFA8A	0x6809    LDR	R1, [R1, #0]
0xFA8C	0x3138    ADDS	R1, #56
0xFA8E	0x880A    LDRH	R2, [R1, #0]
0xFA90	0xF89D1034  LDRB	R1, [SP, #52]
0xFA94	0x4291    CMP	R1, R2
0xFA96	0xD21C    BCS	L_DrawScreen61
;Ducati_logger_driver.c, 4040 :: 		local_box = GetBox(box_idx);
0xFA98	0x493C    LDR	R1, [PC, #240]
0xFA9A	0x6809    LDR	R1, [R1, #0]
0xFA9C	0x313C    ADDS	R1, #60
0xFA9E	0x680A    LDR	R2, [R1, #0]
0xFAA0	0xF89D1034  LDRB	R1, [SP, #52]
0xFAA4	0x0089    LSLS	R1, R1, #2
0xFAA6	0x1851    ADDS	R1, R2, R1
0xFAA8	0x6809    LDR	R1, [R1, #0]
0xFAAA	0x910E    STR	R1, [SP, #56]
;Ducati_logger_driver.c, 4041 :: 		if (order == local_box->Order) {
0xFAAC	0x1D09    ADDS	R1, R1, #4
0xFAAE	0x780A    LDRB	R2, [R1, #0]
0xFAB0	0xF8BD1004  LDRH	R1, [SP, #4]
0xFAB4	0x4291    CMP	R1, R2
0xFAB6	0xD10C    BNE	L_DrawScreen62
;Ducati_logger_driver.c, 4042 :: 		box_idx++;
0xFAB8	0xF89D1034  LDRB	R1, [SP, #52]
0xFABC	0x1C49    ADDS	R1, R1, #1
0xFABE	0xF88D1034  STRB	R1, [SP, #52]
;Ducati_logger_driver.c, 4043 :: 		order++;
0xFAC2	0xF8BD1004  LDRH	R1, [SP, #4]
0xFAC6	0x1C49    ADDS	R1, R1, #1
0xFAC8	0xF8AD1004  STRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4044 :: 		DrawBox(local_box);
0xFACC	0x980E    LDR	R0, [SP, #56]
0xFACE	0xF7FDFEC5  BL	_DrawBox+0
;Ducati_logger_driver.c, 4045 :: 		}
L_DrawScreen62:
;Ducati_logger_driver.c, 4046 :: 		}
L_DrawScreen61:
;Ducati_logger_driver.c, 4048 :: 		if (cbox_idx < CurrentScreen->CBoxesCount) {
0xFAD2	0x492E    LDR	R1, [PC, #184]
0xFAD4	0x6809    LDR	R1, [R1, #0]
0xFAD6	0x3140    ADDS	R1, #64
0xFAD8	0x880A    LDRH	R2, [R1, #0]
0xFADA	0xF89D103C  LDRB	R1, [SP, #60]
0xFADE	0x4291    CMP	R1, R2
0xFAE0	0xD21C    BCS	L_DrawScreen63
;Ducati_logger_driver.c, 4049 :: 		local_cbox = GetCBox(cbox_idx);
0xFAE2	0x492A    LDR	R1, [PC, #168]
0xFAE4	0x6809    LDR	R1, [R1, #0]
0xFAE6	0x3144    ADDS	R1, #68
0xFAE8	0x680A    LDR	R2, [R1, #0]
0xFAEA	0xF89D103C  LDRB	R1, [SP, #60]
0xFAEE	0x0089    LSLS	R1, R1, #2
0xFAF0	0x1851    ADDS	R1, R2, R1
0xFAF2	0x6809    LDR	R1, [R1, #0]
0xFAF4	0x9110    STR	R1, [SP, #64]
;Ducati_logger_driver.c, 4050 :: 		if (order == local_cbox->Order) {
0xFAF6	0x1D09    ADDS	R1, R1, #4
0xFAF8	0x780A    LDRB	R2, [R1, #0]
0xFAFA	0xF8BD1004  LDRH	R1, [SP, #4]
0xFAFE	0x4291    CMP	R1, R2
0xFB00	0xD10C    BNE	L_DrawScreen64
;Ducati_logger_driver.c, 4051 :: 		cbox_idx++;
0xFB02	0xF89D103C  LDRB	R1, [SP, #60]
0xFB06	0x1C49    ADDS	R1, R1, #1
0xFB08	0xF88D103C  STRB	R1, [SP, #60]
;Ducati_logger_driver.c, 4052 :: 		order++;
0xFB0C	0xF8BD1004  LDRH	R1, [SP, #4]
0xFB10	0x1C49    ADDS	R1, R1, #1
0xFB12	0xF8AD1004  STRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4053 :: 		DrawCBox(local_cbox);
0xFB16	0x9810    LDR	R0, [SP, #64]
0xFB18	0xF7FDFD7E  BL	_DrawCBox+0
;Ducati_logger_driver.c, 4054 :: 		}
L_DrawScreen64:
;Ducati_logger_driver.c, 4055 :: 		}
L_DrawScreen63:
;Ducati_logger_driver.c, 4057 :: 		if (line_idx < CurrentScreen->LinesCount) {
0xFB1C	0x491B    LDR	R1, [PC, #108]
0xFB1E	0x6809    LDR	R1, [R1, #0]
0xFB20	0x3148    ADDS	R1, #72
0xFB22	0x880A    LDRH	R2, [R1, #0]
0xFB24	0xF89D1044  LDRB	R1, [SP, #68]
0xFB28	0x4291    CMP	R1, R2
0xFB2A	0xD21C    BCS	L_DrawScreen65
;Ducati_logger_driver.c, 4058 :: 		local_line = GetLine(line_idx);
0xFB2C	0x4917    LDR	R1, [PC, #92]
0xFB2E	0x6809    LDR	R1, [R1, #0]
0xFB30	0x314C    ADDS	R1, #76
0xFB32	0x680A    LDR	R2, [R1, #0]
0xFB34	0xF89D1044  LDRB	R1, [SP, #68]
0xFB38	0x0089    LSLS	R1, R1, #2
0xFB3A	0x1851    ADDS	R1, R2, R1
0xFB3C	0x6809    LDR	R1, [R1, #0]
0xFB3E	0x9112    STR	R1, [SP, #72]
;Ducati_logger_driver.c, 4059 :: 		if (order == local_line->Order) {
0xFB40	0x1D09    ADDS	R1, R1, #4
0xFB42	0x780A    LDRB	R2, [R1, #0]
0xFB44	0xF8BD1004  LDRH	R1, [SP, #4]
0xFB48	0x4291    CMP	R1, R2
0xFB4A	0xD10C    BNE	L_DrawScreen66
;Ducati_logger_driver.c, 4060 :: 		line_idx++;
0xFB4C	0xF89D1044  LDRB	R1, [SP, #68]
0xFB50	0x1C49    ADDS	R1, R1, #1
0xFB52	0xF88D1044  STRB	R1, [SP, #68]
;Ducati_logger_driver.c, 4061 :: 		order++;
0xFB56	0xF8BD1004  LDRH	R1, [SP, #4]
0xFB5A	0x1C49    ADDS	R1, R1, #1
0xFB5C	0xF8AD1004  STRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4062 :: 		DrawLine(local_line);
0xFB60	0x9812    LDR	R0, [SP, #72]
0xFB62	0xF7FEF8CB  BL	_DrawLine+0
;Ducati_logger_driver.c, 4063 :: 		}
L_DrawScreen66:
;Ducati_logger_driver.c, 4064 :: 		}
L_DrawScreen65:
;Ducati_logger_driver.c, 4066 :: 		if (image_idx < CurrentScreen->ImagesCount) {
0xFB66	0x4909    LDR	R1, [PC, #36]
0xFB68	0x6809    LDR	R1, [R1, #0]
0xFB6A	0x3118    ADDS	R1, #24
0xFB6C	0x880A    LDRH	R2, [R1, #0]
0xFB6E	0xF89D1014  LDRB	R1, [SP, #20]
0xFB72	0x4291    CMP	R1, R2
0xFB74	0xD22F    BCS	L_DrawScreen67
;Ducati_logger_driver.c, 4067 :: 		local_image = GetImage(image_idx);
0xFB76	0x4905    LDR	R1, [PC, #20]
0xFB78	0x6809    LDR	R1, [R1, #0]
0xFB7A	0x311C    ADDS	R1, #28
0xFB7C	0x680A    LDR	R2, [R1, #0]
0xFB7E	0xF89D1014  LDRB	R1, [SP, #20]
0xFB82	0x0089    LSLS	R1, R1, #2
0xFB84	0x1851    ADDS	R1, R2, R1
0xFB86	0xE011    B	#34
0xFB88	0x22282000  	_object_pressed+0
0xFB8C	0x22642000  	_CurrentScreen+0
0xFB90	0x22922000  	_display_width+0
0xFB94	0x22942000  	_display_height+0
0xFB98	0x82A84242  	GPIOF_ODR+0
0xFB9C	0xC8D90000  	_Write_Data+0
0xFBA0	0x6B950000  	_Write_Command+0
0xFBA4	0x6BCD0000  	_Set_Index+0
0xFBA8	0x253D0000  	_TFT_Get_Data+0
0xFBAC	0x6809    LDR	R1, [R1, #0]
0xFBAE	0x9106    STR	R1, [SP, #24]
;Ducati_logger_driver.c, 4068 :: 		if (order == local_image->Order) {
0xFBB0	0x1D09    ADDS	R1, R1, #4
0xFBB2	0x780A    LDRB	R2, [R1, #0]
0xFBB4	0xF8BD1004  LDRH	R1, [SP, #4]
0xFBB8	0x4291    CMP	R1, R2
0xFBBA	0xD10C    BNE	L_DrawScreen68
;Ducati_logger_driver.c, 4069 :: 		image_idx++;
0xFBBC	0xF89D1014  LDRB	R1, [SP, #20]
0xFBC0	0x1C49    ADDS	R1, R1, #1
0xFBC2	0xF88D1014  STRB	R1, [SP, #20]
;Ducati_logger_driver.c, 4070 :: 		order++;
0xFBC6	0xF8BD1004  LDRH	R1, [SP, #4]
0xFBCA	0x1C49    ADDS	R1, R1, #1
0xFBCC	0xF8AD1004  STRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4071 :: 		DrawImage(local_image);
0xFBD0	0x9806    LDR	R0, [SP, #24]
0xFBD2	0xF7FEF873  BL	_DrawImage+0
;Ducati_logger_driver.c, 4072 :: 		}
L_DrawScreen68:
;Ducati_logger_driver.c, 4073 :: 		}
L_DrawScreen67:
;Ducati_logger_driver.c, 4075 :: 		if (cimage_idx < CurrentScreen->CImagesCount) {
0xFBD6	0x4915    LDR	R1, [PC, #84]
0xFBD8	0x6809    LDR	R1, [R1, #0]
0xFBDA	0x3120    ADDS	R1, #32
0xFBDC	0x880A    LDRH	R2, [R1, #0]
0xFBDE	0xF89D101C  LDRB	R1, [SP, #28]
0xFBE2	0x4291    CMP	R1, R2
0xFBE4	0xD21C    BCS	L_DrawScreen69
;Ducati_logger_driver.c, 4076 :: 		local_cimage = GetCImage(cimage_idx);
0xFBE6	0x4911    LDR	R1, [PC, #68]
0xFBE8	0x6809    LDR	R1, [R1, #0]
0xFBEA	0x3124    ADDS	R1, #36
0xFBEC	0x680A    LDR	R2, [R1, #0]
0xFBEE	0xF89D101C  LDRB	R1, [SP, #28]
0xFBF2	0x0089    LSLS	R1, R1, #2
0xFBF4	0x1851    ADDS	R1, R2, R1
0xFBF6	0x6809    LDR	R1, [R1, #0]
0xFBF8	0x9108    STR	R1, [SP, #32]
;Ducati_logger_driver.c, 4077 :: 		if (order == local_cimage->Order) {
0xFBFA	0x1D09    ADDS	R1, R1, #4
0xFBFC	0x780A    LDRB	R2, [R1, #0]
0xFBFE	0xF8BD1004  LDRH	R1, [SP, #4]
0xFC02	0x4291    CMP	R1, R2
0xFC04	0xD10C    BNE	L_DrawScreen70
;Ducati_logger_driver.c, 4078 :: 		cimage_idx++;
0xFC06	0xF89D101C  LDRB	R1, [SP, #28]
0xFC0A	0x1C49    ADDS	R1, R1, #1
0xFC0C	0xF88D101C  STRB	R1, [SP, #28]
;Ducati_logger_driver.c, 4079 :: 		order++;
0xFC10	0xF8BD1004  LDRH	R1, [SP, #4]
0xFC14	0x1C49    ADDS	R1, R1, #1
0xFC16	0xF8AD1004  STRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4080 :: 		DrawCImage(local_cimage);
0xFC1A	0x9808    LDR	R0, [SP, #32]
0xFC1C	0xF7FEF91A  BL	_DrawCImage+0
;Ducati_logger_driver.c, 4081 :: 		}
L_DrawScreen70:
;Ducati_logger_driver.c, 4082 :: 		}
L_DrawScreen69:
;Ducati_logger_driver.c, 4084 :: 		}
0xFC20	0xE695    B	L_DrawScreen51
L_DrawScreen52:
;Ducati_logger_driver.c, 4085 :: 		}
L_end_DrawScreen:
0xFC22	0xF8DDE000  LDR	LR, [SP, #0]
0xFC26	0xB01E    ADD	SP, SP, #120
0xFC28	0x4770    BX	LR
0xFC2A	0xBF00    NOP
0xFC2C	0x22642000  	_CurrentScreen+0
; end of _DrawScreen
_DrawRoundButton:
;Ducati_logger_driver.c, 3827 :: 		void DrawRoundButton(TButton_Round *Around_button) {
; Around_button start address is: 0 (R0)
0xE0F4	0xB082    SUB	SP, SP, #8
0xE0F6	0xF8CDE000  STR	LR, [SP, #0]
; Around_button end address is: 0 (R0)
; Around_button start address is: 0 (R0)
;Ducati_logger_driver.c, 3828 :: 		if (Around_button->Visible == 1) {
0xE0FA	0xF2000112  ADDW	R1, R0, #18
0xE0FE	0x7809    LDRB	R1, [R1, #0]
0xE100	0x2901    CMP	R1, #1
0xE102	0xF0408103  BNE	L_DrawRoundButton18
;Ducati_logger_driver.c, 3829 :: 		if (object_pressed == 1) {
0xE106	0x4983    LDR	R1, [PC, #524]
0xE108	0x7809    LDRB	R1, [R1, #0]
0xE10A	0x2901    CMP	R1, #1
0xE10C	0xD125    BNE	L_DrawRoundButton19
;Ducati_logger_driver.c, 3830 :: 		object_pressed = 0;
0xE10E	0x2200    MOVS	R2, #0
0xE110	0x4980    LDR	R1, [PC, #512]
0xE112	0x700A    STRB	R2, [R1, #0]
;Ducati_logger_driver.c, 3832 :: 		Around_button->Gradient_End_Color, Around_button->Gradient_Start_Color);
0xE114	0xF2000128  ADDW	R1, R0, #40
0xE118	0x8809    LDRH	R1, [R1, #0]
0xE11A	0xB28E    UXTH	R6, R1
0xE11C	0xF200012A  ADDW	R1, R0, #42
0xE120	0x8809    LDRH	R1, [R1, #0]
0xE122	0xB28D    UXTH	R5, R1
;Ducati_logger_driver.c, 3831 :: 		TFT_Set_Brush(Around_button->Transparent, Around_button->Press_Color, Around_button->Gradient, Around_button->Gradient_Orientation,
0xE124	0xF2000127  ADDW	R1, R0, #39
0xE128	0x7809    LDRB	R1, [R1, #0]
0xE12A	0xB2CC    UXTB	R4, R1
0xE12C	0xF2000126  ADDW	R1, R0, #38
0xE130	0x7809    LDRB	R1, [R1, #0]
0xE132	0xB2CB    UXTB	R3, R1
0xE134	0xF2000130  ADDW	R1, R0, #48
0xE138	0x8809    LDRH	R1, [R1, #0]
0xE13A	0xB28A    UXTH	R2, R1
0xE13C	0xF2000114  ADDW	R1, R0, #20
0xE140	0x7809    LDRB	R1, [R1, #0]
0xE142	0x9001    STR	R0, [SP, #4]
0xE144	0xB2C8    UXTB	R0, R1
0xE146	0xB291    UXTH	R1, R2
0xE148	0xB2DA    UXTB	R2, R3
0xE14A	0xB2E3    UXTB	R3, R4
;Ducati_logger_driver.c, 3832 :: 		Around_button->Gradient_End_Color, Around_button->Gradient_Start_Color);
0xE14C	0xB440    PUSH	(R6)
0xE14E	0xB420    PUSH	(R5)
0xE150	0xF7FBF8FA  BL	_TFT_Set_Brush+0
0xE154	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 3831 :: 		TFT_Set_Brush(Around_button->Transparent, Around_button->Press_Color, Around_button->Gradient, Around_button->Gradient_Orientation,
0xE156	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3833 :: 		}
0xE158	0xE021    B	L_DrawRoundButton20
L_DrawRoundButton19:
;Ducati_logger_driver.c, 3836 :: 		Around_button->Gradient_Start_Color, Around_button->Gradient_End_Color);
0xE15A	0xF200012A  ADDW	R1, R0, #42
0xE15E	0x8809    LDRH	R1, [R1, #0]
0xE160	0xB28E    UXTH	R6, R1
0xE162	0xF2000128  ADDW	R1, R0, #40
0xE166	0x8809    LDRH	R1, [R1, #0]
0xE168	0xB28D    UXTH	R5, R1
;Ducati_logger_driver.c, 3835 :: 		TFT_Set_Brush(Around_button->Transparent, Around_button->Color, Around_button->Gradient, Around_button->Gradient_Orientation,
0xE16A	0xF2000127  ADDW	R1, R0, #39
0xE16E	0x7809    LDRB	R1, [R1, #0]
0xE170	0xB2CC    UXTB	R4, R1
0xE172	0xF2000126  ADDW	R1, R0, #38
0xE176	0x7809    LDRB	R1, [R1, #0]
0xE178	0xB2CB    UXTB	R3, R1
0xE17A	0xF200012C  ADDW	R1, R0, #44
0xE17E	0x8809    LDRH	R1, [R1, #0]
0xE180	0xB28A    UXTH	R2, R1
0xE182	0xF2000114  ADDW	R1, R0, #20
0xE186	0x7809    LDRB	R1, [R1, #0]
0xE188	0x9001    STR	R0, [SP, #4]
0xE18A	0xB2C8    UXTB	R0, R1
0xE18C	0xB291    UXTH	R1, R2
0xE18E	0xB2DA    UXTB	R2, R3
0xE190	0xB2E3    UXTB	R3, R4
;Ducati_logger_driver.c, 3836 :: 		Around_button->Gradient_Start_Color, Around_button->Gradient_End_Color);
0xE192	0xB440    PUSH	(R6)
0xE194	0xB420    PUSH	(R5)
0xE196	0xF7FBF8D7  BL	_TFT_Set_Brush+0
0xE19A	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 3835 :: 		TFT_Set_Brush(Around_button->Transparent, Around_button->Color, Around_button->Gradient, Around_button->Gradient_Orientation,
0xE19C	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3837 :: 		}
L_DrawRoundButton20:
;Ducati_logger_driver.c, 3838 :: 		TFT_Set_Pen(Around_button->Pen_Color, Around_button->Pen_Width);
0xE19E	0xF200010E  ADDW	R1, R0, #14
0xE1A2	0x7809    LDRB	R1, [R1, #0]
0xE1A4	0xB2CA    UXTB	R2, R1
0xE1A6	0xF2000110  ADDW	R1, R0, #16
0xE1AA	0x8809    LDRH	R1, [R1, #0]
0xE1AC	0x9001    STR	R0, [SP, #4]
0xE1AE	0xB288    UXTH	R0, R1
0xE1B0	0xB2D1    UXTB	R1, R2
0xE1B2	0xF7FBFBFD  BL	_TFT_Set_Pen+0
0xE1B6	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3841 :: 		Around_button->Top + Around_button->Height - 2, Around_button->Corner_Radius);
0xE1B8	0xF200012E  ADDW	R1, R0, #46
0xE1BC	0x7809    LDRB	R1, [R1, #0]
0xE1BE	0xB2CE    UXTB	R6, R1
0xE1C0	0xF2000108  ADDW	R1, R0, #8
0xE1C4	0x880A    LDRH	R2, [R1, #0]
0xE1C6	0xF200010C  ADDW	R1, R0, #12
0xE1CA	0x8809    LDRH	R1, [R1, #0]
0xE1CC	0x1851    ADDS	R1, R2, R1
0xE1CE	0xB289    UXTH	R1, R1
0xE1D0	0x1E8D    SUBS	R5, R1, #2
;Ducati_logger_driver.c, 3840 :: 		Around_button->Left + Around_button->Width - 2,
0xE1D2	0x1D81    ADDS	R1, R0, #6
0xE1D4	0x880C    LDRH	R4, [R1, #0]
0xE1D6	0xF200010A  ADDW	R1, R0, #10
0xE1DA	0x8809    LDRH	R1, [R1, #0]
0xE1DC	0x1861    ADDS	R1, R4, R1
0xE1DE	0xB289    UXTH	R1, R1
0xE1E0	0x1E8B    SUBS	R3, R1, #2
;Ducati_logger_driver.c, 3839 :: 		TFT_Rectangle_Round_Edges(Around_button->Left + 1, Around_button->Top + 1,
0xE1E2	0x1C52    ADDS	R2, R2, #1
0xE1E4	0x1C61    ADDS	R1, R4, #1
;Ducati_logger_driver.c, 3841 :: 		Around_button->Top + Around_button->Height - 2, Around_button->Corner_Radius);
0xE1E6	0x9001    STR	R0, [SP, #4]
;Ducati_logger_driver.c, 3839 :: 		TFT_Rectangle_Round_Edges(Around_button->Left + 1, Around_button->Top + 1,
0xE1E8	0xB288    UXTH	R0, R1
0xE1EA	0xB291    UXTH	R1, R2
;Ducati_logger_driver.c, 3840 :: 		Around_button->Left + Around_button->Width - 2,
0xE1EC	0xB29A    UXTH	R2, R3
;Ducati_logger_driver.c, 3841 :: 		Around_button->Top + Around_button->Height - 2, Around_button->Corner_Radius);
0xE1EE	0xB2AB    UXTH	R3, R5
0xE1F0	0xB440    PUSH	(R6)
0xE1F2	0xF7F9FFD5  BL	_TFT_Rectangle_Round_Edges+0
0xE1F6	0xB001    ADD	SP, SP, #4
0xE1F8	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3842 :: 		TFT_Set_Ext_Font(Around_button->FontName, Around_button->Font_Color, FO_HORIZONTAL);
0xE1FA	0xF2000124  ADDW	R1, R0, #36
0xE1FE	0x8809    LDRH	R1, [R1, #0]
0xE200	0xB28A    UXTH	R2, R1
0xE202	0xF2000120  ADDW	R1, R0, #32
0xE206	0x6809    LDR	R1, [R1, #0]
0xE208	0x9001    STR	R0, [SP, #4]
0xE20A	0x4608    MOV	R0, R1
0xE20C	0xB291    UXTH	R1, R2
0xE20E	0x2200    MOVS	R2, #0
0xE210	0xF7F9FEFA  BL	_TFT_Set_Ext_Font+0
0xE214	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3843 :: 		TFT_Write_Text_Return_Pos(Around_button->Caption, Around_button->Left, Around_button->Top);
0xE216	0xF2000108  ADDW	R1, R0, #8
0xE21A	0x8809    LDRH	R1, [R1, #0]
0xE21C	0xB28B    UXTH	R3, R1
0xE21E	0x1D81    ADDS	R1, R0, #6
0xE220	0x8809    LDRH	R1, [R1, #0]
0xE222	0xB28A    UXTH	R2, R1
0xE224	0xF2000118  ADDW	R1, R0, #24
0xE228	0x6809    LDR	R1, [R1, #0]
0xE22A	0x9001    STR	R0, [SP, #4]
0xE22C	0x4608    MOV	R0, R1
0xE22E	0xB291    UXTH	R1, R2
0xE230	0xB29A    UXTH	R2, R3
0xE232	0xF7FAFD81  BL	_TFT_Write_Text_Return_Pos+0
0xE236	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3844 :: 		if (Around_button->TextAlign == _taLeft)
0xE238	0xF200011C  ADDW	R1, R0, #28
0xE23C	0x7809    LDRB	R1, [R1, #0]
0xE23E	0xB9C1    CBNZ	R1, L_DrawRoundButton21
;Ducati_logger_driver.c, 3845 :: 		TFT_Write_Text(Around_button->Caption, Around_button->Left + 4, (Around_button->Top + ((Around_button->Height - caption_height) / 2)));
0xE240	0xF2000108  ADDW	R1, R0, #8
0xE244	0x880B    LDRH	R3, [R1, #0]
0xE246	0xF200010C  ADDW	R1, R0, #12
0xE24A	0x880A    LDRH	R2, [R1, #0]
0xE24C	0x4932    LDR	R1, [PC, #200]
0xE24E	0x8809    LDRH	R1, [R1, #0]
0xE250	0x1A51    SUB	R1, R2, R1
0xE252	0xB289    UXTH	R1, R1
0xE254	0x0849    LSRS	R1, R1, #1
0xE256	0xB289    UXTH	R1, R1
0xE258	0x185B    ADDS	R3, R3, R1
0xE25A	0x1D81    ADDS	R1, R0, #6
0xE25C	0x8809    LDRH	R1, [R1, #0]
0xE25E	0x1D0A    ADDS	R2, R1, #4
0xE260	0xF2000118  ADDW	R1, R0, #24
; Around_button end address is: 0 (R0)
0xE264	0x6809    LDR	R1, [R1, #0]
0xE266	0x4608    MOV	R0, R1
0xE268	0xB291    UXTH	R1, R2
0xE26A	0xB29A    UXTH	R2, R3
0xE26C	0xF7FFFE56  BL	_TFT_Write_Text+0
0xE270	0xE04C    B	L_DrawRoundButton22
L_DrawRoundButton21:
;Ducati_logger_driver.c, 3846 :: 		else if (Around_button->TextAlign == _taCenter)
; Around_button start address is: 0 (R0)
0xE272	0xF200011C  ADDW	R1, R0, #28
0xE276	0x7809    LDRB	R1, [R1, #0]
0xE278	0x2901    CMP	R1, #1
0xE27A	0xD121    BNE	L_DrawRoundButton23
;Ducati_logger_driver.c, 3847 :: 		TFT_Write_Text(Around_button->Caption, (Around_button->Left + (Around_button->Width - caption_length) / 2), (Around_button->Top + ((Around_button->Height - caption_height) / 2)));
0xE27C	0xF2000108  ADDW	R1, R0, #8
0xE280	0x880B    LDRH	R3, [R1, #0]
0xE282	0xF200010C  ADDW	R1, R0, #12
0xE286	0x880A    LDRH	R2, [R1, #0]
0xE288	0x4923    LDR	R1, [PC, #140]
0xE28A	0x8809    LDRH	R1, [R1, #0]
0xE28C	0x1A51    SUB	R1, R2, R1
0xE28E	0xB289    UXTH	R1, R1
0xE290	0x0849    LSRS	R1, R1, #1
0xE292	0xB289    UXTH	R1, R1
0xE294	0x185C    ADDS	R4, R3, R1
0xE296	0x1D81    ADDS	R1, R0, #6
0xE298	0x880B    LDRH	R3, [R1, #0]
0xE29A	0xF200010A  ADDW	R1, R0, #10
0xE29E	0x880A    LDRH	R2, [R1, #0]
0xE2A0	0x491E    LDR	R1, [PC, #120]
0xE2A2	0x8809    LDRH	R1, [R1, #0]
0xE2A4	0x1A51    SUB	R1, R2, R1
0xE2A6	0xB289    UXTH	R1, R1
0xE2A8	0x0849    LSRS	R1, R1, #1
0xE2AA	0xB289    UXTH	R1, R1
0xE2AC	0x185A    ADDS	R2, R3, R1
0xE2AE	0xF2000118  ADDW	R1, R0, #24
; Around_button end address is: 0 (R0)
0xE2B2	0x6809    LDR	R1, [R1, #0]
0xE2B4	0x4608    MOV	R0, R1
0xE2B6	0xB291    UXTH	R1, R2
0xE2B8	0xB2A2    UXTH	R2, R4
0xE2BA	0xF7FFFE2F  BL	_TFT_Write_Text+0
0xE2BE	0xE025    B	L_DrawRoundButton24
L_DrawRoundButton23:
;Ducati_logger_driver.c, 3848 :: 		else if (Around_button->TextAlign == _taRight)
; Around_button start address is: 0 (R0)
0xE2C0	0xF200011C  ADDW	R1, R0, #28
0xE2C4	0x7809    LDRB	R1, [R1, #0]
0xE2C6	0x2902    CMP	R1, #2
0xE2C8	0xD120    BNE	L_DrawRoundButton25
;Ducati_logger_driver.c, 3849 :: 		TFT_Write_Text(Around_button->Caption, Around_button->Left + (Around_button->Width - caption_length - 4), (Around_button->Top + (Around_button->Height - caption_height) / 2));
0xE2CA	0xF2000108  ADDW	R1, R0, #8
0xE2CE	0x880B    LDRH	R3, [R1, #0]
0xE2D0	0xF200010C  ADDW	R1, R0, #12
0xE2D4	0x880A    LDRH	R2, [R1, #0]
0xE2D6	0x4910    LDR	R1, [PC, #64]
0xE2D8	0x8809    LDRH	R1, [R1, #0]
0xE2DA	0x1A51    SUB	R1, R2, R1
0xE2DC	0xB289    UXTH	R1, R1
0xE2DE	0x0849    LSRS	R1, R1, #1
0xE2E0	0xB289    UXTH	R1, R1
0xE2E2	0x185C    ADDS	R4, R3, R1
0xE2E4	0x1D81    ADDS	R1, R0, #6
0xE2E6	0x880B    LDRH	R3, [R1, #0]
0xE2E8	0xF200010A  ADDW	R1, R0, #10
0xE2EC	0x880A    LDRH	R2, [R1, #0]
0xE2EE	0x490B    LDR	R1, [PC, #44]
0xE2F0	0x8809    LDRH	R1, [R1, #0]
0xE2F2	0x1A51    SUB	R1, R2, R1
0xE2F4	0xB289    UXTH	R1, R1
0xE2F6	0x1F09    SUBS	R1, R1, #4
0xE2F8	0xB289    UXTH	R1, R1
0xE2FA	0x185A    ADDS	R2, R3, R1
0xE2FC	0xF2000118  ADDW	R1, R0, #24
; Around_button end address is: 0 (R0)
0xE300	0x6809    LDR	R1, [R1, #0]
0xE302	0x4608    MOV	R0, R1
0xE304	0xB291    UXTH	R1, R2
0xE306	0xB2A2    UXTH	R2, R4
0xE308	0xF7FFFE08  BL	_TFT_Write_Text+0
L_DrawRoundButton25:
L_DrawRoundButton24:
L_DrawRoundButton22:
;Ducati_logger_driver.c, 3850 :: 		}
L_DrawRoundButton18:
;Ducati_logger_driver.c, 3851 :: 		}
L_end_DrawRoundButton:
0xE30C	0xF8DDE000  LDR	LR, [SP, #0]
0xE310	0xB002    ADD	SP, SP, #8
0xE312	0x4770    BX	LR
0xE314	0x22282000  	_object_pressed+0
0xE318	0x228A2000  	_caption_height+0
0xE31C	0x22902000  	_caption_length+0
; end of _DrawRoundButton
_TFT_Rectangle_Round_Edges:
;__Lib_TFT.c, 988 :: 		
0x81A0	0xB08B    SUB	SP, SP, #44
0x81A2	0xF8CDE000  STR	LR, [SP, #0]
0x81A6	0xF8AD001C  STRH	R0, [SP, #28]
0x81AA	0xF8AD1020  STRH	R1, [SP, #32]
0x81AE	0xF8AD2024  STRH	R2, [SP, #36]
0x81B2	0xF8AD3028  STRH	R3, [SP, #40]
0x81B6	0xF8BD402C  LDRH	R4, [SP, #44]
0x81BA	0xF8AD402C  STRH	R4, [SP, #44]
;__Lib_TFT.c, 998 :: 		
0x81BE	0xF8BD5024  LDRH	R5, [SP, #36]
0x81C2	0xF8BD401C  LDRH	R4, [SP, #28]
0x81C6	0x1B64    SUB	R4, R4, R5
; margina start address is: 0 (R0)
0x81C8	0xB220    SXTH	R0, R4
;__Lib_TFT.c, 999 :: 		
0x81CA	0xB224    SXTH	R4, R4
0x81CC	0x2C00    CMP	R4, #0
0x81CE	0xDA0A    BGE	L_TFT_Rectangle_Round_Edges124
;__Lib_TFT.c, 1000 :: 		
0x81D0	0x4245    RSBS	R5, R0, #0
0x81D2	0xB22D    SXTH	R5, R5
; margina end address is: 0 (R0)
0x81D4	0xF8BD402C  LDRH	R4, [SP, #44]
0x81D8	0x0064    LSLS	R4, R4, #1
0x81DA	0xB2A4    UXTH	R4, R4
0x81DC	0x42A5    CMP	R5, R4
0x81DE	0xD201    BCS	L_TFT_Rectangle_Round_Edges125
;__Lib_TFT.c, 1001 :: 		
0x81E0	0xF000BD9F  B	L_end_TFT_Rectangle_Round_Edges
L_TFT_Rectangle_Round_Edges125:
;__Lib_TFT.c, 1002 :: 		
0x81E4	0xE007    B	L_TFT_Rectangle_Round_Edges126
L_TFT_Rectangle_Round_Edges124:
;__Lib_TFT.c, 1003 :: 		
; margina start address is: 0 (R0)
0x81E6	0xF8BD402C  LDRH	R4, [SP, #44]
0x81EA	0x0064    LSLS	R4, R4, #1
0x81EC	0xB2A4    UXTH	R4, R4
0x81EE	0x42A0    CMP	R0, R4
0x81F0	0xD201    BCS	L_TFT_Rectangle_Round_Edges127
; margina end address is: 0 (R0)
;__Lib_TFT.c, 1004 :: 		
0x81F2	0xF000BD96  B	L_end_TFT_Rectangle_Round_Edges
L_TFT_Rectangle_Round_Edges127:
;__Lib_TFT.c, 1005 :: 		
L_TFT_Rectangle_Round_Edges126:
;__Lib_TFT.c, 1007 :: 		
0x81F6	0xF8BD5028  LDRH	R5, [SP, #40]
0x81FA	0xF8BD4020  LDRH	R4, [SP, #32]
0x81FE	0x1B64    SUB	R4, R4, R5
; margina start address is: 0 (R0)
0x8200	0xB220    SXTH	R0, R4
;__Lib_TFT.c, 1008 :: 		
0x8202	0xB224    SXTH	R4, R4
0x8204	0x2C00    CMP	R4, #0
0x8206	0xDA0A    BGE	L_TFT_Rectangle_Round_Edges128
;__Lib_TFT.c, 1009 :: 		
0x8208	0x4245    RSBS	R5, R0, #0
0x820A	0xB22D    SXTH	R5, R5
; margina end address is: 0 (R0)
0x820C	0xF8BD402C  LDRH	R4, [SP, #44]
0x8210	0x0064    LSLS	R4, R4, #1
0x8212	0xB2A4    UXTH	R4, R4
0x8214	0x42A5    CMP	R5, R4
0x8216	0xD201    BCS	L_TFT_Rectangle_Round_Edges129
;__Lib_TFT.c, 1010 :: 		
0x8218	0xF000BD83  B	L_end_TFT_Rectangle_Round_Edges
L_TFT_Rectangle_Round_Edges129:
;__Lib_TFT.c, 1011 :: 		
0x821C	0xE007    B	L_TFT_Rectangle_Round_Edges130
L_TFT_Rectangle_Round_Edges128:
;__Lib_TFT.c, 1012 :: 		
; margina start address is: 0 (R0)
0x821E	0xF8BD402C  LDRH	R4, [SP, #44]
0x8222	0x0064    LSLS	R4, R4, #1
0x8224	0xB2A4    UXTH	R4, R4
0x8226	0x42A0    CMP	R0, R4
0x8228	0xD201    BCS	L_TFT_Rectangle_Round_Edges131
; margina end address is: 0 (R0)
;__Lib_TFT.c, 1013 :: 		
0x822A	0xF000BD7A  B	L_end_TFT_Rectangle_Round_Edges
L_TFT_Rectangle_Round_Edges131:
;__Lib_TFT.c, 1014 :: 		
L_TFT_Rectangle_Round_Edges130:
;__Lib_TFT.c, 1018 :: 		
0x822E	0x4EE3    LDR	R6, [PC, #908]
0x8230	0x8834    LDRH	R4, [R6, #0]
0x8232	0xF8AD4016  STRH	R4, [SP, #22]
;__Lib_TFT.c, 1019 :: 		
0x8236	0x4DE2    LDR	R5, [PC, #904]
0x8238	0x782C    LDRB	R4, [R5, #0]
0x823A	0xF88D4018  STRB	R4, [SP, #24]
;__Lib_TFT.c, 1020 :: 		
0x823E	0x4CE1    LDR	R4, [PC, #900]
0x8240	0x8824    LDRH	R4, [R4, #0]
0x8242	0x8034    STRH	R4, [R6, #0]
;__Lib_TFT.c, 1021 :: 		
0x8244	0x2400    MOVS	R4, #0
0x8246	0x702C    STRB	R4, [R5, #0]
;__Lib_TFT.c, 1023 :: 		
0x8248	0xF8BD502C  LDRH	R5, [SP, #44]
0x824C	0xF8BD4020  LDRH	R4, [SP, #32]
0x8250	0xEB040805  ADD	R8, R4, R5, LSL #0
0x8254	0xFA1FF888  UXTH	R8, R8
0x8258	0xF8BD502C  LDRH	R5, [SP, #44]
0x825C	0xF8BD4024  LDRH	R4, [SP, #36]
0x8260	0x1B67    SUB	R7, R4, R5
0x8262	0xB2BF    UXTH	R7, R7
0x8264	0xEBA80407  SUB	R4, R8, R7, LSL #0
0x8268	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT.c, 1024 :: 		
0x826C	0xF8BD502C  LDRH	R5, [SP, #44]
0x8270	0xF8BD401C  LDRH	R4, [SP, #28]
0x8274	0x1966    ADDS	R6, R4, R5
0x8276	0xB2B6    UXTH	R6, R6
0x8278	0xEBA80406  SUB	R4, R8, R6, LSL #0
0x827C	0xF8AD400C  STRH	R4, [SP, #12]
;__Lib_TFT.c, 1025 :: 		
0x8280	0xF8BD502C  LDRH	R5, [SP, #44]
0x8284	0xF8BD4028  LDRH	R4, [SP, #40]
0x8288	0x1B65    SUB	R5, R4, R5
0x828A	0xB2AD    UXTH	R5, R5
0x828C	0x1BAC    SUB	R4, R5, R6
0x828E	0xF8AD400E  STRH	R4, [SP, #14]
;__Lib_TFT.c, 1026 :: 		
0x8292	0x1BEC    SUB	R4, R5, R7
0x8294	0xF8AD4010  STRH	R4, [SP, #16]
;__Lib_TFT.c, 1028 :: 		
0x8298	0x4CCB    LDR	R4, [PC, #812]
0x829A	0x7824    LDRB	R4, [R4, #0]
0x829C	0x2C00    CMP	R4, #0
0x829E	0xF000838C  BEQ	L_TFT_Rectangle_Round_Edges132
;__Lib_TFT.c, 1029 :: 		
0x82A2	0x4CC8    LDR	R4, [PC, #800]
0x82A4	0x8824    LDRH	R4, [R4, #0]
0x82A6	0xF8AD4012  STRH	R4, [SP, #18]
;__Lib_TFT.c, 1030 :: 		
0x82AA	0x4CC8    LDR	R4, [PC, #800]
0x82AC	0x7824    LDRB	R4, [R4, #0]
0x82AE	0xF88D4014  STRB	R4, [SP, #20]
;__Lib_TFT.c, 1033 :: 		
0x82B2	0x2400    MOVS	R4, #0
0x82B4	0xB224    SXTH	R4, R4
0x82B6	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 1034 :: 		
0x82BA	0xF8BD402C  LDRH	R4, [SP, #44]
0x82BE	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 1035 :: 		
0x82C2	0xF9BD402C  LDRSH	R4, [SP, #44]
0x82C6	0x0064    LSLS	R4, R4, #1
0x82C8	0xB224    SXTH	R4, R4
;__Lib_TFT.c, 1036 :: 		
0x82CA	0xF1C40403  RSB	R4, R4, #3
0x82CE	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 1037 :: 		
L_TFT_Rectangle_Round_Edges133:
0x82D2	0xF9BD4006  LDRSH	R4, [SP, #6]
0x82D6	0x1C65    ADDS	R5, R4, #1
0x82D8	0xB22D    SXTH	R5, R5
0x82DA	0xF9BD4008  LDRSH	R4, [SP, #8]
0x82DE	0x42AC    CMP	R4, R5
0x82E0	0xF28082CD  BGE	L_TFT_Rectangle_Round_Edges134
;__Lib_TFT.c, 1038 :: 		
0x82E4	0xF89D4018  LDRB	R4, [SP, #24]
0x82E8	0x2C00    CMP	R4, #0
0x82EA	0xF0008214  BEQ	L_TFT_Rectangle_Round_Edges135
;__Lib_TFT.c, 1039 :: 		
0x82EE	0x4CB8    LDR	R4, [PC, #736]
0x82F0	0x7824    LDRB	R4, [R4, #0]
0x82F2	0x2C00    CMP	R4, #0
0x82F4	0xF04080FF  BNE	L_TFT_Rectangle_Round_Edges136
;__Lib_TFT.c, 1040 :: 		
0x82F8	0xF8BD5020  LDRH	R5, [SP, #32]
0x82FC	0xF8BD4028  LDRH	R4, [SP, #40]
0x8300	0x1B67    SUB	R7, R4, R5
0x8302	0xF8BD502C  LDRH	R5, [SP, #44]
0x8306	0xF8BD4028  LDRH	R4, [SP, #40]
0x830A	0x1B65    SUB	R5, R4, R5
0x830C	0xB2AD    UXTH	R5, R5
0x830E	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8312	0x192D    ADDS	R5, R5, R4
0x8314	0xB2AD    UXTH	R5, R5
0x8316	0xF8BD4020  LDRH	R4, [SP, #32]
0x831A	0x1B2E    SUB	R6, R5, R4
0x831C	0x4CAD    LDR	R4, [PC, #692]
0x831E	0x8825    LDRH	R5, [R4, #0]
0x8320	0x4CAD    LDR	R4, [PC, #692]
0x8322	0x8824    LDRH	R4, [R4, #0]
0x8324	0xB2BB    UXTH	R3, R7
0x8326	0xB2B2    UXTH	R2, R6
0x8328	0xB2A9    UXTH	R1, R5
0x832A	0xB2A0    UXTH	R0, R4
0x832C	0xF7FCFAF0  BL	_TFT_GetCurrentColor+0
0x8330	0x2101    MOVS	R1, #1
0x8332	0xF001FB3D  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 1041 :: 		
0x8336	0xF8BD502C  LDRH	R5, [SP, #44]
0x833A	0xF8BD4028  LDRH	R4, [SP, #40]
0x833E	0x1B65    SUB	R5, R4, R5
0x8340	0xB2AD    UXTH	R5, R5
0x8342	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8346	0x192F    ADDS	R7, R5, R4
0x8348	0xF8BD502C  LDRH	R5, [SP, #44]
0x834C	0xF8BD4024  LDRH	R4, [SP, #36]
0x8350	0x1B65    SUB	R5, R4, R5
0x8352	0xB2AD    UXTH	R5, R5
0x8354	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8358	0x192E    ADDS	R6, R5, R4
0x835A	0xF8BD502C  LDRH	R5, [SP, #44]
0x835E	0xF8BD401C  LDRH	R4, [SP, #28]
0x8362	0x1965    ADDS	R5, R4, R5
0x8364	0xB2AD    UXTH	R5, R5
0x8366	0xF9BD4008  LDRSH	R4, [SP, #8]
0x836A	0x1B2C    SUB	R4, R5, R4
0x836C	0xB23A    SXTH	R2, R7
0x836E	0xB231    SXTH	R1, R6
0x8370	0xB220    SXTH	R0, R4
0x8372	0xF7FCFB6D  BL	_TFT_H_Line+0
;__Lib_TFT.c, 1043 :: 		
0x8376	0xF8BD5020  LDRH	R5, [SP, #32]
0x837A	0xF8BD4028  LDRH	R4, [SP, #40]
0x837E	0x1B67    SUB	R7, R4, R5
0x8380	0xF8BD502C  LDRH	R5, [SP, #44]
0x8384	0xF8BD4020  LDRH	R4, [SP, #32]
0x8388	0x1965    ADDS	R5, R4, R5
0x838A	0xB2AD    UXTH	R5, R5
0x838C	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8390	0x1B2D    SUB	R5, R5, R4
0x8392	0xB2AD    UXTH	R5, R5
0x8394	0xF8BD4020  LDRH	R4, [SP, #32]
0x8398	0x1B2E    SUB	R6, R5, R4
0x839A	0x4C8E    LDR	R4, [PC, #568]
0x839C	0x8825    LDRH	R5, [R4, #0]
0x839E	0x4C8E    LDR	R4, [PC, #568]
0x83A0	0x8824    LDRH	R4, [R4, #0]
0x83A2	0xB2BB    UXTH	R3, R7
0x83A4	0xB2B2    UXTH	R2, R6
0x83A6	0xB2A9    UXTH	R1, R5
0x83A8	0xB2A0    UXTH	R0, R4
0x83AA	0xF7FCFAB1  BL	_TFT_GetCurrentColor+0
0x83AE	0x2101    MOVS	R1, #1
0x83B0	0xF001FAFE  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 1044 :: 		
0x83B4	0xF8BD502C  LDRH	R5, [SP, #44]
0x83B8	0xF8BD4020  LDRH	R4, [SP, #32]
0x83BC	0x1965    ADDS	R5, R4, R5
0x83BE	0xB2AD    UXTH	R5, R5
0x83C0	0xF9BD4006  LDRSH	R4, [SP, #6]
0x83C4	0x1B2F    SUB	R7, R5, R4
0x83C6	0xF8BD502C  LDRH	R5, [SP, #44]
0x83CA	0xF8BD4024  LDRH	R4, [SP, #36]
0x83CE	0x1B65    SUB	R5, R4, R5
0x83D0	0xB2AD    UXTH	R5, R5
0x83D2	0xF9BD4008  LDRSH	R4, [SP, #8]
0x83D6	0x192E    ADDS	R6, R5, R4
0x83D8	0xF8BD502C  LDRH	R5, [SP, #44]
0x83DC	0xF8BD401C  LDRH	R4, [SP, #28]
0x83E0	0x1965    ADDS	R5, R4, R5
0x83E2	0xB2AD    UXTH	R5, R5
0x83E4	0xF9BD4008  LDRSH	R4, [SP, #8]
0x83E8	0x1B2C    SUB	R4, R5, R4
0x83EA	0xB23A    SXTH	R2, R7
0x83EC	0xB231    SXTH	R1, R6
0x83EE	0xB220    SXTH	R0, R4
0x83F0	0xF7FCFB2E  BL	_TFT_H_Line+0
;__Lib_TFT.c, 1046 :: 		
0x83F4	0xF8BD5020  LDRH	R5, [SP, #32]
0x83F8	0xF8BD4028  LDRH	R4, [SP, #40]
0x83FC	0x1B67    SUB	R7, R4, R5
0x83FE	0xF8BD502C  LDRH	R5, [SP, #44]
0x8402	0xF8BD4028  LDRH	R4, [SP, #40]
0x8406	0x1B65    SUB	R5, R4, R5
0x8408	0xB2AD    UXTH	R5, R5
0x840A	0xF9BD4008  LDRSH	R4, [SP, #8]
0x840E	0x192D    ADDS	R5, R5, R4
0x8410	0xB2AD    UXTH	R5, R5
0x8412	0xF8BD4020  LDRH	R4, [SP, #32]
0x8416	0x1B2E    SUB	R6, R5, R4
0x8418	0x4C6E    LDR	R4, [PC, #440]
0x841A	0x8825    LDRH	R5, [R4, #0]
0x841C	0x4C6E    LDR	R4, [PC, #440]
0x841E	0x8824    LDRH	R4, [R4, #0]
0x8420	0xB2BB    UXTH	R3, R7
0x8422	0xB2B2    UXTH	R2, R6
0x8424	0xB2A9    UXTH	R1, R5
0x8426	0xB2A0    UXTH	R0, R4
0x8428	0xF7FCFA72  BL	_TFT_GetCurrentColor+0
0x842C	0x2101    MOVS	R1, #1
0x842E	0xF001FABF  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 1047 :: 		
0x8432	0xF8BD502C  LDRH	R5, [SP, #44]
0x8436	0xF8BD4028  LDRH	R4, [SP, #40]
0x843A	0xEBA40805  SUB	R8, R4, R5, LSL #0
0x843E	0xFA1FF888  UXTH	R8, R8
0x8442	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8446	0xEB080704  ADD	R7, R8, R4, LSL #0
0x844A	0xF9BD4006  LDRSH	R4, [SP, #6]
0x844E	0xEBA80504  SUB	R5, R8, R4, LSL #0
0x8452	0xB2AD    UXTH	R5, R5
0x8454	0xF9BD400E  LDRSH	R4, [SP, #14]
0x8458	0x1B2E    SUB	R6, R5, R4
0x845A	0xF9BD4006  LDRSH	R4, [SP, #6]
0x845E	0xEB080504  ADD	R5, R8, R4, LSL #0
0x8462	0xB2AD    UXTH	R5, R5
0x8464	0xF9BD4010  LDRSH	R4, [SP, #16]
0x8468	0x1B2C    SUB	R4, R5, R4
0x846A	0xB23A    SXTH	R2, R7
0x846C	0xB231    SXTH	R1, R6
0x846E	0xB220    SXTH	R0, R4
0x8470	0xF7FCFAEE  BL	_TFT_H_Line+0
;__Lib_TFT.c, 1049 :: 		
0x8474	0xF8BD5020  LDRH	R5, [SP, #32]
0x8478	0xF8BD4028  LDRH	R4, [SP, #40]
0x847C	0x1B67    SUB	R7, R4, R5
0x847E	0xF8BD502C  LDRH	R5, [SP, #44]
0x8482	0xF8BD4020  LDRH	R4, [SP, #32]
0x8486	0x1965    ADDS	R5, R4, R5
0x8488	0xB2AD    UXTH	R5, R5
0x848A	0xF9BD4008  LDRSH	R4, [SP, #8]
0x848E	0x1B2D    SUB	R5, R5, R4
0x8490	0xB2AD    UXTH	R5, R5
0x8492	0xF8BD4020  LDRH	R4, [SP, #32]
0x8496	0x1B2E    SUB	R6, R5, R4
0x8498	0x4C4E    LDR	R4, [PC, #312]
0x849A	0x8825    LDRH	R5, [R4, #0]
0x849C	0x4C4E    LDR	R4, [PC, #312]
0x849E	0x8824    LDRH	R4, [R4, #0]
0x84A0	0xB2BB    UXTH	R3, R7
0x84A2	0xB2B2    UXTH	R2, R6
0x84A4	0xB2A9    UXTH	R1, R5
0x84A6	0xB2A0    UXTH	R0, R4
0x84A8	0xF7FCFA32  BL	_TFT_GetCurrentColor+0
0x84AC	0x2101    MOVS	R1, #1
0x84AE	0xF001FA7F  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 1050 :: 		
0x84B2	0xF8BD502C  LDRH	R5, [SP, #44]
0x84B6	0xF8BD4020  LDRH	R4, [SP, #32]
0x84BA	0xEB040805  ADD	R8, R4, R5, LSL #0
0x84BE	0xFA1FF888  UXTH	R8, R8
0x84C2	0xF9BD4008  LDRSH	R4, [SP, #8]
0x84C6	0xEBA80704  SUB	R7, R8, R4, LSL #0
0x84CA	0xF9BD4006  LDRSH	R4, [SP, #6]
0x84CE	0xEB080504  ADD	R5, R8, R4, LSL #0
0x84D2	0xB2AD    UXTH	R5, R5
0x84D4	0xF9BD400A  LDRSH	R4, [SP, #10]
0x84D8	0x1B2E    SUB	R6, R5, R4
0x84DA	0xF9BD4006  LDRSH	R4, [SP, #6]
0x84DE	0xEBA80504  SUB	R5, R8, R4, LSL #0
0x84E2	0xB2AD    UXTH	R5, R5
0x84E4	0xF9BD400C  LDRSH	R4, [SP, #12]
0x84E8	0x1B2C    SUB	R4, R5, R4
0x84EA	0xB23A    SXTH	R2, R7
0x84EC	0xB231    SXTH	R1, R6
0x84EE	0xB220    SXTH	R0, R4
0x84F0	0xF7FCFAAE  BL	_TFT_H_Line+0
;__Lib_TFT.c, 1051 :: 		
0x84F4	0xE10E    B	L_TFT_Rectangle_Round_Edges137
L_TFT_Rectangle_Round_Edges136:
;__Lib_TFT.c, 1052 :: 		
0x84F6	0xF8BD501C  LDRH	R5, [SP, #28]
0x84FA	0xF8BD4024  LDRH	R4, [SP, #36]
0x84FE	0x1B67    SUB	R7, R4, R5
0x8500	0xF8BD502C  LDRH	R5, [SP, #44]
0x8504	0xF8BD4024  LDRH	R4, [SP, #36]
0x8508	0x1B65    SUB	R5, R4, R5
0x850A	0xB2AD    UXTH	R5, R5
0x850C	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8510	0x192D    ADDS	R5, R5, R4
0x8512	0xB2AD    UXTH	R5, R5
0x8514	0xF8BD401C  LDRH	R4, [SP, #28]
0x8518	0x1B2E    SUB	R6, R5, R4
0x851A	0x4C2E    LDR	R4, [PC, #184]
0x851C	0x8825    LDRH	R5, [R4, #0]
0x851E	0x4C2E    LDR	R4, [PC, #184]
0x8520	0x8824    LDRH	R4, [R4, #0]
0x8522	0xB2BB    UXTH	R3, R7
0x8524	0xB2B2    UXTH	R2, R6
0x8526	0xB2A9    UXTH	R1, R5
0x8528	0xB2A0    UXTH	R0, R4
0x852A	0xF7FCF9F1  BL	_TFT_GetCurrentColor+0
0x852E	0x2101    MOVS	R1, #1
0x8530	0xF001FA3E  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 1053 :: 		
0x8534	0xF8BD502C  LDRH	R5, [SP, #44]
0x8538	0xF8BD4024  LDRH	R4, [SP, #36]
0x853C	0x1B65    SUB	R5, R4, R5
0x853E	0xB2AD    UXTH	R5, R5
0x8540	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8544	0x192F    ADDS	R7, R5, R4
0x8546	0xF8BD502C  LDRH	R5, [SP, #44]
0x854A	0xF8BD4028  LDRH	R4, [SP, #40]
0x854E	0x1B65    SUB	R5, R4, R5
0x8550	0xB2AD    UXTH	R5, R5
0x8552	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8556	0x192E    ADDS	R6, R5, R4
0x8558	0xF8BD502C  LDRH	R5, [SP, #44]
0x855C	0xF8BD4020  LDRH	R4, [SP, #32]
0x8560	0x1965    ADDS	R5, R4, R5
0x8562	0xB2AD    UXTH	R5, R5
0x8564	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8568	0x1B2C    SUB	R4, R5, R4
0x856A	0xB23A    SXTH	R2, R7
0x856C	0xB231    SXTH	R1, R6
0x856E	0xB220    SXTH	R0, R4
0x8570	0xF7FCFB6A  BL	_TFT_V_Line+0
;__Lib_TFT.c, 1055 :: 		
0x8574	0xF8BD501C  LDRH	R5, [SP, #28]
0x8578	0xF8BD4024  LDRH	R4, [SP, #36]
0x857C	0x1B67    SUB	R7, R4, R5
0x857E	0xF8BD502C  LDRH	R5, [SP, #44]
0x8582	0xF8BD401C  LDRH	R4, [SP, #28]
0x8586	0x1965    ADDS	R5, R4, R5
0x8588	0xB2AD    UXTH	R5, R5
0x858A	0xF9BD4008  LDRSH	R4, [SP, #8]
0x858E	0x1B2D    SUB	R5, R5, R4
0x8590	0xB2AD    UXTH	R5, R5
0x8592	0xF8BD401C  LDRH	R4, [SP, #28]
0x8596	0x1B2E    SUB	R6, R5, R4
0x8598	0x4C0E    LDR	R4, [PC, #56]
0x859A	0x8825    LDRH	R5, [R4, #0]
0x859C	0x4C0E    LDR	R4, [PC, #56]
0x859E	0x8824    LDRH	R4, [R4, #0]
0x85A0	0xB2BB    UXTH	R3, R7
0x85A2	0xB2B2    UXTH	R2, R6
0x85A4	0xB2A9    UXTH	R1, R5
0x85A6	0xB2A0    UXTH	R0, R4
0x85A8	0xF7FCF9B2  BL	_TFT_GetCurrentColor+0
0x85AC	0x2101    MOVS	R1, #1
0x85AE	0xF001F9FF  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 1056 :: 		
0x85B2	0xF8BD502C  LDRH	R5, [SP, #44]
0x85B6	0xF8BD401C  LDRH	R4, [SP, #28]
0x85BA	0xE00F    B	#30
0x85BC	0x2DFE2000  	__Lib_TFT_BrushColor+0
0x85C0	0x2E002000  	__Lib_TFT_GradientEnabled+0
0x85C4	0x2E062000  	__Lib_TFT_PenColor+0
0x85C8	0x2DE32000  	__Lib_TFT_BrushEnabled+0
0x85CC	0x2E102000  	__Lib_TFT_PenWidth+0
0x85D0	0x2E012000  	__Lib_TFT_GradientOrientation+0
0x85D4	0x2E042000  	__Lib_TFT_GradColorTo+0
0x85D8	0x2E022000  	__Lib_TFT_GradColorFrom+0
0x85DC	0x1965    ADDS	R5, R4, R5
0x85DE	0xB2AD    UXTH	R5, R5
0x85E0	0xF9BD4008  LDRSH	R4, [SP, #8]
0x85E4	0x1B2F    SUB	R7, R5, R4
0x85E6	0xF8BD502C  LDRH	R5, [SP, #44]
0x85EA	0xF8BD4028  LDRH	R4, [SP, #40]
0x85EE	0x1B65    SUB	R5, R4, R5
0x85F0	0xB2AD    UXTH	R5, R5
0x85F2	0xF9BD4006  LDRSH	R4, [SP, #6]
0x85F6	0x192E    ADDS	R6, R5, R4
0x85F8	0xF8BD502C  LDRH	R5, [SP, #44]
0x85FC	0xF8BD4020  LDRH	R4, [SP, #32]
0x8600	0x1965    ADDS	R5, R4, R5
0x8602	0xB2AD    UXTH	R5, R5
0x8604	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8608	0x1B2C    SUB	R4, R5, R4
0x860A	0xB23A    SXTH	R2, R7
0x860C	0xB231    SXTH	R1, R6
0x860E	0xB220    SXTH	R0, R4
0x8610	0xF7FCFB1A  BL	_TFT_V_Line+0
;__Lib_TFT.c, 1058 :: 		
0x8614	0xF8BD501C  LDRH	R5, [SP, #28]
0x8618	0xF8BD4024  LDRH	R4, [SP, #36]
0x861C	0x1B67    SUB	R7, R4, R5
0x861E	0xF8BD502C  LDRH	R5, [SP, #44]
0x8622	0xF8BD4024  LDRH	R4, [SP, #36]
0x8626	0x1B65    SUB	R5, R4, R5
0x8628	0xB2AD    UXTH	R5, R5
0x862A	0xF9BD4006  LDRSH	R4, [SP, #6]
0x862E	0x192D    ADDS	R5, R5, R4
0x8630	0xB2AD    UXTH	R5, R5
0x8632	0xF8BD401C  LDRH	R4, [SP, #28]
0x8636	0x1B2E    SUB	R6, R5, R4
0x8638	0x4CEC    LDR	R4, [PC, #944]
0x863A	0x8825    LDRH	R5, [R4, #0]
0x863C	0x4CEC    LDR	R4, [PC, #944]
0x863E	0x8824    LDRH	R4, [R4, #0]
0x8640	0xB2BB    UXTH	R3, R7
0x8642	0xB2B2    UXTH	R2, R6
0x8644	0xB2A9    UXTH	R1, R5
0x8646	0xB2A0    UXTH	R0, R4
0x8648	0xF7FCF962  BL	_TFT_GetCurrentColor+0
0x864C	0x2101    MOVS	R1, #1
0x864E	0xF001F9AF  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 1059 :: 		
0x8652	0xF8BD502C  LDRH	R5, [SP, #44]
0x8656	0xF8BD4024  LDRH	R4, [SP, #36]
0x865A	0xEBA40805  SUB	R8, R4, R5, LSL #0
0x865E	0xFA1FF888  UXTH	R8, R8
0x8662	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8666	0xEB080704  ADD	R7, R8, R4, LSL #0
0x866A	0xF9BD4008  LDRSH	R4, [SP, #8]
0x866E	0xEB080504  ADD	R5, R8, R4, LSL #0
0x8672	0xB2AD    UXTH	R5, R5
0x8674	0xF9BD4010  LDRSH	R4, [SP, #16]
0x8678	0x192E    ADDS	R6, R5, R4
0x867A	0xF9BD4008  LDRSH	R4, [SP, #8]
0x867E	0xEBA80504  SUB	R5, R8, R4, LSL #0
0x8682	0xB2AD    UXTH	R5, R5
0x8684	0xF9BD400A  LDRSH	R4, [SP, #10]
0x8688	0x192C    ADDS	R4, R5, R4
0x868A	0xB23A    SXTH	R2, R7
0x868C	0xB231    SXTH	R1, R6
0x868E	0xB220    SXTH	R0, R4
0x8690	0xF7FCFADA  BL	_TFT_V_Line+0
;__Lib_TFT.c, 1061 :: 		
0x8694	0xF8BD501C  LDRH	R5, [SP, #28]
0x8698	0xF8BD4024  LDRH	R4, [SP, #36]
0x869C	0x1B67    SUB	R7, R4, R5
0x869E	0xF8BD502C  LDRH	R5, [SP, #44]
0x86A2	0xF8BD401C  LDRH	R4, [SP, #28]
0x86A6	0x1965    ADDS	R5, R4, R5
0x86A8	0xB2AD    UXTH	R5, R5
0x86AA	0xF9BD4006  LDRSH	R4, [SP, #6]
0x86AE	0x1B2D    SUB	R5, R5, R4
0x86B0	0xB2AD    UXTH	R5, R5
0x86B2	0xF8BD401C  LDRH	R4, [SP, #28]
0x86B6	0x1B2E    SUB	R6, R5, R4
0x86B8	0x4CCC    LDR	R4, [PC, #816]
0x86BA	0x8825    LDRH	R5, [R4, #0]
0x86BC	0x4CCC    LDR	R4, [PC, #816]
0x86BE	0x8824    LDRH	R4, [R4, #0]
0x86C0	0xB2BB    UXTH	R3, R7
0x86C2	0xB2B2    UXTH	R2, R6
0x86C4	0xB2A9    UXTH	R1, R5
0x86C6	0xB2A0    UXTH	R0, R4
0x86C8	0xF7FCF922  BL	_TFT_GetCurrentColor+0
0x86CC	0x2101    MOVS	R1, #1
0x86CE	0xF001F96F  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 1062 :: 		
0x86D2	0xF8BD502C  LDRH	R5, [SP, #44]
0x86D6	0xF8BD401C  LDRH	R4, [SP, #28]
0x86DA	0xEB040805  ADD	R8, R4, R5, LSL #0
0x86DE	0xFA1FF888  UXTH	R8, R8
0x86E2	0xF9BD4006  LDRSH	R4, [SP, #6]
0x86E6	0xEBA80704  SUB	R7, R8, R4, LSL #0
0x86EA	0xF9BD4008  LDRSH	R4, [SP, #8]
0x86EE	0xEBA80504  SUB	R5, R8, R4, LSL #0
0x86F2	0xB2AD    UXTH	R5, R5
0x86F4	0xF9BD400C  LDRSH	R4, [SP, #12]
0x86F8	0x192E    ADDS	R6, R5, R4
0x86FA	0xF9BD4008  LDRSH	R4, [SP, #8]
0x86FE	0xEB080504  ADD	R5, R8, R4, LSL #0
0x8702	0xB2AD    UXTH	R5, R5
0x8704	0xF9BD400E  LDRSH	R4, [SP, #14]
0x8708	0x192C    ADDS	R4, R5, R4
0x870A	0xB23A    SXTH	R2, R7
0x870C	0xB231    SXTH	R1, R6
0x870E	0xB220    SXTH	R0, R4
0x8710	0xF7FCFA9A  BL	_TFT_V_Line+0
;__Lib_TFT.c, 1063 :: 		
L_TFT_Rectangle_Round_Edges137:
;__Lib_TFT.c, 1064 :: 		
0x8714	0xE088    B	L_TFT_Rectangle_Round_Edges138
L_TFT_Rectangle_Round_Edges135:
;__Lib_TFT.c, 1065 :: 		
0x8716	0xF8BD5016  LDRH	R5, [SP, #22]
0x871A	0x4CB6    LDR	R4, [PC, #728]
0x871C	0x8025    STRH	R5, [R4, #0]
;__Lib_TFT.c, 1066 :: 		
0x871E	0x2501    MOVS	R5, #1
0x8720	0x4CB5    LDR	R4, [PC, #724]
0x8722	0x7025    STRB	R5, [R4, #0]
;__Lib_TFT.c, 1067 :: 		
0x8724	0xF8BD502C  LDRH	R5, [SP, #44]
0x8728	0xF8BD4028  LDRH	R4, [SP, #40]
0x872C	0x1B65    SUB	R5, R4, R5
0x872E	0xB2AD    UXTH	R5, R5
0x8730	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8734	0x192F    ADDS	R7, R5, R4
0x8736	0xF8BD502C  LDRH	R5, [SP, #44]
0x873A	0xF8BD4024  LDRH	R4, [SP, #36]
0x873E	0x1B65    SUB	R5, R4, R5
0x8740	0xB2AD    UXTH	R5, R5
0x8742	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8746	0x192E    ADDS	R6, R5, R4
0x8748	0xF8BD502C  LDRH	R5, [SP, #44]
0x874C	0xF8BD401C  LDRH	R4, [SP, #28]
0x8750	0x1965    ADDS	R5, R4, R5
0x8752	0xB2AD    UXTH	R5, R5
0x8754	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8758	0x1B2C    SUB	R4, R5, R4
0x875A	0xB23A    SXTH	R2, R7
0x875C	0xB231    SXTH	R1, R6
0x875E	0xB220    SXTH	R0, R4
0x8760	0xF7FCF976  BL	_TFT_H_Line+0
;__Lib_TFT.c, 1068 :: 		
0x8764	0xF8BD502C  LDRH	R5, [SP, #44]
0x8768	0xF8BD4020  LDRH	R4, [SP, #32]
0x876C	0x1965    ADDS	R5, R4, R5
0x876E	0xB2AD    UXTH	R5, R5
0x8770	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8774	0x1B2F    SUB	R7, R5, R4
0x8776	0xF8BD502C  LDRH	R5, [SP, #44]
0x877A	0xF8BD4024  LDRH	R4, [SP, #36]
0x877E	0x1B65    SUB	R5, R4, R5
0x8780	0xB2AD    UXTH	R5, R5
0x8782	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8786	0x192E    ADDS	R6, R5, R4
0x8788	0xF8BD502C  LDRH	R5, [SP, #44]
0x878C	0xF8BD401C  LDRH	R4, [SP, #28]
0x8790	0x1965    ADDS	R5, R4, R5
0x8792	0xB2AD    UXTH	R5, R5
0x8794	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8798	0x1B2C    SUB	R4, R5, R4
0x879A	0xB23A    SXTH	R2, R7
0x879C	0xB231    SXTH	R1, R6
0x879E	0xB220    SXTH	R0, R4
0x87A0	0xF7FCF956  BL	_TFT_H_Line+0
;__Lib_TFT.c, 1069 :: 		
0x87A4	0xF8BD502C  LDRH	R5, [SP, #44]
0x87A8	0xF8BD4028  LDRH	R4, [SP, #40]
0x87AC	0xEBA40805  SUB	R8, R4, R5, LSL #0
0x87B0	0xFA1FF888  UXTH	R8, R8
0x87B4	0xF9BD4008  LDRSH	R4, [SP, #8]
0x87B8	0xEB080704  ADD	R7, R8, R4, LSL #0
0x87BC	0xF9BD4006  LDRSH	R4, [SP, #6]
0x87C0	0xEBA80504  SUB	R5, R8, R4, LSL #0
0x87C4	0xB2AD    UXTH	R5, R5
0x87C6	0xF9BD400E  LDRSH	R4, [SP, #14]
0x87CA	0x1B2E    SUB	R6, R5, R4
0x87CC	0xF9BD4006  LDRSH	R4, [SP, #6]
0x87D0	0xEB080504  ADD	R5, R8, R4, LSL #0
0x87D4	0xB2AD    UXTH	R5, R5
0x87D6	0xF9BD4010  LDRSH	R4, [SP, #16]
0x87DA	0x1B2C    SUB	R4, R5, R4
0x87DC	0xB23A    SXTH	R2, R7
0x87DE	0xB231    SXTH	R1, R6
0x87E0	0xB220    SXTH	R0, R4
0x87E2	0xF7FCF935  BL	_TFT_H_Line+0
;__Lib_TFT.c, 1070 :: 		
0x87E6	0xF8BD502C  LDRH	R5, [SP, #44]
0x87EA	0xF8BD4020  LDRH	R4, [SP, #32]
0x87EE	0xEB040805  ADD	R8, R4, R5, LSL #0
0x87F2	0xFA1FF888  UXTH	R8, R8
0x87F6	0xF9BD4008  LDRSH	R4, [SP, #8]
0x87FA	0xEBA80704  SUB	R7, R8, R4, LSL #0
0x87FE	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8802	0xEB080504  ADD	R5, R8, R4, LSL #0
0x8806	0xB2AD    UXTH	R5, R5
0x8808	0xF9BD400A  LDRSH	R4, [SP, #10]
0x880C	0x1B2E    SUB	R6, R5, R4
0x880E	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8812	0xEBA80504  SUB	R5, R8, R4, LSL #0
0x8816	0xB2AD    UXTH	R5, R5
0x8818	0xF9BD400C  LDRSH	R4, [SP, #12]
0x881C	0x1B2C    SUB	R4, R5, R4
0x881E	0xB23A    SXTH	R2, R7
0x8820	0xB231    SXTH	R1, R6
0x8822	0xB220    SXTH	R0, R4
0x8824	0xF7FCF914  BL	_TFT_H_Line+0
;__Lib_TFT.c, 1071 :: 		
L_TFT_Rectangle_Round_Edges138:
;__Lib_TFT.c, 1073 :: 		
0x8828	0xF9BD4004  LDRSH	R4, [SP, #4]
0x882C	0x2C00    CMP	R4, #0
0x882E	0xDA0B    BGE	L_TFT_Rectangle_Round_Edges139
;__Lib_TFT.c, 1074 :: 		
0x8830	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8834	0x00A4    LSLS	R4, R4, #2
0x8836	0xB224    SXTH	R4, R4
0x8838	0x1DA5    ADDS	R5, R4, #6
0x883A	0xB22D    SXTH	R5, R5
0x883C	0xF9BD4004  LDRSH	R4, [SP, #4]
0x8840	0x1964    ADDS	R4, R4, R5
0x8842	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 1075 :: 		
0x8846	0xE014    B	L_TFT_Rectangle_Round_Edges140
L_TFT_Rectangle_Round_Edges139:
;__Lib_TFT.c, 1076 :: 		
0x8848	0xF9BD5006  LDRSH	R5, [SP, #6]
0x884C	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8850	0x1B64    SUB	R4, R4, R5
0x8852	0xB224    SXTH	R4, R4
0x8854	0x00A4    LSLS	R4, R4, #2
0x8856	0xB224    SXTH	R4, R4
0x8858	0xF204050A  ADDW	R5, R4, #10
0x885C	0xB22D    SXTH	R5, R5
0x885E	0xF9BD4004  LDRSH	R4, [SP, #4]
0x8862	0x1964    ADDS	R4, R4, R5
0x8864	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 1077 :: 		
0x8868	0xF9BD4006  LDRSH	R4, [SP, #6]
0x886C	0x1E64    SUBS	R4, R4, #1
0x886E	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 1078 :: 		
L_TFT_Rectangle_Round_Edges140:
;__Lib_TFT.c, 1079 :: 		
0x8872	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8876	0x1C64    ADDS	R4, R4, #1
0x8878	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 1080 :: 		
0x887C	0xE529    B	L_TFT_Rectangle_Round_Edges133
L_TFT_Rectangle_Round_Edges134:
;__Lib_TFT.c, 1083 :: 		
0x887E	0xF89D4018  LDRB	R4, [SP, #24]
0x8882	0x2C00    CMP	R4, #0
0x8884	0xF0008072  BEQ	L_TFT_Rectangle_Round_Edges141
;__Lib_TFT.c, 1084 :: 		
0x8888	0x4C5C    LDR	R4, [PC, #368]
0x888A	0x7824    LDRB	R4, [R4, #0]
0x888C	0x2C00    CMP	R4, #0
0x888E	0xD136    BNE	L_TFT_Rectangle_Round_Edges142
;__Lib_TFT.c, 1085 :: 		
0x8890	0xF8BD502C  LDRH	R5, [SP, #44]
0x8894	0xF8BD4020  LDRH	R4, [SP, #32]
0x8898	0x1964    ADDS	R4, R4, R5
0x889A	0xF8AD4006  STRH	R4, [SP, #6]
L_TFT_Rectangle_Round_Edges143:
0x889E	0xF8BD502C  LDRH	R5, [SP, #44]
0x88A2	0xF8BD4028  LDRH	R4, [SP, #40]
0x88A6	0x1B65    SUB	R5, R4, R5
0x88A8	0xB2AD    UXTH	R5, R5
0x88AA	0xF9BD4006  LDRSH	R4, [SP, #6]
0x88AE	0x42AC    CMP	R4, R5
0x88B0	0xD824    BHI	L_TFT_Rectangle_Round_Edges144
;__Lib_TFT.c, 1086 :: 		
0x88B2	0xF8BD5020  LDRH	R5, [SP, #32]
0x88B6	0xF8BD4028  LDRH	R4, [SP, #40]
0x88BA	0x1B67    SUB	R7, R4, R5
0x88BC	0xF8BD5020  LDRH	R5, [SP, #32]
0x88C0	0xF9BD4006  LDRSH	R4, [SP, #6]
0x88C4	0x1B66    SUB	R6, R4, R5
0x88C6	0x4C49    LDR	R4, [PC, #292]
0x88C8	0x8825    LDRH	R5, [R4, #0]
0x88CA	0x4C49    LDR	R4, [PC, #292]
0x88CC	0x8824    LDRH	R4, [R4, #0]
0x88CE	0xB2BB    UXTH	R3, R7
0x88D0	0xB2B2    UXTH	R2, R6
0x88D2	0xB2A9    UXTH	R1, R5
0x88D4	0xB2A0    UXTH	R0, R4
0x88D6	0xF7FCF81B  BL	_TFT_GetCurrentColor+0
0x88DA	0x2101    MOVS	R1, #1
0x88DC	0xF001F868  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 1087 :: 		
0x88E0	0xF9BD2006  LDRSH	R2, [SP, #6]
0x88E4	0xF8BD1024  LDRH	R1, [SP, #36]
0x88E8	0xF8BD001C  LDRH	R0, [SP, #28]
0x88EC	0xF7FCF8B0  BL	_TFT_H_Line+0
;__Lib_TFT.c, 1085 :: 		
0x88F0	0xF9BD4006  LDRSH	R4, [SP, #6]
0x88F4	0x1C64    ADDS	R4, R4, #1
0x88F6	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 1088 :: 		
0x88FA	0xE7D0    B	L_TFT_Rectangle_Round_Edges143
L_TFT_Rectangle_Round_Edges144:
;__Lib_TFT.c, 1089 :: 		
0x88FC	0xE035    B	L_TFT_Rectangle_Round_Edges146
L_TFT_Rectangle_Round_Edges142:
;__Lib_TFT.c, 1090 :: 		
0x88FE	0xF8BD502C  LDRH	R5, [SP, #44]
0x8902	0xF8BD401C  LDRH	R4, [SP, #28]
0x8906	0x1964    ADDS	R4, R4, R5
0x8908	0xF8AD4008  STRH	R4, [SP, #8]
L_TFT_Rectangle_Round_Edges147:
0x890C	0xF8BD502C  LDRH	R5, [SP, #44]
0x8910	0xF8BD4024  LDRH	R4, [SP, #36]
0x8914	0x1B65    SUB	R5, R4, R5
0x8916	0xB2AD    UXTH	R5, R5
0x8918	0xF9BD4008  LDRSH	R4, [SP, #8]
0x891C	0x42AC    CMP	R4, R5
0x891E	0xD824    BHI	L_TFT_Rectangle_Round_Edges148
;__Lib_TFT.c, 1091 :: 		
0x8920	0xF8BD501C  LDRH	R5, [SP, #28]
0x8924	0xF8BD4024  LDRH	R4, [SP, #36]
0x8928	0x1B67    SUB	R7, R4, R5
0x892A	0xF8BD501C  LDRH	R5, [SP, #28]
0x892E	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8932	0x1B66    SUB	R6, R4, R5
0x8934	0x4C2D    LDR	R4, [PC, #180]
0x8936	0x8825    LDRH	R5, [R4, #0]
0x8938	0x4C2D    LDR	R4, [PC, #180]
0x893A	0x8824    LDRH	R4, [R4, #0]
0x893C	0xB2BB    UXTH	R3, R7
0x893E	0xB2B2    UXTH	R2, R6
0x8940	0xB2A9    UXTH	R1, R5
0x8942	0xB2A0    UXTH	R0, R4
0x8944	0xF7FBFFE4  BL	_TFT_GetCurrentColor+0
0x8948	0x2101    MOVS	R1, #1
0x894A	0xF001F831  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 1092 :: 		
0x894E	0xF9BD2008  LDRSH	R2, [SP, #8]
0x8952	0xF8BD1028  LDRH	R1, [SP, #40]
0x8956	0xF8BD0020  LDRH	R0, [SP, #32]
0x895A	0xF7FCF975  BL	_TFT_V_Line+0
;__Lib_TFT.c, 1090 :: 		
0x895E	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8962	0x1C64    ADDS	R4, R4, #1
0x8964	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 1093 :: 		
0x8968	0xE7D0    B	L_TFT_Rectangle_Round_Edges147
L_TFT_Rectangle_Round_Edges148:
;__Lib_TFT.c, 1094 :: 		
L_TFT_Rectangle_Round_Edges146:
;__Lib_TFT.c, 1095 :: 		
0x896A	0xE01E    B	L_TFT_Rectangle_Round_Edges150
L_TFT_Rectangle_Round_Edges141:
;__Lib_TFT.c, 1096 :: 		
0x896C	0xF8BD502C  LDRH	R5, [SP, #44]
0x8970	0xF8BD4020  LDRH	R4, [SP, #32]
0x8974	0x1964    ADDS	R4, R4, R5
0x8976	0xF8AD4006  STRH	R4, [SP, #6]
L_TFT_Rectangle_Round_Edges151:
0x897A	0xF8BD502C  LDRH	R5, [SP, #44]
0x897E	0xF8BD4028  LDRH	R4, [SP, #40]
0x8982	0x1B65    SUB	R5, R4, R5
0x8984	0xB2AD    UXTH	R5, R5
0x8986	0xF9BD4006  LDRSH	R4, [SP, #6]
0x898A	0x42AC    CMP	R4, R5
0x898C	0xD80D    BHI	L_TFT_Rectangle_Round_Edges152
;__Lib_TFT.c, 1097 :: 		
0x898E	0xF9BD2006  LDRSH	R2, [SP, #6]
0x8992	0xF8BD1024  LDRH	R1, [SP, #36]
0x8996	0xF8BD001C  LDRH	R0, [SP, #28]
0x899A	0xF7FCF859  BL	_TFT_H_Line+0
;__Lib_TFT.c, 1096 :: 		
0x899E	0xF9BD4006  LDRSH	R4, [SP, #6]
0x89A2	0x1C64    ADDS	R4, R4, #1
0x89A4	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 1097 :: 		
0x89A8	0xE7E7    B	L_TFT_Rectangle_Round_Edges151
L_TFT_Rectangle_Round_Edges152:
;__Lib_TFT.c, 1098 :: 		
L_TFT_Rectangle_Round_Edges150:
;__Lib_TFT.c, 1100 :: 		
0x89AA	0xF8BD5012  LDRH	R5, [SP, #18]
0x89AE	0x4C11    LDR	R4, [PC, #68]
0x89B0	0x8025    STRH	R5, [R4, #0]
;__Lib_TFT.c, 1101 :: 		
0x89B2	0xF89D5014  LDRB	R5, [SP, #20]
0x89B6	0x4C10    LDR	R4, [PC, #64]
0x89B8	0x7025    STRB	R5, [R4, #0]
;__Lib_TFT.c, 1102 :: 		
L_TFT_Rectangle_Round_Edges132:
;__Lib_TFT.c, 1105 :: 		
0x89BA	0x2400    MOVS	R4, #0
0x89BC	0xB224    SXTH	R4, R4
0x89BE	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 1106 :: 		
0x89C2	0xF8BD402C  LDRH	R4, [SP, #44]
0x89C6	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 1107 :: 		
0x89CA	0xF9BD402C  LDRSH	R4, [SP, #44]
0x89CE	0x0064    LSLS	R4, R4, #1
0x89D0	0xB224    SXTH	R4, R4
;__Lib_TFT.c, 1108 :: 		
0x89D2	0xF1C40403  RSB	R4, R4, #3
0x89D6	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 1109 :: 		
L_TFT_Rectangle_Round_Edges154:
0x89DA	0xF9BD4006  LDRSH	R4, [SP, #6]
0x89DE	0x1C65    ADDS	R5, R4, #1
0x89E0	0xB22D    SXTH	R5, R5
0x89E2	0xF9BD4008  LDRSH	R4, [SP, #8]
0x89E6	0x42AC    CMP	R4, R5
0x89E8	0xF000B80A  B	#20
0x89EC	0x2E042000  	__Lib_TFT_GradColorTo+0
0x89F0	0x2E022000  	__Lib_TFT_GradColorFrom+0
0x89F4	0x2E062000  	__Lib_TFT_PenColor+0
0x89F8	0x2E102000  	__Lib_TFT_PenWidth+0
0x89FC	0x2E012000  	__Lib_TFT_GradientOrientation+0
0x8A00	0xF280810B  BGE	L_TFT_Rectangle_Round_Edges155
;__Lib_TFT.c, 1110 :: 		
0x8A04	0x4CC9    LDR	R4, [PC, #804]
0x8A06	0x7824    LDRB	R4, [R4, #0]
0x8A08	0x1E64    SUBS	R4, R4, #1
0x8A0A	0xB224    SXTH	R4, R4
0x8A0C	0x1067    ASRS	R7, R4, #1
0x8A0E	0xF8BD502C  LDRH	R5, [SP, #44]
0x8A12	0xF8BD4028  LDRH	R4, [SP, #40]
0x8A16	0x1B65    SUB	R5, R4, R5
0x8A18	0xB2AD    UXTH	R5, R5
0x8A1A	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8A1E	0x192E    ADDS	R6, R5, R4
0x8A20	0xF8BD502C  LDRH	R5, [SP, #44]
0x8A24	0xF8BD401C  LDRH	R4, [SP, #28]
0x8A28	0x1965    ADDS	R5, R4, R5
0x8A2A	0xB2AD    UXTH	R5, R5
0x8A2C	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8A30	0x1B2C    SUB	R4, R5, R4
0x8A32	0x2301    MOVS	R3, #1
0x8A34	0xB23A    SXTH	R2, R7
0x8A36	0xB231    SXTH	R1, R6
0x8A38	0xB220    SXTH	R0, R4
0x8A3A	0xF7FEFB7B  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 1111 :: 		
0x8A3E	0x4CBB    LDR	R4, [PC, #748]
0x8A40	0x7824    LDRB	R4, [R4, #0]
0x8A42	0x1E64    SUBS	R4, R4, #1
0x8A44	0xB224    SXTH	R4, R4
0x8A46	0x1067    ASRS	R7, R4, #1
0x8A48	0xF8BD502C  LDRH	R5, [SP, #44]
0x8A4C	0xF8BD4028  LDRH	R4, [SP, #40]
0x8A50	0x1B65    SUB	R5, R4, R5
0x8A52	0xB2AD    UXTH	R5, R5
0x8A54	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8A58	0x192E    ADDS	R6, R5, R4
0x8A5A	0xF8BD502C  LDRH	R5, [SP, #44]
0x8A5E	0xF8BD4024  LDRH	R4, [SP, #36]
0x8A62	0x1B65    SUB	R5, R4, R5
0x8A64	0xB2AD    UXTH	R5, R5
0x8A66	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8A6A	0x192C    ADDS	R4, R5, R4
0x8A6C	0x2301    MOVS	R3, #1
0x8A6E	0xB23A    SXTH	R2, R7
0x8A70	0xB231    SXTH	R1, R6
0x8A72	0xB220    SXTH	R0, R4
0x8A74	0xF7FEFB5E  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 1112 :: 		
0x8A78	0x4CAC    LDR	R4, [PC, #688]
0x8A7A	0x7824    LDRB	R4, [R4, #0]
0x8A7C	0x1E64    SUBS	R4, R4, #1
0x8A7E	0xB224    SXTH	R4, R4
0x8A80	0x1067    ASRS	R7, R4, #1
0x8A82	0xF8BD502C  LDRH	R5, [SP, #44]
0x8A86	0xF8BD4020  LDRH	R4, [SP, #32]
0x8A8A	0x1965    ADDS	R5, R4, R5
0x8A8C	0xB2AD    UXTH	R5, R5
0x8A8E	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8A92	0x1B2E    SUB	R6, R5, R4
0x8A94	0xF8BD502C  LDRH	R5, [SP, #44]
0x8A98	0xF8BD401C  LDRH	R4, [SP, #28]
0x8A9C	0x1965    ADDS	R5, R4, R5
0x8A9E	0xB2AD    UXTH	R5, R5
0x8AA0	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8AA4	0x1B2C    SUB	R4, R5, R4
0x8AA6	0x2301    MOVS	R3, #1
0x8AA8	0xB23A    SXTH	R2, R7
0x8AAA	0xB231    SXTH	R1, R6
0x8AAC	0xB220    SXTH	R0, R4
0x8AAE	0xF7FEFB41  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 1113 :: 		
0x8AB2	0x4C9E    LDR	R4, [PC, #632]
0x8AB4	0x7824    LDRB	R4, [R4, #0]
0x8AB6	0x1E64    SUBS	R4, R4, #1
0x8AB8	0xB224    SXTH	R4, R4
0x8ABA	0x1067    ASRS	R7, R4, #1
0x8ABC	0xF8BD502C  LDRH	R5, [SP, #44]
0x8AC0	0xF8BD4020  LDRH	R4, [SP, #32]
0x8AC4	0x1965    ADDS	R5, R4, R5
0x8AC6	0xB2AD    UXTH	R5, R5
0x8AC8	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8ACC	0x1B2E    SUB	R6, R5, R4
0x8ACE	0xF8BD502C  LDRH	R5, [SP, #44]
0x8AD2	0xF8BD4024  LDRH	R4, [SP, #36]
0x8AD6	0x1B65    SUB	R5, R4, R5
0x8AD8	0xB2AD    UXTH	R5, R5
0x8ADA	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8ADE	0x192C    ADDS	R4, R5, R4
0x8AE0	0x2301    MOVS	R3, #1
0x8AE2	0xB23A    SXTH	R2, R7
0x8AE4	0xB231    SXTH	R1, R6
0x8AE6	0xB220    SXTH	R0, R4
0x8AE8	0xF7FEFB24  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 1114 :: 		
0x8AEC	0x4C8F    LDR	R4, [PC, #572]
0x8AEE	0x7824    LDRB	R4, [R4, #0]
0x8AF0	0x1E64    SUBS	R4, R4, #1
0x8AF2	0xB224    SXTH	R4, R4
0x8AF4	0x1067    ASRS	R7, R4, #1
0x8AF6	0xF8BD502C  LDRH	R5, [SP, #44]
0x8AFA	0xF8BD4028  LDRH	R4, [SP, #40]
0x8AFE	0x1B65    SUB	R5, R4, R5
0x8B00	0xB2AD    UXTH	R5, R5
0x8B02	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8B06	0x192E    ADDS	R6, R5, R4
0x8B08	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8B0C	0x192D    ADDS	R5, R5, R4
0x8B0E	0xB2AD    UXTH	R5, R5
0x8B10	0xF9BD4010  LDRSH	R4, [SP, #16]
0x8B14	0x1B2C    SUB	R4, R5, R4
0x8B16	0x2301    MOVS	R3, #1
0x8B18	0xB23A    SXTH	R2, R7
0x8B1A	0xB231    SXTH	R1, R6
0x8B1C	0xB220    SXTH	R0, R4
0x8B1E	0xF7FEFB09  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 1115 :: 		
0x8B22	0x4C82    LDR	R4, [PC, #520]
0x8B24	0x7824    LDRB	R4, [R4, #0]
0x8B26	0x1E64    SUBS	R4, R4, #1
0x8B28	0xB224    SXTH	R4, R4
0x8B2A	0x1067    ASRS	R7, R4, #1
0x8B2C	0xF8BD502C  LDRH	R5, [SP, #44]
0x8B30	0xF8BD4028  LDRH	R4, [SP, #40]
0x8B34	0x1B65    SUB	R5, R4, R5
0x8B36	0xB2AD    UXTH	R5, R5
0x8B38	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8B3C	0x192E    ADDS	R6, R5, R4
0x8B3E	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8B42	0x1B2D    SUB	R5, R5, R4
0x8B44	0xB2AD    UXTH	R5, R5
0x8B46	0xF9BD400E  LDRSH	R4, [SP, #14]
0x8B4A	0x1B2C    SUB	R4, R5, R4
0x8B4C	0x2301    MOVS	R3, #1
0x8B4E	0xB23A    SXTH	R2, R7
0x8B50	0xB231    SXTH	R1, R6
0x8B52	0xB220    SXTH	R0, R4
0x8B54	0xF7FEFAEE  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 1116 :: 		
0x8B58	0x4C74    LDR	R4, [PC, #464]
0x8B5A	0x7824    LDRB	R4, [R4, #0]
0x8B5C	0x1E64    SUBS	R4, R4, #1
0x8B5E	0xB224    SXTH	R4, R4
0x8B60	0x1067    ASRS	R7, R4, #1
0x8B62	0xF8BD502C  LDRH	R5, [SP, #44]
0x8B66	0xF8BD4020  LDRH	R4, [SP, #32]
0x8B6A	0x1965    ADDS	R5, R4, R5
0x8B6C	0xB2AD    UXTH	R5, R5
0x8B6E	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8B72	0x1B2E    SUB	R6, R5, R4
0x8B74	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8B78	0x1B2D    SUB	R5, R5, R4
0x8B7A	0xB2AD    UXTH	R5, R5
0x8B7C	0xF9BD400C  LDRSH	R4, [SP, #12]
0x8B80	0x1B2C    SUB	R4, R5, R4
0x8B82	0x2301    MOVS	R3, #1
0x8B84	0xB23A    SXTH	R2, R7
0x8B86	0xB231    SXTH	R1, R6
0x8B88	0xB220    SXTH	R0, R4
0x8B8A	0xF7FEFAD3  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 1117 :: 		
0x8B8E	0x4C67    LDR	R4, [PC, #412]
0x8B90	0x7824    LDRB	R4, [R4, #0]
0x8B92	0x1E64    SUBS	R4, R4, #1
0x8B94	0xB224    SXTH	R4, R4
0x8B96	0x1067    ASRS	R7, R4, #1
0x8B98	0xF8BD502C  LDRH	R5, [SP, #44]
0x8B9C	0xF8BD4020  LDRH	R4, [SP, #32]
0x8BA0	0x1965    ADDS	R5, R4, R5
0x8BA2	0xB2AD    UXTH	R5, R5
0x8BA4	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8BA8	0x1B2E    SUB	R6, R5, R4
0x8BAA	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8BAE	0x192D    ADDS	R5, R5, R4
0x8BB0	0xB2AD    UXTH	R5, R5
0x8BB2	0xF9BD400A  LDRSH	R4, [SP, #10]
0x8BB6	0x1B2C    SUB	R4, R5, R4
0x8BB8	0x2301    MOVS	R3, #1
0x8BBA	0xB23A    SXTH	R2, R7
0x8BBC	0xB231    SXTH	R1, R6
0x8BBE	0xB220    SXTH	R0, R4
0x8BC0	0xF7FEFAB8  BL	__Lib_TFT__TFT_Circle_Fill+0
;__Lib_TFT.c, 1119 :: 		
0x8BC4	0xF9BD4004  LDRSH	R4, [SP, #4]
0x8BC8	0x2C00    CMP	R4, #0
0x8BCA	0xDA0B    BGE	L_TFT_Rectangle_Round_Edges156
;__Lib_TFT.c, 1120 :: 		
0x8BCC	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8BD0	0x00A4    LSLS	R4, R4, #2
0x8BD2	0xB224    SXTH	R4, R4
0x8BD4	0x1DA5    ADDS	R5, R4, #6
0x8BD6	0xB22D    SXTH	R5, R5
0x8BD8	0xF9BD4004  LDRSH	R4, [SP, #4]
0x8BDC	0x1964    ADDS	R4, R4, R5
0x8BDE	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 1121 :: 		
0x8BE2	0xE014    B	L_TFT_Rectangle_Round_Edges157
L_TFT_Rectangle_Round_Edges156:
;__Lib_TFT.c, 1122 :: 		
0x8BE4	0xF9BD5006  LDRSH	R5, [SP, #6]
0x8BE8	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8BEC	0x1B64    SUB	R4, R4, R5
0x8BEE	0xB224    SXTH	R4, R4
0x8BF0	0x00A4    LSLS	R4, R4, #2
0x8BF2	0xB224    SXTH	R4, R4
0x8BF4	0xF204050A  ADDW	R5, R4, #10
0x8BF8	0xB22D    SXTH	R5, R5
0x8BFA	0xF9BD4004  LDRSH	R4, [SP, #4]
0x8BFE	0x1964    ADDS	R4, R4, R5
0x8C00	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 1123 :: 		
0x8C04	0xF9BD4006  LDRSH	R4, [SP, #6]
0x8C08	0x1E64    SUBS	R4, R4, #1
0x8C0A	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 1124 :: 		
L_TFT_Rectangle_Round_Edges157:
;__Lib_TFT.c, 1125 :: 		
0x8C0E	0xF9BD4008  LDRSH	R4, [SP, #8]
0x8C12	0x1C64    ADDS	R4, R4, #1
0x8C14	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 1126 :: 		
0x8C18	0xE6DF    B	L_TFT_Rectangle_Round_Edges154
L_TFT_Rectangle_Round_Edges155:
;__Lib_TFT.c, 1129 :: 		
0x8C1A	0xF8BD502C  LDRH	R5, [SP, #44]
0x8C1E	0xF8BD4024  LDRH	R4, [SP, #36]
0x8C22	0x1B66    SUB	R6, R4, R5
0x8C24	0xF8BD502C  LDRH	R5, [SP, #44]
0x8C28	0xF8BD401C  LDRH	R4, [SP, #28]
0x8C2C	0x1964    ADDS	R4, R4, R5
0x8C2E	0xF8BD3020  LDRH	R3, [SP, #32]
0x8C32	0xB232    SXTH	R2, R6
0x8C34	0xF8BD1020  LDRH	R1, [SP, #32]
0x8C38	0xB220    SXTH	R0, R4
0x8C3A	0xF7FBFC67  BL	_TFT_Line+0
;__Lib_TFT.c, 1130 :: 		
0x8C3E	0x4C3B    LDR	R4, [PC, #236]
0x8C40	0x7824    LDRB	R4, [R4, #0]
0x8C42	0xF0040401  AND	R4, R4, #1
0x8C46	0xB2E4    UXTB	R4, R4
0x8C48	0xB194    CBZ	R4, L_TFT_Rectangle_Round_Edges158
;__Lib_TFT.c, 1131 :: 		
0x8C4A	0xF8BD502C  LDRH	R5, [SP, #44]
0x8C4E	0xF8BD4024  LDRH	R4, [SP, #36]
0x8C52	0x1B66    SUB	R6, R4, R5
0x8C54	0xF8BD502C  LDRH	R5, [SP, #44]
0x8C58	0xF8BD401C  LDRH	R4, [SP, #28]
0x8C5C	0x1964    ADDS	R4, R4, R5
0x8C5E	0xF8BD3028  LDRH	R3, [SP, #40]
0x8C62	0xB232    SXTH	R2, R6
0x8C64	0xF8BD1028  LDRH	R1, [SP, #40]
0x8C68	0xB220    SXTH	R0, R4
0x8C6A	0xF7FBFC4F  BL	_TFT_Line+0
0x8C6E	0xE012    B	L_TFT_Rectangle_Round_Edges159
L_TFT_Rectangle_Round_Edges158:
;__Lib_TFT.c, 1133 :: 		
0x8C70	0xF8BD4028  LDRH	R4, [SP, #40]
0x8C74	0x1C67    ADDS	R7, R4, #1
0x8C76	0xF8BD502C  LDRH	R5, [SP, #44]
0x8C7A	0xF8BD4024  LDRH	R4, [SP, #36]
0x8C7E	0x1B66    SUB	R6, R4, R5
0x8C80	0xF8BD502C  LDRH	R5, [SP, #44]
0x8C84	0xF8BD401C  LDRH	R4, [SP, #28]
0x8C88	0x1964    ADDS	R4, R4, R5
0x8C8A	0xB23B    SXTH	R3, R7
0x8C8C	0xB232    SXTH	R2, R6
0x8C8E	0xB239    SXTH	R1, R7
0x8C90	0xB220    SXTH	R0, R4
0x8C92	0xF7FBFC3B  BL	_TFT_Line+0
L_TFT_Rectangle_Round_Edges159:
;__Lib_TFT.c, 1134 :: 		
0x8C96	0xF8BD502C  LDRH	R5, [SP, #44]
0x8C9A	0xF8BD4028  LDRH	R4, [SP, #40]
0x8C9E	0x1B66    SUB	R6, R4, R5
0x8CA0	0xF8BD502C  LDRH	R5, [SP, #44]
0x8CA4	0xF8BD4020  LDRH	R4, [SP, #32]
0x8CA8	0x1964    ADDS	R4, R4, R5
0x8CAA	0xB233    SXTH	R3, R6
0x8CAC	0xF8BD201C  LDRH	R2, [SP, #28]
0x8CB0	0xB221    SXTH	R1, R4
0x8CB2	0xF8BD001C  LDRH	R0, [SP, #28]
0x8CB6	0xF7FBFC29  BL	_TFT_Line+0
;__Lib_TFT.c, 1135 :: 		
0x8CBA	0x4C1C    LDR	R4, [PC, #112]
0x8CBC	0x7824    LDRB	R4, [R4, #0]
0x8CBE	0xF0040401  AND	R4, R4, #1
0x8CC2	0xB2E4    UXTB	R4, R4
0x8CC4	0xB194    CBZ	R4, L_TFT_Rectangle_Round_Edges160
;__Lib_TFT.c, 1136 :: 		
0x8CC6	0xF8BD502C  LDRH	R5, [SP, #44]
0x8CCA	0xF8BD4028  LDRH	R4, [SP, #40]
0x8CCE	0x1B66    SUB	R6, R4, R5
0x8CD0	0xF8BD502C  LDRH	R5, [SP, #44]
0x8CD4	0xF8BD4020  LDRH	R4, [SP, #32]
0x8CD8	0x1964    ADDS	R4, R4, R5
0x8CDA	0xB233    SXTH	R3, R6
0x8CDC	0xF8BD2024  LDRH	R2, [SP, #36]
0x8CE0	0xB221    SXTH	R1, R4
0x8CE2	0xF8BD0024  LDRH	R0, [SP, #36]
0x8CE6	0xF7FBFC11  BL	_TFT_Line+0
0x8CEA	0xE012    B	L_TFT_Rectangle_Round_Edges161
L_TFT_Rectangle_Round_Edges160:
;__Lib_TFT.c, 1138 :: 		
0x8CEC	0xF8BD502C  LDRH	R5, [SP, #44]
0x8CF0	0xF8BD4028  LDRH	R4, [SP, #40]
0x8CF4	0x1B67    SUB	R7, R4, R5
0x8CF6	0xF8BD4024  LDRH	R4, [SP, #36]
0x8CFA	0x1C66    ADDS	R6, R4, #1
0x8CFC	0xF8BD502C  LDRH	R5, [SP, #44]
0x8D00	0xF8BD4020  LDRH	R4, [SP, #32]
0x8D04	0x1964    ADDS	R4, R4, R5
0x8D06	0xB23B    SXTH	R3, R7
0x8D08	0xB232    SXTH	R2, R6
0x8D0A	0xB221    SXTH	R1, R4
0x8D0C	0xB230    SXTH	R0, R6
0x8D0E	0xF7FBFBFD  BL	_TFT_Line+0
L_TFT_Rectangle_Round_Edges161:
;__Lib_TFT.c, 1140 :: 		
0x8D12	0xF8BD5016  LDRH	R5, [SP, #22]
0x8D16	0x4C06    LDR	R4, [PC, #24]
0x8D18	0x8025    STRH	R5, [R4, #0]
;__Lib_TFT.c, 1141 :: 		
0x8D1A	0xF89D5018  LDRB	R5, [SP, #24]
0x8D1E	0x4C05    LDR	R4, [PC, #20]
0x8D20	0x7025    STRB	R5, [R4, #0]
;__Lib_TFT.c, 1142 :: 		
L_end_TFT_Rectangle_Round_Edges:
0x8D22	0xF8DDE000  LDR	LR, [SP, #0]
0x8D26	0xB00B    ADD	SP, SP, #44
0x8D28	0x4770    BX	LR
0x8D2A	0xBF00    NOP
0x8D2C	0x2E102000  	__Lib_TFT_PenWidth+0
0x8D30	0x2DFE2000  	__Lib_TFT_BrushColor+0
0x8D34	0x2E002000  	__Lib_TFT_GradientEnabled+0
; end of _TFT_Rectangle_Round_Edges
_TFT_Line:
;__Lib_TFT.c, 656 :: 		
; y2 start address is: 12 (R3)
; x2 start address is: 8 (R2)
0x450C	0xB088    SUB	SP, SP, #32
0x450E	0xF8CDE000  STR	LR, [SP, #0]
0x4512	0xF8AD0018  STRH	R0, [SP, #24]
0x4516	0xF8AD101C  STRH	R1, [SP, #28]
0x451A	0xB21D    SXTH	R5, R3
0x451C	0xB213    SXTH	R3, R2
; y2 end address is: 12 (R3)
; x2 end address is: 8 (R2)
; x2 start address is: 12 (R3)
; y2 start address is: 20 (R5)
;__Lib_TFT.c, 666 :: 		
0x451E	0xB2A9    UXTH	R1, R5
0x4520	0xB298    UXTH	R0, R3
0x4522	0xF004FEC9  BL	_TFT_Move_Cursor+0
;__Lib_TFT.c, 669 :: 		
0x4526	0xF9BD4018  LDRSH	R4, [SP, #24]
0x452A	0x429C    CMP	R4, R3
0x452C	0xD107    BNE	L_TFT_Line53
; x2 end address is: 12 (R3)
;__Lib_TFT.c, 670 :: 		
0x452E	0xF9BD2018  LDRSH	R2, [SP, #24]
0x4532	0xB229    SXTH	R1, R5
; y2 end address is: 20 (R5)
0x4534	0xF9BD001C  LDRSH	R0, [SP, #28]
0x4538	0xF000FB86  BL	_TFT_V_Line+0
;__Lib_TFT.c, 671 :: 		
0x453C	0xE12A    B	L_end_TFT_Line
;__Lib_TFT.c, 672 :: 		
L_TFT_Line53:
;__Lib_TFT.c, 674 :: 		
; y2 start address is: 20 (R5)
; x2 start address is: 12 (R3)
0x453E	0xF9BD401C  LDRSH	R4, [SP, #28]
0x4542	0x42AC    CMP	R4, R5
0x4544	0xD107    BNE	L_TFT_Line54
; y2 end address is: 20 (R5)
;__Lib_TFT.c, 675 :: 		
0x4546	0xF9BD201C  LDRSH	R2, [SP, #28]
0x454A	0xB219    SXTH	R1, R3
; x2 end address is: 12 (R3)
0x454C	0xF9BD0018  LDRSH	R0, [SP, #24]
0x4550	0xF000FA7E  BL	_TFT_H_Line+0
;__Lib_TFT.c, 676 :: 		
0x4554	0xE11E    B	L_end_TFT_Line
;__Lib_TFT.c, 677 :: 		
L_TFT_Line54:
;__Lib_TFT.c, 680 :: 		
; y2 start address is: 20 (R5)
; x2 start address is: 12 (R3)
0x4556	0x2400    MOVS	R4, #0
0x4558	0xF8AD4012  STRH	R4, [SP, #18]
;__Lib_TFT.c, 681 :: 		
0x455C	0xF9BD4018  LDRSH	R4, [SP, #24]
0x4560	0x1B1C    SUB	R4, R3, R4
0x4562	0xB224    SXTH	R4, R4
; x2 end address is: 12 (R3)
0x4564	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 682 :: 		
0x4568	0x2C00    CMP	R4, #0
0x456A	0xDA0A    BGE	L_TFT_Line55
;__Lib_TFT.c, 683 :: 		
0x456C	0xF9BD4008  LDRSH	R4, [SP, #8]
0x4570	0x4264    RSBS	R4, R4, #0
0x4572	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 684 :: 		
0x4576	0xF8BD4012  LDRH	R4, [SP, #18]
0x457A	0x1E64    SUBS	R4, R4, #1
0x457C	0xF8AD4012  STRH	R4, [SP, #18]
;__Lib_TFT.c, 685 :: 		
0x4580	0xE004    B	L_TFT_Line56
L_TFT_Line55:
;__Lib_TFT.c, 686 :: 		
0x4582	0xF8BD4012  LDRH	R4, [SP, #18]
0x4586	0x1C64    ADDS	R4, R4, #1
0x4588	0xF8AD4012  STRH	R4, [SP, #18]
;__Lib_TFT.c, 687 :: 		
L_TFT_Line56:
;__Lib_TFT.c, 689 :: 		
0x458C	0x2400    MOVS	R4, #0
0x458E	0xF8AD4014  STRH	R4, [SP, #20]
;__Lib_TFT.c, 690 :: 		
0x4592	0xF9BD401C  LDRSH	R4, [SP, #28]
0x4596	0x1B2C    SUB	R4, R5, R4
0x4598	0xB224    SXTH	R4, R4
; y2 end address is: 20 (R5)
0x459A	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT.c, 691 :: 		
0x459E	0x2C00    CMP	R4, #0
0x45A0	0xDA0A    BGE	L_TFT_Line57
;__Lib_TFT.c, 692 :: 		
0x45A2	0xF9BD400A  LDRSH	R4, [SP, #10]
0x45A6	0x4264    RSBS	R4, R4, #0
0x45A8	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT.c, 693 :: 		
0x45AC	0xF8BD4014  LDRH	R4, [SP, #20]
0x45B0	0x1E64    SUBS	R4, R4, #1
0x45B2	0xF8AD4014  STRH	R4, [SP, #20]
;__Lib_TFT.c, 694 :: 		
0x45B6	0xE004    B	L_TFT_Line58
L_TFT_Line57:
;__Lib_TFT.c, 695 :: 		
0x45B8	0xF8BD4014  LDRH	R4, [SP, #20]
0x45BC	0x1C64    ADDS	R4, R4, #1
0x45BE	0xF8AD4014  STRH	R4, [SP, #20]
;__Lib_TFT.c, 696 :: 		
L_TFT_Line58:
;__Lib_TFT.c, 698 :: 		
0x45C2	0x2400    MOVS	R4, #0
0x45C4	0xF8AD4016  STRH	R4, [SP, #22]
;__Lib_TFT.c, 699 :: 		
0x45C8	0xF9BD500A  LDRSH	R5, [SP, #10]
0x45CC	0xF9BD4008  LDRSH	R4, [SP, #8]
0x45D0	0x42AC    CMP	R4, R5
0x45D2	0xDA46    BGE	L_TFT_Line59
;__Lib_TFT.c, 700 :: 		
0x45D4	0xF8BD4016  LDRH	R4, [SP, #22]
0x45D8	0x1C64    ADDS	R4, R4, #1
0x45DA	0xF8AD4016  STRH	R4, [SP, #22]
;__Lib_TFT.c, 701 :: 		
; temp start address is: 0 (R0)
0x45DE	0xF9BD0008  LDRSH	R0, [SP, #8]
;__Lib_TFT.c, 702 :: 		
0x45E2	0xF9BD400A  LDRSH	R4, [SP, #10]
0x45E6	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 703 :: 		
0x45EA	0xF8AD000A  STRH	R0, [SP, #10]
;__Lib_TFT.c, 704 :: 		
0x45EE	0xF9BD0018  LDRSH	R0, [SP, #24]
;__Lib_TFT.c, 705 :: 		
0x45F2	0xF9BD401C  LDRSH	R4, [SP, #28]
0x45F6	0xF8AD4018  STRH	R4, [SP, #24]
;__Lib_TFT.c, 706 :: 		
0x45FA	0xF8AD001C  STRH	R0, [SP, #28]
;__Lib_TFT.c, 707 :: 		
0x45FE	0xF8BD0012  LDRH	R0, [SP, #18]
;__Lib_TFT.c, 708 :: 		
0x4602	0xF8BD4014  LDRH	R4, [SP, #20]
0x4606	0xF8AD4012  STRH	R4, [SP, #18]
;__Lib_TFT.c, 709 :: 		
0x460A	0xF8AD0014  STRH	R0, [SP, #20]
; temp end address is: 0 (R0)
;__Lib_TFT.c, 710 :: 		
; thick start address is: 40 (R10)
0x460E	0xF2400A01  MOVW	R10, #1
; thick end address is: 40 (R10)
0x4612	0xFA5FF08A  UXTB	R0, R10
L_TFT_Line60:
; thick start address is: 0 (R0)
0x4616	0x4C61    LDR	R4, [PC, #388]
0x4618	0x7824    LDRB	R4, [R4, #0]
0x461A	0x42A0    CMP	R0, R4
0x461C	0xD820    BHI	L_TFT_Line61
;__Lib_TFT.c, 711 :: 		
; offset start address is: 4 (R1)
0x461E	0xB2C1    UXTB	R1, R0
;__Lib_TFT.c, 712 :: 		
0x4620	0xF0010401  AND	R4, R1, #1
0x4624	0xB224    SXTH	R4, R4
0x4626	0xB91C    CBNZ	R4, L__TFT_Line950
;__Lib_TFT.c, 713 :: 		
0x4628	0x424A    RSBS	R2, R1, #0
0x462A	0xB212    SXTH	R2, R2
; offset end address is: 4 (R1)
; offset start address is: 8 (R2)
; offset end address is: 8 (R2)
0x462C	0xB211    SXTH	R1, R2
0x462E	0xE7FF    B	L_TFT_Line63
L__TFT_Line950:
;__Lib_TFT.c, 712 :: 		
;__Lib_TFT.c, 713 :: 		
L_TFT_Line63:
;__Lib_TFT.c, 714 :: 		
; offset start address is: 4 (R1)
0x4630	0x104E    ASRS	R6, R1, #1
0x4632	0xB236    SXTH	R6, R6
; offset end address is: 4 (R1)
;__Lib_TFT.c, 716 :: 		
0x4634	0x4C5A    LDR	R4, [PC, #360]
0x4636	0x8825    LDRH	R5, [R4, #0]
0x4638	0xF9BD401C  LDRSH	R4, [SP, #28]
0x463C	0x19A4    ADDS	R4, R4, R6
0x463E	0xF88D0004  STRB	R0, [SP, #4]
0x4642	0xB2AA    UXTH	R2, R5
0x4644	0xF9BD1018  LDRSH	R1, [SP, #24]
0x4648	0xB220    SXTH	R0, R4
0x464A	0xF000F9BD  BL	_TFT_Dot+0
0x464E	0xF89D0004  LDRB	R0, [SP, #4]
;__Lib_TFT.c, 710 :: 		
0x4652	0xF1000A01  ADD	R10, R0, #1
0x4656	0xFA5FFA8A  UXTB	R10, R10
; thick end address is: 0 (R0)
; thick start address is: 40 (R10)
;__Lib_TFT.c, 717 :: 		
0x465A	0xFA5FF08A  UXTB	R0, R10
; thick end address is: 40 (R10)
0x465E	0xE7DA    B	L_TFT_Line60
L_TFT_Line61:
;__Lib_TFT.c, 718 :: 		
0x4660	0xE027    B	L_TFT_Line64
L_TFT_Line59:
;__Lib_TFT.c, 719 :: 		
; thick start address is: 40 (R10)
0x4662	0xF2400A01  MOVW	R10, #1
; thick end address is: 40 (R10)
0x4666	0xFA5FF08A  UXTB	R0, R10
L_TFT_Line65:
; thick start address is: 0 (R0)
0x466A	0x4C4C    LDR	R4, [PC, #304]
0x466C	0x7824    LDRB	R4, [R4, #0]
0x466E	0x42A0    CMP	R0, R4
0x4670	0xD81F    BHI	L_TFT_Line66
;__Lib_TFT.c, 720 :: 		
; offset start address is: 4 (R1)
0x4672	0xB2C1    UXTB	R1, R0
;__Lib_TFT.c, 721 :: 		
0x4674	0xF0010401  AND	R4, R1, #1
0x4678	0xB224    SXTH	R4, R4
0x467A	0xB91C    CBNZ	R4, L__TFT_Line951
;__Lib_TFT.c, 722 :: 		
0x467C	0x424C    RSBS	R4, R1, #0
; offset end address is: 4 (R1)
; offset start address is: 8 (R2)
0x467E	0xB222    SXTH	R2, R4
; offset end address is: 8 (R2)
0x4680	0xB211    SXTH	R1, R2
0x4682	0xE7FF    B	L_TFT_Line68
L__TFT_Line951:
;__Lib_TFT.c, 721 :: 		
;__Lib_TFT.c, 722 :: 		
L_TFT_Line68:
;__Lib_TFT.c, 723 :: 		
; offset start address is: 4 (R1)
0x4684	0x104E    ASRS	R6, R1, #1
0x4686	0xB236    SXTH	R6, R6
; offset end address is: 4 (R1)
;__Lib_TFT.c, 725 :: 		
0x4688	0x4C45    LDR	R4, [PC, #276]
0x468A	0x8825    LDRH	R5, [R4, #0]
0x468C	0xF9BD401C  LDRSH	R4, [SP, #28]
0x4690	0x19A4    ADDS	R4, R4, R6
0x4692	0xF88D0004  STRB	R0, [SP, #4]
0x4696	0xB2AA    UXTH	R2, R5
0x4698	0xB221    SXTH	R1, R4
0x469A	0xF9BD0018  LDRSH	R0, [SP, #24]
0x469E	0xF000F993  BL	_TFT_Dot+0
0x46A2	0xF89D0004  LDRB	R0, [SP, #4]
;__Lib_TFT.c, 719 :: 		
0x46A6	0x1C44    ADDS	R4, R0, #1
; thick end address is: 0 (R0)
; thick start address is: 40 (R10)
0x46A8	0xFA5FFA84  UXTB	R10, R4
;__Lib_TFT.c, 726 :: 		
0x46AC	0xFA5FF08A  UXTB	R0, R10
; thick end address is: 40 (R10)
0x46B0	0xE7DB    B	L_TFT_Line65
L_TFT_Line66:
;__Lib_TFT.c, 727 :: 		
L_TFT_Line64:
;__Lib_TFT.c, 730 :: 		
0x46B2	0xF9BD4008  LDRSH	R4, [SP, #8]
0x46B6	0x0064    LSLS	R4, R4, #1
0x46B8	0xF8AD4010  STRH	R4, [SP, #16]
;__Lib_TFT.c, 733 :: 		
0x46BC	0xF9BD400A  LDRSH	R4, [SP, #10]
0x46C0	0x0065    LSLS	R5, R4, #1
0x46C2	0xB22D    SXTH	R5, R5
0x46C4	0xF8AD500E  STRH	R5, [SP, #14]
;__Lib_TFT.c, 736 :: 		
0x46C8	0xF9BD4008  LDRSH	R4, [SP, #8]
0x46CC	0x1B2C    SUB	R4, R5, R4
0x46CE	0xF8AD400C  STRH	R4, [SP, #12]
;__Lib_TFT.c, 738 :: 		
L_TFT_Line69:
0x46D2	0xF9BD4008  LDRSH	R4, [SP, #8]
0x46D6	0x1E64    SUBS	R4, R4, #1
0x46D8	0xB224    SXTH	R4, R4
0x46DA	0xF8AD4008  STRH	R4, [SP, #8]
0x46DE	0x2C00    CMP	R4, #0
0x46E0	0xDB58    BLT	L_TFT_Line70
;__Lib_TFT.c, 739 :: 		
0x46E2	0xF9BD400C  LDRSH	R4, [SP, #12]
0x46E6	0x2C00    CMP	R4, #0
0x46E8	0xDB0D    BLT	L_TFT_Line71
;__Lib_TFT.c, 740 :: 		
0x46EA	0xF8BD5014  LDRH	R5, [SP, #20]
0x46EE	0xF9BD401C  LDRSH	R4, [SP, #28]
0x46F2	0x1964    ADDS	R4, R4, R5
0x46F4	0xF8AD401C  STRH	R4, [SP, #28]
;__Lib_TFT.c, 741 :: 		
0x46F8	0xF9BD5010  LDRSH	R5, [SP, #16]
0x46FC	0xF9BD400C  LDRSH	R4, [SP, #12]
0x4700	0x1B64    SUB	R4, R4, R5
0x4702	0xF8AD400C  STRH	R4, [SP, #12]
;__Lib_TFT.c, 742 :: 		
L_TFT_Line71:
;__Lib_TFT.c, 744 :: 		
0x4706	0xF8BD5012  LDRH	R5, [SP, #18]
0x470A	0xF9BD4018  LDRSH	R4, [SP, #24]
0x470E	0x1964    ADDS	R4, R4, R5
0x4710	0xF8AD4018  STRH	R4, [SP, #24]
;__Lib_TFT.c, 745 :: 		
0x4714	0xF9BD500E  LDRSH	R5, [SP, #14]
0x4718	0xF9BD400C  LDRSH	R4, [SP, #12]
0x471C	0x1964    ADDS	R4, R4, R5
0x471E	0xF8AD400C  STRH	R4, [SP, #12]
;__Lib_TFT.c, 747 :: 		
; thick start address is: 0 (R0)
0x4722	0x2001    MOVS	R0, #1
; thick end address is: 0 (R0)
L_TFT_Line72:
; thick start address is: 0 (R0)
0x4724	0x4C1D    LDR	R4, [PC, #116]
0x4726	0x7824    LDRB	R4, [R4, #0]
0x4728	0x42A0    CMP	R0, R4
0x472A	0xD832    BHI	L_TFT_Line73
;__Lib_TFT.c, 748 :: 		
; offset start address is: 20 (R5)
0x472C	0xB2C5    UXTB	R5, R0
;__Lib_TFT.c, 749 :: 		
0x472E	0xF0050401  AND	R4, R5, #1
0x4732	0xB224    SXTH	R4, R4
0x4734	0xB914    CBNZ	R4, L__TFT_Line952
;__Lib_TFT.c, 750 :: 		
0x4736	0x4269    RSBS	R1, R5, #0
0x4738	0xB209    SXTH	R1, R1
; offset end address is: 20 (R5)
; offset start address is: 4 (R1)
; offset end address is: 4 (R1)
0x473A	0xE000    B	L_TFT_Line75
L__TFT_Line952:
;__Lib_TFT.c, 749 :: 		
0x473C	0xB229    SXTH	R1, R5
;__Lib_TFT.c, 750 :: 		
L_TFT_Line75:
;__Lib_TFT.c, 751 :: 		
; offset start address is: 4 (R1)
0x473E	0x1049    ASRS	R1, R1, #1
0x4740	0xB209    SXTH	R1, R1
;__Lib_TFT.c, 753 :: 		
0x4742	0xF8BD4016  LDRH	R4, [SP, #22]
0x4746	0xB17C    CBZ	R4, L_TFT_Line76
;__Lib_TFT.c, 754 :: 		
0x4748	0x4C15    LDR	R4, [PC, #84]
0x474A	0x8825    LDRH	R5, [R4, #0]
0x474C	0xF9BD401C  LDRSH	R4, [SP, #28]
0x4750	0x1864    ADDS	R4, R4, R1
; offset end address is: 4 (R1)
0x4752	0xF88D0004  STRB	R0, [SP, #4]
0x4756	0xB2AA    UXTH	R2, R5
0x4758	0xF9BD1018  LDRSH	R1, [SP, #24]
0x475C	0xB220    SXTH	R0, R4
0x475E	0xF000F933  BL	_TFT_Dot+0
0x4762	0xF89D0004  LDRB	R0, [SP, #4]
0x4766	0xE00E    B	L_TFT_Line77
L_TFT_Line76:
;__Lib_TFT.c, 756 :: 		
; offset start address is: 4 (R1)
0x4768	0x4C0D    LDR	R4, [PC, #52]
0x476A	0x8825    LDRH	R5, [R4, #0]
0x476C	0xF9BD401C  LDRSH	R4, [SP, #28]
0x4770	0x1864    ADDS	R4, R4, R1
; offset end address is: 4 (R1)
0x4772	0xF88D0004  STRB	R0, [SP, #4]
0x4776	0xB2AA    UXTH	R2, R5
0x4778	0xB221    SXTH	R1, R4
0x477A	0xF9BD0018  LDRSH	R0, [SP, #24]
0x477E	0xF000F923  BL	_TFT_Dot+0
0x4782	0xF89D0004  LDRB	R0, [SP, #4]
L_TFT_Line77:
;__Lib_TFT.c, 747 :: 		
0x4786	0x1C44    ADDS	R4, R0, #1
; thick end address is: 0 (R0)
; thick start address is: 32 (R8)
0x4788	0xFA5FF884  UXTB	R8, R4
;__Lib_TFT.c, 758 :: 		
0x478C	0xFA5FF088  UXTB	R0, R8
; thick end address is: 32 (R8)
0x4790	0xE7C8    B	L_TFT_Line72
L_TFT_Line73:
;__Lib_TFT.c, 759 :: 		
0x4792	0xE79E    B	L_TFT_Line69
L_TFT_Line70:
;__Lib_TFT.c, 760 :: 		
L_end_TFT_Line:
0x4794	0xF8DDE000  LDR	LR, [SP, #0]
0x4798	0xB008    ADD	SP, SP, #32
0x479A	0x4770    BX	LR
0x479C	0x2E102000  	__Lib_TFT_PenWidth+0
0x47A0	0x2E062000  	__Lib_TFT_PenColor+0
; end of _TFT_Line
_TFT_Set_Ext_Font:
;__Lib_TFT.c, 3336 :: 		
; activeFont start address is: 0 (R0)
0x8008	0xB083    SUB	SP, SP, #12
0x800A	0xF8CDE000  STR	LR, [SP, #0]
0x800E	0xF8AD1004  STRH	R1, [SP, #4]
0x8012	0xF88D2008  STRB	R2, [SP, #8]
; activeFont end address is: 0 (R0)
; activeFont start address is: 0 (R0)
;__Lib_TFT.c, 3340 :: 		
0x8016	0x4B15    LDR	R3, [PC, #84]
0x8018	0x6018    STR	R0, [R3, #0]
;__Lib_TFT.c, 3342 :: 		
0x801A	0x2108    MOVS	R1, #8
; activeFont end address is: 0 (R0)
0x801C	0xF7FCFF30  BL	__Lib_TFT__TFT_getHeader+0
;__Lib_TFT.c, 3343 :: 		
; ptr start address is: 0 (R0)
0x8020	0x4813    LDR	R0, [PC, #76]
;__Lib_TFT.c, 3345 :: 		
0x8022	0x1C83    ADDS	R3, R0, #2
0x8024	0x781C    LDRB	R4, [R3, #0]
0x8026	0x1CC3    ADDS	R3, R0, #3
0x8028	0x781B    LDRB	R3, [R3, #0]
0x802A	0x021B    LSLS	R3, R3, #8
0x802C	0xB29B    UXTH	R3, R3
0x802E	0x18E4    ADDS	R4, R4, R3
0x8030	0x4B10    LDR	R3, [PC, #64]
0x8032	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 3346 :: 		
0x8034	0x1D03    ADDS	R3, R0, #4
0x8036	0x781C    LDRB	R4, [R3, #0]
0x8038	0x1D43    ADDS	R3, R0, #5
0x803A	0x781B    LDRB	R3, [R3, #0]
0x803C	0x021B    LSLS	R3, R3, #8
0x803E	0xB29B    UXTH	R3, R3
0x8040	0x18E4    ADDS	R4, R4, R3
0x8042	0x4B0D    LDR	R3, [PC, #52]
0x8044	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 3347 :: 		
0x8046	0x1D83    ADDS	R3, R0, #6
; ptr end address is: 0 (R0)
0x8048	0x781C    LDRB	R4, [R3, #0]
0x804A	0x4B0C    LDR	R3, [PC, #48]
0x804C	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 3349 :: 		
0x804E	0xF8BD4004  LDRH	R4, [SP, #4]
0x8052	0x4B0B    LDR	R3, [PC, #44]
0x8054	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 3350 :: 		
0x8056	0xF89D4008  LDRB	R4, [SP, #8]
0x805A	0x4B0A    LDR	R3, [PC, #40]
0x805C	0x701C    STRB	R4, [R3, #0]
;__Lib_TFT.c, 3351 :: 		
0x805E	0x2401    MOVS	R4, #1
0x8060	0x4B09    LDR	R3, [PC, #36]
0x8062	0x701C    STRB	R4, [R3, #0]
;__Lib_TFT.c, 3352 :: 		
L_end_TFT_Set_Ext_Font:
0x8064	0xF8DDE000  LDR	LR, [SP, #0]
0x8068	0xB003    ADD	SP, SP, #12
0x806A	0x4770    BX	LR
0x806C	0x2E202000  	__Lib_TFT_activeExtFont+0
0x8070	0x2DE82000  	__Lib_TFT_headerBuffer+0
0x8074	0x2E122000  	__Lib_TFT__fontFirstChar+0
0x8078	0x2E182000  	__Lib_TFT__fontLastChar+0
0x807C	0x2E1A2000  	__Lib_TFT__fontHeight+0
0x8080	0x2E1C2000  	__Lib_TFT_FontColor+0
0x8084	0x2E112000  	__Lib_TFT_FontOrientation+0
0x8088	0x2E1E2000  	_ExternalFontSet+0
; end of _TFT_Set_Ext_Font
_TFT_Write_Text_Return_Pos:
;__Lib_TFT.c, 1290 :: 		
; y start address is: 8 (R2)
; x start address is: 4 (R1)
0x8D38	0xB083    SUB	SP, SP, #12
0x8D3A	0xF8CDE000  STR	LR, [SP, #0]
0x8D3E	0x9002    STR	R0, [SP, #8]
0x8D40	0xB290    UXTH	R0, R2
; y end address is: 8 (R2)
; x end address is: 4 (R1)
; x start address is: 4 (R1)
; y start address is: 0 (R0)
;__Lib_TFT.c, 1292 :: 		
0x8D42	0xF2400300  MOVW	R3, #0
0x8D46	0xF8AD3004  STRH	R3, [SP, #4]
;__Lib_TFT.c, 1294 :: 		
0x8D4A	0x4B1E    LDR	R3, [PC, #120]
0x8D4C	0x881B    LDRH	R3, [R3, #0]
0x8D4E	0x4299    CMP	R1, R3
0x8D50	0xD300    BCC	L_TFT_Write_Text_Return_Pos196
; x end address is: 4 (R1)
; y end address is: 0 (R0)
;__Lib_TFT.c, 1295 :: 		
0x8D52	0xE032    B	L_end_TFT_Write_Text_Return_Pos
L_TFT_Write_Text_Return_Pos196:
;__Lib_TFT.c, 1296 :: 		
; y start address is: 0 (R0)
0x8D54	0x4B1C    LDR	R3, [PC, #112]
0x8D56	0x881B    LDRH	R3, [R3, #0]
0x8D58	0x4298    CMP	R0, R3
0x8D5A	0xD300    BCC	L_TFT_Write_Text_Return_Pos197
; y end address is: 0 (R0)
;__Lib_TFT.c, 1297 :: 		
0x8D5C	0xE02D    B	L_end_TFT_Write_Text_Return_Pos
L_TFT_Write_Text_Return_Pos197:
;__Lib_TFT.c, 1300 :: 		
0x8D5E	0x2400    MOVS	R4, #0
0x8D60	0x4B1A    LDR	R3, [PC, #104]
0x8D62	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 1301 :: 		
0x8D64	0x2400    MOVS	R4, #0
0x8D66	0x4B1A    LDR	R3, [PC, #104]
0x8D68	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 1303 :: 		
L_TFT_Write_Text_Return_Pos198:
0x8D6A	0x9C02    LDR	R4, [SP, #8]
0x8D6C	0x9B02    LDR	R3, [SP, #8]
0x8D6E	0x1C5B    ADDS	R3, R3, #1
0x8D70	0x9302    STR	R3, [SP, #8]
0x8D72	0x7823    LDRB	R3, [R4, #0]
; ch start address is: 24 (R6)
0x8D74	0xB2DE    UXTB	R6, R3
0x8D76	0xB1C3    CBZ	R3, L_TFT_Write_Text_Return_Pos199
;__Lib_TFT.c, 1304 :: 		
0x8D78	0x4B16    LDR	R3, [PC, #88]
0x8D7A	0x781B    LDRB	R3, [R3, #0]
0x8D7C	0xB153    CBZ	R3, L_TFT_Write_Text_Return_Pos200
;__Lib_TFT.c, 1305 :: 		
0x8D7E	0xB2F0    UXTB	R0, R6
; ch end address is: 24 (R6)
0x8D80	0xF7FBFD48  BL	__Lib_TFT__TFT_Get_Char_WidthE+0
0x8D84	0x1C44    ADDS	R4, R0, #1
0x8D86	0xB2A4    UXTH	R4, R4
0x8D88	0xF8BD3004  LDRH	R3, [SP, #4]
0x8D8C	0x191B    ADDS	R3, R3, R4
0x8D8E	0xF8AD3004  STRH	R3, [SP, #4]
0x8D92	0xE009    B	L_TFT_Write_Text_Return_Pos201
L_TFT_Write_Text_Return_Pos200:
;__Lib_TFT.c, 1307 :: 		
; ch start address is: 24 (R6)
0x8D94	0xB2F0    UXTB	R0, R6
; ch end address is: 24 (R6)
0x8D96	0xF7FBFD05  BL	__Lib_TFT__TFT_Get_Char_Width+0
0x8D9A	0x1C44    ADDS	R4, R0, #1
0x8D9C	0xB2A4    UXTH	R4, R4
0x8D9E	0xF8BD3004  LDRH	R3, [SP, #4]
0x8DA2	0x191B    ADDS	R3, R3, R4
0x8DA4	0xF8AD3004  STRH	R3, [SP, #4]
L_TFT_Write_Text_Return_Pos201:
0x8DA8	0xE7DF    B	L_TFT_Write_Text_Return_Pos198
L_TFT_Write_Text_Return_Pos199:
;__Lib_TFT.c, 1309 :: 		
0x8DAA	0xF8BD4004  LDRH	R4, [SP, #4]
0x8DAE	0x4B07    LDR	R3, [PC, #28]
0x8DB0	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 1310 :: 		
0x8DB2	0x4B09    LDR	R3, [PC, #36]
0x8DB4	0x881C    LDRH	R4, [R3, #0]
0x8DB6	0x4B06    LDR	R3, [PC, #24]
0x8DB8	0x801C    STRH	R4, [R3, #0]
;__Lib_TFT.c, 1311 :: 		
L_end_TFT_Write_Text_Return_Pos:
0x8DBA	0xF8DDE000  LDR	LR, [SP, #0]
0x8DBE	0xB003    ADD	SP, SP, #12
0x8DC0	0x4770    BX	LR
0x8DC2	0xBF00    NOP
0x8DC4	0x22262000  	_TFT_DISP_WIDTH+0
0x8DC8	0x22242000  	_TFT_DISP_HEIGHT+0
0x8DCC	0x22902000  	_caption_length+0
0x8DD0	0x228A2000  	_caption_height+0
0x8DD4	0x2E1E2000  	_ExternalFontSet+0
0x8DD8	0x2E1A2000  	__Lib_TFT__fontHeight+0
; end of _TFT_Write_Text_Return_Pos
__Lib_TFT__TFT_Get_Char_WidthE:
;__Lib_TFT.c, 4259 :: 		
; ch start address is: 0 (R0)
0x4814	0xB081    SUB	SP, SP, #4
0x4816	0xF8CDE000  STR	LR, [SP, #0]
; ch end address is: 0 (R0)
; ch start address is: 0 (R0)
;__Lib_TFT.c, 4260 :: 		
;__Lib_TFT.c, 4266 :: 		
0x481A	0x490F    LDR	R1, [PC, #60]
0x481C	0x8809    LDRH	R1, [R1, #0]
0x481E	0x4288    CMP	R0, R1
0x4820	0xD200    BCS	L___Lib_TFT__TFT_Get_Char_WidthE932
; ch end address is: 0 (R0)
;__Lib_TFT.c, 4267 :: 		
0x4822	0xE015    B	L_end__TFT_Get_Char_WidthE
L___Lib_TFT__TFT_Get_Char_WidthE932:
;__Lib_TFT.c, 4268 :: 		
; ch start address is: 0 (R0)
0x4824	0x490D    LDR	R1, [PC, #52]
0x4826	0x8809    LDRH	R1, [R1, #0]
0x4828	0x4288    CMP	R0, R1
0x482A	0xD900    BLS	L___Lib_TFT__TFT_Get_Char_WidthE933
; ch end address is: 0 (R0)
;__Lib_TFT.c, 4269 :: 		
0x482C	0xE010    B	L_end__TFT_Get_Char_WidthE
L___Lib_TFT__TFT_Get_Char_WidthE933:
;__Lib_TFT.c, 4272 :: 		
; ch start address is: 0 (R0)
0x482E	0x490A    LDR	R1, [PC, #40]
0x4830	0x8809    LDRH	R1, [R1, #0]
0x4832	0x1A41    SUB	R1, R0, R1
0x4834	0xB289    UXTH	R1, R1
; ch end address is: 0 (R0)
0x4836	0x008A    LSLS	R2, R1, #2
0x4838	0xB292    UXTH	R2, R2
;__Lib_TFT.c, 4273 :: 		
0x483A	0x4909    LDR	R1, [PC, #36]
0x483C	0x6809    LDR	R1, [R1, #0]
0x483E	0x3108    ADDS	R1, #8
0x4840	0x1889    ADDS	R1, R1, R2
;__Lib_TFT.c, 4276 :: 		
0x4842	0x4608    MOV	R0, R1
0x4844	0x2104    MOVS	R1, #4
0x4846	0xF000FB1B  BL	__Lib_TFT__TFT_getHeader+0
;__Lib_TFT.c, 4277 :: 		
; ptr start address is: 0 (R0)
0x484A	0x4806    LDR	R0, [PC, #24]
;__Lib_TFT.c, 4279 :: 		
0x484C	0x7801    LDRB	R1, [R0, #0]
; ptr end address is: 0 (R0)
;__Lib_TFT.c, 4281 :: 		
0x484E	0xB2C8    UXTB	R0, R1
;__Lib_TFT.c, 4282 :: 		
L_end__TFT_Get_Char_WidthE:
0x4850	0xF8DDE000  LDR	LR, [SP, #0]
0x4854	0xB001    ADD	SP, SP, #4
0x4856	0x4770    BX	LR
0x4858	0x2E122000  	__Lib_TFT__fontFirstChar+0
0x485C	0x2E182000  	__Lib_TFT__fontLastChar+0
0x4860	0x2E202000  	__Lib_TFT_activeExtFont+0
0x4864	0x2DE82000  	__Lib_TFT_headerBuffer+0
; end of __Lib_TFT__TFT_Get_Char_WidthE
__Lib_TFT__TFT_Get_Char_Width:
;__Lib_TFT.c, 1236 :: 		
; ch start address is: 0 (R0)
0x47A4	0xB081    SUB	SP, SP, #4
0x47A6	0xF8CDE000  STR	LR, [SP, #0]
0x47AA	0xB285    UXTH	R5, R0
; ch end address is: 0 (R0)
; ch start address is: 20 (R5)
;__Lib_TFT.c, 1237 :: 		
;__Lib_TFT.c, 1241 :: 		
0x47AC	0x4914    LDR	R1, [PC, #80]
0x47AE	0x7809    LDRB	R1, [R1, #0]
0x47B0	0xB949    CBNZ	R1, L___Lib_TFT__TFT_Get_Char_Width183
;__Lib_TFT.c, 1242 :: 		
0x47B2	0x4914    LDR	R1, [PC, #80]
0x47B4	0x2200    MOVS	R2, #0
0x47B6	0x4608    MOV	R0, R1
0x47B8	0xF2400100  MOVW	R1, #0
0x47BC	0xF009FB78  BL	_TFT_Set_Font+0
;__Lib_TFT.c, 1243 :: 		
0x47C0	0x2201    MOVS	R2, #1
0x47C2	0x490F    LDR	R1, [PC, #60]
0x47C4	0x700A    STRB	R2, [R1, #0]
;__Lib_TFT.c, 1244 :: 		
L___Lib_TFT__TFT_Get_Char_Width183:
;__Lib_TFT.c, 1246 :: 		
0x47C6	0x4910    LDR	R1, [PC, #64]
0x47C8	0x8809    LDRH	R1, [R1, #0]
0x47CA	0x428D    CMP	R5, R1
0x47CC	0xD201    BCS	L___Lib_TFT__TFT_Get_Char_Width184
; ch end address is: 20 (R5)
;__Lib_TFT.c, 1247 :: 		
0x47CE	0x2000    MOVS	R0, #0
0x47D0	0xE011    B	L_end__TFT_Get_Char_Width
L___Lib_TFT__TFT_Get_Char_Width184:
;__Lib_TFT.c, 1248 :: 		
; ch start address is: 20 (R5)
0x47D2	0x490E    LDR	R1, [PC, #56]
0x47D4	0x8809    LDRH	R1, [R1, #0]
0x47D6	0x428D    CMP	R5, R1
0x47D8	0xD901    BLS	L___Lib_TFT__TFT_Get_Char_Width185
; ch end address is: 20 (R5)
;__Lib_TFT.c, 1249 :: 		
0x47DA	0x2000    MOVS	R0, #0
0x47DC	0xE00B    B	L_end__TFT_Get_Char_Width
L___Lib_TFT__TFT_Get_Char_Width185:
;__Lib_TFT.c, 1250 :: 		
; ch start address is: 20 (R5)
0x47DE	0x490A    LDR	R1, [PC, #40]
0x47E0	0x8809    LDRH	R1, [R1, #0]
0x47E2	0x1A69    SUB	R1, R5, R1
0x47E4	0xB289    UXTH	R1, R1
; ch end address is: 20 (R5)
0x47E6	0x008A    LSLS	R2, R1, #2
0x47E8	0xB292    UXTH	R2, R2
;__Lib_TFT.c, 1251 :: 		
0x47EA	0x4909    LDR	R1, [PC, #36]
0x47EC	0x6809    LDR	R1, [R1, #0]
0x47EE	0x3108    ADDS	R1, #8
0x47F0	0x1889    ADDS	R1, R1, R2
;__Lib_TFT.c, 1252 :: 		
0x47F2	0x7809    LDRB	R1, [R1, #0]
;__Lib_TFT.c, 1254 :: 		
0x47F4	0xB2C8    UXTB	R0, R1
;__Lib_TFT.c, 1255 :: 		
L_end__TFT_Get_Char_Width:
0x47F6	0xF8DDE000  LDR	LR, [SP, #0]
0x47FA	0xB001    ADD	SP, SP, #4
0x47FC	0x4770    BX	LR
0x47FE	0xBF00    NOP
0x4800	0x03462000  	__Lib_TFT_FontInitialized+0
0x4804	0x7CB80001  	_TFT_defaultFont+0
0x4808	0x2E122000  	__Lib_TFT__fontFirstChar+0
0x480C	0x2E182000  	__Lib_TFT__fontLastChar+0
0x4810	0x2E142000  	__Lib_TFT__font+0
; end of __Lib_TFT__TFT_Get_Char_Width
_DrawLabel:
;Ducati_logger_driver.c, 3853 :: 		void DrawLabel(TLabel *ALabel) {
; ALabel start address is: 0 (R0)
0xD808	0xB082    SUB	SP, SP, #8
0xD80A	0xF8CDE000  STR	LR, [SP, #0]
; ALabel end address is: 0 (R0)
; ALabel start address is: 0 (R0)
;Ducati_logger_driver.c, 3854 :: 		if (ALabel->Visible == 1) {
0xD80E	0xF200011A  ADDW	R1, R0, #26
0xD812	0x7809    LDRB	R1, [R1, #0]
0xD814	0x2901    CMP	R1, #1
0xD816	0xD11C    BNE	L_DrawLabel26
;Ducati_logger_driver.c, 3855 :: 		TFT_Set_Ext_Font(ALabel->FontName, ALabel->Font_Color, FO_HORIZONTAL);
0xD818	0xF2000118  ADDW	R1, R0, #24
0xD81C	0x8809    LDRH	R1, [R1, #0]
0xD81E	0xB28A    UXTH	R2, R1
0xD820	0xF2000114  ADDW	R1, R0, #20
0xD824	0x6809    LDR	R1, [R1, #0]
0xD826	0x9001    STR	R0, [SP, #4]
0xD828	0x4608    MOV	R0, R1
0xD82A	0xB291    UXTH	R1, R2
0xD82C	0x2200    MOVS	R2, #0
0xD82E	0xF7FAFBEB  BL	_TFT_Set_Ext_Font+0
0xD832	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3856 :: 		TFT_Write_Text(ALabel->Caption, ALabel->Left, ALabel->Top);
0xD834	0xF2000108  ADDW	R1, R0, #8
0xD838	0x8809    LDRH	R1, [R1, #0]
0xD83A	0xB28B    UXTH	R3, R1
0xD83C	0x1D81    ADDS	R1, R0, #6
0xD83E	0x8809    LDRH	R1, [R1, #0]
0xD840	0xB28A    UXTH	R2, R1
0xD842	0xF2000110  ADDW	R1, R0, #16
; ALabel end address is: 0 (R0)
0xD846	0x6809    LDR	R1, [R1, #0]
0xD848	0x4608    MOV	R0, R1
0xD84A	0xB291    UXTH	R1, R2
0xD84C	0xB29A    UXTH	R2, R3
0xD84E	0xF000FB65  BL	_TFT_Write_Text+0
;Ducati_logger_driver.c, 3857 :: 		}
L_DrawLabel26:
;Ducati_logger_driver.c, 3858 :: 		}
L_end_DrawLabel:
0xD852	0xF8DDE000  LDR	LR, [SP, #0]
0xD856	0xB002    ADD	SP, SP, #8
0xD858	0x4770    BX	LR
; end of _DrawLabel
_DrawCircle:
;Ducati_logger_driver.c, 3872 :: 		void DrawCircle(TCircle *ACircle) {
; ACircle start address is: 0 (R0)
0xD718	0xB082    SUB	SP, SP, #8
0xD71A	0xF8CDE000  STR	LR, [SP, #0]
; ACircle end address is: 0 (R0)
; ACircle start address is: 0 (R0)
;Ducati_logger_driver.c, 3873 :: 		if (ACircle->Visible == 1) {
0xD71E	0xF2000110  ADDW	R1, R0, #16
0xD722	0x7809    LDRB	R1, [R1, #0]
0xD724	0x2901    CMP	R1, #1
0xD726	0xD168    BNE	L_DrawCircle29
;Ducati_logger_driver.c, 3874 :: 		if (object_pressed == 1) {
0xD728	0x4936    LDR	R1, [PC, #216]
0xD72A	0x7809    LDRB	R1, [R1, #0]
0xD72C	0x2901    CMP	R1, #1
0xD72E	0xD125    BNE	L_DrawCircle30
;Ducati_logger_driver.c, 3875 :: 		object_pressed = 0;
0xD730	0x2200    MOVS	R2, #0
0xD732	0x4934    LDR	R1, [PC, #208]
0xD734	0x700A    STRB	R2, [R1, #0]
;Ducati_logger_driver.c, 3877 :: 		ACircle->Gradient_End_Color, ACircle->Gradient_Start_Color);
0xD736	0xF2000116  ADDW	R1, R0, #22
0xD73A	0x8809    LDRH	R1, [R1, #0]
0xD73C	0xB28E    UXTH	R6, R1
0xD73E	0xF2000118  ADDW	R1, R0, #24
0xD742	0x8809    LDRH	R1, [R1, #0]
0xD744	0xB28D    UXTH	R5, R1
;Ducati_logger_driver.c, 3876 :: 		TFT_Set_Brush(ACircle->Transparent, ACircle->Press_Color, ACircle->Gradient, ACircle->Gradient_Orientation,
0xD746	0xF2000114  ADDW	R1, R0, #20
0xD74A	0x7809    LDRB	R1, [R1, #0]
0xD74C	0xB2CC    UXTB	R4, R1
0xD74E	0xF2000113  ADDW	R1, R0, #19
0xD752	0x7809    LDRB	R1, [R1, #0]
0xD754	0xB2CB    UXTB	R3, R1
0xD756	0xF200011E  ADDW	R1, R0, #30
0xD75A	0x8809    LDRH	R1, [R1, #0]
0xD75C	0xB28A    UXTH	R2, R1
0xD75E	0xF2000112  ADDW	R1, R0, #18
0xD762	0x7809    LDRB	R1, [R1, #0]
0xD764	0x9001    STR	R0, [SP, #4]
0xD766	0xB2C8    UXTB	R0, R1
0xD768	0xB291    UXTH	R1, R2
0xD76A	0xB2DA    UXTB	R2, R3
0xD76C	0xB2E3    UXTB	R3, R4
;Ducati_logger_driver.c, 3877 :: 		ACircle->Gradient_End_Color, ACircle->Gradient_Start_Color);
0xD76E	0xB440    PUSH	(R6)
0xD770	0xB420    PUSH	(R5)
0xD772	0xF7FBFDE9  BL	_TFT_Set_Brush+0
0xD776	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 3876 :: 		TFT_Set_Brush(ACircle->Transparent, ACircle->Press_Color, ACircle->Gradient, ACircle->Gradient_Orientation,
0xD778	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3878 :: 		}
0xD77A	0xE021    B	L_DrawCircle31
L_DrawCircle30:
;Ducati_logger_driver.c, 3881 :: 		ACircle->Gradient_Start_Color, ACircle->Gradient_End_Color);
0xD77C	0xF2000118  ADDW	R1, R0, #24
0xD780	0x8809    LDRH	R1, [R1, #0]
0xD782	0xB28E    UXTH	R6, R1
0xD784	0xF2000116  ADDW	R1, R0, #22
0xD788	0x8809    LDRH	R1, [R1, #0]
0xD78A	0xB28D    UXTH	R5, R1
;Ducati_logger_driver.c, 3880 :: 		TFT_Set_Brush(ACircle->Transparent, ACircle->Color, ACircle->Gradient, ACircle->Gradient_Orientation,
0xD78C	0xF2000114  ADDW	R1, R0, #20
0xD790	0x7809    LDRB	R1, [R1, #0]
0xD792	0xB2CC    UXTB	R4, R1
0xD794	0xF2000113  ADDW	R1, R0, #19
0xD798	0x7809    LDRB	R1, [R1, #0]
0xD79A	0xB2CB    UXTB	R3, R1
0xD79C	0xF200011A  ADDW	R1, R0, #26
0xD7A0	0x8809    LDRH	R1, [R1, #0]
0xD7A2	0xB28A    UXTH	R2, R1
0xD7A4	0xF2000112  ADDW	R1, R0, #18
0xD7A8	0x7809    LDRB	R1, [R1, #0]
0xD7AA	0x9001    STR	R0, [SP, #4]
0xD7AC	0xB2C8    UXTB	R0, R1
0xD7AE	0xB291    UXTH	R1, R2
0xD7B0	0xB2DA    UXTB	R2, R3
0xD7B2	0xB2E3    UXTB	R3, R4
;Ducati_logger_driver.c, 3881 :: 		ACircle->Gradient_Start_Color, ACircle->Gradient_End_Color);
0xD7B4	0xB440    PUSH	(R6)
0xD7B6	0xB420    PUSH	(R5)
0xD7B8	0xF7FBFDC6  BL	_TFT_Set_Brush+0
0xD7BC	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 3880 :: 		TFT_Set_Brush(ACircle->Transparent, ACircle->Color, ACircle->Gradient, ACircle->Gradient_Orientation,
0xD7BE	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3882 :: 		}
L_DrawCircle31:
;Ducati_logger_driver.c, 3883 :: 		TFT_Set_Pen(ACircle->Pen_Color, ACircle->Pen_Width);
0xD7C0	0xF200010C  ADDW	R1, R0, #12
0xD7C4	0x7809    LDRB	R1, [R1, #0]
0xD7C6	0xB2CA    UXTB	R2, R1
0xD7C8	0xF200010E  ADDW	R1, R0, #14
0xD7CC	0x8809    LDRH	R1, [R1, #0]
0xD7CE	0x9001    STR	R0, [SP, #4]
0xD7D0	0xB288    UXTH	R0, R1
0xD7D2	0xB2D1    UXTB	R1, R2
0xD7D4	0xF7FCF8EC  BL	_TFT_Set_Pen+0
0xD7D8	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3886 :: 		ACircle->Radius);
0xD7DA	0xF200010A  ADDW	R1, R0, #10
0xD7DE	0x880C    LDRH	R4, [R1, #0]
0xD7E0	0xB223    SXTH	R3, R4
;Ducati_logger_driver.c, 3885 :: 		ACircle->Top + ACircle->Radius,
0xD7E2	0xF2000108  ADDW	R1, R0, #8
0xD7E6	0x8809    LDRH	R1, [R1, #0]
0xD7E8	0x190A    ADDS	R2, R1, R4
;Ducati_logger_driver.c, 3884 :: 		TFT_Circle(ACircle->Left + ACircle->Radius,
0xD7EA	0x1D81    ADDS	R1, R0, #6
; ACircle end address is: 0 (R0)
0xD7EC	0x8809    LDRH	R1, [R1, #0]
0xD7EE	0x1909    ADDS	R1, R1, R4
0xD7F0	0xB208    SXTH	R0, R1
;Ducati_logger_driver.c, 3885 :: 		ACircle->Top + ACircle->Radius,
0xD7F2	0xB211    SXTH	R1, R2
;Ducati_logger_driver.c, 3886 :: 		ACircle->Radius);
0xD7F4	0xB21A    SXTH	R2, R3
0xD7F6	0xF000FD93  BL	_TFT_Circle+0
;Ducati_logger_driver.c, 3887 :: 		}
L_DrawCircle29:
;Ducati_logger_driver.c, 3888 :: 		}
L_end_DrawCircle:
0xD7FA	0xF8DDE000  LDR	LR, [SP, #0]
0xD7FE	0xB002    ADD	SP, SP, #8
0xD800	0x4770    BX	LR
0xD802	0xBF00    NOP
0xD804	0x22282000  	_object_pressed+0
; end of _DrawCircle
_DrawCircleButton:
;Ducati_logger_driver.c, 3890 :: 		void DrawCircleButton(TCircleButton *ACircle_button) {
; ACircle_button start address is: 0 (R0)
0xD95C	0xB082    SUB	SP, SP, #8
0xD95E	0xF8CDE000  STR	LR, [SP, #0]
; ACircle_button end address is: 0 (R0)
; ACircle_button start address is: 0 (R0)
;Ducati_logger_driver.c, 3891 :: 		if (ACircle_button->Visible == 1) {
0xD962	0xF2000110  ADDW	R1, R0, #16
0xD966	0x7809    LDRB	R1, [R1, #0]
0xD968	0x2901    CMP	R1, #1
0xD96A	0xF04080F2  BNE	L_DrawCircleButton32
;Ducati_logger_driver.c, 3892 :: 		if (object_pressed == 1) {
0xD96E	0x497B    LDR	R1, [PC, #492]
0xD970	0x7809    LDRB	R1, [R1, #0]
0xD972	0x2901    CMP	R1, #1
0xD974	0xD125    BNE	L_DrawCircleButton33
;Ducati_logger_driver.c, 3893 :: 		object_pressed = 0;
0xD976	0x2200    MOVS	R2, #0
0xD978	0x4978    LDR	R1, [PC, #480]
0xD97A	0x700A    STRB	R2, [R1, #0]
;Ducati_logger_driver.c, 3895 :: 		ACircle_button->Gradient_End_Color, ACircle_button->Gradient_Start_Color);
0xD97C	0xF2000124  ADDW	R1, R0, #36
0xD980	0x8809    LDRH	R1, [R1, #0]
0xD982	0xB28E    UXTH	R6, R1
0xD984	0xF2000126  ADDW	R1, R0, #38
0xD988	0x8809    LDRH	R1, [R1, #0]
0xD98A	0xB28D    UXTH	R5, R1
;Ducati_logger_driver.c, 3894 :: 		TFT_Set_Brush(ACircle_button->Transparent, ACircle_button->Press_Color, ACircle_button->Gradient, ACircle_button->Gradient_Orientation,
0xD98C	0xF2000123  ADDW	R1, R0, #35
0xD990	0x7809    LDRB	R1, [R1, #0]
0xD992	0xB2CC    UXTB	R4, R1
0xD994	0xF2000122  ADDW	R1, R0, #34
0xD998	0x7809    LDRB	R1, [R1, #0]
0xD99A	0xB2CB    UXTB	R3, R1
0xD99C	0xF200012C  ADDW	R1, R0, #44
0xD9A0	0x8809    LDRH	R1, [R1, #0]
0xD9A2	0xB28A    UXTH	R2, R1
0xD9A4	0xF2000112  ADDW	R1, R0, #18
0xD9A8	0x7809    LDRB	R1, [R1, #0]
0xD9AA	0x9001    STR	R0, [SP, #4]
0xD9AC	0xB2C8    UXTB	R0, R1
0xD9AE	0xB291    UXTH	R1, R2
0xD9B0	0xB2DA    UXTB	R2, R3
0xD9B2	0xB2E3    UXTB	R3, R4
;Ducati_logger_driver.c, 3895 :: 		ACircle_button->Gradient_End_Color, ACircle_button->Gradient_Start_Color);
0xD9B4	0xB440    PUSH	(R6)
0xD9B6	0xB420    PUSH	(R5)
0xD9B8	0xF7FBFCC6  BL	_TFT_Set_Brush+0
0xD9BC	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 3894 :: 		TFT_Set_Brush(ACircle_button->Transparent, ACircle_button->Press_Color, ACircle_button->Gradient, ACircle_button->Gradient_Orientation,
0xD9BE	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3896 :: 		}
0xD9C0	0xE021    B	L_DrawCircleButton34
L_DrawCircleButton33:
;Ducati_logger_driver.c, 3899 :: 		ACircle_button->Gradient_Start_Color, ACircle_button->Gradient_End_Color);
0xD9C2	0xF2000126  ADDW	R1, R0, #38
0xD9C6	0x8809    LDRH	R1, [R1, #0]
0xD9C8	0xB28E    UXTH	R6, R1
0xD9CA	0xF2000124  ADDW	R1, R0, #36
0xD9CE	0x8809    LDRH	R1, [R1, #0]
0xD9D0	0xB28D    UXTH	R5, R1
;Ducati_logger_driver.c, 3898 :: 		TFT_Set_Brush(ACircle_button->Transparent, ACircle_button->Color, ACircle_button->Gradient, ACircle_button->Gradient_Orientation,
0xD9D2	0xF2000123  ADDW	R1, R0, #35
0xD9D6	0x7809    LDRB	R1, [R1, #0]
0xD9D8	0xB2CC    UXTB	R4, R1
0xD9DA	0xF2000122  ADDW	R1, R0, #34
0xD9DE	0x7809    LDRB	R1, [R1, #0]
0xD9E0	0xB2CB    UXTB	R3, R1
0xD9E2	0xF2000128  ADDW	R1, R0, #40
0xD9E6	0x8809    LDRH	R1, [R1, #0]
0xD9E8	0xB28A    UXTH	R2, R1
0xD9EA	0xF2000112  ADDW	R1, R0, #18
0xD9EE	0x7809    LDRB	R1, [R1, #0]
0xD9F0	0x9001    STR	R0, [SP, #4]
0xD9F2	0xB2C8    UXTB	R0, R1
0xD9F4	0xB291    UXTH	R1, R2
0xD9F6	0xB2DA    UXTB	R2, R3
0xD9F8	0xB2E3    UXTB	R3, R4
;Ducati_logger_driver.c, 3899 :: 		ACircle_button->Gradient_Start_Color, ACircle_button->Gradient_End_Color);
0xD9FA	0xB440    PUSH	(R6)
0xD9FC	0xB420    PUSH	(R5)
0xD9FE	0xF7FBFCA3  BL	_TFT_Set_Brush+0
0xDA02	0xB002    ADD	SP, SP, #8
;Ducati_logger_driver.c, 3898 :: 		TFT_Set_Brush(ACircle_button->Transparent, ACircle_button->Color, ACircle_button->Gradient, ACircle_button->Gradient_Orientation,
0xDA04	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3900 :: 		}
L_DrawCircleButton34:
;Ducati_logger_driver.c, 3901 :: 		TFT_Set_Pen(ACircle_button->Pen_Color, ACircle_button->Pen_Width);
0xDA06	0xF200010C  ADDW	R1, R0, #12
0xDA0A	0x7809    LDRB	R1, [R1, #0]
0xDA0C	0xB2CA    UXTB	R2, R1
0xDA0E	0xF200010E  ADDW	R1, R0, #14
0xDA12	0x8809    LDRH	R1, [R1, #0]
0xDA14	0x9001    STR	R0, [SP, #4]
0xDA16	0xB288    UXTH	R0, R1
0xDA18	0xB2D1    UXTB	R1, R2
0xDA1A	0xF7FBFFC9  BL	_TFT_Set_Pen+0
0xDA1E	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3904 :: 		ACircle_button->Radius);
0xDA20	0xF200010A  ADDW	R1, R0, #10
0xDA24	0x880C    LDRH	R4, [R1, #0]
0xDA26	0xB223    SXTH	R3, R4
;Ducati_logger_driver.c, 3903 :: 		ACircle_button->Top + ACircle_button->Radius,
0xDA28	0xF2000108  ADDW	R1, R0, #8
0xDA2C	0x8809    LDRH	R1, [R1, #0]
0xDA2E	0x190A    ADDS	R2, R1, R4
;Ducati_logger_driver.c, 3902 :: 		TFT_Circle(ACircle_button->Left + ACircle_button->Radius,
0xDA30	0x1D81    ADDS	R1, R0, #6
0xDA32	0x8809    LDRH	R1, [R1, #0]
0xDA34	0x1909    ADDS	R1, R1, R4
;Ducati_logger_driver.c, 3904 :: 		ACircle_button->Radius);
0xDA36	0x9001    STR	R0, [SP, #4]
;Ducati_logger_driver.c, 3902 :: 		TFT_Circle(ACircle_button->Left + ACircle_button->Radius,
0xDA38	0xB208    SXTH	R0, R1
;Ducati_logger_driver.c, 3903 :: 		ACircle_button->Top + ACircle_button->Radius,
0xDA3A	0xB211    SXTH	R1, R2
;Ducati_logger_driver.c, 3904 :: 		ACircle_button->Radius);
0xDA3C	0xB21A    SXTH	R2, R3
0xDA3E	0xF000FC6F  BL	_TFT_Circle+0
0xDA42	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3905 :: 		TFT_Set_Ext_Font(ACircle_button->FontName, ACircle_button->Font_Color, FO_HORIZONTAL);
0xDA44	0xF2000120  ADDW	R1, R0, #32
0xDA48	0x8809    LDRH	R1, [R1, #0]
0xDA4A	0xB28A    UXTH	R2, R1
0xDA4C	0xF200011C  ADDW	R1, R0, #28
0xDA50	0x6809    LDR	R1, [R1, #0]
0xDA52	0x9001    STR	R0, [SP, #4]
0xDA54	0x4608    MOV	R0, R1
0xDA56	0xB291    UXTH	R1, R2
0xDA58	0x2200    MOVS	R2, #0
0xDA5A	0xF7FAFAD5  BL	_TFT_Set_Ext_Font+0
0xDA5E	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3906 :: 		TFT_Write_Text_Return_Pos(ACircle_button->Caption, ACircle_button->Left, ACircle_button->Top);
0xDA60	0xF2000108  ADDW	R1, R0, #8
0xDA64	0x8809    LDRH	R1, [R1, #0]
0xDA66	0xB28B    UXTH	R3, R1
0xDA68	0x1D81    ADDS	R1, R0, #6
0xDA6A	0x8809    LDRH	R1, [R1, #0]
0xDA6C	0xB28A    UXTH	R2, R1
0xDA6E	0xF2000114  ADDW	R1, R0, #20
0xDA72	0x6809    LDR	R1, [R1, #0]
0xDA74	0x9001    STR	R0, [SP, #4]
0xDA76	0x4608    MOV	R0, R1
0xDA78	0xB291    UXTH	R1, R2
0xDA7A	0xB29A    UXTH	R2, R3
0xDA7C	0xF7FBF95C  BL	_TFT_Write_Text_Return_Pos+0
0xDA80	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3907 :: 		if (ACircle_button->TextAlign == _taLeft)
0xDA82	0xF2000118  ADDW	R1, R0, #24
0xDA86	0x7809    LDRB	R1, [R1, #0]
0xDA88	0xB9C1    CBNZ	R1, L_DrawCircleButton35
;Ducati_logger_driver.c, 3908 :: 		TFT_Write_Text(ACircle_button->Caption, ACircle_button->Left + 4, (ACircle_button->Top + ACircle_button->Radius - caption_height / 2));
0xDA8A	0xF2000108  ADDW	R1, R0, #8
0xDA8E	0x880A    LDRH	R2, [R1, #0]
0xDA90	0xF200010A  ADDW	R1, R0, #10
0xDA94	0x8809    LDRH	R1, [R1, #0]
0xDA96	0x1852    ADDS	R2, R2, R1
0xDA98	0xB292    UXTH	R2, R2
0xDA9A	0x4931    LDR	R1, [PC, #196]
0xDA9C	0x8809    LDRH	R1, [R1, #0]
0xDA9E	0x0849    LSRS	R1, R1, #1
0xDAA0	0xB289    UXTH	R1, R1
0xDAA2	0x1A53    SUB	R3, R2, R1
0xDAA4	0x1D81    ADDS	R1, R0, #6
0xDAA6	0x8809    LDRH	R1, [R1, #0]
0xDAA8	0x1D0A    ADDS	R2, R1, #4
0xDAAA	0xF2000114  ADDW	R1, R0, #20
; ACircle_button end address is: 0 (R0)
0xDAAE	0x6809    LDR	R1, [R1, #0]
0xDAB0	0x4608    MOV	R0, R1
0xDAB2	0xB291    UXTH	R1, R2
0xDAB4	0xB29A    UXTH	R2, R3
0xDAB6	0xF000FA31  BL	_TFT_Write_Text+0
0xDABA	0xE04A    B	L_DrawCircleButton36
L_DrawCircleButton35:
;Ducati_logger_driver.c, 3909 :: 		else if (ACircle_button->TextAlign == _taCenter)
; ACircle_button start address is: 0 (R0)
0xDABC	0xF2000118  ADDW	R1, R0, #24
0xDAC0	0x7809    LDRB	R1, [R1, #0]
0xDAC2	0x2901    CMP	R1, #1
0xDAC4	0xD120    BNE	L_DrawCircleButton37
;Ducati_logger_driver.c, 3910 :: 		TFT_Write_Text(ACircle_button->Caption, (ACircle_button->Left + (ACircle_button->Radius*2 - caption_length) / 2), (ACircle_button->Top + ACircle_button->Radius - caption_height / 2));
0xDAC6	0xF2000108  ADDW	R1, R0, #8
0xDACA	0x880A    LDRH	R2, [R1, #0]
0xDACC	0xF200010A  ADDW	R1, R0, #10
0xDAD0	0x880D    LDRH	R5, [R1, #0]
0xDAD2	0x1952    ADDS	R2, R2, R5
0xDAD4	0xB292    UXTH	R2, R2
0xDAD6	0x4922    LDR	R1, [PC, #136]
0xDAD8	0x8809    LDRH	R1, [R1, #0]
0xDADA	0x0849    LSRS	R1, R1, #1
0xDADC	0xB289    UXTH	R1, R1
0xDADE	0x1A54    SUB	R4, R2, R1
0xDAE0	0x1D81    ADDS	R1, R0, #6
0xDAE2	0x880B    LDRH	R3, [R1, #0]
0xDAE4	0x006A    LSLS	R2, R5, #1
0xDAE6	0xB292    UXTH	R2, R2
0xDAE8	0x491E    LDR	R1, [PC, #120]
0xDAEA	0x8809    LDRH	R1, [R1, #0]
0xDAEC	0x1A51    SUB	R1, R2, R1
0xDAEE	0xB289    UXTH	R1, R1
0xDAF0	0x0849    LSRS	R1, R1, #1
0xDAF2	0xB289    UXTH	R1, R1
0xDAF4	0x185A    ADDS	R2, R3, R1
0xDAF6	0xF2000114  ADDW	R1, R0, #20
; ACircle_button end address is: 0 (R0)
0xDAFA	0x6809    LDR	R1, [R1, #0]
0xDAFC	0x4608    MOV	R0, R1
0xDAFE	0xB291    UXTH	R1, R2
0xDB00	0xB2A2    UXTH	R2, R4
0xDB02	0xF000FA0B  BL	_TFT_Write_Text+0
0xDB06	0xE024    B	L_DrawCircleButton38
L_DrawCircleButton37:
;Ducati_logger_driver.c, 3911 :: 		else if (ACircle_button->TextAlign == _taRight)
; ACircle_button start address is: 0 (R0)
0xDB08	0xF2000118  ADDW	R1, R0, #24
0xDB0C	0x7809    LDRB	R1, [R1, #0]
0xDB0E	0x2902    CMP	R1, #2
0xDB10	0xD11F    BNE	L_DrawCircleButton39
;Ducati_logger_driver.c, 3912 :: 		TFT_Write_Text(ACircle_button->Caption, ACircle_button->Left + (ACircle_button->Radius*2 - caption_length - 4), (ACircle_button->Top + ACircle_button->Radius - caption_height / 2));
0xDB12	0xF2000108  ADDW	R1, R0, #8
0xDB16	0x880A    LDRH	R2, [R1, #0]
0xDB18	0xF200010A  ADDW	R1, R0, #10
0xDB1C	0x880D    LDRH	R5, [R1, #0]
0xDB1E	0x1952    ADDS	R2, R2, R5
0xDB20	0xB292    UXTH	R2, R2
0xDB22	0x490F    LDR	R1, [PC, #60]
0xDB24	0x8809    LDRH	R1, [R1, #0]
0xDB26	0x0849    LSRS	R1, R1, #1
0xDB28	0xB289    UXTH	R1, R1
0xDB2A	0x1A54    SUB	R4, R2, R1
0xDB2C	0x1D81    ADDS	R1, R0, #6
0xDB2E	0x880B    LDRH	R3, [R1, #0]
0xDB30	0x006A    LSLS	R2, R5, #1
0xDB32	0xB292    UXTH	R2, R2
0xDB34	0x490B    LDR	R1, [PC, #44]
0xDB36	0x8809    LDRH	R1, [R1, #0]
0xDB38	0x1A51    SUB	R1, R2, R1
0xDB3A	0xB289    UXTH	R1, R1
0xDB3C	0x1F09    SUBS	R1, R1, #4
0xDB3E	0xB289    UXTH	R1, R1
0xDB40	0x185A    ADDS	R2, R3, R1
0xDB42	0xF2000114  ADDW	R1, R0, #20
; ACircle_button end address is: 0 (R0)
0xDB46	0x6809    LDR	R1, [R1, #0]
0xDB48	0x4608    MOV	R0, R1
0xDB4A	0xB291    UXTH	R1, R2
0xDB4C	0xB2A2    UXTH	R2, R4
0xDB4E	0xF000F9E5  BL	_TFT_Write_Text+0
L_DrawCircleButton39:
L_DrawCircleButton38:
L_DrawCircleButton36:
;Ducati_logger_driver.c, 3913 :: 		}
L_DrawCircleButton32:
;Ducati_logger_driver.c, 3914 :: 		}
L_end_DrawCircleButton:
0xDB52	0xF8DDE000  LDR	LR, [SP, #0]
0xDB56	0xB002    ADD	SP, SP, #8
0xDB58	0x4770    BX	LR
0xDB5A	0xBF00    NOP
0xDB5C	0x22282000  	_object_pressed+0
0xDB60	0x228A2000  	_caption_height+0
0xDB64	0x22902000  	_caption_length+0
; end of _DrawCircleButton
_DrawBox:
;Ducati_logger_driver.c, 3916 :: 		void DrawBox(TBox *ABox) {
; ABox start address is: 0 (R0)
0xD85C	0xB082    SUB	SP, SP, #8
0xD85E	0xF8CDE000  STR	LR, [SP, #0]
; ABox end address is: 0 (R0)
; ABox start address is: 0 (R0)
;Ducati_logger_driver.c, 3917 :: 		if (ABox->Visible == 1) {
0xD862	0xF2000112  ADDW	R1, R0, #18
0xD866	0x7809    LDRB	R1, [R1, #0]
0xD868	0x2901    CMP	R1, #1
0xD86A	0xD171    BNE	L_DrawBox40
;Ducati_logger_driver.c, 3918 :: 		if (object_pressed == 1) {
0xD86C	0x493A    LDR	R1, [PC, #232]
0xD86E	0x7809    LDRB	R1, [R1, #0]
0xD870	0x2901    CMP	R1, #1
0xD872	0xD125    BNE	L_DrawBox41
;Ducati_logger_driver.c, 3919 :: 		object_pressed = 0;
0xD874	0x2200    MOVS	R2, #0
0xD876	0x4938    LDR	R1, [PC, #224]
0xD878	0x700A    STRB	R2, [R1, #0]
;Ducati_logger_driver.c, 3920 :: 		TFT_Set_Brush(ABox->Transparent, ABox->Press_Color, ABox->Gradient, ABox->Gradient_Orientation, ABox->Gradient_End_Color, ABox->Gradient_Start_Color);
0xD87A	0xF2000118  ADDW	R1, R0, #24
0xD87E	0x8809    LDRH	R1, [R1, #0]
0xD880	0xB28E    UXTH	R6, R1
0xD882	0xF200011A  ADDW	R1, R0, #26
0xD886	0x8809    LDRH	R1, [R1, #0]
0xD888	0xB28D    UXTH	R5, R1
0xD88A	0xF2000116  ADDW	R1, R0, #22
0xD88E	0x7809    LDRB	R1, [R1, #0]
0xD890	0xB2CC    UXTB	R4, R1
0xD892	0xF2000115  ADDW	R1, R0, #21
0xD896	0x7809    LDRB	R1, [R1, #0]
0xD898	0xB2CB    UXTB	R3, R1
0xD89A	0xF2000120  ADDW	R1, R0, #32
0xD89E	0x8809    LDRH	R1, [R1, #0]
0xD8A0	0xB28A    UXTH	R2, R1
0xD8A2	0xF2000114  ADDW	R1, R0, #20
0xD8A6	0x7809    LDRB	R1, [R1, #0]
0xD8A8	0x9001    STR	R0, [SP, #4]
0xD8AA	0xB2C8    UXTB	R0, R1
0xD8AC	0xB291    UXTH	R1, R2
0xD8AE	0xB2DA    UXTB	R2, R3
0xD8B0	0xB2E3    UXTB	R3, R4
0xD8B2	0xB440    PUSH	(R6)
0xD8B4	0xB420    PUSH	(R5)
0xD8B6	0xF7FBFD47  BL	_TFT_Set_Brush+0
0xD8BA	0xB002    ADD	SP, SP, #8
0xD8BC	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3921 :: 		}
0xD8BE	0xE021    B	L_DrawBox42
L_DrawBox41:
;Ducati_logger_driver.c, 3923 :: 		TFT_Set_Brush(ABox->Transparent, ABox->Color, ABox->Gradient, ABox->Gradient_Orientation, ABox->Gradient_Start_Color, ABox->Gradient_End_Color);
0xD8C0	0xF200011A  ADDW	R1, R0, #26
0xD8C4	0x8809    LDRH	R1, [R1, #0]
0xD8C6	0xB28E    UXTH	R6, R1
0xD8C8	0xF2000118  ADDW	R1, R0, #24
0xD8CC	0x8809    LDRH	R1, [R1, #0]
0xD8CE	0xB28D    UXTH	R5, R1
0xD8D0	0xF2000116  ADDW	R1, R0, #22
0xD8D4	0x7809    LDRB	R1, [R1, #0]
0xD8D6	0xB2CC    UXTB	R4, R1
0xD8D8	0xF2000115  ADDW	R1, R0, #21
0xD8DC	0x7809    LDRB	R1, [R1, #0]
0xD8DE	0xB2CB    UXTB	R3, R1
0xD8E0	0xF200011C  ADDW	R1, R0, #28
0xD8E4	0x8809    LDRH	R1, [R1, #0]
0xD8E6	0xB28A    UXTH	R2, R1
0xD8E8	0xF2000114  ADDW	R1, R0, #20
0xD8EC	0x7809    LDRB	R1, [R1, #0]
0xD8EE	0x9001    STR	R0, [SP, #4]
0xD8F0	0xB2C8    UXTB	R0, R1
0xD8F2	0xB291    UXTH	R1, R2
0xD8F4	0xB2DA    UXTB	R2, R3
0xD8F6	0xB2E3    UXTB	R3, R4
0xD8F8	0xB440    PUSH	(R6)
0xD8FA	0xB420    PUSH	(R5)
0xD8FC	0xF7FBFD24  BL	_TFT_Set_Brush+0
0xD900	0xB002    ADD	SP, SP, #8
0xD902	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3924 :: 		}
L_DrawBox42:
;Ducati_logger_driver.c, 3925 :: 		TFT_Set_Pen(ABox->Pen_Color, ABox->Pen_Width);
0xD904	0xF200010E  ADDW	R1, R0, #14
0xD908	0x7809    LDRB	R1, [R1, #0]
0xD90A	0xB2CA    UXTB	R2, R1
0xD90C	0xF2000110  ADDW	R1, R0, #16
0xD910	0x8809    LDRH	R1, [R1, #0]
0xD912	0x9001    STR	R0, [SP, #4]
0xD914	0xB288    UXTH	R0, R1
0xD916	0xB2D1    UXTB	R1, R2
0xD918	0xF7FCF84A  BL	_TFT_Set_Pen+0
0xD91C	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3926 :: 		TFT_Rectangle(ABox->Left, ABox->Top, ABox->Left + ABox->Width - 1, ABox->Top + ABox->Height - 1);
0xD91E	0xF2000108  ADDW	R1, R0, #8
0xD922	0x880A    LDRH	R2, [R1, #0]
0xD924	0xF200010C  ADDW	R1, R0, #12
0xD928	0x8809    LDRH	R1, [R1, #0]
0xD92A	0x1851    ADDS	R1, R2, R1
0xD92C	0xB289    UXTH	R1, R1
0xD92E	0x1E4D    SUBS	R5, R1, #1
0xD930	0x1D81    ADDS	R1, R0, #6
0xD932	0x880C    LDRH	R4, [R1, #0]
0xD934	0xF200010A  ADDW	R1, R0, #10
; ABox end address is: 0 (R0)
0xD938	0x8809    LDRH	R1, [R1, #0]
0xD93A	0x1861    ADDS	R1, R4, R1
0xD93C	0xB289    UXTH	R1, R1
0xD93E	0x1E4B    SUBS	R3, R1, #1
0xD940	0xB212    SXTH	R2, R2
0xD942	0xB221    SXTH	R1, R4
0xD944	0xB208    SXTH	R0, R1
0xD946	0xB211    SXTH	R1, R2
0xD948	0xB21A    SXTH	R2, R3
0xD94A	0xB22B    SXTH	R3, R5
0xD94C	0xF7FAF8FC  BL	_TFT_Rectangle+0
;Ducati_logger_driver.c, 3927 :: 		}
L_DrawBox40:
;Ducati_logger_driver.c, 3928 :: 		}
L_end_DrawBox:
0xD950	0xF8DDE000  LDR	LR, [SP, #0]
0xD954	0xB002    ADD	SP, SP, #8
0xD956	0x4770    BX	LR
0xD958	0x22282000  	_object_pressed+0
; end of _DrawBox
_TFT_Rectangle:
;__Lib_TFT.c, 924 :: 		
0x7B48	0xB088    SUB	SP, SP, #32
0x7B4A	0xF8CDE000  STR	LR, [SP, #0]
0x7B4E	0xF8AD0010  STRH	R0, [SP, #16]
0x7B52	0xF8AD1014  STRH	R1, [SP, #20]
0x7B56	0xF8AD2018  STRH	R2, [SP, #24]
0x7B5A	0xF8AD301C  STRH	R3, [SP, #28]
;__Lib_TFT.c, 930 :: 		
0x7B5E	0x4C8C    LDR	R4, [PC, #560]
0x7B60	0x7824    LDRB	R4, [R4, #0]
0x7B62	0x0865    LSRS	R5, R4, #1
0x7B64	0xB2ED    UXTB	R5, R5
0x7B66	0xF9BD4010  LDRSH	R4, [SP, #16]
0x7B6A	0x1B64    SUB	R4, R4, R5
0x7B6C	0xB224    SXTH	R4, R4
; loc_x_up_lft start address is: 12 (R3)
0x7B6E	0xB223    SXTH	R3, R4
;__Lib_TFT.c, 931 :: 		
0x7B70	0x2C00    CMP	R4, #0
0x7B72	0xDA03    BGE	L_TFT_Rectangle103
;__Lib_TFT.c, 932 :: 		
0x7B74	0x2300    MOVS	R3, #0
0x7B76	0xB21B    SXTH	R3, R3
0x7B78	0xB218    SXTH	R0, R3
0x7B7A	0xE009    B	L_TFT_Rectangle104
L_TFT_Rectangle103:
;__Lib_TFT.c, 933 :: 		
0x7B7C	0x4C85    LDR	R4, [PC, #532]
0x7B7E	0x8824    LDRH	R4, [R4, #0]
0x7B80	0x42A3    CMP	R3, R4
0x7B82	0xD304    BCC	L__TFT_Rectangle953
; loc_x_up_lft end address is: 12 (R3)
;__Lib_TFT.c, 934 :: 		
0x7B84	0x4C83    LDR	R4, [PC, #524]
0x7B86	0x8824    LDRH	R4, [R4, #0]
0x7B88	0x1E63    SUBS	R3, R4, #1
0x7B8A	0xB21B    SXTH	R3, R3
; loc_x_up_lft start address is: 12 (R3)
; loc_x_up_lft end address is: 12 (R3)
0x7B8C	0xE7FF    B	L_TFT_Rectangle105
L__TFT_Rectangle953:
;__Lib_TFT.c, 933 :: 		
;__Lib_TFT.c, 934 :: 		
L_TFT_Rectangle105:
; loc_x_up_lft start address is: 12 (R3)
0x7B8E	0xB218    SXTH	R0, R3
; loc_x_up_lft end address is: 12 (R3)
L_TFT_Rectangle104:
;__Lib_TFT.c, 936 :: 		
; loc_x_up_lft start address is: 0 (R0)
0x7B90	0x4C7F    LDR	R4, [PC, #508]
0x7B92	0x7824    LDRB	R4, [R4, #0]
0x7B94	0x1E64    SUBS	R4, R4, #1
0x7B96	0xB224    SXTH	R4, R4
0x7B98	0x1065    ASRS	R5, R4, #1
0x7B9A	0xB22D    SXTH	R5, R5
0x7B9C	0xF9BD4018  LDRSH	R4, [SP, #24]
0x7BA0	0x1964    ADDS	R4, R4, R5
0x7BA2	0xB224    SXTH	R4, R4
; loc_x_bt_rght start address is: 20 (R5)
0x7BA4	0xB225    SXTH	R5, R4
;__Lib_TFT.c, 937 :: 		
0x7BA6	0x2C00    CMP	R4, #0
0x7BA8	0xDA03    BGE	L_TFT_Rectangle106
;__Lib_TFT.c, 938 :: 		
0x7BAA	0x2500    MOVS	R5, #0
0x7BAC	0xB22D    SXTH	R5, R5
0x7BAE	0xB229    SXTH	R1, R5
0x7BB0	0xE009    B	L_TFT_Rectangle107
L_TFT_Rectangle106:
;__Lib_TFT.c, 939 :: 		
0x7BB2	0x4C78    LDR	R4, [PC, #480]
0x7BB4	0x8824    LDRH	R4, [R4, #0]
0x7BB6	0x42A5    CMP	R5, R4
0x7BB8	0xD304    BCC	L__TFT_Rectangle954
; loc_x_bt_rght end address is: 20 (R5)
;__Lib_TFT.c, 940 :: 		
0x7BBA	0x4C76    LDR	R4, [PC, #472]
0x7BBC	0x8824    LDRH	R4, [R4, #0]
0x7BBE	0x1E65    SUBS	R5, R4, #1
0x7BC0	0xB22D    SXTH	R5, R5
; loc_x_bt_rght start address is: 20 (R5)
; loc_x_bt_rght end address is: 20 (R5)
0x7BC2	0xE7FF    B	L_TFT_Rectangle108
L__TFT_Rectangle954:
;__Lib_TFT.c, 939 :: 		
;__Lib_TFT.c, 940 :: 		
L_TFT_Rectangle108:
; loc_x_bt_rght start address is: 20 (R5)
0x7BC4	0xB229    SXTH	R1, R5
; loc_x_bt_rght end address is: 20 (R5)
L_TFT_Rectangle107:
;__Lib_TFT.c, 942 :: 		
; loc_x_bt_rght start address is: 4 (R1)
0x7BC6	0x4C72    LDR	R4, [PC, #456]
0x7BC8	0x7824    LDRB	R4, [R4, #0]
0x7BCA	0xB1FC    CBZ	R4, L_TFT_Rectangle109
;__Lib_TFT.c, 943 :: 		
0x7BCC	0xF8AD1004  STRH	R1, [SP, #4]
0x7BD0	0xF8AD0006  STRH	R0, [SP, #6]
0x7BD4	0xF9BD2014  LDRSH	R2, [SP, #20]
0x7BD8	0xF7FCFF3A  BL	_TFT_H_Line+0
0x7BDC	0xF9BD0006  LDRSH	R0, [SP, #6]
0x7BE0	0xF9BD1004  LDRSH	R1, [SP, #4]
;__Lib_TFT.c, 944 :: 		
0x7BE4	0xF9BD201C  LDRSH	R2, [SP, #28]
; loc_x_bt_rght end address is: 4 (R1)
; loc_x_up_lft end address is: 0 (R0)
0x7BE8	0xF7FCFF32  BL	_TFT_H_Line+0
;__Lib_TFT.c, 945 :: 		
0x7BEC	0xF9BD2010  LDRSH	R2, [SP, #16]
0x7BF0	0xF9BD101C  LDRSH	R1, [SP, #28]
0x7BF4	0xF9BD0014  LDRSH	R0, [SP, #20]
0x7BF8	0xF7FDF826  BL	_TFT_V_Line+0
;__Lib_TFT.c, 946 :: 		
0x7BFC	0xF9BD2018  LDRSH	R2, [SP, #24]
0x7C00	0xF9BD101C  LDRSH	R1, [SP, #28]
0x7C04	0xF9BD0014  LDRSH	R0, [SP, #20]
0x7C08	0xF7FDF81E  BL	_TFT_V_Line+0
;__Lib_TFT.c, 947 :: 		
L_TFT_Rectangle109:
;__Lib_TFT.c, 949 :: 		
0x7C0C	0x4C62    LDR	R4, [PC, #392]
0x7C0E	0x7824    LDRB	R4, [R4, #0]
0x7C10	0x2C00    CMP	R4, #0
0x7C12	0xF00080B8  BEQ	L_TFT_Rectangle110
;__Lib_TFT.c, 950 :: 		
0x7C16	0x4C61    LDR	R4, [PC, #388]
0x7C18	0x8824    LDRH	R4, [R4, #0]
0x7C1A	0xF8AD400C  STRH	R4, [SP, #12]
;__Lib_TFT.c, 951 :: 		
0x7C1E	0x4F5C    LDR	R7, [PC, #368]
0x7C20	0x783C    LDRB	R4, [R7, #0]
0x7C22	0xF88D400E  STRB	R4, [SP, #14]
;__Lib_TFT.c, 953 :: 		
0x7C26	0x463C    MOV	R4, R7
0x7C28	0x7824    LDRB	R4, [R4, #0]
0x7C2A	0x1C64    ADDS	R4, R4, #1
0x7C2C	0xB224    SXTH	R4, R4
0x7C2E	0x1066    ASRS	R6, R4, #1
;__Lib_TFT.c, 954 :: 		
0x7C30	0xB2B5    UXTH	R5, R6
0x7C32	0xF9BD4010  LDRSH	R4, [SP, #16]
0x7C36	0x1964    ADDS	R4, R4, R5
0x7C38	0xF8AD4010  STRH	R4, [SP, #16]
;__Lib_TFT.c, 955 :: 		
0x7C3C	0xB2B5    UXTH	R5, R6
0x7C3E	0xF9BD4014  LDRSH	R4, [SP, #20]
0x7C42	0x1964    ADDS	R4, R4, R5
0x7C44	0xF8AD4014  STRH	R4, [SP, #20]
;__Lib_TFT.c, 957 :: 		
0x7C48	0x463C    MOV	R4, R7
0x7C4A	0x7824    LDRB	R4, [R4, #0]
0x7C4C	0x1CA4    ADDS	R4, R4, #2
0x7C4E	0xB224    SXTH	R4, R4
0x7C50	0x1066    ASRS	R6, R4, #1
;__Lib_TFT.c, 958 :: 		
0x7C52	0xB2B5    UXTH	R5, R6
0x7C54	0xF9BD4018  LDRSH	R4, [SP, #24]
0x7C58	0x1B64    SUB	R4, R4, R5
0x7C5A	0xF8AD4018  STRH	R4, [SP, #24]
;__Lib_TFT.c, 959 :: 		
0x7C5E	0xB2B5    UXTH	R5, R6
0x7C60	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7C64	0x1B64    SUB	R4, R4, R5
0x7C66	0xF8AD401C  STRH	R4, [SP, #28]
;__Lib_TFT.c, 961 :: 		
0x7C6A	0x4C4D    LDR	R4, [PC, #308]
0x7C6C	0x7824    LDRB	R4, [R4, #0]
0x7C6E	0x2C00    CMP	R4, #0
0x7C70	0xF0008063  BEQ	L_TFT_Rectangle111
;__Lib_TFT.c, 962 :: 		
0x7C74	0x4C4B    LDR	R4, [PC, #300]
0x7C76	0x7824    LDRB	R4, [R4, #0]
0x7C78	0xBB7C    CBNZ	R4, L_TFT_Rectangle112
;__Lib_TFT.c, 963 :: 		
0x7C7A	0xF9BD4014  LDRSH	R4, [SP, #20]
0x7C7E	0xF8AD400A  STRH	R4, [SP, #10]
L_TFT_Rectangle113:
0x7C82	0xF9BD501C  LDRSH	R5, [SP, #28]
0x7C86	0xF8BD400A  LDRH	R4, [SP, #10]
0x7C8A	0x42AC    CMP	R4, R5
0x7C8C	0xD824    BHI	L_TFT_Rectangle114
;__Lib_TFT.c, 964 :: 		
0x7C8E	0xF9BD5014  LDRSH	R5, [SP, #20]
0x7C92	0xF9BD401C  LDRSH	R4, [SP, #28]
0x7C96	0x1B67    SUB	R7, R4, R5
0x7C98	0xF9BD5014  LDRSH	R5, [SP, #20]
0x7C9C	0xF8BD400A  LDRH	R4, [SP, #10]
0x7CA0	0x1B66    SUB	R6, R4, R5
0x7CA2	0x4C41    LDR	R4, [PC, #260]
0x7CA4	0x8825    LDRH	R5, [R4, #0]
0x7CA6	0x4C41    LDR	R4, [PC, #260]
0x7CA8	0x8824    LDRH	R4, [R4, #0]
0x7CAA	0xB2BB    UXTH	R3, R7
0x7CAC	0xB2B2    UXTH	R2, R6
0x7CAE	0xB2A9    UXTH	R1, R5
0x7CB0	0xB2A0    UXTH	R0, R4
0x7CB2	0xF7FCFE2D  BL	_TFT_GetCurrentColor+0
;__Lib_TFT.c, 965 :: 		
0x7CB6	0x2101    MOVS	R1, #1
0x7CB8	0xF001FE7A  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 966 :: 		
0x7CBC	0xF8BD200A  LDRH	R2, [SP, #10]
0x7CC0	0xF9BD1018  LDRSH	R1, [SP, #24]
0x7CC4	0xF9BD0010  LDRSH	R0, [SP, #16]
0x7CC8	0xF7FCFEC2  BL	_TFT_H_Line+0
;__Lib_TFT.c, 963 :: 		
0x7CCC	0xF8BD400A  LDRH	R4, [SP, #10]
0x7CD0	0x1C64    ADDS	R4, R4, #1
0x7CD2	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT.c, 967 :: 		
0x7CD6	0xE7D4    B	L_TFT_Rectangle113
L_TFT_Rectangle114:
;__Lib_TFT.c, 968 :: 		
0x7CD8	0xE02E    B	L_TFT_Rectangle116
L_TFT_Rectangle112:
;__Lib_TFT.c, 969 :: 		
0x7CDA	0xF9BD4010  LDRSH	R4, [SP, #16]
0x7CDE	0xF8AD4008  STRH	R4, [SP, #8]
L_TFT_Rectangle117:
0x7CE2	0xF9BD5018  LDRSH	R5, [SP, #24]
0x7CE6	0xF8BD4008  LDRH	R4, [SP, #8]
0x7CEA	0x42AC    CMP	R4, R5
0x7CEC	0xD824    BHI	L_TFT_Rectangle118
;__Lib_TFT.c, 970 :: 		
0x7CEE	0xF9BD5010  LDRSH	R5, [SP, #16]
0x7CF2	0xF9BD4018  LDRSH	R4, [SP, #24]
0x7CF6	0x1B67    SUB	R7, R4, R5
0x7CF8	0xF9BD5010  LDRSH	R5, [SP, #16]
0x7CFC	0xF8BD4008  LDRH	R4, [SP, #8]
0x7D00	0x1B66    SUB	R6, R4, R5
0x7D02	0x4C29    LDR	R4, [PC, #164]
0x7D04	0x8825    LDRH	R5, [R4, #0]
0x7D06	0x4C29    LDR	R4, [PC, #164]
0x7D08	0x8824    LDRH	R4, [R4, #0]
0x7D0A	0xB2BB    UXTH	R3, R7
0x7D0C	0xB2B2    UXTH	R2, R6
0x7D0E	0xB2A9    UXTH	R1, R5
0x7D10	0xB2A0    UXTH	R0, R4
0x7D12	0xF7FCFDFD  BL	_TFT_GetCurrentColor+0
;__Lib_TFT.c, 971 :: 		
0x7D16	0x2101    MOVS	R1, #1
0x7D18	0xF001FE4A  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 972 :: 		
0x7D1C	0xF8BD2008  LDRH	R2, [SP, #8]
0x7D20	0xF9BD101C  LDRSH	R1, [SP, #28]
0x7D24	0xF9BD0014  LDRSH	R0, [SP, #20]
0x7D28	0xF7FCFF8E  BL	_TFT_V_Line+0
;__Lib_TFT.c, 969 :: 		
0x7D2C	0xF8BD4008  LDRH	R4, [SP, #8]
0x7D30	0x1C64    ADDS	R4, R4, #1
0x7D32	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 973 :: 		
0x7D36	0xE7D4    B	L_TFT_Rectangle117
L_TFT_Rectangle118:
;__Lib_TFT.c, 974 :: 		
L_TFT_Rectangle116:
;__Lib_TFT.c, 975 :: 		
0x7D38	0xE01D    B	L_TFT_Rectangle120
L_TFT_Rectangle111:
;__Lib_TFT.c, 976 :: 		
0x7D3A	0x4C1D    LDR	R4, [PC, #116]
0x7D3C	0x8824    LDRH	R4, [R4, #0]
0x7D3E	0x2101    MOVS	R1, #1
0x7D40	0xB2A0    UXTH	R0, R4
0x7D42	0xF001FE35  BL	_TFT_Set_Pen+0
;__Lib_TFT.c, 977 :: 		
0x7D46	0xF9BD4014  LDRSH	R4, [SP, #20]
0x7D4A	0xF8AD400A  STRH	R4, [SP, #10]
L_TFT_Rectangle121:
0x7D4E	0xF9BD501C  LDRSH	R5, [SP, #28]
0x7D52	0xF8BD400A  LDRH	R4, [SP, #10]
0x7D56	0x42AC    CMP	R4, R5
0x7D58	0xD80D    BHI	L_TFT_Rectangle122
;__Lib_TFT.c, 978 :: 		
0x7D5A	0xF8BD200A  LDRH	R2, [SP, #10]
0x7D5E	0xF9BD1018  LDRSH	R1, [SP, #24]
0x7D62	0xF9BD0010  LDRSH	R0, [SP, #16]
0x7D66	0xF7FCFE73  BL	_TFT_H_Line+0
;__Lib_TFT.c, 977 :: 		
0x7D6A	0xF8BD400A  LDRH	R4, [SP, #10]
0x7D6E	0x1C64    ADDS	R4, R4, #1
0x7D70	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT.c, 978 :: 		
0x7D74	0xE7EB    B	L_TFT_Rectangle121
L_TFT_Rectangle122:
;__Lib_TFT.c, 979 :: 		
L_TFT_Rectangle120:
;__Lib_TFT.c, 981 :: 		
0x7D76	0xF8BD500C  LDRH	R5, [SP, #12]
0x7D7A	0x4C08    LDR	R4, [PC, #32]
0x7D7C	0x8025    STRH	R5, [R4, #0]
;__Lib_TFT.c, 982 :: 		
0x7D7E	0xF89D500E  LDRB	R5, [SP, #14]
0x7D82	0x4C03    LDR	R4, [PC, #12]
0x7D84	0x7025    STRB	R5, [R4, #0]
;__Lib_TFT.c, 983 :: 		
L_TFT_Rectangle110:
;__Lib_TFT.c, 984 :: 		
L_end_TFT_Rectangle:
0x7D86	0xF8DDE000  LDR	LR, [SP, #0]
0x7D8A	0xB008    ADD	SP, SP, #32
0x7D8C	0x4770    BX	LR
0x7D8E	0xBF00    NOP
0x7D90	0x2E102000  	__Lib_TFT_PenWidth+0
0x7D94	0x22262000  	_TFT_DISP_WIDTH+0
0x7D98	0x2DE32000  	__Lib_TFT_BrushEnabled+0
0x7D9C	0x2E062000  	__Lib_TFT_PenColor+0
0x7DA0	0x2E002000  	__Lib_TFT_GradientEnabled+0
0x7DA4	0x2E012000  	__Lib_TFT_GradientOrientation+0
0x7DA8	0x2E042000  	__Lib_TFT_GradColorTo+0
0x7DAC	0x2E022000  	__Lib_TFT_GradColorFrom+0
0x7DB0	0x2DFE2000  	__Lib_TFT_BrushColor+0
; end of _TFT_Rectangle
_DrawCBox:
;Ducati_logger_driver.c, 3930 :: 		void DrawCBox(TCBox *ABox) {
; ABox start address is: 0 (R0)
0xD618	0xB082    SUB	SP, SP, #8
0xD61A	0xF8CDE000  STR	LR, [SP, #0]
; ABox end address is: 0 (R0)
; ABox start address is: 0 (R0)
;Ducati_logger_driver.c, 3931 :: 		if (ABox->Visible == 1) {
0xD61E	0xF2000112  ADDW	R1, R0, #18
0xD622	0x7809    LDRB	R1, [R1, #0]
0xD624	0x2901    CMP	R1, #1
0xD626	0xD171    BNE	L_DrawCBox43
;Ducati_logger_driver.c, 3932 :: 		if (object_pressed == 1) {
0xD628	0x493A    LDR	R1, [PC, #232]
0xD62A	0x7809    LDRB	R1, [R1, #0]
0xD62C	0x2901    CMP	R1, #1
0xD62E	0xD125    BNE	L_DrawCBox44
;Ducati_logger_driver.c, 3933 :: 		object_pressed = 0;
0xD630	0x2200    MOVS	R2, #0
0xD632	0x4938    LDR	R1, [PC, #224]
0xD634	0x700A    STRB	R2, [R1, #0]
;Ducati_logger_driver.c, 3934 :: 		TFT_Set_Brush(ABox->Transparent, ABox->Press_Color, ABox->Gradient, ABox->Gradient_Orientation, ABox->Gradient_End_Color, ABox->Gradient_Start_Color);
0xD636	0xF2000118  ADDW	R1, R0, #24
0xD63A	0x8809    LDRH	R1, [R1, #0]
0xD63C	0xB28E    UXTH	R6, R1
0xD63E	0xF200011A  ADDW	R1, R0, #26
0xD642	0x8809    LDRH	R1, [R1, #0]
0xD644	0xB28D    UXTH	R5, R1
0xD646	0xF2000116  ADDW	R1, R0, #22
0xD64A	0x7809    LDRB	R1, [R1, #0]
0xD64C	0xB2CC    UXTB	R4, R1
0xD64E	0xF2000115  ADDW	R1, R0, #21
0xD652	0x7809    LDRB	R1, [R1, #0]
0xD654	0xB2CB    UXTB	R3, R1
0xD656	0xF2000120  ADDW	R1, R0, #32
0xD65A	0x8809    LDRH	R1, [R1, #0]
0xD65C	0xB28A    UXTH	R2, R1
0xD65E	0xF2000114  ADDW	R1, R0, #20
0xD662	0x7809    LDRB	R1, [R1, #0]
0xD664	0x9001    STR	R0, [SP, #4]
0xD666	0xB2C8    UXTB	R0, R1
0xD668	0xB291    UXTH	R1, R2
0xD66A	0xB2DA    UXTB	R2, R3
0xD66C	0xB2E3    UXTB	R3, R4
0xD66E	0xB440    PUSH	(R6)
0xD670	0xB420    PUSH	(R5)
0xD672	0xF7FBFE69  BL	_TFT_Set_Brush+0
0xD676	0xB002    ADD	SP, SP, #8
0xD678	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3935 :: 		}
0xD67A	0xE021    B	L_DrawCBox45
L_DrawCBox44:
;Ducati_logger_driver.c, 3937 :: 		TFT_Set_Brush(ABox->Transparent, ABox->Color, ABox->Gradient, ABox->Gradient_Orientation, ABox->Gradient_Start_Color, ABox->Gradient_End_Color);
0xD67C	0xF200011A  ADDW	R1, R0, #26
0xD680	0x8809    LDRH	R1, [R1, #0]
0xD682	0xB28E    UXTH	R6, R1
0xD684	0xF2000118  ADDW	R1, R0, #24
0xD688	0x8809    LDRH	R1, [R1, #0]
0xD68A	0xB28D    UXTH	R5, R1
0xD68C	0xF2000116  ADDW	R1, R0, #22
0xD690	0x7809    LDRB	R1, [R1, #0]
0xD692	0xB2CC    UXTB	R4, R1
0xD694	0xF2000115  ADDW	R1, R0, #21
0xD698	0x7809    LDRB	R1, [R1, #0]
0xD69A	0xB2CB    UXTB	R3, R1
0xD69C	0xF200011C  ADDW	R1, R0, #28
0xD6A0	0x8809    LDRH	R1, [R1, #0]
0xD6A2	0xB28A    UXTH	R2, R1
0xD6A4	0xF2000114  ADDW	R1, R0, #20
0xD6A8	0x7809    LDRB	R1, [R1, #0]
0xD6AA	0x9001    STR	R0, [SP, #4]
0xD6AC	0xB2C8    UXTB	R0, R1
0xD6AE	0xB291    UXTH	R1, R2
0xD6B0	0xB2DA    UXTB	R2, R3
0xD6B2	0xB2E3    UXTB	R3, R4
0xD6B4	0xB440    PUSH	(R6)
0xD6B6	0xB420    PUSH	(R5)
0xD6B8	0xF7FBFE46  BL	_TFT_Set_Brush+0
0xD6BC	0xB002    ADD	SP, SP, #8
0xD6BE	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3938 :: 		}
L_DrawCBox45:
;Ducati_logger_driver.c, 3939 :: 		TFT_Set_Pen(ABox->Pen_Color, ABox->Pen_Width);
0xD6C0	0xF200010E  ADDW	R1, R0, #14
0xD6C4	0x7809    LDRB	R1, [R1, #0]
0xD6C6	0xB2CA    UXTB	R2, R1
0xD6C8	0xF2000110  ADDW	R1, R0, #16
0xD6CC	0x8809    LDRH	R1, [R1, #0]
0xD6CE	0x9001    STR	R0, [SP, #4]
0xD6D0	0xB288    UXTH	R0, R1
0xD6D2	0xB2D1    UXTB	R1, R2
0xD6D4	0xF7FCF96C  BL	_TFT_Set_Pen+0
0xD6D8	0x9801    LDR	R0, [SP, #4]
;Ducati_logger_driver.c, 3940 :: 		TFT_Rectangle(ABox->Left, ABox->Top, ABox->Left + ABox->Width - 1, ABox->Top + ABox->Height - 1);
0xD6DA	0xF2000108  ADDW	R1, R0, #8
0xD6DE	0x880A    LDRH	R2, [R1, #0]
0xD6E0	0xF200010C  ADDW	R1, R0, #12
0xD6E4	0x8809    LDRH	R1, [R1, #0]
0xD6E6	0x1851    ADDS	R1, R2, R1
0xD6E8	0xB289    UXTH	R1, R1
0xD6EA	0x1E4D    SUBS	R5, R1, #1
0xD6EC	0x1D81    ADDS	R1, R0, #6
0xD6EE	0x880C    LDRH	R4, [R1, #0]
0xD6F0	0xF200010A  ADDW	R1, R0, #10
; ABox end address is: 0 (R0)
0xD6F4	0x8809    LDRH	R1, [R1, #0]
0xD6F6	0x1861    ADDS	R1, R4, R1
0xD6F8	0xB289    UXTH	R1, R1
0xD6FA	0x1E4B    SUBS	R3, R1, #1
0xD6FC	0xB212    SXTH	R2, R2
0xD6FE	0xB221    SXTH	R1, R4
0xD700	0xB208    SXTH	R0, R1
0xD702	0xB211    SXTH	R1, R2
0xD704	0xB21A    SXTH	R2, R3
0xD706	0xB22B    SXTH	R3, R5
0xD708	0xF7FAFA1E  BL	_TFT_Rectangle+0
;Ducati_logger_driver.c, 3941 :: 		}
L_DrawCBox43:
;Ducati_logger_driver.c, 3942 :: 		}
L_end_DrawCBox:
0xD70C	0xF8DDE000  LDR	LR, [SP, #0]
0xD710	0xB002    ADD	SP, SP, #8
0xD712	0x4770    BX	LR
0xD714	0x22282000  	_object_pressed+0
; end of _DrawCBox
_DrawLine:
;Ducati_logger_driver.c, 3944 :: 		void DrawLine(TLine *Aline) {
; Aline start address is: 0 (R0)
0xDCFC	0xB081    SUB	SP, SP, #4
0xDCFE	0xF8CDE000  STR	LR, [SP, #0]
0xDD02	0x4605    MOV	R5, R0
; Aline end address is: 0 (R0)
; Aline start address is: 20 (R5)
;Ducati_logger_driver.c, 3945 :: 		if (Aline->Visible == 1) {
0xDD04	0xF205010F  ADDW	R1, R5, #15
0xDD08	0x7809    LDRB	R1, [R1, #0]
0xDD0A	0x2901    CMP	R1, #1
0xDD0C	0xD11F    BNE	L_DrawLine46
;Ducati_logger_driver.c, 3946 :: 		TFT_Set_Pen(Aline->Color, Aline->Pen_Width);
0xDD0E	0xF205010E  ADDW	R1, R5, #14
0xDD12	0x7809    LDRB	R1, [R1, #0]
0xDD14	0xB2CA    UXTB	R2, R1
0xDD16	0xF2050110  ADDW	R1, R5, #16
0xDD1A	0x8809    LDRH	R1, [R1, #0]
0xDD1C	0xB288    UXTH	R0, R1
0xDD1E	0xB2D1    UXTB	R1, R2
0xDD20	0xF7FBFE46  BL	_TFT_Set_Pen+0
;Ducati_logger_driver.c, 3947 :: 		TFT_Line(Aline->First_Point_X, Aline->First_Point_Y, Aline->Second_Point_X, Aline->Second_Point_Y);
0xDD24	0xF205010C  ADDW	R1, R5, #12
0xDD28	0x8809    LDRH	R1, [R1, #0]
0xDD2A	0xB20C    SXTH	R4, R1
0xDD2C	0xF205010A  ADDW	R1, R5, #10
0xDD30	0x8809    LDRH	R1, [R1, #0]
0xDD32	0xB20B    SXTH	R3, R1
0xDD34	0xF2050108  ADDW	R1, R5, #8
0xDD38	0x8809    LDRH	R1, [R1, #0]
0xDD3A	0xB20A    SXTH	R2, R1
0xDD3C	0x1DA9    ADDS	R1, R5, #6
; Aline end address is: 20 (R5)
0xDD3E	0x8809    LDRH	R1, [R1, #0]
0xDD40	0xB209    SXTH	R1, R1
0xDD42	0xB208    SXTH	R0, R1
0xDD44	0xB211    SXTH	R1, R2
0xDD46	0xB21A    SXTH	R2, R3
0xDD48	0xB223    SXTH	R3, R4
0xDD4A	0xF7F6FBDF  BL	_TFT_Line+0
;Ducati_logger_driver.c, 3948 :: 		}
L_DrawLine46:
;Ducati_logger_driver.c, 3949 :: 		}
L_end_DrawLine:
0xDD4E	0xF8DDE000  LDR	LR, [SP, #0]
0xDD52	0xB001    ADD	SP, SP, #4
0xDD54	0x4770    BX	LR
; end of _DrawLine
_DrawImage:
;Ducati_logger_driver.c, 3860 :: 		void DrawImage(TImage *AImage) {
; AImage start address is: 0 (R0)
0xDCBC	0xB081    SUB	SP, SP, #4
0xDCBE	0xF8CDE000  STR	LR, [SP, #0]
; AImage end address is: 0 (R0)
; AImage start address is: 0 (R0)
;Ducati_logger_driver.c, 3861 :: 		if (AImage->Visible) {
0xDCC2	0xF2000114  ADDW	R1, R0, #20
0xDCC6	0x7809    LDRB	R1, [R1, #0]
0xDCC8	0xB199    CBZ	R1, L_DrawImage27
;Ducati_logger_driver.c, 3862 :: 		TFT_Ext_Image(AImage->Left, AImage->Top, AImage->Picture_Name, AImage->Picture_Ratio);
0xDCCA	0xF2000117  ADDW	R1, R0, #23
0xDCCE	0x7809    LDRB	R1, [R1, #0]
0xDCD0	0xB2CC    UXTB	R4, R1
0xDCD2	0xF2000110  ADDW	R1, R0, #16
0xDCD6	0x6809    LDR	R1, [R1, #0]
0xDCD8	0x460B    MOV	R3, R1
0xDCDA	0xF2000108  ADDW	R1, R0, #8
0xDCDE	0x8809    LDRH	R1, [R1, #0]
0xDCE0	0xB28A    UXTH	R2, R1
0xDCE2	0x1D81    ADDS	R1, R0, #6
; AImage end address is: 0 (R0)
0xDCE4	0x8809    LDRH	R1, [R1, #0]
0xDCE6	0xB288    UXTH	R0, R1
0xDCE8	0xB291    UXTH	R1, R2
0xDCEA	0x461A    MOV	R2, R3
0xDCEC	0xB2E3    UXTB	R3, R4
0xDCEE	0xF7FAF8C3  BL	_TFT_Ext_Image+0
;Ducati_logger_driver.c, 3863 :: 		}
L_DrawImage27:
;Ducati_logger_driver.c, 3864 :: 		}
L_end_DrawImage:
0xDCF2	0xF8DDE000  LDR	LR, [SP, #0]
0xDCF6	0xB001    ADD	SP, SP, #4
0xDCF8	0x4770    BX	LR
; end of _DrawImage
_TFT_Ext_Image:
;__Lib_TFT.c, 3839 :: 		
; stretch start address is: 12 (R3)
; image start address is: 8 (R2)
; top start address is: 4 (R1)
; left start address is: 0 (R0)
0x7E78	0xB085    SUB	SP, SP, #20
0x7E7A	0xF8CDE000  STR	LR, [SP, #0]
; stretch end address is: 12 (R3)
; image end address is: 8 (R2)
; top end address is: 4 (R1)
; left end address is: 0 (R0)
; left start address is: 0 (R0)
; top start address is: 4 (R1)
; image start address is: 8 (R2)
; stretch start address is: 12 (R3)
;__Lib_TFT.c, 3844 :: 		
0x7E7E	0x4C1C    LDR	R4, [PC, #112]
0x7E80	0x8824    LDRH	R4, [R4, #0]
0x7E82	0x42A0    CMP	R0, R4
0x7E84	0xD300    BCC	L_TFT_Ext_Image810
; left end address is: 0 (R0)
; top end address is: 4 (R1)
; image end address is: 8 (R2)
; stretch end address is: 12 (R3)
;__Lib_TFT.c, 3845 :: 		
0x7E86	0xE02E    B	L_end_TFT_Ext_Image
L_TFT_Ext_Image810:
;__Lib_TFT.c, 3846 :: 		
; stretch start address is: 12 (R3)
; image start address is: 8 (R2)
; top start address is: 4 (R1)
; left start address is: 0 (R0)
0x7E88	0x4C1A    LDR	R4, [PC, #104]
0x7E8A	0x8824    LDRH	R4, [R4, #0]
0x7E8C	0x42A1    CMP	R1, R4
0x7E8E	0xD300    BCC	L_TFT_Ext_Image811
; left end address is: 0 (R0)
; top end address is: 4 (R1)
; image end address is: 8 (R2)
; stretch end address is: 12 (R3)
;__Lib_TFT.c, 3847 :: 		
0x7E90	0xE029    B	L_end_TFT_Ext_Image
L_TFT_Ext_Image811:
;__Lib_TFT.c, 3850 :: 		
; stretch start address is: 12 (R3)
; image start address is: 8 (R2)
; top start address is: 4 (R1)
; left start address is: 0 (R0)
0x7E92	0xF88D3004  STRB	R3, [SP, #4]
0x7E96	0x9202    STR	R2, [SP, #8]
0x7E98	0xF8AD100C  STRH	R1, [SP, #12]
0x7E9C	0xF8AD0010  STRH	R0, [SP, #16]
0x7EA0	0x210A    MOVS	R1, #10
0x7EA2	0x4610    MOV	R0, R2
0x7EA4	0xF7FCFFEC  BL	__Lib_TFT__TFT_getHeader+0
0x7EA8	0xF8BD0010  LDRH	R0, [SP, #16]
0x7EAC	0xF8BD100C  LDRH	R1, [SP, #12]
0x7EB0	0x9A02    LDR	R2, [SP, #8]
0x7EB2	0xF89D3004  LDRB	R3, [SP, #4]
;__Lib_TFT.c, 3851 :: 		
; ptr start address is: 20 (R5)
0x7EB6	0x4D10    LDR	R5, [PC, #64]
;__Lib_TFT.c, 3853 :: 		
0x7EB8	0x1C6C    ADDS	R4, R5, #1
; ptr end address is: 20 (R5)
0x7EBA	0x7824    LDRB	R4, [R4, #0]
; colorDepth start address is: 16 (R4)
;__Lib_TFT.c, 3855 :: 		
0x7EBC	0xE00B    B	L_TFT_Ext_Image812
; colorDepth end address is: 16 (R4)
;__Lib_TFT.c, 3856 :: 		
L_TFT_Ext_Image814:
;__Lib_TFT.c, 3857 :: 		
; stretch end address is: 12 (R3)
; image end address is: 8 (R2)
; top end address is: 4 (R1)
; left end address is: 0 (R0)
0x7EBE	0xF7FDF8E1  BL	__Lib_TFT_TFT_Image1bppE+0
;__Lib_TFT.c, 3858 :: 		
0x7EC2	0xE010    B	L_TFT_Ext_Image813
;__Lib_TFT.c, 3859 :: 		
L_TFT_Ext_Image815:
;__Lib_TFT.c, 3860 :: 		
; stretch start address is: 12 (R3)
; image start address is: 8 (R2)
; top start address is: 4 (R1)
; left start address is: 0 (R0)
; stretch end address is: 12 (R3)
; image end address is: 8 (R2)
; top end address is: 4 (R1)
; left end address is: 0 (R0)
0x7EC4	0xF7FDFA4C  BL	__Lib_TFT_TFT_Image4bppE+0
;__Lib_TFT.c, 3861 :: 		
0x7EC8	0xE00D    B	L_TFT_Ext_Image813
;__Lib_TFT.c, 3862 :: 		
L_TFT_Ext_Image816:
;__Lib_TFT.c, 3863 :: 		
; stretch start address is: 12 (R3)
; image start address is: 8 (R2)
; top start address is: 4 (R1)
; left start address is: 0 (R0)
; stretch end address is: 12 (R3)
; image end address is: 8 (R2)
; top end address is: 4 (R1)
; left end address is: 0 (R0)
0x7ECA	0xF7FDFCDB  BL	__Lib_TFT_TFT_Image8bppE+0
;__Lib_TFT.c, 3864 :: 		
0x7ECE	0xE00A    B	L_TFT_Ext_Image813
;__Lib_TFT.c, 3865 :: 		
L_TFT_Ext_Image817:
;__Lib_TFT.c, 3866 :: 		
; stretch start address is: 12 (R3)
; image start address is: 8 (R2)
; top start address is: 4 (R1)
; left start address is: 0 (R0)
; stretch end address is: 12 (R3)
; image end address is: 8 (R2)
; top end address is: 4 (R1)
; left end address is: 0 (R0)
0x7ED0	0xF7FDFB96  BL	__Lib_TFT_TFT_Image16bppE+0
;__Lib_TFT.c, 3867 :: 		
0x7ED4	0xE007    B	L_TFT_Ext_Image813
;__Lib_TFT.c, 3868 :: 		
L_TFT_Ext_Image812:
; colorDepth start address is: 16 (R4)
; stretch start address is: 12 (R3)
; image start address is: 8 (R2)
; top start address is: 4 (R1)
; left start address is: 0 (R0)
0x7ED6	0x2C01    CMP	R4, #1
0x7ED8	0xD0F1    BEQ	L_TFT_Ext_Image814
0x7EDA	0x2C04    CMP	R4, #4
0x7EDC	0xD0F2    BEQ	L_TFT_Ext_Image815
0x7EDE	0x2C08    CMP	R4, #8
0x7EE0	0xD0F3    BEQ	L_TFT_Ext_Image816
0x7EE2	0x2C10    CMP	R4, #16
0x7EE4	0xD0F4    BEQ	L_TFT_Ext_Image817
; left end address is: 0 (R0)
; top end address is: 4 (R1)
; image end address is: 8 (R2)
; stretch end address is: 12 (R3)
; colorDepth end address is: 16 (R4)
L_TFT_Ext_Image813:
;__Lib_TFT.c, 3869 :: 		
L_end_TFT_Ext_Image:
0x7EE6	0xF8DDE000  LDR	LR, [SP, #0]
0x7EEA	0xB005    ADD	SP, SP, #20
0x7EEC	0x4770    BX	LR
0x7EEE	0xBF00    NOP
0x7EF0	0x22262000  	_TFT_DISP_WIDTH+0
0x7EF4	0x22242000  	_TFT_DISP_HEIGHT+0
0x7EF8	0x2DE82000  	__Lib_TFT_headerBuffer+0
; end of _TFT_Ext_Image
__Lib_TFT_TFT_Image1bppE:
;__Lib_TFT.c, 3748 :: 		
; image start address is: 8 (R2)
0x5084	0xB091    SUB	SP, SP, #68
0x5086	0xF8CDE000  STR	LR, [SP, #0]
0x508A	0xF8AD0038  STRH	R0, [SP, #56]
0x508E	0x4610    MOV	R0, R2
0x5090	0xF8AD103C  STRH	R1, [SP, #60]
0x5094	0xF88D3040  STRB	R3, [SP, #64]
; image end address is: 8 (R2)
; image start address is: 0 (R0)
;__Lib_TFT.c, 3761 :: 		
0x5098	0x4C97    LDR	R4, [PC, #604]
0x509A	0x9407    STR	R4, [SP, #28]
;__Lib_TFT.c, 3762 :: 		
0x509C	0xF200040A  ADDW	R4, R0, #10
; image end address is: 0 (R0)
0x50A0	0x9408    STR	R4, [SP, #32]
;__Lib_TFT.c, 3764 :: 		
0x50A2	0x9C07    LDR	R4, [SP, #28]
0x50A4	0x1CA5    ADDS	R5, R4, #2
;__Lib_TFT.c, 3765 :: 		
0x50A6	0x782C    LDRB	R4, [R5, #0]
0x50A8	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT.c, 3766 :: 		
0x50AC	0x1C6E    ADDS	R6, R5, #1
;__Lib_TFT.c, 3767 :: 		
0x50AE	0x7834    LDRB	R4, [R6, #0]
0x50B0	0x0225    LSLS	R5, R4, #8
0x50B2	0xB2AD    UXTH	R5, R5
0x50B4	0xF8BD400A  LDRH	R4, [SP, #10]
0x50B8	0x1964    ADDS	R4, R4, R5
0x50BA	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT.c, 3769 :: 		
0x50BE	0x1C75    ADDS	R5, R6, #1
;__Lib_TFT.c, 3770 :: 		
0x50C0	0x782C    LDRB	R4, [R5, #0]
0x50C2	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 3771 :: 		
0x50C6	0x1C6E    ADDS	R6, R5, #1
;__Lib_TFT.c, 3772 :: 		
0x50C8	0x7834    LDRB	R4, [R6, #0]
0x50CA	0x0225    LSLS	R5, R4, #8
0x50CC	0xB2AD    UXTH	R5, R5
0x50CE	0xF8BD4008  LDRH	R4, [SP, #8]
0x50D2	0x1964    ADDS	R4, R4, R5
0x50D4	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 3774 :: 		
0x50D8	0x1C74    ADDS	R4, R6, #1
0x50DA	0x9407    STR	R4, [SP, #28]
;__Lib_TFT.c, 3775 :: 		
0x50DC	0xF10D0616  ADD	R6, SP, #22
0x50E0	0x7824    LDRB	R4, [R4, #0]
0x50E2	0x8034    STRH	R4, [R6, #0]
;__Lib_TFT.c, 3776 :: 		
0x50E4	0x9C07    LDR	R4, [SP, #28]
0x50E6	0x1C64    ADDS	R4, R4, #1
0x50E8	0x9407    STR	R4, [SP, #28]
;__Lib_TFT.c, 3777 :: 		
0x50EA	0x7824    LDRB	R4, [R4, #0]
0x50EC	0x0225    LSLS	R5, R4, #8
0x50EE	0xB2AD    UXTH	R5, R5
0x50F0	0x8834    LDRH	R4, [R6, #0]
0x50F2	0x1964    ADDS	R4, R4, R5
0x50F4	0x8034    STRH	R4, [R6, #0]
;__Lib_TFT.c, 3779 :: 		
0x50F6	0x9C07    LDR	R4, [SP, #28]
0x50F8	0x1C64    ADDS	R4, R4, #1
0x50FA	0x9407    STR	R4, [SP, #28]
;__Lib_TFT.c, 3780 :: 		
0x50FC	0x1CB5    ADDS	R5, R6, #2
0x50FE	0x7824    LDRB	R4, [R4, #0]
0x5100	0x802C    STRH	R4, [R5, #0]
;__Lib_TFT.c, 3781 :: 		
0x5102	0x9C07    LDR	R4, [SP, #28]
0x5104	0x1C64    ADDS	R4, R4, #1
;__Lib_TFT.c, 3782 :: 		
0x5106	0x1CB6    ADDS	R6, R6, #2
0x5108	0x7824    LDRB	R4, [R4, #0]
0x510A	0x0225    LSLS	R5, R4, #8
0x510C	0xB2AD    UXTH	R5, R5
0x510E	0x8834    LDRH	R4, [R6, #0]
0x5110	0x1964    ADDS	R4, R4, R5
0x5112	0x8034    STRH	R4, [R6, #0]
;__Lib_TFT.c, 3784 :: 		
0x5114	0xF8BD5038  LDRH	R5, [SP, #56]
0x5118	0x4C78    LDR	R4, [PC, #480]
0x511A	0x8824    LDRH	R4, [R4, #0]
0x511C	0x1B64    SUB	R4, R4, R5
0x511E	0xF8AD400C  STRH	R4, [SP, #12]
;__Lib_TFT.c, 3785 :: 		
0x5122	0xF8BD503C  LDRH	R5, [SP, #60]
0x5126	0x4C76    LDR	R4, [PC, #472]
0x5128	0x8824    LDRH	R4, [R4, #0]
0x512A	0x1B64    SUB	R4, R4, R5
0x512C	0xF8AD400E  STRH	R4, [SP, #14]
;__Lib_TFT.c, 3787 :: 		
0x5130	0xF8BD4008  LDRH	R4, [SP, #8]
0x5134	0x08E4    LSRS	R4, R4, #3
0x5136	0xB2A4    UXTH	R4, R4
0x5138	0x940D    STR	R4, [SP, #52]
;__Lib_TFT.c, 3788 :: 		
0x513A	0xF8BD4008  LDRH	R4, [SP, #8]
0x513E	0xF0040407  AND	R4, R4, #7
0x5142	0xB2A4    UXTH	R4, R4
0x5144	0xB114    CBZ	R4, L___Lib_TFT_TFT_Image1bppE785
;__Lib_TFT.c, 3789 :: 		
0x5146	0x9C0D    LDR	R4, [SP, #52]
0x5148	0x1C64    ADDS	R4, R4, #1
0x514A	0x940D    STR	R4, [SP, #52]
L___Lib_TFT_TFT_Image1bppE785:
;__Lib_TFT.c, 3791 :: 		
0x514C	0x2500    MOVS	R5, #0
0x514E	0xB26D    SXTB	R5, R5
0x5150	0x4C6C    LDR	R4, [PC, #432]
0x5152	0x6025    STR	R5, [R4, #0]
;__Lib_TFT.c, 3792 :: 		
0x5154	0x2400    MOVS	R4, #0
0x5156	0xF8AD4012  STRH	R4, [SP, #18]
L___Lib_TFT_TFT_Image1bppE786:
0x515A	0xF8BD500A  LDRH	R5, [SP, #10]
0x515E	0xF8BD4012  LDRH	R4, [SP, #18]
0x5162	0x42AC    CMP	R4, R5
0x5164	0xF08080BF  BCS	L___Lib_TFT_TFT_Image1bppE787
;__Lib_TFT.c, 3793 :: 		
0x5168	0x9C08    LDR	R4, [SP, #32]
0x516A	0x940C    STR	R4, [SP, #48]
;__Lib_TFT.c, 3794 :: 		
0x516C	0xF8BD500E  LDRH	R5, [SP, #14]
0x5170	0xF8BD4012  LDRH	R4, [SP, #18]
0x5174	0x42AC    CMP	R4, R5
0x5176	0xF20080B0  BHI	L___Lib_TFT_TFT_Image1bppE1099
0x517A	0x4C61    LDR	R4, [PC, #388]
0x517C	0x8825    LDRH	R5, [R4, #0]
0x517E	0xF8BD403C  LDRH	R4, [SP, #60]
0x5182	0x42AC    CMP	R4, R5
0x5184	0xF08080A9  BCS	L___Lib_TFT_TFT_Image1bppE1098
L___Lib_TFT_TFT_Image1bppE1097:
;__Lib_TFT.c, 3795 :: 		
0x5188	0x2400    MOVS	R4, #0
0x518A	0xF88D4015  STRB	R4, [SP, #21]
L___Lib_TFT_TFT_Image1bppE792:
0x518E	0xF89D5040  LDRB	R5, [SP, #64]
0x5192	0xF89D4015  LDRB	R4, [SP, #21]
0x5196	0x42AC    CMP	R4, R5
0x5198	0xF080809F  BCS	L___Lib_TFT_TFT_Image1bppE793
;__Lib_TFT.c, 3796 :: 		
0x519C	0x9C0C    LDR	R4, [SP, #48]
0x519E	0x9408    STR	R4, [SP, #32]
;__Lib_TFT.c, 3797 :: 		
0x51A0	0xF007FA6A  BL	__Lib_TFT_Is_SSD1963_Set+0
0x51A4	0xB198    CBZ	R0, L___Lib_TFT_TFT_Image1bppE795
;__Lib_TFT.c, 3798 :: 		
0x51A6	0xF89D5040  LDRB	R5, [SP, #64]
0x51AA	0xF8BD4008  LDRH	R4, [SP, #8]
0x51AE	0x4365    MULS	R5, R4, R5
0x51B0	0xB2AD    UXTH	R5, R5
0x51B2	0xF8BD4038  LDRH	R4, [SP, #56]
0x51B6	0x1964    ADDS	R4, R4, R5
0x51B8	0xF8BD303C  LDRH	R3, [SP, #60]
0x51BC	0xB2A2    UXTH	R2, R4
0x51BE	0xF8BD103C  LDRH	R1, [SP, #60]
0x51C2	0xF8BD0038  LDRH	R0, [SP, #56]
0x51C6	0x4C50    LDR	R4, [PC, #320]
0x51C8	0x6824    LDR	R4, [R4, #0]
0x51CA	0x47A0    BLX	R4
0x51CC	0xE006    B	L___Lib_TFT_TFT_Image1bppE796
L___Lib_TFT_TFT_Image1bppE795:
;__Lib_TFT.c, 3800 :: 		
0x51CE	0xF8BD103C  LDRH	R1, [SP, #60]
0x51D2	0xF8BD0038  LDRH	R0, [SP, #56]
0x51D6	0x4C4D    LDR	R4, [PC, #308]
0x51D8	0x6824    LDR	R4, [R4, #0]
0x51DA	0x47A0    BLX	R4
L___Lib_TFT_TFT_Image1bppE796:
;__Lib_TFT.c, 3801 :: 		
0x51DC	0x2400    MOVS	R4, #0
0x51DE	0xF88D401A  STRB	R4, [SP, #26]
;__Lib_TFT.c, 3802 :: 		
0x51E2	0x9C0D    LDR	R4, [SP, #52]
0x51E4	0x9409    STR	R4, [SP, #36]
;__Lib_TFT.c, 3803 :: 		
0x51E6	0x2400    MOVS	R4, #0
0x51E8	0x940A    STR	R4, [SP, #40]
;__Lib_TFT.c, 3804 :: 		
L___Lib_TFT_TFT_Image1bppE797:
0x51EA	0x9C09    LDR	R4, [SP, #36]
0x51EC	0x2C00    CMP	R4, #0
0x51EE	0xF2408069  BLS	L___Lib_TFT_TFT_Image1bppE798
;__Lib_TFT.c, 3805 :: 		
0x51F2	0xAC0B    ADD	R4, SP, #44
0x51F4	0x4622    MOV	R2, R4
0x51F6	0x9909    LDR	R1, [SP, #36]
0x51F8	0x9808    LDR	R0, [SP, #32]
0x51FA	0x4C45    LDR	R4, [PC, #276]
0x51FC	0x6824    LDR	R4, [R4, #0]
0x51FE	0x47A0    BLX	R4
0x5200	0x9007    STR	R0, [SP, #28]
;__Lib_TFT.c, 3806 :: 		
0x5202	0x9D0B    LDR	R5, [SP, #44]
0x5204	0x9C08    LDR	R4, [SP, #32]
0x5206	0x1964    ADDS	R4, R4, R5
0x5208	0x9408    STR	R4, [SP, #32]
;__Lib_TFT.c, 3807 :: 		
0x520A	0x9D0B    LDR	R5, [SP, #44]
0x520C	0x9C09    LDR	R4, [SP, #36]
0x520E	0x1B64    SUB	R4, R4, R5
0x5210	0x9409    STR	R4, [SP, #36]
;__Lib_TFT.c, 3808 :: 		
0x5212	0x9C0B    LDR	R4, [SP, #44]
0x5214	0x00E4    LSLS	R4, R4, #3
0x5216	0x940B    STR	R4, [SP, #44]
;__Lib_TFT.c, 3809 :: 		
0x5218	0x2400    MOVS	R4, #0
0x521A	0xF8AD4010  STRH	R4, [SP, #16]
L___Lib_TFT_TFT_Image1bppE799:
0x521E	0x9D0B    LDR	R5, [SP, #44]
0x5220	0xF8BD4010  LDRH	R4, [SP, #16]
0x5224	0x42AC    CMP	R4, R5
0x5226	0xD24C    BCS	L___Lib_TFT_TFT_Image1bppE800
;__Lib_TFT.c, 3810 :: 		
0x5228	0xF8BD5008  LDRH	R5, [SP, #8]
0x522C	0x9C0A    LDR	R4, [SP, #40]
0x522E	0x42AC    CMP	R4, R5
0x5230	0xD900    BLS	L___Lib_TFT_TFT_Image1bppE802
;__Lib_TFT.c, 3811 :: 		
0x5232	0xE046    B	L___Lib_TFT_TFT_Image1bppE800
L___Lib_TFT_TFT_Image1bppE802:
;__Lib_TFT.c, 3813 :: 		
0x5234	0xF89D401A  LDRB	R4, [SP, #26]
0x5238	0xB94C    CBNZ	R4, L___Lib_TFT_TFT_Image1bppE803
;__Lib_TFT.c, 3814 :: 		
0x523A	0x9C07    LDR	R4, [SP, #28]
0x523C	0x7824    LDRB	R4, [R4, #0]
0x523E	0xF88D4006  STRB	R4, [SP, #6]
;__Lib_TFT.c, 3815 :: 		
0x5242	0x9C07    LDR	R4, [SP, #28]
0x5244	0x1C64    ADDS	R4, R4, #1
0x5246	0x9407    STR	R4, [SP, #28]
;__Lib_TFT.c, 3816 :: 		
0x5248	0x2480    MOVS	R4, #128
0x524A	0xF88D401A  STRB	R4, [SP, #26]
;__Lib_TFT.c, 3817 :: 		
L___Lib_TFT_TFT_Image1bppE803:
;__Lib_TFT.c, 3819 :: 		
0x524E	0xF89D5006  LDRB	R5, [SP, #6]
0x5252	0xF89D401A  LDRB	R4, [SP, #26]
0x5256	0x402C    ANDS	R4, R5
0x5258	0xB2E4    UXTB	R4, R4
0x525A	0xB134    CBZ	R4, L___Lib_TFT_TFT_Image1bppE804
;__Lib_TFT.c, 3820 :: 		
0x525C	0xF10D0416  ADD	R4, SP, #22
0x5260	0x1CA4    ADDS	R4, R4, #2
0x5262	0x8824    LDRH	R4, [R4, #0]
0x5264	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 3821 :: 		
0x5268	0xE004    B	L___Lib_TFT_TFT_Image1bppE805
L___Lib_TFT_TFT_Image1bppE804:
;__Lib_TFT.c, 3822 :: 		
0x526A	0xF10D0416  ADD	R4, SP, #22
0x526E	0x8824    LDRH	R4, [R4, #0]
0x5270	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 3823 :: 		
L___Lib_TFT_TFT_Image1bppE805:
;__Lib_TFT.c, 3825 :: 		
0x5274	0x9D0A    LDR	R5, [SP, #40]
0x5276	0x9C0A    LDR	R4, [SP, #40]
0x5278	0x1C64    ADDS	R4, R4, #1
0x527A	0x940A    STR	R4, [SP, #40]
0x527C	0xF8BD400C  LDRH	R4, [SP, #12]
0x5280	0x42A5    CMP	R5, R4
0x5282	0xD813    BHI	L___Lib_TFT_TFT_Image1bppE806
;__Lib_TFT.c, 3826 :: 		
0x5284	0x2400    MOVS	R4, #0
0x5286	0xF88D4014  STRB	R4, [SP, #20]
L___Lib_TFT_TFT_Image1bppE807:
0x528A	0xF89D5040  LDRB	R5, [SP, #64]
0x528E	0xF89D4014  LDRB	R4, [SP, #20]
0x5292	0x42AC    CMP	R4, R5
0x5294	0xD20A    BCS	L___Lib_TFT_TFT_Image1bppE808
;__Lib_TFT.c, 3827 :: 		
0x5296	0xF8BD0004  LDRH	R0, [SP, #4]
0x529A	0x4C1E    LDR	R4, [PC, #120]
0x529C	0x6824    LDR	R4, [R4, #0]
0x529E	0x47A0    BLX	R4
;__Lib_TFT.c, 3826 :: 		
0x52A0	0xF89D4014  LDRB	R4, [SP, #20]
0x52A4	0x1C64    ADDS	R4, R4, #1
0x52A6	0xF88D4014  STRB	R4, [SP, #20]
;__Lib_TFT.c, 3828 :: 		
0x52AA	0xE7EE    B	L___Lib_TFT_TFT_Image1bppE807
L___Lib_TFT_TFT_Image1bppE808:
L___Lib_TFT_TFT_Image1bppE806:
;__Lib_TFT.c, 3830 :: 		
0x52AC	0xF89D401A  LDRB	R4, [SP, #26]
0x52B0	0x0864    LSRS	R4, R4, #1
0x52B2	0xF88D401A  STRB	R4, [SP, #26]
;__Lib_TFT.c, 3809 :: 		
0x52B6	0xF8BD4010  LDRH	R4, [SP, #16]
0x52BA	0x1C64    ADDS	R4, R4, #1
0x52BC	0xF8AD4010  STRH	R4, [SP, #16]
;__Lib_TFT.c, 3831 :: 		
0x52C0	0xE7AD    B	L___Lib_TFT_TFT_Image1bppE799
L___Lib_TFT_TFT_Image1bppE800:
;__Lib_TFT.c, 3832 :: 		
0x52C2	0xE792    B	L___Lib_TFT_TFT_Image1bppE797
L___Lib_TFT_TFT_Image1bppE798:
;__Lib_TFT.c, 3833 :: 		
0x52C4	0xF8BD403C  LDRH	R4, [SP, #60]
0x52C8	0x1C64    ADDS	R4, R4, #1
0x52CA	0xF8AD403C  STRH	R4, [SP, #60]
;__Lib_TFT.c, 3795 :: 		
0x52CE	0xF89D4015  LDRB	R4, [SP, #21]
0x52D2	0x1C64    ADDS	R4, R4, #1
0x52D4	0xF88D4015  STRB	R4, [SP, #21]
;__Lib_TFT.c, 3834 :: 		
0x52D8	0xE759    B	L___Lib_TFT_TFT_Image1bppE792
L___Lib_TFT_TFT_Image1bppE793:
;__Lib_TFT.c, 3794 :: 		
L___Lib_TFT_TFT_Image1bppE1099:
L___Lib_TFT_TFT_Image1bppE1098:
;__Lib_TFT.c, 3792 :: 		
0x52DA	0xF8BD4012  LDRH	R4, [SP, #18]
0x52DE	0x1C64    ADDS	R4, R4, #1
0x52E0	0xF8AD4012  STRH	R4, [SP, #18]
;__Lib_TFT.c, 3835 :: 		
0x52E4	0xE739    B	L___Lib_TFT_TFT_Image1bppE786
L___Lib_TFT_TFT_Image1bppE787:
;__Lib_TFT.c, 3836 :: 		
0x52E6	0x2501    MOVS	R5, #1
0x52E8	0xB26D    SXTB	R5, R5
0x52EA	0x4C06    LDR	R4, [PC, #24]
0x52EC	0x6025    STR	R5, [R4, #0]
;__Lib_TFT.c, 3837 :: 		
L_end_TFT_Image1bppE:
0x52EE	0xF8DDE000  LDR	LR, [SP, #0]
0x52F2	0xB011    ADD	SP, SP, #68
0x52F4	0x4770    BX	LR
0x52F6	0xBF00    NOP
0x52F8	0x2DE82000  	__Lib_TFT_headerBuffer+0
0x52FC	0x22262000  	_TFT_DISP_WIDTH+0
0x5300	0x22242000  	_TFT_DISP_HEIGHT+0
0x5304	0x82B44242  	TFT_CS+0
0x5308	0x045C2000  	_TFT_SSD1963_Set_Address_Ptr+0
0x530C	0x2DF82000  	_TFT_Set_Address_Ptr+0
0x5310	0x2DF42000  	_TFT_Get_Ext_Data_Ptr+0
0x5314	0x04602000  	_TFT_Write_Data_Ptr+0
; end of __Lib_TFT_TFT_Image1bppE
__Lib_TFT_TFT_Image4bppE:
;__Lib_TFT.c, 3656 :: 		
; image start address is: 8 (R2)
0x5360	0xB099    SUB	SP, SP, #100
0x5362	0xF8CDE000  STR	LR, [SP, #0]
0x5366	0xF8AD0058  STRH	R0, [SP, #88]
0x536A	0xF8AD105C  STRH	R1, [SP, #92]
0x536E	0xF88D3060  STRB	R3, [SP, #96]
; image end address is: 8 (R2)
; image start address is: 8 (R2)
;__Lib_TFT.c, 3667 :: 		
0x5372	0x4C9B    LDR	R4, [PC, #620]
0x5374	0x940E    STR	R4, [SP, #56]
;__Lib_TFT.c, 3668 :: 		
0x5376	0x1D94    ADDS	R4, R2, #6
; image end address is: 8 (R2)
0x5378	0x9410    STR	R4, [SP, #64]
;__Lib_TFT.c, 3670 :: 		
0x537A	0x9C0E    LDR	R4, [SP, #56]
0x537C	0x1CA5    ADDS	R5, R4, #2
;__Lib_TFT.c, 3671 :: 		
0x537E	0x782C    LDRB	R4, [R5, #0]
0x5380	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 3672 :: 		
0x5384	0x1C6E    ADDS	R6, R5, #1
;__Lib_TFT.c, 3673 :: 		
0x5386	0x7834    LDRB	R4, [R6, #0]
0x5388	0x0225    LSLS	R5, R4, #8
0x538A	0xB2AD    UXTH	R5, R5
0x538C	0xF8BD4006  LDRH	R4, [SP, #6]
0x5390	0x1964    ADDS	R4, R4, R5
0x5392	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 3675 :: 		
0x5396	0x1C75    ADDS	R5, R6, #1
;__Lib_TFT.c, 3676 :: 		
0x5398	0x782C    LDRB	R4, [R5, #0]
0x539A	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 3677 :: 		
0x539E	0x1C6C    ADDS	R4, R5, #1
;__Lib_TFT.c, 3678 :: 		
0x53A0	0x7824    LDRB	R4, [R4, #0]
0x53A2	0x0225    LSLS	R5, R4, #8
0x53A4	0xB2AD    UXTH	R5, R5
0x53A6	0xF8BD4004  LDRH	R4, [SP, #4]
0x53AA	0x1964    ADDS	R4, R4, R5
0x53AC	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 3682 :: 		
0x53B0	0xF8BD5058  LDRH	R5, [SP, #88]
0x53B4	0x4C8B    LDR	R4, [PC, #556]
0x53B6	0x8824    LDRH	R4, [R4, #0]
0x53B8	0x1B64    SUB	R4, R4, R5
0x53BA	0xF8AD400E  STRH	R4, [SP, #14]
;__Lib_TFT.c, 3683 :: 		
0x53BE	0xF8BD505C  LDRH	R5, [SP, #92]
0x53C2	0x4C89    LDR	R4, [PC, #548]
0x53C4	0x8824    LDRH	R4, [R4, #0]
0x53C6	0x1B64    SUB	R4, R4, R5
0x53C8	0xF8AD4010  STRH	R4, [SP, #16]
;__Lib_TFT.c, 3686 :: 		
0x53CC	0x2420    MOVS	R4, #32
0x53CE	0x9412    STR	R4, [SP, #72]
;__Lib_TFT.c, 3687 :: 		
0x53D0	0xF10D0416  ADD	R4, SP, #22
0x53D4	0x940F    STR	R4, [SP, #60]
;__Lib_TFT.c, 3688 :: 		
L___Lib_TFT_TFT_Image4bppE756:
0x53D6	0x9C12    LDR	R4, [SP, #72]
0x53D8	0x2C00    CMP	R4, #0
0x53DA	0xD924    BLS	L___Lib_TFT_TFT_Image4bppE757
;__Lib_TFT.c, 3689 :: 		
0x53DC	0xAC13    ADD	R4, SP, #76
0x53DE	0x4622    MOV	R2, R4
0x53E0	0x9912    LDR	R1, [SP, #72]
0x53E2	0x9810    LDR	R0, [SP, #64]
0x53E4	0x4C81    LDR	R4, [PC, #516]
0x53E6	0x6824    LDR	R4, [R4, #0]
0x53E8	0x47A0    BLX	R4
0x53EA	0x900E    STR	R0, [SP, #56]
;__Lib_TFT.c, 3691 :: 		
0x53EC	0x2400    MOVS	R4, #0
0x53EE	0x9414    STR	R4, [SP, #80]
L___Lib_TFT_TFT_Image4bppE758:
0x53F0	0x9D13    LDR	R5, [SP, #76]
0x53F2	0x9C14    LDR	R4, [SP, #80]
0x53F4	0x42AC    CMP	R4, R5
0x53F6	0xD20D    BCS	L___Lib_TFT_TFT_Image4bppE759
;__Lib_TFT.c, 3692 :: 		
0x53F8	0x9C0E    LDR	R4, [SP, #56]
0x53FA	0x7825    LDRB	R5, [R4, #0]
0x53FC	0x9C0F    LDR	R4, [SP, #60]
0x53FE	0x7025    STRB	R5, [R4, #0]
;__Lib_TFT.c, 3693 :: 		
0x5400	0x9C0E    LDR	R4, [SP, #56]
0x5402	0x1C64    ADDS	R4, R4, #1
0x5404	0x940E    STR	R4, [SP, #56]
0x5406	0x9C0F    LDR	R4, [SP, #60]
0x5408	0x1C64    ADDS	R4, R4, #1
0x540A	0x940F    STR	R4, [SP, #60]
;__Lib_TFT.c, 3691 :: 		
0x540C	0x9C14    LDR	R4, [SP, #80]
0x540E	0x1C64    ADDS	R4, R4, #1
0x5410	0x9414    STR	R4, [SP, #80]
;__Lib_TFT.c, 3694 :: 		
0x5412	0xE7ED    B	L___Lib_TFT_TFT_Image4bppE758
L___Lib_TFT_TFT_Image4bppE759:
;__Lib_TFT.c, 3696 :: 		
0x5414	0x9D13    LDR	R5, [SP, #76]
0x5416	0x9C12    LDR	R4, [SP, #72]
0x5418	0x1B64    SUB	R4, R4, R5
0x541A	0x9412    STR	R4, [SP, #72]
;__Lib_TFT.c, 3697 :: 		
0x541C	0x9D13    LDR	R5, [SP, #76]
0x541E	0x9C10    LDR	R4, [SP, #64]
0x5420	0x1964    ADDS	R4, R4, R5
0x5422	0x9410    STR	R4, [SP, #64]
;__Lib_TFT.c, 3698 :: 		
0x5424	0xE7D7    B	L___Lib_TFT_TFT_Image4bppE756
L___Lib_TFT_TFT_Image4bppE757:
;__Lib_TFT.c, 3700 :: 		
0x5426	0xF8BD4004  LDRH	R4, [SP, #4]
0x542A	0x0864    LSRS	R4, R4, #1
0x542C	0xB2A4    UXTH	R4, R4
0x542E	0x9415    STR	R4, [SP, #84]
;__Lib_TFT.c, 3701 :: 		
0x5430	0x9C15    LDR	R4, [SP, #84]
0x5432	0xF0040401  AND	R4, R4, #1
0x5436	0xB114    CBZ	R4, L___Lib_TFT_TFT_Image4bppE761
;__Lib_TFT.c, 3702 :: 		
0x5438	0x9C15    LDR	R4, [SP, #84]
0x543A	0x1C64    ADDS	R4, R4, #1
0x543C	0x9415    STR	R4, [SP, #84]
L___Lib_TFT_TFT_Image4bppE761:
;__Lib_TFT.c, 3703 :: 		
0x543E	0x2500    MOVS	R5, #0
0x5440	0xB26D    SXTB	R5, R5
0x5442	0x4C6B    LDR	R4, [PC, #428]
0x5444	0x6025    STR	R5, [R4, #0]
;__Lib_TFT.c, 3705 :: 		
0x5446	0x2400    MOVS	R4, #0
0x5448	0xF8AD400C  STRH	R4, [SP, #12]
L___Lib_TFT_TFT_Image4bppE762:
0x544C	0xF8BD5006  LDRH	R5, [SP, #6]
0x5450	0xF8BD400C  LDRH	R4, [SP, #12]
0x5454	0x42AC    CMP	R4, R5
0x5456	0xF08080BA  BCS	L___Lib_TFT_TFT_Image4bppE763
;__Lib_TFT.c, 3706 :: 		
0x545A	0x9C10    LDR	R4, [SP, #64]
0x545C	0x9414    STR	R4, [SP, #80]
;__Lib_TFT.c, 3707 :: 		
0x545E	0xF8BD5010  LDRH	R5, [SP, #16]
0x5462	0xF8BD400C  LDRH	R4, [SP, #12]
0x5466	0x42AC    CMP	R4, R5
0x5468	0xF20080AB  BHI	L___Lib_TFT_TFT_Image4bppE1096
0x546C	0x4C5E    LDR	R4, [PC, #376]
0x546E	0x8825    LDRH	R5, [R4, #0]
0x5470	0xF8BD405C  LDRH	R4, [SP, #92]
0x5474	0x42AC    CMP	R4, R5
0x5476	0xF08080A4  BCS	L___Lib_TFT_TFT_Image4bppE1095
L___Lib_TFT_TFT_Image4bppE1094:
;__Lib_TFT.c, 3708 :: 		
0x547A	0x2400    MOVS	R4, #0
0x547C	0xF88D4014  STRB	R4, [SP, #20]
L___Lib_TFT_TFT_Image4bppE768:
0x5480	0xF89D5060  LDRB	R5, [SP, #96]
0x5484	0xF89D4014  LDRB	R4, [SP, #20]
0x5488	0x42AC    CMP	R4, R5
0x548A	0xF080809A  BCS	L___Lib_TFT_TFT_Image4bppE769
;__Lib_TFT.c, 3709 :: 		
0x548E	0x9C14    LDR	R4, [SP, #80]
0x5490	0x9410    STR	R4, [SP, #64]
;__Lib_TFT.c, 3710 :: 		
0x5492	0xF007F8F1  BL	__Lib_TFT_Is_SSD1963_Set+0
0x5496	0xB198    CBZ	R0, L___Lib_TFT_TFT_Image4bppE771
;__Lib_TFT.c, 3711 :: 		
0x5498	0xF89D5060  LDRB	R5, [SP, #96]
0x549C	0xF8BD4004  LDRH	R4, [SP, #4]
0x54A0	0x4365    MULS	R5, R4, R5
0x54A2	0xB2AD    UXTH	R5, R5
0x54A4	0xF8BD4058  LDRH	R4, [SP, #88]
0x54A8	0x1964    ADDS	R4, R4, R5
0x54AA	0xF8BD305C  LDRH	R3, [SP, #92]
0x54AE	0xB2A2    UXTH	R2, R4
0x54B0	0xF8BD105C  LDRH	R1, [SP, #92]
0x54B4	0xF8BD0058  LDRH	R0, [SP, #88]
0x54B8	0x4C4E    LDR	R4, [PC, #312]
0x54BA	0x6824    LDR	R4, [R4, #0]
0x54BC	0x47A0    BLX	R4
0x54BE	0xE006    B	L___Lib_TFT_TFT_Image4bppE772
L___Lib_TFT_TFT_Image4bppE771:
;__Lib_TFT.c, 3713 :: 		
0x54C0	0xF8BD105C  LDRH	R1, [SP, #92]
0x54C4	0xF8BD0058  LDRH	R0, [SP, #88]
0x54C8	0x4C4B    LDR	R4, [PC, #300]
0x54CA	0x6824    LDR	R4, [R4, #0]
0x54CC	0x47A0    BLX	R4
L___Lib_TFT_TFT_Image4bppE772:
;__Lib_TFT.c, 3714 :: 		
0x54CE	0x9C15    LDR	R4, [SP, #84]
0x54D0	0x9411    STR	R4, [SP, #68]
;__Lib_TFT.c, 3715 :: 		
0x54D2	0x2400    MOVS	R4, #0
0x54D4	0x9412    STR	R4, [SP, #72]
;__Lib_TFT.c, 3716 :: 		
L___Lib_TFT_TFT_Image4bppE773:
0x54D6	0x9C11    LDR	R4, [SP, #68]
0x54D8	0x2C00    CMP	R4, #0
0x54DA	0xF2408067  BLS	L___Lib_TFT_TFT_Image4bppE774
;__Lib_TFT.c, 3717 :: 		
0x54DE	0xAC13    ADD	R4, SP, #76
0x54E0	0x4622    MOV	R2, R4
0x54E2	0x9911    LDR	R1, [SP, #68]
0x54E4	0x9810    LDR	R0, [SP, #64]
0x54E6	0x4C41    LDR	R4, [PC, #260]
0x54E8	0x6824    LDR	R4, [R4, #0]
0x54EA	0x47A0    BLX	R4
0x54EC	0x900E    STR	R0, [SP, #56]
;__Lib_TFT.c, 3718 :: 		
0x54EE	0x9D13    LDR	R5, [SP, #76]
0x54F0	0x9C10    LDR	R4, [SP, #64]
0x54F2	0x1964    ADDS	R4, R4, R5
0x54F4	0x9410    STR	R4, [SP, #64]
;__Lib_TFT.c, 3719 :: 		
0x54F6	0x9D13    LDR	R5, [SP, #76]
0x54F8	0x9C11    LDR	R4, [SP, #68]
0x54FA	0x1B64    SUB	R4, R4, R5
0x54FC	0x9411    STR	R4, [SP, #68]
;__Lib_TFT.c, 3720 :: 		
0x54FE	0x9C13    LDR	R4, [SP, #76]
0x5500	0x0064    LSLS	R4, R4, #1
0x5502	0x9413    STR	R4, [SP, #76]
;__Lib_TFT.c, 3721 :: 		
0x5504	0x2400    MOVS	R4, #0
0x5506	0xF8AD400A  STRH	R4, [SP, #10]
L___Lib_TFT_TFT_Image4bppE775:
0x550A	0x9D13    LDR	R5, [SP, #76]
0x550C	0xF8BD400A  LDRH	R4, [SP, #10]
0x5510	0x42AC    CMP	R4, R5
0x5512	0xD24A    BCS	L___Lib_TFT_TFT_Image4bppE776
;__Lib_TFT.c, 3722 :: 		
0x5514	0xF8BD5004  LDRH	R5, [SP, #4]
0x5518	0x9C12    LDR	R4, [SP, #72]
0x551A	0x42AC    CMP	R4, R5
0x551C	0xD900    BLS	L___Lib_TFT_TFT_Image4bppE778
;__Lib_TFT.c, 3723 :: 		
0x551E	0xE044    B	L___Lib_TFT_TFT_Image4bppE776
L___Lib_TFT_TFT_Image4bppE778:
;__Lib_TFT.c, 3725 :: 		
0x5520	0xF8BD400A  LDRH	R4, [SP, #10]
0x5524	0xF0040401  AND	R4, R4, #1
0x5528	0xB2A4    UXTH	R4, R4
0x552A	0xB164    CBZ	R4, L___Lib_TFT_TFT_Image4bppE779
;__Lib_TFT.c, 3727 :: 		
0x552C	0xF89D4012  LDRB	R4, [SP, #18]
0x5530	0xF004040F  AND	R4, R4, #15
0x5534	0xB2E4    UXTB	R4, R4
0x5536	0xF10D0516  ADD	R5, SP, #22
0x553A	0x0064    LSLS	R4, R4, #1
0x553C	0x192C    ADDS	R4, R5, R4
0x553E	0x8824    LDRH	R4, [R4, #0]
0x5540	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 3728 :: 		
0x5544	0xE00F    B	L___Lib_TFT_TFT_Image4bppE780
L___Lib_TFT_TFT_Image4bppE779:
;__Lib_TFT.c, 3729 :: 		
0x5546	0x9C0E    LDR	R4, [SP, #56]
0x5548	0x7825    LDRB	R5, [R4, #0]
0x554A	0xF88D5012  STRB	R5, [SP, #18]
;__Lib_TFT.c, 3730 :: 		
0x554E	0x9C0E    LDR	R4, [SP, #56]
0x5550	0x1C64    ADDS	R4, R4, #1
0x5552	0x940E    STR	R4, [SP, #56]
;__Lib_TFT.c, 3732 :: 		
0x5554	0x092C    LSRS	R4, R5, #4
0x5556	0xB2E4    UXTB	R4, R4
0x5558	0xF10D0516  ADD	R5, SP, #22
0x555C	0x0064    LSLS	R4, R4, #1
0x555E	0x192C    ADDS	R4, R5, R4
0x5560	0x8824    LDRH	R4, [R4, #0]
0x5562	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 3733 :: 		
L___Lib_TFT_TFT_Image4bppE780:
;__Lib_TFT.c, 3736 :: 		
0x5566	0x9D12    LDR	R5, [SP, #72]
0x5568	0x9C12    LDR	R4, [SP, #72]
0x556A	0x1C64    ADDS	R4, R4, #1
0x556C	0x9412    STR	R4, [SP, #72]
0x556E	0xF8BD400E  LDRH	R4, [SP, #14]
0x5572	0x42A5    CMP	R5, R4
0x5574	0xD813    BHI	L___Lib_TFT_TFT_Image4bppE781
;__Lib_TFT.c, 3737 :: 		
0x5576	0x2400    MOVS	R4, #0
0x5578	0xF88D4013  STRB	R4, [SP, #19]
L___Lib_TFT_TFT_Image4bppE782:
0x557C	0xF89D5060  LDRB	R5, [SP, #96]
0x5580	0xF89D4013  LDRB	R4, [SP, #19]
0x5584	0x42AC    CMP	R4, R5
0x5586	0xD20A    BCS	L___Lib_TFT_TFT_Image4bppE783
;__Lib_TFT.c, 3738 :: 		
0x5588	0xF8BD0008  LDRH	R0, [SP, #8]
0x558C	0x4C1B    LDR	R4, [PC, #108]
0x558E	0x6824    LDR	R4, [R4, #0]
0x5590	0x47A0    BLX	R4
;__Lib_TFT.c, 3737 :: 		
0x5592	0xF89D4013  LDRB	R4, [SP, #19]
0x5596	0x1C64    ADDS	R4, R4, #1
0x5598	0xF88D4013  STRB	R4, [SP, #19]
;__Lib_TFT.c, 3739 :: 		
0x559C	0xE7EE    B	L___Lib_TFT_TFT_Image4bppE782
L___Lib_TFT_TFT_Image4bppE783:
L___Lib_TFT_TFT_Image4bppE781:
;__Lib_TFT.c, 3721 :: 		
0x559E	0xF8BD400A  LDRH	R4, [SP, #10]
0x55A2	0x1C64    ADDS	R4, R4, #1
0x55A4	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT.c, 3740 :: 		
0x55A8	0xE7AF    B	L___Lib_TFT_TFT_Image4bppE775
L___Lib_TFT_TFT_Image4bppE776:
;__Lib_TFT.c, 3741 :: 		
0x55AA	0xE794    B	L___Lib_TFT_TFT_Image4bppE773
L___Lib_TFT_TFT_Image4bppE774:
;__Lib_TFT.c, 3742 :: 		
0x55AC	0xF8BD405C  LDRH	R4, [SP, #92]
0x55B0	0x1C64    ADDS	R4, R4, #1
0x55B2	0xF8AD405C  STRH	R4, [SP, #92]
;__Lib_TFT.c, 3708 :: 		
0x55B6	0xF89D4014  LDRB	R4, [SP, #20]
0x55BA	0x1C64    ADDS	R4, R4, #1
0x55BC	0xF88D4014  STRB	R4, [SP, #20]
;__Lib_TFT.c, 3743 :: 		
0x55C0	0xE75E    B	L___Lib_TFT_TFT_Image4bppE768
L___Lib_TFT_TFT_Image4bppE769:
;__Lib_TFT.c, 3707 :: 		
L___Lib_TFT_TFT_Image4bppE1096:
L___Lib_TFT_TFT_Image4bppE1095:
;__Lib_TFT.c, 3705 :: 		
0x55C2	0xF8BD400C  LDRH	R4, [SP, #12]
0x55C6	0x1C64    ADDS	R4, R4, #1
0x55C8	0xF8AD400C  STRH	R4, [SP, #12]
;__Lib_TFT.c, 3744 :: 		
0x55CC	0xE73E    B	L___Lib_TFT_TFT_Image4bppE762
L___Lib_TFT_TFT_Image4bppE763:
;__Lib_TFT.c, 3745 :: 		
0x55CE	0x2501    MOVS	R5, #1
0x55D0	0xB26D    SXTB	R5, R5
0x55D2	0x4C07    LDR	R4, [PC, #28]
0x55D4	0x6025    STR	R5, [R4, #0]
;__Lib_TFT.c, 3746 :: 		
L_end_TFT_Image4bppE:
0x55D6	0xF8DDE000  LDR	LR, [SP, #0]
0x55DA	0xB019    ADD	SP, SP, #100
0x55DC	0x4770    BX	LR
0x55DE	0xBF00    NOP
0x55E0	0x2DE82000  	__Lib_TFT_headerBuffer+0
0x55E4	0x22262000  	_TFT_DISP_WIDTH+0
0x55E8	0x22242000  	_TFT_DISP_HEIGHT+0
0x55EC	0x2DF42000  	_TFT_Get_Ext_Data_Ptr+0
0x55F0	0x82B44242  	TFT_CS+0
0x55F4	0x045C2000  	_TFT_SSD1963_Set_Address_Ptr+0
0x55F8	0x2DF82000  	_TFT_Set_Address_Ptr+0
0x55FC	0x04602000  	_TFT_Write_Data_Ptr+0
; end of __Lib_TFT_TFT_Image4bppE
__Lib_TFT_TFT_Image8bppE:
;__Lib_TFT.c, 3574 :: 		
; image start address is: 8 (R2)
0x5884	0xF2AD2D3C  SUBW	SP, SP, #572
0x5888	0xF8CDE000  STR	LR, [SP, #0]
0x588C	0xF8AD0230  STRH	R0, [SP, #560]
0x5890	0x4610    MOV	R0, R2
0x5892	0xF8AD1234  STRH	R1, [SP, #564]
0x5896	0xF88D3238  STRB	R3, [SP, #568]
; image end address is: 8 (R2)
; image start address is: 0 (R0)
;__Lib_TFT.c, 3587 :: 		
0x589A	0x4C85    LDR	R4, [PC, #532]
0x589C	0x948A    STR	R4, [SP, #552]
;__Lib_TFT.c, 3588 :: 		
0x589E	0x1D84    ADDS	R4, R0, #6
; image end address is: 0 (R0)
0x58A0	0x9485    STR	R4, [SP, #532]
;__Lib_TFT.c, 3590 :: 		
0x58A2	0x9C8A    LDR	R4, [SP, #552]
0x58A4	0x1CA5    ADDS	R5, R4, #2
;__Lib_TFT.c, 3591 :: 		
0x58A6	0x782C    LDRB	R4, [R5, #0]
0x58A8	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 3592 :: 		
0x58AC	0x1C6E    ADDS	R6, R5, #1
;__Lib_TFT.c, 3593 :: 		
0x58AE	0x7834    LDRB	R4, [R6, #0]
0x58B0	0x0225    LSLS	R5, R4, #8
0x58B2	0xB2AD    UXTH	R5, R5
0x58B4	0xF8BD4008  LDRH	R4, [SP, #8]
0x58B8	0x1964    ADDS	R4, R4, R5
0x58BA	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 3595 :: 		
0x58BE	0x1C75    ADDS	R5, R6, #1
;__Lib_TFT.c, 3596 :: 		
0x58C0	0x782C    LDRB	R4, [R5, #0]
0x58C2	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 3597 :: 		
0x58C6	0x1C6C    ADDS	R4, R5, #1
;__Lib_TFT.c, 3598 :: 		
0x58C8	0x7824    LDRB	R4, [R4, #0]
0x58CA	0x0225    LSLS	R5, R4, #8
0x58CC	0xB2AD    UXTH	R5, R5
0x58CE	0xF8BD4006  LDRH	R4, [SP, #6]
0x58D2	0x1964    ADDS	R4, R4, R5
0x58D4	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 3602 :: 		
0x58D8	0xF8BD5230  LDRH	R5, [SP, #560]
0x58DC	0x4C75    LDR	R4, [PC, #468]
0x58DE	0x8824    LDRH	R4, [R4, #0]
0x58E0	0x1B64    SUB	R4, R4, R5
0x58E2	0xF8AD400E  STRH	R4, [SP, #14]
;__Lib_TFT.c, 3603 :: 		
0x58E6	0xF8BD5234  LDRH	R5, [SP, #564]
0x58EA	0x4C73    LDR	R4, [PC, #460]
0x58EC	0x8824    LDRH	R4, [R4, #0]
0x58EE	0x1B64    SUB	R4, R4, R5
0x58F0	0xF8AD4010  STRH	R4, [SP, #16]
;__Lib_TFT.c, 3606 :: 		
0x58F4	0xF2402400  MOVW	R4, #512
0x58F8	0x9487    STR	R4, [SP, #540]
;__Lib_TFT.c, 3607 :: 		
0x58FA	0xAC05    ADD	R4, SP, #20
0x58FC	0x948B    STR	R4, [SP, #556]
;__Lib_TFT.c, 3608 :: 		
L___Lib_TFT_TFT_Image8bppE731:
0x58FE	0x9C87    LDR	R4, [SP, #540]
0x5900	0x2C00    CMP	R4, #0
0x5902	0xD924    BLS	L___Lib_TFT_TFT_Image8bppE732
;__Lib_TFT.c, 3609 :: 		
0x5904	0xAC88    ADD	R4, SP, #544
0x5906	0x4622    MOV	R2, R4
0x5908	0x9987    LDR	R1, [SP, #540]
0x590A	0x9885    LDR	R0, [SP, #532]
0x590C	0x4C6B    LDR	R4, [PC, #428]
0x590E	0x6824    LDR	R4, [R4, #0]
0x5910	0x47A0    BLX	R4
0x5912	0x908A    STR	R0, [SP, #552]
;__Lib_TFT.c, 3611 :: 		
0x5914	0x2400    MOVS	R4, #0
0x5916	0x9489    STR	R4, [SP, #548]
L___Lib_TFT_TFT_Image8bppE733:
0x5918	0x9D88    LDR	R5, [SP, #544]
0x591A	0x9C89    LDR	R4, [SP, #548]
0x591C	0x42AC    CMP	R4, R5
0x591E	0xD20D    BCS	L___Lib_TFT_TFT_Image8bppE734
;__Lib_TFT.c, 3612 :: 		
0x5920	0x9C8A    LDR	R4, [SP, #552]
0x5922	0x7825    LDRB	R5, [R4, #0]
0x5924	0x9C8B    LDR	R4, [SP, #556]
0x5926	0x7025    STRB	R5, [R4, #0]
;__Lib_TFT.c, 3613 :: 		
0x5928	0x9C8A    LDR	R4, [SP, #552]
0x592A	0x1C64    ADDS	R4, R4, #1
0x592C	0x948A    STR	R4, [SP, #552]
0x592E	0x9C8B    LDR	R4, [SP, #556]
0x5930	0x1C64    ADDS	R4, R4, #1
0x5932	0x948B    STR	R4, [SP, #556]
;__Lib_TFT.c, 3611 :: 		
0x5934	0x9C89    LDR	R4, [SP, #548]
0x5936	0x1C64    ADDS	R4, R4, #1
0x5938	0x9489    STR	R4, [SP, #548]
;__Lib_TFT.c, 3614 :: 		
0x593A	0xE7ED    B	L___Lib_TFT_TFT_Image8bppE733
L___Lib_TFT_TFT_Image8bppE734:
;__Lib_TFT.c, 3616 :: 		
0x593C	0x9D88    LDR	R5, [SP, #544]
0x593E	0x9C87    LDR	R4, [SP, #540]
0x5940	0x1B64    SUB	R4, R4, R5
0x5942	0x9487    STR	R4, [SP, #540]
;__Lib_TFT.c, 3617 :: 		
0x5944	0x9D88    LDR	R5, [SP, #544]
0x5946	0x9C85    LDR	R4, [SP, #532]
0x5948	0x1964    ADDS	R4, R4, R5
0x594A	0x9485    STR	R4, [SP, #532]
;__Lib_TFT.c, 3618 :: 		
0x594C	0xE7D7    B	L___Lib_TFT_TFT_Image8bppE731
L___Lib_TFT_TFT_Image8bppE732:
;__Lib_TFT.c, 3621 :: 		
0x594E	0x2500    MOVS	R5, #0
0x5950	0xB26D    SXTB	R5, R5
0x5952	0x4C5B    LDR	R4, [PC, #364]
0x5954	0x6025    STR	R5, [R4, #0]
;__Lib_TFT.c, 3622 :: 		
0x5956	0x2400    MOVS	R4, #0
0x5958	0xF8AD400C  STRH	R4, [SP, #12]
L___Lib_TFT_TFT_Image8bppE736:
0x595C	0xF8BD5008  LDRH	R5, [SP, #8]
0x5960	0xF8BD400C  LDRH	R4, [SP, #12]
0x5964	0x42AC    CMP	R4, R5
0x5966	0xF0808099  BCS	L___Lib_TFT_TFT_Image8bppE737
;__Lib_TFT.c, 3623 :: 		
0x596A	0x9C85    LDR	R4, [SP, #532]
0x596C	0x9489    STR	R4, [SP, #548]
;__Lib_TFT.c, 3624 :: 		
0x596E	0xF8BD5010  LDRH	R5, [SP, #16]
0x5972	0xF8BD400C  LDRH	R4, [SP, #12]
0x5976	0x42AC    CMP	R4, R5
0x5978	0xF200808A  BHI	L___Lib_TFT_TFT_Image8bppE1093
0x597C	0x4C4E    LDR	R4, [PC, #312]
0x597E	0x8825    LDRH	R5, [R4, #0]
0x5980	0xF8BD4234  LDRH	R4, [SP, #564]
0x5984	0x42AC    CMP	R4, R5
0x5986	0xF0808083  BCS	L___Lib_TFT_TFT_Image8bppE1092
L___Lib_TFT_TFT_Image8bppE1091:
;__Lib_TFT.c, 3625 :: 		
0x598A	0x2400    MOVS	R4, #0
0x598C	0xF88D4013  STRB	R4, [SP, #19]
L___Lib_TFT_TFT_Image8bppE742:
0x5990	0xF89D5238  LDRB	R5, [SP, #568]
0x5994	0xF89D4013  LDRB	R4, [SP, #19]
0x5998	0x42AC    CMP	R4, R5
0x599A	0xF0808079  BCS	L___Lib_TFT_TFT_Image8bppE743
;__Lib_TFT.c, 3626 :: 		
0x599E	0x9C89    LDR	R4, [SP, #548]
0x59A0	0x9485    STR	R4, [SP, #532]
;__Lib_TFT.c, 3627 :: 		
0x59A2	0xF006FE69  BL	__Lib_TFT_Is_SSD1963_Set+0
0x59A6	0xB198    CBZ	R0, L___Lib_TFT_TFT_Image8bppE745
;__Lib_TFT.c, 3628 :: 		
0x59A8	0xF89D5238  LDRB	R5, [SP, #568]
0x59AC	0xF8BD4006  LDRH	R4, [SP, #6]
0x59B0	0x4365    MULS	R5, R4, R5
0x59B2	0xB2AD    UXTH	R5, R5
0x59B4	0xF8BD4230  LDRH	R4, [SP, #560]
0x59B8	0x1964    ADDS	R4, R4, R5
0x59BA	0xF8BD3234  LDRH	R3, [SP, #564]
0x59BE	0xB2A2    UXTH	R2, R4
0x59C0	0xF8BD1234  LDRH	R1, [SP, #564]
0x59C4	0xF8BD0230  LDRH	R0, [SP, #560]
0x59C8	0x4C3E    LDR	R4, [PC, #248]
0x59CA	0x6824    LDR	R4, [R4, #0]
0x59CC	0x47A0    BLX	R4
0x59CE	0xE006    B	L___Lib_TFT_TFT_Image8bppE746
L___Lib_TFT_TFT_Image8bppE745:
;__Lib_TFT.c, 3630 :: 		
0x59D0	0xF8BD1234  LDRH	R1, [SP, #564]
0x59D4	0xF8BD0230  LDRH	R0, [SP, #560]
0x59D8	0x4C3B    LDR	R4, [PC, #236]
0x59DA	0x6824    LDR	R4, [R4, #0]
0x59DC	0x47A0    BLX	R4
L___Lib_TFT_TFT_Image8bppE746:
;__Lib_TFT.c, 3631 :: 		
0x59DE	0xF8BD4006  LDRH	R4, [SP, #6]
0x59E2	0x9486    STR	R4, [SP, #536]
;__Lib_TFT.c, 3632 :: 		
0x59E4	0x2400    MOVS	R4, #0
0x59E6	0x9487    STR	R4, [SP, #540]
;__Lib_TFT.c, 3633 :: 		
L___Lib_TFT_TFT_Image8bppE747:
0x59E8	0x9C86    LDR	R4, [SP, #536]
0x59EA	0x2C00    CMP	R4, #0
0x59EC	0xD945    BLS	L___Lib_TFT_TFT_Image8bppE748
;__Lib_TFT.c, 3634 :: 		
0x59EE	0xAC88    ADD	R4, SP, #544
0x59F0	0x4622    MOV	R2, R4
0x59F2	0x9986    LDR	R1, [SP, #536]
0x59F4	0x9885    LDR	R0, [SP, #532]
0x59F6	0x4C31    LDR	R4, [PC, #196]
0x59F8	0x6824    LDR	R4, [R4, #0]
0x59FA	0x47A0    BLX	R4
0x59FC	0x908A    STR	R0, [SP, #552]
;__Lib_TFT.c, 3635 :: 		
0x59FE	0x9D88    LDR	R5, [SP, #544]
0x5A00	0x9C85    LDR	R4, [SP, #532]
0x5A02	0x1964    ADDS	R4, R4, R5
0x5A04	0x9485    STR	R4, [SP, #532]
;__Lib_TFT.c, 3636 :: 		
0x5A06	0x9D88    LDR	R5, [SP, #544]
0x5A08	0x9C86    LDR	R4, [SP, #536]
0x5A0A	0x1B64    SUB	R4, R4, R5
0x5A0C	0x9486    STR	R4, [SP, #536]
;__Lib_TFT.c, 3637 :: 		
0x5A0E	0x2400    MOVS	R4, #0
0x5A10	0xF8AD400A  STRH	R4, [SP, #10]
L___Lib_TFT_TFT_Image8bppE749:
0x5A14	0x9D88    LDR	R5, [SP, #544]
0x5A16	0xF8BD400A  LDRH	R4, [SP, #10]
0x5A1A	0x42AC    CMP	R4, R5
0x5A1C	0xD22C    BCS	L___Lib_TFT_TFT_Image8bppE750
;__Lib_TFT.c, 3640 :: 		
0x5A1E	0x9C8A    LDR	R4, [SP, #552]
0x5A20	0x7824    LDRB	R4, [R4, #0]
0x5A22	0xAD05    ADD	R5, SP, #20
0x5A24	0x0064    LSLS	R4, R4, #1
0x5A26	0x192C    ADDS	R4, R5, R4
0x5A28	0x8824    LDRH	R4, [R4, #0]
0x5A2A	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 3641 :: 		
0x5A2E	0x9C8A    LDR	R4, [SP, #552]
0x5A30	0x1C64    ADDS	R4, R4, #1
0x5A32	0x948A    STR	R4, [SP, #552]
;__Lib_TFT.c, 3644 :: 		
0x5A34	0x9D87    LDR	R5, [SP, #540]
0x5A36	0x9C87    LDR	R4, [SP, #540]
0x5A38	0x1C64    ADDS	R4, R4, #1
0x5A3A	0x9487    STR	R4, [SP, #540]
0x5A3C	0xF8BD400E  LDRH	R4, [SP, #14]
0x5A40	0x42A5    CMP	R5, R4
0x5A42	0xD813    BHI	L___Lib_TFT_TFT_Image8bppE752
;__Lib_TFT.c, 3645 :: 		
0x5A44	0x2400    MOVS	R4, #0
0x5A46	0xF88D4012  STRB	R4, [SP, #18]
L___Lib_TFT_TFT_Image8bppE753:
0x5A4A	0xF89D5238  LDRB	R5, [SP, #568]
0x5A4E	0xF89D4012  LDRB	R4, [SP, #18]
0x5A52	0x42AC    CMP	R4, R5
0x5A54	0xD20A    BCS	L___Lib_TFT_TFT_Image8bppE754
;__Lib_TFT.c, 3646 :: 		
0x5A56	0xF8BD0004  LDRH	R0, [SP, #4]
0x5A5A	0x4C1C    LDR	R4, [PC, #112]
0x5A5C	0x6824    LDR	R4, [R4, #0]
0x5A5E	0x47A0    BLX	R4
;__Lib_TFT.c, 3645 :: 		
0x5A60	0xF89D4012  LDRB	R4, [SP, #18]
0x5A64	0x1C64    ADDS	R4, R4, #1
0x5A66	0xF88D4012  STRB	R4, [SP, #18]
;__Lib_TFT.c, 3647 :: 		
0x5A6A	0xE7EE    B	L___Lib_TFT_TFT_Image8bppE753
L___Lib_TFT_TFT_Image8bppE754:
L___Lib_TFT_TFT_Image8bppE752:
;__Lib_TFT.c, 3637 :: 		
0x5A6C	0xF8BD400A  LDRH	R4, [SP, #10]
0x5A70	0x1C64    ADDS	R4, R4, #1
0x5A72	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT.c, 3648 :: 		
0x5A76	0xE7CD    B	L___Lib_TFT_TFT_Image8bppE749
L___Lib_TFT_TFT_Image8bppE750:
;__Lib_TFT.c, 3649 :: 		
0x5A78	0xE7B6    B	L___Lib_TFT_TFT_Image8bppE747
L___Lib_TFT_TFT_Image8bppE748:
;__Lib_TFT.c, 3650 :: 		
0x5A7A	0xF8BD4234  LDRH	R4, [SP, #564]
0x5A7E	0x1C64    ADDS	R4, R4, #1
0x5A80	0xF8AD4234  STRH	R4, [SP, #564]
;__Lib_TFT.c, 3625 :: 		
0x5A84	0xF89D4013  LDRB	R4, [SP, #19]
0x5A88	0x1C64    ADDS	R4, R4, #1
0x5A8A	0xF88D4013  STRB	R4, [SP, #19]
;__Lib_TFT.c, 3651 :: 		
0x5A8E	0xE77F    B	L___Lib_TFT_TFT_Image8bppE742
L___Lib_TFT_TFT_Image8bppE743:
;__Lib_TFT.c, 3624 :: 		
L___Lib_TFT_TFT_Image8bppE1093:
L___Lib_TFT_TFT_Image8bppE1092:
;__Lib_TFT.c, 3622 :: 		
0x5A90	0xF8BD400C  LDRH	R4, [SP, #12]
0x5A94	0x1C64    ADDS	R4, R4, #1
0x5A96	0xF8AD400C  STRH	R4, [SP, #12]
;__Lib_TFT.c, 3652 :: 		
0x5A9A	0xE75F    B	L___Lib_TFT_TFT_Image8bppE736
L___Lib_TFT_TFT_Image8bppE737:
;__Lib_TFT.c, 3653 :: 		
0x5A9C	0x2501    MOVS	R5, #1
0x5A9E	0xB26D    SXTB	R5, R5
0x5AA0	0x4C07    LDR	R4, [PC, #28]
0x5AA2	0x6025    STR	R5, [R4, #0]
;__Lib_TFT.c, 3654 :: 		
L_end_TFT_Image8bppE:
0x5AA4	0xF8DDE000  LDR	LR, [SP, #0]
0x5AA8	0xF20D2D3C  ADDW	SP, SP, #572
0x5AAC	0x4770    BX	LR
0x5AAE	0xBF00    NOP
0x5AB0	0x2DE82000  	__Lib_TFT_headerBuffer+0
0x5AB4	0x22262000  	_TFT_DISP_WIDTH+0
0x5AB8	0x22242000  	_TFT_DISP_HEIGHT+0
0x5ABC	0x2DF42000  	_TFT_Get_Ext_Data_Ptr+0
0x5AC0	0x82B44242  	TFT_CS+0
0x5AC4	0x045C2000  	_TFT_SSD1963_Set_Address_Ptr+0
0x5AC8	0x2DF82000  	_TFT_Set_Address_Ptr+0
0x5ACC	0x04602000  	_TFT_Write_Data_Ptr+0
; end of __Lib_TFT_TFT_Image8bppE
__Lib_TFT_TFT_Image16bppE:
;__Lib_TFT.c, 3497 :: 		
; image start address is: 8 (R2)
0x5600	0xB090    SUB	SP, SP, #64
0x5602	0xF8CDE000  STR	LR, [SP, #0]
0x5606	0xF8AD0034  STRH	R0, [SP, #52]
0x560A	0xF8AD1038  STRH	R1, [SP, #56]
0x560E	0xF88D303C  STRB	R3, [SP, #60]
; image end address is: 8 (R2)
; image start address is: 8 (R2)
;__Lib_TFT.c, 3507 :: 		
0x5612	0x2400    MOVS	R4, #0
0x5614	0xF88D4030  STRB	R4, [SP, #48]
;__Lib_TFT.c, 3510 :: 		
0x5618	0x4C92    LDR	R4, [PC, #584]
0x561A	0x9406    STR	R4, [SP, #24]
;__Lib_TFT.c, 3511 :: 		
0x561C	0x1D94    ADDS	R4, R2, #6
; image end address is: 8 (R2)
0x561E	0x9407    STR	R4, [SP, #28]
;__Lib_TFT.c, 3513 :: 		
0x5620	0x9C06    LDR	R4, [SP, #24]
0x5622	0x1CA5    ADDS	R5, R4, #2
;__Lib_TFT.c, 3514 :: 		
0x5624	0x782C    LDRB	R4, [R5, #0]
0x5626	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 3515 :: 		
0x562A	0x1C6E    ADDS	R6, R5, #1
;__Lib_TFT.c, 3516 :: 		
0x562C	0x7834    LDRB	R4, [R6, #0]
0x562E	0x0225    LSLS	R5, R4, #8
0x5630	0xB2AD    UXTH	R5, R5
0x5632	0xF8BD4006  LDRH	R4, [SP, #6]
0x5636	0x1964    ADDS	R4, R4, R5
0x5638	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_TFT.c, 3518 :: 		
0x563C	0x1C75    ADDS	R5, R6, #1
;__Lib_TFT.c, 3519 :: 		
0x563E	0x782C    LDRB	R4, [R5, #0]
0x5640	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 3520 :: 		
0x5644	0x1C6C    ADDS	R4, R5, #1
;__Lib_TFT.c, 3521 :: 		
0x5646	0x7824    LDRB	R4, [R4, #0]
0x5648	0x0225    LSLS	R5, R4, #8
0x564A	0xB2AD    UXTH	R5, R5
0x564C	0xF8BD4004  LDRH	R4, [SP, #4]
0x5650	0x1964    ADDS	R4, R4, R5
0x5652	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_TFT.c, 3523 :: 		
0x5656	0xF8BD5034  LDRH	R5, [SP, #52]
0x565A	0x4C83    LDR	R4, [PC, #524]
0x565C	0x8824    LDRH	R4, [R4, #0]
0x565E	0x1B64    SUB	R4, R4, R5
0x5660	0xF8AD4012  STRH	R4, [SP, #18]
;__Lib_TFT.c, 3524 :: 		
0x5664	0xF8BD5038  LDRH	R5, [SP, #56]
0x5668	0x4C80    LDR	R4, [PC, #512]
0x566A	0x8824    LDRH	R4, [R4, #0]
0x566C	0x1B64    SUB	R4, R4, R5
0x566E	0xF8AD4014  STRH	R4, [SP, #20]
;__Lib_TFT.c, 3526 :: 		
0x5672	0x2500    MOVS	R5, #0
0x5674	0xB26D    SXTB	R5, R5
0x5676	0x4C7E    LDR	R4, [PC, #504]
0x5678	0x6025    STR	R5, [R4, #0]
;__Lib_TFT.c, 3527 :: 		
0x567A	0x2400    MOVS	R4, #0
0x567C	0xF8AD400A  STRH	R4, [SP, #10]
L___Lib_TFT_TFT_Image16bppE704:
0x5680	0xF8BD5006  LDRH	R5, [SP, #6]
0x5684	0xF8BD400A  LDRH	R4, [SP, #10]
0x5688	0x42AC    CMP	R4, R5
0x568A	0xF08080E3  BCS	L___Lib_TFT_TFT_Image16bppE705
;__Lib_TFT.c, 3528 :: 		
0x568E	0x9C07    LDR	R4, [SP, #28]
0x5690	0x940B    STR	R4, [SP, #44]
;__Lib_TFT.c, 3529 :: 		
0x5692	0xF8BD5014  LDRH	R5, [SP, #20]
0x5696	0xF8BD400A  LDRH	R4, [SP, #10]
0x569A	0x42AC    CMP	R4, R5
0x569C	0xF20080D4  BHI	L___Lib_TFT_TFT_Image16bppE1090
0x56A0	0x4C72    LDR	R4, [PC, #456]
0x56A2	0x8825    LDRH	R5, [R4, #0]
0x56A4	0xF8BD4038  LDRH	R4, [SP, #56]
0x56A8	0x42AC    CMP	R4, R5
0x56AA	0xF08080CD  BCS	L___Lib_TFT_TFT_Image16bppE1089
L___Lib_TFT_TFT_Image16bppE1088:
;__Lib_TFT.c, 3530 :: 		
0x56AE	0x2400    MOVS	R4, #0
0x56B0	0xF88D4011  STRB	R4, [SP, #17]
L___Lib_TFT_TFT_Image16bppE710:
0x56B4	0xF89D503C  LDRB	R5, [SP, #60]
0x56B8	0xF89D4011  LDRB	R4, [SP, #17]
0x56BC	0x42AC    CMP	R4, R5
0x56BE	0xF08080C3  BCS	L___Lib_TFT_TFT_Image16bppE711
;__Lib_TFT.c, 3531 :: 		
0x56C2	0x9C0B    LDR	R4, [SP, #44]
0x56C4	0x9407    STR	R4, [SP, #28]
;__Lib_TFT.c, 3532 :: 		
0x56C6	0xF006FFD7  BL	__Lib_TFT_Is_SSD1963_Set+0
0x56CA	0xB198    CBZ	R0, L___Lib_TFT_TFT_Image16bppE713
;__Lib_TFT.c, 3533 :: 		
0x56CC	0xF89D503C  LDRB	R5, [SP, #60]
0x56D0	0xF8BD4004  LDRH	R4, [SP, #4]
0x56D4	0x4365    MULS	R5, R4, R5
0x56D6	0xB2AD    UXTH	R5, R5
0x56D8	0xF8BD4034  LDRH	R4, [SP, #52]
0x56DC	0x1964    ADDS	R4, R4, R5
0x56DE	0xF8BD3038  LDRH	R3, [SP, #56]
0x56E2	0xB2A2    UXTH	R2, R4
0x56E4	0xF8BD1038  LDRH	R1, [SP, #56]
0x56E8	0xF8BD0034  LDRH	R0, [SP, #52]
0x56EC	0x4C61    LDR	R4, [PC, #388]
0x56EE	0x6824    LDR	R4, [R4, #0]
0x56F0	0x47A0    BLX	R4
0x56F2	0xE006    B	L___Lib_TFT_TFT_Image16bppE714
L___Lib_TFT_TFT_Image16bppE713:
;__Lib_TFT.c, 3535 :: 		
0x56F4	0xF8BD1038  LDRH	R1, [SP, #56]
0x56F8	0xF8BD0034  LDRH	R0, [SP, #52]
0x56FC	0x4C5E    LDR	R4, [PC, #376]
0x56FE	0x6824    LDR	R4, [R4, #0]
0x5700	0x47A0    BLX	R4
L___Lib_TFT_TFT_Image16bppE714:
;__Lib_TFT.c, 3536 :: 		
0x5702	0xF8BD4004  LDRH	R4, [SP, #4]
0x5706	0x0064    LSLS	R4, R4, #1
0x5708	0xB2A4    UXTH	R4, R4
0x570A	0x9408    STR	R4, [SP, #32]
;__Lib_TFT.c, 3537 :: 		
0x570C	0x2400    MOVS	R4, #0
0x570E	0x9409    STR	R4, [SP, #36]
;__Lib_TFT.c, 3538 :: 		
L___Lib_TFT_TFT_Image16bppE715:
0x5710	0x9C08    LDR	R4, [SP, #32]
0x5712	0x2C00    CMP	R4, #0
0x5714	0xF240808D  BLS	L___Lib_TFT_TFT_Image16bppE716
;__Lib_TFT.c, 3539 :: 		
0x5718	0xAC0A    ADD	R4, SP, #40
0x571A	0x4622    MOV	R2, R4
0x571C	0x9908    LDR	R1, [SP, #32]
0x571E	0x9807    LDR	R0, [SP, #28]
0x5720	0x4C56    LDR	R4, [PC, #344]
0x5722	0x6824    LDR	R4, [R4, #0]
0x5724	0x47A0    BLX	R4
0x5726	0x9006    STR	R0, [SP, #24]
;__Lib_TFT.c, 3540 :: 		
0x5728	0x9D0A    LDR	R5, [SP, #40]
0x572A	0x9C07    LDR	R4, [SP, #28]
0x572C	0x1964    ADDS	R4, R4, R5
0x572E	0x9407    STR	R4, [SP, #28]
;__Lib_TFT.c, 3541 :: 		
0x5730	0x9D0A    LDR	R5, [SP, #40]
0x5732	0x9C08    LDR	R4, [SP, #32]
0x5734	0x1B64    SUB	R4, R4, R5
0x5736	0x9408    STR	R4, [SP, #32]
;__Lib_TFT.c, 3542 :: 		
0x5738	0xF89D4030  LDRB	R4, [SP, #48]
0x573C	0xB36C    CBZ	R4, L___Lib_TFT_TFT_Image16bppE717
;__Lib_TFT.c, 3543 :: 		
0x573E	0x9C06    LDR	R4, [SP, #24]
0x5740	0x7824    LDRB	R4, [R4, #0]
0x5742	0x0225    LSLS	R5, R4, #8
0x5744	0xB2AD    UXTH	R5, R5
0x5746	0xF8BD400E  LDRH	R4, [SP, #14]
0x574A	0x1964    ADDS	R4, R4, R5
0x574C	0xF8AD400E  STRH	R4, [SP, #14]
0x5750	0x9C06    LDR	R4, [SP, #24]
0x5752	0x1C64    ADDS	R4, R4, #1
0x5754	0x9406    STR	R4, [SP, #24]
;__Lib_TFT.c, 3544 :: 		
0x5756	0x9C0A    LDR	R4, [SP, #40]
0x5758	0x1E64    SUBS	R4, R4, #1
0x575A	0x940A    STR	R4, [SP, #40]
;__Lib_TFT.c, 3545 :: 		
0x575C	0x2400    MOVS	R4, #0
0x575E	0xF88D4030  STRB	R4, [SP, #48]
;__Lib_TFT.c, 3546 :: 		
0x5762	0x9D09    LDR	R5, [SP, #36]
0x5764	0x9C09    LDR	R4, [SP, #36]
0x5766	0x1C64    ADDS	R4, R4, #1
0x5768	0x9409    STR	R4, [SP, #36]
0x576A	0xF8BD4012  LDRH	R4, [SP, #18]
0x576E	0x42A5    CMP	R5, R4
0x5770	0xD813    BHI	L___Lib_TFT_TFT_Image16bppE718
;__Lib_TFT.c, 3547 :: 		
0x5772	0x2400    MOVS	R4, #0
0x5774	0xF88D4010  STRB	R4, [SP, #16]
L___Lib_TFT_TFT_Image16bppE719:
0x5778	0xF89D503C  LDRB	R5, [SP, #60]
0x577C	0xF89D4010  LDRB	R4, [SP, #16]
0x5780	0x42AC    CMP	R4, R5
0x5782	0xD20A    BCS	L___Lib_TFT_TFT_Image16bppE720
;__Lib_TFT.c, 3548 :: 		
0x5784	0xF8BD000E  LDRH	R0, [SP, #14]
0x5788	0x4C3D    LDR	R4, [PC, #244]
0x578A	0x6824    LDR	R4, [R4, #0]
0x578C	0x47A0    BLX	R4
;__Lib_TFT.c, 3547 :: 		
0x578E	0xF89D4010  LDRB	R4, [SP, #16]
0x5792	0x1C64    ADDS	R4, R4, #1
0x5794	0xF88D4010  STRB	R4, [SP, #16]
;__Lib_TFT.c, 3549 :: 		
0x5798	0xE7EE    B	L___Lib_TFT_TFT_Image16bppE719
L___Lib_TFT_TFT_Image16bppE720:
L___Lib_TFT_TFT_Image16bppE718:
;__Lib_TFT.c, 3550 :: 		
L___Lib_TFT_TFT_Image16bppE717:
;__Lib_TFT.c, 3551 :: 		
0x579A	0x9C0A    LDR	R4, [SP, #40]
0x579C	0xF0040401  AND	R4, R4, #1
0x57A0	0xB114    CBZ	R4, L___Lib_TFT_TFT_Image16bppE722
;__Lib_TFT.c, 3552 :: 		
0x57A2	0x2401    MOVS	R4, #1
0x57A4	0xF88D4030  STRB	R4, [SP, #48]
L___Lib_TFT_TFT_Image16bppE722:
;__Lib_TFT.c, 3553 :: 		
0x57A8	0x9C0A    LDR	R4, [SP, #40]
0x57AA	0x0864    LSRS	R4, R4, #1
0x57AC	0x940A    STR	R4, [SP, #40]
;__Lib_TFT.c, 3554 :: 		
0x57AE	0x2400    MOVS	R4, #0
0x57B0	0xF8AD4008  STRH	R4, [SP, #8]
L___Lib_TFT_TFT_Image16bppE723:
0x57B4	0x9D0A    LDR	R5, [SP, #40]
0x57B6	0xF8BD4008  LDRH	R4, [SP, #8]
0x57BA	0x42AC    CMP	R4, R5
0x57BC	0xD231    BCS	L___Lib_TFT_TFT_Image16bppE724
;__Lib_TFT.c, 3555 :: 		
0x57BE	0x9C06    LDR	R4, [SP, #24]
0x57C0	0x7824    LDRB	R4, [R4, #0]
0x57C2	0xF8AD400C  STRH	R4, [SP, #12]
;__Lib_TFT.c, 3556 :: 		
0x57C6	0x9C06    LDR	R4, [SP, #24]
0x57C8	0x1C66    ADDS	R6, R4, #1
;__Lib_TFT.c, 3557 :: 		
0x57CA	0x7834    LDRB	R4, [R6, #0]
0x57CC	0x0225    LSLS	R5, R4, #8
0x57CE	0xB2AD    UXTH	R5, R5
0x57D0	0xF8BD400C  LDRH	R4, [SP, #12]
0x57D4	0x1964    ADDS	R4, R4, R5
0x57D6	0xF8AD400C  STRH	R4, [SP, #12]
;__Lib_TFT.c, 3558 :: 		
0x57DA	0x1C74    ADDS	R4, R6, #1
0x57DC	0x9406    STR	R4, [SP, #24]
;__Lib_TFT.c, 3559 :: 		
0x57DE	0x9D09    LDR	R5, [SP, #36]
0x57E0	0x9C09    LDR	R4, [SP, #36]
0x57E2	0x1C64    ADDS	R4, R4, #1
0x57E4	0x9409    STR	R4, [SP, #36]
0x57E6	0xF8BD4012  LDRH	R4, [SP, #18]
0x57EA	0x42A5    CMP	R5, R4
0x57EC	0xD813    BHI	L___Lib_TFT_TFT_Image16bppE726
;__Lib_TFT.c, 3560 :: 		
0x57EE	0x2400    MOVS	R4, #0
0x57F0	0xF88D4010  STRB	R4, [SP, #16]
L___Lib_TFT_TFT_Image16bppE727:
0x57F4	0xF89D503C  LDRB	R5, [SP, #60]
0x57F8	0xF89D4010  LDRB	R4, [SP, #16]
0x57FC	0x42AC    CMP	R4, R5
0x57FE	0xD20A    BCS	L___Lib_TFT_TFT_Image16bppE728
;__Lib_TFT.c, 3561 :: 		
0x5800	0xF8BD000C  LDRH	R0, [SP, #12]
0x5804	0x4C1E    LDR	R4, [PC, #120]
0x5806	0x6824    LDR	R4, [R4, #0]
0x5808	0x47A0    BLX	R4
;__Lib_TFT.c, 3560 :: 		
0x580A	0xF89D4010  LDRB	R4, [SP, #16]
0x580E	0x1C64    ADDS	R4, R4, #1
0x5810	0xF88D4010  STRB	R4, [SP, #16]
;__Lib_TFT.c, 3562 :: 		
0x5814	0xE7EE    B	L___Lib_TFT_TFT_Image16bppE727
L___Lib_TFT_TFT_Image16bppE728:
L___Lib_TFT_TFT_Image16bppE726:
;__Lib_TFT.c, 3554 :: 		
0x5816	0xF8BD4008  LDRH	R4, [SP, #8]
0x581A	0x1C64    ADDS	R4, R4, #1
0x581C	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_TFT.c, 3563 :: 		
0x5820	0xE7C8    B	L___Lib_TFT_TFT_Image16bppE723
L___Lib_TFT_TFT_Image16bppE724:
;__Lib_TFT.c, 3564 :: 		
0x5822	0xF89D4030  LDRB	R4, [SP, #48]
0x5826	0xB11C    CBZ	R4, L___Lib_TFT_TFT_Image16bppE730
;__Lib_TFT.c, 3565 :: 		
0x5828	0x9C06    LDR	R4, [SP, #24]
0x582A	0x7824    LDRB	R4, [R4, #0]
0x582C	0xF8AD400E  STRH	R4, [SP, #14]
L___Lib_TFT_TFT_Image16bppE730:
;__Lib_TFT.c, 3566 :: 		
0x5830	0xE76E    B	L___Lib_TFT_TFT_Image16bppE715
L___Lib_TFT_TFT_Image16bppE716:
;__Lib_TFT.c, 3567 :: 		
0x5832	0xF8BD4038  LDRH	R4, [SP, #56]
0x5836	0x1C64    ADDS	R4, R4, #1
0x5838	0xF8AD4038  STRH	R4, [SP, #56]
;__Lib_TFT.c, 3530 :: 		
0x583C	0xF89D4011  LDRB	R4, [SP, #17]
0x5840	0x1C64    ADDS	R4, R4, #1
0x5842	0xF88D4011  STRB	R4, [SP, #17]
;__Lib_TFT.c, 3568 :: 		
0x5846	0xE735    B	L___Lib_TFT_TFT_Image16bppE710
L___Lib_TFT_TFT_Image16bppE711:
;__Lib_TFT.c, 3529 :: 		
L___Lib_TFT_TFT_Image16bppE1090:
L___Lib_TFT_TFT_Image16bppE1089:
;__Lib_TFT.c, 3527 :: 		
0x5848	0xF8BD400A  LDRH	R4, [SP, #10]
0x584C	0x1C64    ADDS	R4, R4, #1
0x584E	0xF8AD400A  STRH	R4, [SP, #10]
;__Lib_TFT.c, 3569 :: 		
0x5852	0xE715    B	L___Lib_TFT_TFT_Image16bppE704
L___Lib_TFT_TFT_Image16bppE705:
;__Lib_TFT.c, 3570 :: 		
0x5854	0x2501    MOVS	R5, #1
0x5856	0xB26D    SXTB	R5, R5
0x5858	0x4C05    LDR	R4, [PC, #20]
0x585A	0x6025    STR	R5, [R4, #0]
;__Lib_TFT.c, 3571 :: 		
L_end_TFT_Image16bppE:
0x585C	0xF8DDE000  LDR	LR, [SP, #0]
0x5860	0xB010    ADD	SP, SP, #64
0x5862	0x4770    BX	LR
0x5864	0x2DE82000  	__Lib_TFT_headerBuffer+0
0x5868	0x22262000  	_TFT_DISP_WIDTH+0
0x586C	0x22242000  	_TFT_DISP_HEIGHT+0
0x5870	0x82B44242  	TFT_CS+0
0x5874	0x045C2000  	_TFT_SSD1963_Set_Address_Ptr+0
0x5878	0x2DF82000  	_TFT_Set_Address_Ptr+0
0x587C	0x2DF42000  	_TFT_Get_Ext_Data_Ptr+0
0x5880	0x04602000  	_TFT_Write_Data_Ptr+0
; end of __Lib_TFT_TFT_Image16bppE
_DrawCImage:
;Ducati_logger_driver.c, 3866 :: 		void DrawCImage(TCImage *AImage) {
; AImage start address is: 0 (R0)
0xDE54	0xB081    SUB	SP, SP, #4
0xDE56	0xF8CDE000  STR	LR, [SP, #0]
; AImage end address is: 0 (R0)
; AImage start address is: 0 (R0)
;Ducati_logger_driver.c, 3867 :: 		if (AImage->Visible) {
0xDE5A	0xF2000114  ADDW	R1, R0, #20
0xDE5E	0x7809    LDRB	R1, [R1, #0]
0xDE60	0xB199    CBZ	R1, L_DrawCImage28
;Ducati_logger_driver.c, 3868 :: 		TFT_Ext_Image(AImage->Left, AImage->Top, AImage->Picture_Name, AImage->Picture_Ratio);
0xDE62	0xF2000117  ADDW	R1, R0, #23
0xDE66	0x7809    LDRB	R1, [R1, #0]
0xDE68	0xB2CC    UXTB	R4, R1
0xDE6A	0xF2000110  ADDW	R1, R0, #16
0xDE6E	0x6809    LDR	R1, [R1, #0]
0xDE70	0x460B    MOV	R3, R1
0xDE72	0xF2000108  ADDW	R1, R0, #8
0xDE76	0x8809    LDRH	R1, [R1, #0]
0xDE78	0xB28A    UXTH	R2, R1
0xDE7A	0x1D81    ADDS	R1, R0, #6
; AImage end address is: 0 (R0)
0xDE7C	0x8809    LDRH	R1, [R1, #0]
0xDE7E	0xB288    UXTH	R0, R1
0xDE80	0xB291    UXTH	R1, R2
0xDE82	0x461A    MOV	R2, R3
0xDE84	0xB2E3    UXTB	R3, R4
0xDE86	0xF7F9FFF7  BL	_TFT_Ext_Image+0
;Ducati_logger_driver.c, 3869 :: 		}
L_DrawCImage28:
;Ducati_logger_driver.c, 3870 :: 		}
L_end_DrawCImage:
0xDE8A	0xF8DDE000  LDR	LR, [SP, #0]
0xDE8E	0xB001    ADD	SP, SP, #4
0xDE90	0x4770    BX	LR
; end of _DrawCImage
_Init_GPIO:
;Init_routines.c, 45 :: 		void Init_GPIO(){
0x177EC	0xB081    SUB	SP, SP, #4
0x177EE	0xF8CDE000  STR	LR, [SP, #0]
;Init_routines.c, 50 :: 		GPIO_Digital_Output(&GPIOG_BASE, _GPIO_PINMASK_15);
0x177F2	0xF2480100  MOVW	R1, #32768
0x177F6	0x480B    LDR	R0, [PC, #44]
0x177F8	0xF7F5FBC4  BL	_GPIO_Digital_Output+0
;Init_routines.c, 51 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_3 | _GPIO_PINMASK_4);
0x177FC	0x2118    MOVS	R1, #24
0x177FE	0x480A    LDR	R0, [PC, #40]
0x17800	0xF7F5FBC0  BL	_GPIO_Digital_Output+0
;Init_routines.c, 54 :: 		Power_Man_Init();
0x17804	0xF7FFFE1A  BL	_Power_Man_Init+0
;Init_routines.c, 57 :: 		Fat_Initialized_Flag = 0;
0x17808	0x2100    MOVS	R1, #0
0x1780A	0x4808    LDR	R0, [PC, #32]
0x1780C	0x7001    STRB	R1, [R0, #0]
;Init_routines.c, 58 :: 		Ext_res_initialized = 0;
0x1780E	0x2100    MOVS	R1, #0
0x17810	0x4807    LDR	R0, [PC, #28]
0x17812	0x7001    STRB	R1, [R0, #0]
;Init_routines.c, 59 :: 		Ext_fhandle = 0xFF;
0x17814	0x21FF    MOVS	R1, #255
0x17816	0xB249    SXTB	R1, R1
0x17818	0x4806    LDR	R0, [PC, #24]
0x1781A	0x7001    STRB	R1, [R0, #0]
;Init_routines.c, 60 :: 		}
L_end_Init_GPIO:
0x1781C	0xF8DDE000  LDR	LR, [SP, #0]
0x17820	0xB001    ADD	SP, SP, #4
0x17822	0x4770    BX	LR
0x17824	0x18004002  	GPIOG_BASE+0
0x17828	0x04004002  	GPIOB_BASE+0
0x1782C	0x24DB2000  	_Fat_Initialized_Flag+0
0x17830	0x24DA2000  	_Ext_res_initialized+0
0x17834	0x24DC2000  	_Ext_fhandle+0
; end of _Init_GPIO
_Power_Man_Init:
;Power_management.c, 37 :: 		void Power_Man_Init() {
0x1743C	0xB081    SUB	SP, SP, #4
0x1743E	0xF8CDE000  STR	LR, [SP, #0]
;Power_management.c, 38 :: 		GPIO_Analog_Input(&GPIOF_BASE, _GPIO_PINMASK_6);
0x17442	0xF2400140  MOVW	R1, #64
0x17446	0x4811    LDR	R0, [PC, #68]
0x17448	0xF7F6FBA8  BL	_GPIO_Analog_Input+0
;Power_management.c, 39 :: 		ADC3_Init();
0x1744C	0xF7F6FB8C  BL	_ADC3_Init+0
;Power_management.c, 42 :: 		GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_9);            // USB_VBUS
0x17450	0xF2402100  MOVW	R1, #512
0x17454	0x480E    LDR	R0, [PC, #56]
0x17456	0xF7F6FBBD  BL	_GPIO_Digital_Input+0
;Power_management.c, 43 :: 		GPIO_Digital_Input(&GPIOF_BASE, _GPIO_PINMASK_3);            // DC_VBUS
0x1745A	0xF2400108  MOVW	R1, #8
0x1745E	0x480B    LDR	R0, [PC, #44]
0x17460	0xF7F6FBB8  BL	_GPIO_Digital_Input+0
;Power_management.c, 44 :: 		GPIO_Digital_Input(&GPIOF_BASE, _GPIO_PINMASK_4);            // BAT_STAT
0x17464	0xF2400110  MOVW	R1, #16
0x17468	0x4808    LDR	R0, [PC, #32]
0x1746A	0xF7F6FBB3  BL	_GPIO_Digital_Input+0
;Power_management.c, 46 :: 		Power_State_Old.Battery_state = -1;
0x1746E	0x21FF    MOVS	R1, #-1
0x17470	0x4808    LDR	R0, [PC, #32]
0x17472	0x7001    STRB	R1, [R0, #0]
;Power_management.c, 47 :: 		Power_State_Old.Source = -1;
0x17474	0x21FF    MOVS	R1, #-1
0x17476	0x4808    LDR	R0, [PC, #32]
0x17478	0x7001    STRB	R1, [R0, #0]
;Power_management.c, 48 :: 		Power_State_Old.ui_Voltage = -1;
0x1747A	0xF64F71FF  MOVW	R1, #65535
0x1747E	0x4807    LDR	R0, [PC, #28]
0x17480	0x8001    STRH	R1, [R0, #0]
;Power_management.c, 49 :: 		}
L_end_Power_Man_Init:
0x17482	0xF8DDE000  LDR	LR, [SP, #0]
0x17486	0xB001    ADD	SP, SP, #4
0x17488	0x4770    BX	LR
0x1748A	0xBF00    NOP
0x1748C	0x14004002  	GPIOF_BASE+0
0x17490	0x00004002  	GPIOA_BASE+0
0x17494	0x26F02000  	_Power_State_Old+0
0x17498	0x26F12000  	_Power_State_Old+1
0x1749C	0x26F82000  	_Power_State_Old+8
; end of _Power_Man_Init
_GPIO_Analog_Input:
;__Lib_GPIO_32F4xx.c, 241 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0xDB9C	0xB081    SUB	SP, SP, #4
0xDB9E	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 242 :: 		
0xDBA2	0xF04F0201  MOV	R2, #1
0xDBA6	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0xDBA8	0xF7FBFA6E  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 243 :: 		
L_end_GPIO_Analog_Input:
0xDBAC	0xF8DDE000  LDR	LR, [SP, #0]
0xDBB0	0xB001    ADD	SP, SP, #4
0xDBB2	0x4770    BX	LR
; end of _GPIO_Analog_Input
_ADC3_Init:
;__Lib_ADC_123_32F20x_24ch.c, 364 :: 		
0xDB68	0xB081    SUB	SP, SP, #4
0xDB6A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_ADC_123_32F20x_24ch.c, 365 :: 		
0xDB6E	0x4907    LDR	R1, [PC, #28]
0xDB70	0x4807    LDR	R0, [PC, #28]
0xDB72	0x6001    STR	R1, [R0, #0]
;__Lib_ADC_123_32F20x_24ch.c, 367 :: 		
0xDB74	0x2101    MOVS	R1, #1
0xDB76	0xB249    SXTB	R1, R1
0xDB78	0x4806    LDR	R0, [PC, #24]
0xDB7A	0x6001    STR	R1, [R0, #0]
;__Lib_ADC_123_32F20x_24ch.c, 369 :: 		
0xDB7C	0x4806    LDR	R0, [PC, #24]
0xDB7E	0xF7FAFA85  BL	__Lib_ADC_123_32F20x_24ch_ADCx_Init+0
;__Lib_ADC_123_32F20x_24ch.c, 402 :: 		
L_end_ADC3_Init:
0xDB82	0xF8DDE000  LDR	LR, [SP, #0]
0xDB86	0xB001    ADD	SP, SP, #4
0xDB88	0x4770    BX	LR
0xDB8A	0xBF00    NOP
0xDB8C	0x0CE90000  	_ADC3_Get_Sample+0
0xDB90	0x27A02000  	_ADC_Get_Sample_Ptr+0
0xDB94	0x08A84247  	RCC_APB2ENRbits+0
0xDB98	0x22004001  	ADC3_SR+0
; end of _ADC3_Init
__Lib_ADC_123_32F20x_24ch_ADCx_Init:
;__Lib_ADC_123_32F20x_24ch.c, 103 :: 		
; base start address is: 0 (R0)
0x808C	0xB086    SUB	SP, SP, #24
0x808E	0xF8CDE000  STR	LR, [SP, #0]
0x8092	0x4604    MOV	R4, R0
; base end address is: 0 (R0)
; base start address is: 16 (R4)
;__Lib_ADC_123_32F20x_24ch.c, 111 :: 		
0x8094	0xA901    ADD	R1, SP, #4
0x8096	0x4608    MOV	R0, R1
0x8098	0xF7FEFB76  BL	_RCC_GetClocksFrequency+0
;__Lib_ADC_123_32F20x_24ch.c, 113 :: 		
0x809C	0x9A04    LDR	R2, [SP, #16]
0x809E	0x4939    LDR	R1, [PC, #228]
0x80A0	0x428A    CMP	R2, R1
0x80A2	0xD906    BLS	L___Lib_ADC_123_32F20x_24ch_ADCx_Init16
;__Lib_ADC_123_32F20x_24ch.c, 115 :: 		
0x80A4	0x2201    MOVS	R2, #1
0x80A6	0xB252    SXTB	R2, R2
0x80A8	0x4937    LDR	R1, [PC, #220]
0x80AA	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_24ch.c, 116 :: 		
0x80AC	0x4937    LDR	R1, [PC, #220]
0x80AE	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_24ch.c, 117 :: 		
0x80B0	0xE01F    B	L___Lib_ADC_123_32F20x_24ch_ADCx_Init17
L___Lib_ADC_123_32F20x_24ch_ADCx_Init16:
0x80B2	0x9A04    LDR	R2, [SP, #16]
0x80B4	0x4936    LDR	R1, [PC, #216]
0x80B6	0x428A    CMP	R2, R1
0x80B8	0xD908    BLS	L___Lib_ADC_123_32F20x_24ch_ADCx_Init18
;__Lib_ADC_123_32F20x_24ch.c, 119 :: 		
0x80BA	0x2200    MOVS	R2, #0
0x80BC	0xB252    SXTB	R2, R2
0x80BE	0x4932    LDR	R1, [PC, #200]
0x80C0	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_24ch.c, 120 :: 		
0x80C2	0x2201    MOVS	R2, #1
0x80C4	0xB252    SXTB	R2, R2
0x80C6	0x4931    LDR	R1, [PC, #196]
0x80C8	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_24ch.c, 121 :: 		
0x80CA	0xE012    B	L___Lib_ADC_123_32F20x_24ch_ADCx_Init19
L___Lib_ADC_123_32F20x_24ch_ADCx_Init18:
0x80CC	0x9A04    LDR	R2, [SP, #16]
0x80CE	0x4931    LDR	R1, [PC, #196]
0x80D0	0x428A    CMP	R2, R1
0x80D2	0xD908    BLS	L___Lib_ADC_123_32F20x_24ch_ADCx_Init20
;__Lib_ADC_123_32F20x_24ch.c, 123 :: 		
0x80D4	0x2201    MOVS	R2, #1
0x80D6	0xB252    SXTB	R2, R2
0x80D8	0x492B    LDR	R1, [PC, #172]
0x80DA	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_24ch.c, 124 :: 		
0x80DC	0x2200    MOVS	R2, #0
0x80DE	0xB252    SXTB	R2, R2
0x80E0	0x492A    LDR	R1, [PC, #168]
0x80E2	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_24ch.c, 125 :: 		
0x80E4	0xE005    B	L___Lib_ADC_123_32F20x_24ch_ADCx_Init21
L___Lib_ADC_123_32F20x_24ch_ADCx_Init20:
;__Lib_ADC_123_32F20x_24ch.c, 127 :: 		
0x80E6	0x2200    MOVS	R2, #0
0x80E8	0xB252    SXTB	R2, R2
0x80EA	0x4927    LDR	R1, [PC, #156]
0x80EC	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_24ch.c, 128 :: 		
0x80EE	0x4927    LDR	R1, [PC, #156]
0x80F0	0x600A    STR	R2, [R1, #0]
;__Lib_ADC_123_32F20x_24ch.c, 129 :: 		
L___Lib_ADC_123_32F20x_24ch_ADCx_Init21:
L___Lib_ADC_123_32F20x_24ch_ADCx_Init19:
L___Lib_ADC_123_32F20x_24ch_ADCx_Init17:
;__Lib_ADC_123_32F20x_24ch.c, 132 :: 		
0x80F2	0x1D23    ADDS	R3, R4, #4
0x80F4	0x681A    LDR	R2, [R3, #0]
0x80F6	0x4928    LDR	R1, [PC, #160]
0x80F8	0xEA020101  AND	R1, R2, R1, LSL #0
0x80FC	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_24ch.c, 134 :: 		
0x80FE	0xF2040308  ADDW	R3, R4, #8
0x8102	0x681A    LDR	R2, [R3, #0]
0x8104	0x4925    LDR	R1, [PC, #148]
0x8106	0xEA020101  AND	R1, R2, R1, LSL #0
0x810A	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_24ch.c, 142 :: 		
0x810C	0x1D23    ADDS	R3, R4, #4
0x810E	0x2200    MOVS	R2, #0
0x8110	0x6819    LDR	R1, [R3, #0]
0x8112	0xF3622108  BFI	R1, R2, #8, #1
0x8116	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_24ch.c, 145 :: 		
0x8118	0xF2040308  ADDW	R3, R4, #8
0x811C	0x2200    MOVS	R2, #0
0x811E	0x6819    LDR	R1, [R3, #0]
0x8120	0xF3620141  BFI	R1, R2, #1, #1
0x8124	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_24ch.c, 147 :: 		
0x8126	0xF2040308  ADDW	R3, R4, #8
0x812A	0x2200    MOVS	R2, #0
0x812C	0x6819    LDR	R1, [R3, #0]
0x812E	0xF36221CB  BFI	R1, R2, #11, #1
0x8132	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_24ch.c, 155 :: 		
0x8134	0xF204032C  ADDW	R3, R4, #44
0x8138	0x2200    MOVS	R2, #0
0x813A	0x6819    LDR	R1, [R3, #0]
0x813C	0xF3625114  BFI	R1, R2, #20, #1
0x8140	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_24ch.c, 156 :: 		
0x8142	0xF204032C  ADDW	R3, R4, #44
0x8146	0x2200    MOVS	R2, #0
0x8148	0x6819    LDR	R1, [R3, #0]
0x814A	0xF3625155  BFI	R1, R2, #21, #1
0x814E	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_24ch.c, 157 :: 		
0x8150	0xF204032C  ADDW	R3, R4, #44
0x8154	0x2200    MOVS	R2, #0
0x8156	0x6819    LDR	R1, [R3, #0]
0x8158	0xF3625196  BFI	R1, R2, #22, #1
0x815C	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_24ch.c, 158 :: 		
0x815E	0xF204032C  ADDW	R3, R4, #44
0x8162	0x2200    MOVS	R2, #0
0x8164	0x6819    LDR	R1, [R3, #0]
0x8166	0xF36251D7  BFI	R1, R2, #23, #1
0x816A	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_24ch.c, 162 :: 		
0x816C	0xF2040308  ADDW	R3, R4, #8
; base end address is: 16 (R4)
0x8170	0x2201    MOVS	R2, #1
0x8172	0x6819    LDR	R1, [R3, #0]
0x8174	0xF3620100  BFI	R1, R2, #0, #1
0x8178	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F20x_24ch.c, 173 :: 		
L_end_ADCx_Init:
0x817A	0xF8DDE000  LDR	LR, [SP, #0]
0x817E	0xB006    ADD	SP, SP, #24
0x8180	0x4770    BX	LR
0x8182	0xBF00    NOP
0x8184	0x95000ABA  	#180000000
0x8188	0x60C04224  	ADC_CCR+0
0x818C	0x60C44224  	ADC_CCR+0
0x8190	0x0E000727  	#120000000
0x8194	0x87000393  	#60000000
0x8198	0xFEFFFFF0  	#-983297
0x819C	0xF7FDFFF1  	#-919555
; end of __Lib_ADC_123_32F20x_24ch_ADCx_Init
_GPIO_Digital_Input:
;__Lib_GPIO_32F4xx.c, 237 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0xDBD4	0xB081    SUB	SP, SP, #4
0xDBD6	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 238 :: 		
0xDBDA	0xF04F0242  MOV	R2, #66
0xDBDE	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0xDBE0	0xF7FBFA52  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 239 :: 		
L_end_GPIO_Digital_Input:
0xDBE4	0xF8DDE000  LDR	LR, [SP, #0]
0xDBE8	0xB001    ADD	SP, SP, #4
0xDBEA	0x4770    BX	LR
; end of _GPIO_Digital_Input
_Init_SDIO:
;Init_routines.c, 70 :: 		void Init_SDIO(){
0x174A0	0xB081    SUB	SP, SP, #4
0x174A2	0xF8CDE000  STR	LR, [SP, #0]
;Init_routines.c, 72 :: 		SDIO_Reset();
0x174A6	0xF7F5FD4B  BL	_SDIO_Reset+0
;Init_routines.c, 73 :: 		Ext_res_initialized = 0;
0x174AA	0x2100    MOVS	R1, #0
0x174AC	0x4819    LDR	R0, [PC, #100]
0x174AE	0x7001    STRB	R1, [R0, #0]
;Init_routines.c, 74 :: 		Fat_Initialized_Flag = 0;
0x174B0	0x2100    MOVS	R1, #0
0x174B2	0x4819    LDR	R0, [PC, #100]
0x174B4	0x7001    STRB	R1, [R0, #0]
;Init_routines.c, 75 :: 		Ext_fhandle = 0xFF;
0x174B6	0x21FF    MOVS	R1, #255
0x174B8	0xB249    SXTB	R1, R1
0x174BA	0x4818    LDR	R0, [PC, #96]
0x174BC	0x7001    STRB	R1, [R0, #0]
;Init_routines.c, 78 :: 		| _SDIO_CFG_CLOCK_RISING_EDGE | _SDIO_CFG_HW_FLOW_DISABLE, 125, &_GPIO_MODULE_SDIO_D0_D3);
0x174BE	0x4A18    LDR	R2, [PC, #96]
0x174C0	0x217D    MOVS	R1, #125
0x174C2	0xF6400000  MOVW	R0, #2048
0x174C6	0xF7F5FC8B  BL	_SDIO_Init+0
;Init_routines.c, 81 :: 		GPIOD_PUPDRbits.PUPDR2 = 1;
0x174CA	0x2201    MOVS	R2, #1
0x174CC	0x4915    LDR	R1, [PC, #84]
0x174CE	0x7808    LDRB	R0, [R1, #0]
0x174D0	0xF3621005  BFI	R0, R2, #4, #2
0x174D4	0x7008    STRB	R0, [R1, #0]
;Init_routines.c, 82 :: 		GPIOC_PUPDRbits.PUPDR8 = 1;
0x174D6	0x2201    MOVS	R2, #1
0x174D8	0x4913    LDR	R1, [PC, #76]
0x174DA	0x6808    LDR	R0, [R1, #0]
0x174DC	0xF3624011  BFI	R0, R2, #16, #2
0x174E0	0x6008    STR	R0, [R1, #0]
;Init_routines.c, 83 :: 		GPIOC_PUPDRbits.PUPDR9 = 1;
0x174E2	0x2201    MOVS	R2, #1
0x174E4	0x4910    LDR	R1, [PC, #64]
0x174E6	0x6808    LDR	R0, [R1, #0]
0x174E8	0xF3624093  BFI	R0, R2, #18, #2
0x174EC	0x6008    STR	R0, [R1, #0]
;Init_routines.c, 84 :: 		GPIOC_PUPDRbits.PUPDR10 = 1;
0x174EE	0x2201    MOVS	R2, #1
0x174F0	0x490D    LDR	R1, [PC, #52]
0x174F2	0x6808    LDR	R0, [R1, #0]
0x174F4	0xF3625015  BFI	R0, R2, #20, #2
0x174F8	0x6008    STR	R0, [R1, #0]
;Init_routines.c, 85 :: 		GPIOC_PUPDRbits.PUPDR11 = 1;
0x174FA	0x2201    MOVS	R2, #1
0x174FC	0x490A    LDR	R1, [PC, #40]
0x174FE	0x6808    LDR	R0, [R1, #0]
0x17500	0xF3625097  BFI	R0, R2, #22, #2
0x17504	0x6008    STR	R0, [R1, #0]
;Init_routines.c, 87 :: 		Mmc_Set_Interface(_MMC_INTERFACE_SDIO);
0x17506	0x2001    MOVS	R0, #1
0x17508	0xF7F5FBDE  BL	_Mmc_Set_Interface+0
;Init_routines.c, 88 :: 		}
L_end_Init_SDIO:
0x1750C	0xF8DDE000  LDR	LR, [SP, #0]
0x17510	0xB001    ADD	SP, SP, #4
0x17512	0x4770    BX	LR
0x17514	0x24DA2000  	_Ext_res_initialized+0
0x17518	0x24DB2000  	_Fat_Initialized_Flag+0
0x1751C	0x24DC2000  	_Ext_fhandle+0
0x17520	0x8A280001  	__GPIO_MODULE_SDIO_D0_D3+0
0x17524	0x0C0C4002  	GPIOD_PUPDRbits+0
0x17528	0x080C4002  	GPIOC_PUPDRbits+0
; end of _Init_SDIO
_Init_FAT:
;Init_routines.c, 123 :: 		char Init_FAT(){
0x1752C	0xB082    SUB	SP, SP, #8
0x1752E	0xF8CDE000  STR	LR, [SP, #0]
;Init_routines.c, 124 :: 		char FAT_cnt = 0;
; FAT_cnt start address is: 8 (R2)
0x17532	0x2200    MOVS	R2, #0
;Init_routines.c, 125 :: 		if (MMC_Card_Detect == 0){
0x17534	0x491B    LDR	R1, [PC, #108]
0x17536	0x6808    LDR	R0, [R1, #0]
0x17538	0x2800    CMP	R0, #0
0x1753A	0xD12C    BNE	L_Init_FAT2
;Init_routines.c, 126 :: 		if (Fat_Initialized_Flag == 0){
0x1753C	0x481A    LDR	R0, [PC, #104]
0x1753E	0x7800    LDRB	R0, [R0, #0]
0x17540	0xB9B8    CBNZ	R0, L_Init_FAT3
; FAT_cnt end address is: 8 (R2)
0x17542	0xB2D1    UXTB	R1, R2
;Init_routines.c, 127 :: 		while ((Fat32_Init() != 0) && (FAT_cnt < 5))
L_Init_FAT4:
; FAT_cnt start address is: 4 (R1)
0x17544	0xF88D1004  STRB	R1, [SP, #4]
0x17548	0xF7F7F8F4  BL	_FAT32_Init+0
0x1754C	0xF89D1004  LDRB	R1, [SP, #4]
0x17550	0xB120    CBZ	R0, L__Init_FAT19
0x17552	0x2905    CMP	R1, #5
0x17554	0xD202    BCS	L__Init_FAT18
L__Init_FAT17:
;Init_routines.c, 128 :: 		Fat_cnt ++;
0x17556	0x1C49    ADDS	R1, R1, #1
0x17558	0xB2C9    UXTB	R1, R1
0x1755A	0xE7F3    B	L_Init_FAT4
;Init_routines.c, 127 :: 		while ((Fat32_Init() != 0) && (FAT_cnt < 5))
L__Init_FAT19:
L__Init_FAT18:
;Init_routines.c, 129 :: 		if (FAT_cnt < 5){
0x1755C	0x2905    CMP	R1, #5
0x1755E	0xD208    BCS	L_Init_FAT8
; FAT_cnt end address is: 4 (R1)
;Init_routines.c, 131 :: 		| _SDIO_CFG_CLOCK_RISING_EDGE | _SDIO_CFG_HW_FLOW_DISABLE, 1, &_GPIO_MODULE_SDIO_D0_D3);
0x17560	0x4A12    LDR	R2, [PC, #72]
0x17562	0x2101    MOVS	R1, #1
0x17564	0xF6400000  MOVW	R0, #2048
0x17568	0xF7F5FC3A  BL	_SDIO_Init+0
;Init_routines.c, 132 :: 		Fat_Initialized_Flag = 1;
0x1756C	0x2101    MOVS	R1, #1
0x1756E	0x480E    LDR	R0, [PC, #56]
0x17570	0x7001    STRB	R1, [R0, #0]
;Init_routines.c, 133 :: 		}
L_Init_FAT8:
;Init_routines.c, 134 :: 		}
L_Init_FAT3:
;Init_routines.c, 135 :: 		if (Ext_res_initialized == 0){
0x17572	0x480F    LDR	R0, [PC, #60]
0x17574	0x7800    LDRB	R0, [R0, #0]
0x17576	0xB970    CBNZ	R0, L_Init_FAT9
;Init_routines.c, 136 :: 		TFT_Set_Ext_Buffer(MyTFT_Get_Data);
0x17578	0x480E    LDR	R0, [PC, #56]
0x1757A	0xF7F5FE35  BL	_TFT_Set_Ext_Buffer+0
;Init_routines.c, 137 :: 		Ext_fhandle = FAT32_Open("Ext_reso.RES", 1);
0x1757E	0x480E    LDR	R0, [PC, #56]
0x17580	0x2101    MOVS	R1, #1
0x17582	0xF7F7FB3D  BL	_FAT32_Open+0
0x17586	0x490D    LDR	R1, [PC, #52]
0x17588	0x7008    STRB	R0, [R1, #0]
;Init_routines.c, 138 :: 		if (Ext_fhandle != 0xFF)
0x1758A	0xF1B00FFF  CMP	R0, #255
0x1758E	0xD002    BEQ	L_Init_FAT10
;Init_routines.c, 139 :: 		Ext_res_initialized = 1;
0x17590	0x2101    MOVS	R1, #1
0x17592	0x4807    LDR	R0, [PC, #28]
0x17594	0x7001    STRB	R1, [R0, #0]
L_Init_FAT10:
;Init_routines.c, 140 :: 		}
L_Init_FAT9:
;Init_routines.c, 141 :: 		}
L_Init_FAT2:
;Init_routines.c, 143 :: 		return Ext_res_initialized;
0x17596	0x4806    LDR	R0, [PC, #24]
0x17598	0x7800    LDRB	R0, [R0, #0]
;Init_routines.c, 144 :: 		}
L_end_Init_FAT:
0x1759A	0xF8DDE000  LDR	LR, [SP, #0]
0x1759E	0xB002    ADD	SP, SP, #8
0x175A0	0x4770    BX	LR
0x175A2	0xBF00    NOP
0x175A4	0x820C4241  	GPIOD_IDR+0
0x175A8	0x24DB2000  	_Fat_Initialized_Flag+0
0x175AC	0x8A280001  	__GPIO_MODULE_SDIO_D0_D3+0
0x175B0	0x24DA2000  	_Ext_res_initialized+0
0x175B4	0x26B10000  	_MyTFT_Get_Data+0
0x175B8	0x02C42000  	?lstr1_Init_routines+0
0x175BC	0x24DC2000  	_Ext_fhandle+0
; end of _Init_FAT
_FAT32_Init:
;__Lib_FAT32_STM32.c, 1115 :: 		
0xE734	0xB082    SUB	SP, SP, #8
0xE736	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_FAT32_STM32.c, 1120 :: 		
; rslt start address is: 4 (R1)
0xE73A	0x2100    MOVS	R1, #0
;__Lib_FAT32_STM32.c, 1121 :: 		
0xE73C	0x2001    MOVS	R0, #1
0xE73E	0xB240    SXTB	R0, R0
; rslt end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 1124 :: 		
L_FAT32_Init162:
; rslt start address is: 4 (R1)
0xE740	0xB160    CBZ	R0, L__FAT32_Init732
0xE742	0x2932    CMP	R1, #50
0xE744	0xD20A    BCS	L__FAT32_Init731
L__FAT32_Init730:
;__Lib_FAT32_STM32.c, 1126 :: 		
0xE746	0xF88D1004  STRB	R1, [SP, #4]
0xE74A	0xF7FFFA33  BL	_FAT32_Dev_Init+0
0xE74E	0xF89D1004  LDRB	R1, [SP, #4]
; tmp start address is: 8 (R2)
0xE752	0xB242    SXTB	R2, R0
;__Lib_FAT32_STM32.c, 1127 :: 		
0xE754	0x1C49    ADDS	R1, R1, #1
0xE756	0xB2C9    UXTB	R1, R1
;__Lib_FAT32_STM32.c, 1128 :: 		
; tmp end address is: 8 (R2)
0xE758	0xB250    SXTB	R0, R2
0xE75A	0xE7F1    B	L_FAT32_Init162
;__Lib_FAT32_STM32.c, 1124 :: 		
L__FAT32_Init732:
L__FAT32_Init731:
;__Lib_FAT32_STM32.c, 1131 :: 		
0xE75C	0x2932    CMP	R1, #50
0xE75E	0xD306    BCC	L_FAT32_Init166
; rslt end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 1133 :: 		
0xE760	0x21FD    MOVS	R1, #-3
0xE762	0xB249    SXTB	R1, R1
0xE764	0x4809    LDR	R0, [PC, #36]
0xE766	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 1134 :: 		
0xE768	0x20FF    MOVS	R0, #-1
0xE76A	0xB240    SXTB	R0, R0
0xE76C	0xE009    B	L_end_FAT32_Init
;__Lib_FAT32_STM32.c, 1135 :: 		
L_FAT32_Init166:
;__Lib_FAT32_STM32.c, 1137 :: 		
0xE76E	0xF7FFFA3D  BL	__Lib_FAT32_STM32_resetFSI+0
;__Lib_FAT32_STM32.c, 1139 :: 		
0xE772	0xF7FFFAF1  BL	__Lib_FAT32_STM32_readFSI+0
0xE776	0xB110    CBZ	R0, L_FAT32_Init167
;__Lib_FAT32_STM32.c, 1141 :: 		
0xE778	0x20FF    MOVS	R0, #-1
0xE77A	0xB240    SXTB	R0, R0
0xE77C	0xE001    B	L_end_FAT32_Init
;__Lib_FAT32_STM32.c, 1142 :: 		
L_FAT32_Init167:
;__Lib_FAT32_STM32.c, 1144 :: 		
0xE77E	0x2000    MOVS	R0, #0
0xE780	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 1145 :: 		
L_end_FAT32_Init:
0xE782	0xF8DDE000  LDR	LR, [SP, #0]
0xE786	0xB002    ADD	SP, SP, #8
0xE788	0x4770    BX	LR
0xE78A	0xBF00    NOP
0xE78C	0x27A82000  	__Lib_FAT32_STM32___error+0
; end of _FAT32_Init
_FAT32_Dev_Init:
;__Lib_FAT32_Driver_STM32.c, 25 :: 		int8 FAT32_Dev_Init(void)
0xDBB4	0xB081    SUB	SP, SP, #4
0xDBB6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_FAT32_Driver_STM32.c, 27 :: 		if (OK != Mmc_Init())
0xDBBA	0xF7FAF8FB  BL	_Mmc_Init+0
0xDBBE	0xB110    CBZ	R0, L_FAT32_Dev_Init0
;__Lib_FAT32_Driver_STM32.c, 29 :: 		return ERROR;
0xDBC0	0x20FF    MOVS	R0, #-1
0xDBC2	0xB240    SXTB	R0, R0
0xDBC4	0xE001    B	L_end_FAT32_Dev_Init
;__Lib_FAT32_Driver_STM32.c, 30 :: 		}
L_FAT32_Dev_Init0:
;__Lib_FAT32_Driver_STM32.c, 31 :: 		return OK;
0xDBC6	0x2000    MOVS	R0, #0
0xDBC8	0xB240    SXTB	R0, R0
;__Lib_FAT32_Driver_STM32.c, 32 :: 		}
L_end_FAT32_Dev_Init:
0xDBCA	0xF8DDE000  LDR	LR, [SP, #0]
0xDBCE	0xB001    ADD	SP, SP, #4
0xDBD0	0x4770    BX	LR
; end of _FAT32_Dev_Init
__Lib_FAT32_STM32_resetFSI:
;__Lib_FAT32_STM32.c, 621 :: 		
0xDBEC	0xB081    SUB	SP, SP, #4
0xDBEE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_FAT32_STM32.c, 623 :: 		
0xDBF2	0x2208    MOVS	R2, #8
0xDBF4	0xB212    SXTH	R2, R2
0xDBF6	0x2100    MOVS	R1, #0
0xDBF8	0x4822    LDR	R0, [PC, #136]
0xDBFA	0xF7FBFEAF  BL	__Lib_FAT32_STM32_alt_memset+0
;__Lib_FAT32_STM32.c, 624 :: 		
0xDBFE	0x2208    MOVS	R2, #8
0xDC00	0xB212    SXTH	R2, R2
0xDC02	0x2100    MOVS	R1, #0
0xDC04	0x4820    LDR	R0, [PC, #128]
0xDC06	0xF7FBFEA9  BL	__Lib_FAT32_STM32_alt_memset+0
;__Lib_FAT32_STM32.c, 625 :: 		
0xDC0A	0x2208    MOVS	R2, #8
0xDC0C	0xB212    SXTH	R2, R2
0xDC0E	0x2100    MOVS	R1, #0
0xDC10	0x481E    LDR	R0, [PC, #120]
0xDC12	0xF7FBFEA3  BL	__Lib_FAT32_STM32_alt_memset+0
;__Lib_FAT32_STM32.c, 626 :: 		
0xDC16	0x2234    MOVS	R2, #52
0xDC18	0xB212    SXTH	R2, R2
0xDC1A	0x2100    MOVS	R1, #0
0xDC1C	0x481C    LDR	R0, [PC, #112]
0xDC1E	0xF7FBFE9D  BL	__Lib_FAT32_STM32_alt_memset+0
;__Lib_FAT32_STM32.c, 627 :: 		
0xDC22	0xF2402204  MOVW	R2, #516
0xDC26	0xB212    SXTH	R2, R2
0xDC28	0x2100    MOVS	R1, #0
0xDC2A	0x481A    LDR	R0, [PC, #104]
0xDC2C	0xF7FBFE96  BL	__Lib_FAT32_STM32_alt_memset+0
;__Lib_FAT32_STM32.c, 628 :: 		
0xDC30	0xF2400104  MOVW	R1, _FAT32_MAX_FILES
0xDC34	0xB209    SXTH	R1, R1
0xDC36	0x201C    MOVS	R0, #28
0xDC38	0xB200    SXTH	R0, R0
0xDC3A	0x4348    MULS	R0, R1, R0
0xDC3C	0xB202    SXTH	R2, R0
0xDC3E	0x2100    MOVS	R1, #0
0xDC40	0x4815    LDR	R0, [PC, #84]
0xDC42	0xF7FBFE8B  BL	__Lib_FAT32_STM32_alt_memset+0
;__Lib_FAT32_STM32.c, 631 :: 		
0xDC46	0xF04F31FF  MOV	R1, #-1
0xDC4A	0x4812    LDR	R0, [PC, #72]
0xDC4C	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 632 :: 		
0xDC4E	0x4913    LDR	R1, [PC, #76]
0xDC50	0x4813    LDR	R0, [PC, #76]
0xDC52	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 634 :: 		
0xDC54	0x2100    MOVS	R1, #0
0xDC56	0x4813    LDR	R0, [PC, #76]
0xDC58	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 635 :: 		
0xDC5A	0x2100    MOVS	R1, #0
0xDC5C	0x4812    LDR	R0, [PC, #72]
0xDC5E	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 638 :: 		
0xDC60	0x2100    MOVS	R1, #0
0xDC62	0x4812    LDR	R0, [PC, #72]
0xDC64	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 640 :: 		
0xDC66	0x2100    MOVS	R1, #0
0xDC68	0x4811    LDR	R0, [PC, #68]
0xDC6A	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 641 :: 		
0xDC6C	0x2100    MOVS	R1, #0
0xDC6E	0x4811    LDR	R0, [PC, #68]
0xDC70	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 643 :: 		
0xDC72	0x2100    MOVS	R1, #0
0xDC74	0xB249    SXTB	R1, R1
0xDC76	0x4810    LDR	R0, [PC, #64]
0xDC78	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 644 :: 		
L_end_resetFSI:
0xDC7A	0xF8DDE000  LDR	LR, [SP, #0]
0xDC7E	0xB001    ADD	SP, SP, #4
0xDC80	0x4770    BX	LR
0xDC82	0xBF00    NOP
0xDC84	0x2A302000  	__Lib_FAT32_STM32___TM+0
0xDC88	0x27B22000  	__Lib_FAT32_STM32___CT+0
0xDC8C	0x27AA2000  	__Lib_FAT32_STM32___MT+0
0xDC90	0x2A382000  	__Lib_FAT32_STM32___fsi+0
0xDC94	0x27BC2000  	_f32_sector+0
0xDC98	0x29C02000  	_fat32_fdesc+0
0xDC9C	0x29C02000  	_f32_sector+516
0xDCA0	0x2A6C2000  	__Lib_FAT32_STM32_fSectBuffEnd+0
0xDCA4	0x27A92000  	__Lib_FAT32_STM32_fCardMultiReadMode+0
0xDCA8	0x27BB2000  	__Lib_FAT32_STM32_fDoSyncFSI+0
0xDCAC	0x2A702000  	__Lib_FAT32_STM32_fMaxCluster+0
0xDCB0	0x2A742000  	__Lib_FAT32_STM32___currentDir+0
0xDCB4	0x2A782000  	__Lib_FAT32_STM32___currentEntry+0
0xDCB8	0x27A82000  	__Lib_FAT32_STM32___error+0
; end of __Lib_FAT32_STM32_resetFSI
__Lib_FAT32_STM32_alt_memset:
;__Lib_FAT32_STM32.c, 130 :: 		
; n start address is: 8 (R2)
; character start address is: 4 (R1)
0x995C	0xB081    SUB	SP, SP, #4
0x995E	0xB213    SXTH	R3, R2
0x9960	0x4602    MOV	R2, R0
0x9962	0xB2C8    UXTB	R0, R1
; n end address is: 8 (R2)
; character end address is: 4 (R1)
; p1 start address is: 8 (R2)
; n start address is: 12 (R3)
;__Lib_FAT32_STM32.c, 133 :: 		
; pp start address is: 4 (R1)
0x9964	0x4611    MOV	R1, R2
; n end address is: 12 (R3)
; p1 end address is: 8 (R2)
; pp end address is: 4 (R1)
0x9966	0xB21D    SXTH	R5, R3
;__Lib_FAT32_STM32.c, 134 :: 		
L___Lib_FAT32_STM32_alt_memset0:
; pp start address is: 4 (R1)
; n start address is: 20 (R5)
; n start address is: 20 (R5)
; p1 start address is: 8 (R2)
0x9968	0xB22C    SXTH	R4, R5
0x996A	0x1E6B    SUBS	R3, R5, #1
0x996C	0xB21D    SXTH	R5, R3
; n end address is: 20 (R5)
0x996E	0xB114    CBZ	R4, L___Lib_FAT32_STM32_alt_memset1
; n end address is: 20 (R5)
;__Lib_FAT32_STM32.c, 135 :: 		
; n start address is: 20 (R5)
0x9970	0x7008    STRB	R0, [R1, #0]
0x9972	0x1C49    ADDS	R1, R1, #1
; n end address is: 20 (R5)
; pp end address is: 4 (R1)
0x9974	0xE7F8    B	L___Lib_FAT32_STM32_alt_memset0
L___Lib_FAT32_STM32_alt_memset1:
;__Lib_FAT32_STM32.c, 136 :: 		
0x9976	0x4610    MOV	R0, R2
; p1 end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 137 :: 		
L_end_alt_memset:
0x9978	0xB001    ADD	SP, SP, #4
0x997A	0x4770    BX	LR
; end of __Lib_FAT32_STM32_alt_memset
__Lib_FAT32_STM32_readFSI:
;__Lib_FAT32_STM32.c, 987 :: 		
0xDD58	0xB081    SUB	SP, SP, #4
0xDD5A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_FAT32_STM32.c, 993 :: 		
0xDD5E	0xF7FCFC21  BL	__Lib_FAT32_STM32_readBR+0
;__Lib_FAT32_STM32.c, 996 :: 		
; pBR start address is: 8 (R2)
0xDD62	0x4A35    LDR	R2, [PC, #212]
;__Lib_FAT32_STM32.c, 1000 :: 		
0xDD64	0x4835    LDR	R0, [PC, #212]
0xDD66	0xF9900000  LDRSB	R0, [R0, #0]
0xDD6A	0xF1B03FFF  CMP	R0, #-1
0xDD6E	0xD102    BNE	L___Lib_FAT32_STM32_readFSI147
; pBR end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 1001 :: 		
0xDD70	0x20FF    MOVS	R0, #-1
0xDD72	0xB240    SXTB	R0, R0
0xDD74	0xE05B    B	L_end_readFSI
L___Lib_FAT32_STM32_readFSI147:
;__Lib_FAT32_STM32.c, 1004 :: 		
; pBR start address is: 8 (R2)
0xDD76	0x4831    LDR	R0, [PC, #196]
0xDD78	0xF9901000  LDRSB	R1, [R0, #0]
0xDD7C	0xF06F0003  MVN	R0, #3
0xDD80	0x4281    CMP	R1, R0
0xDD82	0xD102    BNE	L___Lib_FAT32_STM32_readFSI148
; pBR end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 1005 :: 		
0xDD84	0x20FF    MOVS	R0, #-1
0xDD86	0xB240    SXTB	R0, R0
0xDD88	0xE051    B	L_end_readFSI
L___Lib_FAT32_STM32_readFSI148:
;__Lib_FAT32_STM32.c, 1008 :: 		
; pBR start address is: 8 (R2)
0xDD8A	0x482C    LDR	R0, [PC, #176]
0xDD8C	0xF9900000  LDRSB	R0, [R0, #0]
0xDD90	0x2800    CMP	R0, #0
0xDD92	0xD146    BNE	L___Lib_FAT32_STM32_readFSI149
;__Lib_FAT32_STM32.c, 1010 :: 		
0xDD94	0xF2020030  ADDW	R0, R2, #48
; pBR end address is: 8 (R2)
0xDD98	0xF7F5F9CE  BL	__Lib_FAT32_STM32_UI16+0
0xDD9C	0x4928    LDR	R1, [PC, #160]
0xDD9E	0x6809    LDR	R1, [R1, #0]
0xDDA0	0x1808    ADDS	R0, R1, R0
;__Lib_FAT32_STM32.c, 1011 :: 		
0xDDA2	0xF7F2FA55  BL	__Lib_FAT32_STM32_readSector+0
0xDDA6	0xB110    CBZ	R0, L___Lib_FAT32_STM32_readFSI150
;__Lib_FAT32_STM32.c, 1013 :: 		
0xDDA8	0x20FF    MOVS	R0, #-1
0xDDAA	0xB240    SXTB	R0, R0
0xDDAC	0xE03F    B	L_end_readFSI
;__Lib_FAT32_STM32.c, 1014 :: 		
L___Lib_FAT32_STM32_readFSI150:
;__Lib_FAT32_STM32.c, 1016 :: 		
; pFSI start address is: 12 (R3)
0xDDAE	0x4B22    LDR	R3, [PC, #136]
;__Lib_FAT32_STM32.c, 1018 :: 		
0xDDB0	0xF50370FF  ADD	R0, R3, #510
0xDDB4	0xF7F5F9C0  BL	__Lib_FAT32_STM32_UI16+0
0xDDB8	0xF64A2155  MOVW	R1, #43605
0xDDBC	0x4288    CMP	R0, R1
0xDDBE	0xD006    BEQ	L___Lib_FAT32_STM32_readFSI151
; pFSI end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 1020 :: 		
0xDDC0	0x21FC    MOVS	R1, #-4
0xDDC2	0xB249    SXTB	R1, R1
0xDDC4	0x481D    LDR	R0, [PC, #116]
0xDDC6	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 1021 :: 		
0xDDC8	0x20FF    MOVS	R0, #-1
0xDDCA	0xB240    SXTB	R0, R0
0xDDCC	0xE02F    B	L_end_readFSI
;__Lib_FAT32_STM32.c, 1022 :: 		
L___Lib_FAT32_STM32_readFSI151:
;__Lib_FAT32_STM32.c, 1024 :: 		
; pFSI start address is: 12 (R3)
0xDDCE	0x4618    MOV	R0, R3
0xDDD0	0xF7F5F9FE  BL	__Lib_FAT32_STM32_UI32+0
0xDDD4	0x491B    LDR	R1, [PC, #108]
0xDDD6	0x4288    CMP	R0, R1
0xDDD8	0xD006    BEQ	L___Lib_FAT32_STM32_readFSI152
; pFSI end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 1026 :: 		
0xDDDA	0x21FA    MOVS	R1, #-6
0xDDDC	0xB249    SXTB	R1, R1
0xDDDE	0x4817    LDR	R0, [PC, #92]
0xDDE0	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 1027 :: 		
0xDDE2	0x20FF    MOVS	R0, #-1
0xDDE4	0xB240    SXTB	R0, R0
0xDDE6	0xE022    B	L_end_readFSI
;__Lib_FAT32_STM32.c, 1028 :: 		
L___Lib_FAT32_STM32_readFSI152:
;__Lib_FAT32_STM32.c, 1030 :: 		
; pFSI start address is: 12 (R3)
0xDDE8	0xF50370F2  ADD	R0, R3, #484
0xDDEC	0xF7F5F9F0  BL	__Lib_FAT32_STM32_UI32+0
0xDDF0	0x4915    LDR	R1, [PC, #84]
0xDDF2	0x4288    CMP	R0, R1
0xDDF4	0xD006    BEQ	L___Lib_FAT32_STM32_readFSI153
; pFSI end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 1032 :: 		
0xDDF6	0x21FA    MOVS	R1, #-6
0xDDF8	0xB249    SXTB	R1, R1
0xDDFA	0x4810    LDR	R0, [PC, #64]
0xDDFC	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 1033 :: 		
0xDDFE	0x20FF    MOVS	R0, #-1
0xDE00	0xB240    SXTB	R0, R0
0xDE02	0xE014    B	L_end_readFSI
;__Lib_FAT32_STM32.c, 1034 :: 		
L___Lib_FAT32_STM32_readFSI153:
;__Lib_FAT32_STM32.c, 1036 :: 		
; pFSI start address is: 12 (R3)
0xDE04	0xF50370F4  ADD	R0, R3, #488
0xDE08	0xF7F5F9E2  BL	__Lib_FAT32_STM32_UI32+0
0xDE0C	0x490F    LDR	R1, [PC, #60]
0xDE0E	0x6008    STR	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 1037 :: 		
0xDE10	0xF50370F6  ADD	R0, R3, #492
; pFSI end address is: 12 (R3)
0xDE14	0xF7F5F9DC  BL	__Lib_FAT32_STM32_UI32+0
0xDE18	0x490D    LDR	R1, [PC, #52]
0xDE1A	0x6008    STR	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 1039 :: 		
0xDE1C	0x2000    MOVS	R0, #0
0xDE1E	0xB240    SXTB	R0, R0
0xDE20	0xE005    B	L_end_readFSI
;__Lib_FAT32_STM32.c, 1040 :: 		
L___Lib_FAT32_STM32_readFSI149:
;__Lib_FAT32_STM32.c, 1042 :: 		
0xDE22	0x21FA    MOVS	R1, #-6
0xDE24	0xB249    SXTB	R1, R1
0xDE26	0x4805    LDR	R0, [PC, #20]
0xDE28	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 1043 :: 		
0xDE2A	0x20FF    MOVS	R0, #-1
0xDE2C	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 1044 :: 		
L_end_readFSI:
0xDE2E	0xF8DDE000  LDR	LR, [SP, #0]
0xDE32	0xB001    ADD	SP, SP, #4
0xDE34	0x4770    BX	LR
0xDE36	0xBF00    NOP
0xDE38	0x27C02000  	_f32_sector+4
0xDE3C	0x27A82000  	__Lib_FAT32_STM32___error+0
0xDE40	0x2A3C2000  	__Lib_FAT32_STM32___fsi+4
0xDE44	0x52524161  	#1096897106
0xDE48	0x72726141  	#1631679090
0xDE4C	0x2A642000  	__Lib_FAT32_STM32___fsi+44
0xDE50	0x2A682000  	__Lib_FAT32_STM32___fsi+48
; end of __Lib_FAT32_STM32_readFSI
__Lib_FAT32_STM32_readBR:
;__Lib_FAT32_STM32.c, 855 :: 		
0xA5A4	0xB085    SUB	SP, SP, #20
0xA5A6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_FAT32_STM32.c, 862 :: 		
0xA5AA	0xF7F9FC7B  BL	__Lib_FAT32_STM32_readMBR+0
;__Lib_FAT32_STM32.c, 864 :: 		
; pBR start address is: 12 (R3)
0xA5AE	0x4BA6    LDR	R3, [PC, #664]
;__Lib_FAT32_STM32.c, 867 :: 		
0xA5B0	0x48A6    LDR	R0, [PC, #664]
0xA5B2	0xF9900000  LDRSB	R0, [R0, #0]
0xA5B6	0xF1B03FFF  CMP	R0, #-1
0xA5BA	0xD102    BNE	L___Lib_FAT32_STM32_readBR124
; pBR end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 869 :: 		
0xA5BC	0x20FF    MOVS	R0, #-1
0xA5BE	0xB240    SXTB	R0, R0
0xA5C0	0xE17C    B	L_end_readBR
;__Lib_FAT32_STM32.c, 870 :: 		
L___Lib_FAT32_STM32_readBR124:
;__Lib_FAT32_STM32.c, 872 :: 		
; pBR start address is: 12 (R3)
0xA5C2	0x48A2    LDR	R0, [PC, #648]
0xA5C4	0xF9901000  LDRSB	R1, [R0, #0]
0xA5C8	0xF06F0003  MVN	R0, #3
0xA5CC	0x4281    CMP	R1, R0
0xA5CE	0xD102    BNE	L___Lib_FAT32_STM32_readBR125
; pBR end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 874 :: 		
0xA5D0	0x20FF    MOVS	R0, #-1
0xA5D2	0xB240    SXTB	R0, R0
0xA5D4	0xE172    B	L_end_readBR
;__Lib_FAT32_STM32.c, 875 :: 		
L___Lib_FAT32_STM32_readBR125:
;__Lib_FAT32_STM32.c, 877 :: 		
; pBR start address is: 12 (R3)
0xA5D6	0x489D    LDR	R0, [PC, #628]
0xA5D8	0xF9900000  LDRSB	R0, [R0, #0]
0xA5DC	0x2800    CMP	R0, #0
0xA5DE	0xD139    BNE	L___Lib_FAT32_STM32_readBR126
; pBR end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 879 :: 		
0xA5E0	0x489B    LDR	R0, [PC, #620]
0xA5E2	0x7800    LDRB	R0, [R0, #0]
0xA5E4	0x280B    CMP	R0, #11
0xA5E6	0xD006    BEQ	L___Lib_FAT32_STM32_readBR127
;__Lib_FAT32_STM32.c, 881 :: 		
0xA5E8	0x21F8    MOVS	R1, #-8
0xA5EA	0xB249    SXTB	R1, R1
0xA5EC	0x4897    LDR	R0, [PC, #604]
0xA5EE	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 882 :: 		
0xA5F0	0x20FF    MOVS	R0, #-1
0xA5F2	0xB240    SXTB	R0, R0
0xA5F4	0xE162    B	L_end_readBR
;__Lib_FAT32_STM32.c, 883 :: 		
L___Lib_FAT32_STM32_readBR127:
;__Lib_FAT32_STM32.c, 887 :: 		
0xA5F6	0x4897    LDR	R0, [PC, #604]
0xA5F8	0x6800    LDR	R0, [R0, #0]
0xA5FA	0xF7F5FE29  BL	__Lib_FAT32_STM32_readSector+0
0xA5FE	0xB110    CBZ	R0, L___Lib_FAT32_STM32_readBR128
;__Lib_FAT32_STM32.c, 889 :: 		
0xA600	0x20FF    MOVS	R0, #-1
0xA602	0xB240    SXTB	R0, R0
0xA604	0xE15A    B	L_end_readBR
;__Lib_FAT32_STM32.c, 890 :: 		
L___Lib_FAT32_STM32_readBR128:
;__Lib_FAT32_STM32.c, 891 :: 		
; pBR start address is: 12 (R3)
0xA606	0x4B90    LDR	R3, [PC, #576]
;__Lib_FAT32_STM32.c, 894 :: 		
0xA608	0xF50370FF  ADD	R0, R3, #510
0xA60C	0xF7F8FD94  BL	__Lib_FAT32_STM32_UI16+0
0xA610	0xF64A2155  MOVW	R1, #43605
0xA614	0x4288    CMP	R0, R1
0xA616	0xD006    BEQ	L___Lib_FAT32_STM32_readBR129
; pBR end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 896 :: 		
0xA618	0x21FC    MOVS	R1, #-4
0xA61A	0xB249    SXTB	R1, R1
0xA61C	0x488B    LDR	R0, [PC, #556]
0xA61E	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 897 :: 		
0xA620	0x20FF    MOVS	R0, #-1
0xA622	0xB240    SXTB	R0, R0
0xA624	0xE14A    B	L_end_readBR
;__Lib_FAT32_STM32.c, 898 :: 		
L___Lib_FAT32_STM32_readBR129:
;__Lib_FAT32_STM32.c, 901 :: 		
; pBR start address is: 12 (R3)
0xA626	0x7818    LDRB	R0, [R3, #0]
0xA628	0x28E9    CMP	R0, #233
0xA62A	0xD009    BEQ	L___Lib_FAT32_STM32_readBR133
0xA62C	0x7818    LDRB	R0, [R3, #0]
0xA62E	0x28EB    CMP	R0, #235
0xA630	0xD104    BNE	L___Lib_FAT32_STM32_readBR729
0xA632	0x1C98    ADDS	R0, R3, #2
0xA634	0x7800    LDRB	R0, [R0, #0]
0xA636	0x2890    CMP	R0, #144
0xA638	0xD100    BNE	L___Lib_FAT32_STM32_readBR728
0xA63A	0xE001    B	L___Lib_FAT32_STM32_readBR133
L___Lib_FAT32_STM32_readBR729:
L___Lib_FAT32_STM32_readBR728:
0xA63C	0x2000    MOVS	R0, #0
0xA63E	0xE000    B	L___Lib_FAT32_STM32_readBR132
L___Lib_FAT32_STM32_readBR133:
0xA640	0x2001    MOVS	R0, #1
L___Lib_FAT32_STM32_readBR132:
0xA642	0xB930    CBNZ	R0, L___Lib_FAT32_STM32_readBR134
; pBR end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 903 :: 		
0xA644	0x21FB    MOVS	R1, #-5
0xA646	0xB249    SXTB	R1, R1
0xA648	0x4880    LDR	R0, [PC, #512]
0xA64A	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 904 :: 		
0xA64C	0x20FF    MOVS	R0, #-1
0xA64E	0xB240    SXTB	R0, R0
0xA650	0xE134    B	L_end_readBR
;__Lib_FAT32_STM32.c, 905 :: 		
L___Lib_FAT32_STM32_readBR134:
;__Lib_FAT32_STM32.c, 907 :: 		
; pBR start address is: 12 (R3)
0xA652	0xE016    B	L___Lib_FAT32_STM32_readBR135
L___Lib_FAT32_STM32_readBR126:
;__Lib_FAT32_STM32.c, 911 :: 		
0xA654	0x487D    LDR	R0, [PC, #500]
0xA656	0xF9901000  LDRSB	R1, [R0, #0]
0xA65A	0xF06F0004  MVN	R0, #4
0xA65E	0x4281    CMP	R1, R0
0xA660	0xD10F    BNE	L___Lib_FAT32_STM32_readBR136
;__Lib_FAT32_STM32.c, 913 :: 		
0xA662	0x2180    MOVS	R1, #128
0xA664	0x487C    LDR	R0, [PC, #496]
0xA666	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 914 :: 		
0xA668	0x2100    MOVS	R1, #0
0xA66A	0x487A    LDR	R0, [PC, #488]
0xA66C	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 915 :: 		
0xA66E	0xF2030020  ADDW	R0, R3, #32
0xA672	0xF7F8FDAD  BL	__Lib_FAT32_STM32_UI32+0
0xA676	0x4979    LDR	R1, [PC, #484]
0xA678	0x6008    STR	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 917 :: 		
0xA67A	0x2100    MOVS	R1, #0
0xA67C	0xB249    SXTB	R1, R1
0xA67E	0x4873    LDR	R0, [PC, #460]
0xA680	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 918 :: 		
L___Lib_FAT32_STM32_readBR136:
L___Lib_FAT32_STM32_readBR135:
; pBR end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 920 :: 		
; pBR start address is: 12 (R3)
0xA682	0x4872    LDR	R0, [PC, #456]
0xA684	0xF9900000  LDRSB	R0, [R0, #0]
0xA688	0x2800    CMP	R0, #0
0xA68A	0xF04080D5  BNE	L___Lib_FAT32_STM32_readBR137
;__Lib_FAT32_STM32.c, 922 :: 		
0xA68E	0xF203000B  ADDW	R0, R3, #11
0xA692	0xF7F8FD51  BL	__Lib_FAT32_STM32_UI16+0
0xA696	0x4972    LDR	R1, [PC, #456]
0xA698	0x8008    STRH	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 923 :: 		
0xA69A	0xF203000D  ADDW	R0, R3, #13
0xA69E	0xF7F8FD31  BL	__Lib_FAT32_STM32_UI8+0
0xA6A2	0x4970    LDR	R1, [PC, #448]
0xA6A4	0x7008    STRB	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 924 :: 		
0xA6A6	0xF203000E  ADDW	R0, R3, #14
0xA6AA	0xF7F8FD45  BL	__Lib_FAT32_STM32_UI16+0
0xA6AE	0x496E    LDR	R1, [PC, #440]
0xA6B0	0x9101    STR	R1, [SP, #4]
0xA6B2	0x8008    STRH	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 925 :: 		
0xA6B4	0xF2030010  ADDW	R0, R3, #16
0xA6B8	0xF7F8FD24  BL	__Lib_FAT32_STM32_UI8+0
0xA6BC	0x496B    LDR	R1, [PC, #428]
0xA6BE	0x7008    STRB	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 926 :: 		
0xA6C0	0xF2030024  ADDW	R0, R3, #36
0xA6C4	0xF7F8FD84  BL	__Lib_FAT32_STM32_UI32+0
0xA6C8	0x4969    LDR	R1, [PC, #420]
0xA6CA	0x6008    STR	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 927 :: 		
0xA6CC	0xF2030028  ADDW	R0, R3, #40
0xA6D0	0xF7F8FD32  BL	__Lib_FAT32_STM32_UI16+0
0xA6D4	0x4967    LDR	R1, [PC, #412]
0xA6D6	0x8008    STRH	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 928 :: 		
0xA6D8	0x9801    LDR	R0, [SP, #4]
0xA6DA	0x8801    LDRH	R1, [R0, #0]
0xA6DC	0x485D    LDR	R0, [PC, #372]
0xA6DE	0x6800    LDR	R0, [R0, #0]
0xA6E0	0x1841    ADDS	R1, R0, R1
0xA6E2	0x4865    LDR	R0, [PC, #404]
0xA6E4	0x9001    STR	R0, [SP, #4]
0xA6E6	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 929 :: 		
0xA6E8	0xF203002C  ADDW	R0, R3, #44
0xA6EC	0xF7F8FD70  BL	__Lib_FAT32_STM32_UI32+0
0xA6F0	0x4962    LDR	R1, [PC, #392]
0xA6F2	0x6008    STR	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 930 :: 		
0xA6F4	0xF2030030  ADDW	R0, R3, #48
; pBR end address is: 12 (R3)
0xA6F8	0xF7F8FD1E  BL	__Lib_FAT32_STM32_UI16+0
0xA6FC	0x4955    LDR	R1, [PC, #340]
0xA6FE	0x6809    LDR	R1, [R1, #0]
0xA700	0x1809    ADDS	R1, R1, R0
0xA702	0x485F    LDR	R0, [PC, #380]
0xA704	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 934 :: 		
0xA706	0x9801    LDR	R0, [SP, #4]
0xA708	0x6801    LDR	R1, [R0, #0]
0xA70A	0x485E    LDR	R0, [PC, #376]
0xA70C	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 935 :: 		
; i start address is: 12 (R3)
0xA70E	0x2300    MOVS	R3, #0
; i end address is: 12 (R3)
L___Lib_FAT32_STM32_readBR138:
; i start address is: 12 (R3)
0xA710	0x4856    LDR	R0, [PC, #344]
0xA712	0x7800    LDRB	R0, [R0, #0]
0xA714	0x4283    CMP	R3, R0
0xA716	0xD208    BCS	L___Lib_FAT32_STM32_readBR139
;__Lib_FAT32_STM32.c, 936 :: 		
0xA718	0x4855    LDR	R0, [PC, #340]
0xA71A	0x6802    LDR	R2, [R0, #0]
0xA71C	0x4959    LDR	R1, [PC, #356]
0xA71E	0x6808    LDR	R0, [R1, #0]
0xA720	0x1880    ADDS	R0, R0, R2
0xA722	0x6008    STR	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 935 :: 		
0xA724	0x1C5B    ADDS	R3, R3, #1
0xA726	0xB2DB    UXTB	R3, R3
;__Lib_FAT32_STM32.c, 936 :: 		
; i end address is: 12 (R3)
0xA728	0xE7F2    B	L___Lib_FAT32_STM32_readBR138
L___Lib_FAT32_STM32_readBR139:
;__Lib_FAT32_STM32.c, 938 :: 		
0xA72A	0x4A4D    LDR	R2, [PC, #308]
0xA72C	0x8810    LDRH	R0, [R2, #0]
0xA72E	0x0941    LSRS	R1, R0, #5
0xA730	0xB289    UXTH	R1, R1
0xA732	0x4855    LDR	R0, [PC, #340]
0xA734	0x9004    STR	R0, [SP, #16]
0xA736	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 939 :: 		
0xA738	0x4610    MOV	R0, R2
0xA73A	0x8800    LDRH	R0, [R0, #0]
0xA73C	0x0881    LSRS	R1, R0, #2
0xA73E	0xB289    UXTH	R1, R1
0xA740	0x4852    LDR	R0, [PC, #328]
0xA742	0x9003    STR	R0, [SP, #12]
0xA744	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 941 :: 		
0xA746	0x4610    MOV	R0, R2
0xA748	0x8800    LDRH	R0, [R0, #0]
0xA74A	0xF7F9FE85  BL	__Lib_FAT32_STM32_PO2+0
0xA74E	0x4950    LDR	R1, [PC, #320]
0xA750	0x9102    STR	R1, [SP, #8]
0xA752	0x7008    STRB	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 942 :: 		
0xA754	0x4843    LDR	R0, [PC, #268]
0xA756	0x7800    LDRB	R0, [R0, #0]
0xA758	0xF7F9FE7E  BL	__Lib_FAT32_STM32_PO2+0
0xA75C	0x494D    LDR	R1, [PC, #308]
0xA75E	0x9101    STR	R1, [SP, #4]
0xA760	0x7008    STRB	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 944 :: 		
0xA762	0x9804    LDR	R0, [SP, #16]
0xA764	0x6800    LDR	R0, [R0, #0]
0xA766	0xF7F9FE77  BL	__Lib_FAT32_STM32_PO2+0
0xA76A	0x494B    LDR	R1, [PC, #300]
0xA76C	0x7008    STRB	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 945 :: 		
0xA76E	0x9803    LDR	R0, [SP, #12]
0xA770	0x6800    LDR	R0, [R0, #0]
0xA772	0xF7F9FE71  BL	__Lib_FAT32_STM32_PO2+0
0xA776	0x4949    LDR	R1, [PC, #292]
0xA778	0x7008    STRB	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 947 :: 		
0xA77A	0x9801    LDR	R0, [SP, #4]
0xA77C	0x7801    LDRB	R1, [R0, #0]
0xA77E	0x9802    LDR	R0, [SP, #8]
0xA780	0x7800    LDRB	R0, [R0, #0]
0xA782	0x1841    ADDS	R1, R0, R1
0xA784	0xB209    SXTH	R1, R1
0xA786	0x4846    LDR	R0, [PC, #280]
0xA788	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 948 :: 		
0xA78A	0xB2C9    UXTB	R1, R1
0xA78C	0xF04F0001  MOV	R0, #1
0xA790	0xFA00F101  LSL	R1, R0, R1
0xA794	0x4843    LDR	R0, [PC, #268]
0xA796	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 951 :: 		
0xA798	0x2020    MOVS	R0, #32
0xA79A	0xF7F9FE5D  BL	__Lib_FAT32_STM32_PO2+0
0xA79E	0x4940    LDR	R1, [PC, #256]
0xA7A0	0x7809    LDRB	R1, [R1, #0]
0xA7A2	0x1A09    SUB	R1, R1, R0
0xA7A4	0xB209    SXTH	R1, R1
0xA7A6	0xF04F0001  MOV	R0, #1
0xA7AA	0xFA00F101  LSL	R1, R0, R1
0xA7AE	0x483E    LDR	R0, [PC, #248]
0xA7B0	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 952 :: 		
0xA7B2	0x4608    MOV	R0, R1
0xA7B4	0xF7F9FE50  BL	__Lib_FAT32_STM32_PO2+0
0xA7B8	0x493C    LDR	R1, [PC, #240]
0xA7BA	0x7008    STRB	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 954 :: 		
0xA7BC	0x482F    LDR	R0, [PC, #188]
0xA7BE	0x6801    LDR	R1, [R0, #0]
0xA7C0	0x483B    LDR	R0, [PC, #236]
0xA7C2	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 955 :: 		
0xA7C4	0x2100    MOVS	R1, #0
0xA7C6	0x483B    LDR	R0, [PC, #236]
0xA7C8	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 958 :: 		
0xA7CA	0x4822    LDR	R0, [PC, #136]
0xA7CC	0x6801    LDR	R1, [R0, #0]
0xA7CE	0x482D    LDR	R0, [PC, #180]
0xA7D0	0x6800    LDR	R0, [R0, #0]
0xA7D2	0x1A41    SUB	R1, R0, R1
0xA7D4	0x4821    LDR	R0, [PC, #132]
0xA7D6	0x6800    LDR	R0, [R0, #0]
0xA7D8	0x1A41    SUB	R1, R0, R1
;__Lib_FAT32_STM32.c, 959 :: 		
0xA7DA	0x9801    LDR	R0, [SP, #4]
0xA7DC	0x7800    LDRB	R0, [R0, #0]
0xA7DE	0xFA21F000  LSR	R0, R1, R0
0xA7E2	0x1C81    ADDS	R1, R0, #2
0xA7E4	0x4834    LDR	R0, [PC, #208]
0xA7E6	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 962 :: 		
0xA7E8	0x4819    LDR	R0, [PC, #100]
0xA7EA	0x7800    LDRB	R0, [R0, #0]
0xA7EC	0xB9B0    CBNZ	R0, L___Lib_FAT32_STM32_readBR141
;__Lib_FAT32_STM32.c, 964 :: 		
0xA7EE	0x4832    LDR	R0, [PC, #200]
0xA7F0	0x6801    LDR	R1, [R0, #0]
0xA7F2	0xF64F70F7  MOVW	R0, #65527
0xA7F6	0x4281    CMP	R1, R0
0xA7F8	0xD303    BCC	L___Lib_FAT32_STM32_readBR142
;__Lib_FAT32_STM32.c, 965 :: 		
0xA7FA	0x210B    MOVS	R1, #11
0xA7FC	0x4814    LDR	R0, [PC, #80]
0xA7FE	0x7001    STRB	R1, [R0, #0]
0xA800	0xE00C    B	L___Lib_FAT32_STM32_readBR143
L___Lib_FAT32_STM32_readBR142:
;__Lib_FAT32_STM32.c, 966 :: 		
0xA802	0x482D    LDR	R0, [PC, #180]
0xA804	0x6801    LDR	R1, [R0, #0]
0xA806	0xF64070F7  MOVW	R0, #4087
0xA80A	0x4281    CMP	R1, R0
0xA80C	0xD303    BCC	L___Lib_FAT32_STM32_readBR144
;__Lib_FAT32_STM32.c, 967 :: 		
0xA80E	0x2106    MOVS	R1, #6
0xA810	0x480F    LDR	R0, [PC, #60]
0xA812	0x7001    STRB	R1, [R0, #0]
0xA814	0xE002    B	L___Lib_FAT32_STM32_readBR145
L___Lib_FAT32_STM32_readBR144:
;__Lib_FAT32_STM32.c, 969 :: 		
0xA816	0x2101    MOVS	R1, #1
0xA818	0x480D    LDR	R0, [PC, #52]
0xA81A	0x7001    STRB	R1, [R0, #0]
L___Lib_FAT32_STM32_readBR145:
L___Lib_FAT32_STM32_readBR143:
;__Lib_FAT32_STM32.c, 970 :: 		
L___Lib_FAT32_STM32_readBR141:
;__Lib_FAT32_STM32.c, 972 :: 		
0xA81C	0x480C    LDR	R0, [PC, #48]
0xA81E	0x7800    LDRB	R0, [R0, #0]
0xA820	0x280B    CMP	R0, #11
0xA822	0xD006    BEQ	L___Lib_FAT32_STM32_readBR146
;__Lib_FAT32_STM32.c, 974 :: 		
0xA824	0x21F8    MOVS	R1, #-8
0xA826	0xB249    SXTB	R1, R1
0xA828	0x4808    LDR	R0, [PC, #32]
0xA82A	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 975 :: 		
0xA82C	0x20FF    MOVS	R0, #-1
0xA82E	0xB240    SXTB	R0, R0
0xA830	0xE044    B	L_end_readBR
;__Lib_FAT32_STM32.c, 976 :: 		
L___Lib_FAT32_STM32_readBR146:
;__Lib_FAT32_STM32.c, 978 :: 		
0xA832	0x2000    MOVS	R0, #0
0xA834	0xB240    SXTB	R0, R0
0xA836	0xE041    B	L_end_readBR
;__Lib_FAT32_STM32.c, 979 :: 		
L___Lib_FAT32_STM32_readBR137:
;__Lib_FAT32_STM32.c, 981 :: 		
0xA838	0x21FB    MOVS	R1, #-5
0xA83A	0xB249    SXTB	R1, R1
0xA83C	0x4803    LDR	R0, [PC, #12]
0xA83E	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 982 :: 		
0xA840	0x20FF    MOVS	R0, #-1
0xA842	0xB240    SXTB	R0, R0
0xA844	0xF000B83A  B	#116
0xA848	0x27C02000  	_f32_sector+4
0xA84C	0x27A82000  	__Lib_FAT32_STM32___error+0
0xA850	0x2A392000  	__Lib_FAT32_STM32___fsi+1
0xA854	0x2A3C2000  	__Lib_FAT32_STM32___fsi+4
0xA858	0x2A382000  	__Lib_FAT32_STM32___fsi+0
0xA85C	0x2A402000  	__Lib_FAT32_STM32___fsi+8
0xA860	0x2A442000  	__Lib_FAT32_STM32___fsi+12
0xA864	0x2A462000  	__Lib_FAT32_STM32___fsi+14
0xA868	0x2A482000  	__Lib_FAT32_STM32___fsi+16
0xA86C	0x2A4A2000  	__Lib_FAT32_STM32___fsi+18
0xA870	0x2A4C2000  	__Lib_FAT32_STM32___fsi+20
0xA874	0x2A502000  	__Lib_FAT32_STM32___fsi+24
0xA878	0x2A542000  	__Lib_FAT32_STM32___fsi+28
0xA87C	0x2A582000  	__Lib_FAT32_STM32___fsi+32
0xA880	0x2A602000  	__Lib_FAT32_STM32___fsi+40
0xA884	0x2A5C2000  	__Lib_FAT32_STM32___fsi+36
0xA888	0x2A8C2000  	__Lib_FAT32_STM32_fDirEntsPSect+0
0xA88C	0x2A842000  	__Lib_FAT32_STM32_fFatEntsPSect+0
0xA890	0x2A822000  	__Lib_FAT32_STM32_fBytesPSectPO2+0
0xA894	0x2A812000  	__Lib_FAT32_STM32_fSectPClustPO2+0
0xA898	0x2A832000  	__Lib_FAT32_STM32_fDirEntsPSectPO2+0
0xA89C	0x2A802000  	__Lib_FAT32_STM32_fFatEntsPSectPO2+0
0xA8A0	0x27BA2000  	__Lib_FAT32_STM32_fBytesPClustPO2+0
0xA8A4	0x2A882000  	__Lib_FAT32_STM32_fBytesPClust+0
0xA8A8	0x2A7C2000  	__Lib_FAT32_STM32_fDirEntsPClust+0
0xA8AC	0x2A902000  	__Lib_FAT32_STM32_fDirEntsPClustPO2+0
0xA8B0	0x2A742000  	__Lib_FAT32_STM32___currentDir+0
0xA8B4	0x2A782000  	__Lib_FAT32_STM32___currentEntry+0
0xA8B8	0x2A702000  	__Lib_FAT32_STM32_fMaxCluster+0
;__Lib_FAT32_STM32.c, 983 :: 		
L_end_readBR:
0xA8BC	0xF8DDE000  LDR	LR, [SP, #0]
0xA8C0	0xB005    ADD	SP, SP, #20
0xA8C2	0x4770    BX	LR
; end of __Lib_FAT32_STM32_readBR
__Lib_FAT32_STM32_readMBR:
;__Lib_FAT32_STM32.c, 780 :: 		
0x3EA4	0xB082    SUB	SP, SP, #8
0x3EA6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_FAT32_STM32.c, 786 :: 		
0x3EAA	0x2000    MOVS	R0, #0
0x3EAC	0xF7FCF9D0  BL	__Lib_FAT32_STM32_readSector+0
0x3EB0	0xB110    CBZ	R0, L___Lib_FAT32_STM32_readMBR110
;__Lib_FAT32_STM32.c, 788 :: 		
0x3EB2	0x20FF    MOVS	R0, #-1
0x3EB4	0xB240    SXTB	R0, R0
0x3EB6	0xE069    B	L_end_readMBR
;__Lib_FAT32_STM32.c, 789 :: 		
L___Lib_FAT32_STM32_readMBR110:
;__Lib_FAT32_STM32.c, 791 :: 		
; pMBR start address is: 12 (R3)
0x3EB8	0x4B36    LDR	R3, [PC, #216]
;__Lib_FAT32_STM32.c, 792 :: 		
; pBR start address is: 16 (R4)
0x3EBA	0x4C36    LDR	R4, [PC, #216]
;__Lib_FAT32_STM32.c, 795 :: 		
0x3EBC	0xF50370FF  ADD	R0, R3, #510
0x3EC0	0xF7FFF93A  BL	__Lib_FAT32_STM32_UI16+0
0x3EC4	0xF64A2155  MOVW	R1, #43605
0x3EC8	0x4288    CMP	R0, R1
0x3ECA	0xD006    BEQ	L___Lib_FAT32_STM32_readMBR111
; pBR end address is: 16 (R4)
; pMBR end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 797 :: 		
0x3ECC	0x21FC    MOVS	R1, #-4
0x3ECE	0xB249    SXTB	R1, R1
0x3ED0	0x4831    LDR	R0, [PC, #196]
0x3ED2	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 798 :: 		
0x3ED4	0x20FF    MOVS	R0, #-1
0x3ED6	0xB240    SXTB	R0, R0
0x3ED8	0xE058    B	L_end_readMBR
;__Lib_FAT32_STM32.c, 799 :: 		
L___Lib_FAT32_STM32_readMBR111:
;__Lib_FAT32_STM32.c, 801 :: 		
; pMBR start address is: 12 (R3)
; pBR start address is: 16 (R4)
0x3EDA	0x7820    LDRB	R0, [R4, #0]
0x3EDC	0x28E9    CMP	R0, #233
0x3EDE	0xD008    BEQ	L___Lib_FAT32_STM32_readMBR726
0x3EE0	0x7820    LDRB	R0, [R4, #0]
0x3EE2	0x28EB    CMP	R0, #235
0x3EE4	0xD104    BNE	L___Lib_FAT32_STM32_readMBR725
0x3EE6	0x1CA0    ADDS	R0, R4, #2
; pBR end address is: 16 (R4)
0x3EE8	0x7800    LDRB	R0, [R0, #0]
0x3EEA	0x2890    CMP	R0, #144
0x3EEC	0xD100    BNE	L___Lib_FAT32_STM32_readMBR724
; pMBR end address is: 12 (R3)
0x3EEE	0xE000    B	L___Lib_FAT32_STM32_readMBR722
L___Lib_FAT32_STM32_readMBR725:
; pMBR start address is: 12 (R3)
L___Lib_FAT32_STM32_readMBR724:
0x3EF0	0xE006    B	L___Lib_FAT32_STM32_readMBR116
; pMBR end address is: 12 (R3)
L___Lib_FAT32_STM32_readMBR722:
L___Lib_FAT32_STM32_readMBR726:
;__Lib_FAT32_STM32.c, 803 :: 		
0x3EF2	0x21FB    MOVS	R1, #-5
0x3EF4	0xB249    SXTB	R1, R1
0x3EF6	0x4828    LDR	R0, [PC, #160]
0x3EF8	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 804 :: 		
0x3EFA	0x20FF    MOVS	R0, #-1
0x3EFC	0xB240    SXTB	R0, R0
0x3EFE	0xE045    B	L_end_readMBR
;__Lib_FAT32_STM32.c, 805 :: 		
L___Lib_FAT32_STM32_readMBR116:
;__Lib_FAT32_STM32.c, 812 :: 		
; i start address is: 16 (R4)
; pMBR start address is: 12 (R3)
0x3F00	0x2400    MOVS	R4, #0
; i end address is: 16 (R4)
L___Lib_FAT32_STM32_readMBR117:
; i start address is: 16 (R4)
; pMBR start address is: 12 (R3)
; pMBR end address is: 12 (R3)
0x3F02	0x2C01    CMP	R4, #1
0x3F04	0xD240    BCS	L___Lib_FAT32_STM32_readMBR118
; pMBR end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 814 :: 		
; pMBR start address is: 12 (R3)
0x3F06	0x200C    MOVS	R0, #12
0x3F08	0xFB00F104  MUL	R1, R0, R4
0x3F0C	0x4823    LDR	R0, [PC, #140]
0x3F0E	0x1840    ADDS	R0, R0, R1
0x3F10	0x9001    STR	R0, [SP, #4]
0x3F12	0xF50371DF  ADD	R1, R3, #446
0x3F16	0x0120    LSLS	R0, R4, #4
0x3F18	0x1808    ADDS	R0, R1, R0
0x3F1A	0xF7FFF8F3  BL	__Lib_FAT32_STM32_UI8+0
0x3F1E	0x9901    LDR	R1, [SP, #4]
0x3F20	0x7008    STRB	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 815 :: 		
0x3F22	0x200C    MOVS	R0, #12
0x3F24	0xFB00F104  MUL	R1, R0, R4
0x3F28	0x481C    LDR	R0, [PC, #112]
0x3F2A	0x1840    ADDS	R0, R0, R1
0x3F2C	0x1C40    ADDS	R0, R0, #1
0x3F2E	0x9001    STR	R0, [SP, #4]
0x3F30	0xF50371DF  ADD	R1, R3, #446
0x3F34	0x0120    LSLS	R0, R4, #4
0x3F36	0x1808    ADDS	R0, R1, R0
0x3F38	0x1D00    ADDS	R0, R0, #4
0x3F3A	0xF7FFF8E3  BL	__Lib_FAT32_STM32_UI8+0
0x3F3E	0x9901    LDR	R1, [SP, #4]
0x3F40	0x7008    STRB	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 816 :: 		
0x3F42	0x200C    MOVS	R0, #12
0x3F44	0xFB00F104  MUL	R1, R0, R4
0x3F48	0x4814    LDR	R0, [PC, #80]
0x3F4A	0x1840    ADDS	R0, R0, R1
0x3F4C	0x1D00    ADDS	R0, R0, #4
0x3F4E	0x9001    STR	R0, [SP, #4]
0x3F50	0xF50371DF  ADD	R1, R3, #446
0x3F54	0x0120    LSLS	R0, R4, #4
0x3F56	0x1808    ADDS	R0, R1, R0
0x3F58	0x3008    ADDS	R0, #8
0x3F5A	0xF7FFF939  BL	__Lib_FAT32_STM32_UI32+0
0x3F5E	0x9901    LDR	R1, [SP, #4]
0x3F60	0x6008    STR	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 817 :: 		
0x3F62	0x200C    MOVS	R0, #12
0x3F64	0xFB00F104  MUL	R1, R0, R4
0x3F68	0x480C    LDR	R0, [PC, #48]
0x3F6A	0x1840    ADDS	R0, R0, R1
0x3F6C	0x3008    ADDS	R0, #8
0x3F6E	0x9001    STR	R0, [SP, #4]
0x3F70	0xF50371DF  ADD	R1, R3, #446
0x3F74	0x0120    LSLS	R0, R4, #4
0x3F76	0x1808    ADDS	R0, R1, R0
0x3F78	0x300C    ADDS	R0, #12
0x3F7A	0xF7FFF929  BL	__Lib_FAT32_STM32_UI32+0
0x3F7E	0x9901    LDR	R1, [SP, #4]
0x3F80	0x6008    STR	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 812 :: 		
0x3F82	0x1C64    ADDS	R4, R4, #1
0x3F84	0xB2E4    UXTB	R4, R4
;__Lib_FAT32_STM32.c, 818 :: 		
; pMBR end address is: 12 (R3)
; i end address is: 16 (R4)
0x3F86	0xE7BC    B	L___Lib_FAT32_STM32_readMBR117
L___Lib_FAT32_STM32_readMBR118:
;__Lib_FAT32_STM32.c, 820 :: 		
0x3F88	0x2000    MOVS	R0, #0
0x3F8A	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 821 :: 		
L_end_readMBR:
0x3F8C	0xF8DDE000  LDR	LR, [SP, #0]
0x3F90	0xB002    ADD	SP, SP, #8
0x3F92	0x4770    BX	LR
0x3F94	0x27C02000  	_f32_sector+4
0x3F98	0x27A82000  	__Lib_FAT32_STM32___error+0
0x3F9C	0x2A382000  	__Lib_FAT32_STM32___fsi+0
; end of __Lib_FAT32_STM32_readMBR
__Lib_FAT32_STM32_UI16:
;__Lib_FAT32_STM32.c, 95 :: 		
0x3138	0xB081    SUB	SP, SP, #4
;__Lib_FAT32_STM32.c, 99 :: 		
0x313A	0x1C41    ADDS	R1, R0, #1
0x313C	0x7809    LDRB	R1, [R1, #0]
; result start address is: 4 (R1)
0x313E	0x020A    LSLS	R2, R1, #8
0x3140	0xB292    UXTH	R2, R2
; result end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 100 :: 		
0x3142	0x7801    LDRB	R1, [R0, #0]
0x3144	0x1851    ADDS	R1, R2, R1
;__Lib_FAT32_STM32.c, 102 :: 		
0x3146	0xB288    UXTH	R0, R1
;__Lib_FAT32_STM32.c, 103 :: 		
L_end_UI16:
0x3148	0xB001    ADD	SP, SP, #4
0x314A	0x4770    BX	LR
; end of __Lib_FAT32_STM32_UI16
__Lib_FAT32_STM32_UI8:
;__Lib_FAT32_STM32.c, 86 :: 		
0x3104	0xB081    SUB	SP, SP, #4
;__Lib_FAT32_STM32.c, 90 :: 		
0x3106	0x7801    LDRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 92 :: 		
0x3108	0xB2C8    UXTB	R0, R1
;__Lib_FAT32_STM32.c, 93 :: 		
L_end_UI8:
0x310A	0xB001    ADD	SP, SP, #4
0x310C	0x4770    BX	LR
; end of __Lib_FAT32_STM32_UI8
__Lib_FAT32_STM32_UI32:
;__Lib_FAT32_STM32.c, 105 :: 		
0x31D0	0xB081    SUB	SP, SP, #4
;__Lib_FAT32_STM32.c, 109 :: 		
0x31D2	0x1CC1    ADDS	R1, R0, #3
0x31D4	0x7809    LDRB	R1, [R1, #0]
; result start address is: 4 (R1)
0x31D6	0x020A    LSLS	R2, R1, #8
; result end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 110 :: 		
0x31D8	0x1C81    ADDS	R1, R0, #2
0x31DA	0x7809    LDRB	R1, [R1, #0]
0x31DC	0x1851    ADDS	R1, R2, R1
0x31DE	0x020A    LSLS	R2, R1, #8
;__Lib_FAT32_STM32.c, 111 :: 		
0x31E0	0x1C41    ADDS	R1, R0, #1
0x31E2	0x7809    LDRB	R1, [R1, #0]
0x31E4	0x1851    ADDS	R1, R2, R1
0x31E6	0x020A    LSLS	R2, R1, #8
;__Lib_FAT32_STM32.c, 112 :: 		
0x31E8	0x7801    LDRB	R1, [R0, #0]
0x31EA	0x1851    ADDS	R1, R2, R1
;__Lib_FAT32_STM32.c, 114 :: 		
0x31EC	0x4608    MOV	R0, R1
;__Lib_FAT32_STM32.c, 115 :: 		
L_end_UI32:
0x31EE	0xB001    ADD	SP, SP, #4
0x31F0	0x4770    BX	LR
; end of __Lib_FAT32_STM32_UI32
__Lib_FAT32_STM32_PO2:
;__Lib_FAT32_STM32.c, 823 :: 		
0x4458	0xB081    SUB	SP, SP, #4
;__Lib_FAT32_STM32.c, 827 :: 		
; i start address is: 12 (R3)
0x445A	0x2301    MOVS	R3, #1
;__Lib_FAT32_STM32.c, 828 :: 		
; po2 start address is: 8 (R2)
0x445C	0x2200    MOVS	R2, #0
; i end address is: 12 (R3)
; po2 end address is: 8 (R2)
L___Lib_FAT32_STM32_PO2120:
; po2 start address is: 8 (R2)
; i start address is: 12 (R3)
0x445E	0x2A20    CMP	R2, #32
0x4460	0xD209    BCS	L___Lib_FAT32_STM32_PO2121
;__Lib_FAT32_STM32.c, 830 :: 		
0x4462	0xEA400103  ORR	R1, R0, R3, LSL #0
0x4466	0x4299    CMP	R1, R3
0x4468	0xD101    BNE	L___Lib_FAT32_STM32_PO2123
; i end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 831 :: 		
0x446A	0xB250    SXTB	R0, R2
; po2 end address is: 8 (R2)
0x446C	0xE005    B	L_end_PO2
L___Lib_FAT32_STM32_PO2123:
;__Lib_FAT32_STM32.c, 832 :: 		
; po2 start address is: 8 (R2)
; i start address is: 12 (R3)
0x446E	0x005B    LSLS	R3, R3, #1
;__Lib_FAT32_STM32.c, 828 :: 		
0x4470	0x1C52    ADDS	R2, R2, #1
0x4472	0xB2D2    UXTB	R2, R2
;__Lib_FAT32_STM32.c, 833 :: 		
; i end address is: 12 (R3)
; po2 end address is: 8 (R2)
0x4474	0xE7F3    B	L___Lib_FAT32_STM32_PO2120
L___Lib_FAT32_STM32_PO2121:
;__Lib_FAT32_STM32.c, 834 :: 		
0x4476	0x20FF    MOVS	R0, #-1
0x4478	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 835 :: 		
L_end_PO2:
0x447A	0xB001    ADD	SP, SP, #4
0x447C	0x4770    BX	LR
; end of __Lib_FAT32_STM32_PO2
_FAT32_Open:
;__Lib_FAT32_STM32.c, 2635 :: 		
0xEC00	0xB098    SUB	SP, SP, #96
0xEC02	0xF8CDE000  STR	LR, [SP, #0]
0xEC06	0x9016    STR	R0, [SP, #88]
0xEC08	0xF88D105C  STRB	R1, [SP, #92]
;__Lib_FAT32_STM32.c, 2648 :: 		
0xEC0C	0xAA03    ADD	R2, SP, #12
0xEC0E	0x4611    MOV	R1, R2
0xEC10	0x9816    LDR	R0, [SP, #88]
0xEC12	0xF7FEFC5D  BL	__Lib_FAT32_STM32_FAT32_Status+0
0xEC16	0x2801    CMP	R0, #1
0xEC18	0xD038    BEQ	L_FAT32_Open424
;__Lib_FAT32_STM32.c, 2650 :: 		
0xEC1A	0xF89D205C  LDRB	R2, [SP, #92]
0xEC1E	0xF0020206  AND	R2, R2, #6
0xEC22	0xB2D2    UXTB	R2, R2
0xEC24	0xB35A    CBZ	R2, L_FAT32_Open425
;__Lib_FAT32_STM32.c, 2653 :: 		
0xEC26	0xAA0B    ADD	R2, SP, #44
0xEC28	0x2100    MOVS	R1, #0
0xEC2A	0x4610    MOV	R0, R2
0xEC2C	0x2220    MOVS	R2, #32
0xEC2E	0xB212    SXTH	R2, R2
0xEC30	0xF7FAFE94  BL	__Lib_FAT32_STM32_alt_memset+0
;__Lib_FAT32_STM32.c, 2655 :: 		
0xEC34	0xAA13    ADD	R2, SP, #76
0xEC36	0x4611    MOV	R1, R2
0xEC38	0x9816    LDR	R0, [SP, #88]
0xEC3A	0xF7F8FD77  BL	__Lib_FAT32_STM32_fileNameToName83+0
;__Lib_FAT32_STM32.c, 2656 :: 		
0xEC3E	0xAB13    ADD	R3, SP, #76
0xEC40	0xAA0B    ADD	R2, SP, #44
0xEC42	0x4619    MOV	R1, R3
0xEC44	0x4610    MOV	R0, R2
0xEC46	0xF7FEFCD9  BL	__Lib_FAT32_STM32_DE_setNameExt+0
;__Lib_FAT32_STM32.c, 2657 :: 		
0xEC4A	0xAA0B    ADD	R2, SP, #44
0xEC4C	0x2120    MOVS	R1, #32
0xEC4E	0x4610    MOV	R0, R2
0xEC50	0xF7FEFB6E  BL	__Lib_FAT32_STM32_DE_setAttrib+0
;__Lib_FAT32_STM32.c, 2670 :: 		
0xEC54	0xAA0B    ADD	R2, SP, #44
0xEC56	0xF04F0100  MOV	R1, #0
0xEC5A	0x4610    MOV	R0, R2
0xEC5C	0xF7FEFB70  BL	__Lib_FAT32_STM32_FAT32_MakeNode+0
0xEC60	0xB110    CBZ	R0, L_FAT32_Open426
;__Lib_FAT32_STM32.c, 2672 :: 		
0xEC62	0x20FF    MOVS	R0, #-1
0xEC64	0xB240    SXTB	R0, R0
0xEC66	0xE099    B	L_end_FAT32_Open
;__Lib_FAT32_STM32.c, 2673 :: 		
L_FAT32_Open426:
;__Lib_FAT32_STM32.c, 2675 :: 		
0xEC68	0xAA03    ADD	R2, SP, #12
0xEC6A	0x4611    MOV	R1, R2
0xEC6C	0x9816    LDR	R0, [SP, #88]
0xEC6E	0xF7FEFC2F  BL	__Lib_FAT32_STM32_FAT32_Status+0
0xEC72	0x2801    CMP	R0, #1
0xEC74	0xD002    BEQ	L_FAT32_Open427
;__Lib_FAT32_STM32.c, 2677 :: 		
0xEC76	0x20FF    MOVS	R0, #-1
0xEC78	0xB240    SXTB	R0, R0
0xEC7A	0xE08F    B	L_end_FAT32_Open
;__Lib_FAT32_STM32.c, 2678 :: 		
L_FAT32_Open427:
;__Lib_FAT32_STM32.c, 2679 :: 		
0xEC7C	0xE006    B	L_FAT32_Open428
L_FAT32_Open425:
;__Lib_FAT32_STM32.c, 2682 :: 		
0xEC7E	0x23DF    MOVS	R3, #-33
0xEC80	0xB25B    SXTB	R3, R3
0xEC82	0x4A48    LDR	R2, [PC, #288]
0xEC84	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 2683 :: 		
0xEC86	0x20FF    MOVS	R0, #-1
0xEC88	0xB240    SXTB	R0, R0
0xEC8A	0xE087    B	L_end_FAT32_Open
;__Lib_FAT32_STM32.c, 2684 :: 		
L_FAT32_Open428:
;__Lib_FAT32_STM32.c, 2685 :: 		
L_FAT32_Open424:
;__Lib_FAT32_STM32.c, 2688 :: 		
0xEC8C	0xF89D2019  LDRB	R2, [SP, #25]
0xEC90	0xF00202D8  AND	R2, R2, #216
0xEC94	0xB2D2    UXTB	R2, R2
0xEC96	0xB132    CBZ	R2, L_FAT32_Open429
;__Lib_FAT32_STM32.c, 2690 :: 		
0xEC98	0x23E1    MOVS	R3, #-31
0xEC9A	0xB25B    SXTB	R3, R3
0xEC9C	0x4A41    LDR	R2, [PC, #260]
0xEC9E	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 2691 :: 		
0xECA0	0x20FF    MOVS	R0, #-1
0xECA2	0xB240    SXTB	R0, R0
0xECA4	0xE07A    B	L_end_FAT32_Open
;__Lib_FAT32_STM32.c, 2692 :: 		
L_FAT32_Open429:
;__Lib_FAT32_STM32.c, 2694 :: 		
0xECA6	0xF89D205C  LDRB	R2, [SP, #92]
0xECAA	0xF0020206  AND	R2, R2, #6
0xECAE	0xB2D2    UXTB	R2, R2
0xECB0	0xB162    CBZ	R2, L_FAT32_Open430
;__Lib_FAT32_STM32.c, 2695 :: 		
0xECB2	0xF89D2019  LDRB	R2, [SP, #25]
0xECB6	0xF0020201  AND	R2, R2, #1
0xECBA	0xB2D2    UXTB	R2, R2
0xECBC	0xB132    CBZ	R2, L_FAT32_Open431
;__Lib_FAT32_STM32.c, 2697 :: 		
0xECBE	0x23D7    MOVS	R3, #-41
0xECC0	0xB25B    SXTB	R3, R3
0xECC2	0x4A38    LDR	R2, [PC, #224]
0xECC4	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 2698 :: 		
0xECC6	0x20FF    MOVS	R0, #-1
0xECC8	0xB240    SXTB	R0, R0
0xECCA	0xE067    B	L_end_FAT32_Open
;__Lib_FAT32_STM32.c, 2699 :: 		
L_FAT32_Open431:
L_FAT32_Open430:
;__Lib_FAT32_STM32.c, 2702 :: 		
0xECCC	0x2000    MOVS	R0, #0
L_FAT32_Open432:
0xECCE	0x2804    CMP	R0, _FAT32_MAX_FILES
0xECD0	0xD25E    BCS	L_FAT32_Open433
;__Lib_FAT32_STM32.c, 2704 :: 		
0xECD2	0x221C    MOVS	R2, #28
0xECD4	0xFB02F300  MUL	R3, R2, R0
0xECD8	0x4A33    LDR	R2, [PC, #204]
0xECDA	0x18D2    ADDS	R2, R2, R3
; pf start address is: 4 (R1)
0xECDC	0x4611    MOV	R1, R2
;__Lib_FAT32_STM32.c, 2706 :: 		
0xECDE	0x3218    ADDS	R2, #24
0xECE0	0x7812    LDRB	R2, [R2, #0]
0xECE2	0x2A00    CMP	R2, #0
0xECE4	0xD150    BNE	L_FAT32_Open435
;__Lib_FAT32_STM32.c, 2708 :: 		
0xECE6	0x221C    MOVS	R2, #28
0xECE8	0xFB02F300  MUL	R3, R2, R0
0xECEC	0x4A2E    LDR	R2, [PC, #184]
0xECEE	0x18D2    ADDS	R2, R2, R3
0xECF0	0x9101    STR	R1, [SP, #4]
0xECF2	0xF88D0008  STRB	R0, [SP, #8]
0xECF6	0x2100    MOVS	R1, #0
0xECF8	0x4610    MOV	R0, R2
0xECFA	0x221C    MOVS	R2, #28
0xECFC	0xB212    SXTH	R2, R2
0xECFE	0xF7FAFE2D  BL	__Lib_FAT32_STM32_alt_memset+0
0xED02	0xF89D0008  LDRB	R0, [SP, #8]
0xED06	0x9901    LDR	R1, [SP, #4]
;__Lib_FAT32_STM32.c, 2710 :: 		
0xED08	0x9A08    LDR	R2, [SP, #32]
0xED0A	0x600A    STR	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 2711 :: 		
0xED0C	0x1D0B    ADDS	R3, R1, #4
0xED0E	0x9A08    LDR	R2, [SP, #32]
0xED10	0x601A    STR	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 2712 :: 		
0xED12	0xF2010308  ADDW	R3, R1, #8
0xED16	0x9A09    LDR	R2, [SP, #36]
0xED18	0x601A    STR	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 2713 :: 		
0xED1A	0xF201030C  ADDW	R3, R1, #12
0xED1E	0x9A0A    LDR	R2, [SP, #40]
0xED20	0x601A    STR	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 2714 :: 		
0xED22	0xF2010314  ADDW	R3, R1, #20
0xED26	0x9A07    LDR	R2, [SP, #28]
0xED28	0x601A    STR	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 2715 :: 		
0xED2A	0xF2010319  ADDW	R3, R1, #25
0xED2E	0xF89D2019  LDRB	R2, [SP, #25]
0xED32	0x701A    STRB	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 2716 :: 		
0xED34	0xF2010318  ADDW	R3, R1, #24
0xED38	0xF89D205C  LDRB	R2, [SP, #92]
0xED3C	0x701A    STRB	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 2742 :: 		
0xED3E	0xF2010218  ADDW	R2, R1, #24
0xED42	0x7812    LDRB	R2, [R2, #0]
0xED44	0xF0020203  AND	R2, R2, #3
0xED48	0xB2D2    UXTB	R2, R2
0xED4A	0xB14A    CBZ	R2, L_FAT32_Open436
;__Lib_FAT32_STM32.c, 2744 :: 		
0xED4C	0x9101    STR	R1, [SP, #4]
0xED4E	0xF88D0008  STRB	R0, [SP, #8]
0xED52	0x2100    MOVS	R1, #0
0xED54	0xB240    SXTB	R0, R0
0xED56	0xF7F1FF11  BL	_FAT32_Seek+0
0xED5A	0xF89D0008  LDRB	R0, [SP, #8]
0xED5E	0x9901    LDR	R1, [SP, #4]
;__Lib_FAT32_STM32.c, 2745 :: 		
L_FAT32_Open436:
;__Lib_FAT32_STM32.c, 2747 :: 		
0xED60	0xF2010218  ADDW	R2, R1, #24
0xED64	0x7812    LDRB	R2, [R2, #0]
0xED66	0xF0020204  AND	R2, R2, #4
0xED6A	0xB2D2    UXTB	R2, R2
0xED6C	0xB152    CBZ	R2, L_FAT32_Open437
;__Lib_FAT32_STM32.c, 2749 :: 		
0xED6E	0xF2010214  ADDW	R2, R1, #20
; pf end address is: 4 (R1)
0xED72	0x6812    LDR	R2, [R2, #0]
0xED74	0xF88D0004  STRB	R0, [SP, #4]
0xED78	0x4611    MOV	R1, R2
0xED7A	0xB240    SXTB	R0, R0
0xED7C	0xF7F1FEFE  BL	_FAT32_Seek+0
0xED80	0xF89D0004  LDRB	R0, [SP, #4]
;__Lib_FAT32_STM32.c, 2750 :: 		
L_FAT32_Open437:
;__Lib_FAT32_STM32.c, 2752 :: 		
0xED84	0xB240    SXTB	R0, R0
0xED86	0xE009    B	L_end_FAT32_Open
;__Lib_FAT32_STM32.c, 2753 :: 		
L_FAT32_Open435:
;__Lib_FAT32_STM32.c, 2702 :: 		
0xED88	0x1C42    ADDS	R2, R0, #1
; i start address is: 4 (R1)
0xED8A	0xB2D1    UXTB	R1, R2
;__Lib_FAT32_STM32.c, 2754 :: 		
0xED8C	0xB2C8    UXTB	R0, R1
; i end address is: 4 (R1)
0xED8E	0xE79E    B	L_FAT32_Open432
L_FAT32_Open433:
;__Lib_FAT32_STM32.c, 2757 :: 		
0xED90	0x23DD    MOVS	R3, #-35
0xED92	0xB25B    SXTB	R3, R3
0xED94	0x4A03    LDR	R2, [PC, #12]
0xED96	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 2758 :: 		
0xED98	0x20FF    MOVS	R0, #-1
0xED9A	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 2759 :: 		
L_end_FAT32_Open:
0xED9C	0xF8DDE000  LDR	LR, [SP, #0]
0xEDA0	0xB018    ADD	SP, SP, #96
0xEDA2	0x4770    BX	LR
0xEDA4	0x27A82000  	__Lib_FAT32_STM32___error+0
0xEDA8	0x29C02000  	_fat32_fdesc+0
; end of _FAT32_Open
__Lib_FAT32_STM32_FAT32_Status:
;__Lib_FAT32_STM32.c, 1534 :: 		
0xD4D0	0xB088    SUB	SP, SP, #32
0xD4D2	0xF8CDE000  STR	LR, [SP, #0]
0xD4D6	0x9107    STR	R1, [SP, #28]
;__Lib_FAT32_STM32.c, 1547 :: 		
0xD4D8	0xAA01    ADD	R2, SP, #4
0xD4DA	0x4611    MOV	R1, R2
0xD4DC	0xF7FAF926  BL	__Lib_FAT32_STM32_fileNameToName83+0
0xD4E0	0xB130    CBZ	R0, L___Lib_FAT32_STM32_FAT32_Status241
;__Lib_FAT32_STM32.c, 1549 :: 		
0xD4E2	0x23E2    MOVS	R3, #-30
0xD4E4	0xB25B    SXTB	R3, R3
0xD4E6	0x4A3E    LDR	R2, [PC, #248]
0xD4E8	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 1550 :: 		
0xD4EA	0x20FF    MOVS	R0, #-1
0xD4EC	0xB240    SXTB	R0, R0
0xD4EE	0xE073    B	L_end_FAT32_Status
;__Lib_FAT32_STM32.c, 1551 :: 		
L___Lib_FAT32_STM32_FAT32_Status241:
;__Lib_FAT32_STM32.c, 1555 :: 		
0xD4F0	0x4A3C    LDR	R2, [PC, #240]
0xD4F2	0x6812    LDR	R2, [R2, #0]
0xD4F4	0x9204    STR	R2, [SP, #16]
;__Lib_FAT32_STM32.c, 1560 :: 		
L___Lib_FAT32_STM32_FAT32_Status242:
;__Lib_FAT32_STM32.c, 1563 :: 		
0xD4F6	0x4A3C    LDR	R2, [PC, #240]
0xD4F8	0x6813    LDR	R3, [R2, #0]
0xD4FA	0x9A04    LDR	R2, [SP, #16]
0xD4FC	0x429A    CMP	R2, R3
0xD4FE	0xD305    BCC	L___Lib_FAT32_STM32_FAT32_Status753
0xD500	0x4A3A    LDR	R2, [PC, #232]
0xD502	0x6813    LDR	R3, [R2, #0]
0xD504	0x9A04    LDR	R2, [SP, #16]
0xD506	0x429A    CMP	R2, R3
0xD508	0xD200    BCS	L___Lib_FAT32_STM32_FAT32_Status752
0xD50A	0xE006    B	L___Lib_FAT32_STM32_FAT32_Status246
L___Lib_FAT32_STM32_FAT32_Status753:
L___Lib_FAT32_STM32_FAT32_Status752:
;__Lib_FAT32_STM32.c, 1565 :: 		
0xD50C	0x23F4    MOVS	R3, #-12
0xD50E	0xB25B    SXTB	R3, R3
0xD510	0x4A33    LDR	R2, [PC, #204]
0xD512	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 1566 :: 		
0xD514	0x20FF    MOVS	R0, #-1
0xD516	0xB240    SXTB	R0, R0
0xD518	0xE05E    B	L_end_FAT32_Status
;__Lib_FAT32_STM32.c, 1567 :: 		
L___Lib_FAT32_STM32_FAT32_Status246:
;__Lib_FAT32_STM32.c, 1569 :: 		
0xD51A	0x4A35    LDR	R2, [PC, #212]
0xD51C	0x9206    STR	R2, [SP, #24]
;__Lib_FAT32_STM32.c, 1571 :: 		
0xD51E	0x9804    LDR	R0, [SP, #16]
0xD520	0xF7F2FFF8  BL	_FAT32_ClustToSect+0
;__Lib_FAT32_STM32.c, 1573 :: 		
0xD524	0xF7F3F846  BL	__Lib_FAT32_STM32_readMStart+0
0xD528	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT32_Status247
;__Lib_FAT32_STM32.c, 1575 :: 		
0xD52A	0x20FF    MOVS	R0, #-1
0xD52C	0xB240    SXTB	R0, R0
0xD52E	0xE053    B	L_end_FAT32_Status
;__Lib_FAT32_STM32.c, 1576 :: 		
L___Lib_FAT32_STM32_FAT32_Status247:
;__Lib_FAT32_STM32.c, 1584 :: 		
0xD530	0x2200    MOVS	R2, #0
0xD532	0x9205    STR	R2, [SP, #20]
L___Lib_FAT32_STM32_FAT32_Status248:
0xD534	0x4A2F    LDR	R2, [PC, #188]
0xD536	0x6813    LDR	R3, [R2, #0]
0xD538	0x9A05    LDR	R2, [SP, #20]
0xD53A	0x429A    CMP	R2, R3
0xD53C	0xD23A    BCS	L___Lib_FAT32_STM32_FAT32_Status249
;__Lib_FAT32_STM32.c, 1587 :: 		
0xD53E	0x4A2E    LDR	R2, [PC, #184]
0xD540	0x6813    LDR	R3, [R2, #0]
0xD542	0x9A06    LDR	R2, [SP, #24]
0xD544	0x429A    CMP	R2, R3
0xD546	0xD107    BNE	L___Lib_FAT32_STM32_FAT32_Status251
;__Lib_FAT32_STM32.c, 1589 :: 		
0xD548	0x4A29    LDR	R2, [PC, #164]
0xD54A	0x9206    STR	R2, [SP, #24]
;__Lib_FAT32_STM32.c, 1590 :: 		
0xD54C	0xF7F2FFF6  BL	__Lib_FAT32_STM32_readMSector+0
0xD550	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT32_Status252
;__Lib_FAT32_STM32.c, 1592 :: 		
0xD552	0x20FF    MOVS	R0, #-1
0xD554	0xB240    SXTB	R0, R0
0xD556	0xE03F    B	L_end_FAT32_Status
;__Lib_FAT32_STM32.c, 1593 :: 		
L___Lib_FAT32_STM32_FAT32_Status252:
;__Lib_FAT32_STM32.c, 1594 :: 		
L___Lib_FAT32_STM32_FAT32_Status251:
;__Lib_FAT32_STM32.c, 1597 :: 		
0xD558	0xAA01    ADD	R2, SP, #4
0xD55A	0x4611    MOV	R1, R2
0xD55C	0x220B    MOVS	R2, #11
0xD55E	0xB212    SXTH	R2, R2
0xD560	0x9806    LDR	R0, [SP, #24]
0xD562	0xF7FCFA0B  BL	__Lib_FAT32_STM32_alt_memcmp+0
0xD566	0xB9F0    CBNZ	R0, L___Lib_FAT32_STM32_FAT32_Status253
;__Lib_FAT32_STM32.c, 1599 :: 		
0xD568	0xF7F2FE2E  BL	__Lib_FAT32_STM32_readMStop+0
0xD56C	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT32_Status254
;__Lib_FAT32_STM32.c, 1601 :: 		
0xD56E	0x20FF    MOVS	R0, #-1
0xD570	0xB240    SXTB	R0, R0
0xD572	0xE031    B	L_end_FAT32_Status
;__Lib_FAT32_STM32.c, 1602 :: 		
L___Lib_FAT32_STM32_FAT32_Status254:
;__Lib_FAT32_STM32.c, 1605 :: 		
0xD574	0x9A07    LDR	R2, [SP, #28]
0xD576	0xB16A    CBZ	R2, L___Lib_FAT32_STM32_FAT32_Status255
;__Lib_FAT32_STM32.c, 1607 :: 		
0xD578	0x9907    LDR	R1, [SP, #28]
0xD57A	0x9806    LDR	R0, [SP, #24]
0xD57C	0xF7FDFA16  BL	__Lib_FAT32_STM32_DE_getDirEnt+0
;__Lib_FAT32_STM32.c, 1608 :: 		
0xD580	0x9A07    LDR	R2, [SP, #28]
0xD582	0xF2020318  ADDW	R3, R2, #24
0xD586	0x9A04    LDR	R2, [SP, #16]
0xD588	0x601A    STR	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 1609 :: 		
0xD58A	0x9A07    LDR	R2, [SP, #28]
0xD58C	0xF202031C  ADDW	R3, R2, #28
0xD590	0x9A05    LDR	R2, [SP, #20]
0xD592	0x601A    STR	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 1610 :: 		
L___Lib_FAT32_STM32_FAT32_Status255:
;__Lib_FAT32_STM32.c, 1613 :: 		
0xD594	0x9806    LDR	R0, [SP, #24]
0xD596	0xF7FDFAB5  BL	__Lib_FAT32_STM32_DE_getCTime+0
;__Lib_FAT32_STM32.c, 1614 :: 		
0xD59A	0x9806    LDR	R0, [SP, #24]
0xD59C	0xF7FDFB0C  BL	__Lib_FAT32_STM32_DE_getMTime+0
;__Lib_FAT32_STM32.c, 1616 :: 		
0xD5A0	0x2001    MOVS	R0, #1
0xD5A2	0xB240    SXTB	R0, R0
0xD5A4	0xE018    B	L_end_FAT32_Status
;__Lib_FAT32_STM32.c, 1617 :: 		
L___Lib_FAT32_STM32_FAT32_Status253:
;__Lib_FAT32_STM32.c, 1618 :: 		
0xD5A6	0x9A06    LDR	R2, [SP, #24]
0xD5A8	0x3220    ADDS	R2, #32
0xD5AA	0x9206    STR	R2, [SP, #24]
;__Lib_FAT32_STM32.c, 1584 :: 		
0xD5AC	0x9A05    LDR	R2, [SP, #20]
0xD5AE	0x1C52    ADDS	R2, R2, #1
0xD5B0	0x9205    STR	R2, [SP, #20]
;__Lib_FAT32_STM32.c, 1619 :: 		
0xD5B2	0xE7BF    B	L___Lib_FAT32_STM32_FAT32_Status248
L___Lib_FAT32_STM32_FAT32_Status249:
;__Lib_FAT32_STM32.c, 1622 :: 		
0xD5B4	0xF7F2FE08  BL	__Lib_FAT32_STM32_readMStop+0
0xD5B8	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT32_Status256
;__Lib_FAT32_STM32.c, 1624 :: 		
0xD5BA	0x20FF    MOVS	R0, #-1
0xD5BC	0xB240    SXTB	R0, R0
0xD5BE	0xE00B    B	L_end_FAT32_Status
;__Lib_FAT32_STM32.c, 1625 :: 		
L___Lib_FAT32_STM32_FAT32_Status256:
;__Lib_FAT32_STM32.c, 1627 :: 		
0xD5C0	0x9804    LDR	R0, [SP, #16]
0xD5C2	0xF7F2FED9  BL	__Lib_FAT32_STM32_FAT_getEntry+0
0xD5C6	0x9004    STR	R0, [SP, #16]
;__Lib_FAT32_STM32.c, 1628 :: 		
0xD5C8	0xF06F4270  MVN	R2, #-268435456
0xD5CC	0x4290    CMP	R0, R2
0xD5CE	0xD102    BNE	L___Lib_FAT32_STM32_FAT32_Status257
;__Lib_FAT32_STM32.c, 1631 :: 		
0xD5D0	0x2000    MOVS	R0, #0
0xD5D2	0xB240    SXTB	R0, R0
0xD5D4	0xE000    B	L_end_FAT32_Status
;__Lib_FAT32_STM32.c, 1632 :: 		
L___Lib_FAT32_STM32_FAT32_Status257:
;__Lib_FAT32_STM32.c, 1633 :: 		
0xD5D6	0xE78E    B	L___Lib_FAT32_STM32_FAT32_Status242
;__Lib_FAT32_STM32.c, 1636 :: 		
L_end_FAT32_Status:
0xD5D8	0xF8DDE000  LDR	LR, [SP, #0]
0xD5DC	0xB008    ADD	SP, SP, #32
0xD5DE	0x4770    BX	LR
0xD5E0	0x27A82000  	__Lib_FAT32_STM32___error+0
0xD5E4	0x2A742000  	__Lib_FAT32_STM32___currentDir+0
0xD5E8	0x2A582000  	__Lib_FAT32_STM32___fsi+32
0xD5EC	0x2A702000  	__Lib_FAT32_STM32_fMaxCluster+0
0xD5F0	0x27C02000  	_f32_sector+4
0xD5F4	0x2A7C2000  	__Lib_FAT32_STM32_fDirEntsPClust+0
0xD5F8	0x2A6C2000  	__Lib_FAT32_STM32_fSectBuffEnd+0
; end of __Lib_FAT32_STM32_FAT32_Status
__Lib_FAT32_STM32_fileNameToName83:
;__Lib_FAT32_STM32.c, 494 :: 		
; n83 start address is: 4 (R1)
0x772C	0xB083    SUB	SP, SP, #12
0x772E	0xF8CDE000  STR	LR, [SP, #0]
; n83 end address is: 4 (R1)
; n83 start address is: 4 (R1)
;__Lib_FAT32_STM32.c, 499 :: 		
0x7732	0x7802    LDRB	R2, [R0, #0]
0x7734	0xB932    CBNZ	R2, L___Lib_FAT32_STM32_fileNameToName8376
; n83 end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 501 :: 		
0x7736	0x23E2    MOVS	R3, #-30
0x7738	0xB25B    SXTB	R3, R3
0x773A	0x4A54    LDR	R2, [PC, #336]
0x773C	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 502 :: 		
0x773E	0x20FF    MOVS	R0, #-1
0x7740	0xB240    SXTB	R0, R0
0x7742	0xE09F    B	L_end_fileNameToName83
;__Lib_FAT32_STM32.c, 503 :: 		
L___Lib_FAT32_STM32_fileNameToName8376:
;__Lib_FAT32_STM32.c, 507 :: 		
; i start address is: 12 (R3)
; n83 start address is: 4 (R1)
0x7744	0x2300    MOVS	R3, #0
; n83 end address is: 4 (R1)
; i end address is: 12 (R3)
0x7746	0x4607    MOV	R7, R0
0x7748	0x460E    MOV	R6, R1
L___Lib_FAT32_STM32_fileNameToName8377:
; i start address is: 12 (R3)
; n83 start address is: 24 (R6)
; fn start address is: 28 (R7)
0x774A	0x2B0D    CMP	R3, #13
0x774C	0xD225    BCS	L___Lib_FAT32_STM32_fileNameToName8378
;__Lib_FAT32_STM32.c, 509 :: 		
0x774E	0x18FA    ADDS	R2, R7, R3
0x7750	0x7812    LDRB	R2, [R2, #0]
0x7752	0xB902    CBNZ	R2, L___Lib_FAT32_STM32_fileNameToName8380
; i end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 511 :: 		
0x7754	0xE021    B	L___Lib_FAT32_STM32_fileNameToName8378
;__Lib_FAT32_STM32.c, 512 :: 		
L___Lib_FAT32_STM32_fileNameToName8380:
;__Lib_FAT32_STM32.c, 514 :: 		
; i start address is: 12 (R3)
; isOK start address is: 16 (R4)
0x7756	0x2400    MOVS	R4, #0
;__Lib_FAT32_STM32.c, 515 :: 		
0x7758	0x18FA    ADDS	R2, R7, R3
0x775A	0x7812    LDRB	R2, [R2, #0]
0x775C	0xB2D0    UXTB	R0, R2
0x775E	0xF7FCFD8F  BL	__Lib_FAT32_STM32_alt_isalnum+0
0x7762	0x2801    CMP	R0, #1
0x7764	0xD101    BNE	L___Lib_FAT32_STM32_fileNameToName83718
; isOK end address is: 16 (R4)
;__Lib_FAT32_STM32.c, 516 :: 		
0x7766	0x2001    MOVS	R0, #1
0x7768	0xE000    B	L___Lib_FAT32_STM32_fileNameToName8381
L___Lib_FAT32_STM32_fileNameToName83718:
;__Lib_FAT32_STM32.c, 515 :: 		
0x776A	0xB2E0    UXTB	R0, R4
;__Lib_FAT32_STM32.c, 516 :: 		
L___Lib_FAT32_STM32_fileNameToName8381:
;__Lib_FAT32_STM32.c, 517 :: 		
0x776C	0x18FA    ADDS	R2, R7, R3
0x776E	0x7812    LDRB	R2, [R2, #0]
0x7770	0x2A2E    CMP	R2, #46
0x7772	0xD101    BNE	L___Lib_FAT32_STM32_fileNameToName83719
;__Lib_FAT32_STM32.c, 518 :: 		
0x7774	0x2001    MOVS	R0, #1
0x7776	0xE7FF    B	L___Lib_FAT32_STM32_fileNameToName8382
L___Lib_FAT32_STM32_fileNameToName83719:
;__Lib_FAT32_STM32.c, 517 :: 		
;__Lib_FAT32_STM32.c, 518 :: 		
L___Lib_FAT32_STM32_fileNameToName8382:
;__Lib_FAT32_STM32.c, 519 :: 		
0x7778	0x18FA    ADDS	R2, R7, R3
0x777A	0x7812    LDRB	R2, [R2, #0]
0x777C	0x2A5F    CMP	R2, #95
0x777E	0xD101    BNE	L___Lib_FAT32_STM32_fileNameToName83720
;__Lib_FAT32_STM32.c, 520 :: 		
0x7780	0x2001    MOVS	R0, #1
0x7782	0xE7FF    B	L___Lib_FAT32_STM32_fileNameToName8383
L___Lib_FAT32_STM32_fileNameToName83720:
;__Lib_FAT32_STM32.c, 519 :: 		
;__Lib_FAT32_STM32.c, 520 :: 		
L___Lib_FAT32_STM32_fileNameToName8383:
;__Lib_FAT32_STM32.c, 522 :: 		
0x7784	0xB930    CBNZ	R0, L___Lib_FAT32_STM32_fileNameToName8384
; n83 end address is: 24 (R6)
; fn end address is: 28 (R7)
; i end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 524 :: 		
0x7786	0x23E2    MOVS	R3, #-30
0x7788	0xB25B    SXTB	R3, R3
0x778A	0x4A40    LDR	R2, [PC, #256]
0x778C	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 525 :: 		
0x778E	0x20FF    MOVS	R0, #-1
0x7790	0xB240    SXTB	R0, R0
0x7792	0xE077    B	L_end_fileNameToName83
;__Lib_FAT32_STM32.c, 526 :: 		
L___Lib_FAT32_STM32_fileNameToName8384:
;__Lib_FAT32_STM32.c, 507 :: 		
; i start address is: 12 (R3)
; fn start address is: 28 (R7)
; n83 start address is: 24 (R6)
0x7794	0x1C5B    ADDS	R3, R3, #1
0x7796	0xB2DB    UXTB	R3, R3
;__Lib_FAT32_STM32.c, 527 :: 		
; i end address is: 12 (R3)
0x7798	0xE7D7    B	L___Lib_FAT32_STM32_fileNameToName8377
L___Lib_FAT32_STM32_fileNameToName8378:
;__Lib_FAT32_STM32.c, 529 :: 		
0x779A	0x220B    MOVS	R2, #11
0x779C	0xB212    SXTH	R2, R2
0x779E	0x2120    MOVS	R1, #32
0x77A0	0x4630    MOV	R0, R6
0x77A2	0xF002F8DB  BL	__Lib_FAT32_STM32_alt_memset+0
;__Lib_FAT32_STM32.c, 532 :: 		
0x77A6	0x783A    LDRB	R2, [R7, #0]
0x77A8	0x2A2E    CMP	R2, #46
0x77AA	0xD10E    BNE	L___Lib_FAT32_STM32_fileNameToName83715
0x77AC	0x1C7A    ADDS	R2, R7, #1
0x77AE	0x7812    LDRB	R2, [R2, #0]
0x77B0	0x2A2E    CMP	R2, #46
0x77B2	0xD10A    BNE	L___Lib_FAT32_STM32_fileNameToName83714
0x77B4	0x1CBA    ADDS	R2, R7, #2
0x77B6	0x7812    LDRB	R2, [R2, #0]
0x77B8	0xB93A    CBNZ	R2, L___Lib_FAT32_STM32_fileNameToName83713
; fn end address is: 28 (R7)
L___Lib_FAT32_STM32_fileNameToName83712:
;__Lib_FAT32_STM32.c, 534 :: 		
0x77BA	0x222E    MOVS	R2, #46
0x77BC	0x7032    STRB	R2, [R6, #0]
;__Lib_FAT32_STM32.c, 535 :: 		
0x77BE	0x1C73    ADDS	R3, R6, #1
; n83 end address is: 24 (R6)
0x77C0	0x222E    MOVS	R2, #46
0x77C2	0x701A    STRB	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 536 :: 		
0x77C4	0x2000    MOVS	R0, #0
0x77C6	0xB240    SXTB	R0, R0
0x77C8	0xE05C    B	L_end_fileNameToName83
;__Lib_FAT32_STM32.c, 532 :: 		
L___Lib_FAT32_STM32_fileNameToName83715:
; fn start address is: 28 (R7)
; n83 start address is: 24 (R6)
L___Lib_FAT32_STM32_fileNameToName83714:
L___Lib_FAT32_STM32_fileNameToName83713:
;__Lib_FAT32_STM32.c, 539 :: 		
0x77CA	0x783A    LDRB	R2, [R7, #0]
0x77CC	0x2A2E    CMP	R2, #46
0x77CE	0xD107    BNE	L___Lib_FAT32_STM32_fileNameToName83717
0x77D0	0x1C7A    ADDS	R2, R7, #1
0x77D2	0x7812    LDRB	R2, [R2, #0]
0x77D4	0xB922    CBNZ	R2, L___Lib_FAT32_STM32_fileNameToName83716
; fn end address is: 28 (R7)
L___Lib_FAT32_STM32_fileNameToName83711:
;__Lib_FAT32_STM32.c, 541 :: 		
0x77D6	0x222E    MOVS	R2, #46
0x77D8	0x7032    STRB	R2, [R6, #0]
; n83 end address is: 24 (R6)
;__Lib_FAT32_STM32.c, 542 :: 		
0x77DA	0x2000    MOVS	R0, #0
0x77DC	0xB240    SXTB	R0, R0
0x77DE	0xE051    B	L_end_fileNameToName83
;__Lib_FAT32_STM32.c, 539 :: 		
L___Lib_FAT32_STM32_fileNameToName83717:
; fn start address is: 28 (R7)
; n83 start address is: 24 (R6)
L___Lib_FAT32_STM32_fileNameToName83716:
;__Lib_FAT32_STM32.c, 546 :: 		
0x77E0	0x783A    LDRB	R2, [R7, #0]
0x77E2	0x2A2E    CMP	R2, #46
0x77E4	0xD106    BNE	L___Lib_FAT32_STM32_fileNameToName8391
; n83 end address is: 24 (R6)
; fn end address is: 28 (R7)
;__Lib_FAT32_STM32.c, 548 :: 		
0x77E6	0x23E2    MOVS	R3, #-30
0x77E8	0xB25B    SXTB	R3, R3
0x77EA	0x4A28    LDR	R2, [PC, #160]
0x77EC	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 549 :: 		
0x77EE	0x20FF    MOVS	R0, #-1
0x77F0	0xB240    SXTB	R0, R0
0x77F2	0xE047    B	L_end_fileNameToName83
;__Lib_FAT32_STM32.c, 550 :: 		
L___Lib_FAT32_STM32_fileNameToName8391:
;__Lib_FAT32_STM32.c, 552 :: 		
; fn start address is: 28 (R7)
; n83 start address is: 24 (R6)
0x77F4	0x2000    MOVS	R0, #0
;__Lib_FAT32_STM32.c, 553 :: 		
; i start address is: 20 (R5)
0x77F6	0x2500    MOVS	R5, #0
; n83 end address is: 24 (R6)
; fn end address is: 28 (R7)
; i end address is: 20 (R5)
0x77F8	0x4634    MOV	R4, R6
0x77FA	0xB2C6    UXTB	R6, R0
0x77FC	0x463B    MOV	R3, R7
L___Lib_FAT32_STM32_fileNameToName8392:
; i start address is: 20 (R5)
; j start address is: 24 (R6)
; fn start address is: 12 (R3)
; n83 start address is: 16 (R4)
0x77FE	0x2D08    CMP	R5, #8
0x7800	0xD216    BCS	L___Lib_FAT32_STM32_fileNameToName8393
;__Lib_FAT32_STM32.c, 555 :: 		
0x7802	0x199A    ADDS	R2, R3, R6
0x7804	0x7812    LDRB	R2, [R2, #0]
0x7806	0xB902    CBNZ	R2, L___Lib_FAT32_STM32_fileNameToName8395
; i end address is: 20 (R5)
;__Lib_FAT32_STM32.c, 557 :: 		
0x7808	0xE012    B	L___Lib_FAT32_STM32_fileNameToName8393
;__Lib_FAT32_STM32.c, 558 :: 		
L___Lib_FAT32_STM32_fileNameToName8395:
;__Lib_FAT32_STM32.c, 560 :: 		
; i start address is: 20 (R5)
0x780A	0x199A    ADDS	R2, R3, R6
0x780C	0x7812    LDRB	R2, [R2, #0]
0x780E	0x2A2E    CMP	R2, #46
0x7810	0xD100    BNE	L___Lib_FAT32_STM32_fileNameToName8396
; i end address is: 20 (R5)
;__Lib_FAT32_STM32.c, 562 :: 		
0x7812	0xE00D    B	L___Lib_FAT32_STM32_fileNameToName8393
;__Lib_FAT32_STM32.c, 563 :: 		
L___Lib_FAT32_STM32_fileNameToName8396:
;__Lib_FAT32_STM32.c, 565 :: 		
; i start address is: 20 (R5)
0x7814	0x1962    ADDS	R2, R4, R5
0x7816	0x9202    STR	R2, [SP, #8]
0x7818	0x199A    ADDS	R2, R3, R6
0x781A	0x7812    LDRB	R2, [R2, #0]
0x781C	0xB2D0    UXTB	R0, R2
0x781E	0xF7FCF983  BL	__Lib_FAT32_STM32_alt_toupper+0
0x7822	0x9A02    LDR	R2, [SP, #8]
0x7824	0x7010    STRB	R0, [R2, #0]
;__Lib_FAT32_STM32.c, 566 :: 		
0x7826	0x1C76    ADDS	R6, R6, #1
0x7828	0xB2F6    UXTB	R6, R6
;__Lib_FAT32_STM32.c, 553 :: 		
0x782A	0x1C6D    ADDS	R5, R5, #1
0x782C	0xB2ED    UXTB	R5, R5
;__Lib_FAT32_STM32.c, 567 :: 		
; i end address is: 20 (R5)
0x782E	0xE7E6    B	L___Lib_FAT32_STM32_fileNameToName8392
L___Lib_FAT32_STM32_fileNameToName8393:
;__Lib_FAT32_STM32.c, 569 :: 		
0x7830	0x199A    ADDS	R2, R3, R6
0x7832	0x7812    LDRB	R2, [R2, #0]
0x7834	0xB912    CBNZ	R2, L___Lib_FAT32_STM32_fileNameToName8397
; fn end address is: 12 (R3)
; n83 end address is: 16 (R4)
; j end address is: 24 (R6)
;__Lib_FAT32_STM32.c, 571 :: 		
0x7836	0x2000    MOVS	R0, #0
0x7838	0xB240    SXTB	R0, R0
0x783A	0xE023    B	L_end_fileNameToName83
;__Lib_FAT32_STM32.c, 572 :: 		
L___Lib_FAT32_STM32_fileNameToName8397:
;__Lib_FAT32_STM32.c, 574 :: 		
; j start address is: 24 (R6)
; n83 start address is: 16 (R4)
; fn start address is: 12 (R3)
0x783C	0x199A    ADDS	R2, R3, R6
0x783E	0x7812    LDRB	R2, [R2, #0]
0x7840	0x2A2E    CMP	R2, #46
0x7842	0xD103    BNE	L___Lib_FAT32_STM32_fileNameToName83721
;__Lib_FAT32_STM32.c, 576 :: 		
0x7844	0x1C72    ADDS	R2, R6, #1
; j end address is: 24 (R6)
0x7846	0xB2D0    UXTB	R0, R2
0x7848	0xB2C6    UXTB	R6, R0
;__Lib_FAT32_STM32.c, 577 :: 		
0x784A	0xE7FF    B	L___Lib_FAT32_STM32_fileNameToName8398
L___Lib_FAT32_STM32_fileNameToName83721:
;__Lib_FAT32_STM32.c, 574 :: 		
;__Lib_FAT32_STM32.c, 577 :: 		
L___Lib_FAT32_STM32_fileNameToName8398:
;__Lib_FAT32_STM32.c, 579 :: 		
; j start address is: 24 (R6)
; i start address is: 20 (R5)
0x784C	0x2508    MOVS	R5, #8
; fn end address is: 12 (R3)
; n83 end address is: 16 (R4)
; j end address is: 24 (R6)
; i end address is: 20 (R5)
0x784E	0x9401    STR	R4, [SP, #4]
0x7850	0x461C    MOV	R4, R3
0x7852	0x9B01    LDR	R3, [SP, #4]
L___Lib_FAT32_STM32_fileNameToName8399:
; i start address is: 20 (R5)
; fn start address is: 16 (R4)
; n83 start address is: 12 (R3)
; j start address is: 24 (R6)
; n83 start address is: 12 (R3)
; n83 end address is: 12 (R3)
; fn start address is: 16 (R4)
; fn end address is: 16 (R4)
0x7854	0x2D0B    CMP	R5, #11
0x7856	0xD213    BCS	L___Lib_FAT32_STM32_fileNameToName83100
; n83 end address is: 12 (R3)
; fn end address is: 16 (R4)
;__Lib_FAT32_STM32.c, 581 :: 		
; fn start address is: 16 (R4)
; n83 start address is: 12 (R3)
0x7858	0x19A2    ADDS	R2, R4, R6
0x785A	0x7812    LDRB	R2, [R2, #0]
0x785C	0xB912    CBNZ	R2, L___Lib_FAT32_STM32_fileNameToName83102
; n83 end address is: 12 (R3)
; fn end address is: 16 (R4)
; j end address is: 24 (R6)
; i end address is: 20 (R5)
;__Lib_FAT32_STM32.c, 583 :: 		
0x785E	0x2000    MOVS	R0, #0
0x7860	0xB240    SXTB	R0, R0
0x7862	0xE00F    B	L_end_fileNameToName83
;__Lib_FAT32_STM32.c, 584 :: 		
L___Lib_FAT32_STM32_fileNameToName83102:
;__Lib_FAT32_STM32.c, 585 :: 		
; i start address is: 20 (R5)
; j start address is: 24 (R6)
; fn start address is: 16 (R4)
; n83 start address is: 12 (R3)
0x7864	0x195A    ADDS	R2, R3, R5
0x7866	0x9202    STR	R2, [SP, #8]
0x7868	0x19A2    ADDS	R2, R4, R6
0x786A	0x7812    LDRB	R2, [R2, #0]
0x786C	0xB2D0    UXTB	R0, R2
0x786E	0xF7FCF95B  BL	__Lib_FAT32_STM32_alt_toupper+0
0x7872	0x9A02    LDR	R2, [SP, #8]
0x7874	0x7010    STRB	R0, [R2, #0]
;__Lib_FAT32_STM32.c, 586 :: 		
0x7876	0x1C76    ADDS	R6, R6, #1
0x7878	0xB2F6    UXTB	R6, R6
;__Lib_FAT32_STM32.c, 579 :: 		
0x787A	0x1C6D    ADDS	R5, R5, #1
0x787C	0xB2ED    UXTB	R5, R5
;__Lib_FAT32_STM32.c, 587 :: 		
; n83 end address is: 12 (R3)
; fn end address is: 16 (R4)
; j end address is: 24 (R6)
; i end address is: 20 (R5)
0x787E	0xE7E9    B	L___Lib_FAT32_STM32_fileNameToName8399
L___Lib_FAT32_STM32_fileNameToName83100:
;__Lib_FAT32_STM32.c, 589 :: 		
0x7880	0x2000    MOVS	R0, #0
0x7882	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 590 :: 		
L_end_fileNameToName83:
0x7884	0xF8DDE000  LDR	LR, [SP, #0]
0x7888	0xB003    ADD	SP, SP, #12
0x788A	0x4770    BX	LR
0x788C	0x27A82000  	__Lib_FAT32_STM32___error+0
; end of __Lib_FAT32_STM32_fileNameToName83
__Lib_FAT32_STM32_alt_isalnum:
;__Lib_FAT32_STM32.c, 231 :: 		
0x4280	0xB081    SUB	SP, SP, #4
0x4282	0xF8CDE000  STR	LR, [SP, #0]
0x4286	0xB2C2    UXTB	R2, R0
; character start address is: 8 (R2)
;__Lib_FAT32_STM32.c, 232 :: 		
0x4288	0xB2D0    UXTB	R0, R2
0x428A	0xF7FEFECB  BL	__Lib_FAT32_STM32_alt_isdigit+0
;__Lib_FAT32_STM32.c, 233 :: 		
0x428E	0xB948    CBNZ	R0, L___Lib_FAT32_STM32_alt_isalnum27
0x4290	0xB2D0    UXTB	R0, R2
0x4292	0xF7FEFF11  BL	__Lib_FAT32_STM32_alt_islower+0
0x4296	0xB928    CBNZ	R0, L___Lib_FAT32_STM32_alt_isalnum27
;__Lib_FAT32_STM32.c, 234 :: 		
0x4298	0xB2D0    UXTB	R0, R2
; character end address is: 8 (R2)
0x429A	0xF7FEFF01  BL	__Lib_FAT32_STM32_alt_isupper+0
0x429E	0xB908    CBNZ	R0, L___Lib_FAT32_STM32_alt_isalnum27
0x42A0	0x2100    MOVS	R1, #0
0x42A2	0xE000    B	L___Lib_FAT32_STM32_alt_isalnum26
L___Lib_FAT32_STM32_alt_isalnum27:
0x42A4	0x2101    MOVS	R1, #1
L___Lib_FAT32_STM32_alt_isalnum26:
0x42A6	0xB2C8    UXTB	R0, R1
;__Lib_FAT32_STM32.c, 235 :: 		
L_end_alt_isalnum:
0x42A8	0xF8DDE000  LDR	LR, [SP, #0]
0x42AC	0xB001    ADD	SP, SP, #4
0x42AE	0x4770    BX	LR
; end of __Lib_FAT32_STM32_alt_isalnum
__Lib_FAT32_STM32_alt_isdigit:
;__Lib_FAT32_STM32.c, 226 :: 		
0x3024	0xB081    SUB	SP, SP, #4
;__Lib_FAT32_STM32.c, 227 :: 		
0x3026	0x2839    CMP	R0, #57
0x3028	0xD803    BHI	L___Lib_FAT32_STM32_alt_isdigit25
0x302A	0x2830    CMP	R0, #48
0x302C	0xD301    BCC	L___Lib_FAT32_STM32_alt_isdigit25
0x302E	0x2101    MOVS	R1, #1
0x3030	0xE000    B	L___Lib_FAT32_STM32_alt_isdigit24
L___Lib_FAT32_STM32_alt_isdigit25:
0x3032	0x2100    MOVS	R1, #0
L___Lib_FAT32_STM32_alt_isdigit24:
0x3034	0xB2C8    UXTB	R0, R1
;__Lib_FAT32_STM32.c, 228 :: 		
L_end_alt_isdigit:
0x3036	0xB001    ADD	SP, SP, #4
0x3038	0x4770    BX	LR
; end of __Lib_FAT32_STM32_alt_isdigit
__Lib_FAT32_STM32_alt_islower:
;__Lib_FAT32_STM32.c, 216 :: 		
0x30B8	0xB081    SUB	SP, SP, #4
;__Lib_FAT32_STM32.c, 217 :: 		
0x30BA	0x287A    CMP	R0, #122
0x30BC	0xD803    BHI	L___Lib_FAT32_STM32_alt_islower21
0x30BE	0x2861    CMP	R0, #97
0x30C0	0xD301    BCC	L___Lib_FAT32_STM32_alt_islower21
0x30C2	0x2101    MOVS	R1, #1
0x30C4	0xE000    B	L___Lib_FAT32_STM32_alt_islower20
L___Lib_FAT32_STM32_alt_islower21:
0x30C6	0x2100    MOVS	R1, #0
L___Lib_FAT32_STM32_alt_islower20:
0x30C8	0xB2C8    UXTB	R0, R1
;__Lib_FAT32_STM32.c, 218 :: 		
L_end_alt_islower:
0x30CA	0xB001    ADD	SP, SP, #4
0x30CC	0x4770    BX	LR
; end of __Lib_FAT32_STM32_alt_islower
__Lib_FAT32_STM32_alt_isupper:
;__Lib_FAT32_STM32.c, 221 :: 		
0x30A0	0xB081    SUB	SP, SP, #4
;__Lib_FAT32_STM32.c, 222 :: 		
0x30A2	0x285A    CMP	R0, #90
0x30A4	0xD803    BHI	L___Lib_FAT32_STM32_alt_isupper23
0x30A6	0x2841    CMP	R0, #65
0x30A8	0xD301    BCC	L___Lib_FAT32_STM32_alt_isupper23
0x30AA	0x2101    MOVS	R1, #1
0x30AC	0xE000    B	L___Lib_FAT32_STM32_alt_isupper22
L___Lib_FAT32_STM32_alt_isupper23:
0x30AE	0x2100    MOVS	R1, #0
L___Lib_FAT32_STM32_alt_isupper22:
0x30B0	0xB2C8    UXTB	R0, R1
;__Lib_FAT32_STM32.c, 223 :: 		
L_end_alt_isupper:
0x30B2	0xB001    ADD	SP, SP, #4
0x30B4	0x4770    BX	LR
; end of __Lib_FAT32_STM32_alt_isupper
__Lib_FAT32_STM32_alt_toupper:
;__Lib_FAT32_STM32.c, 238 :: 		
0x3B28	0xB081    SUB	SP, SP, #4
;__Lib_FAT32_STM32.c, 239 :: 		
0x3B2A	0x287A    CMP	R0, #122
0x3B2C	0xD808    BHI	L___Lib_FAT32_STM32_alt_toupper702
0x3B2E	0x2861    CMP	R0, #97
0x3B30	0xD307    BCC	L___Lib_FAT32_STM32_alt_toupper703
L___Lib_FAT32_STM32_alt_toupper699:
;__Lib_FAT32_STM32.c, 240 :: 		
0x3B32	0xF64F71DF  MOVW	R1, #65503
0x3B36	0xB209    SXTH	R1, R1
0x3B38	0xEA000101  AND	R1, R0, R1, LSL #0
0x3B3C	0xB2C8    UXTB	R0, R1
;__Lib_FAT32_STM32.c, 239 :: 		
0x3B3E	0xE7FF    B	L___Lib_FAT32_STM32_alt_toupper701
L___Lib_FAT32_STM32_alt_toupper702:
L___Lib_FAT32_STM32_alt_toupper701:
0x3B40	0xE7FF    B	L___Lib_FAT32_STM32_alt_toupper700
L___Lib_FAT32_STM32_alt_toupper703:
L___Lib_FAT32_STM32_alt_toupper700:
;__Lib_FAT32_STM32.c, 241 :: 		
;__Lib_FAT32_STM32.c, 242 :: 		
L_end_alt_toupper:
0x3B42	0xB001    ADD	SP, SP, #4
0x3B44	0x4770    BX	LR
; end of __Lib_FAT32_STM32_alt_toupper
__Lib_FAT32_STM32_alt_memcmp:
;__Lib_FAT32_STM32.c, 155 :: 		
; n start address is: 8 (R2)
; s2 start address is: 4 (R1)
0x997C	0xB081    SUB	SP, SP, #4
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
; s2 start address is: 4 (R1)
; n start address is: 8 (R2)
0x997E	0xF8AD2000  STRH	R2, [SP, #0]
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x9982	0x4602    MOV	R2, R0
0x9984	0xF9BD0000  LDRSH	R0, [SP, #0]
;__Lib_FAT32_STM32.c, 156 :: 		
L___Lib_FAT32_STM32_alt_memcmp4:
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
0x9988	0xB204    SXTH	R4, R0
0x998A	0x1E43    SUBS	R3, R0, #1
0x998C	0xB218    SXTH	R0, R3
0x998E	0xB15C    CBZ	R4, L___Lib_FAT32_STM32_alt_memcmp5
;__Lib_FAT32_STM32.c, 157 :: 		
0x9990	0x7814    LDRB	R4, [R2, #0]
0x9992	0x780B    LDRB	R3, [R1, #0]
0x9994	0x429C    CMP	R4, R3
0x9996	0xD004    BEQ	L___Lib_FAT32_STM32_alt_memcmp6
;__Lib_FAT32_STM32.c, 158 :: 		
0x9998	0x7814    LDRB	R4, [R2, #0]
; s1 end address is: 8 (R2)
0x999A	0x780B    LDRB	R3, [R1, #0]
; s2 end address is: 4 (R1)
0x999C	0x1AE3    SUB	R3, R4, R3
0x999E	0xB218    SXTH	R0, R3
0x99A0	0xE004    B	L_end_alt_memcmp
L___Lib_FAT32_STM32_alt_memcmp6:
;__Lib_FAT32_STM32.c, 162 :: 		
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
0x99A2	0x1C52    ADDS	R2, R2, #1
;__Lib_FAT32_STM32.c, 163 :: 		
0x99A4	0x1C49    ADDS	R1, R1, #1
;__Lib_FAT32_STM32.c, 164 :: 		
; s1 end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x99A6	0xE7EF    B	L___Lib_FAT32_STM32_alt_memcmp4
L___Lib_FAT32_STM32_alt_memcmp5:
;__Lib_FAT32_STM32.c, 165 :: 		
0x99A8	0x2000    MOVS	R0, #0
0x99AA	0xB200    SXTH	R0, R0
;__Lib_FAT32_STM32.c, 166 :: 		
L_end_alt_memcmp:
0x99AC	0xB001    ADD	SP, SP, #4
0x99AE	0x4770    BX	LR
; end of __Lib_FAT32_STM32_alt_memcmp
__Lib_FAT32_STM32_DE_getDirEnt:
;__Lib_FAT32_STM32.c, 765 :: 		
; pD start address is: 4 (R1)
0xA9AC	0xB083    SUB	SP, SP, #12
0xA9AE	0xF8CDE000  STR	LR, [SP, #0]
0xA9B2	0x4680    MOV	R8, R0
0xA9B4	0x4689    MOV	R9, R1
; pD end address is: 4 (R1)
; pDE start address is: 32 (R8)
; pD start address is: 36 (R9)
;__Lib_FAT32_STM32.c, 767 :: 		
0xA9B6	0x4649    MOV	R1, R9
0xA9B8	0x4640    MOV	R0, R8
0xA9BA	0xF7F9FAF1  BL	__Lib_FAT32_STM32_name83ToFileName+0
;__Lib_FAT32_STM32.c, 769 :: 		
0xA9BE	0xF109020D  ADD	R2, R9, #13
0xA9C2	0x9201    STR	R2, [SP, #4]
0xA9C4	0xF108020B  ADD	R2, R8, #11
0xA9C8	0x4610    MOV	R0, R2
0xA9CA	0xF7F8FB9B  BL	__Lib_FAT32_STM32_UI8+0
0xA9CE	0x9A01    LDR	R2, [SP, #4]
0xA9D0	0x7010    STRB	R0, [R2, #0]
;__Lib_FAT32_STM32.c, 770 :: 		
0xA9D2	0xF1090210  ADD	R2, R9, #16
0xA9D6	0x9201    STR	R2, [SP, #4]
0xA9D8	0xF108021C  ADD	R2, R8, #28
0xA9DC	0x4610    MOV	R0, R2
0xA9DE	0xF7F8FBF7  BL	__Lib_FAT32_STM32_UI32+0
0xA9E2	0x9A01    LDR	R2, [SP, #4]
0xA9E4	0x6010    STR	R0, [R2, #0]
;__Lib_FAT32_STM32.c, 771 :: 		
0xA9E6	0xF1090214  ADD	R2, R9, #20
; pD end address is: 36 (R9)
0xA9EA	0x9202    STR	R2, [SP, #8]
0xA9EC	0xF1080214  ADD	R2, R8, #20
0xA9F0	0x4610    MOV	R0, R2
0xA9F2	0xF7F8FBA1  BL	__Lib_FAT32_STM32_UI16+0
0xA9F6	0xB282    UXTH	R2, R0
0xA9F8	0x0412    LSLS	R2, R2, #16
0xA9FA	0x9201    STR	R2, [SP, #4]
0xA9FC	0xF108021A  ADD	R2, R8, #26
; pDE end address is: 32 (R8)
0xAA00	0x4610    MOV	R0, R2
0xAA02	0xF7F8FB99  BL	__Lib_FAT32_STM32_UI16+0
0xAA06	0x9A01    LDR	R2, [SP, #4]
0xAA08	0x1813    ADDS	R3, R2, R0
0xAA0A	0x9A02    LDR	R2, [SP, #8]
0xAA0C	0x6013    STR	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 773 :: 		
0xAA0E	0x2000    MOVS	R0, #0
0xAA10	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 774 :: 		
L_end_DE_getDirEnt:
0xAA12	0xF8DDE000  LDR	LR, [SP, #0]
0xAA16	0xB003    ADD	SP, SP, #12
0xAA18	0x4770    BX	LR
; end of __Lib_FAT32_STM32_DE_getDirEnt
__Lib_FAT32_STM32_name83ToFileName:
;__Lib_FAT32_STM32.c, 434 :: 		
; fn start address is: 4 (R1)
0x3FA0	0xB081    SUB	SP, SP, #4
0x3FA2	0xF8CDE000  STR	LR, [SP, #0]
; fn end address is: 4 (R1)
; fn start address is: 4 (R1)
;__Lib_FAT32_STM32.c, 442 :: 		
; i start address is: 20 (R5)
0x3FA6	0x2500    MOVS	R5, #0
; fn end address is: 4 (R1)
; i end address is: 20 (R5)
0x3FA8	0x4604    MOV	R4, R0
0x3FAA	0x460B    MOV	R3, R1
L___Lib_FAT32_STM32_name83ToFileName58:
; i start address is: 20 (R5)
; fn start address is: 12 (R3)
; n83 start address is: 16 (R4)
0x3FAC	0x2D0B    CMP	R5, #11
0x3FAE	0xD229    BCS	L___Lib_FAT32_STM32_name83ToFileName59
;__Lib_FAT32_STM32.c, 444 :: 		
; isOK start address is: 24 (R6)
0x3FB0	0x2600    MOVS	R6, #0
;__Lib_FAT32_STM32.c, 445 :: 		
0x3FB2	0x1962    ADDS	R2, R4, R5
0x3FB4	0x7812    LDRB	R2, [R2, #0]
0x3FB6	0xB2D0    UXTB	R0, R2
0x3FB8	0xF000F962  BL	__Lib_FAT32_STM32_alt_isalnum+0
0x3FBC	0x2801    CMP	R0, #1
0x3FBE	0xD101    BNE	L___Lib_FAT32_STM32_name83ToFileName707
; isOK end address is: 24 (R6)
;__Lib_FAT32_STM32.c, 446 :: 		
0x3FC0	0x2001    MOVS	R0, #1
0x3FC2	0xE000    B	L___Lib_FAT32_STM32_name83ToFileName61
L___Lib_FAT32_STM32_name83ToFileName707:
;__Lib_FAT32_STM32.c, 445 :: 		
0x3FC4	0xB2F0    UXTB	R0, R6
;__Lib_FAT32_STM32.c, 446 :: 		
L___Lib_FAT32_STM32_name83ToFileName61:
;__Lib_FAT32_STM32.c, 447 :: 		
0x3FC6	0x1962    ADDS	R2, R4, R5
0x3FC8	0x7812    LDRB	R2, [R2, #0]
0x3FCA	0x2A20    CMP	R2, #32
0x3FCC	0xD101    BNE	L___Lib_FAT32_STM32_name83ToFileName708
;__Lib_FAT32_STM32.c, 448 :: 		
0x3FCE	0x2001    MOVS	R0, #1
0x3FD0	0xE7FF    B	L___Lib_FAT32_STM32_name83ToFileName62
L___Lib_FAT32_STM32_name83ToFileName708:
;__Lib_FAT32_STM32.c, 447 :: 		
;__Lib_FAT32_STM32.c, 448 :: 		
L___Lib_FAT32_STM32_name83ToFileName62:
;__Lib_FAT32_STM32.c, 449 :: 		
0x3FD2	0x1962    ADDS	R2, R4, R5
0x3FD4	0x7812    LDRB	R2, [R2, #0]
0x3FD6	0x2A2E    CMP	R2, #46
0x3FD8	0xD101    BNE	L___Lib_FAT32_STM32_name83ToFileName709
;__Lib_FAT32_STM32.c, 450 :: 		
0x3FDA	0x2001    MOVS	R0, #1
0x3FDC	0xE7FF    B	L___Lib_FAT32_STM32_name83ToFileName63
L___Lib_FAT32_STM32_name83ToFileName709:
;__Lib_FAT32_STM32.c, 449 :: 		
;__Lib_FAT32_STM32.c, 450 :: 		
L___Lib_FAT32_STM32_name83ToFileName63:
;__Lib_FAT32_STM32.c, 451 :: 		
0x3FDE	0x1962    ADDS	R2, R4, R5
0x3FE0	0x7812    LDRB	R2, [R2, #0]
0x3FE2	0x2A5F    CMP	R2, #95
0x3FE4	0xD101    BNE	L___Lib_FAT32_STM32_name83ToFileName710
;__Lib_FAT32_STM32.c, 452 :: 		
0x3FE6	0x2001    MOVS	R0, #1
0x3FE8	0xE7FF    B	L___Lib_FAT32_STM32_name83ToFileName64
L___Lib_FAT32_STM32_name83ToFileName710:
;__Lib_FAT32_STM32.c, 451 :: 		
;__Lib_FAT32_STM32.c, 452 :: 		
L___Lib_FAT32_STM32_name83ToFileName64:
;__Lib_FAT32_STM32.c, 454 :: 		
0x3FEA	0xB940    CBNZ	R0, L___Lib_FAT32_STM32_name83ToFileName65
; n83 end address is: 16 (R4)
; i end address is: 20 (R5)
;__Lib_FAT32_STM32.c, 456 :: 		
0x3FEC	0x2200    MOVS	R2, #0
0x3FEE	0x701A    STRB	R2, [R3, #0]
; fn end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 457 :: 		
0x3FF0	0x23EC    MOVS	R3, #-20
0x3FF2	0xB25B    SXTB	R3, R3
0x3FF4	0x4A25    LDR	R2, [PC, #148]
0x3FF6	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 458 :: 		
0x3FF8	0x20FF    MOVS	R0, #-1
0x3FFA	0xB240    SXTB	R0, R0
0x3FFC	0xE042    B	L_end_name83ToFileName
;__Lib_FAT32_STM32.c, 459 :: 		
L___Lib_FAT32_STM32_name83ToFileName65:
;__Lib_FAT32_STM32.c, 442 :: 		
; i start address is: 20 (R5)
; n83 start address is: 16 (R4)
; fn start address is: 12 (R3)
0x3FFE	0x1C6D    ADDS	R5, R5, #1
0x4000	0xB2ED    UXTB	R5, R5
;__Lib_FAT32_STM32.c, 460 :: 		
; i end address is: 20 (R5)
0x4002	0xE7D3    B	L___Lib_FAT32_STM32_name83ToFileName58
L___Lib_FAT32_STM32_name83ToFileName59:
;__Lib_FAT32_STM32.c, 463 :: 		
; j start address is: 20 (R5)
0x4004	0x2500    MOVS	R5, #0
;__Lib_FAT32_STM32.c, 464 :: 		
0x4006	0x2000    MOVS	R0, #0
; fn end address is: 12 (R3)
; n83 end address is: 16 (R4)
; j end address is: 20 (R5)
0x4008	0x4621    MOV	R1, R4
0x400A	0xB2C4    UXTB	R4, R0
0x400C	0x4618    MOV	R0, R3
L___Lib_FAT32_STM32_name83ToFileName66:
; i start address is: 16 (R4)
; j start address is: 20 (R5)
; n83 start address is: 4 (R1)
0x400E	0x2C08    CMP	R4, #8
0x4010	0xD20E    BCS	L___Lib_FAT32_STM32_name83ToFileName67
;__Lib_FAT32_STM32.c, 466 :: 		
0x4012	0x190A    ADDS	R2, R1, R4
0x4014	0x7812    LDRB	R2, [R2, #0]
0x4016	0x2A20    CMP	R2, #32
0x4018	0xD004    BEQ	L___Lib_FAT32_STM32_name83ToFileName69
;__Lib_FAT32_STM32.c, 467 :: 		
0x401A	0x1943    ADDS	R3, R0, R5
0x401C	0x190A    ADDS	R2, R1, R4
0x401E	0x7812    LDRB	R2, [R2, #0]
0x4020	0x701A    STRB	R2, [R3, #0]
0x4022	0xE000    B	L___Lib_FAT32_STM32_name83ToFileName70
; i end address is: 16 (R4)
L___Lib_FAT32_STM32_name83ToFileName69:
;__Lib_FAT32_STM32.c, 469 :: 		
0x4024	0xE004    B	L___Lib_FAT32_STM32_name83ToFileName67
L___Lib_FAT32_STM32_name83ToFileName70:
;__Lib_FAT32_STM32.c, 470 :: 		
; i start address is: 16 (R4)
0x4026	0x1C6D    ADDS	R5, R5, #1
0x4028	0xB2ED    UXTB	R5, R5
;__Lib_FAT32_STM32.c, 464 :: 		
0x402A	0x1C64    ADDS	R4, R4, #1
0x402C	0xB2E4    UXTB	R4, R4
;__Lib_FAT32_STM32.c, 471 :: 		
; i end address is: 16 (R4)
0x402E	0xE7EE    B	L___Lib_FAT32_STM32_name83ToFileName66
L___Lib_FAT32_STM32_name83ToFileName67:
;__Lib_FAT32_STM32.c, 473 :: 		
0x4030	0xF2010208  ADDW	R2, R1, #8
0x4034	0x7812    LDRB	R2, [R2, #0]
0x4036	0x2A20    CMP	R2, #32
0x4038	0xD105    BNE	L___Lib_FAT32_STM32_name83ToFileName71
; n83 end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 475 :: 		
0x403A	0x1943    ADDS	R3, R0, R5
; j end address is: 20 (R5)
0x403C	0x2200    MOVS	R2, #0
0x403E	0x701A    STRB	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 476 :: 		
0x4040	0x2000    MOVS	R0, #0
0x4042	0xB240    SXTB	R0, R0
0x4044	0xE01E    B	L_end_name83ToFileName
;__Lib_FAT32_STM32.c, 477 :: 		
L___Lib_FAT32_STM32_name83ToFileName71:
;__Lib_FAT32_STM32.c, 479 :: 		
; j start address is: 20 (R5)
; n83 start address is: 4 (R1)
0x4046	0x1943    ADDS	R3, R0, R5
0x4048	0x222E    MOVS	R2, #46
0x404A	0x701A    STRB	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 480 :: 		
0x404C	0x1C6D    ADDS	R5, R5, #1
0x404E	0xB2ED    UXTB	R5, R5
;__Lib_FAT32_STM32.c, 481 :: 		
; i start address is: 16 (R4)
0x4050	0x2408    MOVS	R4, #8
; n83 end address is: 4 (R1)
; j end address is: 20 (R5)
; i end address is: 16 (R4)
0x4052	0x460F    MOV	R7, R1
0x4054	0x4606    MOV	R6, R0
L___Lib_FAT32_STM32_name83ToFileName72:
; i start address is: 16 (R4)
; n83 start address is: 28 (R7)
; j start address is: 20 (R5)
; fn start address is: 24 (R6)
; n83 start address is: 28 (R7)
; n83 end address is: 28 (R7)
0x4056	0x2C0B    CMP	R4, #11
0x4058	0xD20F    BCS	L___Lib_FAT32_STM32_name83ToFileName73
; n83 end address is: 28 (R7)
;__Lib_FAT32_STM32.c, 483 :: 		
; n83 start address is: 28 (R7)
0x405A	0x193A    ADDS	R2, R7, R4
0x405C	0x7812    LDRB	R2, [R2, #0]
0x405E	0xB2D0    UXTB	R0, R2
0x4060	0xF000F90E  BL	__Lib_FAT32_STM32_alt_isalnum+0
0x4064	0xB900    CBNZ	R0, L___Lib_FAT32_STM32_name83ToFileName75
; n83 end address is: 28 (R7)
; i end address is: 16 (R4)
;__Lib_FAT32_STM32.c, 484 :: 		
0x4066	0xE008    B	L___Lib_FAT32_STM32_name83ToFileName73
L___Lib_FAT32_STM32_name83ToFileName75:
;__Lib_FAT32_STM32.c, 485 :: 		
; i start address is: 16 (R4)
; n83 start address is: 28 (R7)
0x4068	0x1973    ADDS	R3, R6, R5
0x406A	0x193A    ADDS	R2, R7, R4
0x406C	0x7812    LDRB	R2, [R2, #0]
0x406E	0x701A    STRB	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 486 :: 		
0x4070	0x1C6D    ADDS	R5, R5, #1
0x4072	0xB2ED    UXTB	R5, R5
;__Lib_FAT32_STM32.c, 481 :: 		
0x4074	0x1C64    ADDS	R4, R4, #1
0x4076	0xB2E4    UXTB	R4, R4
;__Lib_FAT32_STM32.c, 487 :: 		
; n83 end address is: 28 (R7)
; i end address is: 16 (R4)
0x4078	0xE7ED    B	L___Lib_FAT32_STM32_name83ToFileName72
L___Lib_FAT32_STM32_name83ToFileName73:
;__Lib_FAT32_STM32.c, 489 :: 		
0x407A	0x1973    ADDS	R3, R6, R5
; fn end address is: 24 (R6)
; j end address is: 20 (R5)
0x407C	0x2200    MOVS	R2, #0
0x407E	0x701A    STRB	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 491 :: 		
0x4080	0x2000    MOVS	R0, #0
0x4082	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 492 :: 		
L_end_name83ToFileName:
0x4084	0xF8DDE000  LDR	LR, [SP, #0]
0x4088	0xB001    ADD	SP, SP, #4
0x408A	0x4770    BX	LR
0x408C	0x27A82000  	__Lib_FAT32_STM32___error+0
; end of __Lib_FAT32_STM32_name83ToFileName
__Lib_FAT32_STM32_DE_getCTime:
;__Lib_FAT32_STM32.c, 661 :: 		
0xAB04	0xB081    SUB	SP, SP, #4
0xAB06	0xF8CDE000  STR	LR, [SP, #0]
0xAB0A	0x4603    MOV	R3, R0
; pDE start address is: 12 (R3)
;__Lib_FAT32_STM32.c, 663 :: 		
0xAB0C	0xF203010E  ADDW	R1, R3, #14
0xAB10	0x4608    MOV	R0, R1
0xAB12	0xF7F8FB11  BL	__Lib_FAT32_STM32_UI16+0
0xAB16	0x0AC1    LSRS	R1, R0, #11
0xAB18	0xB289    UXTH	R1, R1
0xAB1A	0xF001021F  AND	R2, R1, #31
0xAB1E	0x4920    LDR	R1, [PC, #128]
0xAB20	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 664 :: 		
0xAB22	0xF203010E  ADDW	R1, R3, #14
0xAB26	0x4608    MOV	R0, R1
0xAB28	0xF7F8FB06  BL	__Lib_FAT32_STM32_UI16+0
0xAB2C	0x0941    LSRS	R1, R0, #5
0xAB2E	0xB289    UXTH	R1, R1
0xAB30	0xF001023F  AND	R2, R1, #63
0xAB34	0x491B    LDR	R1, [PC, #108]
0xAB36	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 665 :: 		
0xAB38	0xF203010E  ADDW	R1, R3, #14
0xAB3C	0x4608    MOV	R0, R1
0xAB3E	0xF7F8FAFB  BL	__Lib_FAT32_STM32_UI16+0
0xAB42	0x0041    LSLS	R1, R0, #1
0xAB44	0xB289    UXTH	R1, R1
0xAB46	0xF001023F  AND	R2, R1, #63
0xAB4A	0x4917    LDR	R1, [PC, #92]
0xAB4C	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 667 :: 		
0xAB4E	0xF2030110  ADDW	R1, R3, #16
0xAB52	0x4608    MOV	R0, R1
0xAB54	0xF7F8FAF0  BL	__Lib_FAT32_STM32_UI16+0
0xAB58	0x0A41    LSRS	R1, R0, #9
0xAB5A	0xB289    UXTH	R1, R1
0xAB5C	0xF001017F  AND	R1, R1, #127
0xAB60	0xB289    UXTH	R1, R1
0xAB62	0x4A12    LDR	R2, [PC, #72]
0xAB64	0x8011    STRH	R1, [R2, #0]
0xAB66	0xF20171BC  ADDW	R1, R1, #1980
0xAB6A	0x8011    STRH	R1, [R2, #0]
;__Lib_FAT32_STM32.c, 668 :: 		
0xAB6C	0xF2030110  ADDW	R1, R3, #16
0xAB70	0x4608    MOV	R0, R1
0xAB72	0xF7F8FAE1  BL	__Lib_FAT32_STM32_UI16+0
0xAB76	0x0941    LSRS	R1, R0, #5
0xAB78	0xB289    UXTH	R1, R1
0xAB7A	0xF001020F  AND	R2, R1, #15
0xAB7E	0x490C    LDR	R1, [PC, #48]
0xAB80	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 669 :: 		
0xAB82	0xF2030110  ADDW	R1, R3, #16
; pDE end address is: 12 (R3)
0xAB86	0x4608    MOV	R0, R1
0xAB88	0xF7F8FAD6  BL	__Lib_FAT32_STM32_UI16+0
0xAB8C	0xF000021F  AND	R2, R0, #31
0xAB90	0x4908    LDR	R1, [PC, #32]
0xAB92	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 671 :: 		
0xAB94	0x2000    MOVS	R0, #0
0xAB96	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 672 :: 		
L_end_DE_getCTime:
0xAB98	0xF8DDE000  LDR	LR, [SP, #0]
0xAB9C	0xB001    ADD	SP, SP, #4
0xAB9E	0x4770    BX	LR
0xABA0	0x27B62000  	__Lib_FAT32_STM32___CT+4
0xABA4	0x27B72000  	__Lib_FAT32_STM32___CT+5
0xABA8	0x27B82000  	__Lib_FAT32_STM32___CT+6
0xABAC	0x27B22000  	__Lib_FAT32_STM32___CT+0
0xABB0	0x27B42000  	__Lib_FAT32_STM32___CT+2
0xABB4	0x27B52000  	__Lib_FAT32_STM32___CT+3
; end of __Lib_FAT32_STM32_DE_getCTime
__Lib_FAT32_STM32_DE_getMTime:
;__Lib_FAT32_STM32.c, 673 :: 		
0xABB8	0xB081    SUB	SP, SP, #4
0xABBA	0xF8CDE000  STR	LR, [SP, #0]
0xABBE	0x4603    MOV	R3, R0
; pDE start address is: 12 (R3)
;__Lib_FAT32_STM32.c, 675 :: 		
0xABC0	0xF2030116  ADDW	R1, R3, #22
0xABC4	0x4608    MOV	R0, R1
0xABC6	0xF7F8FAB7  BL	__Lib_FAT32_STM32_UI16+0
0xABCA	0x0AC1    LSRS	R1, R0, #11
0xABCC	0xB289    UXTH	R1, R1
0xABCE	0xF001021F  AND	R2, R1, #31
0xABD2	0x4920    LDR	R1, [PC, #128]
0xABD4	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 676 :: 		
0xABD6	0xF2030116  ADDW	R1, R3, #22
0xABDA	0x4608    MOV	R0, R1
0xABDC	0xF7F8FAAC  BL	__Lib_FAT32_STM32_UI16+0
0xABE0	0x0941    LSRS	R1, R0, #5
0xABE2	0xB289    UXTH	R1, R1
0xABE4	0xF001023F  AND	R2, R1, #63
0xABE8	0x491B    LDR	R1, [PC, #108]
0xABEA	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 677 :: 		
0xABEC	0xF2030116  ADDW	R1, R3, #22
0xABF0	0x4608    MOV	R0, R1
0xABF2	0xF7F8FAA1  BL	__Lib_FAT32_STM32_UI16+0
0xABF6	0x0041    LSLS	R1, R0, #1
0xABF8	0xB289    UXTH	R1, R1
0xABFA	0xF001023F  AND	R2, R1, #63
0xABFE	0x4917    LDR	R1, [PC, #92]
0xAC00	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 679 :: 		
0xAC02	0xF2030118  ADDW	R1, R3, #24
0xAC06	0x4608    MOV	R0, R1
0xAC08	0xF7F8FA96  BL	__Lib_FAT32_STM32_UI16+0
0xAC0C	0x0A41    LSRS	R1, R0, #9
0xAC0E	0xB289    UXTH	R1, R1
0xAC10	0xF001017F  AND	R1, R1, #127
0xAC14	0xB289    UXTH	R1, R1
0xAC16	0x4A12    LDR	R2, [PC, #72]
0xAC18	0x8011    STRH	R1, [R2, #0]
0xAC1A	0xF20171BC  ADDW	R1, R1, #1980
0xAC1E	0x8011    STRH	R1, [R2, #0]
;__Lib_FAT32_STM32.c, 680 :: 		
0xAC20	0xF2030118  ADDW	R1, R3, #24
0xAC24	0x4608    MOV	R0, R1
0xAC26	0xF7F8FA87  BL	__Lib_FAT32_STM32_UI16+0
0xAC2A	0x0941    LSRS	R1, R0, #5
0xAC2C	0xB289    UXTH	R1, R1
0xAC2E	0xF001020F  AND	R2, R1, #15
0xAC32	0x490C    LDR	R1, [PC, #48]
0xAC34	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 681 :: 		
0xAC36	0xF2030118  ADDW	R1, R3, #24
; pDE end address is: 12 (R3)
0xAC3A	0x4608    MOV	R0, R1
0xAC3C	0xF7F8FA7C  BL	__Lib_FAT32_STM32_UI16+0
0xAC40	0xF000021F  AND	R2, R0, #31
0xAC44	0x4908    LDR	R1, [PC, #32]
0xAC46	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 683 :: 		
0xAC48	0x2000    MOVS	R0, #0
0xAC4A	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 684 :: 		
L_end_DE_getMTime:
0xAC4C	0xF8DDE000  LDR	LR, [SP, #0]
0xAC50	0xB001    ADD	SP, SP, #4
0xAC52	0x4770    BX	LR
0xAC54	0x27AE2000  	__Lib_FAT32_STM32___MT+4
0xAC58	0x27AF2000  	__Lib_FAT32_STM32___MT+5
0xAC5C	0x27B02000  	__Lib_FAT32_STM32___MT+6
0xAC60	0x27AA2000  	__Lib_FAT32_STM32___MT+0
0xAC64	0x27AC2000  	__Lib_FAT32_STM32___MT+2
0xAC68	0x27AD2000  	__Lib_FAT32_STM32___MT+3
; end of __Lib_FAT32_STM32_DE_getMTime
__Lib_FAT32_STM32_DE_setNameExt:
;__Lib_FAT32_STM32.c, 704 :: 		
; name83 start address is: 4 (R1)
0xD5FC	0xB081    SUB	SP, SP, #4
0xD5FE	0xF8CDE000  STR	LR, [SP, #0]
; name83 end address is: 4 (R1)
; name83 start address is: 4 (R1)
;__Lib_FAT32_STM32.c, 706 :: 		
0xD602	0x220B    MOVS	R2, #11
0xD604	0xB212    SXTH	R2, R2
; name83 end address is: 4 (R1)
0xD606	0xF7FCFB8B  BL	__Lib_FAT32_STM32_alt_memcpy+0
;__Lib_FAT32_STM32.c, 707 :: 		
0xD60A	0x2000    MOVS	R0, #0
0xD60C	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 708 :: 		
L_end_DE_setNameExt:
0xD60E	0xF8DDE000  LDR	LR, [SP, #0]
0xD612	0xB001    ADD	SP, SP, #4
0xD614	0x4770    BX	LR
; end of __Lib_FAT32_STM32_DE_setNameExt
__Lib_FAT32_STM32_alt_memcpy:
;__Lib_FAT32_STM32.c, 140 :: 		
; n start address is: 8 (R2)
; s1 start address is: 4 (R1)
0x9D20	0xB081    SUB	SP, SP, #4
0x9D22	0x460B    MOV	R3, R1
0x9D24	0x4601    MOV	R1, R0
; n end address is: 8 (R2)
; s1 end address is: 4 (R1)
; d1 start address is: 4 (R1)
; s1 start address is: 12 (R3)
; n start address is: 8 (R2)
;__Lib_FAT32_STM32.c, 144 :: 		
0x9D26	0x4618    MOV	R0, R3
; s1 end address is: 12 (R3)
;__Lib_FAT32_STM32.c, 145 :: 		
; dd start address is: 20 (R5)
0x9D28	0x460D    MOV	R5, R1
; d1 end address is: 4 (R1)
; dd end address is: 20 (R5)
;__Lib_FAT32_STM32.c, 146 :: 		
L___Lib_FAT32_STM32_alt_memcpy2:
; dd start address is: 20 (R5)
; n start address is: 8 (R2)
; d1 start address is: 4 (R1)
0x9D2A	0xB214    SXTH	R4, R2
0x9D2C	0x1E53    SUBS	R3, R2, #1
0x9D2E	0xB21A    SXTH	R2, R3
; n end address is: 8 (R2)
0x9D30	0xB124    CBZ	R4, L___Lib_FAT32_STM32_alt_memcpy3
; n end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 147 :: 		
; n start address is: 8 (R2)
0x9D32	0x7803    LDRB	R3, [R0, #0]
0x9D34	0x702B    STRB	R3, [R5, #0]
0x9D36	0x1C6D    ADDS	R5, R5, #1
0x9D38	0x1C40    ADDS	R0, R0, #1
; n end address is: 8 (R2)
; dd end address is: 20 (R5)
0x9D3A	0xE7F6    B	L___Lib_FAT32_STM32_alt_memcpy2
L___Lib_FAT32_STM32_alt_memcpy3:
;__Lib_FAT32_STM32.c, 149 :: 		
0x9D3C	0x4608    MOV	R0, R1
; d1 end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 150 :: 		
L_end_alt_memcpy:
0x9D3E	0xB001    ADD	SP, SP, #4
0x9D40	0x4770    BX	LR
; end of __Lib_FAT32_STM32_alt_memcpy
__Lib_FAT32_STM32_DE_setAttrib:
;__Lib_FAT32_STM32.c, 709 :: 		
; Attrib start address is: 4 (R1)
0xD330	0xB081    SUB	SP, SP, #4
; Attrib end address is: 4 (R1)
; Attrib start address is: 4 (R1)
;__Lib_FAT32_STM32.c, 711 :: 		
0xD332	0xF200020B  ADDW	R2, R0, #11
0xD336	0x7011    STRB	R1, [R2, #0]
; Attrib end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 712 :: 		
0xD338	0x2000    MOVS	R0, #0
0xD33A	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 713 :: 		
L_end_DE_setAttrib:
0xD33C	0xB001    ADD	SP, SP, #4
0xD33E	0x4770    BX	LR
; end of __Lib_FAT32_STM32_DE_setAttrib
__Lib_FAT32_STM32_FAT32_MakeNode:
;__Lib_FAT32_STM32.c, 1685 :: 		
0xD340	0xB089    SUB	SP, SP, #36
0xD342	0xF8CDE000  STR	LR, [SP, #0]
0xD346	0x9007    STR	R0, [SP, #28]
0xD348	0x9108    STR	R1, [SP, #32]
;__Lib_FAT32_STM32.c, 1704 :: 		
0xD34A	0x4A59    LDR	R2, [PC, #356]
0xD34C	0x6812    LDR	R2, [R2, #0]
0xD34E	0x9203    STR	R2, [SP, #12]
;__Lib_FAT32_STM32.c, 1706 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode260:
;__Lib_FAT32_STM32.c, 1709 :: 		
0xD350	0x4A58    LDR	R2, [PC, #352]
0xD352	0x6813    LDR	R3, [R2, #0]
0xD354	0x9A03    LDR	R2, [SP, #12]
0xD356	0x429A    CMP	R2, R3
0xD358	0xD305    BCC	L___Lib_FAT32_STM32_FAT32_MakeNode757
0xD35A	0x4A57    LDR	R2, [PC, #348]
0xD35C	0x6813    LDR	R3, [R2, #0]
0xD35E	0x9A03    LDR	R2, [SP, #12]
0xD360	0x429A    CMP	R2, R3
0xD362	0xD200    BCS	L___Lib_FAT32_STM32_FAT32_MakeNode756
0xD364	0xE006    B	L___Lib_FAT32_STM32_FAT32_MakeNode264
L___Lib_FAT32_STM32_FAT32_MakeNode757:
L___Lib_FAT32_STM32_FAT32_MakeNode756:
;__Lib_FAT32_STM32.c, 1711 :: 		
0xD366	0x23F4    MOVS	R3, #-12
0xD368	0xB25B    SXTB	R3, R3
0xD36A	0x4A54    LDR	R2, [PC, #336]
0xD36C	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 1712 :: 		
0xD36E	0x20FF    MOVS	R0, #-1
0xD370	0xB240    SXTB	R0, R0
0xD372	0xE099    B	L_end_FAT32_MakeNode
;__Lib_FAT32_STM32.c, 1713 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode264:
;__Lib_FAT32_STM32.c, 1721 :: 		
0xD374	0x4A52    LDR	R2, [PC, #328]
0xD376	0x9201    STR	R2, [SP, #4]
;__Lib_FAT32_STM32.c, 1723 :: 		
0xD378	0x9803    LDR	R0, [SP, #12]
0xD37A	0xF7F3F8CB  BL	_FAT32_ClustToSect+0
0xD37E	0x9005    STR	R0, [SP, #20]
;__Lib_FAT32_STM32.c, 1725 :: 		
0xD380	0xF7F3F918  BL	__Lib_FAT32_STM32_readMStart+0
0xD384	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT32_MakeNode265
;__Lib_FAT32_STM32.c, 1727 :: 		
0xD386	0x20FF    MOVS	R0, #-1
0xD388	0xB240    SXTB	R0, R0
0xD38A	0xE08D    B	L_end_FAT32_MakeNode
;__Lib_FAT32_STM32.c, 1728 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode265:
;__Lib_FAT32_STM32.c, 1735 :: 		
0xD38C	0x2200    MOVS	R2, #0
0xD38E	0x9202    STR	R2, [SP, #8]
L___Lib_FAT32_STM32_FAT32_MakeNode266:
0xD390	0x4A4C    LDR	R2, [PC, #304]
0xD392	0x6813    LDR	R3, [R2, #0]
0xD394	0x9A02    LDR	R2, [SP, #8]
0xD396	0x429A    CMP	R2, R3
0xD398	0xD23F    BCS	L___Lib_FAT32_STM32_FAT32_MakeNode267
;__Lib_FAT32_STM32.c, 1738 :: 		
0xD39A	0x4A4B    LDR	R2, [PC, #300]
0xD39C	0x6813    LDR	R3, [R2, #0]
0xD39E	0x9A01    LDR	R2, [SP, #4]
0xD3A0	0x429A    CMP	R2, R3
0xD3A2	0xD10A    BNE	L___Lib_FAT32_STM32_FAT32_MakeNode269
;__Lib_FAT32_STM32.c, 1740 :: 		
0xD3A4	0x9A05    LDR	R2, [SP, #20]
0xD3A6	0x1C52    ADDS	R2, R2, #1
0xD3A8	0x9205    STR	R2, [SP, #20]
;__Lib_FAT32_STM32.c, 1741 :: 		
0xD3AA	0x4A45    LDR	R2, [PC, #276]
0xD3AC	0x9201    STR	R2, [SP, #4]
;__Lib_FAT32_STM32.c, 1742 :: 		
0xD3AE	0xF7F3F8C5  BL	__Lib_FAT32_STM32_readMSector+0
0xD3B2	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT32_MakeNode270
;__Lib_FAT32_STM32.c, 1744 :: 		
0xD3B4	0x20FF    MOVS	R0, #-1
0xD3B6	0xB240    SXTB	R0, R0
0xD3B8	0xE076    B	L_end_FAT32_MakeNode
;__Lib_FAT32_STM32.c, 1745 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode270:
;__Lib_FAT32_STM32.c, 1746 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode269:
;__Lib_FAT32_STM32.c, 1749 :: 		
0xD3BA	0x9A01    LDR	R2, [SP, #4]
0xD3BC	0x7812    LDRB	R2, [R2, #0]
0xD3BE	0x2AE5    CMP	R2, #229
0xD3C0	0xD004    BEQ	L___Lib_FAT32_STM32_FAT32_MakeNode759
0xD3C2	0x9A01    LDR	R2, [SP, #4]
0xD3C4	0x7812    LDRB	R2, [R2, #0]
0xD3C6	0x2A20    CMP	R2, #32
0xD3C8	0xD300    BCC	L___Lib_FAT32_STM32_FAT32_MakeNode758
0xD3CA	0xE01F    B	L___Lib_FAT32_STM32_FAT32_MakeNode273
L___Lib_FAT32_STM32_FAT32_MakeNode759:
L___Lib_FAT32_STM32_FAT32_MakeNode758:
;__Lib_FAT32_STM32.c, 1751 :: 		
0xD3CC	0xF7F2FEFC  BL	__Lib_FAT32_STM32_readMStop+0
0xD3D0	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT32_MakeNode274
;__Lib_FAT32_STM32.c, 1753 :: 		
0xD3D2	0x20FF    MOVS	R0, #-1
0xD3D4	0xB240    SXTB	R0, R0
0xD3D6	0xE067    B	L_end_FAT32_MakeNode
;__Lib_FAT32_STM32.c, 1754 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode274:
;__Lib_FAT32_STM32.c, 1757 :: 		
0xD3D8	0x2220    MOVS	R2, #32
0xD3DA	0xB212    SXTH	R2, R2
0xD3DC	0x9907    LDR	R1, [SP, #28]
0xD3DE	0x9801    LDR	R0, [SP, #4]
0xD3E0	0xF7FCFC9E  BL	__Lib_FAT32_STM32_alt_memcpy+0
;__Lib_FAT32_STM32.c, 1761 :: 		
0xD3E4	0x9908    LDR	R1, [SP, #32]
0xD3E6	0x9801    LDR	R0, [SP, #4]
0xD3E8	0xF7FCFF06  BL	__Lib_FAT32_STM32_DE_setClust+0
;__Lib_FAT32_STM32.c, 1763 :: 		
0xD3EC	0x9801    LDR	R0, [SP, #4]
0xD3EE	0xF7FCFF1F  BL	__Lib_FAT32_STM32_DE_setCTime+0
;__Lib_FAT32_STM32.c, 1764 :: 		
0xD3F2	0x9801    LDR	R0, [SP, #4]
0xD3F4	0xF7F9FE4C  BL	__Lib_FAT32_STM32_DE_setMTime+0
;__Lib_FAT32_STM32.c, 1766 :: 		
0xD3F8	0x9805    LDR	R0, [SP, #20]
0xD3FA	0xF7FAFA49  BL	__Lib_FAT32_STM32_writeSector+0
0xD3FE	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT32_MakeNode275
;__Lib_FAT32_STM32.c, 1768 :: 		
0xD400	0x20FF    MOVS	R0, #-1
0xD402	0xB240    SXTB	R0, R0
0xD404	0xE050    B	L_end_FAT32_MakeNode
;__Lib_FAT32_STM32.c, 1769 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode275:
;__Lib_FAT32_STM32.c, 1771 :: 		
0xD406	0x2000    MOVS	R0, #0
0xD408	0xB240    SXTB	R0, R0
0xD40A	0xE04D    B	L_end_FAT32_MakeNode
;__Lib_FAT32_STM32.c, 1772 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode273:
;__Lib_FAT32_STM32.c, 1773 :: 		
0xD40C	0x9A01    LDR	R2, [SP, #4]
0xD40E	0x3220    ADDS	R2, #32
0xD410	0x9201    STR	R2, [SP, #4]
;__Lib_FAT32_STM32.c, 1735 :: 		
0xD412	0x9A02    LDR	R2, [SP, #8]
0xD414	0x1C52    ADDS	R2, R2, #1
0xD416	0x9202    STR	R2, [SP, #8]
;__Lib_FAT32_STM32.c, 1774 :: 		
0xD418	0xE7BA    B	L___Lib_FAT32_STM32_FAT32_MakeNode266
L___Lib_FAT32_STM32_FAT32_MakeNode267:
;__Lib_FAT32_STM32.c, 1777 :: 		
0xD41A	0xF7F2FED5  BL	__Lib_FAT32_STM32_readMStop+0
0xD41E	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT32_MakeNode276
;__Lib_FAT32_STM32.c, 1779 :: 		
0xD420	0x20FF    MOVS	R0, #-1
0xD422	0xB240    SXTB	R0, R0
0xD424	0xE040    B	L_end_FAT32_MakeNode
;__Lib_FAT32_STM32.c, 1780 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode276:
;__Lib_FAT32_STM32.c, 1782 :: 		
0xD426	0x9803    LDR	R0, [SP, #12]
0xD428	0xF7F2FFA6  BL	__Lib_FAT32_STM32_FAT_getEntry+0
0xD42C	0x9004    STR	R0, [SP, #16]
;__Lib_FAT32_STM32.c, 1785 :: 		
0xD42E	0xF06F4270  MVN	R2, #-268435456
0xD432	0x4290    CMP	R0, R2
0xD434	0xD135    BNE	L___Lib_FAT32_STM32_FAT32_MakeNode277
;__Lib_FAT32_STM32.c, 1787 :: 		
0xD436	0xF7FAFAC1  BL	__Lib_FAT32_STM32_FAT_getFreeClust+0
0xD43A	0x9004    STR	R0, [SP, #16]
;__Lib_FAT32_STM32.c, 1788 :: 		
0xD43C	0xF06F4270  MVN	R2, #-268435456
0xD440	0x4290    CMP	R0, R2
0xD442	0xD106    BNE	L___Lib_FAT32_STM32_FAT32_MakeNode278
;__Lib_FAT32_STM32.c, 1790 :: 		
0xD444	0x23F2    MOVS	R3, #-14
0xD446	0xB25B    SXTB	R3, R3
0xD448	0x4A1C    LDR	R2, [PC, #112]
0xD44A	0x7013    STRB	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 1791 :: 		
0xD44C	0x20FF    MOVS	R0, #-1
0xD44E	0xB240    SXTB	R0, R0
0xD450	0xE02A    B	L_end_FAT32_MakeNode
;__Lib_FAT32_STM32.c, 1792 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode278:
;__Lib_FAT32_STM32.c, 1794 :: 		
0xD452	0x9903    LDR	R1, [SP, #12]
0xD454	0x9804    LDR	R0, [SP, #16]
0xD456	0xF7FAFA5D  BL	__Lib_FAT32_STM32_FAT_setEntry+0
0xD45A	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT32_MakeNode279
;__Lib_FAT32_STM32.c, 1796 :: 		
0xD45C	0x20FF    MOVS	R0, #-1
0xD45E	0xB240    SXTB	R0, R0
0xD460	0xE022    B	L_end_FAT32_MakeNode
;__Lib_FAT32_STM32.c, 1797 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode279:
;__Lib_FAT32_STM32.c, 1804 :: 		
0xD462	0xF2402200  MOVW	R2, #512
0xD466	0xB212    SXTH	R2, R2
0xD468	0x2100    MOVS	R1, #0
0xD46A	0x4815    LDR	R0, [PC, #84]
0xD46C	0xF7FCFA76  BL	__Lib_FAT32_STM32_alt_memset+0
;__Lib_FAT32_STM32.c, 1805 :: 		
0xD470	0x9803    LDR	R0, [SP, #12]
0xD472	0xF7F3F84F  BL	_FAT32_ClustToSect+0
0xD476	0x9005    STR	R0, [SP, #20]
;__Lib_FAT32_STM32.c, 1806 :: 		
0xD478	0x2200    MOVS	R2, #0
0xD47A	0xF88D2018  STRB	R2, [SP, #24]
L___Lib_FAT32_STM32_FAT32_MakeNode280:
0xD47E	0x4A13    LDR	R2, [PC, #76]
0xD480	0x7813    LDRB	R3, [R2, #0]
0xD482	0xF89D2018  LDRB	R2, [SP, #24]
0xD486	0x429A    CMP	R2, R3
0xD488	0xD20B    BCS	L___Lib_FAT32_STM32_FAT32_MakeNode281
;__Lib_FAT32_STM32.c, 1808 :: 		
0xD48A	0x9B05    LDR	R3, [SP, #20]
0xD48C	0x9A05    LDR	R2, [SP, #20]
0xD48E	0x1C52    ADDS	R2, R2, #1
0xD490	0x9205    STR	R2, [SP, #20]
0xD492	0x4618    MOV	R0, R3
0xD494	0xF7FAF9FC  BL	__Lib_FAT32_STM32_writeSector+0
0xD498	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT32_MakeNode283
;__Lib_FAT32_STM32.c, 1810 :: 		
0xD49A	0x20FF    MOVS	R0, #-1
0xD49C	0xB240    SXTB	R0, R0
0xD49E	0xE003    B	L_end_FAT32_MakeNode
;__Lib_FAT32_STM32.c, 1811 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode283:
;__Lib_FAT32_STM32.c, 1812 :: 		
0xD4A0	0xE7ED    B	L___Lib_FAT32_STM32_FAT32_MakeNode280
L___Lib_FAT32_STM32_FAT32_MakeNode281:
;__Lib_FAT32_STM32.c, 1813 :: 		
L___Lib_FAT32_STM32_FAT32_MakeNode277:
;__Lib_FAT32_STM32.c, 1815 :: 		
0xD4A2	0x9A04    LDR	R2, [SP, #16]
0xD4A4	0x9203    STR	R2, [SP, #12]
;__Lib_FAT32_STM32.c, 1816 :: 		
0xD4A6	0xE753    B	L___Lib_FAT32_STM32_FAT32_MakeNode260
;__Lib_FAT32_STM32.c, 1821 :: 		
L_end_FAT32_MakeNode:
0xD4A8	0xF8DDE000  LDR	LR, [SP, #0]
0xD4AC	0xB009    ADD	SP, SP, #36
0xD4AE	0x4770    BX	LR
0xD4B0	0x2A742000  	__Lib_FAT32_STM32___currentDir+0
0xD4B4	0x2A582000  	__Lib_FAT32_STM32___fsi+32
0xD4B8	0x2A702000  	__Lib_FAT32_STM32_fMaxCluster+0
0xD4BC	0x27A82000  	__Lib_FAT32_STM32___error+0
0xD4C0	0x27C02000  	_f32_sector+4
0xD4C4	0x2A7C2000  	__Lib_FAT32_STM32_fDirEntsPClust+0
0xD4C8	0x2A6C2000  	__Lib_FAT32_STM32_fSectBuffEnd+0
0xD4CC	0x2A462000  	__Lib_FAT32_STM32___fsi+14
; end of __Lib_FAT32_STM32_FAT32_MakeNode
__Lib_FAT32_STM32_DE_setClust:
;__Lib_FAT32_STM32.c, 742 :: 		
0xA1F8	0xB082    SUB	SP, SP, #8
0xA1FA	0x9101    STR	R1, [SP, #4]
;__Lib_FAT32_STM32.c, 744 :: 		
0xA1FC	0xF200031A  ADDW	R3, R0, #26
0xA200	0xAC01    ADD	R4, SP, #4
0xA202	0x7822    LDRB	R2, [R4, #0]
0xA204	0x701A    STRB	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 745 :: 		
0xA206	0xF200021A  ADDW	R2, R0, #26
0xA20A	0x1C53    ADDS	R3, R2, #1
0xA20C	0x1C62    ADDS	R2, R4, #1
0xA20E	0x7812    LDRB	R2, [R2, #0]
0xA210	0x701A    STRB	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 746 :: 		
0xA212	0xF2000314  ADDW	R3, R0, #20
0xA216	0x1CA2    ADDS	R2, R4, #2
0xA218	0x7812    LDRB	R2, [R2, #0]
0xA21A	0x701A    STRB	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 747 :: 		
0xA21C	0xF2000214  ADDW	R2, R0, #20
0xA220	0x1C53    ADDS	R3, R2, #1
0xA222	0x1CE2    ADDS	R2, R4, #3
0xA224	0x7812    LDRB	R2, [R2, #0]
0xA226	0x701A    STRB	R2, [R3, #0]
;__Lib_FAT32_STM32.c, 749 :: 		
0xA228	0x2000    MOVS	R0, #0
0xA22A	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 750 :: 		
L_end_DE_setClust:
0xA22C	0xB002    ADD	SP, SP, #8
0xA22E	0x4770    BX	LR
; end of __Lib_FAT32_STM32_DE_setClust
__Lib_FAT32_STM32_DE_setCTime:
;__Lib_FAT32_STM32.c, 714 :: 		
0xA230	0xB081    SUB	SP, SP, #4
;__Lib_FAT32_STM32.c, 716 :: 		
0xA232	0xF200010E  ADDW	R1, R0, #14
0xA236	0x1C4A    ADDS	R2, R1, #1
0xA238	0x4920    LDR	R1, [PC, #128]
0xA23A	0x7809    LDRB	R1, [R1, #0]
0xA23C	0x00C9    LSLS	R1, R1, #3
0xA23E	0x7011    STRB	R1, [R2, #0]
;__Lib_FAT32_STM32.c, 717 :: 		
0xA240	0xF200010E  ADDW	R1, R0, #14
0xA244	0x1C4C    ADDS	R4, R1, #1
0xA246	0x4B1E    LDR	R3, [PC, #120]
0xA248	0x7819    LDRB	R1, [R3, #0]
0xA24A	0x08CA    LSRS	R2, R1, #3
0xA24C	0xB2D2    UXTB	R2, R2
0xA24E	0x7821    LDRB	R1, [R4, #0]
0xA250	0x1889    ADDS	R1, R1, R2
0xA252	0x7021    STRB	R1, [R4, #0]
;__Lib_FAT32_STM32.c, 718 :: 		
0xA254	0xF200020E  ADDW	R2, R0, #14
0xA258	0x4619    MOV	R1, R3
0xA25A	0x7809    LDRB	R1, [R1, #0]
0xA25C	0x0149    LSLS	R1, R1, #5
0xA25E	0x7011    STRB	R1, [R2, #0]
;__Lib_FAT32_STM32.c, 719 :: 		
0xA260	0xF200030E  ADDW	R3, R0, #14
0xA264	0x4917    LDR	R1, [PC, #92]
0xA266	0x7809    LDRB	R1, [R1, #0]
0xA268	0x084A    LSRS	R2, R1, #1
0xA26A	0xB2D2    UXTB	R2, R2
0xA26C	0x7819    LDRB	R1, [R3, #0]
0xA26E	0x1889    ADDS	R1, R1, R2
0xA270	0x7019    STRB	R1, [R3, #0]
;__Lib_FAT32_STM32.c, 721 :: 		
0xA272	0xF2000110  ADDW	R1, R0, #16
0xA276	0x1C4A    ADDS	R2, R1, #1
0xA278	0x4913    LDR	R1, [PC, #76]
0xA27A	0x8809    LDRH	R1, [R1, #0]
0xA27C	0xF2A171BC  SUBW	R1, R1, #1980
0xA280	0xB289    UXTH	R1, R1
0xA282	0x0049    LSLS	R1, R1, #1
0xA284	0x7011    STRB	R1, [R2, #0]
;__Lib_FAT32_STM32.c, 722 :: 		
0xA286	0xF2000110  ADDW	R1, R0, #16
0xA28A	0x1C4C    ADDS	R4, R1, #1
0xA28C	0x4B0F    LDR	R3, [PC, #60]
0xA28E	0x7819    LDRB	R1, [R3, #0]
0xA290	0x08CA    LSRS	R2, R1, #3
0xA292	0xB2D2    UXTB	R2, R2
0xA294	0x7821    LDRB	R1, [R4, #0]
0xA296	0x1889    ADDS	R1, R1, R2
0xA298	0x7021    STRB	R1, [R4, #0]
;__Lib_FAT32_STM32.c, 723 :: 		
0xA29A	0xF2000210  ADDW	R2, R0, #16
0xA29E	0x4619    MOV	R1, R3
0xA2A0	0x7809    LDRB	R1, [R1, #0]
0xA2A2	0x0149    LSLS	R1, R1, #5
0xA2A4	0x7011    STRB	R1, [R2, #0]
;__Lib_FAT32_STM32.c, 724 :: 		
0xA2A6	0xF2000310  ADDW	R3, R0, #16
0xA2AA	0x4909    LDR	R1, [PC, #36]
0xA2AC	0x780A    LDRB	R2, [R1, #0]
0xA2AE	0x7819    LDRB	R1, [R3, #0]
0xA2B0	0x1889    ADDS	R1, R1, R2
0xA2B2	0x7019    STRB	R1, [R3, #0]
;__Lib_FAT32_STM32.c, 726 :: 		
0xA2B4	0x2000    MOVS	R0, #0
0xA2B6	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 727 :: 		
L_end_DE_setCTime:
0xA2B8	0xB001    ADD	SP, SP, #4
0xA2BA	0x4770    BX	LR
0xA2BC	0x2A342000  	__Lib_FAT32_STM32___TM+4
0xA2C0	0x2A352000  	__Lib_FAT32_STM32___TM+5
0xA2C4	0x2A362000  	__Lib_FAT32_STM32___TM+6
0xA2C8	0x2A302000  	__Lib_FAT32_STM32___TM+0
0xA2CC	0x2A322000  	__Lib_FAT32_STM32___TM+2
0xA2D0	0x2A332000  	__Lib_FAT32_STM32___TM+3
; end of __Lib_FAT32_STM32_DE_setCTime
__Lib_FAT32_STM32_DE_setMTime:
;__Lib_FAT32_STM32.c, 728 :: 		
0x7090	0xB081    SUB	SP, SP, #4
;__Lib_FAT32_STM32.c, 730 :: 		
0x7092	0xF2000116  ADDW	R1, R0, #22
0x7096	0x1C4A    ADDS	R2, R1, #1
0x7098	0x4920    LDR	R1, [PC, #128]
0x709A	0x7809    LDRB	R1, [R1, #0]
0x709C	0x00C9    LSLS	R1, R1, #3
0x709E	0x7011    STRB	R1, [R2, #0]
;__Lib_FAT32_STM32.c, 731 :: 		
0x70A0	0xF2000116  ADDW	R1, R0, #22
0x70A4	0x1C4C    ADDS	R4, R1, #1
0x70A6	0x4B1E    LDR	R3, [PC, #120]
0x70A8	0x7819    LDRB	R1, [R3, #0]
0x70AA	0x08CA    LSRS	R2, R1, #3
0x70AC	0xB2D2    UXTB	R2, R2
0x70AE	0x7821    LDRB	R1, [R4, #0]
0x70B0	0x1889    ADDS	R1, R1, R2
0x70B2	0x7021    STRB	R1, [R4, #0]
;__Lib_FAT32_STM32.c, 732 :: 		
0x70B4	0xF2000216  ADDW	R2, R0, #22
0x70B8	0x4619    MOV	R1, R3
0x70BA	0x7809    LDRB	R1, [R1, #0]
0x70BC	0x0149    LSLS	R1, R1, #5
0x70BE	0x7011    STRB	R1, [R2, #0]
;__Lib_FAT32_STM32.c, 733 :: 		
0x70C0	0xF2000316  ADDW	R3, R0, #22
0x70C4	0x4917    LDR	R1, [PC, #92]
0x70C6	0x7809    LDRB	R1, [R1, #0]
0x70C8	0x084A    LSRS	R2, R1, #1
0x70CA	0xB2D2    UXTB	R2, R2
0x70CC	0x7819    LDRB	R1, [R3, #0]
0x70CE	0x1889    ADDS	R1, R1, R2
0x70D0	0x7019    STRB	R1, [R3, #0]
;__Lib_FAT32_STM32.c, 735 :: 		
0x70D2	0xF2000118  ADDW	R1, R0, #24
0x70D6	0x1C4A    ADDS	R2, R1, #1
0x70D8	0x4913    LDR	R1, [PC, #76]
0x70DA	0x8809    LDRH	R1, [R1, #0]
0x70DC	0xF2A171BC  SUBW	R1, R1, #1980
0x70E0	0xB289    UXTH	R1, R1
0x70E2	0x0049    LSLS	R1, R1, #1
0x70E4	0x7011    STRB	R1, [R2, #0]
;__Lib_FAT32_STM32.c, 736 :: 		
0x70E6	0xF2000118  ADDW	R1, R0, #24
0x70EA	0x1C4C    ADDS	R4, R1, #1
0x70EC	0x4B0F    LDR	R3, [PC, #60]
0x70EE	0x7819    LDRB	R1, [R3, #0]
0x70F0	0x08CA    LSRS	R2, R1, #3
0x70F2	0xB2D2    UXTB	R2, R2
0x70F4	0x7821    LDRB	R1, [R4, #0]
0x70F6	0x1889    ADDS	R1, R1, R2
0x70F8	0x7021    STRB	R1, [R4, #0]
;__Lib_FAT32_STM32.c, 737 :: 		
0x70FA	0xF2000218  ADDW	R2, R0, #24
0x70FE	0x4619    MOV	R1, R3
0x7100	0x7809    LDRB	R1, [R1, #0]
0x7102	0x0149    LSLS	R1, R1, #5
0x7104	0x7011    STRB	R1, [R2, #0]
;__Lib_FAT32_STM32.c, 738 :: 		
0x7106	0xF2000318  ADDW	R3, R0, #24
0x710A	0x4909    LDR	R1, [PC, #36]
0x710C	0x780A    LDRB	R2, [R1, #0]
0x710E	0x7819    LDRB	R1, [R3, #0]
0x7110	0x1889    ADDS	R1, R1, R2
0x7112	0x7019    STRB	R1, [R3, #0]
;__Lib_FAT32_STM32.c, 740 :: 		
0x7114	0x2000    MOVS	R0, #0
0x7116	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 741 :: 		
L_end_DE_setMTime:
0x7118	0xB001    ADD	SP, SP, #4
0x711A	0x4770    BX	LR
0x711C	0x2A342000  	__Lib_FAT32_STM32___TM+4
0x7120	0x2A352000  	__Lib_FAT32_STM32___TM+5
0x7124	0x2A362000  	__Lib_FAT32_STM32___TM+6
0x7128	0x2A302000  	__Lib_FAT32_STM32___TM+0
0x712C	0x2A322000  	__Lib_FAT32_STM32___TM+2
0x7130	0x2A332000  	__Lib_FAT32_STM32___TM+3
; end of __Lib_FAT32_STM32_DE_setMTime
__Lib_FAT32_STM32_writeSector:
;__Lib_FAT32_STM32.c, 401 :: 		
0x7890	0xB082    SUB	SP, SP, #8
0x7892	0xF8CDE000  STR	LR, [SP, #0]
0x7896	0x4602    MOV	R2, R0
; sc start address is: 8 (R2)
;__Lib_FAT32_STM32.c, 403 :: 		
0x7898	0x491A    LDR	R1, [PC, #104]
0x789A	0x7809    LDRB	R1, [R1, #0]
0x789C	0x2903    CMP	R1, #3
0x789E	0xD10B    BNE	L___Lib_FAT32_STM32_writeSector54
;__Lib_FAT32_STM32.c, 405 :: 		
0x78A0	0x9201    STR	R2, [SP, #4]
0x78A2	0xF7F8FC91  BL	__Lib_FAT32_STM32_readMStop+0
0x78A6	0x9A01    LDR	R2, [SP, #4]
0x78A8	0xB130    CBZ	R0, L___Lib_FAT32_STM32_writeSector55
; sc end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 407 :: 		
0x78AA	0x22FF    MOVS	R2, #-1
0x78AC	0xB252    SXTB	R2, R2
0x78AE	0x4916    LDR	R1, [PC, #88]
0x78B0	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 408 :: 		
0x78B2	0x20FF    MOVS	R0, #-1
0x78B4	0xB240    SXTB	R0, R0
0x78B6	0xE020    B	L_end_writeSector
;__Lib_FAT32_STM32.c, 409 :: 		
L___Lib_FAT32_STM32_writeSector55:
;__Lib_FAT32_STM32.c, 410 :: 		
; sc start address is: 8 (R2)
L___Lib_FAT32_STM32_writeSector54:
;__Lib_FAT32_STM32.c, 412 :: 		
0x78B8	0x4912    LDR	R1, [PC, #72]
0x78BA	0x7809    LDRB	R1, [R1, #0]
0x78BC	0x2901    CMP	R1, #1
0x78BE	0xD106    BNE	L___Lib_FAT32_STM32_writeSector56
; sc end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 414 :: 		
0x78C0	0x22FE    MOVS	R2, #-2
0x78C2	0xB252    SXTB	R2, R2
0x78C4	0x4910    LDR	R1, [PC, #64]
0x78C6	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 415 :: 		
0x78C8	0x20FF    MOVS	R0, #-1
0x78CA	0xB240    SXTB	R0, R0
0x78CC	0xE015    B	L_end_writeSector
;__Lib_FAT32_STM32.c, 416 :: 		
L___Lib_FAT32_STM32_writeSector56:
;__Lib_FAT32_STM32.c, 418 :: 		
; sc start address is: 8 (R2)
0x78CE	0x9201    STR	R2, [SP, #4]
0x78D0	0x490E    LDR	R1, [PC, #56]
0x78D2	0x4610    MOV	R0, R2
0x78D4	0xF7FCFD36  BL	_FAT32_Dev_Write_Sector+0
0x78D8	0x9A01    LDR	R2, [SP, #4]
0x78DA	0xB150    CBZ	R0, L___Lib_FAT32_STM32_writeSector57
; sc end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 420 :: 		
0x78DC	0xF04F32FF  MOV	R2, #-1
0x78E0	0x490B    LDR	R1, [PC, #44]
0x78E2	0x600A    STR	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 421 :: 		
0x78E4	0x22FE    MOVS	R2, #-2
0x78E6	0xB252    SXTB	R2, R2
0x78E8	0x4907    LDR	R1, [PC, #28]
0x78EA	0x700A    STRB	R2, [R1, #0]
;__Lib_FAT32_STM32.c, 422 :: 		
0x78EC	0x20FF    MOVS	R0, #-1
0x78EE	0xB240    SXTB	R0, R0
0x78F0	0xE003    B	L_end_writeSector
;__Lib_FAT32_STM32.c, 423 :: 		
L___Lib_FAT32_STM32_writeSector57:
;__Lib_FAT32_STM32.c, 425 :: 		
; sc start address is: 8 (R2)
0x78F2	0x4907    LDR	R1, [PC, #28]
0x78F4	0x600A    STR	R2, [R1, #0]
; sc end address is: 8 (R2)
;__Lib_FAT32_STM32.c, 426 :: 		
0x78F6	0x2000    MOVS	R0, #0
0x78F8	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 427 :: 		
L_end_writeSector:
0x78FA	0xF8DDE000  LDR	LR, [SP, #0]
0x78FE	0xB002    ADD	SP, SP, #8
0x7900	0x4770    BX	LR
0x7902	0xBF00    NOP
0x7904	0x27A92000  	__Lib_FAT32_STM32_fCardMultiReadMode+0
0x7908	0x27A82000  	__Lib_FAT32_STM32___error+0
0x790C	0x27C02000  	_f32_sector+4
0x7910	0x27BC2000  	_f32_sector+0
; end of __Lib_FAT32_STM32_writeSector
_FAT32_Dev_Write_Sector:
;__Lib_FAT32_Driver_STM32.c, 63 :: 		int8 FAT32_Dev_Write_Sector(__SECTOR sc, char* buf)
; buf start address is: 4 (R1)
; sc start address is: 0 (R0)
0x4344	0xB081    SUB	SP, SP, #4
0x4346	0xF8CDE000  STR	LR, [SP, #0]
; buf end address is: 4 (R1)
; sc end address is: 0 (R0)
; sc start address is: 0 (R0)
; buf start address is: 4 (R1)
;__Lib_FAT32_Driver_STM32.c, 65 :: 		if (Mmc_Write_Sector(sc, buf) != OK)
; buf end address is: 4 (R1)
; sc end address is: 0 (R0)
0x434A	0xF7FDF969  BL	_Mmc_Write_Sector+0
0x434E	0xB110    CBZ	R0, L_FAT32_Dev_Write_Sector2
;__Lib_FAT32_Driver_STM32.c, 67 :: 		return ERROR;
0x4350	0x20FF    MOVS	R0, #-1
0x4352	0xB240    SXTB	R0, R0
0x4354	0xE001    B	L_end_FAT32_Dev_Write_Sector
;__Lib_FAT32_Driver_STM32.c, 68 :: 		}
L_FAT32_Dev_Write_Sector2:
;__Lib_FAT32_Driver_STM32.c, 69 :: 		return OK;
0x4356	0x2000    MOVS	R0, #0
0x4358	0xB240    SXTB	R0, R0
;__Lib_FAT32_Driver_STM32.c, 70 :: 		}
L_end_FAT32_Dev_Write_Sector:
0x435A	0xF8DDE000  LDR	LR, [SP, #0]
0x435E	0xB001    ADD	SP, SP, #4
0x4360	0x4770    BX	LR
; end of _FAT32_Dev_Write_Sector
__Lib_FAT32_STM32_FAT_getFreeClust:
;__Lib_FAT32_STM32.c, 1316 :: 		
0x79BC	0xB085    SUB	SP, SP, #20
0x79BE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_FAT32_STM32.c, 1323 :: 		
0x79C2	0x4A53    LDR	R2, [PC, #332]
0x79C4	0x6810    LDR	R0, [R2, #0]
0x79C6	0x9001    STR	R0, [SP, #4]
;__Lib_FAT32_STM32.c, 1324 :: 		
0x79C8	0x4852    LDR	R0, [PC, #328]
0x79CA	0x6801    LDR	R1, [R0, #0]
0x79CC	0x4610    MOV	R0, R2
0x79CE	0x6800    LDR	R0, [R0, #0]
0x79D0	0x4288    CMP	R0, R1
0x79D2	0xD305    BCC	L___Lib_FAT32_STM32_FAT_getFreeClust747
0x79D4	0x4850    LDR	R0, [PC, #320]
0x79D6	0x6801    LDR	R1, [R0, #0]
0x79D8	0x9801    LDR	R0, [SP, #4]
0x79DA	0x4288    CMP	R0, R1
0x79DC	0xD200    BCS	L___Lib_FAT32_STM32_FAT_getFreeClust746
0x79DE	0xE002    B	L___Lib_FAT32_STM32_FAT_getFreeClust204
L___Lib_FAT32_STM32_FAT_getFreeClust747:
L___Lib_FAT32_STM32_FAT_getFreeClust746:
;__Lib_FAT32_STM32.c, 1325 :: 		
0x79E0	0x484C    LDR	R0, [PC, #304]
0x79E2	0x6800    LDR	R0, [R0, #0]
0x79E4	0x9001    STR	R0, [SP, #4]
L___Lib_FAT32_STM32_FAT_getFreeClust204:
;__Lib_FAT32_STM32.c, 1327 :: 		
0x79E6	0x9801    LDR	R0, [SP, #4]
0x79E8	0x9002    STR	R0, [SP, #8]
;__Lib_FAT32_STM32.c, 1329 :: 		
0x79EA	0x484C    LDR	R0, [PC, #304]
0x79EC	0x7801    LDRB	R1, [R0, #0]
0x79EE	0x9801    LDR	R0, [SP, #4]
0x79F0	0xFA20F101  LSR	R1, R0, R1
0x79F4	0x484A    LDR	R0, [PC, #296]
0x79F6	0x6800    LDR	R0, [R0, #0]
0x79F8	0x1842    ADDS	R2, R0, R1
;__Lib_FAT32_STM32.c, 1330 :: 		
0x79FA	0x484A    LDR	R0, [PC, #296]
0x79FC	0x6800    LDR	R0, [R0, #0]
0x79FE	0x1E41    SUBS	R1, R0, #1
0x7A00	0x9801    LDR	R0, [SP, #4]
0x7A02	0x4008    ANDS	R0, R1
0x7A04	0x0081    LSLS	R1, R0, #2
0x7A06	0x4848    LDR	R0, [PC, #288]
0x7A08	0x1840    ADDS	R0, R0, R1
0x7A0A	0x9003    STR	R0, [SP, #12]
;__Lib_FAT32_STM32.c, 1332 :: 		
0x7A0C	0x4610    MOV	R0, R2
0x7A0E	0xF7F8FDD1  BL	__Lib_FAT32_STM32_readMStart+0
0x7A12	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT_getFreeClust205
;__Lib_FAT32_STM32.c, 1334 :: 		
0x7A14	0xF06F4070  MVN	R0, #-268435456
0x7A18	0xE076    B	L_end_FAT_getFreeClust
;__Lib_FAT32_STM32.c, 1335 :: 		
L___Lib_FAT32_STM32_FAT_getFreeClust205:
;__Lib_FAT32_STM32.c, 1343 :: 		
0x7A1A	0x2000    MOVS	R0, #0
0x7A1C	0xF88D0010  STRB	R0, [SP, #16]
;__Lib_FAT32_STM32.c, 1344 :: 		
L___Lib_FAT32_STM32_FAT_getFreeClust206:
;__Lib_FAT32_STM32.c, 1346 :: 		
0x7A20	0x9803    LDR	R0, [SP, #12]
0x7A22	0x6800    LDR	R0, [R0, #0]
0x7A24	0xB918    CBNZ	R0, L___Lib_FAT32_STM32_FAT_getFreeClust208
;__Lib_FAT32_STM32.c, 1348 :: 		
0x7A26	0x2001    MOVS	R0, #1
0x7A28	0xF88D0010  STRB	R0, [SP, #16]
;__Lib_FAT32_STM32.c, 1349 :: 		
0x7A2C	0xE03E    B	L___Lib_FAT32_STM32_FAT_getFreeClust207
;__Lib_FAT32_STM32.c, 1350 :: 		
L___Lib_FAT32_STM32_FAT_getFreeClust208:
;__Lib_FAT32_STM32.c, 1352 :: 		
0x7A2E	0x9803    LDR	R0, [SP, #12]
0x7A30	0x1D00    ADDS	R0, R0, #4
0x7A32	0x9003    STR	R0, [SP, #12]
;__Lib_FAT32_STM32.c, 1353 :: 		
0x7A34	0x9801    LDR	R0, [SP, #4]
0x7A36	0x1C41    ADDS	R1, R0, #1
0x7A38	0x9101    STR	R1, [SP, #4]
;__Lib_FAT32_STM32.c, 1355 :: 		
0x7A3A	0x4837    LDR	R0, [PC, #220]
0x7A3C	0x6800    LDR	R0, [R0, #0]
0x7A3E	0x4281    CMP	R1, R0
0x7A40	0xD321    BCC	L___Lib_FAT32_STM32_FAT_getFreeClust209
;__Lib_FAT32_STM32.c, 1357 :: 		
0x7A42	0x4834    LDR	R0, [PC, #208]
0x7A44	0x6800    LDR	R0, [R0, #0]
0x7A46	0x9001    STR	R0, [SP, #4]
;__Lib_FAT32_STM32.c, 1359 :: 		
0x7A48	0xF7F8FBBE  BL	__Lib_FAT32_STM32_readMStop+0
0x7A4C	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT_getFreeClust210
;__Lib_FAT32_STM32.c, 1361 :: 		
0x7A4E	0xF06F4070  MVN	R0, #-268435456
0x7A52	0xE059    B	L_end_FAT_getFreeClust
;__Lib_FAT32_STM32.c, 1362 :: 		
L___Lib_FAT32_STM32_FAT_getFreeClust210:
;__Lib_FAT32_STM32.c, 1364 :: 		
0x7A54	0x4831    LDR	R0, [PC, #196]
0x7A56	0x7801    LDRB	R1, [R0, #0]
0x7A58	0x9801    LDR	R0, [SP, #4]
0x7A5A	0xFA20F101  LSR	R1, R0, R1
0x7A5E	0x4830    LDR	R0, [PC, #192]
0x7A60	0x6800    LDR	R0, [R0, #0]
0x7A62	0x1842    ADDS	R2, R0, R1
;__Lib_FAT32_STM32.c, 1365 :: 		
0x7A64	0x482F    LDR	R0, [PC, #188]
0x7A66	0x6800    LDR	R0, [R0, #0]
0x7A68	0x1E41    SUBS	R1, R0, #1
0x7A6A	0x9801    LDR	R0, [SP, #4]
0x7A6C	0x4008    ANDS	R0, R1
0x7A6E	0x0081    LSLS	R1, R0, #2
0x7A70	0x482D    LDR	R0, [PC, #180]
0x7A72	0x1840    ADDS	R0, R0, R1
0x7A74	0x9003    STR	R0, [SP, #12]
;__Lib_FAT32_STM32.c, 1367 :: 		
0x7A76	0x4610    MOV	R0, R2
0x7A78	0xF7F8FD9C  BL	__Lib_FAT32_STM32_readMStart+0
0x7A7C	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT_getFreeClust211
;__Lib_FAT32_STM32.c, 1369 :: 		
0x7A7E	0xF06F4070  MVN	R0, #-268435456
0x7A82	0xE041    B	L_end_FAT_getFreeClust
;__Lib_FAT32_STM32.c, 1370 :: 		
L___Lib_FAT32_STM32_FAT_getFreeClust211:
;__Lib_FAT32_STM32.c, 1371 :: 		
0x7A84	0xE00C    B	L___Lib_FAT32_STM32_FAT_getFreeClust212
L___Lib_FAT32_STM32_FAT_getFreeClust209:
;__Lib_FAT32_STM32.c, 1372 :: 		
0x7A86	0x4829    LDR	R0, [PC, #164]
0x7A88	0x6801    LDR	R1, [R0, #0]
0x7A8A	0x9803    LDR	R0, [SP, #12]
0x7A8C	0x4288    CMP	R0, R1
0x7A8E	0xD107    BNE	L___Lib_FAT32_STM32_FAT_getFreeClust213
;__Lib_FAT32_STM32.c, 1374 :: 		
0x7A90	0x4825    LDR	R0, [PC, #148]
0x7A92	0x9003    STR	R0, [SP, #12]
;__Lib_FAT32_STM32.c, 1375 :: 		
0x7A94	0xF7F8FD52  BL	__Lib_FAT32_STM32_readMSector+0
0x7A98	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT_getFreeClust214
;__Lib_FAT32_STM32.c, 1377 :: 		
0x7A9A	0xF06F4070  MVN	R0, #-268435456
0x7A9E	0xE033    B	L_end_FAT_getFreeClust
;__Lib_FAT32_STM32.c, 1378 :: 		
L___Lib_FAT32_STM32_FAT_getFreeClust214:
;__Lib_FAT32_STM32.c, 1379 :: 		
L___Lib_FAT32_STM32_FAT_getFreeClust213:
L___Lib_FAT32_STM32_FAT_getFreeClust212:
;__Lib_FAT32_STM32.c, 1381 :: 		
0x7AA0	0x9902    LDR	R1, [SP, #8]
0x7AA2	0x9801    LDR	R0, [SP, #4]
0x7AA4	0x4288    CMP	R0, R1
0x7AA6	0xD100    BNE	L___Lib_FAT32_STM32_FAT_getFreeClust215
;__Lib_FAT32_STM32.c, 1382 :: 		
0x7AA8	0xE000    B	L___Lib_FAT32_STM32_FAT_getFreeClust207
L___Lib_FAT32_STM32_FAT_getFreeClust215:
;__Lib_FAT32_STM32.c, 1383 :: 		
0x7AAA	0xE7B9    B	L___Lib_FAT32_STM32_FAT_getFreeClust206
L___Lib_FAT32_STM32_FAT_getFreeClust207:
;__Lib_FAT32_STM32.c, 1385 :: 		
0x7AAC	0xF7F8FB8C  BL	__Lib_FAT32_STM32_readMStop+0
0x7AB0	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT_getFreeClust216
;__Lib_FAT32_STM32.c, 1387 :: 		
0x7AB2	0xF06F4070  MVN	R0, #-268435456
0x7AB6	0xE027    B	L_end_FAT_getFreeClust
;__Lib_FAT32_STM32.c, 1388 :: 		
L___Lib_FAT32_STM32_FAT_getFreeClust216:
;__Lib_FAT32_STM32.c, 1391 :: 		
0x7AB8	0xF89D0010  LDRB	R0, [SP, #16]
0x7ABC	0xB910    CBNZ	R0, L___Lib_FAT32_STM32_FAT_getFreeClust217
;__Lib_FAT32_STM32.c, 1392 :: 		
0x7ABE	0xF06F4070  MVN	R0, #-268435456
0x7AC2	0xE021    B	L_end_FAT_getFreeClust
L___Lib_FAT32_STM32_FAT_getFreeClust217:
;__Lib_FAT32_STM32.c, 1395 :: 		
0x7AC4	0xF06F4170  MVN	R1, #-268435456
0x7AC8	0x9803    LDR	R0, [SP, #12]
0x7ACA	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 1397 :: 		
0x7ACC	0x4813    LDR	R0, [PC, #76]
0x7ACE	0x7801    LDRB	R1, [R0, #0]
0x7AD0	0x9801    LDR	R0, [SP, #4]
0x7AD2	0xFA20F101  LSR	R1, R0, R1
0x7AD6	0x4812    LDR	R0, [PC, #72]
0x7AD8	0x6800    LDR	R0, [R0, #0]
0x7ADA	0x1840    ADDS	R0, R0, R1
;__Lib_FAT32_STM32.c, 1398 :: 		
0x7ADC	0xF7FFFED8  BL	__Lib_FAT32_STM32_writeSector+0
0x7AE0	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT_getFreeClust219
;__Lib_FAT32_STM32.c, 1400 :: 		
0x7AE2	0xF04F30FF  MOV	R0, #-1
0x7AE6	0xE00F    B	L_end_FAT_getFreeClust
;__Lib_FAT32_STM32.c, 1401 :: 		
L___Lib_FAT32_STM32_FAT_getFreeClust219:
;__Lib_FAT32_STM32.c, 1404 :: 		
0x7AE8	0x4811    LDR	R0, [PC, #68]
0x7AEA	0x6800    LDR	R0, [R0, #0]
0x7AEC	0xF1B03FFF  CMP	R0, #-1
0x7AF0	0xD003    BEQ	L___Lib_FAT32_STM32_FAT_getFreeClust220
;__Lib_FAT32_STM32.c, 1406 :: 		
0x7AF2	0x490F    LDR	R1, [PC, #60]
0x7AF4	0x6808    LDR	R0, [R1, #0]
0x7AF6	0x1E40    SUBS	R0, R0, #1
0x7AF8	0x6008    STR	R0, [R1, #0]
;__Lib_FAT32_STM32.c, 1407 :: 		
L___Lib_FAT32_STM32_FAT_getFreeClust220:
;__Lib_FAT32_STM32.c, 1408 :: 		
0x7AFA	0x9901    LDR	R1, [SP, #4]
0x7AFC	0x4804    LDR	R0, [PC, #16]
0x7AFE	0x6001    STR	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 1409 :: 		
0x7B00	0x2101    MOVS	R1, #1
0x7B02	0x480C    LDR	R0, [PC, #48]
0x7B04	0x7001    STRB	R1, [R0, #0]
;__Lib_FAT32_STM32.c, 1411 :: 		
0x7B06	0x9801    LDR	R0, [SP, #4]
;__Lib_FAT32_STM32.c, 1413 :: 		
L_end_FAT_getFreeClust:
0x7B08	0xF8DDE000  LDR	LR, [SP, #0]
0x7B0C	0xB005    ADD	SP, SP, #20
0x7B0E	0x4770    BX	LR
0x7B10	0x2A682000  	__Lib_FAT32_STM32___fsi+48
0x7B14	0x2A582000  	__Lib_FAT32_STM32___fsi+32
0x7B18	0x2A702000  	__Lib_FAT32_STM32_fMaxCluster+0
0x7B1C	0x2A802000  	__Lib_FAT32_STM32_fFatEntsPSectPO2+0
0x7B20	0x2A542000  	__Lib_FAT32_STM32___fsi+28
0x7B24	0x2A842000  	__Lib_FAT32_STM32_fFatEntsPSect+0
0x7B28	0x27C02000  	_f32_sector+4
0x7B2C	0x2A6C2000  	__Lib_FAT32_STM32_fSectBuffEnd+0
0x7B30	0x2A642000  	__Lib_FAT32_STM32___fsi+44
0x7B34	0x27BB2000  	__Lib_FAT32_STM32_fDoSyncFSI+0
; end of __Lib_FAT32_STM32_FAT_getFreeClust
__Lib_FAT32_STM32_FAT_setEntry:
;__Lib_FAT32_STM32.c, 1188 :: 		
; cl start address is: 4 (R1)
0x7914	0xB086    SUB	SP, SP, #24
0x7916	0xF8CDE000  STR	LR, [SP, #0]
0x791A	0x9005    STR	R0, [SP, #20]
0x791C	0x4608    MOV	R0, R1
; cl end address is: 4 (R1)
;__Lib_FAT32_STM32.c, 1194 :: 		
0x791E	0x4A20    LDR	R2, [PC, #128]
0x7920	0x7812    LDRB	R2, [R2, #0]
0x7922	0xFA20F302  LSR	R3, R0, R2
;__Lib_FAT32_STM32.c, 1196 :: 		
0x7926	0x4A1F    LDR	R2, [PC, #124]
0x7928	0x6812    LDR	R2, [R2, #0]
0x792A	0x189C    ADDS	R4, R3, R2
0x792C	0x9402    STR	R4, [SP, #8]
;__Lib_FAT32_STM32.c, 1197 :: 		
0x792E	0x4A1E    LDR	R2, [PC, #120]
0x7930	0x6812    LDR	R2, [R2, #0]
0x7932	0x1E52    SUBS	R2, R2, #1
0x7934	0xEA000202  AND	R2, R0, R2, LSL #0
0x7938	0x0093    LSLS	R3, R2, #2
0x793A	0x4A1C    LDR	R2, [PC, #112]
0x793C	0x18D2    ADDS	R2, R2, R3
0x793E	0x9204    STR	R2, [SP, #16]
;__Lib_FAT32_STM32.c, 1199 :: 		
0x7940	0x4620    MOV	R0, R4
0x7942	0xF7F8FC85  BL	__Lib_FAT32_STM32_readSector+0
0x7946	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT_setEntry172
;__Lib_FAT32_STM32.c, 1201 :: 		
0x7948	0x20FF    MOVS	R0, #-1
0x794A	0xB240    SXTB	R0, R0
0x794C	0xE024    B	L_end_FAT_setEntry
;__Lib_FAT32_STM32.c, 1202 :: 		
L___Lib_FAT32_STM32_FAT_setEntry172:
;__Lib_FAT32_STM32.c, 1203 :: 		
0x794E	0x9B05    LDR	R3, [SP, #20]
0x7950	0x9A04    LDR	R2, [SP, #16]
0x7952	0x6013    STR	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 1206 :: 		
0x7954	0x9A02    LDR	R2, [SP, #8]
0x7956	0x9203    STR	R2, [SP, #12]
;__Lib_FAT32_STM32.c, 1207 :: 		
0x7958	0x2200    MOVS	R2, #0
0x795A	0xF88D2004  STRB	R2, [SP, #4]
L___Lib_FAT32_STM32_FAT_setEntry173:
0x795E	0x4A14    LDR	R2, [PC, #80]
0x7960	0x7813    LDRB	R3, [R2, #0]
0x7962	0xF89D2004  LDRB	R2, [SP, #4]
0x7966	0x429A    CMP	R2, R3
0x7968	0xD211    BCS	L___Lib_FAT32_STM32_FAT_setEntry174
;__Lib_FAT32_STM32.c, 1209 :: 		
0x796A	0x9803    LDR	R0, [SP, #12]
0x796C	0xF7FFFF90  BL	__Lib_FAT32_STM32_writeSector+0
0x7970	0xB110    CBZ	R0, L___Lib_FAT32_STM32_FAT_setEntry176
;__Lib_FAT32_STM32.c, 1211 :: 		
0x7972	0x20FF    MOVS	R0, #-1
0x7974	0xB240    SXTB	R0, R0
0x7976	0xE00F    B	L_end_FAT_setEntry
;__Lib_FAT32_STM32.c, 1212 :: 		
L___Lib_FAT32_STM32_FAT_setEntry176:
;__Lib_FAT32_STM32.c, 1213 :: 		
0x7978	0x4A0E    LDR	R2, [PC, #56]
0x797A	0x6813    LDR	R3, [R2, #0]
0x797C	0x9A03    LDR	R2, [SP, #12]
0x797E	0x18D2    ADDS	R2, R2, R3
0x7980	0x9203    STR	R2, [SP, #12]
;__Lib_FAT32_STM32.c, 1207 :: 		
0x7982	0xF89D2004  LDRB	R2, [SP, #4]
0x7986	0x1C52    ADDS	R2, R2, #1
0x7988	0xF88D2004  STRB	R2, [SP, #4]
;__Lib_FAT32_STM32.c, 1214 :: 		
0x798C	0xE7E7    B	L___Lib_FAT32_STM32_FAT_setEntry173
L___Lib_FAT32_STM32_FAT_setEntry174:
;__Lib_FAT32_STM32.c, 1218 :: 		
0x798E	0x9B02    LDR	R3, [SP, #8]
0x7990	0x4A09    LDR	R2, [PC, #36]
0x7992	0x6013    STR	R3, [R2, #0]
;__Lib_FAT32_STM32.c, 1220 :: 		
0x7994	0x2000    MOVS	R0, #0
0x7996	0xB240    SXTB	R0, R0
;__Lib_FAT32_STM32.c, 1221 :: 		
L_end_FAT_setEntry:
0x7998	0xF8DDE000  LDR	LR, [SP, #0]
0x799C	0xB006    ADD	SP, SP, #24
0x799E	0x4770    BX	LR
0x79A0	0x2A802000  	__Lib_FAT32_STM32_fFatEntsPSectPO2+0
0x79A4	0x2A542000  	__Lib_FAT32_STM32___fsi+28
0x79A8	0x2A842000  	__Lib_FAT32_STM32_fFatEntsPSect+0
0x79AC	0x27C02000  	_f32_sector+4
0x79B0	0x2A4A2000  	__Lib_FAT32_STM32___fsi+18
0x79B4	0x2A4C2000  	__Lib_FAT32_STM32___fsi+20
0x79B8	0x27BC2000  	_f32_sector+0
; end of __Lib_FAT32_STM32_FAT_setEntry
_RTC_Init:
;RTCC_driver.c, 31 :: 		void RTC_Init(){
;RTCC_driver.c, 32 :: 		RCC_APB1ENR.PWREN = 1;            // Enable RTC clock
0x17848	0x2101    MOVS	R1, #1
0x1784A	0xB249    SXTB	R1, R1
0x1784C	0x4811    LDR	R0, [PC, #68]
0x1784E	0x6001    STR	R1, [R0, #0]
;RTCC_driver.c, 33 :: 		if (RCC_BDCR.RTCEN == 0){         // if RTC is disabled ...
0x17850	0x4911    LDR	R1, [PC, #68]
0x17852	0x6808    LDR	R0, [R1, #0]
0x17854	0xB988    CBNZ	R0, L_RTC_Init0
;RTCC_driver.c, 34 :: 		PWR_CR.DBP = 1;                 // Allow access to RTC
0x17856	0x2101    MOVS	R1, #1
0x17858	0xB249    SXTB	R1, R1
0x1785A	0x4810    LDR	R0, [PC, #64]
0x1785C	0x6001    STR	R1, [R0, #0]
;RTCC_driver.c, 36 :: 		RTC_WPR = 0xCA;                 //unlock write protection
0x1785E	0x21CA    MOVS	R1, #202
0x17860	0x480F    LDR	R0, [PC, #60]
0x17862	0x6001    STR	R1, [R0, #0]
;RTCC_driver.c, 37 :: 		RTC_WPR = 0x53;                 //unlock write protection
0x17864	0x2153    MOVS	R1, #83
0x17866	0x480E    LDR	R0, [PC, #56]
0x17868	0x6001    STR	R1, [R0, #0]
;RTCC_driver.c, 39 :: 		RCC_BDCR = 0x00010000;          // make it possible to change clock source
0x1786A	0xF44F3180  MOV	R1, #65536
0x1786E	0x480D    LDR	R0, [PC, #52]
0x17870	0x6001    STR	R1, [R0, #0]
;RTCC_driver.c, 40 :: 		RCC_BDCR = 0x00008101;          // RTCEN = 1, LSE, LSEON
0x17872	0xF2481101  MOVW	R1, #33025
0x17876	0x480B    LDR	R0, [PC, #44]
0x17878	0x6001    STR	R1, [R0, #0]
;RTCC_driver.c, 41 :: 		}
L_RTC_Init0:
;RTCC_driver.c, 42 :: 		while(RTC_ISR.RSF != 1){}         // Wait for RTC APB registers synchronisation
L_RTC_Init1:
0x1787A	0x490B    LDR	R1, [PC, #44]
0x1787C	0x6808    LDR	R0, [R1, #0]
0x1787E	0xB900    CBNZ	R0, L_RTC_Init2
0x17880	0xE7FB    B	L_RTC_Init1
L_RTC_Init2:
;RTCC_driver.c, 44 :: 		while(RCC_BDCR.LSERDY != 1){};    // Wait till LSE is ready
L_RTC_Init3:
0x17882	0x490A    LDR	R1, [PC, #40]
0x17884	0x6808    LDR	R0, [R1, #0]
0x17886	0xB900    CBNZ	R0, L_RTC_Init4
0x17888	0xE7FB    B	L_RTC_Init3
L_RTC_Init4:
;RTCC_driver.c, 46 :: 		RTC_WPR = 0xFF;
0x1788A	0x21FF    MOVS	R1, #255
0x1788C	0x4804    LDR	R0, [PC, #16]
0x1788E	0x6001    STR	R1, [R0, #0]
;RTCC_driver.c, 48 :: 		}
L_end_RTC_Init:
0x17890	0x4770    BX	LR
0x17892	0xBF00    NOP
0x17894	0x08704247  	RCC_APB1ENR+0
0x17898	0x0E3C4247  	RCC_BDCR+0
0x1789C	0x0020420E  	PWR_CR+0
0x178A0	0x28244000  	RTC_WPR+0
0x178A4	0x38704002  	RCC_BDCR+0
0x178A8	0x01944205  	RTC_ISR+0
0x178AC	0x0E044247  	RCC_BDCR+0
; end of _RTC_Init
_DisableInterrupts:
;__Lib_System_4XX.c, 124 :: 		
0x17838	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 127 :: 		
0x1783A	0xF3EF8C10  MRS	R12, #16
0x1783E	0x4660    MOV	R0, R12
; result start address is: 0 (R0)
;__Lib_System_4XX.c, 128 :: 		
0x17840	0xB672    CPSID	i
;__Lib_System_4XX.c, 130 :: 		
; result end address is: 0 (R0)
;__Lib_System_4XX.c, 131 :: 		
L_end_DisableInterrupts:
0x17842	0xB001    ADD	SP, SP, #4
0x17844	0x4770    BX	LR
; end of _DisableInterrupts
_Check_TP:
;Ducati_logger_driver.c, 4611 :: 		void Check_TP() {
0x176C4	0xB081    SUB	SP, SP, #4
0x176C6	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_driver.c, 4612 :: 		if (STMPE610_PressDetect()) {
0x176CA	0xF7EDFA8B  BL	_STMPE610_PressDetect+0
0x176CE	0xB1B8    CBZ	R0, L_Check_TP242
;Ducati_logger_driver.c, 4613 :: 		if (STMPE610_GetLastCoordinates(&Xcoord, &Ycoord) == 0) {
0x176D0	0x4914    LDR	R1, [PC, #80]
0x176D2	0x4815    LDR	R0, [PC, #84]
0x176D4	0xF7F7F88A  BL	_STMPE610_GetLastCoordinates+0
0x176D8	0xB988    CBNZ	R0, L_Check_TP243
;Ducati_logger_driver.c, 4615 :: 		Process_TP_Press(Xcoord, Ycoord);
0x176DA	0x4812    LDR	R0, [PC, #72]
0x176DC	0x8801    LDRH	R1, [R0, #0]
0x176DE	0x4812    LDR	R0, [PC, #72]
0x176E0	0x8800    LDRH	R0, [R0, #0]
0x176E2	0xF7F7F8AD  BL	_Process_TP_Press+0
;Ducati_logger_driver.c, 4616 :: 		if (PenDown == 0) {
0x176E6	0x4811    LDR	R0, [PC, #68]
0x176E8	0x7800    LDRB	R0, [R0, #0]
0x176EA	0xB940    CBNZ	R0, L_Check_TP244
;Ducati_logger_driver.c, 4617 :: 		PenDown = 1;
0x176EC	0x2101    MOVS	R1, #1
0x176EE	0x480F    LDR	R0, [PC, #60]
0x176F0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 4618 :: 		Process_TP_Down(Xcoord, Ycoord);
0x176F2	0x480C    LDR	R0, [PC, #48]
0x176F4	0x8801    LDRH	R1, [R0, #0]
0x176F6	0x480C    LDR	R0, [PC, #48]
0x176F8	0x8800    LDRH	R0, [R0, #0]
0x176FA	0xF7F7FC0F  BL	_Process_TP_Down+0
;Ducati_logger_driver.c, 4619 :: 		}
L_Check_TP244:
;Ducati_logger_driver.c, 4620 :: 		}
L_Check_TP243:
;Ducati_logger_driver.c, 4621 :: 		}
0x176FE	0xE00C    B	L_Check_TP245
L_Check_TP242:
;Ducati_logger_driver.c, 4622 :: 		else if (PenDown == 1) {
0x17700	0x480A    LDR	R0, [PC, #40]
0x17702	0x7800    LDRB	R0, [R0, #0]
0x17704	0x2801    CMP	R0, #1
0x17706	0xD108    BNE	L_Check_TP246
;Ducati_logger_driver.c, 4623 :: 		PenDown = 0;
0x17708	0x2100    MOVS	R1, #0
0x1770A	0x4808    LDR	R0, [PC, #32]
0x1770C	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_driver.c, 4624 :: 		Process_TP_Up(Xcoord, Ycoord);
0x1770E	0x4805    LDR	R0, [PC, #20]
0x17710	0x8801    LDRH	R1, [R0, #0]
0x17712	0x4805    LDR	R0, [PC, #20]
0x17714	0x8800    LDRH	R0, [R0, #0]
0x17716	0xF7F7FDA7  BL	_Process_TP_Up+0
;Ducati_logger_driver.c, 4625 :: 		}
L_Check_TP246:
L_Check_TP245:
;Ducati_logger_driver.c, 4626 :: 		}
L_end_Check_TP:
0x1771A	0xF8DDE000  LDR	LR, [SP, #0]
0x1771E	0xB001    ADD	SP, SP, #4
0x17720	0x4770    BX	LR
0x17722	0xBF00    NOP
0x17724	0x22882000  	_Ycoord+0
0x17728	0x22622000  	_Xcoord+0
0x1772C	0x22292000  	_PenDown+0
; end of _Check_TP
_STMPE610_GetLastCoordinates:
;__Lib_STMPE610.c, 810 :: 		
; y_coordinate start address is: 4 (R1)
; x_coordinate start address is: 0 (R0)
0xE7EC	0xB085    SUB	SP, SP, #20
0xE7EE	0xF8CDE000  STR	LR, [SP, #0]
; y_coordinate end address is: 4 (R1)
; x_coordinate end address is: 0 (R0)
; x_coordinate start address is: 0 (R0)
; y_coordinate start address is: 4 (R1)
;__Lib_STMPE610.c, 813 :: 		
; r2 start address is: 20 (R5)
0xE7F2	0x2501    MOVS	R5, #1
; x_coordinate end address is: 0 (R0)
; y_coordinate end address is: 4 (R1)
; r2 end address is: 20 (R5)
0xE7F4	0x4604    MOV	R4, R0
;__Lib_STMPE610.c, 814 :: 		
L_STMPE610_GetLastCoordinates60:
; r2 start address is: 20 (R5)
; y_coordinate start address is: 4 (R1)
; x_coordinate start address is: 16 (R4)
0xE7F6	0xF10D0312  ADD	R3, SP, #18
0xE7FA	0xAA04    ADD	R2, SP, #16
0xE7FC	0x9401    STR	R4, [SP, #4]
0xE7FE	0x9102    STR	R1, [SP, #8]
0xE800	0xF88D500C  STRB	R5, [SP, #12]
0xE804	0x4619    MOV	R1, R3
0xE806	0x4610    MOV	R0, R2
0xE808	0xF7FDF956  BL	_STMPE610_GetCoordinates+0
0xE80C	0xF89D500C  LDRB	R5, [SP, #12]
0xE810	0x9902    LDR	R1, [SP, #8]
0xE812	0x9C01    LDR	R4, [SP, #4]
; r1 start address is: 8 (R2)
0xE814	0xB2C2    UXTB	R2, R0
0xE816	0x2801    CMP	R0, #1
0xE818	0xD004    BEQ	L_STMPE610_GetLastCoordinates61
;__Lib_STMPE610.c, 815 :: 		
0xE81A	0xB115    CBZ	R5, L__STMPE610_GetLastCoordinates81
; r2 end address is: 20 (R5)
;__Lib_STMPE610.c, 816 :: 		
; r2 start address is: 0 (R0)
0xE81C	0xB2D0    UXTB	R0, R2
; r1 end address is: 8 (R2)
; r2 end address is: 0 (R0)
0xE81E	0xB2C5    UXTB	R5, R0
0xE820	0xE7FF    B	L_STMPE610_GetLastCoordinates62
L__STMPE610_GetLastCoordinates81:
;__Lib_STMPE610.c, 815 :: 		
;__Lib_STMPE610.c, 816 :: 		
L_STMPE610_GetLastCoordinates62:
; r2 start address is: 20 (R5)
0xE822	0xE7E8    B	L_STMPE610_GetLastCoordinates60
L_STMPE610_GetLastCoordinates61:
;__Lib_STMPE610.c, 818 :: 		
0xE824	0xB93D    CBNZ	R5, L_STMPE610_GetLastCoordinates63
;__Lib_STMPE610.c, 819 :: 		
0xE826	0xB114    CBZ	R4, L_STMPE610_GetLastCoordinates64
;__Lib_STMPE610.c, 820 :: 		
0xE828	0xF8BD2010  LDRH	R2, [SP, #16]
0xE82C	0x8022    STRH	R2, [R4, #0]
; x_coordinate end address is: 16 (R4)
L_STMPE610_GetLastCoordinates64:
;__Lib_STMPE610.c, 821 :: 		
0xE82E	0xB111    CBZ	R1, L_STMPE610_GetLastCoordinates65
;__Lib_STMPE610.c, 822 :: 		
0xE830	0xF8BD2012  LDRH	R2, [SP, #18]
0xE834	0x800A    STRH	R2, [R1, #0]
; y_coordinate end address is: 4 (R1)
L_STMPE610_GetLastCoordinates65:
;__Lib_STMPE610.c, 823 :: 		
L_STMPE610_GetLastCoordinates63:
;__Lib_STMPE610.c, 825 :: 		
0xE836	0xB2E8    UXTB	R0, R5
; r2 end address is: 20 (R5)
;__Lib_STMPE610.c, 826 :: 		
L_end_STMPE610_GetLastCoordinates:
0xE838	0xF8DDE000  LDR	LR, [SP, #0]
0xE83C	0xB005    ADD	SP, SP, #20
0xE83E	0x4770    BX	LR
; end of _STMPE610_GetLastCoordinates
_STMPE610_GetCoordinates:
;__Lib_STMPE610.c, 772 :: 		
; y_coordinate start address is: 4 (R1)
; x_coordinate start address is: 0 (R0)
0xBAB8	0xB085    SUB	SP, SP, #20
0xBABA	0xF8CDE000  STR	LR, [SP, #0]
0xBABE	0x460D    MOV	R5, R1
0xBAC0	0x4601    MOV	R1, R0
; y_coordinate end address is: 4 (R1)
; x_coordinate end address is: 0 (R0)
; x_coordinate start address is: 4 (R1)
; y_coordinate start address is: 20 (R5)
;__Lib_STMPE610.c, 777 :: 		
0xBAC2	0xAC04    ADD	R4, SP, #16
0xBAC4	0xF10D030E  ADD	R3, SP, #14
0xBAC8	0xAA03    ADD	R2, SP, #12
0xBACA	0x9501    STR	R5, [SP, #4]
0xBACC	0x9102    STR	R1, [SP, #8]
0xBACE	0x4619    MOV	R1, R3
0xBAD0	0x4610    MOV	R0, R2
0xBAD2	0x4622    MOV	R2, R4
0xBAD4	0xF7FDF9E0  BL	_STMPE610_GetXYZ+0
0xBAD8	0x9902    LDR	R1, [SP, #8]
0xBADA	0x9D01    LDR	R5, [SP, #4]
0xBADC	0xB108    CBZ	R0, L_STMPE610_GetCoordinates55
; x_coordinate end address is: 4 (R1)
; y_coordinate end address is: 20 (R5)
;__Lib_STMPE610.c, 778 :: 		
0xBADE	0x2001    MOVS	R0, #1
0xBAE0	0xE013    B	L_end_STMPE610_GetCoordinates
L_STMPE610_GetCoordinates55:
;__Lib_STMPE610.c, 789 :: 		
; y_coordinate start address is: 20 (R5)
; x_coordinate start address is: 4 (R1)
0xBAE2	0xF89D2010  LDRB	R2, [SP, #16]
0xBAE6	0xB13A    CBZ	R2, L_STMPE610_GetCoordinates56
;__Lib_STMPE610.c, 790 :: 		
0xBAE8	0x4A0A    LDR	R2, [PC, #40]
0xBAEA	0x7813    LDRB	R3, [R2, #0]
0xBAEC	0xF89D2010  LDRB	R2, [SP, #16]
0xBAF0	0x429A    CMP	R2, R3
0xBAF2	0xD901    BLS	L_STMPE610_GetCoordinates57
; x_coordinate end address is: 4 (R1)
; y_coordinate end address is: 20 (R5)
;__Lib_STMPE610.c, 791 :: 		
0xBAF4	0x2002    MOVS	R0, #2
0xBAF6	0xE008    B	L_end_STMPE610_GetCoordinates
L_STMPE610_GetCoordinates57:
; y_coordinate start address is: 20 (R5)
; x_coordinate start address is: 4 (R1)
L_STMPE610_GetCoordinates56:
;__Lib_STMPE610.c, 793 :: 		
0xBAF8	0xB111    CBZ	R1, L_STMPE610_GetCoordinates58
;__Lib_STMPE610.c, 794 :: 		
0xBAFA	0xF9BD200C  LDRSH	R2, [SP, #12]
0xBAFE	0x800A    STRH	R2, [R1, #0]
; x_coordinate end address is: 4 (R1)
L_STMPE610_GetCoordinates58:
;__Lib_STMPE610.c, 795 :: 		
0xBB00	0xB115    CBZ	R5, L_STMPE610_GetCoordinates59
;__Lib_STMPE610.c, 796 :: 		
0xBB02	0xF9BD200E  LDRSH	R2, [SP, #14]
0xBB06	0x802A    STRH	R2, [R5, #0]
; y_coordinate end address is: 20 (R5)
L_STMPE610_GetCoordinates59:
;__Lib_STMPE610.c, 798 :: 		
0xBB08	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 799 :: 		
L_end_STMPE610_GetCoordinates:
0xBB0A	0xF8DDE000  LDR	LR, [SP, #0]
0xBB0E	0xB005    ADD	SP, SP, #20
0xBB10	0x4770    BX	LR
0xBB12	0xBF00    NOP
0xBB14	0x2D592000  	__Lib_STMPE610_STMPE610_PRESSURE_THRESHOLD+0
; end of _STMPE610_GetCoordinates
_STMPE610_GetXYZ:
;__Lib_STMPE610.c, 684 :: 		
; z_data start address is: 8 (R2)
; y_data start address is: 4 (R1)
; x_data start address is: 0 (R0)
0x8E98	0xB086    SUB	SP, SP, #24
0x8E9A	0xF8CDE000  STR	LR, [SP, #0]
0x8E9E	0x4690    MOV	R8, R2
0x8EA0	0x460A    MOV	R2, R1
0x8EA2	0x4601    MOV	R1, R0
; z_data end address is: 8 (R2)
; y_data end address is: 4 (R1)
; x_data end address is: 0 (R0)
; x_data start address is: 4 (R1)
; y_data start address is: 8 (R2)
; z_data start address is: 32 (R8)
;__Lib_STMPE610.c, 689 :: 		
0x8EA4	0xAD05    ADD	R5, SP, #20
0x8EA6	0xF10D0412  ADD	R4, SP, #18
0x8EAA	0xAB04    ADD	R3, SP, #16
0x8EAC	0xF8CD8004  STR	R8, [SP, #4]
0x8EB0	0x9202    STR	R2, [SP, #8]
0x8EB2	0x9103    STR	R1, [SP, #12]
0x8EB4	0x462A    MOV	R2, R5
0x8EB6	0x4621    MOV	R1, R4
0x8EB8	0x4618    MOV	R0, R3
0x8EBA	0xF7FBFCD5  BL	_STMPE610_GetRawXYZ+0
0x8EBE	0x9903    LDR	R1, [SP, #12]
0x8EC0	0x9A02    LDR	R2, [SP, #8]
0x8EC2	0xF8DD8004  LDR	R8, [SP, #4]
0x8EC6	0xB108    CBZ	R0, L_STMPE610_GetXYZ40
; x_data end address is: 4 (R1)
; y_data end address is: 8 (R2)
; z_data end address is: 32 (R8)
;__Lib_STMPE610.c, 690 :: 		
0x8EC8	0x2001    MOVS	R0, #1
0x8ECA	0xE0CA    B	L_end_STMPE610_GetXYZ
L_STMPE610_GetXYZ40:
;__Lib_STMPE610.c, 692 :: 		
; z_data start address is: 32 (R8)
; y_data start address is: 8 (R2)
; x_data start address is: 4 (R1)
0x8ECC	0x4B67    LDR	R3, [PC, #412]
0x8ECE	0x881C    LDRH	R4, [R3, #0]
0x8ED0	0xF9BD3010  LDRSH	R3, [SP, #16]
0x8ED4	0x1B1B    SUB	R3, R3, R4
0x8ED6	0xF8AD3010  STRH	R3, [SP, #16]
;__Lib_STMPE610.c, 693 :: 		
0x8EDA	0x4B65    LDR	R3, [PC, #404]
0x8EDC	0x881C    LDRH	R4, [R3, #0]
0x8EDE	0xF9BD3012  LDRSH	R3, [SP, #18]
0x8EE2	0x1B1B    SUB	R3, R3, R4
0x8EE4	0xF8AD3012  STRH	R3, [SP, #18]
;__Lib_STMPE610.c, 695 :: 		
0x8EE8	0xE098    B	L_STMPE610_GetXYZ41
;__Lib_STMPE610.c, 696 :: 		
L_STMPE610_GetXYZ43:
;__Lib_STMPE610.c, 697 :: 		
0x8EEA	0xF9BD4010  LDRSH	R4, [SP, #16]
0x8EEE	0x4B61    LDR	R3, [PC, #388]
0x8EF0	0x881B    LDRH	R3, [R3, #0]
0x8EF2	0xFB04F503  MUL	R5, R4, R3
0x8EF6	0x4B5D    LDR	R3, [PC, #372]
0x8EF8	0x881C    LDRH	R4, [R3, #0]
0x8EFA	0x4B5F    LDR	R3, [PC, #380]
0x8EFC	0x881B    LDRH	R3, [R3, #0]
0x8EFE	0x1B1B    SUB	R3, R3, R4
0x8F00	0xB29B    UXTH	R3, R3
0x8F02	0xFB95F3F3  SDIV	R3, R5, R3
0x8F06	0xF8AD3010  STRH	R3, [SP, #16]
;__Lib_STMPE610.c, 698 :: 		
0x8F0A	0xF9BD4012  LDRSH	R4, [SP, #18]
0x8F0E	0x4B5B    LDR	R3, [PC, #364]
0x8F10	0x881B    LDRH	R3, [R3, #0]
0x8F12	0xFB04F503  MUL	R5, R4, R3
0x8F16	0x4B56    LDR	R3, [PC, #344]
0x8F18	0x881C    LDRH	R4, [R3, #0]
0x8F1A	0x4B59    LDR	R3, [PC, #356]
0x8F1C	0x881B    LDRH	R3, [R3, #0]
0x8F1E	0x1B1B    SUB	R3, R3, R4
0x8F20	0xB29B    UXTH	R3, R3
0x8F22	0xFB95F3F3  SDIV	R3, R5, R3
0x8F26	0xF8AD3012  STRH	R3, [SP, #18]
;__Lib_STMPE610.c, 699 :: 		
0x8F2A	0xE08A    B	L_STMPE610_GetXYZ42
;__Lib_STMPE610.c, 701 :: 		
L_STMPE610_GetXYZ44:
;__Lib_STMPE610.c, 702 :: 		
; tmp start address is: 0 (R0)
0x8F2C	0xF9BD0012  LDRSH	R0, [SP, #18]
;__Lib_STMPE610.c, 703 :: 		
0x8F30	0xF9BD4010  LDRSH	R4, [SP, #16]
0x8F34	0x4E51    LDR	R6, [PC, #324]
0x8F36	0x8833    LDRH	R3, [R6, #0]
0x8F38	0xFB04F503  MUL	R5, R4, R3
0x8F3C	0x4B4B    LDR	R3, [PC, #300]
0x8F3E	0x881C    LDRH	R4, [R3, #0]
0x8F40	0x4B4D    LDR	R3, [PC, #308]
0x8F42	0x881B    LDRH	R3, [R3, #0]
0x8F44	0x1B1B    SUB	R3, R3, R4
0x8F46	0xB29B    UXTH	R3, R3
0x8F48	0xFB95F4F3  SDIV	R4, R5, R3
0x8F4C	0x4633    MOV	R3, R6
0x8F4E	0x881B    LDRH	R3, [R3, #0]
0x8F50	0x1B1B    SUB	R3, R3, R4
0x8F52	0xF8AD3012  STRH	R3, [SP, #18]
;__Lib_STMPE610.c, 704 :: 		
0x8F56	0xB204    SXTH	R4, R0
; tmp end address is: 0 (R0)
0x8F58	0x4B46    LDR	R3, [PC, #280]
0x8F5A	0x881B    LDRH	R3, [R3, #0]
0x8F5C	0xFB04F503  MUL	R5, R4, R3
0x8F60	0x4B43    LDR	R3, [PC, #268]
0x8F62	0x881C    LDRH	R4, [R3, #0]
0x8F64	0x4B46    LDR	R3, [PC, #280]
0x8F66	0x881B    LDRH	R3, [R3, #0]
0x8F68	0x1B1B    SUB	R3, R3, R4
0x8F6A	0xB29B    UXTH	R3, R3
0x8F6C	0xFB95F3F3  SDIV	R3, R5, R3
0x8F70	0xF8AD3010  STRH	R3, [SP, #16]
;__Lib_STMPE610.c, 705 :: 		
0x8F74	0xE065    B	L_STMPE610_GetXYZ42
;__Lib_STMPE610.c, 707 :: 		
L_STMPE610_GetXYZ45:
;__Lib_STMPE610.c, 708 :: 		
0x8F76	0xF9BD4010  LDRSH	R4, [SP, #16]
0x8F7A	0x4F3E    LDR	R7, [PC, #248]
0x8F7C	0x883B    LDRH	R3, [R7, #0]
0x8F7E	0xFB04F503  MUL	R5, R4, R3
0x8F82	0x4B3A    LDR	R3, [PC, #232]
0x8F84	0x881C    LDRH	R4, [R3, #0]
0x8F86	0x4B3C    LDR	R3, [PC, #240]
0x8F88	0x881B    LDRH	R3, [R3, #0]
0x8F8A	0x1B1B    SUB	R3, R3, R4
0x8F8C	0xB29B    UXTH	R3, R3
0x8F8E	0xFB95F3F3  SDIV	R3, R5, R3
0x8F92	0xF8AD3010  STRH	R3, [SP, #16]
;__Lib_STMPE610.c, 709 :: 		
0x8F96	0xF9BD4012  LDRSH	R4, [SP, #18]
0x8F9A	0x4E38    LDR	R6, [PC, #224]
0x8F9C	0x8833    LDRH	R3, [R6, #0]
0x8F9E	0xFB04F503  MUL	R5, R4, R3
0x8FA2	0x4B33    LDR	R3, [PC, #204]
0x8FA4	0x881C    LDRH	R4, [R3, #0]
0x8FA6	0x4B36    LDR	R3, [PC, #216]
0x8FA8	0x881B    LDRH	R3, [R3, #0]
0x8FAA	0x1B1B    SUB	R3, R3, R4
0x8FAC	0xB29B    UXTH	R3, R3
0x8FAE	0xFB95F3F3  SDIV	R3, R5, R3
0x8FB2	0xF8AD3012  STRH	R3, [SP, #18]
;__Lib_STMPE610.c, 710 :: 		
0x8FB6	0xB29C    UXTH	R4, R3
0x8FB8	0x4633    MOV	R3, R6
0x8FBA	0x881B    LDRH	R3, [R3, #0]
0x8FBC	0x1B1B    SUB	R3, R3, R4
0x8FBE	0xF8AD3012  STRH	R3, [SP, #18]
;__Lib_STMPE610.c, 711 :: 		
0x8FC2	0xF9BD4010  LDRSH	R4, [SP, #16]
0x8FC6	0x463B    MOV	R3, R7
0x8FC8	0x881B    LDRH	R3, [R3, #0]
0x8FCA	0x1B1B    SUB	R3, R3, R4
0x8FCC	0xF8AD3010  STRH	R3, [SP, #16]
;__Lib_STMPE610.c, 712 :: 		
0x8FD0	0xE037    B	L_STMPE610_GetXYZ42
;__Lib_STMPE610.c, 714 :: 		
L_STMPE610_GetXYZ46:
;__Lib_STMPE610.c, 715 :: 		
; tmp start address is: 0 (R0)
0x8FD2	0xF9BD0012  LDRSH	R0, [SP, #18]
;__Lib_STMPE610.c, 716 :: 		
0x8FD6	0xF9BD4010  LDRSH	R4, [SP, #16]
0x8FDA	0x4B28    LDR	R3, [PC, #160]
0x8FDC	0x881B    LDRH	R3, [R3, #0]
0x8FDE	0xFB04F503  MUL	R5, R4, R3
0x8FE2	0x4B22    LDR	R3, [PC, #136]
0x8FE4	0x881C    LDRH	R4, [R3, #0]
0x8FE6	0x4B24    LDR	R3, [PC, #144]
0x8FE8	0x881B    LDRH	R3, [R3, #0]
0x8FEA	0x1B1B    SUB	R3, R3, R4
0x8FEC	0xB29B    UXTH	R3, R3
0x8FEE	0xFB95F3F3  SDIV	R3, R5, R3
0x8FF2	0xF8AD3012  STRH	R3, [SP, #18]
;__Lib_STMPE610.c, 717 :: 		
0x8FF6	0xB204    SXTH	R4, R0
; tmp end address is: 0 (R0)
0x8FF8	0x4E1E    LDR	R6, [PC, #120]
0x8FFA	0x8833    LDRH	R3, [R6, #0]
0x8FFC	0xFB04F503  MUL	R5, R4, R3
0x9000	0x4B1B    LDR	R3, [PC, #108]
0x9002	0x881C    LDRH	R4, [R3, #0]
0x9004	0x4B1E    LDR	R3, [PC, #120]
0x9006	0x881B    LDRH	R3, [R3, #0]
0x9008	0x1B1B    SUB	R3, R3, R4
0x900A	0xB29B    UXTH	R3, R3
0x900C	0xFB95F4F3  SDIV	R4, R5, R3
0x9010	0x4633    MOV	R3, R6
0x9012	0x881B    LDRH	R3, [R3, #0]
0x9014	0x1B1B    SUB	R3, R3, R4
0x9016	0xF8AD3010  STRH	R3, [SP, #16]
;__Lib_STMPE610.c, 718 :: 		
0x901A	0xE012    B	L_STMPE610_GetXYZ42
;__Lib_STMPE610.c, 720 :: 		
L_STMPE610_GetXYZ41:
0x901C	0x4B19    LDR	R3, [PC, #100]
0x901E	0x781B    LDRB	R3, [R3, #0]
0x9020	0x2B00    CMP	R3, #0
0x9022	0xF43FAF62  BEQ	L_STMPE610_GetXYZ43
0x9026	0x4B17    LDR	R3, [PC, #92]
0x9028	0x781B    LDRB	R3, [R3, #0]
0x902A	0x2B01    CMP	R3, #1
0x902C	0xF43FAF7E  BEQ	L_STMPE610_GetXYZ44
0x9030	0x4B14    LDR	R3, [PC, #80]
0x9032	0x781B    LDRB	R3, [R3, #0]
0x9034	0x2B02    CMP	R3, #2
0x9036	0xF43FAF9E  BEQ	L_STMPE610_GetXYZ45
0x903A	0x4B12    LDR	R3, [PC, #72]
0x903C	0x781B    LDRB	R3, [R3, #0]
0x903E	0x2B03    CMP	R3, #3
0x9040	0xD0C7    BEQ	L_STMPE610_GetXYZ46
L_STMPE610_GetXYZ42:
;__Lib_STMPE610.c, 723 :: 		
0x9042	0xB111    CBZ	R1, L_STMPE610_GetXYZ47
;__Lib_STMPE610.c, 724 :: 		
0x9044	0xF9BD3010  LDRSH	R3, [SP, #16]
0x9048	0x800B    STRH	R3, [R1, #0]
; x_data end address is: 4 (R1)
L_STMPE610_GetXYZ47:
;__Lib_STMPE610.c, 725 :: 		
0x904A	0xB112    CBZ	R2, L_STMPE610_GetXYZ48
;__Lib_STMPE610.c, 726 :: 		
0x904C	0xF9BD3012  LDRSH	R3, [SP, #18]
0x9050	0x8013    STRH	R3, [R2, #0]
; y_data end address is: 8 (R2)
L_STMPE610_GetXYZ48:
;__Lib_STMPE610.c, 727 :: 		
0x9052	0xF1B80F00  CMP	R8, #0
0x9056	0xD003    BEQ	L_STMPE610_GetXYZ49
;__Lib_STMPE610.c, 728 :: 		
0x9058	0xF89D3014  LDRB	R3, [SP, #20]
0x905C	0xF8883000  STRB	R3, [R8, #0]
; z_data end address is: 32 (R8)
L_STMPE610_GetXYZ49:
;__Lib_STMPE610.c, 730 :: 		
0x9060	0x2000    MOVS	R0, #0
;__Lib_STMPE610.c, 731 :: 		
L_end_STMPE610_GetXYZ:
0x9062	0xF8DDE000  LDR	LR, [SP, #0]
0x9066	0xB006    ADD	SP, SP, #24
0x9068	0x4770    BX	LR
0x906A	0xBF00    NOP
0x906C	0x2DB42000  	__Lib_STMPE610_CAL_X_MIN+0
0x9070	0x2DB62000  	__Lib_STMPE610_CAL_Y_MIN+0
0x9074	0x2DC02000  	__Lib_STMPE610_STMPE610_TP_WIDTH+0
0x9078	0x2DC22000  	__Lib_STMPE610_CAL_X_MAX+0
0x907C	0x2DC42000  	__Lib_STMPE610_STMPE610_TP_HEIGHT+0
0x9080	0x2DC62000  	__Lib_STMPE610_CAL_Y_MAX+0
0x9084	0x2DBD2000  	__Lib_STMPE610_TPOrientation+5
; end of _STMPE610_GetXYZ
_Process_TP_Press:
;Ducati_logger_driver.c, 4212 :: 		void Process_TP_Press(unsigned int X, unsigned int Y) {
; Y start address is: 4 (R1)
; X start address is: 0 (R0)
0xE840	0xB081    SUB	SP, SP, #4
0xE842	0xF8CDE000  STR	LR, [SP, #0]
; Y end address is: 4 (R1)
; X end address is: 0 (R0)
; X start address is: 0 (R0)
; Y start address is: 4 (R1)
;Ducati_logger_driver.c, 4213 :: 		exec_round_button   = 0;
0xE846	0x2300    MOVS	R3, #0
0xE848	0x4A75    LDR	R2, [PC, #468]
0xE84A	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4214 :: 		exec_label          = 0;
0xE84C	0x2300    MOVS	R3, #0
0xE84E	0x4A75    LDR	R2, [PC, #468]
0xE850	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4215 :: 		exec_image          = 0;
0xE852	0x2300    MOVS	R3, #0
0xE854	0x4A74    LDR	R2, [PC, #464]
0xE856	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4216 :: 		exec_cimage         = 0;
0xE858	0x2300    MOVS	R3, #0
0xE85A	0x4A74    LDR	R2, [PC, #464]
0xE85C	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4217 :: 		exec_circle         = 0;
0xE85E	0x2300    MOVS	R3, #0
0xE860	0x4A73    LDR	R2, [PC, #460]
0xE862	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4218 :: 		exec_circle_button  = 0;
0xE864	0x2300    MOVS	R3, #0
0xE866	0x4A73    LDR	R2, [PC, #460]
0xE868	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4219 :: 		exec_box            = 0;
0xE86A	0x2300    MOVS	R3, #0
0xE86C	0x4A72    LDR	R2, [PC, #456]
0xE86E	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4220 :: 		exec_cbox           = 0;
0xE870	0x2300    MOVS	R3, #0
0xE872	0x4A72    LDR	R2, [PC, #456]
0xE874	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4222 :: 		Get_Object(X, Y);
; Y end address is: 4 (R1)
; X end address is: 0 (R0)
0xE876	0xF7FCFDBF  BL	_Get_Object+0
;Ducati_logger_driver.c, 4224 :: 		if (_object_count != -1) {
0xE87A	0x4A71    LDR	R2, [PC, #452]
0xE87C	0xF9B22000  LDRSH	R2, [R2, #0]
0xE880	0xF1B23FFF  CMP	R2, #-1
0xE884	0xF00080C8  BEQ	L_Process_TP_Press119
;Ducati_logger_driver.c, 4225 :: 		if (_object_count == round_button_order) {
0xE888	0x4A6E    LDR	R2, [PC, #440]
0xE88A	0xF9B23000  LDRSH	R3, [R2, #0]
0xE88E	0x4A6C    LDR	R2, [PC, #432]
0xE890	0xF9B22000  LDRSH	R2, [R2, #0]
0xE894	0x429A    CMP	R2, R3
0xE896	0xD110    BNE	L_Process_TP_Press120
;Ducati_logger_driver.c, 4226 :: 		if (exec_round_button->Active == 1) {
0xE898	0x4A61    LDR	R2, [PC, #388]
0xE89A	0x6812    LDR	R2, [R2, #0]
0xE89C	0x3213    ADDS	R2, #19
0xE89E	0x7812    LDRB	R2, [R2, #0]
0xE8A0	0x2A01    CMP	R2, #1
0xE8A2	0xD10A    BNE	L_Process_TP_Press121
;Ducati_logger_driver.c, 4227 :: 		if (exec_round_button->OnPressPtr != 0) {
0xE8A4	0x4C5E    LDR	R4, [PC, #376]
0xE8A6	0x6824    LDR	R4, [R4, #0]
0xE8A8	0x3440    ADDS	R4, #64
0xE8AA	0x6824    LDR	R4, [R4, #0]
0xE8AC	0xB12C    CBZ	R4, L_Process_TP_Press122
;Ducati_logger_driver.c, 4228 :: 		exec_round_button->OnPressPtr();
0xE8AE	0x4C5C    LDR	R4, [PC, #368]
0xE8B0	0x6824    LDR	R4, [R4, #0]
0xE8B2	0x3440    ADDS	R4, #64
0xE8B4	0x6822    LDR	R2, [R4, #0]
0xE8B6	0x4790    BLX	R2
;Ducati_logger_driver.c, 4229 :: 		return;
0xE8B8	0xE0AE    B	L_end_Process_TP_Press
;Ducati_logger_driver.c, 4230 :: 		}
L_Process_TP_Press122:
;Ducati_logger_driver.c, 4231 :: 		}
L_Process_TP_Press121:
;Ducati_logger_driver.c, 4232 :: 		}
L_Process_TP_Press120:
;Ducati_logger_driver.c, 4234 :: 		if (_object_count == label_order) {
0xE8BA	0x4A63    LDR	R2, [PC, #396]
0xE8BC	0xF9B23000  LDRSH	R3, [R2, #0]
0xE8C0	0x4A5F    LDR	R2, [PC, #380]
0xE8C2	0xF9B22000  LDRSH	R2, [R2, #0]
0xE8C6	0x429A    CMP	R2, R3
0xE8C8	0xD110    BNE	L_Process_TP_Press123
;Ducati_logger_driver.c, 4235 :: 		if (exec_label->Active == 1) {
0xE8CA	0x4A56    LDR	R2, [PC, #344]
0xE8CC	0x6812    LDR	R2, [R2, #0]
0xE8CE	0x321B    ADDS	R2, #27
0xE8D0	0x7812    LDRB	R2, [R2, #0]
0xE8D2	0x2A01    CMP	R2, #1
0xE8D4	0xD10A    BNE	L_Process_TP_Press124
;Ducati_logger_driver.c, 4236 :: 		if (exec_label->OnPressPtr != 0) {
0xE8D6	0x4C53    LDR	R4, [PC, #332]
0xE8D8	0x6824    LDR	R4, [R4, #0]
0xE8DA	0x3428    ADDS	R4, #40
0xE8DC	0x6824    LDR	R4, [R4, #0]
0xE8DE	0xB12C    CBZ	R4, L_Process_TP_Press125
;Ducati_logger_driver.c, 4237 :: 		exec_label->OnPressPtr();
0xE8E0	0x4C50    LDR	R4, [PC, #320]
0xE8E2	0x6824    LDR	R4, [R4, #0]
0xE8E4	0x3428    ADDS	R4, #40
0xE8E6	0x6822    LDR	R2, [R4, #0]
0xE8E8	0x4790    BLX	R2
;Ducati_logger_driver.c, 4238 :: 		return;
0xE8EA	0xE095    B	L_end_Process_TP_Press
;Ducati_logger_driver.c, 4239 :: 		}
L_Process_TP_Press125:
;Ducati_logger_driver.c, 4240 :: 		}
L_Process_TP_Press124:
;Ducati_logger_driver.c, 4241 :: 		}
L_Process_TP_Press123:
;Ducati_logger_driver.c, 4243 :: 		if (_object_count == image_order) {
0xE8EC	0x4A57    LDR	R2, [PC, #348]
0xE8EE	0xF9B23000  LDRSH	R3, [R2, #0]
0xE8F2	0x4A53    LDR	R2, [PC, #332]
0xE8F4	0xF9B22000  LDRSH	R2, [R2, #0]
0xE8F8	0x429A    CMP	R2, R3
0xE8FA	0xD110    BNE	L_Process_TP_Press126
;Ducati_logger_driver.c, 4244 :: 		if (exec_image->Active == 1) {
0xE8FC	0x4A4A    LDR	R2, [PC, #296]
0xE8FE	0x6812    LDR	R2, [R2, #0]
0xE900	0x3215    ADDS	R2, #21
0xE902	0x7812    LDRB	R2, [R2, #0]
0xE904	0x2A01    CMP	R2, #1
0xE906	0xD10A    BNE	L_Process_TP_Press127
;Ducati_logger_driver.c, 4245 :: 		if (exec_image->OnPressPtr != 0) {
0xE908	0x4C47    LDR	R4, [PC, #284]
0xE90A	0x6824    LDR	R4, [R4, #0]
0xE90C	0x3424    ADDS	R4, #36
0xE90E	0x6824    LDR	R4, [R4, #0]
0xE910	0xB12C    CBZ	R4, L_Process_TP_Press128
;Ducati_logger_driver.c, 4246 :: 		exec_image->OnPressPtr();
0xE912	0x4C45    LDR	R4, [PC, #276]
0xE914	0x6824    LDR	R4, [R4, #0]
0xE916	0x3424    ADDS	R4, #36
0xE918	0x6822    LDR	R2, [R4, #0]
0xE91A	0x4790    BLX	R2
;Ducati_logger_driver.c, 4247 :: 		return;
0xE91C	0xE07C    B	L_end_Process_TP_Press
;Ducati_logger_driver.c, 4248 :: 		}
L_Process_TP_Press128:
;Ducati_logger_driver.c, 4249 :: 		}
L_Process_TP_Press127:
;Ducati_logger_driver.c, 4250 :: 		}
L_Process_TP_Press126:
;Ducati_logger_driver.c, 4252 :: 		if (_object_count == cimage_order) {
0xE91E	0x4A4C    LDR	R2, [PC, #304]
0xE920	0xF9B23000  LDRSH	R3, [R2, #0]
0xE924	0x4A46    LDR	R2, [PC, #280]
0xE926	0xF9B22000  LDRSH	R2, [R2, #0]
0xE92A	0x429A    CMP	R2, R3
0xE92C	0xD110    BNE	L_Process_TP_Press129
;Ducati_logger_driver.c, 4253 :: 		if (exec_cimage->Active == 1) {
0xE92E	0x4A3F    LDR	R2, [PC, #252]
0xE930	0x6812    LDR	R2, [R2, #0]
0xE932	0x3215    ADDS	R2, #21
0xE934	0x7812    LDRB	R2, [R2, #0]
0xE936	0x2A01    CMP	R2, #1
0xE938	0xD10A    BNE	L_Process_TP_Press130
;Ducati_logger_driver.c, 4254 :: 		if (exec_cimage->OnPressPtr != 0) {
0xE93A	0x4C3C    LDR	R4, [PC, #240]
0xE93C	0x6824    LDR	R4, [R4, #0]
0xE93E	0x3424    ADDS	R4, #36
0xE940	0x6824    LDR	R4, [R4, #0]
0xE942	0xB12C    CBZ	R4, L_Process_TP_Press131
;Ducati_logger_driver.c, 4255 :: 		exec_cimage->OnPressPtr();
0xE944	0x4C39    LDR	R4, [PC, #228]
0xE946	0x6824    LDR	R4, [R4, #0]
0xE948	0x3424    ADDS	R4, #36
0xE94A	0x6822    LDR	R2, [R4, #0]
0xE94C	0x4790    BLX	R2
;Ducati_logger_driver.c, 4256 :: 		return;
0xE94E	0xE063    B	L_end_Process_TP_Press
;Ducati_logger_driver.c, 4257 :: 		}
L_Process_TP_Press131:
;Ducati_logger_driver.c, 4258 :: 		}
L_Process_TP_Press130:
;Ducati_logger_driver.c, 4259 :: 		}
L_Process_TP_Press129:
;Ducati_logger_driver.c, 4261 :: 		if (_object_count == circle_order) {
0xE950	0x4A40    LDR	R2, [PC, #256]
0xE952	0xF9B23000  LDRSH	R3, [R2, #0]
0xE956	0x4A3A    LDR	R2, [PC, #232]
0xE958	0xF9B22000  LDRSH	R2, [R2, #0]
0xE95C	0x429A    CMP	R2, R3
0xE95E	0xD110    BNE	L_Process_TP_Press132
;Ducati_logger_driver.c, 4262 :: 		if (exec_circle->Active == 1) {
0xE960	0x4A33    LDR	R2, [PC, #204]
0xE962	0x6812    LDR	R2, [R2, #0]
0xE964	0x3211    ADDS	R2, #17
0xE966	0x7812    LDRB	R2, [R2, #0]
0xE968	0x2A01    CMP	R2, #1
0xE96A	0xD10A    BNE	L_Process_TP_Press133
;Ducati_logger_driver.c, 4263 :: 		if (exec_circle->OnPressPtr != 0) {
0xE96C	0x4C30    LDR	R4, [PC, #192]
0xE96E	0x6824    LDR	R4, [R4, #0]
0xE970	0x342C    ADDS	R4, #44
0xE972	0x6824    LDR	R4, [R4, #0]
0xE974	0xB12C    CBZ	R4, L_Process_TP_Press134
;Ducati_logger_driver.c, 4264 :: 		exec_circle->OnPressPtr();
0xE976	0x4C2E    LDR	R4, [PC, #184]
0xE978	0x6824    LDR	R4, [R4, #0]
0xE97A	0x342C    ADDS	R4, #44
0xE97C	0x6822    LDR	R2, [R4, #0]
0xE97E	0x4790    BLX	R2
;Ducati_logger_driver.c, 4265 :: 		return;
0xE980	0xE04A    B	L_end_Process_TP_Press
;Ducati_logger_driver.c, 4266 :: 		}
L_Process_TP_Press134:
;Ducati_logger_driver.c, 4267 :: 		}
L_Process_TP_Press133:
;Ducati_logger_driver.c, 4268 :: 		}
L_Process_TP_Press132:
;Ducati_logger_driver.c, 4270 :: 		if (_object_count == circle_button_order) {
0xE982	0x4A35    LDR	R2, [PC, #212]
0xE984	0xF9B23000  LDRSH	R3, [R2, #0]
0xE988	0x4A2D    LDR	R2, [PC, #180]
0xE98A	0xF9B22000  LDRSH	R2, [R2, #0]
0xE98E	0x429A    CMP	R2, R3
0xE990	0xD110    BNE	L_Process_TP_Press135
;Ducati_logger_driver.c, 4271 :: 		if (exec_circle_button->Active == 1) {
0xE992	0x4A28    LDR	R2, [PC, #160]
0xE994	0x6812    LDR	R2, [R2, #0]
0xE996	0x3211    ADDS	R2, #17
0xE998	0x7812    LDRB	R2, [R2, #0]
0xE99A	0x2A01    CMP	R2, #1
0xE99C	0xD10A    BNE	L_Process_TP_Press136
;Ducati_logger_driver.c, 4272 :: 		if (exec_circle_button->OnPressPtr != 0) {
0xE99E	0x4C25    LDR	R4, [PC, #148]
0xE9A0	0x6824    LDR	R4, [R4, #0]
0xE9A2	0x343C    ADDS	R4, #60
0xE9A4	0x6824    LDR	R4, [R4, #0]
0xE9A6	0xB12C    CBZ	R4, L_Process_TP_Press137
;Ducati_logger_driver.c, 4273 :: 		exec_circle_button->OnPressPtr();
0xE9A8	0x4C22    LDR	R4, [PC, #136]
0xE9AA	0x6824    LDR	R4, [R4, #0]
0xE9AC	0x343C    ADDS	R4, #60
0xE9AE	0x6822    LDR	R2, [R4, #0]
0xE9B0	0x4790    BLX	R2
;Ducati_logger_driver.c, 4274 :: 		return;
0xE9B2	0xE031    B	L_end_Process_TP_Press
;Ducati_logger_driver.c, 4275 :: 		}
L_Process_TP_Press137:
;Ducati_logger_driver.c, 4276 :: 		}
L_Process_TP_Press136:
;Ducati_logger_driver.c, 4277 :: 		}
L_Process_TP_Press135:
;Ducati_logger_driver.c, 4279 :: 		if (_object_count == box_order) {
0xE9B4	0x4A29    LDR	R2, [PC, #164]
0xE9B6	0xF9B23000  LDRSH	R3, [R2, #0]
0xE9BA	0x4A21    LDR	R2, [PC, #132]
0xE9BC	0xF9B22000  LDRSH	R2, [R2, #0]
0xE9C0	0x429A    CMP	R2, R3
0xE9C2	0xD110    BNE	L_Process_TP_Press138
;Ducati_logger_driver.c, 4280 :: 		if (exec_box->Active == 1) {
0xE9C4	0x4A1C    LDR	R2, [PC, #112]
0xE9C6	0x6812    LDR	R2, [R2, #0]
0xE9C8	0x3213    ADDS	R2, #19
0xE9CA	0x7812    LDRB	R2, [R2, #0]
0xE9CC	0x2A01    CMP	R2, #1
0xE9CE	0xD10A    BNE	L_Process_TP_Press139
;Ducati_logger_driver.c, 4281 :: 		if (exec_box->OnPressPtr != 0) {
0xE9D0	0x4C19    LDR	R4, [PC, #100]
0xE9D2	0x6824    LDR	R4, [R4, #0]
0xE9D4	0x3430    ADDS	R4, #48
0xE9D6	0x6824    LDR	R4, [R4, #0]
0xE9D8	0xB12C    CBZ	R4, L_Process_TP_Press140
;Ducati_logger_driver.c, 4282 :: 		exec_box->OnPressPtr();
0xE9DA	0x4C17    LDR	R4, [PC, #92]
0xE9DC	0x6824    LDR	R4, [R4, #0]
0xE9DE	0x3430    ADDS	R4, #48
0xE9E0	0x6822    LDR	R2, [R4, #0]
0xE9E2	0x4790    BLX	R2
;Ducati_logger_driver.c, 4283 :: 		return;
0xE9E4	0xE018    B	L_end_Process_TP_Press
;Ducati_logger_driver.c, 4284 :: 		}
L_Process_TP_Press140:
;Ducati_logger_driver.c, 4285 :: 		}
L_Process_TP_Press139:
;Ducati_logger_driver.c, 4286 :: 		}
L_Process_TP_Press138:
;Ducati_logger_driver.c, 4288 :: 		if (_object_count == cbox_order) {
0xE9E6	0x4A1E    LDR	R2, [PC, #120]
0xE9E8	0xF9B23000  LDRSH	R3, [R2, #0]
0xE9EC	0x4A14    LDR	R2, [PC, #80]
0xE9EE	0xF9B22000  LDRSH	R2, [R2, #0]
0xE9F2	0x429A    CMP	R2, R3
0xE9F4	0xD110    BNE	L_Process_TP_Press141
;Ducati_logger_driver.c, 4289 :: 		if (exec_cbox->Active == 1) {
0xE9F6	0x4A11    LDR	R2, [PC, #68]
0xE9F8	0x6812    LDR	R2, [R2, #0]
0xE9FA	0x3213    ADDS	R2, #19
0xE9FC	0x7812    LDRB	R2, [R2, #0]
0xE9FE	0x2A01    CMP	R2, #1
0xEA00	0xD10A    BNE	L_Process_TP_Press142
;Ducati_logger_driver.c, 4290 :: 		if (exec_cbox->OnPressPtr != 0) {
0xEA02	0x4C0E    LDR	R4, [PC, #56]
0xEA04	0x6824    LDR	R4, [R4, #0]
0xEA06	0x3430    ADDS	R4, #48
0xEA08	0x6824    LDR	R4, [R4, #0]
0xEA0A	0xB12C    CBZ	R4, L_Process_TP_Press143
;Ducati_logger_driver.c, 4291 :: 		exec_cbox->OnPressPtr();
0xEA0C	0x4C0B    LDR	R4, [PC, #44]
0xEA0E	0x6824    LDR	R4, [R4, #0]
0xEA10	0x3430    ADDS	R4, #48
0xEA12	0x6822    LDR	R2, [R4, #0]
0xEA14	0x4790    BLX	R2
;Ducati_logger_driver.c, 4292 :: 		return;
0xEA16	0xE7FF    B	L_end_Process_TP_Press
;Ducati_logger_driver.c, 4293 :: 		}
L_Process_TP_Press143:
;Ducati_logger_driver.c, 4294 :: 		}
L_Process_TP_Press142:
;Ducati_logger_driver.c, 4295 :: 		}
L_Process_TP_Press141:
;Ducati_logger_driver.c, 4297 :: 		}
L_Process_TP_Press119:
;Ducati_logger_driver.c, 4298 :: 		}
L_end_Process_TP_Press:
0xEA18	0xF8DDE000  LDR	LR, [SP, #0]
0xEA1C	0xB001    ADD	SP, SP, #4
0xEA1E	0x4770    BX	LR
0xEA20	0x222C2000  	_exec_round_button+0
0xEA24	0x22302000  	_exec_label+0
0xEA28	0x22342000  	_exec_image+0
0xEA2C	0x22382000  	_exec_cimage+0
0xEA30	0x223C2000  	_exec_circle+0
0xEA34	0x22402000  	_exec_circle_button+0
0xEA38	0x22442000  	_exec_box+0
0xEA3C	0x22482000  	_exec_cbox+0
0xEA40	0x222A2000  	__object_count+0
0xEA44	0x224C2000  	_round_button_order+0
0xEA48	0x22542000  	_label_order+0
0xEA4C	0x22562000  	_image_order+0
0xEA50	0x22582000  	_cimage_order+0
0xEA54	0x225A2000  	_circle_order+0
0xEA58	0x225C2000  	_circle_button_order+0
0xEA5C	0x225E2000  	_box_order+0
0xEA60	0x22602000  	_cbox_order+0
; end of _Process_TP_Press
_Get_Object:
;Ducati_logger_driver.c, 4087 :: 		void Get_Object(unsigned int X, unsigned int Y) {
; Y start address is: 4 (R1)
; X start address is: 0 (R0)
0xB3F8	0xB082    SUB	SP, SP, #8
0xB3FA	0xF8CDE000  STR	LR, [SP, #0]
; Y end address is: 4 (R1)
; X end address is: 0 (R0)
; X start address is: 0 (R0)
; Y start address is: 4 (R1)
;Ducati_logger_driver.c, 4088 :: 		round_button_order  = -1;
0xB3FE	0xF64F73FF  MOVW	R3, #65535
0xB402	0xB21B    SXTH	R3, R3
0xB404	0x4AB1    LDR	R2, [PC, #708]
0xB406	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4089 :: 		label_order         = -1;
0xB408	0xF64F73FF  MOVW	R3, #65535
0xB40C	0xB21B    SXTH	R3, R3
0xB40E	0x4AB0    LDR	R2, [PC, #704]
0xB410	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4090 :: 		image_order         = -1;
0xB412	0xF64F73FF  MOVW	R3, #65535
0xB416	0xB21B    SXTH	R3, R3
0xB418	0x4AAE    LDR	R2, [PC, #696]
0xB41A	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4091 :: 		cimage_order        = -1;
0xB41C	0xF64F73FF  MOVW	R3, #65535
0xB420	0xB21B    SXTH	R3, R3
0xB422	0x4AAD    LDR	R2, [PC, #692]
0xB424	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4092 :: 		circle_order        = -1;
0xB426	0xF64F73FF  MOVW	R3, #65535
0xB42A	0xB21B    SXTH	R3, R3
0xB42C	0x4AAB    LDR	R2, [PC, #684]
0xB42E	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4093 :: 		circle_button_order = -1;
0xB430	0xF64F73FF  MOVW	R3, #65535
0xB434	0xB21B    SXTH	R3, R3
0xB436	0x4AAA    LDR	R2, [PC, #680]
0xB438	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4094 :: 		box_order           = -1;
0xB43A	0xF64F73FF  MOVW	R3, #65535
0xB43E	0xB21B    SXTH	R3, R3
0xB440	0x4AA8    LDR	R2, [PC, #672]
0xB442	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4095 :: 		cbox_order          = -1;
0xB444	0xF64F73FF  MOVW	R3, #65535
0xB448	0xB21B    SXTH	R3, R3
0xB44A	0x4AA7    LDR	R2, [PC, #668]
0xB44C	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4097 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->Buttons_RoundCount ; _object_count++ ) {
0xB44E	0x2300    MOVS	R3, #0
0xB450	0xB21B    SXTH	R3, R3
0xB452	0x4AA6    LDR	R2, [PC, #664]
0xB454	0x8013    STRH	R3, [R2, #0]
; X end address is: 0 (R0)
; Y end address is: 4 (R1)
0xB456	0xFA1FF880  UXTH	R8, R0
0xB45A	0xB28F    UXTH	R7, R1
L_Get_Object71:
; Y start address is: 28 (R7)
; X start address is: 32 (R8)
0xB45C	0x4AA4    LDR	R2, [PC, #656]
0xB45E	0x6812    LDR	R2, [R2, #0]
0xB460	0x3208    ADDS	R2, #8
0xB462	0x8813    LDRH	R3, [R2, #0]
0xB464	0x4AA1    LDR	R2, [PC, #644]
0xB466	0xF9B22000  LDRSH	R2, [R2, #0]
0xB46A	0x429A    CMP	R2, R3
0xB46C	0xD23D    BCS	L_Get_Object72
;Ducati_logger_driver.c, 4098 :: 		local_round_button = GetRoundButton(_object_count);
0xB46E	0x4AA0    LDR	R2, [PC, #640]
0xB470	0x6812    LDR	R2, [R2, #0]
0xB472	0x320C    ADDS	R2, #12
0xB474	0x6813    LDR	R3, [R2, #0]
0xB476	0x4A9D    LDR	R2, [PC, #628]
0xB478	0xF9B22000  LDRSH	R2, [R2, #0]
0xB47C	0x0092    LSLS	R2, R2, #2
0xB47E	0x189A    ADDS	R2, R3, R2
0xB480	0x6813    LDR	R3, [R2, #0]
0xB482	0x4A9C    LDR	R2, [PC, #624]
0xB484	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4099 :: 		if (local_round_button->Active == 1) {
0xB486	0xF2030213  ADDW	R2, R3, #19
0xB48A	0x7812    LDRB	R2, [R2, #0]
0xB48C	0x2A01    CMP	R2, #1
0xB48E	0xD126    BNE	L_Get_Object74
;Ducati_logger_driver.c, 4101 :: 		local_round_button->Width, local_round_button->Height) == 1) {
0xB490	0x4E98    LDR	R6, [PC, #608]
0xB492	0x6832    LDR	R2, [R6, #0]
0xB494	0x320C    ADDS	R2, #12
0xB496	0x8812    LDRH	R2, [R2, #0]
0xB498	0xB295    UXTH	R5, R2
0xB49A	0x4632    MOV	R2, R6
0xB49C	0x6812    LDR	R2, [R2, #0]
0xB49E	0x320A    ADDS	R2, #10
0xB4A0	0x8812    LDRH	R2, [R2, #0]
0xB4A2	0xB294    UXTH	R4, R2
;Ducati_logger_driver.c, 4100 :: 		if (IsInsideObject(X, Y, local_round_button->Left, local_round_button->Top,
0xB4A4	0x4632    MOV	R2, R6
0xB4A6	0x6812    LDR	R2, [R2, #0]
0xB4A8	0x3208    ADDS	R2, #8
0xB4AA	0x8812    LDRH	R2, [R2, #0]
0xB4AC	0xB293    UXTH	R3, R2
0xB4AE	0x4632    MOV	R2, R6
0xB4B0	0x6812    LDR	R2, [R2, #0]
0xB4B2	0x1D92    ADDS	R2, R2, #6
0xB4B4	0x8812    LDRH	R2, [R2, #0]
0xB4B6	0xB2B9    UXTH	R1, R7
0xB4B8	0xFA1FF088  UXTH	R0, R8
;Ducati_logger_driver.c, 4101 :: 		local_round_button->Width, local_round_button->Height) == 1) {
0xB4BC	0xB420    PUSH	(R5)
0xB4BE	0xB410    PUSH	(R4)
0xB4C0	0xF7FBFD46  BL	Ducati_logger_driver_IsInsideObject+0
0xB4C4	0xB002    ADD	SP, SP, #8
0xB4C6	0x2801    CMP	R0, #1
0xB4C8	0xD109    BNE	L_Get_Object75
;Ducati_logger_driver.c, 4102 :: 		round_button_order = local_round_button->Order;
0xB4CA	0x4C8A    LDR	R4, [PC, #552]
0xB4CC	0x6822    LDR	R2, [R4, #0]
0xB4CE	0x1D12    ADDS	R2, R2, #4
0xB4D0	0x7813    LDRB	R3, [R2, #0]
0xB4D2	0x4A7E    LDR	R2, [PC, #504]
0xB4D4	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4103 :: 		exec_round_button = local_round_button;
0xB4D6	0x4622    MOV	R2, R4
0xB4D8	0x6813    LDR	R3, [R2, #0]
0xB4DA	0x4A87    LDR	R2, [PC, #540]
0xB4DC	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4104 :: 		}
L_Get_Object75:
;Ducati_logger_driver.c, 4105 :: 		}
L_Get_Object74:
;Ducati_logger_driver.c, 4097 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->Buttons_RoundCount ; _object_count++ ) {
0xB4DE	0x4B83    LDR	R3, [PC, #524]
0xB4E0	0xF9B32000  LDRSH	R2, [R3, #0]
0xB4E4	0x1C52    ADDS	R2, R2, #1
0xB4E6	0x801A    STRH	R2, [R3, #0]
;Ducati_logger_driver.c, 4106 :: 		}
0xB4E8	0xE7B8    B	L_Get_Object71
L_Get_Object72:
;Ducati_logger_driver.c, 4109 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->LabelsCount ; _object_count++ ) {
0xB4EA	0x2300    MOVS	R3, #0
0xB4EC	0xB21B    SXTH	R3, R3
0xB4EE	0x4A7F    LDR	R2, [PC, #508]
0xB4F0	0x8013    STRH	R3, [R2, #0]
; Y end address is: 28 (R7)
; X end address is: 32 (R8)
0xB4F2	0xF8AD8004  STRH	R8, [SP, #4]
0xB4F6	0xFA1FF887  UXTH	R8, R7
0xB4FA	0xF8BD7004  LDRH	R7, [SP, #4]
L_Get_Object76:
; X start address is: 28 (R7)
; Y start address is: 32 (R8)
0xB4FE	0x4A7C    LDR	R2, [PC, #496]
0xB500	0x6812    LDR	R2, [R2, #0]
0xB502	0x3210    ADDS	R2, #16
0xB504	0x8813    LDRH	R3, [R2, #0]
0xB506	0x4A79    LDR	R2, [PC, #484]
0xB508	0xF9B22000  LDRSH	R2, [R2, #0]
0xB50C	0x429A    CMP	R2, R3
0xB50E	0xD23D    BCS	L_Get_Object77
;Ducati_logger_driver.c, 4110 :: 		local_label = GetLabel(_object_count);
0xB510	0x4A77    LDR	R2, [PC, #476]
0xB512	0x6812    LDR	R2, [R2, #0]
0xB514	0x3214    ADDS	R2, #20
0xB516	0x6813    LDR	R3, [R2, #0]
0xB518	0x4A74    LDR	R2, [PC, #464]
0xB51A	0xF9B22000  LDRSH	R2, [R2, #0]
0xB51E	0x0092    LSLS	R2, R2, #2
0xB520	0x189A    ADDS	R2, R3, R2
0xB522	0x6813    LDR	R3, [R2, #0]
0xB524	0x4A75    LDR	R2, [PC, #468]
0xB526	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4111 :: 		if (local_label->Active == 1) {
0xB528	0xF203021B  ADDW	R2, R3, #27
0xB52C	0x7812    LDRB	R2, [R2, #0]
0xB52E	0x2A01    CMP	R2, #1
0xB530	0xD126    BNE	L_Get_Object79
;Ducati_logger_driver.c, 4113 :: 		local_label->Width, local_label->Height) == 1) {
0xB532	0x4E72    LDR	R6, [PC, #456]
0xB534	0x6832    LDR	R2, [R6, #0]
0xB536	0x320C    ADDS	R2, #12
0xB538	0x8812    LDRH	R2, [R2, #0]
0xB53A	0xB295    UXTH	R5, R2
0xB53C	0x4632    MOV	R2, R6
0xB53E	0x6812    LDR	R2, [R2, #0]
0xB540	0x320A    ADDS	R2, #10
0xB542	0x8812    LDRH	R2, [R2, #0]
0xB544	0xB294    UXTH	R4, R2
;Ducati_logger_driver.c, 4112 :: 		if (IsInsideObject(X, Y, local_label->Left, local_label->Top,
0xB546	0x4632    MOV	R2, R6
0xB548	0x6812    LDR	R2, [R2, #0]
0xB54A	0x3208    ADDS	R2, #8
0xB54C	0x8812    LDRH	R2, [R2, #0]
0xB54E	0xB293    UXTH	R3, R2
0xB550	0x4632    MOV	R2, R6
0xB552	0x6812    LDR	R2, [R2, #0]
0xB554	0x1D92    ADDS	R2, R2, #6
0xB556	0x8812    LDRH	R2, [R2, #0]
0xB558	0xFA1FF188  UXTH	R1, R8
0xB55C	0xB2B8    UXTH	R0, R7
;Ducati_logger_driver.c, 4113 :: 		local_label->Width, local_label->Height) == 1) {
0xB55E	0xB420    PUSH	(R5)
0xB560	0xB410    PUSH	(R4)
0xB562	0xF7FBFCF5  BL	Ducati_logger_driver_IsInsideObject+0
0xB566	0xB002    ADD	SP, SP, #8
0xB568	0x2801    CMP	R0, #1
0xB56A	0xD109    BNE	L_Get_Object80
;Ducati_logger_driver.c, 4114 :: 		label_order = local_label->Order;
0xB56C	0x4C63    LDR	R4, [PC, #396]
0xB56E	0x6822    LDR	R2, [R4, #0]
0xB570	0x1D12    ADDS	R2, R2, #4
0xB572	0x7813    LDRB	R3, [R2, #0]
0xB574	0x4A56    LDR	R2, [PC, #344]
0xB576	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4115 :: 		exec_label = local_label;
0xB578	0x4622    MOV	R2, R4
0xB57A	0x6813    LDR	R3, [R2, #0]
0xB57C	0x4A60    LDR	R2, [PC, #384]
0xB57E	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4116 :: 		}
L_Get_Object80:
;Ducati_logger_driver.c, 4117 :: 		}
L_Get_Object79:
;Ducati_logger_driver.c, 4109 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->LabelsCount ; _object_count++ ) {
0xB580	0x4B5A    LDR	R3, [PC, #360]
0xB582	0xF9B32000  LDRSH	R2, [R3, #0]
0xB586	0x1C52    ADDS	R2, R2, #1
0xB588	0x801A    STRH	R2, [R3, #0]
;Ducati_logger_driver.c, 4118 :: 		}
0xB58A	0xE7B8    B	L_Get_Object76
L_Get_Object77:
;Ducati_logger_driver.c, 4121 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->ImagesCount ; _object_count++ ) {
0xB58C	0x2300    MOVS	R3, #0
0xB58E	0xB21B    SXTH	R3, R3
0xB590	0x4A56    LDR	R2, [PC, #344]
0xB592	0x8013    STRH	R3, [R2, #0]
; X end address is: 28 (R7)
; Y end address is: 32 (R8)
0xB594	0xF8AD8004  STRH	R8, [SP, #4]
0xB598	0xFA1FF887  UXTH	R8, R7
0xB59C	0xF8BD7004  LDRH	R7, [SP, #4]
L_Get_Object81:
; Y start address is: 28 (R7)
; X start address is: 32 (R8)
0xB5A0	0x4A53    LDR	R2, [PC, #332]
0xB5A2	0x6812    LDR	R2, [R2, #0]
0xB5A4	0x3218    ADDS	R2, #24
0xB5A6	0x8813    LDRH	R3, [R2, #0]
0xB5A8	0x4A50    LDR	R2, [PC, #320]
0xB5AA	0xF9B22000  LDRSH	R2, [R2, #0]
0xB5AE	0x429A    CMP	R2, R3
0xB5B0	0xD23D    BCS	L_Get_Object82
;Ducati_logger_driver.c, 4122 :: 		local_image = GetImage(_object_count);
0xB5B2	0x4A4F    LDR	R2, [PC, #316]
0xB5B4	0x6812    LDR	R2, [R2, #0]
0xB5B6	0x321C    ADDS	R2, #28
0xB5B8	0x6813    LDR	R3, [R2, #0]
0xB5BA	0x4A4C    LDR	R2, [PC, #304]
0xB5BC	0xF9B22000  LDRSH	R2, [R2, #0]
0xB5C0	0x0092    LSLS	R2, R2, #2
0xB5C2	0x189A    ADDS	R2, R3, R2
0xB5C4	0x6813    LDR	R3, [R2, #0]
0xB5C6	0x4A4F    LDR	R2, [PC, #316]
0xB5C8	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4123 :: 		if (local_image->Active == 1) {
0xB5CA	0xF2030215  ADDW	R2, R3, #21
0xB5CE	0x7812    LDRB	R2, [R2, #0]
0xB5D0	0x2A01    CMP	R2, #1
0xB5D2	0xD126    BNE	L_Get_Object84
;Ducati_logger_driver.c, 4125 :: 		local_image->Width, local_image->Height) == 1) {
0xB5D4	0x4E4B    LDR	R6, [PC, #300]
0xB5D6	0x6832    LDR	R2, [R6, #0]
0xB5D8	0x320C    ADDS	R2, #12
0xB5DA	0x8812    LDRH	R2, [R2, #0]
0xB5DC	0xB295    UXTH	R5, R2
0xB5DE	0x4632    MOV	R2, R6
0xB5E0	0x6812    LDR	R2, [R2, #0]
0xB5E2	0x320A    ADDS	R2, #10
0xB5E4	0x8812    LDRH	R2, [R2, #0]
0xB5E6	0xB294    UXTH	R4, R2
;Ducati_logger_driver.c, 4124 :: 		if (IsInsideObject(X, Y, local_image->Left, local_image->Top,
0xB5E8	0x4632    MOV	R2, R6
0xB5EA	0x6812    LDR	R2, [R2, #0]
0xB5EC	0x3208    ADDS	R2, #8
0xB5EE	0x8812    LDRH	R2, [R2, #0]
0xB5F0	0xB293    UXTH	R3, R2
0xB5F2	0x4632    MOV	R2, R6
0xB5F4	0x6812    LDR	R2, [R2, #0]
0xB5F6	0x1D92    ADDS	R2, R2, #6
0xB5F8	0x8812    LDRH	R2, [R2, #0]
0xB5FA	0xB2B9    UXTH	R1, R7
0xB5FC	0xFA1FF088  UXTH	R0, R8
;Ducati_logger_driver.c, 4125 :: 		local_image->Width, local_image->Height) == 1) {
0xB600	0xB420    PUSH	(R5)
0xB602	0xB410    PUSH	(R4)
0xB604	0xF7FBFCA4  BL	Ducati_logger_driver_IsInsideObject+0
0xB608	0xB002    ADD	SP, SP, #8
0xB60A	0x2801    CMP	R0, #1
0xB60C	0xD109    BNE	L_Get_Object85
;Ducati_logger_driver.c, 4126 :: 		image_order = local_image->Order;
0xB60E	0x4C3D    LDR	R4, [PC, #244]
0xB610	0x6822    LDR	R2, [R4, #0]
0xB612	0x1D12    ADDS	R2, R2, #4
0xB614	0x7813    LDRB	R3, [R2, #0]
0xB616	0x4A2F    LDR	R2, [PC, #188]
0xB618	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4127 :: 		exec_image = local_image;
0xB61A	0x4622    MOV	R2, R4
0xB61C	0x6813    LDR	R3, [R2, #0]
0xB61E	0x4A3A    LDR	R2, [PC, #232]
0xB620	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4128 :: 		}
L_Get_Object85:
;Ducati_logger_driver.c, 4129 :: 		}
L_Get_Object84:
;Ducati_logger_driver.c, 4121 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->ImagesCount ; _object_count++ ) {
0xB622	0x4B32    LDR	R3, [PC, #200]
0xB624	0xF9B32000  LDRSH	R2, [R3, #0]
0xB628	0x1C52    ADDS	R2, R2, #1
0xB62A	0x801A    STRH	R2, [R3, #0]
;Ducati_logger_driver.c, 4130 :: 		}
0xB62C	0xE7B8    B	L_Get_Object81
L_Get_Object82:
;Ducati_logger_driver.c, 4133 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->CImagesCount ; _object_count++ ) {
0xB62E	0x2300    MOVS	R3, #0
0xB630	0xB21B    SXTH	R3, R3
0xB632	0x4A2E    LDR	R2, [PC, #184]
0xB634	0x8013    STRH	R3, [R2, #0]
; Y end address is: 28 (R7)
; X end address is: 32 (R8)
0xB636	0xF8AD8004  STRH	R8, [SP, #4]
0xB63A	0xFA1FF887  UXTH	R8, R7
0xB63E	0xF8BD7004  LDRH	R7, [SP, #4]
L_Get_Object86:
; X start address is: 28 (R7)
; Y start address is: 32 (R8)
0xB642	0x4A2B    LDR	R2, [PC, #172]
0xB644	0x6812    LDR	R2, [R2, #0]
0xB646	0x3220    ADDS	R2, #32
0xB648	0x8813    LDRH	R3, [R2, #0]
0xB64A	0x4A28    LDR	R2, [PC, #160]
0xB64C	0xF9B22000  LDRSH	R2, [R2, #0]
0xB650	0x429A    CMP	R2, R3
0xB652	0xD262    BCS	L_Get_Object87
;Ducati_logger_driver.c, 4134 :: 		local_cimage = GetCImage(_object_count);
0xB654	0x4A26    LDR	R2, [PC, #152]
0xB656	0x6812    LDR	R2, [R2, #0]
0xB658	0x3224    ADDS	R2, #36
0xB65A	0x6813    LDR	R3, [R2, #0]
0xB65C	0x4A23    LDR	R2, [PC, #140]
0xB65E	0xF9B22000  LDRSH	R2, [R2, #0]
0xB662	0x0092    LSLS	R2, R2, #2
0xB664	0x189A    ADDS	R2, R3, R2
0xB666	0x6813    LDR	R3, [R2, #0]
0xB668	0x4A28    LDR	R2, [PC, #160]
0xB66A	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4135 :: 		if (local_cimage->Active == 1) {
0xB66C	0xF2030215  ADDW	R2, R3, #21
0xB670	0x7812    LDRB	R2, [R2, #0]
0xB672	0x2A01    CMP	R2, #1
0xB674	0xD126    BNE	L_Get_Object89
;Ducati_logger_driver.c, 4137 :: 		local_cimage->Width, local_cimage->Height) == 1) {
0xB676	0x4E25    LDR	R6, [PC, #148]
0xB678	0x6832    LDR	R2, [R6, #0]
0xB67A	0x320C    ADDS	R2, #12
0xB67C	0x8812    LDRH	R2, [R2, #0]
0xB67E	0xB295    UXTH	R5, R2
0xB680	0x4632    MOV	R2, R6
0xB682	0x6812    LDR	R2, [R2, #0]
0xB684	0x320A    ADDS	R2, #10
0xB686	0x8812    LDRH	R2, [R2, #0]
0xB688	0xB294    UXTH	R4, R2
;Ducati_logger_driver.c, 4136 :: 		if (IsInsideObject(X, Y, local_cimage->Left, local_cimage->Top,
0xB68A	0x4632    MOV	R2, R6
0xB68C	0x6812    LDR	R2, [R2, #0]
0xB68E	0x3208    ADDS	R2, #8
0xB690	0x8812    LDRH	R2, [R2, #0]
0xB692	0xB293    UXTH	R3, R2
0xB694	0x4632    MOV	R2, R6
0xB696	0x6812    LDR	R2, [R2, #0]
0xB698	0x1D92    ADDS	R2, R2, #6
0xB69A	0x8812    LDRH	R2, [R2, #0]
0xB69C	0xFA1FF188  UXTH	R1, R8
0xB6A0	0xB2B8    UXTH	R0, R7
;Ducati_logger_driver.c, 4137 :: 		local_cimage->Width, local_cimage->Height) == 1) {
0xB6A2	0xB420    PUSH	(R5)
0xB6A4	0xB410    PUSH	(R4)
0xB6A6	0xF7FBFC53  BL	Ducati_logger_driver_IsInsideObject+0
0xB6AA	0xB002    ADD	SP, SP, #8
0xB6AC	0x2801    CMP	R0, #1
0xB6AE	0xD109    BNE	L_Get_Object90
;Ducati_logger_driver.c, 4138 :: 		cimage_order = local_cimage->Order;
0xB6B0	0x4C16    LDR	R4, [PC, #88]
0xB6B2	0x6822    LDR	R2, [R4, #0]
0xB6B4	0x1D12    ADDS	R2, R2, #4
0xB6B6	0x7813    LDRB	R3, [R2, #0]
0xB6B8	0x4A07    LDR	R2, [PC, #28]
0xB6BA	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4139 :: 		exec_cimage = local_cimage;
0xB6BC	0x4622    MOV	R2, R4
0xB6BE	0x6813    LDR	R3, [R2, #0]
0xB6C0	0x4A13    LDR	R2, [PC, #76]
0xB6C2	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4140 :: 		}
L_Get_Object90:
;Ducati_logger_driver.c, 4141 :: 		}
L_Get_Object89:
;Ducati_logger_driver.c, 4133 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->CImagesCount ; _object_count++ ) {
0xB6C4	0x4B09    LDR	R3, [PC, #36]
0xB6C6	0xF9B32000  LDRSH	R2, [R3, #0]
0xB6CA	0xE023    B	#70
0xB6CC	0x224C2000  	_round_button_order+0
0xB6D0	0x22542000  	_label_order+0
0xB6D4	0x22562000  	_image_order+0
0xB6D8	0x22582000  	_cimage_order+0
0xB6DC	0x225A2000  	_circle_order+0
0xB6E0	0x225C2000  	_circle_button_order+0
0xB6E4	0x225E2000  	_box_order+0
0xB6E8	0x22602000  	_cbox_order+0
0xB6EC	0x222A2000  	__object_count+0
0xB6F0	0x22642000  	_CurrentScreen+0
0xB6F4	0x22682000  	_local_round_button+0
0xB6F8	0x222C2000  	_exec_round_button+0
0xB6FC	0x226C2000  	_local_label+0
0xB700	0x22302000  	_exec_label+0
0xB704	0x22702000  	_local_image+0
0xB708	0x22342000  	_exec_image+0
0xB70C	0x22742000  	_local_cimage+0
0xB710	0x22382000  	_exec_cimage+0
0xB714	0x1C52    ADDS	R2, R2, #1
0xB716	0x801A    STRH	R2, [R3, #0]
;Ducati_logger_driver.c, 4142 :: 		}
0xB718	0xE793    B	L_Get_Object86
L_Get_Object87:
;Ducati_logger_driver.c, 4145 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->CirclesCount ; _object_count++ ) {
0xB71A	0x2300    MOVS	R3, #0
0xB71C	0xB21B    SXTH	R3, R3
0xB71E	0x4AAC    LDR	R2, [PC, #688]
0xB720	0x8013    STRH	R3, [R2, #0]
; X end address is: 28 (R7)
; Y end address is: 32 (R8)
0xB722	0xF8AD8004  STRH	R8, [SP, #4]
0xB726	0xFA1FF887  UXTH	R8, R7
0xB72A	0xF8BD7004  LDRH	R7, [SP, #4]
L_Get_Object91:
; Y start address is: 28 (R7)
; X start address is: 32 (R8)
0xB72E	0x4AA9    LDR	R2, [PC, #676]
0xB730	0x6812    LDR	R2, [R2, #0]
0xB732	0x3228    ADDS	R2, #40
0xB734	0x8813    LDRH	R3, [R2, #0]
0xB736	0x4AA6    LDR	R2, [PC, #664]
0xB738	0xF9B22000  LDRSH	R2, [R2, #0]
0xB73C	0x429A    CMP	R2, R3
0xB73E	0xD239    BCS	L_Get_Object92
;Ducati_logger_driver.c, 4146 :: 		local_circle = GetCircle(_object_count);
0xB740	0x4AA4    LDR	R2, [PC, #656]
0xB742	0x6812    LDR	R2, [R2, #0]
0xB744	0x322C    ADDS	R2, #44
0xB746	0x6813    LDR	R3, [R2, #0]
0xB748	0x4AA1    LDR	R2, [PC, #644]
0xB74A	0xF9B22000  LDRSH	R2, [R2, #0]
0xB74E	0x0092    LSLS	R2, R2, #2
0xB750	0x189A    ADDS	R2, R3, R2
0xB752	0x6813    LDR	R3, [R2, #0]
0xB754	0x4AA0    LDR	R2, [PC, #640]
0xB756	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4147 :: 		if (local_circle->Active == 1) {
0xB758	0xF2030211  ADDW	R2, R3, #17
0xB75C	0x7812    LDRB	R2, [R2, #0]
0xB75E	0x2A01    CMP	R2, #1
0xB760	0xD122    BNE	L_Get_Object94
;Ducati_logger_driver.c, 4149 :: 		(local_circle->Radius * 2), (local_circle->Radius * 2)) == 1) {
0xB762	0x4D9D    LDR	R5, [PC, #628]
0xB764	0x682A    LDR	R2, [R5, #0]
0xB766	0x320A    ADDS	R2, #10
0xB768	0x8812    LDRH	R2, [R2, #0]
0xB76A	0x0054    LSLS	R4, R2, #1
0xB76C	0xB2A4    UXTH	R4, R4
;Ducati_logger_driver.c, 4148 :: 		if (IsInsideObject(X, Y, local_circle->Left, local_circle->Top,
0xB76E	0x462A    MOV	R2, R5
0xB770	0x6812    LDR	R2, [R2, #0]
0xB772	0x3208    ADDS	R2, #8
0xB774	0x8812    LDRH	R2, [R2, #0]
0xB776	0xB293    UXTH	R3, R2
0xB778	0x462A    MOV	R2, R5
0xB77A	0x6812    LDR	R2, [R2, #0]
0xB77C	0x1D92    ADDS	R2, R2, #6
0xB77E	0x8812    LDRH	R2, [R2, #0]
0xB780	0xB2B9    UXTH	R1, R7
0xB782	0xFA1FF088  UXTH	R0, R8
;Ducati_logger_driver.c, 4149 :: 		(local_circle->Radius * 2), (local_circle->Radius * 2)) == 1) {
0xB786	0xB410    PUSH	(R4)
0xB788	0xB410    PUSH	(R4)
0xB78A	0xF7FBFBE1  BL	Ducati_logger_driver_IsInsideObject+0
0xB78E	0xB002    ADD	SP, SP, #8
0xB790	0x2801    CMP	R0, #1
0xB792	0xD109    BNE	L_Get_Object95
;Ducati_logger_driver.c, 4150 :: 		circle_order = local_circle->Order;
0xB794	0x4C90    LDR	R4, [PC, #576]
0xB796	0x6822    LDR	R2, [R4, #0]
0xB798	0x1D12    ADDS	R2, R2, #4
0xB79A	0x7813    LDRB	R3, [R2, #0]
0xB79C	0x4A8F    LDR	R2, [PC, #572]
0xB79E	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4151 :: 		exec_circle = local_circle;
0xB7A0	0x4622    MOV	R2, R4
0xB7A2	0x6813    LDR	R3, [R2, #0]
0xB7A4	0x4A8E    LDR	R2, [PC, #568]
0xB7A6	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4152 :: 		}
L_Get_Object95:
;Ducati_logger_driver.c, 4153 :: 		}
L_Get_Object94:
;Ducati_logger_driver.c, 4145 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->CirclesCount ; _object_count++ ) {
0xB7A8	0x4B89    LDR	R3, [PC, #548]
0xB7AA	0xF9B32000  LDRSH	R2, [R3, #0]
0xB7AE	0x1C52    ADDS	R2, R2, #1
0xB7B0	0x801A    STRH	R2, [R3, #0]
;Ducati_logger_driver.c, 4154 :: 		}
0xB7B2	0xE7BC    B	L_Get_Object91
L_Get_Object92:
;Ducati_logger_driver.c, 4157 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->CircleButtonsCount ; _object_count++ ) {
0xB7B4	0x2300    MOVS	R3, #0
0xB7B6	0xB21B    SXTH	R3, R3
0xB7B8	0x4A85    LDR	R2, [PC, #532]
0xB7BA	0x8013    STRH	R3, [R2, #0]
; Y end address is: 28 (R7)
; X end address is: 32 (R8)
L_Get_Object96:
; X start address is: 32 (R8)
; Y start address is: 28 (R7)
0xB7BC	0x4A85    LDR	R2, [PC, #532]
0xB7BE	0x6812    LDR	R2, [R2, #0]
0xB7C0	0x3230    ADDS	R2, #48
0xB7C2	0x8813    LDRH	R3, [R2, #0]
0xB7C4	0x4A82    LDR	R2, [PC, #520]
0xB7C6	0xF9B22000  LDRSH	R2, [R2, #0]
0xB7CA	0x429A    CMP	R2, R3
0xB7CC	0xD239    BCS	L_Get_Object97
;Ducati_logger_driver.c, 4158 :: 		local_circle_button = GetCircleButton(_object_count);
0xB7CE	0x4A81    LDR	R2, [PC, #516]
0xB7D0	0x6812    LDR	R2, [R2, #0]
0xB7D2	0x3234    ADDS	R2, #52
0xB7D4	0x6813    LDR	R3, [R2, #0]
0xB7D6	0x4A7E    LDR	R2, [PC, #504]
0xB7D8	0xF9B22000  LDRSH	R2, [R2, #0]
0xB7DC	0x0092    LSLS	R2, R2, #2
0xB7DE	0x189A    ADDS	R2, R3, R2
0xB7E0	0x6813    LDR	R3, [R2, #0]
0xB7E2	0x4A80    LDR	R2, [PC, #512]
0xB7E4	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4159 :: 		if (local_circle_button->Active == 1) {
0xB7E6	0xF2030211  ADDW	R2, R3, #17
0xB7EA	0x7812    LDRB	R2, [R2, #0]
0xB7EC	0x2A01    CMP	R2, #1
0xB7EE	0xD122    BNE	L_Get_Object99
;Ducati_logger_driver.c, 4161 :: 		(local_circle_button->Radius * 2), (local_circle_button->Radius * 2)) == 1) {
0xB7F0	0x4D7C    LDR	R5, [PC, #496]
0xB7F2	0x682A    LDR	R2, [R5, #0]
0xB7F4	0x320A    ADDS	R2, #10
0xB7F6	0x8812    LDRH	R2, [R2, #0]
0xB7F8	0x0054    LSLS	R4, R2, #1
0xB7FA	0xB2A4    UXTH	R4, R4
;Ducati_logger_driver.c, 4160 :: 		if (IsInsideObject(X, Y, local_circle_button->Left, local_circle_button->Top,
0xB7FC	0x462A    MOV	R2, R5
0xB7FE	0x6812    LDR	R2, [R2, #0]
0xB800	0x3208    ADDS	R2, #8
0xB802	0x8812    LDRH	R2, [R2, #0]
0xB804	0xB293    UXTH	R3, R2
0xB806	0x462A    MOV	R2, R5
0xB808	0x6812    LDR	R2, [R2, #0]
0xB80A	0x1D92    ADDS	R2, R2, #6
0xB80C	0x8812    LDRH	R2, [R2, #0]
0xB80E	0xB2B9    UXTH	R1, R7
0xB810	0xFA1FF088  UXTH	R0, R8
;Ducati_logger_driver.c, 4161 :: 		(local_circle_button->Radius * 2), (local_circle_button->Radius * 2)) == 1) {
0xB814	0xB410    PUSH	(R4)
0xB816	0xB410    PUSH	(R4)
0xB818	0xF7FBFB9A  BL	Ducati_logger_driver_IsInsideObject+0
0xB81C	0xB002    ADD	SP, SP, #8
0xB81E	0x2801    CMP	R0, #1
0xB820	0xD109    BNE	L_Get_Object100
;Ducati_logger_driver.c, 4162 :: 		circle_button_order = local_circle_button->Order;
0xB822	0x4C70    LDR	R4, [PC, #448]
0xB824	0x6822    LDR	R2, [R4, #0]
0xB826	0x1D12    ADDS	R2, R2, #4
0xB828	0x7813    LDRB	R3, [R2, #0]
0xB82A	0x4A6F    LDR	R2, [PC, #444]
0xB82C	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4163 :: 		exec_circle_button = local_circle_button;
0xB82E	0x4622    MOV	R2, R4
0xB830	0x6813    LDR	R3, [R2, #0]
0xB832	0x4A6E    LDR	R2, [PC, #440]
0xB834	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4164 :: 		}
L_Get_Object100:
;Ducati_logger_driver.c, 4165 :: 		}
L_Get_Object99:
;Ducati_logger_driver.c, 4157 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->CircleButtonsCount ; _object_count++ ) {
0xB836	0x4B66    LDR	R3, [PC, #408]
0xB838	0xF9B32000  LDRSH	R2, [R3, #0]
0xB83C	0x1C52    ADDS	R2, R2, #1
0xB83E	0x801A    STRH	R2, [R3, #0]
;Ducati_logger_driver.c, 4166 :: 		}
0xB840	0xE7BC    B	L_Get_Object96
L_Get_Object97:
;Ducati_logger_driver.c, 4169 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->BoxesCount ; _object_count++ ) {
0xB842	0x2300    MOVS	R3, #0
0xB844	0xB21B    SXTH	R3, R3
0xB846	0x4A62    LDR	R2, [PC, #392]
0xB848	0x8013    STRH	R3, [R2, #0]
; Y end address is: 28 (R7)
; X end address is: 32 (R8)
L_Get_Object101:
; Y start address is: 28 (R7)
; X start address is: 32 (R8)
0xB84A	0x4A62    LDR	R2, [PC, #392]
0xB84C	0x6812    LDR	R2, [R2, #0]
0xB84E	0x3238    ADDS	R2, #56
0xB850	0x8813    LDRH	R3, [R2, #0]
0xB852	0x4A5F    LDR	R2, [PC, #380]
0xB854	0xF9B22000  LDRSH	R2, [R2, #0]
0xB858	0x429A    CMP	R2, R3
0xB85A	0xD23D    BCS	L_Get_Object102
;Ducati_logger_driver.c, 4170 :: 		local_box = GetBox(_object_count);
0xB85C	0x4A5D    LDR	R2, [PC, #372]
0xB85E	0x6812    LDR	R2, [R2, #0]
0xB860	0x323C    ADDS	R2, #60
0xB862	0x6813    LDR	R3, [R2, #0]
0xB864	0x4A5A    LDR	R2, [PC, #360]
0xB866	0xF9B22000  LDRSH	R2, [R2, #0]
0xB86A	0x0092    LSLS	R2, R2, #2
0xB86C	0x189A    ADDS	R2, R3, R2
0xB86E	0x6813    LDR	R3, [R2, #0]
0xB870	0x4A5F    LDR	R2, [PC, #380]
0xB872	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4171 :: 		if (local_box->Active == 1) {
0xB874	0xF2030213  ADDW	R2, R3, #19
0xB878	0x7812    LDRB	R2, [R2, #0]
0xB87A	0x2A01    CMP	R2, #1
0xB87C	0xD126    BNE	L_Get_Object104
;Ducati_logger_driver.c, 4173 :: 		local_box->Width, local_box->Height) == 1) {
0xB87E	0x4E5C    LDR	R6, [PC, #368]
0xB880	0x6832    LDR	R2, [R6, #0]
0xB882	0x320C    ADDS	R2, #12
0xB884	0x8812    LDRH	R2, [R2, #0]
0xB886	0xB295    UXTH	R5, R2
0xB888	0x4632    MOV	R2, R6
0xB88A	0x6812    LDR	R2, [R2, #0]
0xB88C	0x320A    ADDS	R2, #10
0xB88E	0x8812    LDRH	R2, [R2, #0]
0xB890	0xB294    UXTH	R4, R2
;Ducati_logger_driver.c, 4172 :: 		if (IsInsideObject(X, Y, local_box->Left, local_box->Top,
0xB892	0x4632    MOV	R2, R6
0xB894	0x6812    LDR	R2, [R2, #0]
0xB896	0x3208    ADDS	R2, #8
0xB898	0x8812    LDRH	R2, [R2, #0]
0xB89A	0xB293    UXTH	R3, R2
0xB89C	0x4632    MOV	R2, R6
0xB89E	0x6812    LDR	R2, [R2, #0]
0xB8A0	0x1D92    ADDS	R2, R2, #6
0xB8A2	0x8812    LDRH	R2, [R2, #0]
0xB8A4	0xB2B9    UXTH	R1, R7
0xB8A6	0xFA1FF088  UXTH	R0, R8
;Ducati_logger_driver.c, 4173 :: 		local_box->Width, local_box->Height) == 1) {
0xB8AA	0xB420    PUSH	(R5)
0xB8AC	0xB410    PUSH	(R4)
0xB8AE	0xF7FBFB4F  BL	Ducati_logger_driver_IsInsideObject+0
0xB8B2	0xB002    ADD	SP, SP, #8
0xB8B4	0x2801    CMP	R0, #1
0xB8B6	0xD109    BNE	L_Get_Object105
;Ducati_logger_driver.c, 4174 :: 		box_order = local_box->Order;
0xB8B8	0x4C4D    LDR	R4, [PC, #308]
0xB8BA	0x6822    LDR	R2, [R4, #0]
0xB8BC	0x1D12    ADDS	R2, R2, #4
0xB8BE	0x7813    LDRB	R3, [R2, #0]
0xB8C0	0x4A4C    LDR	R2, [PC, #304]
0xB8C2	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4175 :: 		exec_box = local_box;
0xB8C4	0x4622    MOV	R2, R4
0xB8C6	0x6813    LDR	R3, [R2, #0]
0xB8C8	0x4A4B    LDR	R2, [PC, #300]
0xB8CA	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4176 :: 		}
L_Get_Object105:
;Ducati_logger_driver.c, 4177 :: 		}
L_Get_Object104:
;Ducati_logger_driver.c, 4169 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->BoxesCount ; _object_count++ ) {
0xB8CC	0x4B40    LDR	R3, [PC, #256]
0xB8CE	0xF9B32000  LDRSH	R2, [R3, #0]
0xB8D2	0x1C52    ADDS	R2, R2, #1
0xB8D4	0x801A    STRH	R2, [R3, #0]
;Ducati_logger_driver.c, 4178 :: 		}
0xB8D6	0xE7B8    B	L_Get_Object101
L_Get_Object102:
;Ducati_logger_driver.c, 4181 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->CBoxesCount ; _object_count++ ) {
0xB8D8	0x2300    MOVS	R3, #0
0xB8DA	0xB21B    SXTH	R3, R3
0xB8DC	0x4A3C    LDR	R2, [PC, #240]
0xB8DE	0x8013    STRH	R3, [R2, #0]
; Y end address is: 28 (R7)
; X end address is: 32 (R8)
0xB8E0	0xF8AD8004  STRH	R8, [SP, #4]
0xB8E4	0xFA1FF887  UXTH	R8, R7
0xB8E8	0xF8BD7004  LDRH	R7, [SP, #4]
L_Get_Object106:
; Y start address is: 32 (R8)
; X start address is: 28 (R7)
; X start address is: 28 (R7)
; X end address is: 28 (R7)
; Y start address is: 32 (R8)
; Y end address is: 32 (R8)
0xB8EC	0x4A39    LDR	R2, [PC, #228]
0xB8EE	0x6812    LDR	R2, [R2, #0]
0xB8F0	0x3240    ADDS	R2, #64
0xB8F2	0x8813    LDRH	R3, [R2, #0]
0xB8F4	0x4A36    LDR	R2, [PC, #216]
0xB8F6	0xF9B22000  LDRSH	R2, [R2, #0]
0xB8FA	0x429A    CMP	R2, R3
0xB8FC	0xD23D    BCS	L_Get_Object107
; X end address is: 28 (R7)
; Y end address is: 32 (R8)
;Ducati_logger_driver.c, 4182 :: 		local_cbox = GetCBox(_object_count);
; Y start address is: 32 (R8)
; X start address is: 28 (R7)
0xB8FE	0x4A35    LDR	R2, [PC, #212]
0xB900	0x6812    LDR	R2, [R2, #0]
0xB902	0x3244    ADDS	R2, #68
0xB904	0x6813    LDR	R3, [R2, #0]
0xB906	0x4A32    LDR	R2, [PC, #200]
0xB908	0xF9B22000  LDRSH	R2, [R2, #0]
0xB90C	0x0092    LSLS	R2, R2, #2
0xB90E	0x189A    ADDS	R2, R3, R2
0xB910	0x6813    LDR	R3, [R2, #0]
0xB912	0x4A3A    LDR	R2, [PC, #232]
0xB914	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4183 :: 		if (local_cbox->Active == 1) {
0xB916	0xF2030213  ADDW	R2, R3, #19
0xB91A	0x7812    LDRB	R2, [R2, #0]
0xB91C	0x2A01    CMP	R2, #1
0xB91E	0xD126    BNE	L_Get_Object109
;Ducati_logger_driver.c, 4185 :: 		local_cbox->Width, local_cbox->Height) == 1) {
0xB920	0x4E36    LDR	R6, [PC, #216]
0xB922	0x6832    LDR	R2, [R6, #0]
0xB924	0x320C    ADDS	R2, #12
0xB926	0x8812    LDRH	R2, [R2, #0]
0xB928	0xB295    UXTH	R5, R2
0xB92A	0x4632    MOV	R2, R6
0xB92C	0x6812    LDR	R2, [R2, #0]
0xB92E	0x320A    ADDS	R2, #10
0xB930	0x8812    LDRH	R2, [R2, #0]
0xB932	0xB294    UXTH	R4, R2
;Ducati_logger_driver.c, 4184 :: 		if (IsInsideObject(X, Y, local_cbox->Left, local_cbox->Top,
0xB934	0x4632    MOV	R2, R6
0xB936	0x6812    LDR	R2, [R2, #0]
0xB938	0x3208    ADDS	R2, #8
0xB93A	0x8812    LDRH	R2, [R2, #0]
0xB93C	0xB293    UXTH	R3, R2
0xB93E	0x4632    MOV	R2, R6
0xB940	0x6812    LDR	R2, [R2, #0]
0xB942	0x1D92    ADDS	R2, R2, #6
0xB944	0x8812    LDRH	R2, [R2, #0]
0xB946	0xFA1FF188  UXTH	R1, R8
0xB94A	0xB2B8    UXTH	R0, R7
;Ducati_logger_driver.c, 4185 :: 		local_cbox->Width, local_cbox->Height) == 1) {
0xB94C	0xB420    PUSH	(R5)
0xB94E	0xB410    PUSH	(R4)
0xB950	0xF7FBFAFE  BL	Ducati_logger_driver_IsInsideObject+0
0xB954	0xB002    ADD	SP, SP, #8
0xB956	0x2801    CMP	R0, #1
0xB958	0xD109    BNE	L_Get_Object110
;Ducati_logger_driver.c, 4186 :: 		cbox_order = local_cbox->Order;
0xB95A	0x4C28    LDR	R4, [PC, #160]
0xB95C	0x6822    LDR	R2, [R4, #0]
0xB95E	0x1D12    ADDS	R2, R2, #4
0xB960	0x7813    LDRB	R3, [R2, #0]
0xB962	0x4A27    LDR	R2, [PC, #156]
0xB964	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4187 :: 		exec_cbox = local_cbox;
0xB966	0x4622    MOV	R2, R4
0xB968	0x6813    LDR	R3, [R2, #0]
0xB96A	0x4A26    LDR	R2, [PC, #152]
0xB96C	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4188 :: 		}
L_Get_Object110:
;Ducati_logger_driver.c, 4189 :: 		}
L_Get_Object109:
;Ducati_logger_driver.c, 4181 :: 		for ( _object_count = 0 ; _object_count < CurrentScreen->CBoxesCount ; _object_count++ ) {
0xB96E	0x4B18    LDR	R3, [PC, #96]
0xB970	0xF9B32000  LDRSH	R2, [R3, #0]
0xB974	0x1C52    ADDS	R2, R2, #1
0xB976	0x801A    STRH	R2, [R3, #0]
;Ducati_logger_driver.c, 4190 :: 		}
; X end address is: 28 (R7)
; Y end address is: 32 (R8)
0xB978	0xE7B8    B	L_Get_Object106
L_Get_Object107:
;Ducati_logger_driver.c, 4192 :: 		_object_count = -1;
0xB97A	0xF64F73FF  MOVW	R3, #65535
0xB97E	0xB21B    SXTH	R3, R3
0xB980	0x4A13    LDR	R2, [PC, #76]
0xB982	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4193 :: 		if (round_button_order >  _object_count )
0xB984	0x4A20    LDR	R2, [PC, #128]
0xB986	0xF9B22000  LDRSH	R2, [R2, #0]
0xB98A	0xF1B23FFF  CMP	R2, #-1
0xB98E	0xDD04    BLE	L_Get_Object111
;Ducati_logger_driver.c, 4194 :: 		_object_count = round_button_order;
0xB990	0x4A1D    LDR	R2, [PC, #116]
0xB992	0xF9B23000  LDRSH	R3, [R2, #0]
0xB996	0x4A0E    LDR	R2, [PC, #56]
0xB998	0x8013    STRH	R3, [R2, #0]
L_Get_Object111:
;Ducati_logger_driver.c, 4195 :: 		if (label_order >  _object_count )
0xB99A	0x4A0D    LDR	R2, [PC, #52]
0xB99C	0xF9B23000  LDRSH	R3, [R2, #0]
0xB9A0	0x4A1A    LDR	R2, [PC, #104]
0xB9A2	0xF9B22000  LDRSH	R2, [R2, #0]
0xB9A6	0x429A    CMP	R2, R3
0xB9A8	0xDD04    BLE	L_Get_Object112
;Ducati_logger_driver.c, 4196 :: 		_object_count = label_order;
0xB9AA	0x4A18    LDR	R2, [PC, #96]
0xB9AC	0xF9B23000  LDRSH	R3, [R2, #0]
0xB9B0	0x4A07    LDR	R2, [PC, #28]
0xB9B2	0x8013    STRH	R3, [R2, #0]
L_Get_Object112:
;Ducati_logger_driver.c, 4197 :: 		if (image_order >  _object_count )
0xB9B4	0x4A06    LDR	R2, [PC, #24]
0xB9B6	0xF9B23000  LDRSH	R3, [R2, #0]
0xB9BA	0x4A15    LDR	R2, [PC, #84]
0xB9BC	0xF9B22000  LDRSH	R2, [R2, #0]
0xB9C0	0x429A    CMP	R2, R3
0xB9C2	0xDD28    BLE	L_Get_Object113
;Ducati_logger_driver.c, 4198 :: 		_object_count = image_order;
0xB9C4	0x4A12    LDR	R2, [PC, #72]
0xB9C6	0xF9B23000  LDRSH	R3, [R2, #0]
0xB9CA	0x4A01    LDR	R2, [PC, #4]
0xB9CC	0xF000B822  B	#68
0xB9D0	0x222A2000  	__object_count+0
0xB9D4	0x22642000  	_CurrentScreen+0
0xB9D8	0x22782000  	_local_circle+0
0xB9DC	0x225A2000  	_circle_order+0
0xB9E0	0x223C2000  	_exec_circle+0
0xB9E4	0x227C2000  	_local_circle_button+0
0xB9E8	0x225C2000  	_circle_button_order+0
0xB9EC	0x22402000  	_exec_circle_button+0
0xB9F0	0x22802000  	_local_box+0
0xB9F4	0x225E2000  	_box_order+0
0xB9F8	0x22442000  	_exec_box+0
0xB9FC	0x22842000  	_local_cbox+0
0xBA00	0x22602000  	_cbox_order+0
0xBA04	0x22482000  	_exec_cbox+0
0xBA08	0x224C2000  	_round_button_order+0
0xBA0C	0x22542000  	_label_order+0
0xBA10	0x22562000  	_image_order+0
0xBA14	0x8013    STRH	R3, [R2, #0]
L_Get_Object113:
;Ducati_logger_driver.c, 4199 :: 		if (cimage_order >  _object_count )
0xBA16	0x4A22    LDR	R2, [PC, #136]
0xBA18	0xF9B23000  LDRSH	R3, [R2, #0]
0xBA1C	0x4A21    LDR	R2, [PC, #132]
0xBA1E	0xF9B22000  LDRSH	R2, [R2, #0]
0xBA22	0x429A    CMP	R2, R3
0xBA24	0xDD04    BLE	L_Get_Object114
;Ducati_logger_driver.c, 4200 :: 		_object_count = cimage_order;
0xBA26	0x4A1F    LDR	R2, [PC, #124]
0xBA28	0xF9B23000  LDRSH	R3, [R2, #0]
0xBA2C	0x4A1C    LDR	R2, [PC, #112]
0xBA2E	0x8013    STRH	R3, [R2, #0]
L_Get_Object114:
;Ducati_logger_driver.c, 4201 :: 		if (circle_order >  _object_count )
0xBA30	0x4A1B    LDR	R2, [PC, #108]
0xBA32	0xF9B23000  LDRSH	R3, [R2, #0]
0xBA36	0x4A1C    LDR	R2, [PC, #112]
0xBA38	0xF9B22000  LDRSH	R2, [R2, #0]
0xBA3C	0x429A    CMP	R2, R3
0xBA3E	0xDD04    BLE	L_Get_Object115
;Ducati_logger_driver.c, 4202 :: 		_object_count = circle_order;
0xBA40	0x4A19    LDR	R2, [PC, #100]
0xBA42	0xF9B23000  LDRSH	R3, [R2, #0]
0xBA46	0x4A16    LDR	R2, [PC, #88]
0xBA48	0x8013    STRH	R3, [R2, #0]
L_Get_Object115:
;Ducati_logger_driver.c, 4203 :: 		if (circle_button_order >  _object_count )
0xBA4A	0x4A15    LDR	R2, [PC, #84]
0xBA4C	0xF9B23000  LDRSH	R3, [R2, #0]
0xBA50	0x4A16    LDR	R2, [PC, #88]
0xBA52	0xF9B22000  LDRSH	R2, [R2, #0]
0xBA56	0x429A    CMP	R2, R3
0xBA58	0xDD04    BLE	L_Get_Object116
;Ducati_logger_driver.c, 4204 :: 		_object_count = circle_button_order;
0xBA5A	0x4A14    LDR	R2, [PC, #80]
0xBA5C	0xF9B23000  LDRSH	R3, [R2, #0]
0xBA60	0x4A0F    LDR	R2, [PC, #60]
0xBA62	0x8013    STRH	R3, [R2, #0]
L_Get_Object116:
;Ducati_logger_driver.c, 4205 :: 		if (box_order >  _object_count )
0xBA64	0x4A0E    LDR	R2, [PC, #56]
0xBA66	0xF9B23000  LDRSH	R3, [R2, #0]
0xBA6A	0x4A11    LDR	R2, [PC, #68]
0xBA6C	0xF9B22000  LDRSH	R2, [R2, #0]
0xBA70	0x429A    CMP	R2, R3
0xBA72	0xDD04    BLE	L_Get_Object117
;Ducati_logger_driver.c, 4206 :: 		_object_count = box_order;
0xBA74	0x4A0E    LDR	R2, [PC, #56]
0xBA76	0xF9B23000  LDRSH	R3, [R2, #0]
0xBA7A	0x4A09    LDR	R2, [PC, #36]
0xBA7C	0x8013    STRH	R3, [R2, #0]
L_Get_Object117:
;Ducati_logger_driver.c, 4207 :: 		if (cbox_order >  _object_count )
0xBA7E	0x4A08    LDR	R2, [PC, #32]
0xBA80	0xF9B23000  LDRSH	R3, [R2, #0]
0xBA84	0x4A0B    LDR	R2, [PC, #44]
0xBA86	0xF9B22000  LDRSH	R2, [R2, #0]
0xBA8A	0x429A    CMP	R2, R3
0xBA8C	0xDD04    BLE	L_Get_Object118
;Ducati_logger_driver.c, 4208 :: 		_object_count = cbox_order;
0xBA8E	0x4A09    LDR	R2, [PC, #36]
0xBA90	0xF9B23000  LDRSH	R3, [R2, #0]
0xBA94	0x4A02    LDR	R2, [PC, #8]
0xBA96	0x8013    STRH	R3, [R2, #0]
L_Get_Object118:
;Ducati_logger_driver.c, 4209 :: 		}
L_end_Get_Object:
0xBA98	0xF8DDE000  LDR	LR, [SP, #0]
0xBA9C	0xB002    ADD	SP, SP, #8
0xBA9E	0x4770    BX	LR
0xBAA0	0x222A2000  	__object_count+0
0xBAA4	0x22582000  	_cimage_order+0
0xBAA8	0x225A2000  	_circle_order+0
0xBAAC	0x225C2000  	_circle_button_order+0
0xBAB0	0x225E2000  	_box_order+0
0xBAB4	0x22602000  	_cbox_order+0
; end of _Get_Object
Ducati_logger_driver_IsInsideObject:
;Ducati_logger_driver.c, 3807 :: 		static char IsInsideObject (unsigned int X, unsigned int Y, unsigned int Left, unsigned int Top, unsigned int Width, unsigned int Height) { // static
; Top start address is: 12 (R3)
; Left start address is: 8 (R2)
; Y start address is: 4 (R1)
; X start address is: 0 (R0)
; Top end address is: 12 (R3)
; Left end address is: 8 (R2)
; Y end address is: 4 (R1)
; X end address is: 0 (R0)
; X start address is: 0 (R0)
; Y start address is: 4 (R1)
; Left start address is: 8 (R2)
; Top start address is: 12 (R3)
; Width start address is: 20 (R5)
0x6F50	0xF8BD5000  LDRH	R5, [SP, #0]
; Height start address is: 24 (R6)
0x6F54	0xF8BD6004  LDRH	R6, [SP, #4]
;Ducati_logger_driver.c, 3808 :: 		if ( (Left<= X) && (Left+ Width - 1 >= X) &&
0x6F58	0x4282    CMP	R2, R0
0x6F5A	0xD80F    BHI	L_Ducati_logger_driver_IsInsideObject266
0x6F5C	0x1954    ADDS	R4, R2, R5
0x6F5E	0xB2A4    UXTH	R4, R4
; Left end address is: 8 (R2)
; Width end address is: 20 (R5)
0x6F60	0x1E64    SUBS	R4, R4, #1
0x6F62	0xB2A4    UXTH	R4, R4
0x6F64	0x4284    CMP	R4, R0
0x6F66	0xD309    BCC	L_Ducati_logger_driver_IsInsideObject265
; X end address is: 0 (R0)
;Ducati_logger_driver.c, 3809 :: 		(Top <= Y)  && (Top + Height - 1 >= Y) )
0x6F68	0x428B    CMP	R3, R1
0x6F6A	0xD807    BHI	L_Ducati_logger_driver_IsInsideObject264
0x6F6C	0x199C    ADDS	R4, R3, R6
0x6F6E	0xB2A4    UXTH	R4, R4
; Top end address is: 12 (R3)
; Height end address is: 24 (R6)
0x6F70	0x1E64    SUBS	R4, R4, #1
0x6F72	0xB2A4    UXTH	R4, R4
0x6F74	0x428C    CMP	R4, R1
0x6F76	0xD301    BCC	L_Ducati_logger_driver_IsInsideObject263
; Y end address is: 4 (R1)
L_Ducati_logger_driver_IsInsideObject262:
;Ducati_logger_driver.c, 3810 :: 		return 1;
0x6F78	0x2001    MOVS	R0, #1
0x6F7A	0xE000    B	L_end_IsInsideObject
;Ducati_logger_driver.c, 3808 :: 		if ( (Left<= X) && (Left+ Width - 1 >= X) &&
L_Ducati_logger_driver_IsInsideObject266:
L_Ducati_logger_driver_IsInsideObject265:
;Ducati_logger_driver.c, 3809 :: 		(Top <= Y)  && (Top + Height - 1 >= Y) )
L_Ducati_logger_driver_IsInsideObject264:
L_Ducati_logger_driver_IsInsideObject263:
;Ducati_logger_driver.c, 3812 :: 		return 0;
0x6F7C	0x2000    MOVS	R0, #0
;Ducati_logger_driver.c, 3813 :: 		}
L_end_IsInsideObject:
0x6F7E	0x4770    BX	LR
; end of Ducati_logger_driver_IsInsideObject
_doSettings:
;Ducati_logger_events_code.c, 234 :: 		void doSettings() {
0xB2A4	0xB081    SUB	SP, SP, #4
0xB2A6	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 235 :: 		BLED_Fade_Out();
0xB2AA	0xF7FEFF81  BL	_BLED_Fade_Out+0
;Ducati_logger_events_code.c, 236 :: 		DrawScreen(&Settings);
0xB2AE	0x4806    LDR	R0, [PC, #24]
0xB2B0	0xF004FACC  BL	_DrawScreen+0
;Ducati_logger_events_code.c, 237 :: 		BLED_Fade_In();
0xB2B4	0xF7FDFD94  BL	_BLED_Fade_In+0
;Ducati_logger_events_code.c, 238 :: 		Logger_State = 2;
0xB2B8	0x2102    MOVS	R1, #2
0xB2BA	0x4804    LDR	R0, [PC, #16]
0xB2BC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_events_code.c, 240 :: 		}
L_end_doSettings:
0xB2BE	0xF8DDE000  LDR	LR, [SP, #0]
0xB2C2	0xB001    ADD	SP, SP, #4
0xB2C4	0x4770    BX	LR
0xB2C6	0xBF00    NOP
0xB2C8	0x10CC2000  	_Settings+0
0xB2CC	0x22962000  	_Logger_State+0
; end of _doSettings
_BLED_Fade_Out:
;Ducati_logger_events_code.c, 60 :: 		void BLED_Fade_Out(){
0xA1B0	0xB082    SUB	SP, SP, #8
0xA1B2	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 63 :: 		for ( i = 255; i > 0 ; i-- ){
; i start address is: 4 (R1)
0xA1B6	0x21FF    MOVS	R1, #255
0xA1B8	0xB209    SXTH	R1, R1
; i end address is: 4 (R1)
L_BLED_Fade_Out0:
; i start address is: 4 (R1)
0xA1BA	0x2900    CMP	R1, #0
0xA1BC	0xDD14    BLE	L_BLED_Fade_Out1
;Ducati_logger_events_code.c, 64 :: 		TFT_Set_DBC_SSD1963(i);
0xA1BE	0xF8AD1004  STRH	R1, [SP, #4]
0xA1C2	0xB2C8    UXTB	R0, R1
0xA1C4	0xF7F9FCC0  BL	_TFT_Set_DBC_SSD1963+0
0xA1C8	0xF9BD1004  LDRSH	R1, [SP, #4]
;Ducati_logger_events_code.c, 65 :: 		Delay_ms(1);
0xA1CC	0xF24C374E  MOVW	R7, #49998
0xA1D0	0xF2C00700  MOVT	R7, #0
0xA1D4	0xBF00    NOP
0xA1D6	0xBF00    NOP
L_BLED_Fade_Out3:
0xA1D8	0x1E7F    SUBS	R7, R7, #1
0xA1DA	0xD1FD    BNE	L_BLED_Fade_Out3
0xA1DC	0xBF00    NOP
0xA1DE	0xBF00    NOP
0xA1E0	0xBF00    NOP
;Ducati_logger_events_code.c, 63 :: 		for ( i = 255; i > 0 ; i-- ){
0xA1E2	0x1E49    SUBS	R1, R1, #1
0xA1E4	0xB209    SXTH	R1, R1
;Ducati_logger_events_code.c, 66 :: 		}
; i end address is: 4 (R1)
0xA1E6	0xE7E8    B	L_BLED_Fade_Out0
L_BLED_Fade_Out1:
;Ducati_logger_events_code.c, 67 :: 		TFT_Set_DBC_SSD1963(0);
0xA1E8	0x2000    MOVS	R0, #0
0xA1EA	0xF7F9FCAD  BL	_TFT_Set_DBC_SSD1963+0
;Ducati_logger_events_code.c, 68 :: 		}
L_end_BLED_Fade_Out:
0xA1EE	0xF8DDE000  LDR	LR, [SP, #0]
0xA1F2	0xB002    ADD	SP, SP, #8
0xA1F4	0x4770    BX	LR
; end of _BLED_Fade_Out
_TFT_Set_DBC_SSD1963:
;__Lib_TFT_Defs.c, 2556 :: 		void TFT_Set_DBC_SSD1963(char value) {
0x3B48	0xB082    SUB	SP, SP, #8
0x3B4A	0xF8CDE000  STR	LR, [SP, #0]
0x3B4E	0xF88D0004  STRB	R0, [SP, #4]
;__Lib_TFT_Defs.c, 2557 :: 		TFT_CS = 0;
0x3B52	0x2200    MOVS	R2, #0
0x3B54	0xB252    SXTB	R2, R2
0x3B56	0x4913    LDR	R1, [PC, #76]
0x3B58	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 2558 :: 		TFT_Set_Index_Ptr(0xBE);
0x3B5A	0x20BE    MOVS	R0, #190
0x3B5C	0x4C12    LDR	R4, [PC, #72]
0x3B5E	0x6824    LDR	R4, [R4, #0]
0x3B60	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2559 :: 		TFT_Write_Command_Ptr(0x06);
0x3B62	0x2006    MOVS	R0, #6
0x3B64	0x4C11    LDR	R4, [PC, #68]
0x3B66	0x6824    LDR	R4, [R4, #0]
0x3B68	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2560 :: 		TFT_Write_Command_Ptr(value);
0x3B6A	0xF89D0004  LDRB	R0, [SP, #4]
0x3B6E	0x4C0F    LDR	R4, [PC, #60]
0x3B70	0x6824    LDR	R4, [R4, #0]
0x3B72	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2561 :: 		TFT_Write_Command_Ptr(0x01);
0x3B74	0x2001    MOVS	R0, #1
0x3B76	0x4C0D    LDR	R4, [PC, #52]
0x3B78	0x6824    LDR	R4, [R4, #0]
0x3B7A	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2562 :: 		TFT_Write_Command_Ptr(0xFF);
0x3B7C	0x20FF    MOVS	R0, #255
0x3B7E	0x4C0B    LDR	R4, [PC, #44]
0x3B80	0x6824    LDR	R4, [R4, #0]
0x3B82	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2563 :: 		TFT_Write_Command_Ptr(0x00);
0x3B84	0x2000    MOVS	R0, #0
0x3B86	0x4C09    LDR	R4, [PC, #36]
0x3B88	0x6824    LDR	R4, [R4, #0]
0x3B8A	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2564 :: 		TFT_Write_Command_Ptr(0x01);
0x3B8C	0x2001    MOVS	R0, #1
0x3B8E	0x4C07    LDR	R4, [PC, #28]
0x3B90	0x6824    LDR	R4, [R4, #0]
0x3B92	0x47A0    BLX	R4
;__Lib_TFT_Defs.c, 2565 :: 		TFT_CS = 1;
0x3B94	0x2201    MOVS	R2, #1
0x3B96	0xB252    SXTB	R2, R2
0x3B98	0x4902    LDR	R1, [PC, #8]
0x3B9A	0x600A    STR	R2, [R1, #0]
;__Lib_TFT_Defs.c, 2566 :: 		}
L_end_TFT_Set_DBC_SSD1963:
0x3B9C	0xF8DDE000  LDR	LR, [SP, #0]
0x3BA0	0xB002    ADD	SP, SP, #8
0x3BA2	0x4770    BX	LR
0x3BA4	0x82B44242  	TFT_CS+0
0x3BA8	0x2E082000  	_TFT_Set_Index_Ptr+0
0x3BAC	0x2E0C2000  	_TFT_Write_Command_Ptr+0
; end of _TFT_Set_DBC_SSD1963
_BLED_Fade_In:
;Ducati_logger_events_code.c, 70 :: 		void BLED_Fade_In(){
0x8DE0	0xB082    SUB	SP, SP, #8
0x8DE2	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 73 :: 		for (i = 1; i < 255; i++){
; i start address is: 4 (R1)
0x8DE6	0x2101    MOVS	R1, #1
0x8DE8	0xB209    SXTH	R1, R1
; i end address is: 4 (R1)
L_BLED_Fade_In5:
; i start address is: 4 (R1)
0x8DEA	0xF1B10FFF  CMP	R1, #255
0x8DEE	0xDA14    BGE	L_BLED_Fade_In6
;Ducati_logger_events_code.c, 74 :: 		TFT_Set_DBC_SSD1963(i);
0x8DF0	0xF8AD1004  STRH	R1, [SP, #4]
0x8DF4	0xB2C8    UXTB	R0, R1
0x8DF6	0xF7FAFEA7  BL	_TFT_Set_DBC_SSD1963+0
0x8DFA	0xF9BD1004  LDRSH	R1, [SP, #4]
;Ducati_logger_events_code.c, 75 :: 		Delay_ms(1);
0x8DFE	0xF24C374E  MOVW	R7, #49998
0x8E02	0xF2C00700  MOVT	R7, #0
0x8E06	0xBF00    NOP
0x8E08	0xBF00    NOP
L_BLED_Fade_In8:
0x8E0A	0x1E7F    SUBS	R7, R7, #1
0x8E0C	0xD1FD    BNE	L_BLED_Fade_In8
0x8E0E	0xBF00    NOP
0x8E10	0xBF00    NOP
0x8E12	0xBF00    NOP
;Ducati_logger_events_code.c, 73 :: 		for (i = 1; i < 255; i++){
0x8E14	0x1C49    ADDS	R1, R1, #1
0x8E16	0xB209    SXTH	R1, R1
;Ducati_logger_events_code.c, 76 :: 		}
; i end address is: 4 (R1)
0x8E18	0xE7E7    B	L_BLED_Fade_In5
L_BLED_Fade_In6:
;Ducati_logger_events_code.c, 77 :: 		TFT_Set_DBC_SSD1963(255);
0x8E1A	0x20FF    MOVS	R0, #255
0x8E1C	0xF7FAFE94  BL	_TFT_Set_DBC_SSD1963+0
;Ducati_logger_events_code.c, 78 :: 		}
L_end_BLED_Fade_In:
0x8E20	0xF8DDE000  LDR	LR, [SP, #0]
0x8E24	0xB002    ADD	SP, SP, #8
0x8E26	0x4770    BX	LR
; end of _BLED_Fade_In
_doNextScreen:
;Ducati_logger_events_code.c, 215 :: 		void doNextScreen() {
0xBBC4	0xB081    SUB	SP, SP, #4
0xBBC6	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 216 :: 		BLED_Fade_Out();
0xBBCA	0xF7FEFAF1  BL	_BLED_Fade_Out+0
;Ducati_logger_events_code.c, 217 :: 		DrawScreen(&Tachometer_graphics);
0xBBCE	0x4806    LDR	R0, [PC, #24]
0xBBD0	0xF003FE3C  BL	_DrawScreen+0
;Ducati_logger_events_code.c, 218 :: 		BLED_Fade_In();
0xBBD4	0xF7FDF904  BL	_BLED_Fade_In+0
;Ducati_logger_events_code.c, 219 :: 		Logger_State = 1;
0xBBD8	0x2101    MOVS	R1, #1
0xBBDA	0x4804    LDR	R0, [PC, #16]
0xBBDC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_events_code.c, 220 :: 		}
L_end_doNextScreen:
0xBBDE	0xF8DDE000  LDR	LR, [SP, #0]
0xBBE2	0xB001    ADD	SP, SP, #4
0xBBE4	0x4770    BX	LR
0xBBE6	0xBF00    NOP
0xBBE8	0x0C882000  	_Tachometer_graphics+0
0xBBEC	0x22962000  	_Logger_State+0
; end of _doNextScreen
_doLog:
;Ducati_logger_events_code.c, 230 :: 		void doLog() {
;Ducati_logger_events_code.c, 232 :: 		}
L_end_doLog:
0xBBF0	0x4770    BX	LR
; end of _doLog
_doPrevScreen:
;Ducati_logger_events_code.c, 222 :: 		void doPrevScreen() {
0xC2B4	0xB081    SUB	SP, SP, #4
0xC2B6	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 223 :: 		BLED_Fade_Out();
0xC2BA	0xF7FDFF79  BL	_BLED_Fade_Out+0
;Ducati_logger_events_code.c, 224 :: 		DrawScreen(&Speedometer_graphics);
0xC2BE	0x4806    LDR	R0, [PC, #24]
0xC2C0	0xF003FAC4  BL	_DrawScreen+0
;Ducati_logger_events_code.c, 225 :: 		BLED_Fade_In();
0xC2C4	0xF7FCFD8C  BL	_BLED_Fade_In+0
;Ducati_logger_events_code.c, 226 :: 		Logger_State = 0;
0xC2C8	0x2100    MOVS	R1, #0
0xC2CA	0x4804    LDR	R0, [PC, #16]
0xC2CC	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_events_code.c, 228 :: 		}
L_end_doPrevScreen:
0xC2CE	0xF8DDE000  LDR	LR, [SP, #0]
0xC2D2	0xB001    ADD	SP, SP, #4
0xC2D4	0x4770    BX	LR
0xC2D6	0xBF00    NOP
0xC2D8	0x08742000  	_Speedometer_graphics+0
0xC2DC	0x22962000  	_Logger_State+0
; end of _doPrevScreen
_doSetClock:
;Ducati_logger_events_code.c, 162 :: 		void doSetClock() {
0xC284	0xB081    SUB	SP, SP, #4
0xC286	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 163 :: 		BLED_Fade_Out();
0xC28A	0xF7FDFF91  BL	_BLED_Fade_Out+0
;Ducati_logger_events_code.c, 164 :: 		DrawScreen(&Set_clock);
0xC28E	0x4807    LDR	R0, [PC, #28]
0xC290	0xF003FADC  BL	_DrawScreen+0
;Ducati_logger_events_code.c, 165 :: 		BLED_Fade_In();
0xC294	0xF7FCFDA4  BL	_BLED_Fade_In+0
;Ducati_logger_events_code.c, 166 :: 		RTC_Example_init();
0xC298	0xF7FEF81C  BL	_RTC_Example_init+0
;Ducati_logger_events_code.c, 167 :: 		Logger_State = 2;
0xC29C	0x2102    MOVS	R1, #2
0xC29E	0x4804    LDR	R0, [PC, #16]
0xC2A0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_events_code.c, 169 :: 		}
L_end_doSetClock:
0xC2A2	0xF8DDE000  LDR	LR, [SP, #0]
0xC2A6	0xB001    ADD	SP, SP, #4
0xC2A8	0x4770    BX	LR
0xC2AA	0xBF00    NOP
0xC2AC	0x22E82000  	_Set_clock+0
0xC2B0	0x22962000  	_Logger_State+0
; end of _doSetClock
_RTC_Example_init:
;RTCC_main.c, 546 :: 		void RTC_Example_init(){
0xA2D4	0xB081    SUB	SP, SP, #4
0xA2D6	0xF8CDE000  STR	LR, [SP, #0]
;RTCC_main.c, 547 :: 		Roller_Init();
0xA2DA	0xF7F9FCE9  BL	_Roller_Init+0
;RTCC_main.c, 548 :: 		RTCC_Read(&MyTime);
0xA2DE	0x482C    LDR	R0, [PC, #176]
0xA2E0	0xF7FAFE12  BL	_RTCC_Read+0
;RTCC_main.c, 549 :: 		Roll_Set_Level(&Hour1Roll, MyTime.hours / 10);
0xA2E4	0x482B    LDR	R0, [PC, #172]
0xA2E6	0xF9901000  LDRSB	R1, [R0, #0]
0xA2EA	0x200A    MOVS	R0, #10
0xA2EC	0xB240    SXTB	R0, R0
0xA2EE	0xFB91F0F0  SDIV	R0, R1, R0
0xA2F2	0xB2C1    UXTB	R1, R0
0xA2F4	0x4828    LDR	R0, [PC, #160]
0xA2F6	0xF7FAFDF5  BL	_Roll_Set_Level+0
;RTCC_main.c, 550 :: 		Roll_Set_Level(&Hour2Roll, MyTime.hours % 10);
0xA2FA	0x4826    LDR	R0, [PC, #152]
0xA2FC	0xF9902000  LDRSB	R2, [R0, #0]
0xA300	0x210A    MOVS	R1, #10
0xA302	0xB249    SXTB	R1, R1
0xA304	0xFB92F0F1  SDIV	R0, R2, R1
0xA308	0xFB012010  MLS	R0, R1, R0, R2
0xA30C	0xB2C1    UXTB	R1, R0
0xA30E	0x4823    LDR	R0, [PC, #140]
0xA310	0xF7FAFDE8  BL	_Roll_Set_Level+0
;RTCC_main.c, 551 :: 		Roll_Set_Level(&Minute1Roll, MyTime.minutes / 10);
0xA314	0x4822    LDR	R0, [PC, #136]
0xA316	0xF9901000  LDRSB	R1, [R0, #0]
0xA31A	0x200A    MOVS	R0, #10
0xA31C	0xB240    SXTB	R0, R0
0xA31E	0xFB91F0F0  SDIV	R0, R1, R0
0xA322	0xB2C1    UXTB	R1, R0
0xA324	0x481F    LDR	R0, [PC, #124]
0xA326	0xF7FAFDDD  BL	_Roll_Set_Level+0
;RTCC_main.c, 552 :: 		Roll_Set_Level(&Minute2Roll, MyTime.minutes % 10);
0xA32A	0x481D    LDR	R0, [PC, #116]
0xA32C	0xF9902000  LDRSB	R2, [R0, #0]
0xA330	0x210A    MOVS	R1, #10
0xA332	0xB249    SXTB	R1, R1
0xA334	0xFB92F0F1  SDIV	R0, R2, R1
0xA338	0xFB012010  MLS	R0, R1, R0, R2
0xA33C	0xB2C1    UXTB	R1, R0
0xA33E	0x481A    LDR	R0, [PC, #104]
0xA340	0xF7FAFDD0  BL	_Roll_Set_Level+0
;RTCC_main.c, 553 :: 		Roll_Set_Level(&AmPm, MyTime.ampm);
0xA344	0x4812    LDR	R0, [PC, #72]
0xA346	0xF9900000  LDRSB	R0, [R0, #0]
0xA34A	0xB2C1    UXTB	R1, R0
0xA34C	0x4817    LDR	R0, [PC, #92]
0xA34E	0xF7FAFDC9  BL	_Roll_Set_Level+0
;RTCC_main.c, 554 :: 		Roller_Deactivate(&Hour1Roll, 111, 96);
0xA352	0x2260    MOVS	R2, #96
0xA354	0x216F    MOVS	R1, #111
0xA356	0x4810    LDR	R0, [PC, #64]
0xA358	0xF7FAFD1C  BL	_Roller_Deactivate+0
;RTCC_main.c, 555 :: 		Roller_Deactivate(&Hour2Roll, 149, 96);
0xA35C	0x2260    MOVS	R2, #96
0xA35E	0x2195    MOVS	R1, #149
0xA360	0x480E    LDR	R0, [PC, #56]
0xA362	0xF7FAFD17  BL	_Roller_Deactivate+0
;RTCC_main.c, 556 :: 		Roller_Deactivate(&Minute1Roll, 215, 96);
0xA366	0x2260    MOVS	R2, #96
0xA368	0x21D7    MOVS	R1, #215
0xA36A	0x480E    LDR	R0, [PC, #56]
0xA36C	0xF7FAFD12  BL	_Roller_Deactivate+0
;RTCC_main.c, 557 :: 		Roller_Deactivate(&Minute2Roll, 253, 96);
0xA370	0x2260    MOVS	R2, #96
0xA372	0x21FD    MOVS	R1, #253
0xA374	0x480C    LDR	R0, [PC, #48]
0xA376	0xF7FAFD0D  BL	_Roller_Deactivate+0
;RTCC_main.c, 558 :: 		Roller_Deactivate(&AmPM, 307, 96);
0xA37A	0x2260    MOVS	R2, #96
0xA37C	0xF2401133  MOVW	R1, #307
0xA380	0x480A    LDR	R0, [PC, #40]
0xA382	0xF7FAFD07  BL	_Roller_Deactivate+0
;RTCC_main.c, 559 :: 		}
L_end_RTC_Example_init:
0xA386	0xF8DDE000  LDR	LR, [SP, #0]
0xA38A	0xB001    ADD	SP, SP, #4
0xA38C	0x4770    BX	LR
0xA38E	0xBF00    NOP
0xA390	0x27182000  	_MyTime+0
0xA394	0x271B2000  	_MyTime+3
0xA398	0x27202000  	_Hour1Roll+0
0xA39C	0x27382000  	_Hour2Roll+0
0xA3A0	0x271A2000  	_MyTime+2
0xA3A4	0x27502000  	_Minute1Roll+0
0xA3A8	0x27682000  	_Minute2Roll+0
0xA3AC	0x27802000  	_AmPm+0
; end of _RTC_Example_init
_Roller_Init:
;RTCC_main.c, 286 :: 		void Roller_Init(){
;RTCC_main.c, 287 :: 		Hour1Roll.Left = 108;
0x3CB0	0x216C    MOVS	R1, #108
0x3CB2	0x484C    LDR	R0, [PC, #304]
0x3CB4	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 288 :: 		Hour1Roll.Top  = 42;
0x3CB6	0x212A    MOVS	R1, #42
0x3CB8	0x484B    LDR	R0, [PC, #300]
0x3CBA	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 289 :: 		Hour1Roll.Width = 36;
0x3CBC	0x2124    MOVS	R1, #36
0x3CBE	0x484B    LDR	R0, [PC, #300]
0x3CC0	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 290 :: 		Hour1Roll.Height = 194;
0x3CC2	0x21C2    MOVS	R1, #194
0x3CC4	0x484A    LDR	R0, [PC, #296]
0x3CC6	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 291 :: 		Hour1Roll.ImageHeight = 148;
0x3CC8	0x2194    MOVS	R1, #148
0x3CCA	0x484A    LDR	R0, [PC, #296]
0x3CCC	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 292 :: 		Hour1Roll.active = 0;
0x3CCE	0x2100    MOVS	R1, #0
0x3CD0	0xB209    SXTH	R1, R1
0x3CD2	0x4849    LDR	R0, [PC, #292]
0x3CD4	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 293 :: 		Hour1Roll.Picture_Name = stripe_black_bmp;
0x3CD6	0x4949    LDR	R1, [PC, #292]
0x3CD8	0x4849    LDR	R0, [PC, #292]
0x3CDA	0x6001    STR	R1, [R0, #0]
;RTCC_main.c, 294 :: 		Hour1Roll.position = 148 / 2 / 2; // 740 / 10 / 2;
0x3CDC	0x2125    MOVS	R1, #37
0x3CDE	0xB209    SXTH	R1, R1
0x3CE0	0x4848    LDR	R0, [PC, #288]
0x3CE2	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 295 :: 		Hour1Roll.levels = 2;
0x3CE4	0x2102    MOVS	R1, #2
0x3CE6	0x4848    LDR	R0, [PC, #288]
0x3CE8	0x7001    STRB	R1, [R0, #0]
;RTCC_main.c, 297 :: 		Hour2Roll.Left = 146;
0x3CEA	0x2192    MOVS	R1, #146
0x3CEC	0x4847    LDR	R0, [PC, #284]
0x3CEE	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 298 :: 		Hour2Roll.Top  = 42;
0x3CF0	0x212A    MOVS	R1, #42
0x3CF2	0x4847    LDR	R0, [PC, #284]
0x3CF4	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 299 :: 		Hour2Roll.Width = 36;
0x3CF6	0x2124    MOVS	R1, #36
0x3CF8	0x4846    LDR	R0, [PC, #280]
0x3CFA	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 300 :: 		Hour2Roll.Height = 194;
0x3CFC	0x21C2    MOVS	R1, #194
0x3CFE	0x4846    LDR	R0, [PC, #280]
0x3D00	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 301 :: 		Hour2Roll.ImageHeight = 740;
0x3D02	0xF24021E4  MOVW	R1, #740
0x3D06	0x4845    LDR	R0, [PC, #276]
0x3D08	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 302 :: 		Hour2Roll.active = 0;
0x3D0A	0x2100    MOVS	R1, #0
0x3D0C	0xB209    SXTH	R1, R1
0x3D0E	0x4844    LDR	R0, [PC, #272]
0x3D10	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 303 :: 		Hour2Roll.Picture_Name = stripe_black_bmp;
0x3D12	0x493A    LDR	R1, [PC, #232]
0x3D14	0x4843    LDR	R0, [PC, #268]
0x3D16	0x6001    STR	R1, [R0, #0]
;RTCC_main.c, 304 :: 		Hour2Roll.position =  740 / 10 / 2;
0x3D18	0x2125    MOVS	R1, #37
0x3D1A	0xB209    SXTH	R1, R1
0x3D1C	0x4842    LDR	R0, [PC, #264]
0x3D1E	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 305 :: 		Hour2Roll.levels = 10;
0x3D20	0x210A    MOVS	R1, #10
0x3D22	0x4842    LDR	R0, [PC, #264]
0x3D24	0x7001    STRB	R1, [R0, #0]
;RTCC_main.c, 307 :: 		Minute1Roll.Left = 212;
0x3D26	0x21D4    MOVS	R1, #212
0x3D28	0x4841    LDR	R0, [PC, #260]
0x3D2A	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 308 :: 		Minute1Roll.Top  = 42;
0x3D2C	0x212A    MOVS	R1, #42
0x3D2E	0x4841    LDR	R0, [PC, #260]
0x3D30	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 309 :: 		Minute1Roll.Width = 36;
0x3D32	0x2124    MOVS	R1, #36
0x3D34	0x4840    LDR	R0, [PC, #256]
0x3D36	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 310 :: 		Minute1Roll.Height = 194;
0x3D38	0x21C2    MOVS	R1, #194
0x3D3A	0x4840    LDR	R0, [PC, #256]
0x3D3C	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 311 :: 		Minute1Roll.ImageHeight = 444;
0x3D3E	0xF24011BC  MOVW	R1, #444
0x3D42	0x483F    LDR	R0, [PC, #252]
0x3D44	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 312 :: 		Minute1Roll.active = 0;
0x3D46	0x2100    MOVS	R1, #0
0x3D48	0xB209    SXTH	R1, R1
0x3D4A	0x483E    LDR	R0, [PC, #248]
0x3D4C	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 313 :: 		Minute1Roll.Picture_Name = stripe_black_bmp;
0x3D4E	0x492B    LDR	R1, [PC, #172]
0x3D50	0x483D    LDR	R0, [PC, #244]
0x3D52	0x6001    STR	R1, [R0, #0]
;RTCC_main.c, 314 :: 		Minute1Roll.position =  444 / 6 / 2;
0x3D54	0x2125    MOVS	R1, #37
0x3D56	0xB209    SXTH	R1, R1
0x3D58	0x483C    LDR	R0, [PC, #240]
0x3D5A	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 315 :: 		Minute1Roll.levels = 6;
0x3D5C	0x2106    MOVS	R1, #6
0x3D5E	0x483C    LDR	R0, [PC, #240]
0x3D60	0x7001    STRB	R1, [R0, #0]
;RTCC_main.c, 317 :: 		Minute2Roll.Left = 250;
0x3D62	0x21FA    MOVS	R1, #250
0x3D64	0x483B    LDR	R0, [PC, #236]
0x3D66	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 318 :: 		Minute2Roll.Top  = 42;
0x3D68	0x212A    MOVS	R1, #42
0x3D6A	0x483B    LDR	R0, [PC, #236]
0x3D6C	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 319 :: 		Minute2Roll.Width = 36;
0x3D6E	0x2124    MOVS	R1, #36
0x3D70	0x483A    LDR	R0, [PC, #232]
0x3D72	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 320 :: 		Minute2Roll.Height = 194;
0x3D74	0x21C2    MOVS	R1, #194
0x3D76	0x483A    LDR	R0, [PC, #232]
0x3D78	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 321 :: 		Minute2Roll.ImageHeight = 740;
0x3D7A	0xF24021E4  MOVW	R1, #740
0x3D7E	0x4839    LDR	R0, [PC, #228]
0x3D80	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 322 :: 		Minute2Roll.active = 0;
0x3D82	0x2100    MOVS	R1, #0
0x3D84	0xB209    SXTH	R1, R1
0x3D86	0x4838    LDR	R0, [PC, #224]
0x3D88	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 323 :: 		Minute2Roll.Picture_Name = stripe_black_bmp;
0x3D8A	0x491C    LDR	R1, [PC, #112]
0x3D8C	0x4837    LDR	R0, [PC, #220]
0x3D8E	0x6001    STR	R1, [R0, #0]
;RTCC_main.c, 324 :: 		Minute2Roll.position =  740 / 10 / 2;
0x3D90	0x2125    MOVS	R1, #37
0x3D92	0xB209    SXTH	R1, R1
0x3D94	0x4836    LDR	R0, [PC, #216]
0x3D96	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 325 :: 		Minute2Roll.levels = 10;
0x3D98	0x210A    MOVS	R1, #10
0x3D9A	0x4836    LDR	R0, [PC, #216]
0x3D9C	0x7001    STRB	R1, [R0, #0]
;RTCC_main.c, 327 :: 		AmPm.Left         = 305;
0x3D9E	0xF2401131  MOVW	R1, #305
0x3DA2	0x4835    LDR	R0, [PC, #212]
0x3DA4	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 328 :: 		AmPm.Top          = 42;
0x3DA6	0x212A    MOVS	R1, #42
0x3DA8	0x4834    LDR	R0, [PC, #208]
0x3DAA	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 329 :: 		AmPm.Width        = 90;
0x3DAC	0x215A    MOVS	R1, #90
0x3DAE	0x4834    LDR	R0, [PC, #208]
0x3DB0	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 330 :: 		AmPm.Height       = 194;
0x3DB2	0x21C2    MOVS	R1, #194
0x3DB4	0x4833    LDR	R0, [PC, #204]
0x3DB6	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 331 :: 		AmPm.ImageHeight  = 151;
0x3DB8	0x2197    MOVS	R1, #151
0x3DBA	0x4833    LDR	R0, [PC, #204]
0x3DBC	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 332 :: 		AmPm.Picture_Name = am_pm_bmp;
0x3DBE	0x4933    LDR	R1, [PC, #204]
0x3DC0	0x4833    LDR	R0, [PC, #204]
0x3DC2	0x6001    STR	R1, [R0, #0]
;RTCC_main.c, 333 :: 		AmPm.currentlevel = 0;
0x3DC4	0x2100    MOVS	R1, #0
0x3DC6	0x4833    LDR	R0, [PC, #204]
0x3DC8	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 334 :: 		AmPm.active       = 0;
0x3DCA	0x2100    MOVS	R1, #0
0x3DCC	0xB209    SXTH	R1, R1
0x3DCE	0x4832    LDR	R0, [PC, #200]
0x3DD0	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 335 :: 		AmPm.position     = 151 / 2 / 2;
0x3DD2	0x2125    MOVS	R1, #37
0x3DD4	0xB209    SXTH	R1, R1
0x3DD6	0x4831    LDR	R0, [PC, #196]
0x3DD8	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 336 :: 		AmPm.levels       = 2;
0x3DDA	0x2102    MOVS	R1, #2
0x3DDC	0x4830    LDR	R0, [PC, #192]
0x3DDE	0x7001    STRB	R1, [R0, #0]
;RTCC_main.c, 337 :: 		}
L_end_Roller_Init:
0x3DE0	0x4770    BX	LR
0x3DE2	0xBF00    NOP
0x3DE4	0x27202000  	_Hour1Roll+0
0x3DE8	0x27222000  	_Hour1Roll+2
0x3DEC	0x27242000  	_Hour1Roll+4
0x3DF0	0x27262000  	_Hour1Roll+6
0x3DF4	0x27282000  	_Hour1Roll+8
0x3DF8	0x27322000  	_Hour1Roll+18
0x3DFC	0x9882003D  	#4036738
0x3E00	0x272C2000  	_Hour1Roll+12
0x3E04	0x27342000  	_Hour1Roll+20
0x3E08	0x27362000  	_Hour1Roll+22
0x3E0C	0x27382000  	_Hour2Roll+0
0x3E10	0x273A2000  	_Hour2Roll+2
0x3E14	0x273C2000  	_Hour2Roll+4
0x3E18	0x273E2000  	_Hour2Roll+6
0x3E1C	0x27402000  	_Hour2Roll+8
0x3E20	0x274A2000  	_Hour2Roll+18
0x3E24	0x27442000  	_Hour2Roll+12
0x3E28	0x274C2000  	_Hour2Roll+20
0x3E2C	0x274E2000  	_Hour2Roll+22
0x3E30	0x27502000  	_Minute1Roll+0
0x3E34	0x27522000  	_Minute1Roll+2
0x3E38	0x27542000  	_Minute1Roll+4
0x3E3C	0x27562000  	_Minute1Roll+6
0x3E40	0x27582000  	_Minute1Roll+8
0x3E44	0x27622000  	_Minute1Roll+18
0x3E48	0x275C2000  	_Minute1Roll+12
0x3E4C	0x27642000  	_Minute1Roll+20
0x3E50	0x27662000  	_Minute1Roll+22
0x3E54	0x27682000  	_Minute2Roll+0
0x3E58	0x276A2000  	_Minute2Roll+2
0x3E5C	0x276C2000  	_Minute2Roll+4
0x3E60	0x276E2000  	_Minute2Roll+6
0x3E64	0x27702000  	_Minute2Roll+8
0x3E68	0x277A2000  	_Minute2Roll+18
0x3E6C	0x27742000  	_Minute2Roll+12
0x3E70	0x277C2000  	_Minute2Roll+20
0x3E74	0x277E2000  	_Minute2Roll+22
0x3E78	0x27802000  	_AmPm+0
0x3E7C	0x27822000  	_AmPm+2
0x3E80	0x27842000  	_AmPm+4
0x3E84	0x27862000  	_AmPm+6
0x3E88	0x27882000  	_AmPm+8
0x3E8C	0x68A8003E  	#4090024
0x3E90	0x278C2000  	_AmPm+12
0x3E94	0x27902000  	_AmPm+16
0x3E98	0x27922000  	_AmPm+18
0x3E9C	0x27942000  	_AmPm+20
0x3EA0	0x27962000  	_AmPm+22
; end of _Roller_Init
_RTCC_Read:
;RTCC_driver.c, 96 :: 		char RTCC_Read(TTime *RTCC_Time){
; RTCC_Time start address is: 0 (R0)
0x4F08	0xB083    SUB	SP, SP, #12
0x4F0A	0xF8CDE000  STR	LR, [SP, #0]
0x4F0E	0x4604    MOV	R4, R0
; RTCC_Time end address is: 0 (R0)
; RTCC_Time start address is: 16 (R4)
;RTCC_driver.c, 97 :: 		char temp = 0;
; temp start address is: 0 (R0)
0x4F10	0x2000    MOVS	R0, #0
;RTCC_driver.c, 99 :: 		RTC_Time = RTC_TR;
0x4F12	0x4939    LDR	R1, [PC, #228]
0x4F14	0x6809    LDR	R1, [R1, #0]
0x4F16	0x4B39    LDR	R3, [PC, #228]
0x4F18	0x6019    STR	R1, [R3, #0]
;RTCC_driver.c, 100 :: 		RTC_Date = RTC_DR;
0x4F1A	0x4939    LDR	R1, [PC, #228]
0x4F1C	0x680A    LDR	R2, [R1, #0]
0x4F1E	0x4939    LDR	R1, [PC, #228]
0x4F20	0x600A    STR	R2, [R1, #0]
;RTCC_driver.c, 102 :: 		if(RTC_Time != old_RTC_Time){
0x4F22	0x4939    LDR	R1, [PC, #228]
0x4F24	0x680A    LDR	R2, [R1, #0]
0x4F26	0x4619    MOV	R1, R3
0x4F28	0x6809    LDR	R1, [R1, #0]
0x4F2A	0x4291    CMP	R1, R2
0x4F2C	0xD030    BEQ	L__RTCC_Read9
; temp end address is: 0 (R0)
;RTCC_driver.c, 103 :: 		old_RTC_Time = RTC_Time;
0x4F2E	0x4B33    LDR	R3, [PC, #204]
0x4F30	0x9302    STR	R3, [SP, #8]
0x4F32	0x681A    LDR	R2, [R3, #0]
0x4F34	0x4934    LDR	R1, [PC, #208]
0x4F36	0x600A    STR	R2, [R1, #0]
;RTCC_driver.c, 105 :: 		RTCC_Time->ampm = (short)((RTC_Time & 0x400000) >> 22);
0x4F38	0x4619    MOV	R1, R3
0x4F3A	0x6809    LDR	R1, [R1, #0]
0x4F3C	0xF4010180  AND	R1, R1, #4194304
0x4F40	0x0D89    LSRS	R1, R1, #22
0x4F42	0xB249    SXTB	R1, R1
0x4F44	0x7021    STRB	R1, [R4, #0]
;RTCC_driver.c, 106 :: 		RTCC_Time->hours = Bcd2Dec((short)((RTC_Time & 0x3f0000) >> 16));
0x4F46	0x1CE1    ADDS	R1, R4, #3
0x4F48	0x9101    STR	R1, [SP, #4]
0x4F4A	0x4619    MOV	R1, R3
0x4F4C	0x6809    LDR	R1, [R1, #0]
0x4F4E	0xF401117C  AND	R1, R1, #4128768
0x4F52	0x0C09    LSRS	R1, R1, #16
0x4F54	0xB2C8    UXTB	R0, R1
0x4F56	0xF7FEF8E1  BL	_Bcd2Dec+0
0x4F5A	0x9901    LDR	R1, [SP, #4]
0x4F5C	0x7008    STRB	R0, [R1, #0]
;RTCC_driver.c, 107 :: 		RTCC_Time->minutes = Bcd2Dec((short)((RTC_Time & 0x007f00) >> 8));
0x4F5E	0x1CA2    ADDS	R2, R4, #2
0x4F60	0x9902    LDR	R1, [SP, #8]
0x4F62	0x9201    STR	R2, [SP, #4]
0x4F64	0x6809    LDR	R1, [R1, #0]
0x4F66	0xF40141FE  AND	R1, R1, #32512
0x4F6A	0x0A09    LSRS	R1, R1, #8
0x4F6C	0xB2C8    UXTB	R0, R1
0x4F6E	0xF7FEF8D5  BL	_Bcd2Dec+0
0x4F72	0x9901    LDR	R1, [SP, #4]
0x4F74	0x7008    STRB	R0, [R1, #0]
;RTCC_driver.c, 108 :: 		RTCC_Time->seconds = Bcd2Dec((short)(RTC_Time & 0x0000ff));
0x4F76	0x1C62    ADDS	R2, R4, #1
0x4F78	0x9902    LDR	R1, [SP, #8]
0x4F7A	0x9201    STR	R2, [SP, #4]
0x4F7C	0x6809    LDR	R1, [R1, #0]
0x4F7E	0xF00101FF  AND	R1, R1, #255
0x4F82	0xB2C8    UXTB	R0, R1
0x4F84	0xF7FEF8CA  BL	_Bcd2Dec+0
0x4F88	0x9901    LDR	R1, [SP, #4]
0x4F8A	0x7008    STRB	R0, [R1, #0]
;RTCC_driver.c, 110 :: 		temp = 1;
; temp start address is: 0 (R0)
0x4F8C	0x2001    MOVS	R0, #1
; temp end address is: 0 (R0)
;RTCC_driver.c, 111 :: 		}
0x4F8E	0xE7FF    B	L_RTCC_Read7
L__RTCC_Read9:
;RTCC_driver.c, 102 :: 		if(RTC_Time != old_RTC_Time){
;RTCC_driver.c, 111 :: 		}
L_RTCC_Read7:
;RTCC_driver.c, 113 :: 		if(RTC_Date != old_RTC_Date){
; temp start address is: 0 (R0)
0x4F90	0x491E    LDR	R1, [PC, #120]
0x4F92	0x680A    LDR	R2, [R1, #0]
0x4F94	0x491B    LDR	R1, [PC, #108]
0x4F96	0x6809    LDR	R1, [R1, #0]
0x4F98	0x4291    CMP	R1, R2
0x4F9A	0xD029    BEQ	L__RTCC_Read10
; temp end address is: 0 (R0)
;RTCC_driver.c, 114 :: 		old_RTC_Date = RTC_Date;
0x4F9C	0x4B19    LDR	R3, [PC, #100]
0x4F9E	0x9302    STR	R3, [SP, #8]
0x4FA0	0x681A    LDR	R2, [R3, #0]
0x4FA2	0x491A    LDR	R1, [PC, #104]
0x4FA4	0x600A    STR	R2, [R1, #0]
;RTCC_driver.c, 116 :: 		RTCC_Time->year = Bcd2Dec((short)((RTC_Date & 0x3f0000) >> 16));
0x4FA6	0x1DA1    ADDS	R1, R4, #6
0x4FA8	0x9101    STR	R1, [SP, #4]
0x4FAA	0x4619    MOV	R1, R3
0x4FAC	0x6809    LDR	R1, [R1, #0]
0x4FAE	0xF401117C  AND	R1, R1, #4128768
0x4FB2	0x0C09    LSRS	R1, R1, #16
0x4FB4	0xB2C8    UXTB	R0, R1
0x4FB6	0xF7FEF8B1  BL	_Bcd2Dec+0
0x4FBA	0x9901    LDR	R1, [SP, #4]
0x4FBC	0x8008    STRH	R0, [R1, #0]
;RTCC_driver.c, 117 :: 		RTCC_Time->month = Bcd2Dec((short)((RTC_Date & 0x001f00) >> 8));
0x4FBE	0x1D62    ADDS	R2, R4, #5
0x4FC0	0x9902    LDR	R1, [SP, #8]
0x4FC2	0x9201    STR	R2, [SP, #4]
0x4FC4	0x6809    LDR	R1, [R1, #0]
0x4FC6	0xF40151F8  AND	R1, R1, #7936
0x4FCA	0x0A09    LSRS	R1, R1, #8
0x4FCC	0xB2C8    UXTB	R0, R1
0x4FCE	0xF7FEF8A5  BL	_Bcd2Dec+0
0x4FD2	0x9901    LDR	R1, [SP, #4]
0x4FD4	0x7008    STRB	R0, [R1, #0]
;RTCC_driver.c, 118 :: 		RTCC_Time->day = Bcd2Dec((short)(RTC_Date & 0x0000ff));
0x4FD6	0x1D22    ADDS	R2, R4, #4
; RTCC_Time end address is: 16 (R4)
0x4FD8	0x9902    LDR	R1, [SP, #8]
0x4FDA	0x9201    STR	R2, [SP, #4]
0x4FDC	0x6809    LDR	R1, [R1, #0]
0x4FDE	0xF00101FF  AND	R1, R1, #255
0x4FE2	0xB2C8    UXTB	R0, R1
0x4FE4	0xF7FEF89A  BL	_Bcd2Dec+0
0x4FE8	0x9901    LDR	R1, [SP, #4]
0x4FEA	0x7008    STRB	R0, [R1, #0]
;RTCC_driver.c, 120 :: 		temp = 1;
; temp start address is: 0 (R0)
0x4FEC	0x2001    MOVS	R0, #1
; temp end address is: 0 (R0)
;RTCC_driver.c, 121 :: 		}
0x4FEE	0xE7FF    B	L_RTCC_Read8
L__RTCC_Read10:
;RTCC_driver.c, 113 :: 		if(RTC_Date != old_RTC_Date){
;RTCC_driver.c, 121 :: 		}
L_RTCC_Read8:
;RTCC_driver.c, 122 :: 		return temp;
; temp start address is: 0 (R0)
; temp end address is: 0 (R0)
;RTCC_driver.c, 123 :: 		}
L_end_RTCC_Read:
0x4FF0	0xF8DDE000  LDR	LR, [SP, #0]
0x4FF4	0xB003    ADD	SP, SP, #12
0x4FF6	0x4770    BX	LR
0x4FF8	0x28004000  	RTC_TR+0
0x4FFC	0x27082000  	_RTC_Time+0
0x5000	0x28044000  	RTC_DR+0
0x5004	0x270C2000  	_RTC_Date+0
0x5008	0x27102000  	_old_RTC_Time+0
0x500C	0x27142000  	_old_RTC_Date+0
; end of _RTCC_Read
_Bcd2Dec:
;__Lib_Conversions.c, 478 :: 		
; bcdnum start address is: 0 (R0)
0x311C	0xB081    SUB	SP, SP, #4
; bcdnum end address is: 0 (R0)
; bcdnum start address is: 0 (R0)
;__Lib_Conversions.c, 479 :: 		
;__Lib_Conversions.c, 481 :: 		
0x311E	0x0902    LSRS	R2, R0, #4
0x3120	0xB2D2    UXTB	R2, R2
0x3122	0x210A    MOVS	R1, #10
0x3124	0xB209    SXTH	R1, R1
0x3126	0x4351    MULS	R1, R2, R1
;__Lib_Conversions.c, 482 :: 		
0x3128	0xF000020F  AND	R2, R0, #15
0x312C	0xB2D2    UXTB	R2, R2
; bcdnum end address is: 0 (R0)
0x312E	0xB2C9    UXTB	R1, R1
0x3130	0x1889    ADDS	R1, R1, R2
;__Lib_Conversions.c, 483 :: 		
0x3132	0xB2C8    UXTB	R0, R1
;__Lib_Conversions.c, 484 :: 		
L_end_Bcd2Dec:
0x3134	0xB001    ADD	SP, SP, #4
0x3136	0x4770    BX	LR
; end of _Bcd2Dec
_Roll_Set_Level:
;RTCC_main.c, 202 :: 		void Roll_Set_Level(TRoller *Roller, char level){
; level start address is: 4 (R1)
; Roller start address is: 0 (R0)
; level end address is: 4 (R1)
; Roller end address is: 0 (R0)
; Roller start address is: 0 (R0)
; level start address is: 4 (R1)
;RTCC_main.c, 203 :: 		Roller->currentlevel = level;
0x4EE4	0xF2000210  ADDW	R2, R0, #16
0x4EE8	0x8011    STRH	R1, [R2, #0]
;RTCC_main.c, 204 :: 		Roller->position = Roller->ImageHeight * level / Roller->levels;
0x4EEA	0xF2000414  ADDW	R4, R0, #20
0x4EEE	0xF2000208  ADDW	R2, R0, #8
0x4EF2	0x8812    LDRH	R2, [R2, #0]
0x4EF4	0xFB02F301  MUL	R3, R2, R1
0x4EF8	0xB29B    UXTH	R3, R3
; level end address is: 4 (R1)
0x4EFA	0xF2000216  ADDW	R2, R0, #22
; Roller end address is: 0 (R0)
0x4EFE	0x7812    LDRB	R2, [R2, #0]
0x4F00	0xFBB3F2F2  UDIV	R2, R3, R2
0x4F04	0x8022    STRH	R2, [R4, #0]
;RTCC_main.c, 205 :: 		}
L_end_Roll_Set_Level:
0x4F06	0x4770    BX	LR
; end of _Roll_Set_Level
_Roller_Deactivate:
;RTCC_main.c, 261 :: 		void Roller_Deactivate(TRoller *Roller, unsigned int xpos, unsigned int ypos){
; Roller start address is: 0 (R0)
0x4D94	0xB085    SUB	SP, SP, #20
0x4D96	0xF8CDE000  STR	LR, [SP, #0]
0x4D9A	0xF8AD100C  STRH	R1, [SP, #12]
0x4D9E	0xF8AD2010  STRH	R2, [SP, #16]
; Roller end address is: 0 (R0)
; Roller start address is: 0 (R0)
;RTCC_main.c, 263 :: 		TFT_Set_Pen(Set_clock.Color, 0);
0x4DA2	0x4B32    LDR	R3, [PC, #200]
0x4DA4	0x881B    LDRH	R3, [R3, #0]
0x4DA6	0x9001    STR	R0, [SP, #4]
0x4DA8	0x2100    MOVS	R1, #0
0x4DAA	0xB298    UXTH	R0, R3
0x4DAC	0xF004FE00  BL	_TFT_Set_Pen+0
;RTCC_main.c, 264 :: 		TFT_Set_Brush(1, Set_clock.Color, 0, 0, 0, 0);
0x4DB0	0x2500    MOVS	R5, #0
0x4DB2	0x2400    MOVS	R4, #0
0x4DB4	0x4B2D    LDR	R3, [PC, #180]
0x4DB6	0x881B    LDRH	R3, [R3, #0]
0x4DB8	0x2200    MOVS	R2, #0
0x4DBA	0xB299    UXTH	R1, R3
0x4DBC	0x2300    MOVS	R3, #0
0x4DBE	0x2001    MOVS	R0, #1
0x4DC0	0xB420    PUSH	(R5)
0x4DC2	0xB410    PUSH	(R4)
0x4DC4	0xF004FAC0  BL	_TFT_Set_Brush+0
0x4DC8	0xB002    ADD	SP, SP, #8
0x4DCA	0x9801    LDR	R0, [SP, #4]
;RTCC_main.c, 265 :: 		TFT_Rectangle(Roller->Left, Roller->Top, Roller->Left + Roller->Width, Roller->Top + Roller->Height);
0x4DCC	0x1C83    ADDS	R3, R0, #2
0x4DCE	0x881C    LDRH	R4, [R3, #0]
0x4DD0	0x1D83    ADDS	R3, R0, #6
0x4DD2	0x881B    LDRH	R3, [R3, #0]
0x4DD4	0x18E7    ADDS	R7, R4, R3
0x4DD6	0x8806    LDRH	R6, [R0, #0]
0x4DD8	0x1D03    ADDS	R3, R0, #4
0x4DDA	0x881B    LDRH	R3, [R3, #0]
0x4DDC	0x18F5    ADDS	R5, R6, R3
0x4DDE	0xB224    SXTH	R4, R4
0x4DE0	0xB233    SXTH	R3, R6
0x4DE2	0x9001    STR	R0, [SP, #4]
0x4DE4	0xB22A    SXTH	R2, R5
0x4DE6	0xB221    SXTH	R1, R4
0x4DE8	0xB218    SXTH	R0, R3
0x4DEA	0xB23B    SXTH	R3, R7
0x4DEC	0xF002FEAC  BL	_TFT_Rectangle+0
0x4DF0	0x9801    LDR	R0, [SP, #4]
;RTCC_main.c, 266 :: 		text[0] = Roller->currentlevel + 48;
0x4DF2	0xAC02    ADD	R4, SP, #8
0x4DF4	0xF2000310  ADDW	R3, R0, #16
0x4DF8	0x881B    LDRH	R3, [R3, #0]
0x4DFA	0x3330    ADDS	R3, #48
0x4DFC	0x7023    STRB	R3, [R4, #0]
;RTCC_main.c, 267 :: 		text[1] = 0;
0x4DFE	0x1C64    ADDS	R4, R4, #1
0x4E00	0x2300    MOVS	R3, #0
0x4E02	0x7023    STRB	R3, [R4, #0]
;RTCC_main.c, 268 :: 		TFT_Set_Font(Label2.FontName, CL_WHITE, FO_HORIZONTAL);
0x4E04	0x4B1A    LDR	R3, [PC, #104]
0x4E06	0x681B    LDR	R3, [R3, #0]
0x4E08	0x9001    STR	R0, [SP, #4]
0x4E0A	0x2200    MOVS	R2, #0
0x4E0C	0xF64F71FF  MOVW	R1, #65535
0x4E10	0x4618    MOV	R0, R3
0x4E12	0xF009F84D  BL	_TFT_Set_Font+0
0x4E16	0x9801    LDR	R0, [SP, #4]
;RTCC_main.c, 269 :: 		if (Roller == &AmPm){
0x4E18	0x4B16    LDR	R3, [PC, #88]
0x4E1A	0x4298    CMP	R0, R3
0x4E1C	0xD11A    BNE	L_Roller_Deactivate30
;RTCC_main.c, 270 :: 		if (Roller->currentlevel == 0)
0x4E1E	0xF2000310  ADDW	R3, R0, #16
0x4E22	0x881B    LDRH	R3, [R3, #0]
0x4E24	0xB943    CBNZ	R3, L_Roller_Deactivate31
; Roller end address is: 0 (R0)
;RTCC_main.c, 271 :: 		TFT_Write_Text("AM", xpos, ypos);
0x4E26	0x4B14    LDR	R3, [PC, #80]
0x4E28	0xF8BD2010  LDRH	R2, [SP, #16]
0x4E2C	0xF8BD100C  LDRH	R1, [SP, #12]
0x4E30	0x4618    MOV	R0, R3
0x4E32	0xF009F873  BL	_TFT_Write_Text+0
0x4E36	0xE00C    B	L_Roller_Deactivate32
L_Roller_Deactivate31:
;RTCC_main.c, 272 :: 		else if (Roller->currentlevel == 1)
; Roller start address is: 0 (R0)
0x4E38	0xF2000310  ADDW	R3, R0, #16
; Roller end address is: 0 (R0)
0x4E3C	0x881B    LDRH	R3, [R3, #0]
0x4E3E	0x2B01    CMP	R3, #1
0x4E40	0xD107    BNE	L_Roller_Deactivate33
;RTCC_main.c, 273 :: 		TFT_Write_Text("PM", xpos, ypos);
0x4E42	0x4B0E    LDR	R3, [PC, #56]
0x4E44	0xF8BD2010  LDRH	R2, [SP, #16]
0x4E48	0xF8BD100C  LDRH	R1, [SP, #12]
0x4E4C	0x4618    MOV	R0, R3
0x4E4E	0xF009F865  BL	_TFT_Write_Text+0
L_Roller_Deactivate33:
L_Roller_Deactivate32:
;RTCC_main.c, 274 :: 		}
0x4E52	0xE007    B	L_Roller_Deactivate34
L_Roller_Deactivate30:
;RTCC_main.c, 276 :: 		TFT_Write_Text(text, xpos, ypos);
0x4E54	0xAB02    ADD	R3, SP, #8
0x4E56	0xF8BD2010  LDRH	R2, [SP, #16]
0x4E5A	0xF8BD100C  LDRH	R1, [SP, #12]
0x4E5E	0x4618    MOV	R0, R3
0x4E60	0xF009F85C  BL	_TFT_Write_Text+0
L_Roller_Deactivate34:
;RTCC_main.c, 277 :: 		}
L_end_Roller_Deactivate:
0x4E64	0xF8DDE000  LDR	LR, [SP, #0]
0x4E68	0xB005    ADD	SP, SP, #20
0x4E6A	0x4770    BX	LR
0x4E6C	0x22E82000  	_Set_clock+0
0x4E70	0x13E82000  	_Label2+20
0x4E74	0x27802000  	_AmPm+0
0x4E78	0x02EC2000  	?lstr1_RTCC_main+0
0x4E7C	0x02EF2000  	?lstr2_RTCC_main+0
; end of _Roller_Deactivate
_doAccelerometerTest:
;Ducati_logger_events_code.c, 242 :: 		void doAccelerometerTest() {
0xC198	0xB081    SUB	SP, SP, #4
0xC19A	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 243 :: 		BLED_Fade_Out();
0xC19E	0xF7FEF807  BL	_BLED_Fade_Out+0
;Ducati_logger_events_code.c, 244 :: 		DrawScreen(&Accelerometer_test);
0xC1A2	0x4807    LDR	R0, [PC, #28]
0xC1A4	0xF003FB52  BL	_DrawScreen+0
;Ducati_logger_events_code.c, 245 :: 		BLED_Fade_In();
0xC1A8	0xF7FCFE1A  BL	_BLED_Fade_In+0
;Ducati_logger_events_code.c, 246 :: 		Logger_State = 4;
0xC1AC	0x2104    MOVS	R1, #4
0xC1AE	0x4805    LDR	R0, [PC, #20]
0xC1B0	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_events_code.c, 247 :: 		ACCEL_Start(&cACCEL_test_status);
0xC1B2	0x4805    LDR	R0, [PC, #20]
0xC1B4	0xF7FCFE38  BL	_ACCEL_Start+0
;Ducati_logger_events_code.c, 248 :: 		}
L_end_doAccelerometerTest:
0xC1B8	0xF8DDE000  LDR	LR, [SP, #0]
0xC1BC	0xB001    ADD	SP, SP, #4
0xC1BE	0x4770    BX	LR
0xC1C0	0x040C2000  	_Accelerometer_test+0
0xC1C4	0x22962000  	_Logger_State+0
0xC1C8	0x22972000  	_cACCEL_test_status+0
; end of _doAccelerometerTest
_ACCEL_Start:
;ADXL345_main.c, 185 :: 		void ACCEL_Start(char *test) {
; test start address is: 0 (R0)
0x8E28	0xB082    SUB	SP, SP, #8
0x8E2A	0xF8CDE000  STR	LR, [SP, #0]
0x8E2E	0x4602    MOV	R2, R0
; test end address is: 0 (R0)
; test start address is: 8 (R2)
;ADXL345_main.c, 187 :: 		*test = 0;
0x8E30	0x2100    MOVS	R1, #0
0x8E32	0x7011    STRB	R1, [R2, #0]
;ADXL345_main.c, 190 :: 		I2C2_Init_Advanced(400000, &_GPIO_MODULE_I2C2_PF01);
0x8E34	0x9201    STR	R2, [SP, #4]
0x8E36	0x4916    LDR	R1, [PC, #88]
0x8E38	0x4816    LDR	R0, [PC, #88]
0x8E3A	0xF7FCF915  BL	_I2C2_Init_Advanced+0
;ADXL345_main.c, 191 :: 		Delay_ms(100);
0x8E3E	0xF644373E  MOVW	R7, #19262
0x8E42	0xF2C0074C  MOVT	R7, #76
0x8E46	0xBF00    NOP
0x8E48	0xBF00    NOP
L_ACCEL_Start19:
0x8E4A	0x1E7F    SUBS	R7, R7, #1
0x8E4C	0xD1FD    BNE	L_ACCEL_Start19
0x8E4E	0xBF00    NOP
0x8E50	0xBF00    NOP
0x8E52	0xBF00    NOP
;ADXL345_main.c, 193 :: 		if (ADXL345_Init() == 0) {
0x8E54	0xF7FCFA60  BL	_ADXL345_Init+0
0x8E58	0x9A01    LDR	R2, [SP, #4]
0x8E5A	0xB968    CBNZ	R0, L_ACCEL_Start21
;ADXL345_main.c, 194 :: 		*test = 1;
0x8E5C	0x2101    MOVS	R1, #1
0x8E5E	0x7011    STRB	R1, [R2, #0]
; test end address is: 8 (R2)
;ADXL345_main.c, 195 :: 		Delay_ms(500);
0x8E60	0xF647073E  MOVW	R7, #30782
0x8E64	0xF2C0177D  MOVT	R7, #381
L_ACCEL_Start22:
0x8E68	0x1E7F    SUBS	R7, R7, #1
0x8E6A	0xD1FD    BNE	L_ACCEL_Start22
0x8E6C	0xBF00    NOP
0x8E6E	0xBF00    NOP
0x8E70	0xBF00    NOP
0x8E72	0xBF00    NOP
0x8E74	0xBF00    NOP
;ADXL345_main.c, 196 :: 		}
0x8E76	0xE001    B	L_ACCEL_Start24
L_ACCEL_Start21:
;ADXL345_main.c, 198 :: 		*test = 2;
; test start address is: 8 (R2)
0x8E78	0x2102    MOVS	R1, #2
0x8E7A	0x7011    STRB	R1, [R2, #0]
; test end address is: 8 (R2)
;ADXL345_main.c, 199 :: 		}
L_ACCEL_Start24:
;ADXL345_main.c, 200 :: 		Scroll_Undone(_SCROLL_ACCEL_FIRST_LINE, _SCROLL_ACCEL_LAST_LINE);
0x8E7C	0xF24001F6  MOVW	R1, #246
0x8E80	0xF2400029  MOVW	R0, #41
0x8E84	0xF7FBFF5A  BL	_Scroll_Undone+0
;ADXL345_main.c, 201 :: 		}
L_end_ACCEL_Start:
0x8E88	0xF8DDE000  LDR	LR, [SP, #0]
0x8E8C	0xB002    ADD	SP, SP, #8
0x8E8E	0x4770    BX	LR
0x8E90	0x8B000001  	__GPIO_MODULE_I2C2_PF01+0
0x8E94	0x1A800006  	#400000
; end of _ACCEL_Start
_I2C2_Init_Advanced:
;__Lib_I2C_123.c, 335 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0x5068	0xB081    SUB	SP, SP, #4
0x506A	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_123.c, 336 :: 		
0x506E	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x5070	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0x5072	0x4803    LDR	R0, [PC, #12]
0x5074	0xF004FEE2  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_123.c, 337 :: 		
L_end_I2C2_Init_Advanced:
0x5078	0xF8DDE000  LDR	LR, [SP, #0]
0x507C	0xB001    ADD	SP, SP, #4
0x507E	0x4770    BX	LR
0x5080	0x58004000  	I2C2_CR1+0
; end of _I2C2_Init_Advanced
_ADXL345_Init:
;ADXL345_driver.c, 77 :: 		char ADXL345_Init() {
0x5318	0xB081    SUB	SP, SP, #4
0x531A	0xF8CDE000  STR	LR, [SP, #0]
;ADXL345_driver.c, 78 :: 		char id = 0x00;
;ADXL345_driver.c, 80 :: 		ADXL345_Write(0x2D, 0x00);
0x531E	0x2100    MOVS	R1, #0
0x5320	0x202D    MOVS	R0, #45
0x5322	0xF7FDFF35  BL	ADXL345_driver_ADXL345_Write+0
;ADXL345_driver.c, 81 :: 		id = ADXL345_Read_Register(0x00);
0x5326	0x2000    MOVS	R0, #0
0x5328	0xF7FDFE58  BL	ADXL345_driver_ADXL345_Read_Register+0
;ADXL345_driver.c, 82 :: 		if (id != 0xE5) {
0x532C	0x28E5    CMP	R0, #229
0x532E	0xD001    BEQ	L_ADXL345_Init0
;ADXL345_driver.c, 83 :: 		return _ACCEL_ERROR;
0x5330	0x2002    MOVS	R0, #2
0x5332	0xE010    B	L_end_ADXL345_Init
;ADXL345_driver.c, 84 :: 		}
L_ADXL345_Init0:
;ADXL345_driver.c, 86 :: 		ADXL345_Write(_DATA_FORMAT, 0x08);       // Full resolution, +/-2g, 4mg/LSB, right justified
0x5334	0x2108    MOVS	R1, #8
0x5336	0x2031    MOVS	R0, #49
0x5338	0xF7FDFF2A  BL	ADXL345_driver_ADXL345_Write+0
;ADXL345_driver.c, 87 :: 		ADXL345_Write(_BW_RATE, 0x0A);           // Set 100 Hz data rate
0x533C	0x210A    MOVS	R1, #10
0x533E	0x202C    MOVS	R0, #44
0x5340	0xF7FDFF26  BL	ADXL345_driver_ADXL345_Write+0
;ADXL345_driver.c, 88 :: 		ADXL345_Write(_FIFO_CTL, 0x80);          // stream mode
0x5344	0x2180    MOVS	R1, #128
0x5346	0x2038    MOVS	R0, #56
0x5348	0xF7FDFF22  BL	ADXL345_driver_ADXL345_Write+0
;ADXL345_driver.c, 89 :: 		ADXL345_Write(_POWER_CTL, 0x08);         // POWER_CTL reg: measurement mode
0x534C	0x2108    MOVS	R1, #8
0x534E	0x202D    MOVS	R0, #45
0x5350	0xF7FDFF1E  BL	ADXL345_driver_ADXL345_Write+0
;ADXL345_driver.c, 90 :: 		return 0x00;
0x5354	0x2000    MOVS	R0, #0
;ADXL345_driver.c, 92 :: 		}
L_end_ADXL345_Init:
0x5356	0xF8DDE000  LDR	LR, [SP, #0]
0x535A	0xB001    ADD	SP, SP, #4
0x535C	0x4770    BX	LR
; end of _ADXL345_Init
ADXL345_driver_ADXL345_Write:
;ADXL345_driver.c, 30 :: 		static void ADXL345_Write(unsigned short address, unsigned short data1) {
; data1 start address is: 4 (R1)
; address start address is: 0 (R0)
0x3190	0xB081    SUB	SP, SP, #4
0x3192	0xF8CDE000  STR	LR, [SP, #0]
0x3196	0xB2C5    UXTB	R5, R0
0x3198	0xB2CE    UXTB	R6, R1
; data1 end address is: 4 (R1)
; address end address is: 0 (R0)
; address start address is: 20 (R5)
; data1 start address is: 24 (R6)
;ADXL345_driver.c, 31 :: 		I2C2_Start();              // issue I2C start signal
0x319A	0xF003FB5B  BL	_I2C2_Start+0
;ADXL345_driver.c, 32 :: 		acceldata_[0] = address;
0x319E	0x4A07    LDR	R2, [PC, #28]
0x31A0	0x7015    STRB	R5, [R2, #0]
; address end address is: 20 (R5)
;ADXL345_driver.c, 33 :: 		acceldata_[1] = data1;
0x31A2	0x4A07    LDR	R2, [PC, #28]
0x31A4	0x7016    STRB	R6, [R2, #0]
; data1 end address is: 24 (R6)
;ADXL345_driver.c, 34 :: 		I2C2_Write(_ACCEL_ADDRESS, acceldata_, 2, END_MODE_STOP);
0x31A6	0xF2400301  MOVW	R3, #1
0x31AA	0x2202    MOVS	R2, #2
0x31AC	0x4903    LDR	R1, [PC, #12]
0x31AE	0x2053    MOVS	R0, #83
0x31B0	0xF7FFF934  BL	_I2C2_Write+0
;ADXL345_driver.c, 35 :: 		}
L_end_ADXL345_Write:
0x31B4	0xF8DDE000  LDR	LR, [SP, #0]
0x31B8	0xB001    ADD	SP, SP, #4
0x31BA	0x4770    BX	LR
0x31BC	0x03782000  	_acceldata_+0
0x31C0	0x03792000  	_acceldata_+1
; end of ADXL345_driver_ADXL345_Write
ADXL345_driver_ADXL345_Read_Register:
;ADXL345_driver.c, 62 :: 		static unsigned short ADXL345_Read_Register(unsigned short address) {
; address start address is: 0 (R0)
0x2FDC	0xB081    SUB	SP, SP, #4
0x2FDE	0xF8CDE000  STR	LR, [SP, #0]
0x2FE2	0xB2C5    UXTB	R5, R0
; address end address is: 0 (R0)
; address start address is: 20 (R5)
;ADXL345_driver.c, 63 :: 		I2C2_Start();              // issue I2C start signal
0x2FE4	0xF003FC36  BL	_I2C2_Start+0
;ADXL345_driver.c, 64 :: 		acceldata_[0] = address;
0x2FE8	0x490A    LDR	R1, [PC, #40]
0x2FEA	0x700D    STRB	R5, [R1, #0]
; address end address is: 20 (R5)
;ADXL345_driver.c, 65 :: 		I2C2_Write(_ACCEL_ADDRESS, acceldata_, 1, END_MODE_RESTART);
0x2FEC	0xF2400300  MOVW	R3, #0
0x2FF0	0x2201    MOVS	R2, #1
0x2FF2	0x4908    LDR	R1, [PC, #32]
0x2FF4	0x2053    MOVS	R0, #83
0x2FF6	0xF7FFFA11  BL	_I2C2_Write+0
;ADXL345_driver.c, 66 :: 		I2C2_Read(_ACCEL_ADDRESS, acceldata_, 1, END_MODE_STOP);
0x2FFA	0xF2400301  MOVW	R3, #1
0x2FFE	0x2201    MOVS	R2, #1
0x3000	0x4904    LDR	R1, [PC, #16]
0x3002	0x2053    MOVS	R0, #83
0x3004	0xF7FFFA4C  BL	_I2C2_Read+0
;ADXL345_driver.c, 67 :: 		return acceldata_[0];
0x3008	0x4902    LDR	R1, [PC, #8]
0x300A	0x7808    LDRB	R0, [R1, #0]
;ADXL345_driver.c, 68 :: 		}
L_end_ADXL345_Read_Register:
0x300C	0xF8DDE000  LDR	LR, [SP, #0]
0x3010	0xB001    ADD	SP, SP, #4
0x3012	0x4770    BX	LR
0x3014	0x03782000  	_acceldata_+0
; end of ADXL345_driver_ADXL345_Read_Register
_Scroll_Undone:
;Scroll.c, 65 :: 		void Scroll_Undone(unsigned int first, unsigned int last){
; last start address is: 4 (R1)
0x4D3C	0xB082    SUB	SP, SP, #8
0x4D3E	0xF8CDE000  STR	LR, [SP, #0]
0x4D42	0xF8AD0004  STRH	R0, [SP, #4]
; last end address is: 4 (R1)
; last start address is: 4 (R1)
;Scroll.c, 66 :: 		Scroll_Init_Scroll_area(first, last);
; last end address is: 4 (R1)
0x4D46	0xF8BD0004  LDRH	R0, [SP, #4]
0x4D4A	0xF7FEF901  BL	_Scroll_Init_Scroll_area+0
;Scroll.c, 67 :: 		TFT_CS = 0;
0x4D4E	0x2300    MOVS	R3, #0
0x4D50	0xB25B    SXTB	R3, R3
0x4D52	0x4A0F    LDR	R2, [PC, #60]
0x4D54	0x6013    STR	R3, [R2, #0]
;Scroll.c, 68 :: 		Set_Index(0x36);
0x4D56	0x2036    MOVS	R0, #54
0x4D58	0xF001FF38  BL	_Set_Index+0
;Scroll.c, 69 :: 		Write_Command(0x00);
0x4D5C	0x2000    MOVS	R0, #0
0x4D5E	0xF001FF19  BL	_Write_Command+0
;Scroll.c, 71 :: 		Set_Index(0x37);
0x4D62	0x2037    MOVS	R0, #55
0x4D64	0xF001FF32  BL	_Set_Index+0
;Scroll.c, 72 :: 		Write_Command(Hi(first));
0x4D68	0xAA01    ADD	R2, SP, #4
0x4D6A	0x1C52    ADDS	R2, R2, #1
0x4D6C	0x7812    LDRB	R2, [R2, #0]
0x4D6E	0xB2D0    UXTB	R0, R2
0x4D70	0xF001FF10  BL	_Write_Command+0
;Scroll.c, 73 :: 		Write_Command(Lo(first));
0x4D74	0xAA01    ADD	R2, SP, #4
0x4D76	0x7812    LDRB	R2, [R2, #0]
0x4D78	0xB2D0    UXTB	R0, R2
0x4D7A	0xF001FF0B  BL	_Write_Command+0
;Scroll.c, 75 :: 		TFT_CS = 1;
0x4D7E	0x2301    MOVS	R3, #1
0x4D80	0xB25B    SXTB	R3, R3
0x4D82	0x4A03    LDR	R2, [PC, #12]
0x4D84	0x6013    STR	R3, [R2, #0]
;Scroll.c, 76 :: 		}
L_end_Scroll_Undone:
0x4D86	0xF8DDE000  LDR	LR, [SP, #0]
0x4D8A	0xB002    ADD	SP, SP, #8
0x4D8C	0x4770    BX	LR
0x4D8E	0xBF00    NOP
0x4D90	0x82B44242  	TFT_CS+0
; end of _Scroll_Undone
_Scroll_Init_Scroll_area:
;Scroll.c, 43 :: 		void Scroll_Init_Scroll_area(unsigned int first, unsigned int last){
0x2F50	0xB084    SUB	SP, SP, #16
0x2F52	0xF8CDE000  STR	LR, [SP, #0]
0x2F56	0xF8AD0008  STRH	R0, [SP, #8]
0x2F5A	0xF8AD100C  STRH	R1, [SP, #12]
;Scroll.c, 45 :: 		TFT_CS = 0;
0x2F5E	0x2300    MOVS	R3, #0
0x2F60	0xB25B    SXTB	R3, R3
0x2F62	0x4A1D    LDR	R2, [PC, #116]
0x2F64	0x6013    STR	R3, [R2, #0]
;Scroll.c, 46 :: 		Set_Index(0x33);
0x2F66	0x2033    MOVS	R0, #51
0x2F68	0xF003FE30  BL	_Set_Index+0
;Scroll.c, 47 :: 		Write_Command(Hi(first));
0x2F6C	0xAA02    ADD	R2, SP, #8
0x2F6E	0x1C52    ADDS	R2, R2, #1
0x2F70	0x7812    LDRB	R2, [R2, #0]
0x2F72	0xB2D0    UXTB	R0, R2
0x2F74	0xF003FE0E  BL	_Write_Command+0
;Scroll.c, 48 :: 		Write_Command(Lo(first));
0x2F78	0xAA02    ADD	R2, SP, #8
0x2F7A	0x7812    LDRB	R2, [R2, #0]
0x2F7C	0xB2D0    UXTB	R0, R2
0x2F7E	0xF003FE09  BL	_Write_Command+0
;Scroll.c, 49 :: 		temp = last - first;
0x2F82	0xF8BD3008  LDRH	R3, [SP, #8]
0x2F86	0xF8BD200C  LDRH	R2, [SP, #12]
0x2F8A	0x1AD2    SUB	R2, R2, R3
0x2F8C	0xF8AD2004  STRH	R2, [SP, #4]
;Scroll.c, 50 :: 		Write_Command(Hi(temp));
0x2F90	0xAA01    ADD	R2, SP, #4
0x2F92	0x1C52    ADDS	R2, R2, #1
0x2F94	0x7812    LDRB	R2, [R2, #0]
0x2F96	0xB2D0    UXTB	R0, R2
0x2F98	0xF003FDFC  BL	_Write_Command+0
;Scroll.c, 51 :: 		Write_Command(Lo(temp));
0x2F9C	0xAA01    ADD	R2, SP, #4
0x2F9E	0x7812    LDRB	R2, [R2, #0]
0x2FA0	0xB2D0    UXTB	R0, R2
0x2FA2	0xF003FDF7  BL	_Write_Command+0
;Scroll.c, 52 :: 		temp = _DISPLAY_HEIGHT - last;
0x2FA6	0xF8BD200C  LDRH	R2, [SP, #12]
0x2FAA	0xF5C27288  RSB	R2, R2, #272
0x2FAE	0xF8AD2004  STRH	R2, [SP, #4]
;Scroll.c, 53 :: 		Write_Command(Hi(temp));
0x2FB2	0xAA01    ADD	R2, SP, #4
0x2FB4	0x1C52    ADDS	R2, R2, #1
0x2FB6	0x7812    LDRB	R2, [R2, #0]
0x2FB8	0xB2D0    UXTB	R0, R2
0x2FBA	0xF003FDEB  BL	_Write_Command+0
;Scroll.c, 54 :: 		Write_Command(Lo(temp));
0x2FBE	0xAA01    ADD	R2, SP, #4
0x2FC0	0x7812    LDRB	R2, [R2, #0]
0x2FC2	0xB2D0    UXTB	R0, R2
0x2FC4	0xF003FDE6  BL	_Write_Command+0
;Scroll.c, 55 :: 		TFT_CS = 1;
0x2FC8	0x2301    MOVS	R3, #1
0x2FCA	0xB25B    SXTB	R3, R3
0x2FCC	0x4A02    LDR	R2, [PC, #8]
0x2FCE	0x6013    STR	R3, [R2, #0]
;Scroll.c, 56 :: 		}
L_end_Scroll_Init_Scroll_area:
0x2FD0	0xF8DDE000  LDR	LR, [SP, #0]
0x2FD4	0xB004    ADD	SP, SP, #16
0x2FD6	0x4770    BX	LR
0x2FD8	0x82B44242  	TFT_CS+0
; end of _Scroll_Init_Scroll_area
_doGPSTest:
;Ducati_logger_events_code.c, 250 :: 		void doGPSTest() {
0xC264	0xB081    SUB	SP, SP, #4
0xC266	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 251 :: 		BLED_Fade_Out();
0xC26A	0xF7FDFFA1  BL	_BLED_Fade_Out+0
;Ducati_logger_events_code.c, 252 :: 		DrawScreen(&GPS_test);
0xC26E	0x4804    LDR	R0, [PC, #16]
0xC270	0xF003FAEC  BL	_DrawScreen+0
;Ducati_logger_events_code.c, 253 :: 		BLED_Fade_In();
0xC274	0xF7FCFDB4  BL	_BLED_Fade_In+0
;Ducati_logger_events_code.c, 255 :: 		}
L_end_doGPSTest:
0xC278	0xF8DDE000  LDR	LR, [SP, #0]
0xC27C	0xB001    ADD	SP, SP, #4
0xC27E	0x4770    BX	LR
0xC280	0x23382000  	_GPS_Test+0
; end of _doGPSTest
_doMagnetTest:
;Ducati_logger_events_code.c, 274 :: 		void doMagnetTest() {
0xC230	0xB081    SUB	SP, SP, #4
0xC232	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 275 :: 		BLED_Fade_Out();
0xC236	0xF7FDFFBB  BL	_BLED_Fade_Out+0
;Ducati_logger_events_code.c, 276 :: 		DrawScreen(&Magnetometer_test);
0xC23A	0x4807    LDR	R0, [PC, #28]
0xC23C	0xF003FB06  BL	_DrawScreen+0
;Ducati_logger_events_code.c, 277 :: 		BLED_Fade_In();
0xC240	0xF7FCFDCE  BL	_BLED_Fade_In+0
;Ducati_logger_events_code.c, 278 :: 		Logger_State = 6;
0xC244	0x2106    MOVS	R1, #6
0xC246	0x4805    LDR	R0, [PC, #20]
0xC248	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_events_code.c, 279 :: 		MAGNET_Start(&cMAGNET_test_status);
0xC24A	0x4805    LDR	R0, [PC, #20]
0xC24C	0xF7FAFE48  BL	_MAGNET_Start+0
;Ducati_logger_events_code.c, 281 :: 		}
L_end_doMagnetTest:
0xC250	0xF8DDE000  LDR	LR, [SP, #0]
0xC254	0xB001    ADD	SP, SP, #4
0xC256	0x4770    BX	LR
0xC258	0x23D82000  	_Magnetometer_test+0
0xC25C	0x22962000  	_Logger_State+0
0xC260	0x24C82000  	_cMAGNET_test_status+0
; end of _doMagnetTest
_MAGNET_Start:
;HMC5883L_main.c, 185 :: 		void MAGNET_Start(char *test) {
; test start address is: 0 (R0)
0x6EE0	0xB082    SUB	SP, SP, #8
0x6EE2	0xF8CDE000  STR	LR, [SP, #0]
0x6EE6	0x4602    MOV	R2, R0
; test end address is: 0 (R0)
; test start address is: 8 (R2)
;HMC5883L_main.c, 187 :: 		*test = 0;
0x6EE8	0x2100    MOVS	R1, #0
0x6EEA	0x7011    STRB	R1, [R2, #0]
;HMC5883L_main.c, 190 :: 		I2C2_Init_Advanced(400000, &_GPIO_MODULE_I2C1_PB67);
0x6EEC	0x9201    STR	R2, [SP, #4]
0x6EEE	0x4916    LDR	R1, [PC, #88]
0x6EF0	0x4816    LDR	R0, [PC, #88]
0x6EF2	0xF7FEF8B9  BL	_I2C2_Init_Advanced+0
;HMC5883L_main.c, 191 :: 		Delay_ms(100);
0x6EF6	0xF644373E  MOVW	R7, #19262
0x6EFA	0xF2C0074C  MOVT	R7, #76
0x6EFE	0xBF00    NOP
0x6F00	0xBF00    NOP
L_MAGNET_Start19:
0x6F02	0x1E7F    SUBS	R7, R7, #1
0x6F04	0xD1FD    BNE	L_MAGNET_Start19
0x6F06	0xBF00    NOP
0x6F08	0xBF00    NOP
0x6F0A	0xBF00    NOP
;HMC5883L_main.c, 193 :: 		if (MAGNET_Init() == 0) {
0x6F0C	0xF7FDFAB8  BL	_MAGNET_Init+0
0x6F10	0x9A01    LDR	R2, [SP, #4]
0x6F12	0xB968    CBNZ	R0, L_MAGNET_Start21
;HMC5883L_main.c, 194 :: 		*test = 1;
0x6F14	0x2101    MOVS	R1, #1
0x6F16	0x7011    STRB	R1, [R2, #0]
; test end address is: 8 (R2)
;HMC5883L_main.c, 195 :: 		Delay_ms(500);
0x6F18	0xF647073E  MOVW	R7, #30782
0x6F1C	0xF2C0177D  MOVT	R7, #381
L_MAGNET_Start22:
0x6F20	0x1E7F    SUBS	R7, R7, #1
0x6F22	0xD1FD    BNE	L_MAGNET_Start22
0x6F24	0xBF00    NOP
0x6F26	0xBF00    NOP
0x6F28	0xBF00    NOP
0x6F2A	0xBF00    NOP
0x6F2C	0xBF00    NOP
;HMC5883L_main.c, 196 :: 		}
0x6F2E	0xE001    B	L_MAGNET_Start24
L_MAGNET_Start21:
;HMC5883L_main.c, 198 :: 		*test = 2;
; test start address is: 8 (R2)
0x6F30	0x2102    MOVS	R1, #2
0x6F32	0x7011    STRB	R1, [R2, #0]
; test end address is: 8 (R2)
;HMC5883L_main.c, 199 :: 		}
L_MAGNET_Start24:
;HMC5883L_main.c, 200 :: 		Scroll_Undone(_SCROLL_MAGNET_FIRST_LINE, _SCROLL_MAGNET_LAST_LINE);
0x6F34	0xF24001F6  MOVW	R1, #246
0x6F38	0xF2400029  MOVW	R0, #41
0x6F3C	0xF7FDFEFE  BL	_Scroll_Undone+0
;HMC5883L_main.c, 201 :: 		}
L_end_MAGNET_Start:
0x6F40	0xF8DDE000  LDR	LR, [SP, #0]
0x6F44	0xB002    ADD	SP, SP, #8
0x6F46	0x4770    BX	LR
0x6F48	0x8A940001  	__GPIO_MODULE_I2C1_PB67+0
0x6F4C	0x1A800006  	#400000
; end of _MAGNET_Start
_MAGNET_Init:
;HMC5883L_driver.c, 74 :: 		char MAGNET_Init() {
0x4480	0xB081    SUB	SP, SP, #4
0x4482	0xF8CDE000  STR	LR, [SP, #0]
;HMC5883L_driver.c, 75 :: 		char id = 0x00;
;HMC5883L_driver.c, 77 :: 		MAGNET_Write(0x2D, 0x00);
0x4486	0x2100    MOVS	R1, #0
0x4488	0x202D    MOVS	R0, #45
0x448A	0xF7FEFE21  BL	HMC5883L_driver_MAGNET_Write+0
;HMC5883L_driver.c, 78 :: 		id = MAGNET_Read_Register(0x00);
0x448E	0x2000    MOVS	R0, #0
0x4490	0xF7FEFEBC  BL	HMC5883L_driver_MAGNET_Read_Register+0
;HMC5883L_driver.c, 79 :: 		if (id != 0xE5) {
0x4494	0x28E5    CMP	R0, #229
0x4496	0xD000    BEQ	L_MAGNET_Init0
;HMC5883L_driver.c, 81 :: 		}
0x4498	0xE001    B	L_MAGNET_Init1
L_MAGNET_Init0:
;HMC5883L_driver.c, 87 :: 		return 0x00;
0x449A	0x2000    MOVS	R0, #0
0x449C	0xE7FF    B	L_end_MAGNET_Init
;HMC5883L_driver.c, 88 :: 		}
L_MAGNET_Init1:
;HMC5883L_driver.c, 89 :: 		}
L_end_MAGNET_Init:
0x449E	0xF8DDE000  LDR	LR, [SP, #0]
0x44A2	0xB001    ADD	SP, SP, #4
0x44A4	0x4770    BX	LR
; end of _MAGNET_Init
HMC5883L_driver_MAGNET_Write:
;HMC5883L_driver.c, 27 :: 		static void MAGNET_Write(unsigned short address, unsigned short data1) {
; data1 start address is: 4 (R1)
; address start address is: 0 (R0)
0x30D0	0xB081    SUB	SP, SP, #4
0x30D2	0xF8CDE000  STR	LR, [SP, #0]
0x30D6	0xB2C5    UXTB	R5, R0
0x30D8	0xB2CE    UXTB	R6, R1
; data1 end address is: 4 (R1)
; address end address is: 0 (R0)
; address start address is: 20 (R5)
; data1 start address is: 24 (R6)
;HMC5883L_driver.c, 28 :: 		I2C2_Start();              // issue I2C start signal
0x30DA	0xF003FBBB  BL	_I2C2_Start+0
;HMC5883L_driver.c, 29 :: 		Magnetdata_[0] = address;
0x30DE	0x4A07    LDR	R2, [PC, #28]
0x30E0	0x7015    STRB	R5, [R2, #0]
; address end address is: 20 (R5)
;HMC5883L_driver.c, 30 :: 		Magnetdata_[1] = data1;
0x30E2	0x4A07    LDR	R2, [PC, #28]
0x30E4	0x7016    STRB	R6, [R2, #0]
; data1 end address is: 24 (R6)
;HMC5883L_driver.c, 31 :: 		I2C2_Write(_MAGNET_ADDRESS, Magnetdata_, 2, END_MODE_STOP);
0x30E6	0xF2400301  MOVW	R3, #1
0x30EA	0x2202    MOVS	R2, #2
0x30EC	0x4903    LDR	R1, [PC, #12]
0x30EE	0x2053    MOVS	R0, #83
0x30F0	0xF7FFF994  BL	_I2C2_Write+0
;HMC5883L_driver.c, 32 :: 		}
L_end_MAGNET_Write:
0x30F4	0xF8DDE000  LDR	LR, [SP, #0]
0x30F8	0xB001    ADD	SP, SP, #4
0x30FA	0x4770    BX	LR
0x30FC	0x24CA2000  	_Magnetdata_+0
0x3100	0x24CB2000  	_Magnetdata_+1
; end of HMC5883L_driver_MAGNET_Write
HMC5883L_driver_MAGNET_Read_Register:
;HMC5883L_driver.c, 59 :: 		static unsigned short MAGNET_Read_Register(unsigned short address) {
; address start address is: 0 (R0)
0x320C	0xB081    SUB	SP, SP, #4
0x320E	0xF8CDE000  STR	LR, [SP, #0]
0x3212	0xB2C5    UXTB	R5, R0
; address end address is: 0 (R0)
; address start address is: 20 (R5)
;HMC5883L_driver.c, 60 :: 		I2C2_Start();              // issue I2C start signal
0x3214	0xF003FB1E  BL	_I2C2_Start+0
;HMC5883L_driver.c, 61 :: 		Magnetdata_[0] = address;
0x3218	0x490A    LDR	R1, [PC, #40]
0x321A	0x700D    STRB	R5, [R1, #0]
; address end address is: 20 (R5)
;HMC5883L_driver.c, 62 :: 		I2C2_Write(_MAGNET_ADDRESS, Magnetdata_, 1, END_MODE_RESTART);
0x321C	0xF2400300  MOVW	R3, #0
0x3220	0x2201    MOVS	R2, #1
0x3222	0x4908    LDR	R1, [PC, #32]
0x3224	0x2053    MOVS	R0, #83
0x3226	0xF7FFF8F9  BL	_I2C2_Write+0
;HMC5883L_driver.c, 63 :: 		I2C2_Read(_MAGNET_ADDRESS, Magnetdata_, 1, END_MODE_STOP);
0x322A	0xF2400301  MOVW	R3, #1
0x322E	0x2201    MOVS	R2, #1
0x3230	0x4904    LDR	R1, [PC, #16]
0x3232	0x2053    MOVS	R0, #83
0x3234	0xF7FFF934  BL	_I2C2_Read+0
;HMC5883L_driver.c, 64 :: 		return Magnetdata_[0];
0x3238	0x4902    LDR	R1, [PC, #8]
0x323A	0x7808    LDRB	R0, [R1, #0]
;HMC5883L_driver.c, 65 :: 		}
L_end_MAGNET_Read_Register:
0x323C	0xF8DDE000  LDR	LR, [SP, #0]
0x3240	0xB001    ADD	SP, SP, #4
0x3242	0x4770    BX	LR
0x3244	0x24CA2000  	_Magnetdata_+0
; end of HMC5883L_driver_MAGNET_Read_Register
_doPressureTest:
;Ducati_logger_events_code.c, 266 :: 		void doPressureTest() {
0xC4CC	0xB081    SUB	SP, SP, #4
0xC4CE	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 267 :: 		BLED_Fade_Out();
0xC4D2	0xF7FDFE6D  BL	_BLED_Fade_Out+0
;Ducati_logger_events_code.c, 268 :: 		DrawScreen(&Pressure_test);
0xC4D6	0x4804    LDR	R0, [PC, #16]
0xC4D8	0xF003F9B8  BL	_DrawScreen+0
;Ducati_logger_events_code.c, 269 :: 		BLED_Fade_In();
0xC4DC	0xF7FCFC80  BL	_BLED_Fade_In+0
;Ducati_logger_events_code.c, 272 :: 		}
L_end_doPressureTest:
0xC4E0	0xF8DDE000  LDR	LR, [SP, #0]
0xC4E4	0xB001    ADD	SP, SP, #4
0xC4E6	0x4770    BX	LR
0xC4E8	0x24282000  	_Pressure_test+0
; end of _doPressureTest
_doGyroTest:
;Ducati_logger_events_code.c, 257 :: 		void doGyroTest() {
0xC57C	0xB081    SUB	SP, SP, #4
0xC57E	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 258 :: 		BLED_Fade_Out();
0xC582	0xF7FDFE15  BL	_BLED_Fade_Out+0
;Ducati_logger_events_code.c, 259 :: 		DrawScreen(&Gyro_test);
0xC586	0x4807    LDR	R0, [PC, #28]
0xC588	0xF003F960  BL	_DrawScreen+0
;Ducati_logger_events_code.c, 260 :: 		BLED_Fade_In();
0xC58C	0xF7FCFC28  BL	_BLED_Fade_In+0
;Ducati_logger_events_code.c, 261 :: 		Logger_State = 5;
0xC590	0x2105    MOVS	R1, #5
0xC592	0x4805    LDR	R0, [PC, #20]
0xC594	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_events_code.c, 262 :: 		GYRO_Start(&cGYRO_test_status);
0xC596	0x4805    LDR	R0, [PC, #20]
0xC598	0xF7FCFF0A  BL	_GYRO_Start+0
;Ducati_logger_events_code.c, 263 :: 		}
L_end_doGyroTest:
0xC59C	0xF8DDE000  LDR	LR, [SP, #0]
0xC5A0	0xB001    ADD	SP, SP, #4
0xC5A2	0x4770    BX	LR
0xC5A4	0x23882000  	_Gyro_test+0
0xC5A8	0x22962000  	_Logger_State+0
0xC5AC	0x24C92000  	_cGyro_test_status+0
; end of _doGyroTest
_GYRO_Start:
;ITG3200_main.c, 185 :: 		void GYRO_Start(char *test) {
; test start address is: 0 (R0)
0x93B0	0xB082    SUB	SP, SP, #8
0x93B2	0xF8CDE000  STR	LR, [SP, #0]
0x93B6	0x4602    MOV	R2, R0
; test end address is: 0 (R0)
; test start address is: 8 (R2)
;ITG3200_main.c, 187 :: 		*test = 0;
0x93B8	0x2100    MOVS	R1, #0
0x93BA	0x7011    STRB	R1, [R2, #0]
;ITG3200_main.c, 190 :: 		I2C2_Init_Advanced(400000, &_GPIO_MODULE_I2C2_PF01);
0x93BC	0x9201    STR	R2, [SP, #4]
0x93BE	0x4916    LDR	R1, [PC, #88]
0x93C0	0x4816    LDR	R0, [PC, #88]
0x93C2	0xF7FBFE51  BL	_I2C2_Init_Advanced+0
;ITG3200_main.c, 191 :: 		Delay_ms(100);
0x93C6	0xF644373E  MOVW	R7, #19262
0x93CA	0xF2C0074C  MOVT	R7, #76
0x93CE	0xBF00    NOP
0x93D0	0xBF00    NOP
L_GYRO_Start19:
0x93D2	0x1E7F    SUBS	R7, R7, #1
0x93D4	0xD1FD    BNE	L_GYRO_Start19
0x93D6	0xBF00    NOP
0x93D8	0xBF00    NOP
0x93DA	0xBF00    NOP
;ITG3200_main.c, 193 :: 		if (ITG3200_Init() == 0) {
0x93DC	0xF7FBFE18  BL	_ITG3200_Init+0
0x93E0	0x9A01    LDR	R2, [SP, #4]
0x93E2	0xB968    CBNZ	R0, L_GYRO_Start21
;ITG3200_main.c, 194 :: 		*test = 1;
0x93E4	0x2101    MOVS	R1, #1
0x93E6	0x7011    STRB	R1, [R2, #0]
; test end address is: 8 (R2)
;ITG3200_main.c, 195 :: 		Delay_ms(500);
0x93E8	0xF647073E  MOVW	R7, #30782
0x93EC	0xF2C0177D  MOVT	R7, #381
L_GYRO_Start22:
0x93F0	0x1E7F    SUBS	R7, R7, #1
0x93F2	0xD1FD    BNE	L_GYRO_Start22
0x93F4	0xBF00    NOP
0x93F6	0xBF00    NOP
0x93F8	0xBF00    NOP
0x93FA	0xBF00    NOP
0x93FC	0xBF00    NOP
;ITG3200_main.c, 196 :: 		}
0x93FE	0xE001    B	L_GYRO_Start24
L_GYRO_Start21:
;ITG3200_main.c, 198 :: 		*test = 2;
; test start address is: 8 (R2)
0x9400	0x2102    MOVS	R1, #2
0x9402	0x7011    STRB	R1, [R2, #0]
; test end address is: 8 (R2)
;ITG3200_main.c, 199 :: 		}
L_GYRO_Start24:
;ITG3200_main.c, 200 :: 		Scroll_Undone(_SCROLL_GYRO_FIRST_LINE, _SCROLL_GYRO_LAST_LINE);
0x9404	0xF24001F6  MOVW	R1, #246
0x9408	0xF2400029  MOVW	R0, #41
0x940C	0xF7FBFC96  BL	_Scroll_Undone+0
;ITG3200_main.c, 201 :: 		}
L_end_GYRO_Start:
0x9410	0xF8DDE000  LDR	LR, [SP, #0]
0x9414	0xB002    ADD	SP, SP, #8
0x9416	0x4770    BX	LR
0x9418	0x8B000001  	__GPIO_MODULE_I2C2_PF01+0
0x941C	0x1A800006  	#400000
; end of _GYRO_Start
_ITG3200_Init:
;ITG3200_driver.c, 80 :: 		char ITG3200_Init() {
0x5010	0xB081    SUB	SP, SP, #4
0x5012	0xF8CDE000  STR	LR, [SP, #0]
;ITG3200_driver.c, 81 :: 		char id = 0x00;
;ITG3200_driver.c, 83 :: 		id = ITG3200_Read_Register(0x00);
0x5016	0x2000    MOVS	R0, #0
0x5018	0xF7FDF9B0  BL	ITG3200_driver_ITG3200_Read_Register+0
;ITG3200_driver.c, 84 :: 		if (id != 0x68) {
0x501C	0x2868    CMP	R0, #104
0x501E	0xD001    BEQ	L_ITG3200_Init0
;ITG3200_driver.c, 85 :: 		return _GYRO_ERROR;
0x5020	0x2002    MOVS	R0, #2
0x5022	0xE013    B	L_end_ITG3200_Init
;ITG3200_driver.c, 86 :: 		}
L_ITG3200_Init0:
;ITG3200_driver.c, 89 :: 		ITG3200_Write(DLPF_FS, (DLPF_FS_SEL_0|DLPF_FS_SEL_1|DLPF_CFG_0));
0x5024	0x480B    LDR	R0, [PC, #44]
0x5026	0x7801    LDRB	R1, [R0, #0]
0x5028	0x480B    LDR	R0, [PC, #44]
0x502A	0x7800    LDRB	R0, [R0, #0]
0x502C	0xEA400101  ORR	R1, R0, R1, LSL #0
0x5030	0xB2C9    UXTB	R1, R1
0x5032	0x480A    LDR	R0, [PC, #40]
0x5034	0x7800    LDRB	R0, [R0, #0]
0x5036	0x4301    ORRS	R1, R0
0x5038	0x4809    LDR	R0, [PC, #36]
0x503A	0x7800    LDRB	R0, [R0, #0]
0x503C	0xF7FDF9BC  BL	ITG3200_driver_ITG3200_Write+0
;ITG3200_driver.c, 91 :: 		ITG3200_Write(SMPLRT_DIV, 9);;
0x5040	0x4808    LDR	R0, [PC, #32]
0x5042	0x7800    LDRB	R0, [R0, #0]
0x5044	0x2109    MOVS	R1, #9
0x5046	0xF7FDF9B7  BL	ITG3200_driver_ITG3200_Write+0
;ITG3200_driver.c, 92 :: 		return 0x00;
0x504A	0x2000    MOVS	R0, #0
;ITG3200_driver.c, 94 :: 		}
L_end_ITG3200_Init:
0x504C	0xF8DDE000  LDR	LR, [SP, #0]
0x5050	0xB001    ADD	SP, SP, #4
0x5052	0x4770    BX	LR
0x5054	0x02D22000  	_DLPF_FS_SEL_1+0
0x5058	0x02D12000  	_DLPF_FS_SEL_0+0
0x505C	0x02D32000  	_DLPF_CFG_0+0
0x5060	0x02B52000  	_DLPF_FS+0
0x5064	0x02D42000  	_SMPLRT_DIV+0
; end of _ITG3200_Init
ITG3200_driver_ITG3200_Read_Register:
;ITG3200_driver.c, 65 :: 		static unsigned short ITG3200_Read_Register(unsigned short address) {
; address start address is: 0 (R0)
0x237C	0xB081    SUB	SP, SP, #4
0x237E	0xF8CDE000  STR	LR, [SP, #0]
0x2382	0xB2C5    UXTB	R5, R0
; address end address is: 0 (R0)
; address start address is: 20 (R5)
;ITG3200_driver.c, 66 :: 		I2C2_Start();              // issue I2C start signal
0x2384	0xF004FA66  BL	_I2C2_Start+0
;ITG3200_driver.c, 67 :: 		gyrodata_[0] = address;
0x2388	0x490A    LDR	R1, [PC, #40]
0x238A	0x700D    STRB	R5, [R1, #0]
; address end address is: 20 (R5)
;ITG3200_driver.c, 68 :: 		I2C2_Write(_GYRO_ADDRESS, gyrodata_, 1, END_MODE_RESTART);
0x238C	0xF2400300  MOVW	R3, #0
0x2390	0x2201    MOVS	R2, #1
0x2392	0x4908    LDR	R1, [PC, #32]
0x2394	0x2068    MOVS	R0, #104
0x2396	0xF000F841  BL	_I2C2_Write+0
;ITG3200_driver.c, 69 :: 		I2C2_Read(_GYRO_ADDRESS, gyrodata_, 1, END_MODE_STOP);
0x239A	0xF2400301  MOVW	R3, #1
0x239E	0x2201    MOVS	R2, #1
0x23A0	0x4904    LDR	R1, [PC, #16]
0x23A2	0x2068    MOVS	R0, #104
0x23A4	0xF000F87C  BL	_I2C2_Read+0
;ITG3200_driver.c, 70 :: 		return gyrodata_[0];
0x23A8	0x4902    LDR	R1, [PC, #8]
0x23AA	0x7808    LDRB	R0, [R1, #0]
;ITG3200_driver.c, 71 :: 		}
L_end_ITG3200_Read_Register:
0x23AC	0xF8DDE000  LDR	LR, [SP, #0]
0x23B0	0xB001    ADD	SP, SP, #4
0x23B2	0x4770    BX	LR
0x23B4	0x26DD2000  	_gyrodata_+0
; end of ITG3200_driver_ITG3200_Read_Register
ITG3200_driver_ITG3200_Write:
;ITG3200_driver.c, 33 :: 		static void ITG3200_Write(unsigned short address, unsigned short data1) {
; data1 start address is: 4 (R1)
; address start address is: 0 (R0)
0x23B8	0xB081    SUB	SP, SP, #4
0x23BA	0xF8CDE000  STR	LR, [SP, #0]
0x23BE	0xB2C5    UXTB	R5, R0
0x23C0	0xB2CE    UXTB	R6, R1
; data1 end address is: 4 (R1)
; address end address is: 0 (R0)
; address start address is: 20 (R5)
; data1 start address is: 24 (R6)
;ITG3200_driver.c, 34 :: 		I2C2_Start();              // issue I2C start signal
0x23C2	0xF004FA47  BL	_I2C2_Start+0
;ITG3200_driver.c, 35 :: 		gyrodata_[0] = address;
0x23C6	0x4A07    LDR	R2, [PC, #28]
0x23C8	0x7015    STRB	R5, [R2, #0]
; address end address is: 20 (R5)
;ITG3200_driver.c, 36 :: 		gyrodata_[1] = data1;
0x23CA	0x4A07    LDR	R2, [PC, #28]
0x23CC	0x7016    STRB	R6, [R2, #0]
; data1 end address is: 24 (R6)
;ITG3200_driver.c, 37 :: 		I2C2_Write(_GYRO_ADDRESS, gyrodata_, 2, END_MODE_STOP);
0x23CE	0xF2400301  MOVW	R3, #1
0x23D2	0x2202    MOVS	R2, #2
0x23D4	0x4903    LDR	R1, [PC, #12]
0x23D6	0x2068    MOVS	R0, #104
0x23D8	0xF000F820  BL	_I2C2_Write+0
;ITG3200_driver.c, 38 :: 		}
L_end_ITG3200_Write:
0x23DC	0xF8DDE000  LDR	LR, [SP, #0]
0x23E0	0xB001    ADD	SP, SP, #4
0x23E2	0x4770    BX	LR
0x23E4	0x26DD2000  	_gyrodata_+0
0x23E8	0x26DE2000  	_gyrodata_+1
; end of ITG3200_driver_ITG3200_Write
_doCalibration:
;Ducati_logger_events_code.c, 172 :: 		void doCalibration(){
0xC5F0	0xB081    SUB	SP, SP, #4
0xC5F2	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 173 :: 		Delay_ms(500);
0xC5F6	0xF647073E  MOVW	R7, #30782
0xC5FA	0xF2C0177D  MOVT	R7, #381
0xC5FE	0xBF00    NOP
0xC600	0xBF00    NOP
L_doCalibration22:
0xC602	0x1E7F    SUBS	R7, R7, #1
0xC604	0xD1FD    BNE	L_doCalibration22
0xC606	0xBF00    NOP
0xC608	0xBF00    NOP
0xC60A	0xBF00    NOP
;Ducati_logger_events_code.c, 174 :: 		Calibrate();
0xC60C	0xF003FB10  BL	_Calibrate+0
;Ducati_logger_events_code.c, 175 :: 		BLED_Fade_In();
0xC610	0xF7FCFBE6  BL	_BLED_Fade_In+0
;Ducati_logger_events_code.c, 176 :: 		DrawScreen(&Settings);
0xC614	0x4803    LDR	R0, [PC, #12]
0xC616	0xF003F919  BL	_DrawScreen+0
;Ducati_logger_events_code.c, 177 :: 		}
L_end_doCalibration:
0xC61A	0xF8DDE000  LDR	LR, [SP, #0]
0xC61E	0xB001    ADD	SP, SP, #4
0xC620	0x4770    BX	LR
0xC622	0xBF00    NOP
0xC624	0x10CC2000  	_Settings+0
; end of _doCalibration
_Image18OnPress:
;Ducati_logger_events_code.c, 200 :: 		void Image18OnPress() {
0xC5B0	0xB081    SUB	SP, SP, #4
0xC5B2	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 201 :: 		if (Set_MyRTCC() == 0)
0xC5B6	0xF7FCFE8B  BL	_Set_MyRTCC+0
0xC5BA	0xB900    CBNZ	R0, L_Image18OnPress24
;Ducati_logger_events_code.c, 202 :: 		return;
0xC5BC	0xE00E    B	L_end_Image18OnPress
L_Image18OnPress24:
;Ducati_logger_events_code.c, 203 :: 		Logger_State = 2;
0xC5BE	0x2102    MOVS	R1, #2
0xC5C0	0x4808    LDR	R0, [PC, #32]
0xC5C2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_events_code.c, 204 :: 		BLED_Fade_Out();
0xC5C4	0xF7FDFDF4  BL	_BLED_Fade_Out+0
;Ducati_logger_events_code.c, 205 :: 		DrawScreen(&Settings);
0xC5C8	0x4807    LDR	R0, [PC, #28]
0xC5CA	0xF003F93F  BL	_DrawScreen+0
;Ducati_logger_events_code.c, 206 :: 		Display_Bat_Stat = 1;
0xC5CE	0x2101    MOVS	R1, #1
0xC5D0	0x4806    LDR	R0, [PC, #24]
0xC5D2	0x7001    STRB	R1, [R0, #0]
;Ducati_logger_events_code.c, 207 :: 		checkPowerM();
0xC5D4	0xF7FDFAA4  BL	_checkPowerM+0
;Ducati_logger_events_code.c, 208 :: 		BLED_Fade_In();
0xC5D8	0xF7FCFC02  BL	_BLED_Fade_In+0
;Ducati_logger_events_code.c, 209 :: 		}
L_end_Image18OnPress:
0xC5DC	0xF8DDE000  LDR	LR, [SP, #0]
0xC5E0	0xB001    ADD	SP, SP, #4
0xC5E2	0x4770    BX	LR
0xC5E4	0x22962000  	_Logger_State+0
0xC5E8	0x10CC2000  	_Settings+0
0xC5EC	0x02B42000  	_Display_Bat_Stat+0
; end of _Image18OnPress
_Set_MyRTCC:
;RTCC_main.c, 605 :: 		char Set_MyRTCC(){
0x92D0	0xB081    SUB	SP, SP, #4
0x92D2	0xF8CDE000  STR	LR, [SP, #0]
;RTCC_main.c, 607 :: 		RTCC_Read(&MyTime);
0x92D6	0x4814    LDR	R0, [PC, #80]
0x92D8	0xF7FBFE16  BL	_RTCC_Read+0
;RTCC_main.c, 608 :: 		temp = Hour1Roll.currentlevel * 10 + Hour2Roll.currentlevel;
0x92DC	0x4813    LDR	R0, [PC, #76]
0x92DE	0x8801    LDRH	R1, [R0, #0]
0x92E0	0x200A    MOVS	R0, #10
0x92E2	0x4341    MULS	R1, R0, R1
0x92E4	0xB289    UXTH	R1, R1
0x92E6	0x4812    LDR	R0, [PC, #72]
0x92E8	0x8800    LDRH	R0, [R0, #0]
0x92EA	0x1808    ADDS	R0, R1, R0
; temp start address is: 4 (R1)
0x92EC	0xB2C1    UXTB	R1, R0
;RTCC_main.c, 609 :: 		if (temp > 12)
0x92EE	0xB2C0    UXTB	R0, R0
0x92F0	0x280C    CMP	R0, #12
0x92F2	0xD901    BLS	L_Set_MyRTCC70
; temp end address is: 4 (R1)
;RTCC_main.c, 610 :: 		return 0;
0x92F4	0x2000    MOVS	R0, #0
0x92F6	0xE013    B	L_end_Set_MyRTCC
L_Set_MyRTCC70:
;RTCC_main.c, 611 :: 		MyTime.hours = temp;
; temp start address is: 4 (R1)
0x92F8	0x480E    LDR	R0, [PC, #56]
0x92FA	0x7001    STRB	R1, [R0, #0]
; temp end address is: 4 (R1)
;RTCC_main.c, 612 :: 		MyTime.minutes = Minute1Roll.currentlevel * 10 + Minute2Roll.currentlevel;
0x92FC	0x480E    LDR	R0, [PC, #56]
0x92FE	0x8801    LDRH	R1, [R0, #0]
0x9300	0x200A    MOVS	R0, #10
0x9302	0x4341    MULS	R1, R0, R1
0x9304	0xB289    UXTH	R1, R1
0x9306	0x480D    LDR	R0, [PC, #52]
0x9308	0x8800    LDRH	R0, [R0, #0]
0x930A	0x1809    ADDS	R1, R1, R0
0x930C	0x480C    LDR	R0, [PC, #48]
0x930E	0x7001    STRB	R1, [R0, #0]
;RTCC_main.c, 613 :: 		MyTime.ampm = AmPm.currentlevel;
0x9310	0x480C    LDR	R0, [PC, #48]
0x9312	0x8801    LDRH	R1, [R0, #0]
0x9314	0x4804    LDR	R0, [PC, #16]
0x9316	0x7001    STRB	R1, [R0, #0]
;RTCC_main.c, 614 :: 		Set_RTC(&MyTime);
0x9318	0x4803    LDR	R0, [PC, #12]
0x931A	0xF7FAFC49  BL	_Set_RTC+0
;RTCC_main.c, 615 :: 		return 1;
0x931E	0x2001    MOVS	R0, #1
;RTCC_main.c, 616 :: 		}
L_end_Set_MyRTCC:
0x9320	0xF8DDE000  LDR	LR, [SP, #0]
0x9324	0xB001    ADD	SP, SP, #4
0x9326	0x4770    BX	LR
0x9328	0x27182000  	_MyTime+0
0x932C	0x27302000  	_Hour1Roll+16
0x9330	0x27482000  	_Hour2Roll+16
0x9334	0x271B2000  	_MyTime+3
0x9338	0x27602000  	_Minute1Roll+16
0x933C	0x27782000  	_Minute2Roll+16
0x9340	0x271A2000  	_MyTime+2
0x9344	0x27902000  	_AmPm+16
; end of _Set_MyRTCC
_Set_RTC:
;RTCC_driver.c, 57 :: 		void Set_RTC(TTime *RTCC_Time){
; RTCC_Time start address is: 0 (R0)
0x3BB0	0xB081    SUB	SP, SP, #4
0x3BB2	0xF8CDE000  STR	LR, [SP, #0]
; RTCC_Time end address is: 0 (R0)
; RTCC_Time start address is: 0 (R0)
;RTCC_driver.c, 60 :: 		PWR_CR.DBP = 1;
0x3BB6	0x2201    MOVS	R2, #1
0x3BB8	0xB252    SXTB	R2, R2
0x3BBA	0x4933    LDR	R1, [PC, #204]
0x3BBC	0x600A    STR	R2, [R1, #0]
;RTCC_driver.c, 62 :: 		RTC_WPR = 0xCA;                   //unlock write protection
0x3BBE	0x22CA    MOVS	R2, #202
0x3BC0	0x4932    LDR	R1, [PC, #200]
0x3BC2	0x600A    STR	R2, [R1, #0]
;RTCC_driver.c, 63 :: 		RTC_WPR = 0x53;                   //unlock write protection
0x3BC4	0x2253    MOVS	R2, #83
0x3BC6	0x4931    LDR	R1, [PC, #196]
0x3BC8	0x600A    STR	R2, [R1, #0]
;RTCC_driver.c, 64 :: 		RTC_ISR = 0x00000080;             //enter initialization mode  bit 7
0x3BCA	0x2280    MOVS	R2, #128
0x3BCC	0x4930    LDR	R1, [PC, #192]
0x3BCE	0x600A    STR	R2, [R1, #0]
; RTCC_Time end address is: 0 (R0)
0x3BD0	0x4604    MOV	R4, R0
;RTCC_driver.c, 65 :: 		while(RTC_ISR.INITF != 1){};      // bit 6
L_Set_RTC5:
; RTCC_Time start address is: 16 (R4)
0x3BD2	0x4A30    LDR	R2, [PC, #192]
0x3BD4	0x6811    LDR	R1, [R2, #0]
0x3BD6	0xB901    CBNZ	R1, L_Set_RTC6
0x3BD8	0xE7FB    B	L_Set_RTC5
L_Set_RTC6:
;RTCC_driver.c, 67 :: 		RTC_PRER = 0x7f00ff;              //  set   SynchPrediv to FF and AsynchPrediv to 7F*/
0x3BDA	0x4A2F    LDR	R2, [PC, #188]
0x3BDC	0x492F    LDR	R1, [PC, #188]
0x3BDE	0x600A    STR	R2, [R1, #0]
;RTCC_driver.c, 69 :: 		temp = (unsigned long)Dec2Bcd(RTCC_Time->hours) << 16;
0x3BE0	0x1CE1    ADDS	R1, R4, #3
0x3BE2	0xF9911000  LDRSB	R1, [R1, #0]
0x3BE6	0xB2C9    UXTB	R1, R1
0x3BE8	0xB2C8    UXTB	R0, R1
0x3BEA	0xF7FEFBFF  BL	_Dec2Bcd+0
0x3BEE	0xB2C5    UXTB	R5, R0
0x3BF0	0x042D    LSLS	R5, R5, #16
; temp start address is: 20 (R5)
;RTCC_driver.c, 70 :: 		temp += (unsigned long)Dec2BCD(RTCC_Time->minutes) << 8;
0x3BF2	0x1CA1    ADDS	R1, R4, #2
0x3BF4	0xF9911000  LDRSB	R1, [R1, #0]
0x3BF8	0xB2C9    UXTB	R1, R1
0x3BFA	0xB2C8    UXTB	R0, R1
0x3BFC	0xF7FEFBF6  BL	_Dec2Bcd+0
0x3C00	0xB2C1    UXTB	R1, R0
0x3C02	0x0209    LSLS	R1, R1, #8
0x3C04	0x186D    ADDS	R5, R5, R1
;RTCC_driver.c, 71 :: 		temp += (unsigned long)Dec2BCD(RTCC_Time->seconds);
0x3C06	0x1C61    ADDS	R1, R4, #1
0x3C08	0xF9911000  LDRSB	R1, [R1, #0]
0x3C0C	0xB2C9    UXTB	R1, R1
0x3C0E	0xB2C8    UXTB	R0, R1
0x3C10	0xF7FEFBEC  BL	_Dec2Bcd+0
0x3C14	0xB2C1    UXTB	R1, R0
0x3C16	0x186A    ADDS	R2, R5, R1
; temp end address is: 20 (R5)
;RTCC_driver.c, 72 :: 		temp += (unsigned long)(RTCC_Time->ampm) << 22;
0x3C18	0xF9941000  LDRSB	R1, [R4, #0]
0x3C1C	0x0589    LSLS	R1, R1, #22
0x3C1E	0x1852    ADDS	R2, R2, R1
;RTCC_driver.c, 74 :: 		RTC_TR = temp;
0x3C20	0x491F    LDR	R1, [PC, #124]
0x3C22	0x600A    STR	R2, [R1, #0]
;RTCC_driver.c, 76 :: 		temp = (unsigned long)Dec2Bcd(RTCC_Time->day) << 16;
0x3C24	0x1D21    ADDS	R1, R4, #4
0x3C26	0xF9911000  LDRSB	R1, [R1, #0]
0x3C2A	0xB2C9    UXTB	R1, R1
0x3C2C	0xB2C8    UXTB	R0, R1
0x3C2E	0xF7FEFBDD  BL	_Dec2Bcd+0
0x3C32	0xB2C5    UXTB	R5, R0
0x3C34	0x042D    LSLS	R5, R5, #16
; temp start address is: 20 (R5)
;RTCC_driver.c, 77 :: 		temp += (unsigned long)Dec2BCD(RTCC_Time->month) << 8;
0x3C36	0x1D61    ADDS	R1, R4, #5
0x3C38	0xF9911000  LDRSB	R1, [R1, #0]
0x3C3C	0xB2C9    UXTB	R1, R1
0x3C3E	0xB2C8    UXTB	R0, R1
0x3C40	0xF7FEFBD4  BL	_Dec2Bcd+0
0x3C44	0xB2C1    UXTB	R1, R0
0x3C46	0x0209    LSLS	R1, R1, #8
0x3C48	0x186D    ADDS	R5, R5, R1
;RTCC_driver.c, 78 :: 		temp += (unsigned long)Dec2BCD(RTCC_Time->year);
0x3C4A	0x1DA1    ADDS	R1, R4, #6
; RTCC_Time end address is: 16 (R4)
0x3C4C	0xF9B11000  LDRSH	R1, [R1, #0]
0x3C50	0xB2C9    UXTB	R1, R1
0x3C52	0xB2C8    UXTB	R0, R1
0x3C54	0xF7FEFBCA  BL	_Dec2Bcd+0
0x3C58	0xB2C1    UXTB	R1, R0
0x3C5A	0x186A    ADDS	R2, R5, R1
; temp end address is: 20 (R5)
;RTCC_driver.c, 80 :: 		RTC_DR = temp;           // set date
0x3C5C	0x4911    LDR	R1, [PC, #68]
0x3C5E	0x600A    STR	R2, [R1, #0]
;RTCC_driver.c, 81 :: 		RTC_CRbits.FMT = 1;
0x3C60	0x2201    MOVS	R2, #1
0x3C62	0xB252    SXTB	R2, R2
0x3C64	0x4910    LDR	R1, [PC, #64]
0x3C66	0x600A    STR	R2, [R1, #0]
;RTCC_driver.c, 82 :: 		RTC_CRbits.WCKSEL = 0;   // set FMT 12H format
0x3C68	0x2300    MOVS	R3, #0
0x3C6A	0x4A10    LDR	R2, [PC, #64]
0x3C6C	0x7811    LDRB	R1, [R2, #0]
0x3C6E	0xF3630102  BFI	R1, R3, #0, #3
0x3C72	0x7011    STRB	R1, [R2, #0]
;RTCC_driver.c, 84 :: 		RTC_ISR = 0x00000000;    //exit initialization mode
0x3C74	0x2200    MOVS	R2, #0
0x3C76	0x4906    LDR	R1, [PC, #24]
0x3C78	0x600A    STR	R2, [R1, #0]
;RTCC_driver.c, 86 :: 		RTC_WPR = 0xFF;          // Enable the write protection for RTC registers
0x3C7A	0x22FF    MOVS	R2, #255
0x3C7C	0x4903    LDR	R1, [PC, #12]
0x3C7E	0x600A    STR	R2, [R1, #0]
;RTCC_driver.c, 87 :: 		}
L_end_Set_RTC:
0x3C80	0xF8DDE000  LDR	LR, [SP, #0]
0x3C84	0xB001    ADD	SP, SP, #4
0x3C86	0x4770    BX	LR
0x3C88	0x0020420E  	PWR_CR+0
0x3C8C	0x28244000  	RTC_WPR+0
0x3C90	0x280C4000  	RTC_ISR+0
0x3C94	0x01984205  	RTC_ISR+0
0x3C98	0x00FF007F  	#8323327
0x3C9C	0x28104000  	RTC_PRER+0
0x3CA0	0x28004000  	RTC_TR+0
0x3CA4	0x28044000  	RTC_DR+0
0x3CA8	0x01184205  	RTC_CRbits+0
0x3CAC	0x28084000  	RTC_CRbits+0
; end of _Set_RTC
_Dec2Bcd:
;__Lib_Conversions.c, 463 :: 		
; decnum start address is: 0 (R0)
0x23EC	0xB081    SUB	SP, SP, #4
; decnum end address is: 0 (R0)
; decnum start address is: 0 (R0)
;__Lib_Conversions.c, 464 :: 		
;__Lib_Conversions.c, 466 :: 		
0x23EE	0x2809    CMP	R0, #9
0x23F0	0xD90F    BLS	L_Dec2Bcd105
;__Lib_Conversions.c, 467 :: 		
0x23F2	0x210A    MOVS	R1, #10
0x23F4	0xFBB0F1F1  UDIV	R1, R0, R1
0x23F8	0xB2C9    UXTB	R1, R1
;__Lib_Conversions.c, 468 :: 		
0x23FA	0x0109    LSLS	R1, R1, #4
; tmp start address is: 12 (R3)
0x23FC	0xB2CB    UXTB	R3, R1
;__Lib_Conversions.c, 469 :: 		
0x23FE	0x220A    MOVS	R2, #10
0x2400	0xFBB0F1F2  UDIV	R1, R0, R2
0x2404	0xFB020111  MLS	R1, R2, R1, R0
0x2408	0xB2C9    UXTB	R1, R1
; decnum end address is: 0 (R0)
0x240A	0xEA430001  ORR	R0, R3, R1, LSL #0
0x240E	0xB2C0    UXTB	R0, R0
; tmp end address is: 12 (R3)
; tmp start address is: 0 (R0)
;__Lib_Conversions.c, 470 :: 		
; tmp end address is: 0 (R0)
0x2410	0xE001    B	L_Dec2Bcd106
L_Dec2Bcd105:
;__Lib_Conversions.c, 471 :: 		
; tmp start address is: 4 (R1)
; decnum start address is: 0 (R0)
0x2412	0xB2C1    UXTB	R1, R0
; decnum end address is: 0 (R0)
; tmp end address is: 4 (R1)
0x2414	0xB2C8    UXTB	R0, R1
L_Dec2Bcd106:
;__Lib_Conversions.c, 472 :: 		
; tmp start address is: 0 (R0)
; tmp end address is: 0 (R0)
;__Lib_Conversions.c, 473 :: 		
L_end_Dec2Bcd:
0x2416	0xB001    ADD	SP, SP, #4
0x2418	0x4770    BX	LR
; end of _Dec2Bcd
_checkPowerM:
;Power_management.c, 127 :: 		void checkPowerM(){
0x9B20	0xB082    SUB	SP, SP, #8
0x9B22	0xF8CDE000  STR	LR, [SP, #0]
;Power_management.c, 130 :: 		GetPowerStatus();
0x9B26	0xF7F9FFAB  BL	Power_management_GetPowerStatus+0
;Power_management.c, 132 :: 		if (Power_State.Battery_state != Power_State_Old.Battery_state) {
0x9B2A	0x4866    LDR	R0, [PC, #408]
0x9B2C	0x7801    LDRB	R1, [R0, #0]
0x9B2E	0x4866    LDR	R0, [PC, #408]
0x9B30	0x7800    LDRB	R0, [R0, #0]
0x9B32	0x4288    CMP	R0, R1
0x9B34	0xD018    BEQ	L_checkPowerM13
;Power_management.c, 133 :: 		switch (Power_State.Battery_state) {
0x9B36	0xE003    B	L_checkPowerM14
;Power_management.c, 134 :: 		case BAT_CHARGING   : {
L_checkPowerM16:
;Power_management.c, 135 :: 		}; break;
0x9B38	0xE012    B	L_checkPowerM15
;Power_management.c, 136 :: 		case BAT_DISCHARGING: {
L_checkPowerM17:
;Power_management.c, 137 :: 		}; break;
0x9B3A	0xE011    B	L_checkPowerM15
;Power_management.c, 138 :: 		case BAT_FULL       : {
L_checkPowerM18:
;Power_management.c, 139 :: 		}; break;
0x9B3C	0xE010    B	L_checkPowerM15
;Power_management.c, 140 :: 		case BAT_UNPLUGGED  : {
L_checkPowerM19:
;Power_management.c, 141 :: 		}; break;
0x9B3E	0xE00F    B	L_checkPowerM15
;Power_management.c, 142 :: 		}
L_checkPowerM14:
0x9B40	0x4861    LDR	R0, [PC, #388]
0x9B42	0x7800    LDRB	R0, [R0, #0]
0x9B44	0x2800    CMP	R0, #0
0x9B46	0xD0F7    BEQ	L_checkPowerM16
0x9B48	0x485F    LDR	R0, [PC, #380]
0x9B4A	0x7800    LDRB	R0, [R0, #0]
0x9B4C	0x2801    CMP	R0, #1
0x9B4E	0xD0F4    BEQ	L_checkPowerM17
0x9B50	0x485D    LDR	R0, [PC, #372]
0x9B52	0x7800    LDRB	R0, [R0, #0]
0x9B54	0x2803    CMP	R0, #3
0x9B56	0xD0F1    BEQ	L_checkPowerM18
0x9B58	0x485B    LDR	R0, [PC, #364]
0x9B5A	0x7800    LDRB	R0, [R0, #0]
0x9B5C	0x2802    CMP	R0, #2
0x9B5E	0xD0EE    BEQ	L_checkPowerM19
L_checkPowerM15:
;Power_management.c, 144 :: 		Power_State_Old.Battery_state = Power_State.Battery_state;
0x9B60	0x4859    LDR	R0, [PC, #356]
0x9B62	0x7801    LDRB	R1, [R0, #0]
0x9B64	0x4857    LDR	R0, [PC, #348]
0x9B66	0x7001    STRB	R1, [R0, #0]
;Power_management.c, 145 :: 		}
L_checkPowerM13:
;Power_management.c, 147 :: 		if (Power_State.Source != Power_State_Old.Source) {
0x9B68	0x4858    LDR	R0, [PC, #352]
0x9B6A	0x7801    LDRB	R1, [R0, #0]
0x9B6C	0x4858    LDR	R0, [PC, #352]
0x9B6E	0x7800    LDRB	R0, [R0, #0]
0x9B70	0x4288    CMP	R0, R1
0x9B72	0xD013    BEQ	L_checkPowerM20
;Power_management.c, 148 :: 		switch (Power_State.Source) {
0x9B74	0xE002    B	L_checkPowerM21
;Power_management.c, 149 :: 		case SRC_BATTERY: {
L_checkPowerM23:
;Power_management.c, 150 :: 		}; break;
0x9B76	0xE00D    B	L_checkPowerM22
;Power_management.c, 151 :: 		case SRC_DC     : {
L_checkPowerM24:
;Power_management.c, 152 :: 		}; break;
0x9B78	0xE00C    B	L_checkPowerM22
;Power_management.c, 153 :: 		case SRC_USB    : {
L_checkPowerM25:
;Power_management.c, 154 :: 		}; break;
0x9B7A	0xE00B    B	L_checkPowerM22
;Power_management.c, 155 :: 		}
L_checkPowerM21:
0x9B7C	0x4854    LDR	R0, [PC, #336]
0x9B7E	0x7800    LDRB	R0, [R0, #0]
0x9B80	0x2800    CMP	R0, #0
0x9B82	0xD0F8    BEQ	L_checkPowerM23
0x9B84	0x4852    LDR	R0, [PC, #328]
0x9B86	0x7800    LDRB	R0, [R0, #0]
0x9B88	0x2802    CMP	R0, #2
0x9B8A	0xD0F5    BEQ	L_checkPowerM24
0x9B8C	0x4850    LDR	R0, [PC, #320]
0x9B8E	0x7800    LDRB	R0, [R0, #0]
0x9B90	0x2801    CMP	R0, #1
0x9B92	0xD0F2    BEQ	L_checkPowerM25
L_checkPowerM22:
;Power_management.c, 156 :: 		Power_State_Old.Source = Power_State.Source;
0x9B94	0x484E    LDR	R0, [PC, #312]
0x9B96	0x7801    LDRB	R1, [R0, #0]
0x9B98	0x484C    LDR	R0, [PC, #304]
0x9B9A	0x7001    STRB	R1, [R0, #0]
;Power_management.c, 157 :: 		}
L_checkPowerM20:
;Power_management.c, 159 :: 		if ((Power_State.Battery_state != BAT_UNPLUGGED) && (Display_Bat_Stat)){
0x9B9C	0x484A    LDR	R0, [PC, #296]
0x9B9E	0x7800    LDRB	R0, [R0, #0]
0x9BA0	0x2802    CMP	R0, #2
0x9BA2	0xF000808B  BEQ	L__checkPowerM40
0x9BA6	0x484B    LDR	R0, [PC, #300]
0x9BA8	0x7800    LDRB	R0, [R0, #0]
0x9BAA	0x2800    CMP	R0, #0
0x9BAC	0xF0008086  BEQ	L__checkPowerM39
L__checkPowerM36:
;Power_management.c, 160 :: 		Bar_Width = ((signed int)Power_State.ui_Voltage - 295) / 5;
0x9BB0	0x4849    LDR	R0, [PC, #292]
0x9BB2	0xF9B00000  LDRSH	R0, [R0, #0]
0x9BB6	0xF2A01127  SUBW	R1, R0, #295
0x9BBA	0xB209    SXTH	R1, R1
0x9BBC	0x2005    MOVS	R0, #5
0x9BBE	0xB200    SXTH	R0, R0
0x9BC0	0xFB91F0F0  SDIV	R0, R1, R0
0x9BC4	0xB200    SXTH	R0, R0
; Bar_Width start address is: 12 (R3)
0x9BC6	0xB203    SXTH	R3, R0
;Power_management.c, 161 :: 		if ((Bar_Width > 0) && (Bar_Width < 25)){
0x9BC8	0x2800    CMP	R0, #0
0x9BCA	0xDD5B    BLE	L__checkPowerM38
0x9BCC	0x2B19    CMP	R3, #25
0x9BCE	0xDA59    BGE	L__checkPowerM37
L__checkPowerM35:
;Power_management.c, 163 :: 		if (Power_State.ui_Voltage > 330)
0x9BD0	0x4841    LDR	R0, [PC, #260]
0x9BD2	0x8800    LDRH	R0, [R0, #0]
0x9BD4	0xF5B07FA5  CMP	R0, #330
0x9BD8	0xD910    BLS	L_checkPowerM32
;Power_management.c, 164 :: 		TFT_Set_Brush(1, CL_WHITE, 0, 0, 0, 0);
0x9BDA	0x2100    MOVS	R1, #0
0x9BDC	0x2000    MOVS	R0, #0
0x9BDE	0xF8AD3004  STRH	R3, [SP, #4]
0x9BE2	0xB402    PUSH	(R1)
0x9BE4	0xB401    PUSH	(R0)
0x9BE6	0x2300    MOVS	R3, #0
0x9BE8	0x2200    MOVS	R2, #0
0x9BEA	0xF64F71FF  MOVW	R1, #65535
0x9BEE	0x2001    MOVS	R0, #1
0x9BF0	0xF7FFFBAA  BL	_TFT_Set_Brush+0
0x9BF4	0xB002    ADD	SP, SP, #8
0x9BF6	0xF9BD3004  LDRSH	R3, [SP, #4]
0x9BFA	0xE00F    B	L_checkPowerM33
L_checkPowerM32:
;Power_management.c, 166 :: 		TFT_Set_Brush(1, CL_RED, 0, 0, 0, 0);
0x9BFC	0x2100    MOVS	R1, #0
0x9BFE	0x2000    MOVS	R0, #0
0x9C00	0xF8AD3004  STRH	R3, [SP, #4]
0x9C04	0xB402    PUSH	(R1)
0x9C06	0xB401    PUSH	(R0)
0x9C08	0x2300    MOVS	R3, #0
0x9C0A	0x2200    MOVS	R2, #0
0x9C0C	0xF64F0100  MOVW	R1, #63488
0x9C10	0x2001    MOVS	R0, #1
0x9C12	0xF7FFFB99  BL	_TFT_Set_Brush+0
0x9C16	0xB002    ADD	SP, SP, #8
0x9C18	0xF9BD3004  LDRSH	R3, [SP, #4]
L_checkPowerM33:
;Power_management.c, 167 :: 		TFT_Set_Pen(CL_WHITE, 0);
0x9C1C	0x2100    MOVS	R1, #0
0x9C1E	0xF64F70FF  MOVW	R0, #65535
0x9C22	0xF7FFFEC5  BL	_TFT_Set_Pen+0
;Power_management.c, 168 :: 		TFT_Rectangle(19, 12, 19 + Bar_width, 19);
0x9C26	0xF2030013  ADDW	R0, R3, #19
0x9C2A	0xF8AD3004  STRH	R3, [SP, #4]
0x9C2E	0x2313    MOVS	R3, #19
0x9C30	0xB21B    SXTH	R3, R3
0x9C32	0xB202    SXTH	R2, R0
0x9C34	0x210C    MOVS	R1, #12
0x9C36	0xB209    SXTH	R1, R1
0x9C38	0x2013    MOVS	R0, #19
0x9C3A	0xB200    SXTH	R0, R0
0x9C3C	0xF7FDFF84  BL	_TFT_Rectangle+0
;Power_management.c, 170 :: 		TFT_Set_Brush(1, Speedometer_graphics.Color, 0, 0, 0, 0);
0x9C40	0x2200    MOVS	R2, #0
0x9C42	0x2100    MOVS	R1, #0
0x9C44	0x4825    LDR	R0, [PC, #148]
0x9C46	0x8800    LDRH	R0, [R0, #0]
0x9C48	0xB404    PUSH	(R2)
0x9C4A	0xB402    PUSH	(R1)
0x9C4C	0x2300    MOVS	R3, #0
0x9C4E	0x2200    MOVS	R2, #0
0x9C50	0xB281    UXTH	R1, R0
0x9C52	0x2001    MOVS	R0, #1
0x9C54	0xF7FFFB78  BL	_TFT_Set_Brush+0
0x9C58	0xB002    ADD	SP, SP, #8
0x9C5A	0xF9BD3004  LDRSH	R3, [SP, #4]
;Power_management.c, 171 :: 		TFT_Set_Pen(CL_WHITE, 0);
0x9C5E	0x2100    MOVS	R1, #0
0x9C60	0xF64F70FF  MOVW	R0, #65535
0x9C64	0xF7FFFEA4  BL	_TFT_Set_Pen+0
;Power_management.c, 172 :: 		TFT_Rectangle(19 + Bar_width, 12, 43, 19);
0x9C68	0xF2030013  ADDW	R0, R3, #19
; Bar_Width end address is: 12 (R3)
0x9C6C	0x2313    MOVS	R3, #19
0x9C6E	0xB21B    SXTH	R3, R3
0x9C70	0x222B    MOVS	R2, #43
0x9C72	0xB212    SXTH	R2, R2
0x9C74	0x210C    MOVS	R1, #12
0x9C76	0xB209    SXTH	R1, R1
0x9C78	0xF7FDFF66  BL	_TFT_Rectangle+0
;Power_management.c, 174 :: 		Display_Bat_Stat = 0;
0x9C7C	0x2100    MOVS	R1, #0
0x9C7E	0x4815    LDR	R0, [PC, #84]
0x9C80	0x7001    STRB	R1, [R0, #0]
;Power_management.c, 175 :: 		}
0x9C82	0xE01B    B	L_checkPowerM34
;Power_management.c, 161 :: 		if ((Bar_Width > 0) && (Bar_Width < 25)){
L__checkPowerM38:
L__checkPowerM37:
;Power_management.c, 177 :: 		TFT_Set_Brush(1, Speedometer_graphics.Color, 0, 0, 0, 0);
0x9C84	0x2200    MOVS	R2, #0
0x9C86	0x2100    MOVS	R1, #0
0x9C88	0x4814    LDR	R0, [PC, #80]
0x9C8A	0x8800    LDRH	R0, [R0, #0]
0x9C8C	0xB404    PUSH	(R2)
0x9C8E	0xB402    PUSH	(R1)
0x9C90	0x2300    MOVS	R3, #0
0x9C92	0x2200    MOVS	R2, #0
0x9C94	0xB281    UXTH	R1, R0
0x9C96	0x2001    MOVS	R0, #1
0x9C98	0xF7FFFB56  BL	_TFT_Set_Brush+0
0x9C9C	0xB002    ADD	SP, SP, #8
;Power_management.c, 178 :: 		TFT_Set_Pen(CL_WHITE, 0);
0x9C9E	0x2100    MOVS	R1, #0
0x9CA0	0xF64F70FF  MOVW	R0, #65535
0x9CA4	0xF7FFFE84  BL	_TFT_Set_Pen+0
;Power_management.c, 179 :: 		TFT_Rectangle(19, 12, 43, 19);
0x9CA8	0x2313    MOVS	R3, #19
0x9CAA	0xB21B    SXTH	R3, R3
0x9CAC	0x222B    MOVS	R2, #43
0x9CAE	0xB212    SXTH	R2, R2
0x9CB0	0x210C    MOVS	R1, #12
0x9CB2	0xB209    SXTH	R1, R1
0x9CB4	0x2013    MOVS	R0, #19
0x9CB6	0xB200    SXTH	R0, R0
0x9CB8	0xF7FDFF46  BL	_TFT_Rectangle+0
;Power_management.c, 180 :: 		}
L_checkPowerM34:
;Power_management.c, 159 :: 		if ((Power_State.Battery_state != BAT_UNPLUGGED) && (Display_Bat_Stat)){
L__checkPowerM40:
L__checkPowerM39:
;Power_management.c, 182 :: 		}
L_end_checkPowerM:
0x9CBC	0xF8DDE000  LDR	LR, [SP, #0]
0x9CC0	0xB002    ADD	SP, SP, #8
0x9CC2	0x4770    BX	LR
0x9CC4	0x26F02000  	_Power_State_Old+0
0x9CC8	0x26FC2000  	_Power_State+0
0x9CCC	0x26F12000  	_Power_State_Old+1
0x9CD0	0x26FD2000  	_Power_State+1
0x9CD4	0x02B42000  	_Display_Bat_Stat+0
0x9CD8	0x27042000  	_Power_State+8
0x9CDC	0x08742000  	_Speedometer_graphics+0
; end of _checkPowerM
Power_management_GetPowerStatus:
;Power_management.c, 90 :: 		static void GetPowerStatus() {
0x3A80	0xB081    SUB	SP, SP, #4
0x3A82	0xF8CDE000  STR	LR, [SP, #0]
;Power_management.c, 91 :: 		Power_State.f_Voltage   = f_ReadBatteryVoltage();
0x3A86	0xF7FEFC65  BL	Power_management_f_ReadBatteryVoltage+0
0x3A8A	0x481F    LDR	R0, [PC, #124]
0x3A8C	0xED000A00  VSTR.32	S0, [R0, #0]
;Power_management.c, 92 :: 		Power_State.ui_Voltage  = (unsigned int)(Power_State.f_Voltage*100);
0x3A90	0x481E    LDR	R0, [PC, #120]
0x3A92	0xEE000A90  VMOV	S1, R0
0x3A96	0xEE200A20  VMUL.F32	S0, S0, S1
0x3A9A	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x3A9E	0xEE101A10  VMOV	R1, S0
0x3AA2	0xB289    UXTH	R1, R1
0x3AA4	0x481A    LDR	R0, [PC, #104]
0x3AA6	0x8001    STRH	R1, [R0, #0]
;Power_management.c, 94 :: 		if (DC_VBUS==0)
0x3AA8	0x491A    LDR	R1, [PC, #104]
0x3AAA	0x6808    LDR	R0, [R1, #0]
0x3AAC	0xB918    CBNZ	R0, L_Power_management_GetPowerStatus3
;Power_management.c, 95 :: 		Power_State.Source = SRC_DC;      // Works if Vdc>5V(Vusb), if Vdc<Vusb priority is changed
0x3AAE	0x2102    MOVS	R1, #2
0x3AB0	0x4819    LDR	R0, [PC, #100]
0x3AB2	0x7001    STRB	R1, [R0, #0]
0x3AB4	0xE009    B	L_Power_management_GetPowerStatus4
L_Power_management_GetPowerStatus3:
;Power_management.c, 97 :: 		if (USB_VBUS==1)
0x3AB6	0x4919    LDR	R1, [PC, #100]
0x3AB8	0x6808    LDR	R0, [R1, #0]
0x3ABA	0xB118    CBZ	R0, L_Power_management_GetPowerStatus5
;Power_management.c, 98 :: 		Power_State.Source = SRC_USB;
0x3ABC	0x2101    MOVS	R1, #1
0x3ABE	0x4816    LDR	R0, [PC, #88]
0x3AC0	0x7001    STRB	R1, [R0, #0]
0x3AC2	0xE002    B	L_Power_management_GetPowerStatus6
L_Power_management_GetPowerStatus5:
;Power_management.c, 100 :: 		Power_State.Source = SRC_BATTERY;
0x3AC4	0x2100    MOVS	R1, #0
0x3AC6	0x4814    LDR	R0, [PC, #80]
0x3AC8	0x7001    STRB	R1, [R0, #0]
;Power_management.c, 101 :: 		}
L_Power_management_GetPowerStatus6:
;Power_management.c, 102 :: 		}
L_Power_management_GetPowerStatus4:
;Power_management.c, 104 :: 		if (BAT_STAT == 0)
0x3ACA	0x4915    LDR	R1, [PC, #84]
0x3ACC	0x6808    LDR	R0, [R1, #0]
0x3ACE	0xB918    CBNZ	R0, L_Power_management_GetPowerStatus7
;Power_management.c, 105 :: 		Power_State.Battery_state = BAT_CHARGING;
0x3AD0	0x2100    MOVS	R1, #0
0x3AD2	0x4814    LDR	R0, [PC, #80]
0x3AD4	0x7001    STRB	R1, [R0, #0]
0x3AD6	0xE013    B	L_Power_management_GetPowerStatus8
L_Power_management_GetPowerStatus7:
;Power_management.c, 107 :: 		if (Power_State.Source == SRC_BATTERY) {
0x3AD8	0x480F    LDR	R0, [PC, #60]
0x3ADA	0x7800    LDRB	R0, [R0, #0]
0x3ADC	0xB918    CBNZ	R0, L_Power_management_GetPowerStatus9
;Power_management.c, 108 :: 		Power_State.Battery_state = BAT_DISCHARGING;
0x3ADE	0x2101    MOVS	R1, #1
0x3AE0	0x4810    LDR	R0, [PC, #64]
0x3AE2	0x7001    STRB	R1, [R0, #0]
;Power_management.c, 109 :: 		}
0x3AE4	0xE00C    B	L_Power_management_GetPowerStatus10
L_Power_management_GetPowerStatus9:
;Power_management.c, 111 :: 		if (Power_State.ui_Voltage>=425)
0x3AE6	0x480A    LDR	R0, [PC, #40]
0x3AE8	0x8801    LDRH	R1, [R0, #0]
0x3AEA	0xF24010A9  MOVW	R0, #425
0x3AEE	0x4281    CMP	R1, R0
0x3AF0	0xD303    BCC	L_Power_management_GetPowerStatus11
;Power_management.c, 112 :: 		Power_State.Battery_state = BAT_UNPLUGGED;
0x3AF2	0x2102    MOVS	R1, #2
0x3AF4	0x480B    LDR	R0, [PC, #44]
0x3AF6	0x7001    STRB	R1, [R0, #0]
0x3AF8	0xE002    B	L_Power_management_GetPowerStatus12
L_Power_management_GetPowerStatus11:
;Power_management.c, 114 :: 		Power_State.Battery_state = BAT_FULL;
0x3AFA	0x2103    MOVS	R1, #3
0x3AFC	0x4809    LDR	R0, [PC, #36]
0x3AFE	0x7001    STRB	R1, [R0, #0]
L_Power_management_GetPowerStatus12:
;Power_management.c, 115 :: 		}
L_Power_management_GetPowerStatus10:
;Power_management.c, 116 :: 		}
L_Power_management_GetPowerStatus8:
;Power_management.c, 117 :: 		}
L_end_GetPowerStatus:
0x3B00	0xF8DDE000  LDR	LR, [SP, #0]
0x3B04	0xB001    ADD	SP, SP, #4
0x3B06	0x4770    BX	LR
0x3B08	0x27002000  	_Power_State+4
0x3B0C	0x000042C8  	#1120403456
0x3B10	0x27042000  	_Power_State+8
0x3B14	0x820C4242  	GPIOF_IDR+0
0x3B18	0x26FD2000  	_Power_State+1
0x3B1C	0x02244240  	GPIOA_IDR+0
0x3B20	0x82104242  	GPIOF_IDR+0
0x3B24	0x26FC2000  	_Power_State+0
; end of Power_management_GetPowerStatus
Power_management_f_ReadBatteryVoltage:
;Power_management.c, 76 :: 		static float f_ReadBatteryVoltage() {
0x2354	0xB081    SUB	SP, SP, #4
0x2356	0xF8CDE000  STR	LR, [SP, #0]
;Power_management.c, 79 :: 		ui_voltage = ui_ReadBatteryVoltage();
0x235A	0xF7FFFA23  BL	Power_management_ui_ReadBatteryVoltage+0
;Power_management.c, 80 :: 		return (float)ui_voltage*0.0015;         // 3*2.048/4096
0x235E	0xEE000A90  VMOV	S1, R0
0x2362	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x2366	0x4804    LDR	R0, [PC, #16]
0x2368	0xEE000A10  VMOV	S0, R0
0x236C	0xEE200A80  VMUL.F32	S0, S1, S0
;Power_management.c, 81 :: 		}
L_end_f_ReadBatteryVoltage:
0x2370	0xF8DDE000  LDR	LR, [SP, #0]
0x2374	0xB001    ADD	SP, SP, #4
0x2376	0x4770    BX	LR
0x2378	0x9BA63AC4  	#985963430
; end of Power_management_f_ReadBatteryVoltage
Power_management_ui_ReadBatteryVoltage:
;Power_management.c, 58 :: 		static unsigned int ui_ReadBatteryVoltage() {
0x17A4	0xB081    SUB	SP, SP, #4
0x17A6	0xF8CDE000  STR	LR, [SP, #0]
;Power_management.c, 62 :: 		for(cntr=0, ui_voltage=0; cntr<8; cntr++) {
; cntr start address is: 20 (R5)
0x17AA	0x2500    MOVS	R5, #0
; ui_voltage start address is: 24 (R6)
0x17AC	0x2600    MOVS	R6, #0
; ui_voltage end address is: 24 (R6)
; cntr end address is: 20 (R5)
L_Power_management_ui_ReadBatteryVoltage0:
; ui_voltage start address is: 24 (R6)
; cntr start address is: 20 (R5)
0x17AE	0x2D08    CMP	R5, #8
0x17B0	0xD209    BCS	L_Power_management_ui_ReadBatteryVoltage1
;Power_management.c, 63 :: 		ui_voltage += ADC3_Get_Sample(4);
0x17B2	0x2004    MOVS	R0, #4
0x17B4	0xF7FFFA98  BL	_ADC3_Get_Sample+0
0x17B8	0x1836    ADDS	R6, R6, R0
0x17BA	0xB2B6    UXTH	R6, R6
;Power_management.c, 64 :: 		Delay_10ms();
0x17BC	0xF005FA30  BL	_Delay_10ms+0
;Power_management.c, 62 :: 		for(cntr=0, ui_voltage=0; cntr<8; cntr++) {
0x17C0	0x1C6D    ADDS	R5, R5, #1
0x17C2	0xB2ED    UXTB	R5, R5
;Power_management.c, 65 :: 		}
; cntr end address is: 20 (R5)
0x17C4	0xE7F3    B	L_Power_management_ui_ReadBatteryVoltage0
L_Power_management_ui_ReadBatteryVoltage1:
;Power_management.c, 66 :: 		return ui_voltage >> 3;
0x17C6	0x08F0    LSRS	R0, R6, #3
; ui_voltage end address is: 24 (R6)
;Power_management.c, 67 :: 		}
L_end_ui_ReadBatteryVoltage:
0x17C8	0xF8DDE000  LDR	LR, [SP, #0]
0x17CC	0xB001    ADD	SP, SP, #4
0x17CE	0x4770    BX	LR
; end of Power_management_ui_ReadBatteryVoltage
_Box8OnClick:
;Ducati_logger_events_code.c, 211 :: 		void Box8OnClick() {
0xC500	0xB081    SUB	SP, SP, #4
0xC502	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 212 :: 		Deactivate_All_Rollers();
0xC506	0xF7FDF9C7  BL	_Deactivate_All_Rollers+0
;Ducati_logger_events_code.c, 213 :: 		}
L_end_Box8OnClick:
0xC50A	0xF8DDE000  LDR	LR, [SP, #0]
0xC50E	0xB001    ADD	SP, SP, #4
0xC510	0x4770    BX	LR
; end of _Box8OnClick
_Deactivate_All_Rollers:
;RTCC_main.c, 516 :: 		void Deactivate_All_Rollers(){
0x9898	0xB081    SUB	SP, SP, #4
0x989A	0xF8CDE000  STR	LR, [SP, #0]
;RTCC_main.c, 517 :: 		if (Hour1Roll.active == 1){
0x989E	0x4825    LDR	R0, [PC, #148]
0x98A0	0xF9B00000  LDRSH	R0, [R0, #0]
0x98A4	0x2801    CMP	R0, #1
0x98A6	0xD108    BNE	L_Deactivate_All_Rollers60
;RTCC_main.c, 518 :: 		Roller_Deactivate(&Hour1Roll, 111, 96);
0x98A8	0x2260    MOVS	R2, #96
0x98AA	0x216F    MOVS	R1, #111
0x98AC	0x4822    LDR	R0, [PC, #136]
0x98AE	0xF7FBFA71  BL	_Roller_Deactivate+0
;RTCC_main.c, 519 :: 		Hour1Roll.active = 0;
0x98B2	0x2100    MOVS	R1, #0
0x98B4	0xB209    SXTH	R1, R1
0x98B6	0x481F    LDR	R0, [PC, #124]
0x98B8	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 520 :: 		}
L_Deactivate_All_Rollers60:
;RTCC_main.c, 521 :: 		if (Hour2Roll.active == 1){
0x98BA	0x4820    LDR	R0, [PC, #128]
0x98BC	0xF9B00000  LDRSH	R0, [R0, #0]
0x98C0	0x2801    CMP	R0, #1
0x98C2	0xD108    BNE	L_Deactivate_All_Rollers61
;RTCC_main.c, 522 :: 		Roller_Deactivate(&Hour2Roll, 149, 96);
0x98C4	0x2260    MOVS	R2, #96
0x98C6	0x2195    MOVS	R1, #149
0x98C8	0x481D    LDR	R0, [PC, #116]
0x98CA	0xF7FBFA63  BL	_Roller_Deactivate+0
;RTCC_main.c, 523 :: 		Hour2Roll.active = 0;
0x98CE	0x2100    MOVS	R1, #0
0x98D0	0xB209    SXTH	R1, R1
0x98D2	0x481A    LDR	R0, [PC, #104]
0x98D4	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 524 :: 		}
L_Deactivate_All_Rollers61:
;RTCC_main.c, 525 :: 		if (Minute1Roll.active == 1){
0x98D6	0x481B    LDR	R0, [PC, #108]
0x98D8	0xF9B00000  LDRSH	R0, [R0, #0]
0x98DC	0x2801    CMP	R0, #1
0x98DE	0xD108    BNE	L_Deactivate_All_Rollers62
;RTCC_main.c, 526 :: 		Roller_Deactivate(&Minute1Roll, 215, 96);
0x98E0	0x2260    MOVS	R2, #96
0x98E2	0x21D7    MOVS	R1, #215
0x98E4	0x4818    LDR	R0, [PC, #96]
0x98E6	0xF7FBFA55  BL	_Roller_Deactivate+0
;RTCC_main.c, 527 :: 		Minute1Roll.active = 0;
0x98EA	0x2100    MOVS	R1, #0
0x98EC	0xB209    SXTH	R1, R1
0x98EE	0x4815    LDR	R0, [PC, #84]
0x98F0	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 528 :: 		}
L_Deactivate_All_Rollers62:
;RTCC_main.c, 529 :: 		if (Minute2Roll.active == 1){
0x98F2	0x4816    LDR	R0, [PC, #88]
0x98F4	0xF9B00000  LDRSH	R0, [R0, #0]
0x98F8	0x2801    CMP	R0, #1
0x98FA	0xD108    BNE	L_Deactivate_All_Rollers63
;RTCC_main.c, 530 :: 		Roller_Deactivate(&Minute2Roll, 253, 96);
0x98FC	0x2260    MOVS	R2, #96
0x98FE	0x21FD    MOVS	R1, #253
0x9900	0x4813    LDR	R0, [PC, #76]
0x9902	0xF7FBFA47  BL	_Roller_Deactivate+0
;RTCC_main.c, 531 :: 		Minute2Roll.active = 0;
0x9906	0x2100    MOVS	R1, #0
0x9908	0xB209    SXTH	R1, R1
0x990A	0x4810    LDR	R0, [PC, #64]
0x990C	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 532 :: 		}
L_Deactivate_All_Rollers63:
;RTCC_main.c, 533 :: 		if (AmPm.active == 1){
0x990E	0x4811    LDR	R0, [PC, #68]
0x9910	0xF9B00000  LDRSH	R0, [R0, #0]
0x9914	0x2801    CMP	R0, #1
0x9916	0xD109    BNE	L_Deactivate_All_Rollers64
;RTCC_main.c, 534 :: 		Roller_Deactivate(&AmPm, 307, 96);
0x9918	0x2260    MOVS	R2, #96
0x991A	0xF2401133  MOVW	R1, #307
0x991E	0x480E    LDR	R0, [PC, #56]
0x9920	0xF7FBFA38  BL	_Roller_Deactivate+0
;RTCC_main.c, 535 :: 		AmPm.active = 0;
0x9924	0x2100    MOVS	R1, #0
0x9926	0xB209    SXTH	R1, R1
0x9928	0x480A    LDR	R0, [PC, #40]
0x992A	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 536 :: 		}
L_Deactivate_All_Rollers64:
;RTCC_main.c, 537 :: 		}
L_end_Deactivate_All_Rollers:
0x992C	0xF8DDE000  LDR	LR, [SP, #0]
0x9930	0xB001    ADD	SP, SP, #4
0x9932	0x4770    BX	LR
0x9934	0x27322000  	_Hour1Roll+18
0x9938	0x27202000  	_Hour1Roll+0
0x993C	0x274A2000  	_Hour2Roll+18
0x9940	0x27382000  	_Hour2Roll+0
0x9944	0x27622000  	_Minute1Roll+18
0x9948	0x27502000  	_Minute1Roll+0
0x994C	0x277A2000  	_Minute2Roll+18
0x9950	0x27682000  	_Minute2Roll+0
0x9954	0x27922000  	_AmPm+18
0x9958	0x27802000  	_AmPm+0
; end of _Deactivate_All_Rollers
_Box10OnPress:
;Ducati_logger_events_code.c, 180 :: 		void Box10OnPress() {
0xC4EC	0xB081    SUB	SP, SP, #4
0xC4EE	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 181 :: 		HoursTens();
0xC4F2	0xF7FDFA69  BL	_HoursTens+0
;Ducati_logger_events_code.c, 182 :: 		}
L_end_Box10OnPress:
0xC4F6	0xF8DDE000  LDR	LR, [SP, #0]
0xC4FA	0xB001    ADD	SP, SP, #4
0xC4FC	0x4770    BX	LR
; end of _Box10OnPress
_HoursTens:
;RTCC_main.c, 346 :: 		void HoursTens(){
0x99C8	0xB081    SUB	SP, SP, #4
0x99CA	0xF8CDE000  STR	LR, [SP, #0]
;RTCC_main.c, 348 :: 		if (Hour1Roll.active == 0){
0x99CE	0x482C    LDR	R0, [PC, #176]
0x99D0	0xF9B00000  LDRSH	R0, [R0, #0]
0x99D4	0x2800    CMP	R0, #0
0x99D6	0xF0408047  BNE	L_HoursTens35
;RTCC_main.c, 349 :: 		if (Hour2Roll.active == 1){
0x99DA	0x482A    LDR	R0, [PC, #168]
0x99DC	0xF9B00000  LDRSH	R0, [R0, #0]
0x99E0	0x2801    CMP	R0, #1
0x99E2	0xD108    BNE	L_HoursTens36
;RTCC_main.c, 350 :: 		Roller_Deactivate(&Hour2Roll, 149, 96);
0x99E4	0x2260    MOVS	R2, #96
0x99E6	0x2195    MOVS	R1, #149
0x99E8	0x4827    LDR	R0, [PC, #156]
0x99EA	0xF7FBF9D3  BL	_Roller_Deactivate+0
;RTCC_main.c, 351 :: 		Hour2Roll.active = 0;
0x99EE	0x2100    MOVS	R1, #0
0x99F0	0xB209    SXTH	R1, R1
0x99F2	0x4824    LDR	R0, [PC, #144]
0x99F4	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 352 :: 		}
L_HoursTens36:
;RTCC_main.c, 353 :: 		if (Minute1Roll.active == 1){
0x99F6	0x4825    LDR	R0, [PC, #148]
0x99F8	0xF9B00000  LDRSH	R0, [R0, #0]
0x99FC	0x2801    CMP	R0, #1
0x99FE	0xD108    BNE	L_HoursTens37
;RTCC_main.c, 354 :: 		Roller_Deactivate(&Minute1Roll, 215, 96);
0x9A00	0x2260    MOVS	R2, #96
0x9A02	0x21D7    MOVS	R1, #215
0x9A04	0x4822    LDR	R0, [PC, #136]
0x9A06	0xF7FBF9C5  BL	_Roller_Deactivate+0
;RTCC_main.c, 355 :: 		Minute1Roll.active = 0;
0x9A0A	0x2100    MOVS	R1, #0
0x9A0C	0xB209    SXTH	R1, R1
0x9A0E	0x481F    LDR	R0, [PC, #124]
0x9A10	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 356 :: 		}
L_HoursTens37:
;RTCC_main.c, 357 :: 		if (Minute2Roll.active == 1){
0x9A12	0x4820    LDR	R0, [PC, #128]
0x9A14	0xF9B00000  LDRSH	R0, [R0, #0]
0x9A18	0x2801    CMP	R0, #1
0x9A1A	0xD108    BNE	L_HoursTens38
;RTCC_main.c, 358 :: 		Roller_Deactivate(&Minute2Roll, 253, 96);
0x9A1C	0x2260    MOVS	R2, #96
0x9A1E	0x21FD    MOVS	R1, #253
0x9A20	0x481D    LDR	R0, [PC, #116]
0x9A22	0xF7FBF9B7  BL	_Roller_Deactivate+0
;RTCC_main.c, 359 :: 		Minute2Roll.active = 0;
0x9A26	0x2100    MOVS	R1, #0
0x9A28	0xB209    SXTH	R1, R1
0x9A2A	0x481A    LDR	R0, [PC, #104]
0x9A2C	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 360 :: 		}
L_HoursTens38:
;RTCC_main.c, 361 :: 		if (AmPm.active == 1){
0x9A2E	0x481B    LDR	R0, [PC, #108]
0x9A30	0xF9B00000  LDRSH	R0, [R0, #0]
0x9A34	0x2801    CMP	R0, #1
0x9A36	0xD109    BNE	L_HoursTens39
;RTCC_main.c, 362 :: 		Roller_Deactivate(&AmPm, 307, 96);
0x9A38	0x2260    MOVS	R2, #96
0x9A3A	0xF2401133  MOVW	R1, #307
0x9A3E	0x4818    LDR	R0, [PC, #96]
0x9A40	0xF7FBF9A8  BL	_Roller_Deactivate+0
;RTCC_main.c, 363 :: 		AmPm.active = 0;
0x9A44	0x2100    MOVS	R1, #0
0x9A46	0xB209    SXTH	R1, R1
0x9A48	0x4814    LDR	R0, [PC, #80]
0x9A4A	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 364 :: 		}
L_HoursTens39:
;RTCC_main.c, 366 :: 		Draw_Picture(&Hour1Roll, Hour1Roll.position - 96, Hour1Roll.Left, Hour1Roll.Top);
0x9A4C	0x4815    LDR	R0, [PC, #84]
0x9A4E	0x8802    LDRH	R2, [R0, #0]
0x9A50	0x4815    LDR	R0, [PC, #84]
0x9A52	0x8801    LDRH	R1, [R0, #0]
0x9A54	0x4815    LDR	R0, [PC, #84]
0x9A56	0xF9B00000  LDRSH	R0, [R0, #0]
0x9A5A	0x3860    SUBS	R0, #96
0x9A5C	0xB213    SXTH	R3, R2
0x9A5E	0xB20A    SXTH	R2, R1
0x9A60	0xB201    SXTH	R1, R0
0x9A62	0x4811    LDR	R0, [PC, #68]
0x9A64	0xF7FAFB14  BL	_Draw_Picture+0
;RTCC_main.c, 367 :: 		}
L_HoursTens35:
;RTCC_main.c, 369 :: 		MyBoxOnPress(&Hour1Roll);
0x9A68	0x480F    LDR	R0, [PC, #60]
0x9A6A	0xF7FAFC7B  BL	_MyBoxOnPress+0
;RTCC_main.c, 370 :: 		Hour1Roll.active = 1;
0x9A6E	0x2101    MOVS	R1, #1
0x9A70	0xB209    SXTH	R1, R1
0x9A72	0x4803    LDR	R0, [PC, #12]
0x9A74	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 371 :: 		}
L_end_HoursTens:
0x9A76	0xF8DDE000  LDR	LR, [SP, #0]
0x9A7A	0xB001    ADD	SP, SP, #4
0x9A7C	0x4770    BX	LR
0x9A7E	0xBF00    NOP
0x9A80	0x27322000  	_Hour1Roll+18
0x9A84	0x274A2000  	_Hour2Roll+18
0x9A88	0x27382000  	_Hour2Roll+0
0x9A8C	0x27622000  	_Minute1Roll+18
0x9A90	0x27502000  	_Minute1Roll+0
0x9A94	0x277A2000  	_Minute2Roll+18
0x9A98	0x27682000  	_Minute2Roll+0
0x9A9C	0x27922000  	_AmPm+18
0x9AA0	0x27802000  	_AmPm+0
0x9AA4	0x27222000  	_Hour1Roll+2
0x9AA8	0x27202000  	_Hour1Roll+0
0x9AAC	0x27342000  	_Hour1Roll+20
; end of _HoursTens
_Draw_Picture:
;RTCC_main.c, 154 :: 		void Draw_Picture(TRoller *Image, int line, int xcoo, int ycoo){
; ycoo start address is: 12 (R3)
; xcoo start address is: 8 (R2)
; line start address is: 4 (R1)
; Image start address is: 0 (R0)
0x4090	0xB087    SUB	SP, SP, #28
0x4092	0xF8CDE000  STR	LR, [SP, #0]
; ycoo end address is: 12 (R3)
; xcoo end address is: 8 (R2)
; line end address is: 4 (R1)
; Image end address is: 0 (R0)
; Image start address is: 0 (R0)
; line start address is: 4 (R1)
; xcoo start address is: 8 (R2)
; ycoo start address is: 12 (R3)
;RTCC_main.c, 157 :: 		pFilter = filter;
0x4096	0x4D5E    LDR	R5, [PC, #376]
0x4098	0x4C5E    LDR	R4, [PC, #376]
0x409A	0x6025    STR	R5, [R4, #0]
;RTCC_main.c, 158 :: 		for (i = 0; i < (Image->Height)/2 - 2; i ++){
; i start address is: 16 (R4)
0x409C	0x2400    MOVS	R4, #0
0x409E	0xB264    SXTB	R4, R4
; Image end address is: 0 (R0)
; line end address is: 4 (R1)
; i end address is: 16 (R4)
; xcoo end address is: 8 (R2)
; ycoo end address is: 12 (R3)
0x40A0	0xB20F    SXTH	R7, R1
0x40A2	0x4601    MOV	R1, R0
0x40A4	0xB210    SXTH	R0, R2
0x40A6	0xB262    SXTB	R2, R4
L_Draw_Picture12:
; i start address is: 8 (R2)
; ycoo start address is: 12 (R3)
; xcoo start address is: 0 (R0)
; line start address is: 28 (R7)
; Image start address is: 4 (R1)
0x40A8	0x1D8C    ADDS	R4, R1, #6
0x40AA	0x8824    LDRH	R4, [R4, #0]
0x40AC	0x0864    LSRS	R4, R4, #1
0x40AE	0xB2A4    UXTH	R4, R4
0x40B0	0x1EA4    SUBS	R4, R4, #2
0x40B2	0xB2A4    UXTH	R4, R4
0x40B4	0x42A2    CMP	R2, R4
0x40B6	0xD249    BCS	L_Draw_Picture13
;RTCC_main.c, 159 :: 		temp = line - table[i];
0x40B8	0x0055    LSLS	R5, R2, #1
0x40BA	0x4C57    LDR	R4, [PC, #348]
0x40BC	0x1964    ADDS	R4, R4, R5
0x40BE	0x8824    LDRH	R4, [R4, #0]
0x40C0	0x1B3E    SUB	R6, R7, R4
0x40C2	0xF8AD6018  STRH	R6, [SP, #24]
;RTCC_main.c, 160 :: 		if ((temp) > (signed int)(Image->ImageHeight - 1))
0x40C6	0xF2010408  ADDW	R4, R1, #8
0x40CA	0x8824    LDRH	R4, [R4, #0]
0x40CC	0x1E64    SUBS	R4, R4, #1
0x40CE	0xB225    SXTH	R5, R4
0x40D0	0xB234    SXTH	R4, R6
0x40D2	0x42AC    CMP	R4, R5
0x40D4	0xDD09    BLE	L_Draw_Picture15
;RTCC_main.c, 161 :: 		temp = temp - Image->ImageHeight - 1;
0x40D6	0xF2010408  ADDW	R4, R1, #8
0x40DA	0x8825    LDRH	R5, [R4, #0]
0x40DC	0xF9BD4018  LDRSH	R4, [SP, #24]
0x40E0	0x1B64    SUB	R4, R4, R5
0x40E2	0xB2A4    UXTH	R4, R4
0x40E4	0x1E64    SUBS	R4, R4, #1
0x40E6	0xF8AD4018  STRH	R4, [SP, #24]
L_Draw_Picture15:
;RTCC_main.c, 162 :: 		if (temp < 0)
0x40EA	0xF9BD4018  LDRSH	R4, [SP, #24]
0x40EE	0x2C00    CMP	R4, #0
0x40F0	0xDA09    BGE	L_Draw_Picture16
;RTCC_main.c, 163 :: 		temp = Image->ImageHeight - 1 + temp;
0x40F2	0xF2010408  ADDW	R4, R1, #8
0x40F6	0x8824    LDRH	R4, [R4, #0]
0x40F8	0x1E65    SUBS	R5, R4, #1
0x40FA	0xB2AD    UXTH	R5, R5
0x40FC	0xF9BD4018  LDRSH	R4, [SP, #24]
0x4100	0x192C    ADDS	R4, R5, R4
0x4102	0xF8AD4018  STRH	R4, [SP, #24]
L_Draw_Picture16:
;RTCC_main.c, 164 :: 		DrawPictureLine(Image, temp, xcoo, ycoo);
0x4106	0x9101    STR	R1, [SP, #4]
0x4108	0xF8AD7008  STRH	R7, [SP, #8]
0x410C	0xF8AD000C  STRH	R0, [SP, #12]
0x4110	0xF8AD3010  STRH	R3, [SP, #16]
0x4114	0xF88D2012  STRB	R2, [SP, #18]
0x4118	0xB202    SXTH	R2, R0
0x411A	0x4608    MOV	R0, R1
0x411C	0xF9BD1018  LDRSH	R1, [SP, #24]
0x4120	0xF7FEF874  BL	_DrawPictureLine+0
0x4124	0xF99D2012  LDRSB	R2, [SP, #18]
0x4128	0xF9BD3010  LDRSH	R3, [SP, #16]
0x412C	0xF9BD000C  LDRSH	R0, [SP, #12]
0x4130	0xF9BD7008  LDRSH	R7, [SP, #8]
0x4134	0x9901    LDR	R1, [SP, #4]
;RTCC_main.c, 165 :: 		line ++;
0x4136	0x1C7F    ADDS	R7, R7, #1
0x4138	0xB23F    SXTH	R7, R7
;RTCC_main.c, 166 :: 		ycoo ++;
0x413A	0x1C5B    ADDS	R3, R3, #1
0x413C	0xB21B    SXTH	R3, R3
;RTCC_main.c, 167 :: 		pFilter ++;
0x413E	0x4D35    LDR	R5, [PC, #212]
0x4140	0x682C    LDR	R4, [R5, #0]
0x4142	0x1CA4    ADDS	R4, R4, #2
0x4144	0x602C    STR	R4, [R5, #0]
;RTCC_main.c, 158 :: 		for (i = 0; i < (Image->Height)/2 - 2; i ++){
0x4146	0x1C52    ADDS	R2, R2, #1
0x4148	0xB252    SXTB	R2, R2
;RTCC_main.c, 168 :: 		}
; i end address is: 8 (R2)
0x414A	0xE7AD    B	L_Draw_Picture12
L_Draw_Picture13:
;RTCC_main.c, 169 :: 		pFilter = &filter[(Image->Height)/2 - 2];
0x414C	0x1D8C    ADDS	R4, R1, #6
0x414E	0x8824    LDRH	R4, [R4, #0]
0x4150	0x0864    LSRS	R4, R4, #1
0x4152	0xB2A4    UXTH	R4, R4
0x4154	0x1EA4    SUBS	R4, R4, #2
0x4156	0xB2A4    UXTH	R4, R4
0x4158	0x0065    LSLS	R5, R4, #1
0x415A	0x4C2D    LDR	R4, [PC, #180]
0x415C	0x1965    ADDS	R5, R4, R5
0x415E	0x4C2D    LDR	R4, [PC, #180]
0x4160	0x6025    STR	R5, [R4, #0]
;RTCC_main.c, 170 :: 		for (i = 95; i >= 0; i --){
; i start address is: 8 (R2)
0x4162	0x225F    MOVS	R2, #95
0x4164	0xB252    SXTB	R2, R2
; xcoo end address is: 0 (R0)
; i end address is: 8 (R2)
; line end address is: 28 (R7)
; ycoo end address is: 12 (R3)
0x4166	0xF88D2004  STRB	R2, [SP, #4]
0x416A	0xB202    SXTH	R2, R0
0x416C	0xF99D0004  LDRSB	R0, [SP, #4]
L_Draw_Picture17:
; i start address is: 0 (R0)
; xcoo start address is: 8 (R2)
; Image start address is: 4 (R1)
; Image end address is: 4 (R1)
; line start address is: 28 (R7)
; xcoo start address is: 8 (R2)
; xcoo end address is: 8 (R2)
; ycoo start address is: 12 (R3)
0x4170	0x2800    CMP	R0, #0
0x4172	0xDB49    BLT	L_Draw_Picture18
; Image end address is: 4 (R1)
; xcoo end address is: 8 (R2)
;RTCC_main.c, 171 :: 		temp = line + table[i];
; xcoo start address is: 8 (R2)
; Image start address is: 4 (R1)
0x4174	0x0045    LSLS	R5, R0, #1
0x4176	0x4C28    LDR	R4, [PC, #160]
0x4178	0x1964    ADDS	R4, R4, R5
0x417A	0x8824    LDRH	R4, [R4, #0]
0x417C	0x193E    ADDS	R6, R7, R4
0x417E	0xF8AD6018  STRH	R6, [SP, #24]
;RTCC_main.c, 172 :: 		if (temp > (signed int)(Image->ImageHeight - 1))
0x4182	0xF2010408  ADDW	R4, R1, #8
0x4186	0x8824    LDRH	R4, [R4, #0]
0x4188	0x1E64    SUBS	R4, R4, #1
0x418A	0xB225    SXTH	R5, R4
0x418C	0xB234    SXTH	R4, R6
0x418E	0x42AC    CMP	R4, R5
0x4190	0xDD09    BLE	L_Draw_Picture20
;RTCC_main.c, 173 :: 		temp = temp - Image->ImageHeight - 1;
0x4192	0xF2010408  ADDW	R4, R1, #8
0x4196	0x8825    LDRH	R5, [R4, #0]
0x4198	0xF9BD4018  LDRSH	R4, [SP, #24]
0x419C	0x1B64    SUB	R4, R4, R5
0x419E	0xB2A4    UXTH	R4, R4
0x41A0	0x1E64    SUBS	R4, R4, #1
0x41A2	0xF8AD4018  STRH	R4, [SP, #24]
L_Draw_Picture20:
;RTCC_main.c, 174 :: 		if (temp < 0)
0x41A6	0xF9BD4018  LDRSH	R4, [SP, #24]
0x41AA	0x2C00    CMP	R4, #0
0x41AC	0xDA09    BGE	L_Draw_Picture21
;RTCC_main.c, 175 :: 		temp = Image->ImageHeight - 1 + temp;
0x41AE	0xF2010408  ADDW	R4, R1, #8
0x41B2	0x8824    LDRH	R4, [R4, #0]
0x41B4	0x1E65    SUBS	R5, R4, #1
0x41B6	0xB2AD    UXTH	R5, R5
0x41B8	0xF9BD4018  LDRSH	R4, [SP, #24]
0x41BC	0x192C    ADDS	R4, R5, R4
0x41BE	0xF8AD4018  STRH	R4, [SP, #24]
L_Draw_Picture21:
;RTCC_main.c, 176 :: 		DrawPictureLine(Image, temp, xcoo, ycoo);
0x41C2	0xF8AD3004  STRH	R3, [SP, #4]
0x41C6	0xF8AD2008  STRH	R2, [SP, #8]
0x41CA	0xF8AD700C  STRH	R7, [SP, #12]
0x41CE	0x9104    STR	R1, [SP, #16]
0x41D0	0xF88D0014  STRB	R0, [SP, #20]
0x41D4	0x4608    MOV	R0, R1
0x41D6	0xF9BD1018  LDRSH	R1, [SP, #24]
0x41DA	0xF7FEF817  BL	_DrawPictureLine+0
0x41DE	0xF99D0014  LDRSB	R0, [SP, #20]
0x41E2	0x9904    LDR	R1, [SP, #16]
0x41E4	0xF9BD700C  LDRSH	R7, [SP, #12]
0x41E8	0xF9BD2008  LDRSH	R2, [SP, #8]
0x41EC	0xF9BD3004  LDRSH	R3, [SP, #4]
;RTCC_main.c, 177 :: 		line ++;
0x41F0	0x1C7C    ADDS	R4, R7, #1
; line end address is: 28 (R7)
; line start address is: 24 (R6)
0x41F2	0xB226    SXTH	R6, R4
;RTCC_main.c, 178 :: 		ycoo ++;
0x41F4	0x1C5B    ADDS	R3, R3, #1
0x41F6	0xB21B    SXTH	R3, R3
;RTCC_main.c, 179 :: 		pFilter --;
0x41F8	0x4D06    LDR	R5, [PC, #24]
0x41FA	0x682C    LDR	R4, [R5, #0]
0x41FC	0x1EA4    SUBS	R4, R4, #2
0x41FE	0x602C    STR	R4, [R5, #0]
;RTCC_main.c, 170 :: 		for (i = 95; i >= 0; i --){
0x4200	0x1E40    SUBS	R0, R0, #1
0x4202	0xB240    SXTB	R0, R0
;RTCC_main.c, 180 :: 		}
; Image end address is: 4 (R1)
; xcoo end address is: 8 (R2)
; line end address is: 24 (R6)
; ycoo end address is: 12 (R3)
; i end address is: 0 (R0)
0x4204	0xB237    SXTH	R7, R6
0x4206	0xE7B3    B	L_Draw_Picture17
L_Draw_Picture18:
;RTCC_main.c, 181 :: 		}
L_end_Draw_Picture:
0x4208	0xF8DDE000  LDR	LR, [SP, #0]
0x420C	0xB007    ADD	SP, SP, #28
0x420E	0x4770    BX	LR
0x4210	0x88A80001  	_filter+0
0x4214	0x27982000  	_pFilter+0
0x4218	0x89680001  	_table+0
; end of _Draw_Picture
_DrawPictureLine:
;RTCC_main.c, 129 :: 		void DrawPictureLine(TRoller *Image, int line, int xcoo, int ycoo){
; ycoo start address is: 12 (R3)
; xcoo start address is: 8 (R2)
; line start address is: 4 (R1)
; Image start address is: 0 (R0)
0x220C	0xB083    SUB	SP, SP, #12
0x220E	0xF8CDE000  STR	LR, [SP, #0]
; ycoo end address is: 12 (R3)
; xcoo end address is: 8 (R2)
; line end address is: 4 (R1)
; Image end address is: 0 (R0)
; Image start address is: 0 (R0)
; line start address is: 4 (R1)
; xcoo start address is: 8 (R2)
; ycoo start address is: 12 (R3)
;RTCC_main.c, 134 :: 		TFT_CS = 0;
0x2212	0x2500    MOVS	R5, #0
0x2214	0xB26D    SXTB	R5, R5
0x2216	0x4C1F    LDR	R4, [PC, #124]
0x2218	0x6025    STR	R5, [R4, #0]
;RTCC_main.c, 135 :: 		count = (Image->Width * 2);
0x221A	0x1D04    ADDS	R4, R0, #4
0x221C	0x8827    LDRH	R7, [R4, #0]
0x221E	0x007C    LSLS	R4, R7, #1
0x2220	0xB2A4    UXTH	R4, R4
0x2222	0x9401    STR	R4, [SP, #4]
;RTCC_main.c, 136 :: 		ptr = Image->Picture_Name + 6 + (unsigned long)line * count;
0x2224	0xF200040C  ADDW	R4, R0, #12
; Image end address is: 0 (R0)
0x2228	0x6824    LDR	R4, [R4, #0]
0x222A	0x1DA6    ADDS	R6, R4, #6
0x222C	0xB20D    SXTH	R5, R1
; line end address is: 4 (R1)
0x222E	0x9C01    LDR	R4, [SP, #4]
0x2230	0x436C    MULS	R4, R5, R4
0x2232	0x1934    ADDS	R4, R6, R4
0x2234	0x9402    STR	R4, [SP, #8]
;RTCC_main.c, 137 :: 		TFT_SSD1963_Set_Address_Ptr(xcoo, ycoo, xcoo + Image->Width - 1, ycoo);
0x2236	0x19D4    ADDS	R4, R2, R7
0x2238	0xB2A4    UXTH	R4, R4
0x223A	0x1E64    SUBS	R4, R4, #1
0x223C	0xB299    UXTH	R1, R3
0x223E	0xB29B    UXTH	R3, R3
0x2240	0xB290    UXTH	R0, R2
; ycoo end address is: 12 (R3)
0x2242	0xB2A2    UXTH	R2, R4
; xcoo end address is: 8 (R2)
0x2244	0x4C14    LDR	R4, [PC, #80]
0x2246	0x6824    LDR	R4, [R4, #0]
0x2248	0x47A0    BLX	R4
;RTCC_main.c, 138 :: 		while(count>0){
L_DrawPictureLine10:
0x224A	0x9C01    LDR	R4, [SP, #4]
0x224C	0x2C00    CMP	R4, #0
0x224E	0xDD18    BLE	L_DrawPictureLine11
;RTCC_main.c, 139 :: 		color = (*ptr++);
0x2250	0x9C02    LDR	R4, [SP, #8]
0x2252	0x7824    LDRB	R4, [R4, #0]
; color start address is: 0 (R0)
0x2254	0xB2E0    UXTB	R0, R4
0x2256	0x9C02    LDR	R4, [SP, #8]
0x2258	0x1C66    ADDS	R6, R4, #1
;RTCC_main.c, 140 :: 		color += (*ptr++) << 8;
0x225A	0x7834    LDRB	R4, [R6, #0]
0x225C	0x0224    LSLS	R4, R4, #8
0x225E	0xB2A4    UXTH	R4, R4
0x2260	0x1905    ADDS	R5, R0, R4
0x2262	0xB2AD    UXTH	R5, R5
; color end address is: 0 (R0)
0x2264	0x1C74    ADDS	R4, R6, #1
0x2266	0x9402    STR	R4, [SP, #8]
;RTCC_main.c, 141 :: 		TFT_Write_Data_Ptr(color & *pFilter);
0x2268	0x4C0C    LDR	R4, [PC, #48]
0x226A	0x6824    LDR	R4, [R4, #0]
0x226C	0x8824    LDRH	R4, [R4, #0]
0x226E	0xEA050404  AND	R4, R5, R4, LSL #0
0x2272	0xB2A0    UXTH	R0, R4
0x2274	0x4C0A    LDR	R4, [PC, #40]
0x2276	0x6824    LDR	R4, [R4, #0]
0x2278	0x47A0    BLX	R4
;RTCC_main.c, 142 :: 		count = count-2;
0x227A	0x9C01    LDR	R4, [SP, #4]
0x227C	0x1EA4    SUBS	R4, R4, #2
0x227E	0x9401    STR	R4, [SP, #4]
;RTCC_main.c, 143 :: 		}
0x2280	0xE7E3    B	L_DrawPictureLine10
L_DrawPictureLine11:
;RTCC_main.c, 144 :: 		TFT_CS = 1;
0x2282	0x2501    MOVS	R5, #1
0x2284	0xB26D    SXTB	R5, R5
0x2286	0x4C03    LDR	R4, [PC, #12]
0x2288	0x6025    STR	R5, [R4, #0]
;RTCC_main.c, 145 :: 		}
L_end_DrawPictureLine:
0x228A	0xF8DDE000  LDR	LR, [SP, #0]
0x228E	0xB003    ADD	SP, SP, #12
0x2290	0x4770    BX	LR
0x2292	0xBF00    NOP
0x2294	0x82B44242  	TFT_CS+0
0x2298	0x045C2000  	_TFT_SSD1963_Set_Address_Ptr+0
0x229C	0x27982000  	_pFilter+0
0x22A0	0x04602000  	_TFT_Write_Data_Ptr+0
; end of _DrawPictureLine
_MyBoxOnPress:
;RTCC_main.c, 58 :: 		void MyBoxOnPress(TRoller *Roller){
; Roller start address is: 0 (R0)
0x4364	0xB085    SUB	SP, SP, #20
0x4366	0xF8CDE000  STR	LR, [SP, #0]
; Roller end address is: 0 (R0)
; Roller start address is: 0 (R0)
;RTCC_main.c, 62 :: 		if (Roll_Flag == 0){
0x436A	0x4937    LDR	R1, [PC, #220]
0x436C	0x7809    LDRB	R1, [R1, #0]
0x436E	0xB951    CBNZ	R1, L_MyBoxOnPress0
; Roller end address is: 0 (R0)
;RTCC_main.c, 63 :: 		Roll_Flag = 1;
0x4370	0x2201    MOVS	R2, #1
0x4372	0x4935    LDR	R1, [PC, #212]
0x4374	0x700A    STRB	R2, [R1, #0]
;RTCC_main.c, 64 :: 		OldYcoo = Ycoord;
0x4376	0x4935    LDR	R1, [PC, #212]
0x4378	0x880A    LDRH	R2, [R1, #0]
0x437A	0x4935    LDR	R1, [PC, #212]
0x437C	0x800A    STRH	R2, [R1, #0]
;RTCC_main.c, 65 :: 		OldDelta = 0;
0x437E	0x2200    MOVS	R2, #0
0x4380	0x4934    LDR	R1, [PC, #208]
0x4382	0x800A    STRH	R2, [R1, #0]
;RTCC_main.c, 66 :: 		return;
0x4384	0xE05B    B	L_end_MyBoxOnPress
;RTCC_main.c, 67 :: 		}
L_MyBoxOnPress0:
;RTCC_main.c, 69 :: 		delta = Ycoord - OldYcoo;
; Roller start address is: 0 (R0)
0x4386	0x4932    LDR	R1, [PC, #200]
0x4388	0x880A    LDRH	R2, [R1, #0]
0x438A	0x4930    LDR	R1, [PC, #192]
0x438C	0x8809    LDRH	R1, [R1, #0]
0x438E	0x1A89    SUB	R1, R1, R2
; delta start address is: 12 (R3)
0x4390	0xB20B    SXTH	R3, R1
;RTCC_main.c, 70 :: 		if (delta > 0){
0x4392	0xB209    SXTH	R1, R1
0x4394	0x2900    CMP	R1, #0
0x4396	0xDD02    BLE	L_MyBoxOnPress1
;RTCC_main.c, 71 :: 		dir = 0;
0x4398	0x2100    MOVS	R1, #0
0x439A	0xF88D1010  STRB	R1, [SP, #16]
;RTCC_main.c, 72 :: 		}
L_MyBoxOnPress1:
;RTCC_main.c, 73 :: 		if (delta < 0){
0x439E	0x2B00    CMP	R3, #0
0x43A0	0xDA05    BGE	L__MyBoxOnPress79
;RTCC_main.c, 74 :: 		dir = 1;
0x43A2	0x2101    MOVS	R1, #1
0x43A4	0xF88D1010  STRB	R1, [SP, #16]
;RTCC_main.c, 75 :: 		delta = - delta;
0x43A8	0x425B    RSBS	R3, R3, #0
0x43AA	0xB21B    SXTH	R3, R3
; delta end address is: 12 (R3)
;RTCC_main.c, 76 :: 		}
0x43AC	0xE7FF    B	L_MyBoxOnPress2
L__MyBoxOnPress79:
;RTCC_main.c, 73 :: 		if (delta < 0){
;RTCC_main.c, 76 :: 		}
L_MyBoxOnPress2:
;RTCC_main.c, 78 :: 		if (delta < 4){
; delta start address is: 12 (R3)
0x43AE	0x2B04    CMP	R3, #4
0x43B0	0xDA02    BGE	L_MyBoxOnPress3
; Roller end address is: 0 (R0)
;RTCC_main.c, 79 :: 		OldDelta = delta;
0x43B2	0x4928    LDR	R1, [PC, #160]
0x43B4	0x800B    STRH	R3, [R1, #0]
; delta end address is: 12 (R3)
;RTCC_main.c, 80 :: 		return;
0x43B6	0xE042    B	L_end_MyBoxOnPress
;RTCC_main.c, 81 :: 		}
L_MyBoxOnPress3:
;RTCC_main.c, 83 :: 		step = 2;
; delta start address is: 12 (R3)
; step start address is: 8 (R2)
; Roller start address is: 0 (R0)
0x43B8	0x2202    MOVS	R2, #2
;RTCC_main.c, 85 :: 		if ((delta - OldDelta) > 5)
0x43BA	0x4926    LDR	R1, [PC, #152]
0x43BC	0x8809    LDRH	R1, [R1, #0]
0x43BE	0x1A59    SUB	R1, R3, R1
0x43C0	0xB289    UXTH	R1, R1
0x43C2	0x2905    CMP	R1, #5
0x43C4	0xD906    BLS	L_MyBoxOnPress4
;RTCC_main.c, 86 :: 		delta += OldDelta + 5;
0x43C6	0x4923    LDR	R1, [PC, #140]
0x43C8	0x8809    LDRH	R1, [R1, #0]
0x43CA	0x1D49    ADDS	R1, R1, #5
0x43CC	0xB289    UXTH	R1, R1
0x43CE	0x185B    ADDS	R3, R3, R1
0x43D0	0xB21B    SXTH	R3, R3
0x43D2	0xE003    B	L_MyBoxOnPress5
L_MyBoxOnPress4:
;RTCC_main.c, 88 :: 		delta = delta + OldDelta;
0x43D4	0x491F    LDR	R1, [PC, #124]
0x43D6	0x8809    LDRH	R1, [R1, #0]
0x43D8	0x185B    ADDS	R3, R3, R1
0x43DA	0xB21B    SXTH	R3, R3
; delta end address is: 12 (R3)
L_MyBoxOnPress5:
;RTCC_main.c, 90 :: 		if (delta > 25){
; delta start address is: 12 (R3)
0x43DC	0x2B19    CMP	R3, #25
0x43DE	0xDD0A    BLE	L__MyBoxOnPress81
;RTCC_main.c, 91 :: 		step = 3;
0x43E0	0x2203    MOVS	R2, #3
;RTCC_main.c, 92 :: 		if (delta > 40)
0x43E2	0x2B28    CMP	R3, #40
0x43E4	0xDD02    BLE	L__MyBoxOnPress80
; step end address is: 8 (R2)
;RTCC_main.c, 93 :: 		step = 4;
; step start address is: 4 (R1)
0x43E6	0x2104    MOVS	R1, #4
; step end address is: 4 (R1)
0x43E8	0xB2CA    UXTB	R2, R1
0x43EA	0xE7FF    B	L_MyBoxOnPress7
L__MyBoxOnPress80:
;RTCC_main.c, 92 :: 		if (delta > 40)
;RTCC_main.c, 93 :: 		step = 4;
L_MyBoxOnPress7:
;RTCC_main.c, 94 :: 		delta = 3 * delta;
; step start address is: 8 (R2)
0x43EC	0x2103    MOVS	R1, #3
0x43EE	0xB209    SXTH	R1, R1
0x43F0	0x434B    MULS	R3, R1, R3
0x43F2	0xB21B    SXTH	R3, R3
; step end address is: 8 (R2)
; delta end address is: 12 (R3)
;RTCC_main.c, 95 :: 		}
0x43F4	0xE7FF    B	L_MyBoxOnPress6
L__MyBoxOnPress81:
;RTCC_main.c, 90 :: 		if (delta > 25){
;RTCC_main.c, 95 :: 		}
L_MyBoxOnPress6:
;RTCC_main.c, 96 :: 		delta = delta / 2;
; delta start address is: 12 (R3)
; step start address is: 8 (R2)
0x43F6	0x105B    ASRS	R3, R3, #1
0x43F8	0xB21B    SXTH	R3, R3
; Roller end address is: 0 (R0)
; step end address is: 8 (R2)
; delta end address is: 12 (R3)
0x43FA	0xF88D2004  STRB	R2, [SP, #4]
0x43FE	0x4602    MOV	R2, R0
0x4400	0xF89D0004  LDRB	R0, [SP, #4]
;RTCC_main.c, 98 :: 		while (delta > 0){
L_MyBoxOnPress8:
; delta start address is: 12 (R3)
; Roller start address is: 8 (R2)
; step start address is: 0 (R0)
; step start address is: 0 (R0)
; step end address is: 0 (R0)
; Roller start address is: 8 (R2)
; Roller end address is: 8 (R2)
0x4404	0x2B00    CMP	R3, #0
0x4406	0xDD13    BLE	L_MyBoxOnPress9
; step end address is: 0 (R0)
; Roller end address is: 8 (R2)
;RTCC_main.c, 99 :: 		Roll_Roller(Roller, dir, step);
; Roller start address is: 8 (R2)
; step start address is: 0 (R0)
0x4408	0x9201    STR	R2, [SP, #4]
0x440A	0xF88D0008  STRB	R0, [SP, #8]
0x440E	0xF8AD300A  STRH	R3, [SP, #10]
0x4412	0x9203    STR	R2, [SP, #12]
0x4414	0xF89D1010  LDRB	R1, [SP, #16]
0x4418	0xB2C2    UXTB	R2, R0
0x441A	0x9803    LDR	R0, [SP, #12]
0x441C	0xF7FDFF42  BL	_Roll_Roller+0
0x4420	0xF9BD300A  LDRSH	R3, [SP, #10]
0x4424	0xF89D0008  LDRB	R0, [SP, #8]
0x4428	0x9A01    LDR	R2, [SP, #4]
;RTCC_main.c, 100 :: 		delta = delta - step;
0x442A	0x1A1B    SUB	R3, R3, R0
0x442C	0xB21B    SXTH	R3, R3
;RTCC_main.c, 101 :: 		}
; step end address is: 0 (R0)
; Roller end address is: 8 (R2)
; delta end address is: 12 (R3)
0x442E	0xE7E9    B	L_MyBoxOnPress8
L_MyBoxOnPress9:
;RTCC_main.c, 103 :: 		OldYcoo = Ycoord;
0x4430	0x4906    LDR	R1, [PC, #24]
0x4432	0x880A    LDRH	R2, [R1, #0]
0x4434	0x4906    LDR	R1, [PC, #24]
0x4436	0x800A    STRH	R2, [R1, #0]
;RTCC_main.c, 104 :: 		OldDelta = 0;
0x4438	0x2200    MOVS	R2, #0
0x443A	0x4906    LDR	R1, [PC, #24]
0x443C	0x800A    STRH	R2, [R1, #0]
;RTCC_main.c, 105 :: 		}
L_end_MyBoxOnPress:
0x443E	0xF8DDE000  LDR	LR, [SP, #0]
0x4442	0xB005    ADD	SP, SP, #20
0x4444	0x4770    BX	LR
0x4446	0xBF00    NOP
0x4448	0x26E72000  	_Roll_flag+0
0x444C	0x22882000  	_Ycoord+0
0x4450	0x26EE2000  	_OldYcoo+0
0x4454	0x279C2000  	_OldDelta+0
; end of _MyBoxOnPress
_Roll_Roller:
;RTCC_main.c, 214 :: 		void Roll_Roller(TRoller *Roller, char dir, char step){
; step start address is: 8 (R2)
; dir start address is: 4 (R1)
; Roller start address is: 0 (R0)
0x22A4	0xB081    SUB	SP, SP, #4
0x22A6	0xF8CDE000  STR	LR, [SP, #0]
; step end address is: 8 (R2)
; dir end address is: 4 (R1)
; Roller end address is: 0 (R0)
; Roller start address is: 0 (R0)
; dir start address is: 4 (R1)
; step start address is: 8 (R2)
;RTCC_main.c, 217 :: 		if (dir)
0x22AA	0xB131    CBZ	R1, L_Roll_Roller22
; dir end address is: 4 (R1)
;RTCC_main.c, 218 :: 		Roller->position += step;
0x22AC	0xF2000414  ADDW	R4, R0, #20
0x22B0	0xF9B43000  LDRSH	R3, [R4, #0]
0x22B4	0x189B    ADDS	R3, R3, R2
; step end address is: 8 (R2)
0x22B6	0x8023    STRH	R3, [R4, #0]
0x22B8	0xE005    B	L_Roll_Roller23
L_Roll_Roller22:
;RTCC_main.c, 220 :: 		Roller->position -= step;
; step start address is: 8 (R2)
0x22BA	0xF2000414  ADDW	R4, R0, #20
0x22BE	0xF9B43000  LDRSH	R3, [R4, #0]
0x22C2	0x1A9B    SUB	R3, R3, R2
; step end address is: 8 (R2)
0x22C4	0x8023    STRH	R3, [R4, #0]
L_Roll_Roller23:
;RTCC_main.c, 222 :: 		if (Roller->position > (signed int)Roller->ImageHeight - 1)
0x22C6	0xF2000314  ADDW	R3, R0, #20
0x22CA	0xF9B34000  LDRSH	R4, [R3, #0]
0x22CE	0xF2000308  ADDW	R3, R0, #8
0x22D2	0x881B    LDRH	R3, [R3, #0]
0x22D4	0xB21B    SXTH	R3, R3
0x22D6	0x1E5B    SUBS	R3, R3, #1
0x22D8	0xB21B    SXTH	R3, R3
0x22DA	0x429C    CMP	R4, R3
0x22DC	0xDD04    BLE	L_Roll_Roller24
;RTCC_main.c, 223 :: 		Roller->position = 0;
0x22DE	0xF2000414  ADDW	R4, R0, #20
0x22E2	0x2300    MOVS	R3, #0
0x22E4	0xB21B    SXTH	R3, R3
0x22E6	0x8023    STRH	R3, [R4, #0]
L_Roll_Roller24:
;RTCC_main.c, 224 :: 		if (Roller->position < 0)
0x22E8	0xF2000314  ADDW	R3, R0, #20
0x22EC	0xF9B33000  LDRSH	R3, [R3, #0]
0x22F0	0x2B00    CMP	R3, #0
0x22F2	0xDA06    BGE	L_Roll_Roller25
;RTCC_main.c, 225 :: 		Roller->position = Roller->ImageHeight - 1;
0x22F4	0xF2000414  ADDW	R4, R0, #20
0x22F8	0xF2000308  ADDW	R3, R0, #8
0x22FC	0x881B    LDRH	R3, [R3, #0]
0x22FE	0x1E5B    SUBS	R3, R3, #1
0x2300	0x8023    STRH	R3, [R4, #0]
L_Roll_Roller25:
;RTCC_main.c, 226 :: 		Draw_Picture(Roller, Roller->position - Roller->Height/2, Roller->Left, Roller->Top);
0x2302	0x1C83    ADDS	R3, R0, #2
0x2304	0x881B    LDRH	R3, [R3, #0]
0x2306	0xB21E    SXTH	R6, R3
0x2308	0x8803    LDRH	R3, [R0, #0]
0x230A	0xB21D    SXTH	R5, R3
0x230C	0xF2000314  ADDW	R3, R0, #20
0x2310	0xF9B34000  LDRSH	R4, [R3, #0]
0x2314	0x1D83    ADDS	R3, R0, #6
0x2316	0x881B    LDRH	R3, [R3, #0]
0x2318	0x085B    LSRS	R3, R3, #1
0x231A	0xB29B    UXTH	R3, R3
0x231C	0x1AE3    SUB	R3, R4, R3
0x231E	0xB22A    SXTH	R2, R5
0x2320	0xB219    SXTH	R1, R3
0x2322	0xB233    SXTH	R3, R6
; Roller end address is: 0 (R0)
0x2324	0xF001FEB4  BL	_Draw_Picture+0
;RTCC_main.c, 227 :: 		}
L_end_Roll_Roller:
0x2328	0xF8DDE000  LDR	LR, [SP, #0]
0x232C	0xB001    ADD	SP, SP, #4
0x232E	0x4770    BX	LR
; end of _Roll_Roller
_Box11OnPress:
;Ducati_logger_events_code.c, 184 :: 		void Box11OnPress() {
0xC528	0xB081    SUB	SP, SP, #4
0xC52A	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 185 :: 		HoursOnes();
0xC52E	0xF7FEFA75  BL	_HoursOnes+0
;Ducati_logger_events_code.c, 186 :: 		}
L_end_Box11OnPress:
0xC532	0xF8DDE000  LDR	LR, [SP, #0]
0xC536	0xB001    ADD	SP, SP, #4
0xC538	0x4770    BX	LR
; end of _Box11OnPress
_HoursOnes:
;RTCC_main.c, 380 :: 		void HoursOnes(){
0xAA1C	0xB081    SUB	SP, SP, #4
0xAA1E	0xF8CDE000  STR	LR, [SP, #0]
;RTCC_main.c, 382 :: 		if (Hour2Roll.active == 0){
0xAA22	0x482C    LDR	R0, [PC, #176]
0xAA24	0xF9B00000  LDRSH	R0, [R0, #0]
0xAA28	0x2800    CMP	R0, #0
0xAA2A	0xF0408047  BNE	L_HoursOnes40
;RTCC_main.c, 383 :: 		if (Hour1Roll.active == 1){
0xAA2E	0x482A    LDR	R0, [PC, #168]
0xAA30	0xF9B00000  LDRSH	R0, [R0, #0]
0xAA34	0x2801    CMP	R0, #1
0xAA36	0xD108    BNE	L_HoursOnes41
;RTCC_main.c, 384 :: 		Roller_Deactivate(&Hour1Roll, 111, 96);
0xAA38	0x2260    MOVS	R2, #96
0xAA3A	0x216F    MOVS	R1, #111
0xAA3C	0x4827    LDR	R0, [PC, #156]
0xAA3E	0xF7FAF9A9  BL	_Roller_Deactivate+0
;RTCC_main.c, 385 :: 		Hour1Roll.active = 0;
0xAA42	0x2100    MOVS	R1, #0
0xAA44	0xB209    SXTH	R1, R1
0xAA46	0x4824    LDR	R0, [PC, #144]
0xAA48	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 386 :: 		}
L_HoursOnes41:
;RTCC_main.c, 387 :: 		if (Minute1Roll.active == 1){
0xAA4A	0x4825    LDR	R0, [PC, #148]
0xAA4C	0xF9B00000  LDRSH	R0, [R0, #0]
0xAA50	0x2801    CMP	R0, #1
0xAA52	0xD108    BNE	L_HoursOnes42
;RTCC_main.c, 388 :: 		Roller_Deactivate(&Minute1Roll, 215, 96);
0xAA54	0x2260    MOVS	R2, #96
0xAA56	0x21D7    MOVS	R1, #215
0xAA58	0x4822    LDR	R0, [PC, #136]
0xAA5A	0xF7FAF99B  BL	_Roller_Deactivate+0
;RTCC_main.c, 389 :: 		Minute1Roll.active = 0;
0xAA5E	0x2100    MOVS	R1, #0
0xAA60	0xB209    SXTH	R1, R1
0xAA62	0x481F    LDR	R0, [PC, #124]
0xAA64	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 390 :: 		}
L_HoursOnes42:
;RTCC_main.c, 391 :: 		if (Minute2Roll.active == 1){
0xAA66	0x4820    LDR	R0, [PC, #128]
0xAA68	0xF9B00000  LDRSH	R0, [R0, #0]
0xAA6C	0x2801    CMP	R0, #1
0xAA6E	0xD108    BNE	L_HoursOnes43
;RTCC_main.c, 392 :: 		Roller_Deactivate(&Minute2Roll, 253, 96);
0xAA70	0x2260    MOVS	R2, #96
0xAA72	0x21FD    MOVS	R1, #253
0xAA74	0x481D    LDR	R0, [PC, #116]
0xAA76	0xF7FAF98D  BL	_Roller_Deactivate+0
;RTCC_main.c, 393 :: 		Minute2Roll.active = 0;
0xAA7A	0x2100    MOVS	R1, #0
0xAA7C	0xB209    SXTH	R1, R1
0xAA7E	0x481A    LDR	R0, [PC, #104]
0xAA80	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 394 :: 		}
L_HoursOnes43:
;RTCC_main.c, 395 :: 		if (AmPm.active == 1){
0xAA82	0x481B    LDR	R0, [PC, #108]
0xAA84	0xF9B00000  LDRSH	R0, [R0, #0]
0xAA88	0x2801    CMP	R0, #1
0xAA8A	0xD109    BNE	L_HoursOnes44
;RTCC_main.c, 396 :: 		Roller_Deactivate(&AmPm, 307, 96);
0xAA8C	0x2260    MOVS	R2, #96
0xAA8E	0xF2401133  MOVW	R1, #307
0xAA92	0x4818    LDR	R0, [PC, #96]
0xAA94	0xF7FAF97E  BL	_Roller_Deactivate+0
;RTCC_main.c, 397 :: 		AmPm.active = 0;
0xAA98	0x2100    MOVS	R1, #0
0xAA9A	0xB209    SXTH	R1, R1
0xAA9C	0x4814    LDR	R0, [PC, #80]
0xAA9E	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 398 :: 		}
L_HoursOnes44:
;RTCC_main.c, 400 :: 		Draw_Picture(&Hour2Roll, Hour2Roll.position - 96, Hour2Roll.Left, Hour2Roll.Top);
0xAAA0	0x4815    LDR	R0, [PC, #84]
0xAAA2	0x8802    LDRH	R2, [R0, #0]
0xAAA4	0x4815    LDR	R0, [PC, #84]
0xAAA6	0x8801    LDRH	R1, [R0, #0]
0xAAA8	0x4815    LDR	R0, [PC, #84]
0xAAAA	0xF9B00000  LDRSH	R0, [R0, #0]
0xAAAE	0x3860    SUBS	R0, #96
0xAAB0	0xB213    SXTH	R3, R2
0xAAB2	0xB20A    SXTH	R2, R1
0xAAB4	0xB201    SXTH	R1, R0
0xAAB6	0x4811    LDR	R0, [PC, #68]
0xAAB8	0xF7F9FAEA  BL	_Draw_Picture+0
;RTCC_main.c, 401 :: 		}
L_HoursOnes40:
;RTCC_main.c, 403 :: 		MyBoxOnPress(&Hour2Roll);
0xAABC	0x480F    LDR	R0, [PC, #60]
0xAABE	0xF7F9FC51  BL	_MyBoxOnPress+0
;RTCC_main.c, 404 :: 		Hour2Roll.active = 1;
0xAAC2	0x2101    MOVS	R1, #1
0xAAC4	0xB209    SXTH	R1, R1
0xAAC6	0x4803    LDR	R0, [PC, #12]
0xAAC8	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 405 :: 		}
L_end_HoursOnes:
0xAACA	0xF8DDE000  LDR	LR, [SP, #0]
0xAACE	0xB001    ADD	SP, SP, #4
0xAAD0	0x4770    BX	LR
0xAAD2	0xBF00    NOP
0xAAD4	0x274A2000  	_Hour2Roll+18
0xAAD8	0x27322000  	_Hour1Roll+18
0xAADC	0x27202000  	_Hour1Roll+0
0xAAE0	0x27622000  	_Minute1Roll+18
0xAAE4	0x27502000  	_Minute1Roll+0
0xAAE8	0x277A2000  	_Minute2Roll+18
0xAAEC	0x27682000  	_Minute2Roll+0
0xAAF0	0x27922000  	_AmPm+18
0xAAF4	0x27802000  	_AmPm+0
0xAAF8	0x273A2000  	_Hour2Roll+2
0xAAFC	0x27382000  	_Hour2Roll+0
0xAB00	0x274C2000  	_Hour2Roll+20
; end of _HoursOnes
_Box3OnPress:
;Ducati_logger_events_code.c, 188 :: 		void Box3OnPress() {
0xC514	0xB081    SUB	SP, SP, #4
0xC516	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 189 :: 		MinutesTens();
0xC51A	0xF7FEF9D3  BL	_MinutesTens+0
;Ducati_logger_events_code.c, 190 :: 		}
L_end_Box3OnPress:
0xC51E	0xF8DDE000  LDR	LR, [SP, #0]
0xC522	0xB001    ADD	SP, SP, #4
0xC524	0x4770    BX	LR
; end of _Box3OnPress
_MinutesTens:
;RTCC_main.c, 414 :: 		void MinutesTens(){
0xA8C4	0xB081    SUB	SP, SP, #4
0xA8C6	0xF8CDE000  STR	LR, [SP, #0]
;RTCC_main.c, 416 :: 		if (Minute1Roll.active == 0){
0xA8CA	0x482C    LDR	R0, [PC, #176]
0xA8CC	0xF9B00000  LDRSH	R0, [R0, #0]
0xA8D0	0x2800    CMP	R0, #0
0xA8D2	0xF0408047  BNE	L_MinutesTens45
;RTCC_main.c, 417 :: 		if (Hour1Roll.active == 1){
0xA8D6	0x482A    LDR	R0, [PC, #168]
0xA8D8	0xF9B00000  LDRSH	R0, [R0, #0]
0xA8DC	0x2801    CMP	R0, #1
0xA8DE	0xD108    BNE	L_MinutesTens46
;RTCC_main.c, 418 :: 		Roller_Deactivate(&Hour1Roll, 111, 96);
0xA8E0	0x2260    MOVS	R2, #96
0xA8E2	0x216F    MOVS	R1, #111
0xA8E4	0x4827    LDR	R0, [PC, #156]
0xA8E6	0xF7FAFA55  BL	_Roller_Deactivate+0
;RTCC_main.c, 419 :: 		Hour1Roll.active = 0;
0xA8EA	0x2100    MOVS	R1, #0
0xA8EC	0xB209    SXTH	R1, R1
0xA8EE	0x4824    LDR	R0, [PC, #144]
0xA8F0	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 420 :: 		}
L_MinutesTens46:
;RTCC_main.c, 421 :: 		if (Hour2Roll.active == 1){
0xA8F2	0x4825    LDR	R0, [PC, #148]
0xA8F4	0xF9B00000  LDRSH	R0, [R0, #0]
0xA8F8	0x2801    CMP	R0, #1
0xA8FA	0xD108    BNE	L_MinutesTens47
;RTCC_main.c, 422 :: 		Roller_Deactivate(&Hour2Roll, 149, 96);
0xA8FC	0x2260    MOVS	R2, #96
0xA8FE	0x2195    MOVS	R1, #149
0xA900	0x4822    LDR	R0, [PC, #136]
0xA902	0xF7FAFA47  BL	_Roller_Deactivate+0
;RTCC_main.c, 423 :: 		Hour2Roll.active = 0;
0xA906	0x2100    MOVS	R1, #0
0xA908	0xB209    SXTH	R1, R1
0xA90A	0x481F    LDR	R0, [PC, #124]
0xA90C	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 424 :: 		}
L_MinutesTens47:
;RTCC_main.c, 425 :: 		if (Minute2Roll.active == 1){
0xA90E	0x4820    LDR	R0, [PC, #128]
0xA910	0xF9B00000  LDRSH	R0, [R0, #0]
0xA914	0x2801    CMP	R0, #1
0xA916	0xD108    BNE	L_MinutesTens48
;RTCC_main.c, 426 :: 		Roller_Deactivate(&Minute2Roll, 253, 96);
0xA918	0x2260    MOVS	R2, #96
0xA91A	0x21FD    MOVS	R1, #253
0xA91C	0x481D    LDR	R0, [PC, #116]
0xA91E	0xF7FAFA39  BL	_Roller_Deactivate+0
;RTCC_main.c, 427 :: 		Minute2Roll.active = 0;
0xA922	0x2100    MOVS	R1, #0
0xA924	0xB209    SXTH	R1, R1
0xA926	0x481A    LDR	R0, [PC, #104]
0xA928	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 428 :: 		}
L_MinutesTens48:
;RTCC_main.c, 429 :: 		if (AmPm.active == 1){
0xA92A	0x481B    LDR	R0, [PC, #108]
0xA92C	0xF9B00000  LDRSH	R0, [R0, #0]
0xA930	0x2801    CMP	R0, #1
0xA932	0xD109    BNE	L_MinutesTens49
;RTCC_main.c, 430 :: 		Roller_Deactivate(&AmPm, 307, 96);
0xA934	0x2260    MOVS	R2, #96
0xA936	0xF2401133  MOVW	R1, #307
0xA93A	0x4818    LDR	R0, [PC, #96]
0xA93C	0xF7FAFA2A  BL	_Roller_Deactivate+0
;RTCC_main.c, 431 :: 		AmPm.active = 0;
0xA940	0x2100    MOVS	R1, #0
0xA942	0xB209    SXTH	R1, R1
0xA944	0x4814    LDR	R0, [PC, #80]
0xA946	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 432 :: 		}
L_MinutesTens49:
;RTCC_main.c, 434 :: 		Draw_Picture(&Minute1Roll, Minute1Roll.position - 95, Minute1Roll.Left, Minute1Roll.Top);
0xA948	0x4815    LDR	R0, [PC, #84]
0xA94A	0x8802    LDRH	R2, [R0, #0]
0xA94C	0x4815    LDR	R0, [PC, #84]
0xA94E	0x8801    LDRH	R1, [R0, #0]
0xA950	0x4815    LDR	R0, [PC, #84]
0xA952	0xF9B00000  LDRSH	R0, [R0, #0]
0xA956	0x385F    SUBS	R0, #95
0xA958	0xB213    SXTH	R3, R2
0xA95A	0xB20A    SXTH	R2, R1
0xA95C	0xB201    SXTH	R1, R0
0xA95E	0x4811    LDR	R0, [PC, #68]
0xA960	0xF7F9FB96  BL	_Draw_Picture+0
;RTCC_main.c, 435 :: 		}
L_MinutesTens45:
;RTCC_main.c, 437 :: 		MyBoxOnPress(&Minute1Roll);
0xA964	0x480F    LDR	R0, [PC, #60]
0xA966	0xF7F9FCFD  BL	_MyBoxOnPress+0
;RTCC_main.c, 438 :: 		Minute1Roll.active = 1;
0xA96A	0x2101    MOVS	R1, #1
0xA96C	0xB209    SXTH	R1, R1
0xA96E	0x4803    LDR	R0, [PC, #12]
0xA970	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 439 :: 		}
L_end_MinutesTens:
0xA972	0xF8DDE000  LDR	LR, [SP, #0]
0xA976	0xB001    ADD	SP, SP, #4
0xA978	0x4770    BX	LR
0xA97A	0xBF00    NOP
0xA97C	0x27622000  	_Minute1Roll+18
0xA980	0x27322000  	_Hour1Roll+18
0xA984	0x27202000  	_Hour1Roll+0
0xA988	0x274A2000  	_Hour2Roll+18
0xA98C	0x27382000  	_Hour2Roll+0
0xA990	0x277A2000  	_Minute2Roll+18
0xA994	0x27682000  	_Minute2Roll+0
0xA998	0x27922000  	_AmPm+18
0xA99C	0x27802000  	_AmPm+0
0xA9A0	0x27522000  	_Minute1Roll+2
0xA9A4	0x27502000  	_Minute1Roll+0
0xA9A8	0x27642000  	_Minute1Roll+20
; end of _MinutesTens
_Box4OnPress:
;Ducati_logger_events_code.c, 192 :: 		void Box4OnPress() {
0xBC28	0xB081    SUB	SP, SP, #4
0xBC2A	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 193 :: 		MinutesOnes();
0xBC2E	0xF7FFF9BB  BL	_MinutesOnes+0
;Ducati_logger_events_code.c, 194 :: 		}
L_end_Box4OnPress:
0xBC32	0xF8DDE000  LDR	LR, [SP, #0]
0xBC36	0xB001    ADD	SP, SP, #4
0xBC38	0x4770    BX	LR
; end of _Box4OnPress
_MinutesOnes:
;RTCC_main.c, 448 :: 		void MinutesOnes(){
0xAFA8	0xB081    SUB	SP, SP, #4
0xAFAA	0xF8CDE000  STR	LR, [SP, #0]
;RTCC_main.c, 450 :: 		if (Minute2Roll.active == 0){
0xAFAE	0x482C    LDR	R0, [PC, #176]
0xAFB0	0xF9B00000  LDRSH	R0, [R0, #0]
0xAFB4	0x2800    CMP	R0, #0
0xAFB6	0xF0408047  BNE	L_MinutesOnes50
;RTCC_main.c, 451 :: 		if (Hour1Roll.active == 1){
0xAFBA	0x482A    LDR	R0, [PC, #168]
0xAFBC	0xF9B00000  LDRSH	R0, [R0, #0]
0xAFC0	0x2801    CMP	R0, #1
0xAFC2	0xD108    BNE	L_MinutesOnes51
;RTCC_main.c, 452 :: 		Roller_Deactivate(&Hour1Roll, 111, 96);
0xAFC4	0x2260    MOVS	R2, #96
0xAFC6	0x216F    MOVS	R1, #111
0xAFC8	0x4827    LDR	R0, [PC, #156]
0xAFCA	0xF7F9FEE3  BL	_Roller_Deactivate+0
;RTCC_main.c, 453 :: 		Hour1Roll.active = 0;
0xAFCE	0x2100    MOVS	R1, #0
0xAFD0	0xB209    SXTH	R1, R1
0xAFD2	0x4824    LDR	R0, [PC, #144]
0xAFD4	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 454 :: 		}
L_MinutesOnes51:
;RTCC_main.c, 455 :: 		if (Hour2Roll.active == 1){
0xAFD6	0x4825    LDR	R0, [PC, #148]
0xAFD8	0xF9B00000  LDRSH	R0, [R0, #0]
0xAFDC	0x2801    CMP	R0, #1
0xAFDE	0xD108    BNE	L_MinutesOnes52
;RTCC_main.c, 456 :: 		Roller_Deactivate(&Hour2Roll, 149, 96);
0xAFE0	0x2260    MOVS	R2, #96
0xAFE2	0x2195    MOVS	R1, #149
0xAFE4	0x4822    LDR	R0, [PC, #136]
0xAFE6	0xF7F9FED5  BL	_Roller_Deactivate+0
;RTCC_main.c, 457 :: 		Hour2Roll.active = 0;
0xAFEA	0x2100    MOVS	R1, #0
0xAFEC	0xB209    SXTH	R1, R1
0xAFEE	0x481F    LDR	R0, [PC, #124]
0xAFF0	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 458 :: 		}
L_MinutesOnes52:
;RTCC_main.c, 459 :: 		if (Minute1Roll.active == 1){
0xAFF2	0x4820    LDR	R0, [PC, #128]
0xAFF4	0xF9B00000  LDRSH	R0, [R0, #0]
0xAFF8	0x2801    CMP	R0, #1
0xAFFA	0xD108    BNE	L_MinutesOnes53
;RTCC_main.c, 460 :: 		Roller_Deactivate(&Minute1Roll, 215, 96);
0xAFFC	0x2260    MOVS	R2, #96
0xAFFE	0x21D7    MOVS	R1, #215
0xB000	0x481D    LDR	R0, [PC, #116]
0xB002	0xF7F9FEC7  BL	_Roller_Deactivate+0
;RTCC_main.c, 461 :: 		Minute1Roll.active = 0;
0xB006	0x2100    MOVS	R1, #0
0xB008	0xB209    SXTH	R1, R1
0xB00A	0x481A    LDR	R0, [PC, #104]
0xB00C	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 462 :: 		}
L_MinutesOnes53:
;RTCC_main.c, 463 :: 		if (AmPm.active == 1){
0xB00E	0x481B    LDR	R0, [PC, #108]
0xB010	0xF9B00000  LDRSH	R0, [R0, #0]
0xB014	0x2801    CMP	R0, #1
0xB016	0xD109    BNE	L_MinutesOnes54
;RTCC_main.c, 464 :: 		Roller_Deactivate(&AmPm, 307, 96);
0xB018	0x2260    MOVS	R2, #96
0xB01A	0xF2401133  MOVW	R1, #307
0xB01E	0x4818    LDR	R0, [PC, #96]
0xB020	0xF7F9FEB8  BL	_Roller_Deactivate+0
;RTCC_main.c, 465 :: 		AmPm.active = 0;
0xB024	0x2100    MOVS	R1, #0
0xB026	0xB209    SXTH	R1, R1
0xB028	0x4814    LDR	R0, [PC, #80]
0xB02A	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 466 :: 		}
L_MinutesOnes54:
;RTCC_main.c, 468 :: 		Draw_Picture(&Minute2Roll, Minute2Roll.position - 95, Minute2Roll.Left, Minute2Roll.Top);
0xB02C	0x4815    LDR	R0, [PC, #84]
0xB02E	0x8802    LDRH	R2, [R0, #0]
0xB030	0x4815    LDR	R0, [PC, #84]
0xB032	0x8801    LDRH	R1, [R0, #0]
0xB034	0x4815    LDR	R0, [PC, #84]
0xB036	0xF9B00000  LDRSH	R0, [R0, #0]
0xB03A	0x385F    SUBS	R0, #95
0xB03C	0xB213    SXTH	R3, R2
0xB03E	0xB20A    SXTH	R2, R1
0xB040	0xB201    SXTH	R1, R0
0xB042	0x4811    LDR	R0, [PC, #68]
0xB044	0xF7F9F824  BL	_Draw_Picture+0
;RTCC_main.c, 469 :: 		}
L_MinutesOnes50:
;RTCC_main.c, 471 :: 		MyBoxOnPress(&Minute2Roll);
0xB048	0x480F    LDR	R0, [PC, #60]
0xB04A	0xF7F9F98B  BL	_MyBoxOnPress+0
;RTCC_main.c, 472 :: 		Minute2Roll.active = 1;
0xB04E	0x2101    MOVS	R1, #1
0xB050	0xB209    SXTH	R1, R1
0xB052	0x4803    LDR	R0, [PC, #12]
0xB054	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 473 :: 		}
L_end_MinutesOnes:
0xB056	0xF8DDE000  LDR	LR, [SP, #0]
0xB05A	0xB001    ADD	SP, SP, #4
0xB05C	0x4770    BX	LR
0xB05E	0xBF00    NOP
0xB060	0x277A2000  	_Minute2Roll+18
0xB064	0x27322000  	_Hour1Roll+18
0xB068	0x27202000  	_Hour1Roll+0
0xB06C	0x274A2000  	_Hour2Roll+18
0xB070	0x27382000  	_Hour2Roll+0
0xB074	0x27622000  	_Minute1Roll+18
0xB078	0x27502000  	_Minute1Roll+0
0xB07C	0x27922000  	_AmPm+18
0xB080	0x27802000  	_AmPm+0
0xB084	0x276A2000  	_Minute2Roll+2
0xB088	0x27682000  	_Minute2Roll+0
0xB08C	0x277C2000  	_Minute2Roll+20
; end of _MinutesOnes
_Box5OnPress:
;Ducati_logger_events_code.c, 196 :: 		void Box5OnPress() {
0xBC14	0xB081    SUB	SP, SP, #4
0xBC16	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 197 :: 		AmPmRun();
0xBC1A	0xF7FFF827  BL	_AmPmRun+0
;Ducati_logger_events_code.c, 198 :: 		}
L_end_Box5OnPress:
0xBC1E	0xF8DDE000  LDR	LR, [SP, #0]
0xBC22	0xB001    ADD	SP, SP, #4
0xBC24	0x4770    BX	LR
; end of _Box5OnPress
_AmPmRun:
;RTCC_main.c, 482 :: 		void AmPmRun(){
0xAC6C	0xB081    SUB	SP, SP, #4
0xAC6E	0xF8CDE000  STR	LR, [SP, #0]
;RTCC_main.c, 484 :: 		if (AmPm.active == 0){
0xAC72	0x482B    LDR	R0, [PC, #172]
0xAC74	0xF9B00000  LDRSH	R0, [R0, #0]
0xAC78	0x2800    CMP	R0, #0
0xAC7A	0xD145    BNE	L_AmPmRun55
;RTCC_main.c, 485 :: 		if (Hour1Roll.active == 1){
0xAC7C	0x4829    LDR	R0, [PC, #164]
0xAC7E	0xF9B00000  LDRSH	R0, [R0, #0]
0xAC82	0x2801    CMP	R0, #1
0xAC84	0xD108    BNE	L_AmPmRun56
;RTCC_main.c, 486 :: 		Roller_Deactivate(&Hour1Roll, 111, 96);
0xAC86	0x2260    MOVS	R2, #96
0xAC88	0x216F    MOVS	R1, #111
0xAC8A	0x4827    LDR	R0, [PC, #156]
0xAC8C	0xF7FAF882  BL	_Roller_Deactivate+0
;RTCC_main.c, 487 :: 		Hour1Roll.active = 0;
0xAC90	0x2100    MOVS	R1, #0
0xAC92	0xB209    SXTH	R1, R1
0xAC94	0x4823    LDR	R0, [PC, #140]
0xAC96	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 488 :: 		}
L_AmPmRun56:
;RTCC_main.c, 489 :: 		if (Hour2Roll.active == 1){
0xAC98	0x4824    LDR	R0, [PC, #144]
0xAC9A	0xF9B00000  LDRSH	R0, [R0, #0]
0xAC9E	0x2801    CMP	R0, #1
0xACA0	0xD108    BNE	L_AmPmRun57
;RTCC_main.c, 490 :: 		Roller_Deactivate(&Hour2Roll, 149, 96);
0xACA2	0x2260    MOVS	R2, #96
0xACA4	0x2195    MOVS	R1, #149
0xACA6	0x4822    LDR	R0, [PC, #136]
0xACA8	0xF7FAF874  BL	_Roller_Deactivate+0
;RTCC_main.c, 491 :: 		Hour2Roll.active = 0;
0xACAC	0x2100    MOVS	R1, #0
0xACAE	0xB209    SXTH	R1, R1
0xACB0	0x481E    LDR	R0, [PC, #120]
0xACB2	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 492 :: 		}
L_AmPmRun57:
;RTCC_main.c, 493 :: 		if (Minute1Roll.active == 1){
0xACB4	0x481F    LDR	R0, [PC, #124]
0xACB6	0xF9B00000  LDRSH	R0, [R0, #0]
0xACBA	0x2801    CMP	R0, #1
0xACBC	0xD108    BNE	L_AmPmRun58
;RTCC_main.c, 494 :: 		Roller_Deactivate(&Minute1Roll, 215, 96);
0xACBE	0x2260    MOVS	R2, #96
0xACC0	0x21D7    MOVS	R1, #215
0xACC2	0x481D    LDR	R0, [PC, #116]
0xACC4	0xF7FAF866  BL	_Roller_Deactivate+0
;RTCC_main.c, 495 :: 		Minute1Roll.active = 0;
0xACC8	0x2100    MOVS	R1, #0
0xACCA	0xB209    SXTH	R1, R1
0xACCC	0x4819    LDR	R0, [PC, #100]
0xACCE	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 496 :: 		}
L_AmPmRun58:
;RTCC_main.c, 497 :: 		if (Minute2Roll.active == 1){
0xACD0	0x481A    LDR	R0, [PC, #104]
0xACD2	0xF9B00000  LDRSH	R0, [R0, #0]
0xACD6	0x2801    CMP	R0, #1
0xACD8	0xD108    BNE	L_AmPmRun59
;RTCC_main.c, 498 :: 		Roller_Deactivate(&Minute2Roll, 253, 96);
0xACDA	0x2260    MOVS	R2, #96
0xACDC	0x21FD    MOVS	R1, #253
0xACDE	0x4818    LDR	R0, [PC, #96]
0xACE0	0xF7FAF858  BL	_Roller_Deactivate+0
;RTCC_main.c, 499 :: 		Minute2Roll.active = 0;
0xACE4	0x2100    MOVS	R1, #0
0xACE6	0xB209    SXTH	R1, R1
0xACE8	0x4814    LDR	R0, [PC, #80]
0xACEA	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 500 :: 		}
L_AmPmRun59:
;RTCC_main.c, 502 :: 		Draw_Picture(&AmPm, AmPm.position - 75, AmPm.Left, AmPm.Top);
0xACEC	0x4815    LDR	R0, [PC, #84]
0xACEE	0x8802    LDRH	R2, [R0, #0]
0xACF0	0x4815    LDR	R0, [PC, #84]
0xACF2	0x8801    LDRH	R1, [R0, #0]
0xACF4	0x4815    LDR	R0, [PC, #84]
0xACF6	0xF9B00000  LDRSH	R0, [R0, #0]
0xACFA	0x384B    SUBS	R0, #75
0xACFC	0xB213    SXTH	R3, R2
0xACFE	0xB20A    SXTH	R2, R1
0xAD00	0xB201    SXTH	R1, R0
0xAD02	0x4811    LDR	R0, [PC, #68]
0xAD04	0xF7F9F9C4  BL	_Draw_Picture+0
;RTCC_main.c, 503 :: 		}
L_AmPmRun55:
;RTCC_main.c, 505 :: 		MyBoxOnPress(&AmPm);
0xAD08	0x480F    LDR	R0, [PC, #60]
0xAD0A	0xF7F9FB2B  BL	_MyBoxOnPress+0
;RTCC_main.c, 506 :: 		AmPm.active = 1;
0xAD0E	0x2101    MOVS	R1, #1
0xAD10	0xB209    SXTH	R1, R1
0xAD12	0x4803    LDR	R0, [PC, #12]
0xAD14	0x8001    STRH	R1, [R0, #0]
;RTCC_main.c, 507 :: 		}
L_end_AmPmRun:
0xAD16	0xF8DDE000  LDR	LR, [SP, #0]
0xAD1A	0xB001    ADD	SP, SP, #4
0xAD1C	0x4770    BX	LR
0xAD1E	0xBF00    NOP
0xAD20	0x27922000  	_AmPm+18
0xAD24	0x27322000  	_Hour1Roll+18
0xAD28	0x27202000  	_Hour1Roll+0
0xAD2C	0x274A2000  	_Hour2Roll+18
0xAD30	0x27382000  	_Hour2Roll+0
0xAD34	0x27622000  	_Minute1Roll+18
0xAD38	0x27502000  	_Minute1Roll+0
0xAD3C	0x277A2000  	_Minute2Roll+18
0xAD40	0x27682000  	_Minute2Roll+0
0xAD44	0x27822000  	_AmPm+2
0xAD48	0x27802000  	_AmPm+0
0xAD4C	0x27942000  	_AmPm+20
; end of _AmPmRun
__Lib_USB_32F4xx_USBD_USR_Init:
;usbd_usr.c, 124 :: 		
0xBC44	0xB081    SUB	SP, SP, #4
;usbd_usr.c, 168 :: 		
L_end_USBD_USR_Init:
0xBC46	0xB001    ADD	SP, SP, #4
0xBC48	0x4770    BX	LR
; end of __Lib_USB_32F4xx_USBD_USR_Init
__Lib_USB_32F4xx_USBD_USR_DeviceConfigured:
;usbd_usr.c, 200 :: 		
0xBC3C	0xB081    SUB	SP, SP, #4
;usbd_usr.c, 203 :: 		
L_end_USBD_USR_DeviceConfigured:
0xBC3E	0xB001    ADD	SP, SP, #4
0xBC40	0x4770    BX	LR
; end of __Lib_USB_32F4xx_USBD_USR_DeviceConfigured
__Lib_USB_32F4xx_USBD_USR_DeviceSuspended:
;usbd_usr.c, 235 :: 		
0xBBFC	0xB081    SUB	SP, SP, #4
;usbd_usr.c, 239 :: 		
L_end_USBD_USR_DeviceSuspended:
0xBBFE	0xB001    ADD	SP, SP, #4
0xBC00	0x4770    BX	LR
; end of __Lib_USB_32F4xx_USBD_USR_DeviceSuspended
__Lib_USB_32F4xx_USBD_USR_DeviceResumed:
;usbd_usr.c, 248 :: 		
0xBBF4	0xB081    SUB	SP, SP, #4
;usbd_usr.c, 252 :: 		
L_end_USBD_USR_DeviceResumed:
0xBBF6	0xB001    ADD	SP, SP, #4
0xBBF8	0x4770    BX	LR
; end of __Lib_USB_32F4xx_USBD_USR_DeviceResumed
__Lib_USB_32F4xx_USBD_USR_DeviceConnected:
;usbd_usr.c, 212 :: 		
0xBC0C	0xB081    SUB	SP, SP, #4
;usbd_usr.c, 215 :: 		
L_end_USBD_USR_DeviceConnected:
0xBC0E	0xB001    ADD	SP, SP, #4
0xBC10	0x4770    BX	LR
; end of __Lib_USB_32F4xx_USBD_USR_DeviceConnected
__Lib_USB_32F4xx_USBD_USR_DeviceDisconnected:
;usbd_usr.c, 224 :: 		
0xBC04	0xB081    SUB	SP, SP, #4
;usbd_usr.c, 227 :: 		
L_end_USBD_USR_DeviceDisconnected:
0xBC06	0xB001    ADD	SP, SP, #4
0xBC08	0x4770    BX	LR
; end of __Lib_USB_32F4xx_USBD_USR_DeviceDisconnected
_Process_TP_Down:
;Ducati_logger_driver.c, 4485 :: 		void Process_TP_Down(unsigned int X, unsigned int Y) {
; Y start address is: 4 (R1)
; X start address is: 0 (R0)
0xEF1C	0xB081    SUB	SP, SP, #4
0xEF1E	0xF8CDE000  STR	LR, [SP, #0]
; Y end address is: 4 (R1)
; X end address is: 0 (R0)
; X start address is: 0 (R0)
; Y start address is: 4 (R1)
;Ducati_logger_driver.c, 4487 :: 		object_pressed      = 0;
0xEF22	0x2300    MOVS	R3, #0
0xEF24	0x4A97    LDR	R2, [PC, #604]
0xEF26	0x7013    STRB	R3, [R2, #0]
;Ducati_logger_driver.c, 4488 :: 		exec_round_button   = 0;
0xEF28	0x2300    MOVS	R3, #0
0xEF2A	0x4A97    LDR	R2, [PC, #604]
0xEF2C	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4489 :: 		exec_label          = 0;
0xEF2E	0x2300    MOVS	R3, #0
0xEF30	0x4A96    LDR	R2, [PC, #600]
0xEF32	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4490 :: 		exec_image          = 0;
0xEF34	0x2300    MOVS	R3, #0
0xEF36	0x4A96    LDR	R2, [PC, #600]
0xEF38	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4491 :: 		exec_cimage         = 0;
0xEF3A	0x2300    MOVS	R3, #0
0xEF3C	0x4A95    LDR	R2, [PC, #596]
0xEF3E	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4492 :: 		exec_circle         = 0;
0xEF40	0x2300    MOVS	R3, #0
0xEF42	0x4A95    LDR	R2, [PC, #596]
0xEF44	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4493 :: 		exec_circle_button  = 0;
0xEF46	0x2300    MOVS	R3, #0
0xEF48	0x4A94    LDR	R2, [PC, #592]
0xEF4A	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4494 :: 		exec_box            = 0;
0xEF4C	0x2300    MOVS	R3, #0
0xEF4E	0x4A94    LDR	R2, [PC, #592]
0xEF50	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4495 :: 		exec_cbox           = 0;
0xEF52	0x2300    MOVS	R3, #0
0xEF54	0x4A93    LDR	R2, [PC, #588]
0xEF56	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4497 :: 		Get_Object(X, Y);
; Y end address is: 4 (R1)
; X end address is: 0 (R0)
0xEF58	0xF7FCFA4E  BL	_Get_Object+0
;Ducati_logger_driver.c, 4499 :: 		if (_object_count != -1) {
0xEF5C	0x4A92    LDR	R2, [PC, #584]
0xEF5E	0xF9B22000  LDRSH	R2, [R2, #0]
0xEF62	0xF1B23FFF  CMP	R2, #-1
0xEF66	0xF000816D  BEQ	L_Process_TP_Down212
;Ducati_logger_driver.c, 4500 :: 		if (_object_count == round_button_order) {
0xEF6A	0x4A90    LDR	R2, [PC, #576]
0xEF6C	0xF9B23000  LDRSH	R3, [R2, #0]
0xEF70	0x4A8D    LDR	R2, [PC, #564]
0xEF72	0xF9B22000  LDRSH	R2, [R2, #0]
0xEF76	0x429A    CMP	R2, R3
0xEF78	0xD125    BNE	L_Process_TP_Down213
;Ducati_logger_driver.c, 4501 :: 		if (exec_round_button->Active == 1) {
0xEF7A	0x4A83    LDR	R2, [PC, #524]
0xEF7C	0x6812    LDR	R2, [R2, #0]
0xEF7E	0x3213    ADDS	R2, #19
0xEF80	0x7812    LDRB	R2, [R2, #0]
0xEF82	0x2A01    CMP	R2, #1
0xEF84	0xD11F    BNE	L_Process_TP_Down214
;Ducati_logger_driver.c, 4502 :: 		if (exec_round_button->PressColEnabled == 1) {
0xEF86	0x4A80    LDR	R2, [PC, #512]
0xEF88	0x6812    LDR	R2, [R2, #0]
0xEF8A	0x322F    ADDS	R2, #47
0xEF8C	0x7812    LDRB	R2, [R2, #0]
0xEF8E	0x2A01    CMP	R2, #1
0xEF90	0xD107    BNE	L_Process_TP_Down215
;Ducati_logger_driver.c, 4503 :: 		object_pressed = 1;
0xEF92	0x2301    MOVS	R3, #1
0xEF94	0x4A7B    LDR	R2, [PC, #492]
0xEF96	0x7013    STRB	R3, [R2, #0]
;Ducati_logger_driver.c, 4504 :: 		DrawRoundButton(exec_round_button);
0xEF98	0x4A7B    LDR	R2, [PC, #492]
0xEF9A	0x6812    LDR	R2, [R2, #0]
0xEF9C	0x4610    MOV	R0, R2
0xEF9E	0xF7FFF8A9  BL	_DrawRoundButton+0
;Ducati_logger_driver.c, 4505 :: 		}
L_Process_TP_Down215:
;Ducati_logger_driver.c, 4506 :: 		PressedObject = (TPointer)exec_round_button;
0xEFA2	0x4C79    LDR	R4, [PC, #484]
0xEFA4	0x6823    LDR	R3, [R4, #0]
0xEFA6	0x4A82    LDR	R2, [PC, #520]
0xEFA8	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4507 :: 		PressedObjectType = 1;
0xEFAA	0x2301    MOVS	R3, #1
0xEFAC	0xB21B    SXTH	R3, R3
0xEFAE	0x4A81    LDR	R2, [PC, #516]
0xEFB0	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4508 :: 		if (exec_round_button->OnDownPtr != 0) {
0xEFB2	0x6824    LDR	R4, [R4, #0]
0xEFB4	0x3438    ADDS	R4, #56
0xEFB6	0x6824    LDR	R4, [R4, #0]
0xEFB8	0xB12C    CBZ	R4, L_Process_TP_Down216
;Ducati_logger_driver.c, 4509 :: 		exec_round_button->OnDownPtr();
0xEFBA	0x4C73    LDR	R4, [PC, #460]
0xEFBC	0x6824    LDR	R4, [R4, #0]
0xEFBE	0x3438    ADDS	R4, #56
0xEFC0	0x6822    LDR	R2, [R4, #0]
0xEFC2	0x4790    BLX	R2
;Ducati_logger_driver.c, 4510 :: 		return;
0xEFC4	0xE13E    B	L_end_Process_TP_Down
;Ducati_logger_driver.c, 4511 :: 		}
L_Process_TP_Down216:
;Ducati_logger_driver.c, 4512 :: 		}
L_Process_TP_Down214:
;Ducati_logger_driver.c, 4513 :: 		}
L_Process_TP_Down213:
;Ducati_logger_driver.c, 4515 :: 		if (_object_count == label_order) {
0xEFC6	0x4A7C    LDR	R2, [PC, #496]
0xEFC8	0xF9B23000  LDRSH	R3, [R2, #0]
0xEFCC	0x4A76    LDR	R2, [PC, #472]
0xEFCE	0xF9B22000  LDRSH	R2, [R2, #0]
0xEFD2	0x429A    CMP	R2, R3
0xEFD4	0xD117    BNE	L_Process_TP_Down217
;Ducati_logger_driver.c, 4516 :: 		if (exec_label->Active == 1) {
0xEFD6	0x4A6D    LDR	R2, [PC, #436]
0xEFD8	0x6812    LDR	R2, [R2, #0]
0xEFDA	0x321B    ADDS	R2, #27
0xEFDC	0x7812    LDRB	R2, [R2, #0]
0xEFDE	0x2A01    CMP	R2, #1
0xEFE0	0xD111    BNE	L_Process_TP_Down218
;Ducati_logger_driver.c, 4517 :: 		PressedObject = (TPointer)exec_label;
0xEFE2	0x4C6A    LDR	R4, [PC, #424]
0xEFE4	0x6823    LDR	R3, [R4, #0]
0xEFE6	0x4A72    LDR	R2, [PC, #456]
0xEFE8	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4518 :: 		PressedObjectType = 2;
0xEFEA	0x2302    MOVS	R3, #2
0xEFEC	0xB21B    SXTH	R3, R3
0xEFEE	0x4A71    LDR	R2, [PC, #452]
0xEFF0	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4519 :: 		if (exec_label->OnDownPtr != 0) {
0xEFF2	0x6824    LDR	R4, [R4, #0]
0xEFF4	0x3420    ADDS	R4, #32
0xEFF6	0x6824    LDR	R4, [R4, #0]
0xEFF8	0xB12C    CBZ	R4, L_Process_TP_Down219
;Ducati_logger_driver.c, 4520 :: 		exec_label->OnDownPtr();
0xEFFA	0x4C64    LDR	R4, [PC, #400]
0xEFFC	0x6824    LDR	R4, [R4, #0]
0xEFFE	0x3420    ADDS	R4, #32
0xF000	0x6822    LDR	R2, [R4, #0]
0xF002	0x4790    BLX	R2
;Ducati_logger_driver.c, 4521 :: 		return;
0xF004	0xE11E    B	L_end_Process_TP_Down
;Ducati_logger_driver.c, 4522 :: 		}
L_Process_TP_Down219:
;Ducati_logger_driver.c, 4523 :: 		}
L_Process_TP_Down218:
;Ducati_logger_driver.c, 4524 :: 		}
L_Process_TP_Down217:
;Ducati_logger_driver.c, 4526 :: 		if (_object_count == image_order) {
0xF006	0x4A6D    LDR	R2, [PC, #436]
0xF008	0xF9B23000  LDRSH	R3, [R2, #0]
0xF00C	0x4A66    LDR	R2, [PC, #408]
0xF00E	0xF9B22000  LDRSH	R2, [R2, #0]
0xF012	0x429A    CMP	R2, R3
0xF014	0xD117    BNE	L_Process_TP_Down220
;Ducati_logger_driver.c, 4527 :: 		if (exec_image->Active == 1) {
0xF016	0x4A5E    LDR	R2, [PC, #376]
0xF018	0x6812    LDR	R2, [R2, #0]
0xF01A	0x3215    ADDS	R2, #21
0xF01C	0x7812    LDRB	R2, [R2, #0]
0xF01E	0x2A01    CMP	R2, #1
0xF020	0xD111    BNE	L_Process_TP_Down221
;Ducati_logger_driver.c, 4528 :: 		PressedObject = (TPointer)exec_image;
0xF022	0x4C5B    LDR	R4, [PC, #364]
0xF024	0x6823    LDR	R3, [R4, #0]
0xF026	0x4A62    LDR	R2, [PC, #392]
0xF028	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4529 :: 		PressedObjectType = 3;
0xF02A	0x2303    MOVS	R3, #3
0xF02C	0xB21B    SXTH	R3, R3
0xF02E	0x4A61    LDR	R2, [PC, #388]
0xF030	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4530 :: 		if (exec_image->OnDownPtr != 0) {
0xF032	0x6824    LDR	R4, [R4, #0]
0xF034	0x341C    ADDS	R4, #28
0xF036	0x6824    LDR	R4, [R4, #0]
0xF038	0xB12C    CBZ	R4, L_Process_TP_Down222
;Ducati_logger_driver.c, 4531 :: 		exec_image->OnDownPtr();
0xF03A	0x4C55    LDR	R4, [PC, #340]
0xF03C	0x6824    LDR	R4, [R4, #0]
0xF03E	0x341C    ADDS	R4, #28
0xF040	0x6822    LDR	R2, [R4, #0]
0xF042	0x4790    BLX	R2
;Ducati_logger_driver.c, 4532 :: 		return;
0xF044	0xE0FE    B	L_end_Process_TP_Down
;Ducati_logger_driver.c, 4533 :: 		}
L_Process_TP_Down222:
;Ducati_logger_driver.c, 4534 :: 		}
L_Process_TP_Down221:
;Ducati_logger_driver.c, 4535 :: 		}
L_Process_TP_Down220:
;Ducati_logger_driver.c, 4537 :: 		if (_object_count == cimage_order) {
0xF046	0x4A5E    LDR	R2, [PC, #376]
0xF048	0xF9B23000  LDRSH	R3, [R2, #0]
0xF04C	0x4A56    LDR	R2, [PC, #344]
0xF04E	0xF9B22000  LDRSH	R2, [R2, #0]
0xF052	0x429A    CMP	R2, R3
0xF054	0xD117    BNE	L_Process_TP_Down223
;Ducati_logger_driver.c, 4538 :: 		if (exec_cimage->Active == 1) {
0xF056	0x4A4F    LDR	R2, [PC, #316]
0xF058	0x6812    LDR	R2, [R2, #0]
0xF05A	0x3215    ADDS	R2, #21
0xF05C	0x7812    LDRB	R2, [R2, #0]
0xF05E	0x2A01    CMP	R2, #1
0xF060	0xD111    BNE	L_Process_TP_Down224
;Ducati_logger_driver.c, 4539 :: 		PressedObject = (TPointer)exec_cimage;
0xF062	0x4C4C    LDR	R4, [PC, #304]
0xF064	0x6823    LDR	R3, [R4, #0]
0xF066	0x4A52    LDR	R2, [PC, #328]
0xF068	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4540 :: 		PressedObjectType = 11;
0xF06A	0x230B    MOVS	R3, #11
0xF06C	0xB21B    SXTH	R3, R3
0xF06E	0x4A51    LDR	R2, [PC, #324]
0xF070	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4541 :: 		if (exec_cimage->OnDownPtr != 0) {
0xF072	0x6824    LDR	R4, [R4, #0]
0xF074	0x341C    ADDS	R4, #28
0xF076	0x6824    LDR	R4, [R4, #0]
0xF078	0xB12C    CBZ	R4, L_Process_TP_Down225
;Ducati_logger_driver.c, 4542 :: 		exec_cimage->OnDownPtr();
0xF07A	0x4C46    LDR	R4, [PC, #280]
0xF07C	0x6824    LDR	R4, [R4, #0]
0xF07E	0x341C    ADDS	R4, #28
0xF080	0x6822    LDR	R2, [R4, #0]
0xF082	0x4790    BLX	R2
;Ducati_logger_driver.c, 4543 :: 		return;
0xF084	0xE0DE    B	L_end_Process_TP_Down
;Ducati_logger_driver.c, 4544 :: 		}
L_Process_TP_Down225:
;Ducati_logger_driver.c, 4545 :: 		}
L_Process_TP_Down224:
;Ducati_logger_driver.c, 4546 :: 		}
L_Process_TP_Down223:
;Ducati_logger_driver.c, 4548 :: 		if (_object_count == circle_order) {
0xF086	0x4A4F    LDR	R2, [PC, #316]
0xF088	0xF9B23000  LDRSH	R3, [R2, #0]
0xF08C	0x4A46    LDR	R2, [PC, #280]
0xF08E	0xF9B22000  LDRSH	R2, [R2, #0]
0xF092	0x429A    CMP	R2, R3
0xF094	0xD125    BNE	L_Process_TP_Down226
;Ducati_logger_driver.c, 4549 :: 		if (exec_circle->Active == 1) {
0xF096	0x4A40    LDR	R2, [PC, #256]
0xF098	0x6812    LDR	R2, [R2, #0]
0xF09A	0x3211    ADDS	R2, #17
0xF09C	0x7812    LDRB	R2, [R2, #0]
0xF09E	0x2A01    CMP	R2, #1
0xF0A0	0xD11F    BNE	L_Process_TP_Down227
;Ducati_logger_driver.c, 4550 :: 		if (exec_circle->PressColEnabled == 1) {
0xF0A2	0x4A3D    LDR	R2, [PC, #244]
0xF0A4	0x6812    LDR	R2, [R2, #0]
0xF0A6	0x321C    ADDS	R2, #28
0xF0A8	0x7812    LDRB	R2, [R2, #0]
0xF0AA	0x2A01    CMP	R2, #1
0xF0AC	0xD107    BNE	L_Process_TP_Down228
;Ducati_logger_driver.c, 4551 :: 		object_pressed = 1;
0xF0AE	0x2301    MOVS	R3, #1
0xF0B0	0x4A34    LDR	R2, [PC, #208]
0xF0B2	0x7013    STRB	R3, [R2, #0]
;Ducati_logger_driver.c, 4552 :: 		DrawCircle(exec_circle);
0xF0B4	0x4A38    LDR	R2, [PC, #224]
0xF0B6	0x6812    LDR	R2, [R2, #0]
0xF0B8	0x4610    MOV	R0, R2
0xF0BA	0xF7FEFB2D  BL	_DrawCircle+0
;Ducati_logger_driver.c, 4553 :: 		}
L_Process_TP_Down228:
;Ducati_logger_driver.c, 4554 :: 		PressedObject = (TPointer)exec_circle;
0xF0BE	0x4C36    LDR	R4, [PC, #216]
0xF0C0	0x6823    LDR	R3, [R4, #0]
0xF0C2	0x4A3B    LDR	R2, [PC, #236]
0xF0C4	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4555 :: 		PressedObjectType = 4;
0xF0C6	0x2304    MOVS	R3, #4
0xF0C8	0xB21B    SXTH	R3, R3
0xF0CA	0x4A3A    LDR	R2, [PC, #232]
0xF0CC	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4556 :: 		if (exec_circle->OnDownPtr != 0) {
0xF0CE	0x6824    LDR	R4, [R4, #0]
0xF0D0	0x3424    ADDS	R4, #36
0xF0D2	0x6824    LDR	R4, [R4, #0]
0xF0D4	0xB12C    CBZ	R4, L_Process_TP_Down229
;Ducati_logger_driver.c, 4557 :: 		exec_circle->OnDownPtr();
0xF0D6	0x4C30    LDR	R4, [PC, #192]
0xF0D8	0x6824    LDR	R4, [R4, #0]
0xF0DA	0x3424    ADDS	R4, #36
0xF0DC	0x6822    LDR	R2, [R4, #0]
0xF0DE	0x4790    BLX	R2
;Ducati_logger_driver.c, 4558 :: 		return;
0xF0E0	0xE0B0    B	L_end_Process_TP_Down
;Ducati_logger_driver.c, 4559 :: 		}
L_Process_TP_Down229:
;Ducati_logger_driver.c, 4560 :: 		}
L_Process_TP_Down227:
;Ducati_logger_driver.c, 4561 :: 		}
L_Process_TP_Down226:
;Ducati_logger_driver.c, 4563 :: 		if (_object_count == circle_button_order) {
0xF0E2	0x4A39    LDR	R2, [PC, #228]
0xF0E4	0xF9B23000  LDRSH	R3, [R2, #0]
0xF0E8	0x4A2F    LDR	R2, [PC, #188]
0xF0EA	0xF9B22000  LDRSH	R2, [R2, #0]
0xF0EE	0x429A    CMP	R2, R3
0xF0F0	0xD125    BNE	L_Process_TP_Down230
;Ducati_logger_driver.c, 4564 :: 		if (exec_circle_button->Active == 1) {
0xF0F2	0x4A2A    LDR	R2, [PC, #168]
0xF0F4	0x6812    LDR	R2, [R2, #0]
0xF0F6	0x3211    ADDS	R2, #17
0xF0F8	0x7812    LDRB	R2, [R2, #0]
0xF0FA	0x2A01    CMP	R2, #1
0xF0FC	0xD11F    BNE	L_Process_TP_Down231
;Ducati_logger_driver.c, 4565 :: 		if (exec_circle_button->PressColEnabled == 1) {
0xF0FE	0x4A27    LDR	R2, [PC, #156]
0xF100	0x6812    LDR	R2, [R2, #0]
0xF102	0x322A    ADDS	R2, #42
0xF104	0x7812    LDRB	R2, [R2, #0]
0xF106	0x2A01    CMP	R2, #1
0xF108	0xD107    BNE	L_Process_TP_Down232
;Ducati_logger_driver.c, 4566 :: 		object_pressed = 1;
0xF10A	0x2301    MOVS	R3, #1
0xF10C	0x4A1D    LDR	R2, [PC, #116]
0xF10E	0x7013    STRB	R3, [R2, #0]
;Ducati_logger_driver.c, 4567 :: 		DrawCircleButton(exec_circle_button);
0xF110	0x4A22    LDR	R2, [PC, #136]
0xF112	0x6812    LDR	R2, [R2, #0]
0xF114	0x4610    MOV	R0, R2
0xF116	0xF7FEFC21  BL	_DrawCircleButton+0
;Ducati_logger_driver.c, 4568 :: 		}
L_Process_TP_Down232:
;Ducati_logger_driver.c, 4569 :: 		PressedObject = (TPointer)exec_circle_button;
0xF11A	0x4C20    LDR	R4, [PC, #128]
0xF11C	0x6823    LDR	R3, [R4, #0]
0xF11E	0x4A24    LDR	R2, [PC, #144]
0xF120	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4570 :: 		PressedObjectType = 5;
0xF122	0x2305    MOVS	R3, #5
0xF124	0xB21B    SXTH	R3, R3
0xF126	0x4A23    LDR	R2, [PC, #140]
0xF128	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4571 :: 		if (exec_circle_button->OnDownPtr != 0) {
0xF12A	0x6824    LDR	R4, [R4, #0]
0xF12C	0x3434    ADDS	R4, #52
0xF12E	0x6824    LDR	R4, [R4, #0]
0xF130	0xB12C    CBZ	R4, L_Process_TP_Down233
;Ducati_logger_driver.c, 4572 :: 		exec_circle_button->OnDownPtr();
0xF132	0x4C1A    LDR	R4, [PC, #104]
0xF134	0x6824    LDR	R4, [R4, #0]
0xF136	0x3434    ADDS	R4, #52
0xF138	0x6822    LDR	R2, [R4, #0]
0xF13A	0x4790    BLX	R2
;Ducati_logger_driver.c, 4573 :: 		return;
0xF13C	0xE082    B	L_end_Process_TP_Down
;Ducati_logger_driver.c, 4574 :: 		}
L_Process_TP_Down233:
;Ducati_logger_driver.c, 4575 :: 		}
L_Process_TP_Down231:
;Ducati_logger_driver.c, 4576 :: 		}
L_Process_TP_Down230:
;Ducati_logger_driver.c, 4578 :: 		if (_object_count == box_order) {
0xF13E	0x4A23    LDR	R2, [PC, #140]
0xF140	0xF9B23000  LDRSH	R3, [R2, #0]
0xF144	0x4A18    LDR	R2, [PC, #96]
0xF146	0xF9B22000  LDRSH	R2, [R2, #0]
0xF14A	0x429A    CMP	R2, R3
0xF14C	0xD14C    BNE	L_Process_TP_Down234
;Ducati_logger_driver.c, 4579 :: 		if (exec_box->Active == 1) {
0xF14E	0x4A14    LDR	R2, [PC, #80]
0xF150	0x6812    LDR	R2, [R2, #0]
0xF152	0x3213    ADDS	R2, #19
0xF154	0x7812    LDRB	R2, [R2, #0]
0xF156	0x2A01    CMP	R2, #1
0xF158	0xD146    BNE	L_Process_TP_Down235
;Ducati_logger_driver.c, 4580 :: 		if (exec_box->PressColEnabled == 1) {
0xF15A	0x4A11    LDR	R2, [PC, #68]
0xF15C	0x6812    LDR	R2, [R2, #0]
0xF15E	0x321E    ADDS	R2, #30
0xF160	0x7812    LDRB	R2, [R2, #0]
0xF162	0x2A01    CMP	R2, #1
0xF164	0xD107    BNE	L_Process_TP_Down236
;Ducati_logger_driver.c, 4581 :: 		object_pressed = 1;
0xF166	0x2301    MOVS	R3, #1
0xF168	0x4A06    LDR	R2, [PC, #24]
0xF16A	0x7013    STRB	R3, [R2, #0]
;Ducati_logger_driver.c, 4582 :: 		DrawBox(exec_box);
0xF16C	0x4A0C    LDR	R2, [PC, #48]
0xF16E	0x6812    LDR	R2, [R2, #0]
0xF170	0x4610    MOV	R0, R2
0xF172	0xF7FEFB73  BL	_DrawBox+0
;Ducati_logger_driver.c, 4583 :: 		}
L_Process_TP_Down236:
;Ducati_logger_driver.c, 4584 :: 		PressedObject = (TPointer)exec_box;
0xF176	0x4C0A    LDR	R4, [PC, #40]
0xF178	0x6823    LDR	R3, [R4, #0]
0xF17A	0x4A0D    LDR	R2, [PC, #52]
0xF17C	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4585 :: 		PressedObjectType = 6;
0xF17E	0x2306    MOVS	R3, #6
0xF180	0xB21B    SXTH	R3, R3
0xF182	0xE025    B	#74
0xF184	0x22282000  	_object_pressed+0
0xF188	0x222C2000  	_exec_round_button+0
0xF18C	0x22302000  	_exec_label+0
0xF190	0x22342000  	_exec_image+0
0xF194	0x22382000  	_exec_cimage+0
0xF198	0x223C2000  	_exec_circle+0
0xF19C	0x22402000  	_exec_circle_button+0
0xF1A0	0x22442000  	_exec_box+0
0xF1A4	0x22482000  	_exec_cbox+0
0xF1A8	0x222A2000  	__object_count+0
0xF1AC	0x224C2000  	_round_button_order+0
0xF1B0	0x22502000  	_PressedObject+0
0xF1B4	0x224E2000  	_PressedObjectType+0
0xF1B8	0x22542000  	_label_order+0
0xF1BC	0x22562000  	_image_order+0
0xF1C0	0x22582000  	_cimage_order+0
0xF1C4	0x225A2000  	_circle_order+0
0xF1C8	0x225C2000  	_circle_button_order+0
0xF1CC	0x225E2000  	_box_order+0
0xF1D0	0x4A1E    LDR	R2, [PC, #120]
0xF1D2	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4586 :: 		if (exec_box->OnDownPtr != 0) {
0xF1D4	0x6824    LDR	R4, [R4, #0]
0xF1D6	0x3428    ADDS	R4, #40
0xF1D8	0x6824    LDR	R4, [R4, #0]
0xF1DA	0xB12C    CBZ	R4, L_Process_TP_Down237
;Ducati_logger_driver.c, 4587 :: 		exec_box->OnDownPtr();
0xF1DC	0x4C1C    LDR	R4, [PC, #112]
0xF1DE	0x6824    LDR	R4, [R4, #0]
0xF1E0	0x3428    ADDS	R4, #40
0xF1E2	0x6822    LDR	R2, [R4, #0]
0xF1E4	0x4790    BLX	R2
;Ducati_logger_driver.c, 4588 :: 		return;
0xF1E6	0xE02D    B	L_end_Process_TP_Down
;Ducati_logger_driver.c, 4589 :: 		}
L_Process_TP_Down237:
;Ducati_logger_driver.c, 4590 :: 		}
L_Process_TP_Down235:
;Ducati_logger_driver.c, 4591 :: 		}
L_Process_TP_Down234:
;Ducati_logger_driver.c, 4593 :: 		if (_object_count == cbox_order) {
0xF1E8	0x4A1A    LDR	R2, [PC, #104]
0xF1EA	0xF9B23000  LDRSH	R3, [R2, #0]
0xF1EE	0x4A1A    LDR	R2, [PC, #104]
0xF1F0	0xF9B22000  LDRSH	R2, [R2, #0]
0xF1F4	0x429A    CMP	R2, R3
0xF1F6	0xD125    BNE	L_Process_TP_Down238
;Ducati_logger_driver.c, 4594 :: 		if (exec_cbox->Active == 1) {
0xF1F8	0x4A18    LDR	R2, [PC, #96]
0xF1FA	0x6812    LDR	R2, [R2, #0]
0xF1FC	0x3213    ADDS	R2, #19
0xF1FE	0x7812    LDRB	R2, [R2, #0]
0xF200	0x2A01    CMP	R2, #1
0xF202	0xD11F    BNE	L_Process_TP_Down239
;Ducati_logger_driver.c, 4595 :: 		if (exec_cbox->PressColEnabled == 1) {
0xF204	0x4A15    LDR	R2, [PC, #84]
0xF206	0x6812    LDR	R2, [R2, #0]
0xF208	0x321E    ADDS	R2, #30
0xF20A	0x7812    LDRB	R2, [R2, #0]
0xF20C	0x2A01    CMP	R2, #1
0xF20E	0xD107    BNE	L_Process_TP_Down240
;Ducati_logger_driver.c, 4596 :: 		object_pressed = 1;
0xF210	0x2301    MOVS	R3, #1
0xF212	0x4A13    LDR	R2, [PC, #76]
0xF214	0x7013    STRB	R3, [R2, #0]
;Ducati_logger_driver.c, 4597 :: 		DrawCBox(exec_cbox);
0xF216	0x4A11    LDR	R2, [PC, #68]
0xF218	0x6812    LDR	R2, [R2, #0]
0xF21A	0x4610    MOV	R0, R2
0xF21C	0xF7FEF9FC  BL	_DrawCBox+0
;Ducati_logger_driver.c, 4598 :: 		}
L_Process_TP_Down240:
;Ducati_logger_driver.c, 4599 :: 		PressedObject = (TPointer)exec_cbox;
0xF220	0x4C0E    LDR	R4, [PC, #56]
0xF222	0x6823    LDR	R3, [R4, #0]
0xF224	0x4A0F    LDR	R2, [PC, #60]
0xF226	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4600 :: 		PressedObjectType = 14;
0xF228	0x230E    MOVS	R3, #14
0xF22A	0xB21B    SXTH	R3, R3
0xF22C	0x4A07    LDR	R2, [PC, #28]
0xF22E	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4601 :: 		if (exec_cbox->OnDownPtr != 0) {
0xF230	0x6824    LDR	R4, [R4, #0]
0xF232	0x3428    ADDS	R4, #40
0xF234	0x6824    LDR	R4, [R4, #0]
0xF236	0xB12C    CBZ	R4, L_Process_TP_Down241
;Ducati_logger_driver.c, 4602 :: 		exec_cbox->OnDownPtr();
0xF238	0x4C08    LDR	R4, [PC, #32]
0xF23A	0x6824    LDR	R4, [R4, #0]
0xF23C	0x3428    ADDS	R4, #40
0xF23E	0x6822    LDR	R2, [R4, #0]
0xF240	0x4790    BLX	R2
;Ducati_logger_driver.c, 4603 :: 		return;
0xF242	0xE7FF    B	L_end_Process_TP_Down
;Ducati_logger_driver.c, 4604 :: 		}
L_Process_TP_Down241:
;Ducati_logger_driver.c, 4605 :: 		}
L_Process_TP_Down239:
;Ducati_logger_driver.c, 4606 :: 		}
L_Process_TP_Down238:
;Ducati_logger_driver.c, 4608 :: 		}
L_Process_TP_Down212:
;Ducati_logger_driver.c, 4609 :: 		}
L_end_Process_TP_Down:
0xF244	0xF8DDE000  LDR	LR, [SP, #0]
0xF248	0xB001    ADD	SP, SP, #4
0xF24A	0x4770    BX	LR
0xF24C	0x224E2000  	_PressedObjectType+0
0xF250	0x22442000  	_exec_box+0
0xF254	0x22602000  	_cbox_order+0
0xF258	0x222A2000  	__object_count+0
0xF25C	0x22482000  	_exec_cbox+0
0xF260	0x22282000  	_object_pressed+0
0xF264	0x22502000  	_PressedObject+0
; end of _Process_TP_Down
_Process_TP_Up:
;Ducati_logger_driver.c, 4300 :: 		void Process_TP_Up(unsigned int X, unsigned int Y) {
; Y start address is: 4 (R1)
; X start address is: 0 (R0)
0xF268	0xB083    SUB	SP, SP, #12
0xF26A	0xF8CDE000  STR	LR, [SP, #0]
; Y end address is: 4 (R1)
; X end address is: 0 (R0)
; X start address is: 0 (R0)
; Y start address is: 4 (R1)
;Ducati_logger_driver.c, 4302 :: 		switch (PressedObjectType) {
0xF26E	0xE0AE    B	L_Process_TP_Up144
;Ducati_logger_driver.c, 4304 :: 		case 1: {
L_Process_TP_Up146:
;Ducati_logger_driver.c, 4305 :: 		if (PressedObject != 0) {
0xF270	0x4AA1    LDR	R2, [PC, #644]
0xF272	0x6812    LDR	R2, [R2, #0]
0xF274	0xB1F2    CBZ	R2, L_Process_TP_Up147
;Ducati_logger_driver.c, 4306 :: 		exec_round_button = (TButton_Round*)PressedObject;
0xF276	0x4CA0    LDR	R4, [PC, #640]
0xF278	0x6823    LDR	R3, [R4, #0]
0xF27A	0x4AA0    LDR	R2, [PC, #640]
0xF27C	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4307 :: 		if ((exec_round_button->PressColEnabled == 1) && (exec_round_button->OwnerScreen == CurrentScreen)) {
0xF27E	0x4622    MOV	R2, R4
0xF280	0x6812    LDR	R2, [R2, #0]
0xF282	0x322F    ADDS	R2, #47
0xF284	0x7812    LDRB	R2, [R2, #0]
0xF286	0x2A01    CMP	R2, #1
0xF288	0xD113    BNE	L__Process_TP_Up276
0xF28A	0x4A9C    LDR	R2, [PC, #624]
0xF28C	0x6812    LDR	R2, [R2, #0]
0xF28E	0x6813    LDR	R3, [R2, #0]
0xF290	0x4A9B    LDR	R2, [PC, #620]
0xF292	0x6812    LDR	R2, [R2, #0]
0xF294	0x4293    CMP	R3, R2
0xF296	0xD10C    BNE	L__Process_TP_Up275
L__Process_TP_Up274:
;Ducati_logger_driver.c, 4308 :: 		DrawRoundButton(exec_round_button);
0xF298	0x4A98    LDR	R2, [PC, #608]
0xF29A	0x6812    LDR	R2, [R2, #0]
0xF29C	0xF8AD1004  STRH	R1, [SP, #4]
0xF2A0	0xF8AD0008  STRH	R0, [SP, #8]
0xF2A4	0x4610    MOV	R0, R2
0xF2A6	0xF7FEFF25  BL	_DrawRoundButton+0
0xF2AA	0xF8BD0008  LDRH	R0, [SP, #8]
0xF2AE	0xF8BD1004  LDRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4307 :: 		if ((exec_round_button->PressColEnabled == 1) && (exec_round_button->OwnerScreen == CurrentScreen)) {
L__Process_TP_Up276:
L__Process_TP_Up275:
;Ducati_logger_driver.c, 4310 :: 		break;
0xF2B2	0xE0A9    B	L_Process_TP_Up145
;Ducati_logger_driver.c, 4311 :: 		}
L_Process_TP_Up147:
;Ducati_logger_driver.c, 4312 :: 		break;
0xF2B4	0xE0A8    B	L_Process_TP_Up145
;Ducati_logger_driver.c, 4315 :: 		case 4: {
L_Process_TP_Up151:
;Ducati_logger_driver.c, 4316 :: 		if (PressedObject != 0) {
0xF2B6	0x4A90    LDR	R2, [PC, #576]
0xF2B8	0x6812    LDR	R2, [R2, #0]
0xF2BA	0xB1F2    CBZ	R2, L_Process_TP_Up152
;Ducati_logger_driver.c, 4317 :: 		exec_circle = (TCircle*)PressedObject;
0xF2BC	0x4C8E    LDR	R4, [PC, #568]
0xF2BE	0x6823    LDR	R3, [R4, #0]
0xF2C0	0x4A90    LDR	R2, [PC, #576]
0xF2C2	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4318 :: 		if ((exec_circle->PressColEnabled == 1) && (exec_circle->OwnerScreen == CurrentScreen)) {
0xF2C4	0x4622    MOV	R2, R4
0xF2C6	0x6812    LDR	R2, [R2, #0]
0xF2C8	0x321C    ADDS	R2, #28
0xF2CA	0x7812    LDRB	R2, [R2, #0]
0xF2CC	0x2A01    CMP	R2, #1
0xF2CE	0xD113    BNE	L__Process_TP_Up278
0xF2D0	0x4A8C    LDR	R2, [PC, #560]
0xF2D2	0x6812    LDR	R2, [R2, #0]
0xF2D4	0x6813    LDR	R3, [R2, #0]
0xF2D6	0x4A8A    LDR	R2, [PC, #552]
0xF2D8	0x6812    LDR	R2, [R2, #0]
0xF2DA	0x4293    CMP	R3, R2
0xF2DC	0xD10C    BNE	L__Process_TP_Up277
L__Process_TP_Up273:
;Ducati_logger_driver.c, 4319 :: 		DrawCircle(exec_circle);
0xF2DE	0x4A89    LDR	R2, [PC, #548]
0xF2E0	0x6812    LDR	R2, [R2, #0]
0xF2E2	0xF8AD1004  STRH	R1, [SP, #4]
0xF2E6	0xF8AD0008  STRH	R0, [SP, #8]
0xF2EA	0x4610    MOV	R0, R2
0xF2EC	0xF7FEFA14  BL	_DrawCircle+0
0xF2F0	0xF8BD0008  LDRH	R0, [SP, #8]
0xF2F4	0xF8BD1004  LDRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4318 :: 		if ((exec_circle->PressColEnabled == 1) && (exec_circle->OwnerScreen == CurrentScreen)) {
L__Process_TP_Up278:
L__Process_TP_Up277:
;Ducati_logger_driver.c, 4321 :: 		break;
0xF2F8	0xE086    B	L_Process_TP_Up145
;Ducati_logger_driver.c, 4322 :: 		}
L_Process_TP_Up152:
;Ducati_logger_driver.c, 4323 :: 		break;
0xF2FA	0xE085    B	L_Process_TP_Up145
;Ducati_logger_driver.c, 4326 :: 		case 5: {
L_Process_TP_Up156:
;Ducati_logger_driver.c, 4327 :: 		if (PressedObject != 0) {
0xF2FC	0x4A7E    LDR	R2, [PC, #504]
0xF2FE	0x6812    LDR	R2, [R2, #0]
0xF300	0xB1F2    CBZ	R2, L_Process_TP_Up157
;Ducati_logger_driver.c, 4328 :: 		exec_circle_button = (TCircleButton*)PressedObject;
0xF302	0x4C7D    LDR	R4, [PC, #500]
0xF304	0x6823    LDR	R3, [R4, #0]
0xF306	0x4A80    LDR	R2, [PC, #512]
0xF308	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4329 :: 		if ((exec_circle_button->PressColEnabled == 1) && (exec_circle_button->OwnerScreen == CurrentScreen)) {
0xF30A	0x4622    MOV	R2, R4
0xF30C	0x6812    LDR	R2, [R2, #0]
0xF30E	0x322A    ADDS	R2, #42
0xF310	0x7812    LDRB	R2, [R2, #0]
0xF312	0x2A01    CMP	R2, #1
0xF314	0xD113    BNE	L__Process_TP_Up280
0xF316	0x4A7C    LDR	R2, [PC, #496]
0xF318	0x6812    LDR	R2, [R2, #0]
0xF31A	0x6813    LDR	R3, [R2, #0]
0xF31C	0x4A78    LDR	R2, [PC, #480]
0xF31E	0x6812    LDR	R2, [R2, #0]
0xF320	0x4293    CMP	R3, R2
0xF322	0xD10C    BNE	L__Process_TP_Up279
L__Process_TP_Up272:
;Ducati_logger_driver.c, 4330 :: 		DrawCircleButton(exec_circle_button);
0xF324	0x4A78    LDR	R2, [PC, #480]
0xF326	0x6812    LDR	R2, [R2, #0]
0xF328	0xF8AD1004  STRH	R1, [SP, #4]
0xF32C	0xF8AD0008  STRH	R0, [SP, #8]
0xF330	0x4610    MOV	R0, R2
0xF332	0xF7FEFB13  BL	_DrawCircleButton+0
0xF336	0xF8BD0008  LDRH	R0, [SP, #8]
0xF33A	0xF8BD1004  LDRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4329 :: 		if ((exec_circle_button->PressColEnabled == 1) && (exec_circle_button->OwnerScreen == CurrentScreen)) {
L__Process_TP_Up280:
L__Process_TP_Up279:
;Ducati_logger_driver.c, 4332 :: 		break;
0xF33E	0xE063    B	L_Process_TP_Up145
;Ducati_logger_driver.c, 4333 :: 		}
L_Process_TP_Up157:
;Ducati_logger_driver.c, 4334 :: 		break;
0xF340	0xE062    B	L_Process_TP_Up145
;Ducati_logger_driver.c, 4337 :: 		case 6: {
L_Process_TP_Up161:
;Ducati_logger_driver.c, 4338 :: 		if (PressedObject != 0) {
0xF342	0x4A6D    LDR	R2, [PC, #436]
0xF344	0x6812    LDR	R2, [R2, #0]
0xF346	0xB1F2    CBZ	R2, L_Process_TP_Up162
;Ducati_logger_driver.c, 4339 :: 		exec_box = (TBox*)PressedObject;
0xF348	0x4C6B    LDR	R4, [PC, #428]
0xF34A	0x6823    LDR	R3, [R4, #0]
0xF34C	0x4A6F    LDR	R2, [PC, #444]
0xF34E	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4340 :: 		if ((exec_box->PressColEnabled == 1) && (exec_box->OwnerScreen == CurrentScreen)) {
0xF350	0x4622    MOV	R2, R4
0xF352	0x6812    LDR	R2, [R2, #0]
0xF354	0x321E    ADDS	R2, #30
0xF356	0x7812    LDRB	R2, [R2, #0]
0xF358	0x2A01    CMP	R2, #1
0xF35A	0xD113    BNE	L__Process_TP_Up282
0xF35C	0x4A6B    LDR	R2, [PC, #428]
0xF35E	0x6812    LDR	R2, [R2, #0]
0xF360	0x6813    LDR	R3, [R2, #0]
0xF362	0x4A67    LDR	R2, [PC, #412]
0xF364	0x6812    LDR	R2, [R2, #0]
0xF366	0x4293    CMP	R3, R2
0xF368	0xD10C    BNE	L__Process_TP_Up281
L__Process_TP_Up271:
;Ducati_logger_driver.c, 4341 :: 		DrawBox(exec_box);
0xF36A	0x4A68    LDR	R2, [PC, #416]
0xF36C	0x6812    LDR	R2, [R2, #0]
0xF36E	0xF8AD1004  STRH	R1, [SP, #4]
0xF372	0xF8AD0008  STRH	R0, [SP, #8]
0xF376	0x4610    MOV	R0, R2
0xF378	0xF7FEFA70  BL	_DrawBox+0
0xF37C	0xF8BD0008  LDRH	R0, [SP, #8]
0xF380	0xF8BD1004  LDRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4340 :: 		if ((exec_box->PressColEnabled == 1) && (exec_box->OwnerScreen == CurrentScreen)) {
L__Process_TP_Up282:
L__Process_TP_Up281:
;Ducati_logger_driver.c, 4343 :: 		break;
0xF384	0xE040    B	L_Process_TP_Up145
;Ducati_logger_driver.c, 4344 :: 		}
L_Process_TP_Up162:
;Ducati_logger_driver.c, 4345 :: 		break;
0xF386	0xE03F    B	L_Process_TP_Up145
;Ducati_logger_driver.c, 4348 :: 		case 14: {
L_Process_TP_Up166:
;Ducati_logger_driver.c, 4349 :: 		if (PressedObject != 0) {
0xF388	0x4A5B    LDR	R2, [PC, #364]
0xF38A	0x6812    LDR	R2, [R2, #0]
0xF38C	0xB1F2    CBZ	R2, L_Process_TP_Up167
;Ducati_logger_driver.c, 4350 :: 		exec_cbox = (TCBox*)PressedObject;
0xF38E	0x4C5A    LDR	R4, [PC, #360]
0xF390	0x6823    LDR	R3, [R4, #0]
0xF392	0x4A5F    LDR	R2, [PC, #380]
0xF394	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4351 :: 		if ((exec_cbox->PressColEnabled == 1) && (exec_cbox->OwnerScreen == CurrentScreen)) {
0xF396	0x4622    MOV	R2, R4
0xF398	0x6812    LDR	R2, [R2, #0]
0xF39A	0x321E    ADDS	R2, #30
0xF39C	0x7812    LDRB	R2, [R2, #0]
0xF39E	0x2A01    CMP	R2, #1
0xF3A0	0xD113    BNE	L__Process_TP_Up284
0xF3A2	0x4A5B    LDR	R2, [PC, #364]
0xF3A4	0x6812    LDR	R2, [R2, #0]
0xF3A6	0x6813    LDR	R3, [R2, #0]
0xF3A8	0x4A55    LDR	R2, [PC, #340]
0xF3AA	0x6812    LDR	R2, [R2, #0]
0xF3AC	0x4293    CMP	R3, R2
0xF3AE	0xD10C    BNE	L__Process_TP_Up283
L__Process_TP_Up270:
;Ducati_logger_driver.c, 4352 :: 		DrawCBox(exec_cbox);
0xF3B0	0x4A57    LDR	R2, [PC, #348]
0xF3B2	0x6812    LDR	R2, [R2, #0]
0xF3B4	0xF8AD1004  STRH	R1, [SP, #4]
0xF3B8	0xF8AD0008  STRH	R0, [SP, #8]
0xF3BC	0x4610    MOV	R0, R2
0xF3BE	0xF7FEF92B  BL	_DrawCBox+0
0xF3C2	0xF8BD0008  LDRH	R0, [SP, #8]
0xF3C6	0xF8BD1004  LDRH	R1, [SP, #4]
;Ducati_logger_driver.c, 4351 :: 		if ((exec_cbox->PressColEnabled == 1) && (exec_cbox->OwnerScreen == CurrentScreen)) {
L__Process_TP_Up284:
L__Process_TP_Up283:
;Ducati_logger_driver.c, 4354 :: 		break;
0xF3CA	0xE01D    B	L_Process_TP_Up145
;Ducati_logger_driver.c, 4355 :: 		}
L_Process_TP_Up167:
;Ducati_logger_driver.c, 4356 :: 		break;
0xF3CC	0xE01C    B	L_Process_TP_Up145
;Ducati_logger_driver.c, 4358 :: 		}
L_Process_TP_Up144:
0xF3CE	0x4A51    LDR	R2, [PC, #324]
0xF3D0	0xF9B22000  LDRSH	R2, [R2, #0]
0xF3D4	0x2A01    CMP	R2, #1
0xF3D6	0xF43FAF4B  BEQ	L_Process_TP_Up146
0xF3DA	0x4A4E    LDR	R2, [PC, #312]
0xF3DC	0xF9B22000  LDRSH	R2, [R2, #0]
0xF3E0	0x2A04    CMP	R2, #4
0xF3E2	0xF43FAF68  BEQ	L_Process_TP_Up151
0xF3E6	0x4A4B    LDR	R2, [PC, #300]
0xF3E8	0xF9B22000  LDRSH	R2, [R2, #0]
0xF3EC	0x2A05    CMP	R2, #5
0xF3EE	0xF43FAF85  BEQ	L_Process_TP_Up156
0xF3F2	0x4A48    LDR	R2, [PC, #288]
0xF3F4	0xF9B22000  LDRSH	R2, [R2, #0]
0xF3F8	0x2A06    CMP	R2, #6
0xF3FA	0xF43FAFA2  BEQ	L_Process_TP_Up161
0xF3FE	0x4A45    LDR	R2, [PC, #276]
0xF400	0xF9B22000  LDRSH	R2, [R2, #0]
0xF404	0x2A0E    CMP	R2, #14
0xF406	0xD0BF    BEQ	L_Process_TP_Up166
; Y end address is: 4 (R1)
; X end address is: 0 (R0)
L_Process_TP_Up145:
;Ducati_logger_driver.c, 4360 :: 		exec_label          = 0;
; Y start address is: 4 (R1)
; X start address is: 0 (R0)
0xF408	0x2300    MOVS	R3, #0
0xF40A	0x4A43    LDR	R2, [PC, #268]
0xF40C	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4361 :: 		exec_image          = 0;
0xF40E	0x2300    MOVS	R3, #0
0xF410	0x4A42    LDR	R2, [PC, #264]
0xF412	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4362 :: 		exec_cimage          = 0;
0xF414	0x2300    MOVS	R3, #0
0xF416	0x4A42    LDR	R2, [PC, #264]
0xF418	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4364 :: 		Get_Object(X, Y);
; Y end address is: 4 (R1)
; X end address is: 0 (R0)
0xF41A	0xF7FBFFED  BL	_Get_Object+0
;Ducati_logger_driver.c, 4367 :: 		if (_object_count != -1) {
0xF41E	0x4A41    LDR	R2, [PC, #260]
0xF420	0xF9B22000  LDRSH	R2, [R2, #0]
0xF424	0xF1B23FFF  CMP	R2, #-1
0xF428	0xF00081A7  BEQ	L_Process_TP_Up171
;Ducati_logger_driver.c, 4369 :: 		if (_object_count == round_button_order) {
0xF42C	0x4A3E    LDR	R2, [PC, #248]
0xF42E	0xF9B23000  LDRSH	R3, [R2, #0]
0xF432	0x4A3C    LDR	R2, [PC, #240]
0xF434	0xF9B22000  LDRSH	R2, [R2, #0]
0xF438	0x429A    CMP	R2, R3
0xF43A	0xD128    BNE	L_Process_TP_Up172
;Ducati_logger_driver.c, 4370 :: 		if (exec_round_button->Active == 1) {
0xF43C	0x4A2F    LDR	R2, [PC, #188]
0xF43E	0x6812    LDR	R2, [R2, #0]
0xF440	0x3213    ADDS	R2, #19
0xF442	0x7812    LDRB	R2, [R2, #0]
0xF444	0x2A01    CMP	R2, #1
0xF446	0xD122    BNE	L_Process_TP_Up173
;Ducati_logger_driver.c, 4371 :: 		if (exec_round_button->OnUpPtr != 0)
0xF448	0x4C2C    LDR	R4, [PC, #176]
0xF44A	0x6824    LDR	R4, [R4, #0]
0xF44C	0x3434    ADDS	R4, #52
0xF44E	0x6824    LDR	R4, [R4, #0]
0xF450	0xB124    CBZ	R4, L_Process_TP_Up174
;Ducati_logger_driver.c, 4372 :: 		exec_round_button->OnUpPtr();
0xF452	0x4C2A    LDR	R4, [PC, #168]
0xF454	0x6824    LDR	R4, [R4, #0]
0xF456	0x3434    ADDS	R4, #52
0xF458	0x6822    LDR	R2, [R4, #0]
0xF45A	0x4790    BLX	R2
L_Process_TP_Up174:
;Ducati_logger_driver.c, 4373 :: 		if (PressedObject == (TPointer)exec_round_button)
0xF45C	0x4A27    LDR	R2, [PC, #156]
0xF45E	0x6813    LDR	R3, [R2, #0]
0xF460	0x4A25    LDR	R2, [PC, #148]
0xF462	0x6812    LDR	R2, [R2, #0]
0xF464	0x429A    CMP	R2, R3
0xF466	0xD109    BNE	L_Process_TP_Up175
;Ducati_logger_driver.c, 4374 :: 		if (exec_round_button->OnClickPtr != 0)
0xF468	0x4C24    LDR	R4, [PC, #144]
0xF46A	0x6824    LDR	R4, [R4, #0]
0xF46C	0x343C    ADDS	R4, #60
0xF46E	0x6824    LDR	R4, [R4, #0]
0xF470	0xB124    CBZ	R4, L_Process_TP_Up176
;Ducati_logger_driver.c, 4375 :: 		exec_round_button->OnClickPtr();
0xF472	0x4C22    LDR	R4, [PC, #136]
0xF474	0x6824    LDR	R4, [R4, #0]
0xF476	0x343C    ADDS	R4, #60
0xF478	0x6822    LDR	R2, [R4, #0]
0xF47A	0x4790    BLX	R2
L_Process_TP_Up176:
L_Process_TP_Up175:
;Ducati_logger_driver.c, 4376 :: 		PressedObject = 0;
0xF47C	0x2300    MOVS	R3, #0
0xF47E	0x4A1E    LDR	R2, [PC, #120]
0xF480	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4377 :: 		PressedObjectType = -1;
0xF482	0xF64F73FF  MOVW	R3, #65535
0xF486	0xB21B    SXTH	R3, R3
0xF488	0x4A22    LDR	R2, [PC, #136]
0xF48A	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4378 :: 		return;
0xF48C	0xE17D    B	L_end_Process_TP_Up
;Ducati_logger_driver.c, 4379 :: 		}
L_Process_TP_Up173:
;Ducati_logger_driver.c, 4380 :: 		}
L_Process_TP_Up172:
;Ducati_logger_driver.c, 4383 :: 		if (_object_count == label_order) {
0xF48E	0x4A27    LDR	R2, [PC, #156]
0xF490	0xF9B23000  LDRSH	R3, [R2, #0]
0xF494	0x4A23    LDR	R2, [PC, #140]
0xF496	0xF9B22000  LDRSH	R2, [R2, #0]
0xF49A	0x429A    CMP	R2, R3
0xF49C	0xD128    BNE	L_Process_TP_Up177
;Ducati_logger_driver.c, 4384 :: 		if (exec_label->Active == 1) {
0xF49E	0x4A1E    LDR	R2, [PC, #120]
0xF4A0	0x6812    LDR	R2, [R2, #0]
0xF4A2	0x321B    ADDS	R2, #27
0xF4A4	0x7812    LDRB	R2, [R2, #0]
0xF4A6	0x2A01    CMP	R2, #1
0xF4A8	0xD122    BNE	L_Process_TP_Up178
;Ducati_logger_driver.c, 4385 :: 		if (exec_label->OnUpPtr != 0)
0xF4AA	0x4C1B    LDR	R4, [PC, #108]
0xF4AC	0x6824    LDR	R4, [R4, #0]
0xF4AE	0x341C    ADDS	R4, #28
0xF4B0	0x6824    LDR	R4, [R4, #0]
0xF4B2	0xB124    CBZ	R4, L_Process_TP_Up179
;Ducati_logger_driver.c, 4386 :: 		exec_label->OnUpPtr();
0xF4B4	0x4C18    LDR	R4, [PC, #96]
0xF4B6	0x6824    LDR	R4, [R4, #0]
0xF4B8	0x341C    ADDS	R4, #28
0xF4BA	0x6822    LDR	R2, [R4, #0]
0xF4BC	0x4790    BLX	R2
L_Process_TP_Up179:
;Ducati_logger_driver.c, 4387 :: 		if (PressedObject == (TPointer)exec_label)
0xF4BE	0x4A16    LDR	R2, [PC, #88]
0xF4C0	0x6813    LDR	R3, [R2, #0]
0xF4C2	0x4A0D    LDR	R2, [PC, #52]
0xF4C4	0x6812    LDR	R2, [R2, #0]
0xF4C6	0x429A    CMP	R2, R3
0xF4C8	0xD109    BNE	L_Process_TP_Up180
;Ducati_logger_driver.c, 4388 :: 		if (exec_label->OnClickPtr != 0)
0xF4CA	0x4C13    LDR	R4, [PC, #76]
0xF4CC	0x6824    LDR	R4, [R4, #0]
0xF4CE	0x3424    ADDS	R4, #36
0xF4D0	0x6824    LDR	R4, [R4, #0]
0xF4D2	0xB124    CBZ	R4, L_Process_TP_Up181
;Ducati_logger_driver.c, 4389 :: 		exec_label->OnClickPtr();
0xF4D4	0x4C10    LDR	R4, [PC, #64]
0xF4D6	0x6824    LDR	R4, [R4, #0]
0xF4D8	0x3424    ADDS	R4, #36
0xF4DA	0x6822    LDR	R2, [R4, #0]
0xF4DC	0x4790    BLX	R2
L_Process_TP_Up181:
L_Process_TP_Up180:
;Ducati_logger_driver.c, 4390 :: 		PressedObject = 0;
0xF4DE	0x2300    MOVS	R3, #0
0xF4E0	0x4A05    LDR	R2, [PC, #20]
0xF4E2	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4391 :: 		PressedObjectType = -1;
0xF4E4	0xF64F73FF  MOVW	R3, #65535
0xF4E8	0xB21B    SXTH	R3, R3
0xF4EA	0x4A0A    LDR	R2, [PC, #40]
0xF4EC	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4392 :: 		return;
0xF4EE	0xE14C    B	L_end_Process_TP_Up
;Ducati_logger_driver.c, 4393 :: 		}
L_Process_TP_Up178:
;Ducati_logger_driver.c, 4394 :: 		}
L_Process_TP_Up177:
;Ducati_logger_driver.c, 4397 :: 		if (_object_count == image_order) {
0xF4F0	0x4A0F    LDR	R2, [PC, #60]
0xF4F2	0xF9B23000  LDRSH	R3, [R2, #0]
0xF4F6	0xE01D    B	#58
0xF4F8	0x22502000  	_PressedObject+0
0xF4FC	0x222C2000  	_exec_round_button+0
0xF500	0x22642000  	_CurrentScreen+0
0xF504	0x223C2000  	_exec_circle+0
0xF508	0x22402000  	_exec_circle_button+0
0xF50C	0x22442000  	_exec_box+0
0xF510	0x22482000  	_exec_cbox+0
0xF514	0x224E2000  	_PressedObjectType+0
0xF518	0x22302000  	_exec_label+0
0xF51C	0x22342000  	_exec_image+0
0xF520	0x22382000  	_exec_cimage+0
0xF524	0x222A2000  	__object_count+0
0xF528	0x224C2000  	_round_button_order+0
0xF52C	0x22542000  	_label_order+0
0xF530	0x22562000  	_image_order+0
0xF534	0x4A97    LDR	R2, [PC, #604]
0xF536	0xF9B22000  LDRSH	R2, [R2, #0]
0xF53A	0x429A    CMP	R2, R3
0xF53C	0xD128    BNE	L_Process_TP_Up182
;Ducati_logger_driver.c, 4398 :: 		if (exec_image->Active == 1) {
0xF53E	0x4A96    LDR	R2, [PC, #600]
0xF540	0x6812    LDR	R2, [R2, #0]
0xF542	0x3215    ADDS	R2, #21
0xF544	0x7812    LDRB	R2, [R2, #0]
0xF546	0x2A01    CMP	R2, #1
0xF548	0xD122    BNE	L_Process_TP_Up183
;Ducati_logger_driver.c, 4399 :: 		if (exec_image->OnUpPtr != 0)
0xF54A	0x4C93    LDR	R4, [PC, #588]
0xF54C	0x6824    LDR	R4, [R4, #0]
0xF54E	0x3418    ADDS	R4, #24
0xF550	0x6824    LDR	R4, [R4, #0]
0xF552	0xB124    CBZ	R4, L_Process_TP_Up184
;Ducati_logger_driver.c, 4400 :: 		exec_image->OnUpPtr();
0xF554	0x4C90    LDR	R4, [PC, #576]
0xF556	0x6824    LDR	R4, [R4, #0]
0xF558	0x3418    ADDS	R4, #24
0xF55A	0x6822    LDR	R2, [R4, #0]
0xF55C	0x4790    BLX	R2
L_Process_TP_Up184:
;Ducati_logger_driver.c, 4401 :: 		if (PressedObject == (TPointer)exec_image)
0xF55E	0x4A8E    LDR	R2, [PC, #568]
0xF560	0x6813    LDR	R3, [R2, #0]
0xF562	0x4A8E    LDR	R2, [PC, #568]
0xF564	0x6812    LDR	R2, [R2, #0]
0xF566	0x429A    CMP	R2, R3
0xF568	0xD109    BNE	L_Process_TP_Up185
;Ducati_logger_driver.c, 4402 :: 		if (exec_image->OnClickPtr != 0)
0xF56A	0x4C8B    LDR	R4, [PC, #556]
0xF56C	0x6824    LDR	R4, [R4, #0]
0xF56E	0x3420    ADDS	R4, #32
0xF570	0x6824    LDR	R4, [R4, #0]
0xF572	0xB124    CBZ	R4, L_Process_TP_Up186
;Ducati_logger_driver.c, 4403 :: 		exec_image->OnClickPtr();
0xF574	0x4C88    LDR	R4, [PC, #544]
0xF576	0x6824    LDR	R4, [R4, #0]
0xF578	0x3420    ADDS	R4, #32
0xF57A	0x6822    LDR	R2, [R4, #0]
0xF57C	0x4790    BLX	R2
L_Process_TP_Up186:
L_Process_TP_Up185:
;Ducati_logger_driver.c, 4404 :: 		PressedObject = 0;
0xF57E	0x2300    MOVS	R3, #0
0xF580	0x4A86    LDR	R2, [PC, #536]
0xF582	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4405 :: 		PressedObjectType = -1;
0xF584	0xF64F73FF  MOVW	R3, #65535
0xF588	0xB21B    SXTH	R3, R3
0xF58A	0x4A85    LDR	R2, [PC, #532]
0xF58C	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4406 :: 		return;
0xF58E	0xE0FC    B	L_end_Process_TP_Up
;Ducati_logger_driver.c, 4407 :: 		}
L_Process_TP_Up183:
;Ducati_logger_driver.c, 4408 :: 		}
L_Process_TP_Up182:
;Ducati_logger_driver.c, 4411 :: 		if (_object_count == cimage_order) {
0xF590	0x4A84    LDR	R2, [PC, #528]
0xF592	0xF9B23000  LDRSH	R3, [R2, #0]
0xF596	0x4A7F    LDR	R2, [PC, #508]
0xF598	0xF9B22000  LDRSH	R2, [R2, #0]
0xF59C	0x429A    CMP	R2, R3
0xF59E	0xD128    BNE	L_Process_TP_Up187
;Ducati_logger_driver.c, 4412 :: 		if (exec_cimage->Active == 1) {
0xF5A0	0x4A81    LDR	R2, [PC, #516]
0xF5A2	0x6812    LDR	R2, [R2, #0]
0xF5A4	0x3215    ADDS	R2, #21
0xF5A6	0x7812    LDRB	R2, [R2, #0]
0xF5A8	0x2A01    CMP	R2, #1
0xF5AA	0xD122    BNE	L_Process_TP_Up188
;Ducati_logger_driver.c, 4413 :: 		if (exec_cimage->OnUpPtr != 0)
0xF5AC	0x4C7E    LDR	R4, [PC, #504]
0xF5AE	0x6824    LDR	R4, [R4, #0]
0xF5B0	0x3418    ADDS	R4, #24
0xF5B2	0x6824    LDR	R4, [R4, #0]
0xF5B4	0xB124    CBZ	R4, L_Process_TP_Up189
;Ducati_logger_driver.c, 4414 :: 		exec_cimage->OnUpPtr();
0xF5B6	0x4C7C    LDR	R4, [PC, #496]
0xF5B8	0x6824    LDR	R4, [R4, #0]
0xF5BA	0x3418    ADDS	R4, #24
0xF5BC	0x6822    LDR	R2, [R4, #0]
0xF5BE	0x4790    BLX	R2
L_Process_TP_Up189:
;Ducati_logger_driver.c, 4415 :: 		if (PressedObject == (TPointer)exec_cimage)
0xF5C0	0x4A79    LDR	R2, [PC, #484]
0xF5C2	0x6813    LDR	R3, [R2, #0]
0xF5C4	0x4A75    LDR	R2, [PC, #468]
0xF5C6	0x6812    LDR	R2, [R2, #0]
0xF5C8	0x429A    CMP	R2, R3
0xF5CA	0xD109    BNE	L_Process_TP_Up190
;Ducati_logger_driver.c, 4416 :: 		if (exec_cimage->OnClickPtr != 0)
0xF5CC	0x4C76    LDR	R4, [PC, #472]
0xF5CE	0x6824    LDR	R4, [R4, #0]
0xF5D0	0x3420    ADDS	R4, #32
0xF5D2	0x6824    LDR	R4, [R4, #0]
0xF5D4	0xB124    CBZ	R4, L_Process_TP_Up191
;Ducati_logger_driver.c, 4417 :: 		exec_cimage->OnClickPtr();
0xF5D6	0x4C74    LDR	R4, [PC, #464]
0xF5D8	0x6824    LDR	R4, [R4, #0]
0xF5DA	0x3420    ADDS	R4, #32
0xF5DC	0x6822    LDR	R2, [R4, #0]
0xF5DE	0x4790    BLX	R2
L_Process_TP_Up191:
L_Process_TP_Up190:
;Ducati_logger_driver.c, 4418 :: 		PressedObject = 0;
0xF5E0	0x2300    MOVS	R3, #0
0xF5E2	0x4A6E    LDR	R2, [PC, #440]
0xF5E4	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4419 :: 		PressedObjectType = -1;
0xF5E6	0xF64F73FF  MOVW	R3, #65535
0xF5EA	0xB21B    SXTH	R3, R3
0xF5EC	0x4A6C    LDR	R2, [PC, #432]
0xF5EE	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4420 :: 		return;
0xF5F0	0xE0CB    B	L_end_Process_TP_Up
;Ducati_logger_driver.c, 4421 :: 		}
L_Process_TP_Up188:
;Ducati_logger_driver.c, 4422 :: 		}
L_Process_TP_Up187:
;Ducati_logger_driver.c, 4425 :: 		if (_object_count == circle_order) {
0xF5F2	0x4A6E    LDR	R2, [PC, #440]
0xF5F4	0xF9B23000  LDRSH	R3, [R2, #0]
0xF5F8	0x4A66    LDR	R2, [PC, #408]
0xF5FA	0xF9B22000  LDRSH	R2, [R2, #0]
0xF5FE	0x429A    CMP	R2, R3
0xF600	0xD128    BNE	L_Process_TP_Up192
;Ducati_logger_driver.c, 4426 :: 		if (exec_circle->Active == 1) {
0xF602	0x4A6B    LDR	R2, [PC, #428]
0xF604	0x6812    LDR	R2, [R2, #0]
0xF606	0x3211    ADDS	R2, #17
0xF608	0x7812    LDRB	R2, [R2, #0]
0xF60A	0x2A01    CMP	R2, #1
0xF60C	0xD122    BNE	L_Process_TP_Up193
;Ducati_logger_driver.c, 4427 :: 		if (exec_circle->OnUpPtr != 0)
0xF60E	0x4C68    LDR	R4, [PC, #416]
0xF610	0x6824    LDR	R4, [R4, #0]
0xF612	0x3420    ADDS	R4, #32
0xF614	0x6824    LDR	R4, [R4, #0]
0xF616	0xB124    CBZ	R4, L_Process_TP_Up194
;Ducati_logger_driver.c, 4428 :: 		exec_circle->OnUpPtr();
0xF618	0x4C65    LDR	R4, [PC, #404]
0xF61A	0x6824    LDR	R4, [R4, #0]
0xF61C	0x3420    ADDS	R4, #32
0xF61E	0x6822    LDR	R2, [R4, #0]
0xF620	0x4790    BLX	R2
L_Process_TP_Up194:
;Ducati_logger_driver.c, 4429 :: 		if (PressedObject == (TPointer)exec_circle)
0xF622	0x4A63    LDR	R2, [PC, #396]
0xF624	0x6813    LDR	R3, [R2, #0]
0xF626	0x4A5D    LDR	R2, [PC, #372]
0xF628	0x6812    LDR	R2, [R2, #0]
0xF62A	0x429A    CMP	R2, R3
0xF62C	0xD109    BNE	L_Process_TP_Up195
;Ducati_logger_driver.c, 4430 :: 		if (exec_circle->OnClickPtr != 0)
0xF62E	0x4C60    LDR	R4, [PC, #384]
0xF630	0x6824    LDR	R4, [R4, #0]
0xF632	0x3428    ADDS	R4, #40
0xF634	0x6824    LDR	R4, [R4, #0]
0xF636	0xB124    CBZ	R4, L_Process_TP_Up196
;Ducati_logger_driver.c, 4431 :: 		exec_circle->OnClickPtr();
0xF638	0x4C5D    LDR	R4, [PC, #372]
0xF63A	0x6824    LDR	R4, [R4, #0]
0xF63C	0x3428    ADDS	R4, #40
0xF63E	0x6822    LDR	R2, [R4, #0]
0xF640	0x4790    BLX	R2
L_Process_TP_Up196:
L_Process_TP_Up195:
;Ducati_logger_driver.c, 4432 :: 		PressedObject = 0;
0xF642	0x2300    MOVS	R3, #0
0xF644	0x4A55    LDR	R2, [PC, #340]
0xF646	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4433 :: 		PressedObjectType = -1;
0xF648	0xF64F73FF  MOVW	R3, #65535
0xF64C	0xB21B    SXTH	R3, R3
0xF64E	0x4A54    LDR	R2, [PC, #336]
0xF650	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4434 :: 		return;
0xF652	0xE09A    B	L_end_Process_TP_Up
;Ducati_logger_driver.c, 4435 :: 		}
L_Process_TP_Up193:
;Ducati_logger_driver.c, 4436 :: 		}
L_Process_TP_Up192:
;Ducati_logger_driver.c, 4439 :: 		if (_object_count == circle_button_order) {
0xF654	0x4A57    LDR	R2, [PC, #348]
0xF656	0xF9B23000  LDRSH	R3, [R2, #0]
0xF65A	0x4A4E    LDR	R2, [PC, #312]
0xF65C	0xF9B22000  LDRSH	R2, [R2, #0]
0xF660	0x429A    CMP	R2, R3
0xF662	0xD128    BNE	L_Process_TP_Up197
;Ducati_logger_driver.c, 4440 :: 		if (exec_circle_button->Active == 1) {
0xF664	0x4A54    LDR	R2, [PC, #336]
0xF666	0x6812    LDR	R2, [R2, #0]
0xF668	0x3211    ADDS	R2, #17
0xF66A	0x7812    LDRB	R2, [R2, #0]
0xF66C	0x2A01    CMP	R2, #1
0xF66E	0xD122    BNE	L_Process_TP_Up198
;Ducati_logger_driver.c, 4441 :: 		if (exec_circle_button->OnUpPtr != 0)
0xF670	0x4C51    LDR	R4, [PC, #324]
0xF672	0x6824    LDR	R4, [R4, #0]
0xF674	0x3430    ADDS	R4, #48
0xF676	0x6824    LDR	R4, [R4, #0]
0xF678	0xB124    CBZ	R4, L_Process_TP_Up199
;Ducati_logger_driver.c, 4442 :: 		exec_circle_button->OnUpPtr();
0xF67A	0x4C4F    LDR	R4, [PC, #316]
0xF67C	0x6824    LDR	R4, [R4, #0]
0xF67E	0x3430    ADDS	R4, #48
0xF680	0x6822    LDR	R2, [R4, #0]
0xF682	0x4790    BLX	R2
L_Process_TP_Up199:
;Ducati_logger_driver.c, 4443 :: 		if (PressedObject == (TPointer)exec_circle_button)
0xF684	0x4A4C    LDR	R2, [PC, #304]
0xF686	0x6813    LDR	R3, [R2, #0]
0xF688	0x4A44    LDR	R2, [PC, #272]
0xF68A	0x6812    LDR	R2, [R2, #0]
0xF68C	0x429A    CMP	R2, R3
0xF68E	0xD109    BNE	L_Process_TP_Up200
;Ducati_logger_driver.c, 4444 :: 		if (exec_circle_button->OnClickPtr != 0)
0xF690	0x4C49    LDR	R4, [PC, #292]
0xF692	0x6824    LDR	R4, [R4, #0]
0xF694	0x3438    ADDS	R4, #56
0xF696	0x6824    LDR	R4, [R4, #0]
0xF698	0xB124    CBZ	R4, L_Process_TP_Up201
;Ducati_logger_driver.c, 4445 :: 		exec_circle_button->OnClickPtr();
0xF69A	0x4C47    LDR	R4, [PC, #284]
0xF69C	0x6824    LDR	R4, [R4, #0]
0xF69E	0x3438    ADDS	R4, #56
0xF6A0	0x6822    LDR	R2, [R4, #0]
0xF6A2	0x4790    BLX	R2
L_Process_TP_Up201:
L_Process_TP_Up200:
;Ducati_logger_driver.c, 4446 :: 		PressedObject = 0;
0xF6A4	0x2300    MOVS	R3, #0
0xF6A6	0x4A3D    LDR	R2, [PC, #244]
0xF6A8	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4447 :: 		PressedObjectType = -1;
0xF6AA	0xF64F73FF  MOVW	R3, #65535
0xF6AE	0xB21B    SXTH	R3, R3
0xF6B0	0x4A3B    LDR	R2, [PC, #236]
0xF6B2	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4448 :: 		return;
0xF6B4	0xE069    B	L_end_Process_TP_Up
;Ducati_logger_driver.c, 4449 :: 		}
L_Process_TP_Up198:
;Ducati_logger_driver.c, 4450 :: 		}
L_Process_TP_Up197:
;Ducati_logger_driver.c, 4453 :: 		if (_object_count == box_order) {
0xF6B6	0x4A41    LDR	R2, [PC, #260]
0xF6B8	0xF9B23000  LDRSH	R3, [R2, #0]
0xF6BC	0x4A35    LDR	R2, [PC, #212]
0xF6BE	0xF9B22000  LDRSH	R2, [R2, #0]
0xF6C2	0x429A    CMP	R2, R3
0xF6C4	0xD128    BNE	L_Process_TP_Up202
;Ducati_logger_driver.c, 4454 :: 		if (exec_box->Active == 1) {
0xF6C6	0x4A3E    LDR	R2, [PC, #248]
0xF6C8	0x6812    LDR	R2, [R2, #0]
0xF6CA	0x3213    ADDS	R2, #19
0xF6CC	0x7812    LDRB	R2, [R2, #0]
0xF6CE	0x2A01    CMP	R2, #1
0xF6D0	0xD122    BNE	L_Process_TP_Up203
;Ducati_logger_driver.c, 4455 :: 		if (exec_box->OnUpPtr != 0)
0xF6D2	0x4C3B    LDR	R4, [PC, #236]
0xF6D4	0x6824    LDR	R4, [R4, #0]
0xF6D6	0x3424    ADDS	R4, #36
0xF6D8	0x6824    LDR	R4, [R4, #0]
0xF6DA	0xB124    CBZ	R4, L_Process_TP_Up204
;Ducati_logger_driver.c, 4456 :: 		exec_box->OnUpPtr();
0xF6DC	0x4C38    LDR	R4, [PC, #224]
0xF6DE	0x6824    LDR	R4, [R4, #0]
0xF6E0	0x3424    ADDS	R4, #36
0xF6E2	0x6822    LDR	R2, [R4, #0]
0xF6E4	0x4790    BLX	R2
L_Process_TP_Up204:
;Ducati_logger_driver.c, 4457 :: 		if (PressedObject == (TPointer)exec_box)
0xF6E6	0x4A36    LDR	R2, [PC, #216]
0xF6E8	0x6813    LDR	R3, [R2, #0]
0xF6EA	0x4A2C    LDR	R2, [PC, #176]
0xF6EC	0x6812    LDR	R2, [R2, #0]
0xF6EE	0x429A    CMP	R2, R3
0xF6F0	0xD109    BNE	L_Process_TP_Up205
;Ducati_logger_driver.c, 4458 :: 		if (exec_box->OnClickPtr != 0)
0xF6F2	0x4C33    LDR	R4, [PC, #204]
0xF6F4	0x6824    LDR	R4, [R4, #0]
0xF6F6	0x342C    ADDS	R4, #44
0xF6F8	0x6824    LDR	R4, [R4, #0]
0xF6FA	0xB124    CBZ	R4, L_Process_TP_Up206
;Ducati_logger_driver.c, 4459 :: 		exec_box->OnClickPtr();
0xF6FC	0x4C30    LDR	R4, [PC, #192]
0xF6FE	0x6824    LDR	R4, [R4, #0]
0xF700	0x342C    ADDS	R4, #44
0xF702	0x6822    LDR	R2, [R4, #0]
0xF704	0x4790    BLX	R2
L_Process_TP_Up206:
L_Process_TP_Up205:
;Ducati_logger_driver.c, 4460 :: 		PressedObject = 0;
0xF706	0x2300    MOVS	R3, #0
0xF708	0x4A24    LDR	R2, [PC, #144]
0xF70A	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4461 :: 		PressedObjectType = -1;
0xF70C	0xF64F73FF  MOVW	R3, #65535
0xF710	0xB21B    SXTH	R3, R3
0xF712	0x4A23    LDR	R2, [PC, #140]
0xF714	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4462 :: 		return;
0xF716	0xE038    B	L_end_Process_TP_Up
;Ducati_logger_driver.c, 4463 :: 		}
L_Process_TP_Up203:
;Ducati_logger_driver.c, 4464 :: 		}
L_Process_TP_Up202:
;Ducati_logger_driver.c, 4467 :: 		if (_object_count == cbox_order) {
0xF718	0x4A2A    LDR	R2, [PC, #168]
0xF71A	0xF9B23000  LDRSH	R3, [R2, #0]
0xF71E	0x4A1D    LDR	R2, [PC, #116]
0xF720	0xF9B22000  LDRSH	R2, [R2, #0]
0xF724	0x429A    CMP	R2, R3
0xF726	0xD128    BNE	L_Process_TP_Up207
;Ducati_logger_driver.c, 4468 :: 		if (exec_cbox->Active == 1) {
0xF728	0x4A27    LDR	R2, [PC, #156]
0xF72A	0x6812    LDR	R2, [R2, #0]
0xF72C	0x3213    ADDS	R2, #19
0xF72E	0x7812    LDRB	R2, [R2, #0]
0xF730	0x2A01    CMP	R2, #1
0xF732	0xD122    BNE	L_Process_TP_Up208
;Ducati_logger_driver.c, 4469 :: 		if (exec_cbox->OnUpPtr != 0)
0xF734	0x4C24    LDR	R4, [PC, #144]
0xF736	0x6824    LDR	R4, [R4, #0]
0xF738	0x3424    ADDS	R4, #36
0xF73A	0x6824    LDR	R4, [R4, #0]
0xF73C	0xB124    CBZ	R4, L_Process_TP_Up209
;Ducati_logger_driver.c, 4470 :: 		exec_cbox->OnUpPtr();
0xF73E	0x4C22    LDR	R4, [PC, #136]
0xF740	0x6824    LDR	R4, [R4, #0]
0xF742	0x3424    ADDS	R4, #36
0xF744	0x6822    LDR	R2, [R4, #0]
0xF746	0x4790    BLX	R2
L_Process_TP_Up209:
;Ducati_logger_driver.c, 4471 :: 		if (PressedObject == (TPointer)exec_cbox)
0xF748	0x4A1F    LDR	R2, [PC, #124]
0xF74A	0x6813    LDR	R3, [R2, #0]
0xF74C	0x4A13    LDR	R2, [PC, #76]
0xF74E	0x6812    LDR	R2, [R2, #0]
0xF750	0x429A    CMP	R2, R3
0xF752	0xD109    BNE	L_Process_TP_Up210
;Ducati_logger_driver.c, 4472 :: 		if (exec_cbox->OnClickPtr != 0)
0xF754	0x4C1C    LDR	R4, [PC, #112]
0xF756	0x6824    LDR	R4, [R4, #0]
0xF758	0x342C    ADDS	R4, #44
0xF75A	0x6824    LDR	R4, [R4, #0]
0xF75C	0xB124    CBZ	R4, L_Process_TP_Up211
;Ducati_logger_driver.c, 4473 :: 		exec_cbox->OnClickPtr();
0xF75E	0x4C1A    LDR	R4, [PC, #104]
0xF760	0x6824    LDR	R4, [R4, #0]
0xF762	0x342C    ADDS	R4, #44
0xF764	0x6822    LDR	R2, [R4, #0]
0xF766	0x4790    BLX	R2
L_Process_TP_Up211:
L_Process_TP_Up210:
;Ducati_logger_driver.c, 4474 :: 		PressedObject = 0;
0xF768	0x2300    MOVS	R3, #0
0xF76A	0x4A0C    LDR	R2, [PC, #48]
0xF76C	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4475 :: 		PressedObjectType = -1;
0xF76E	0xF64F73FF  MOVW	R3, #65535
0xF772	0xB21B    SXTH	R3, R3
0xF774	0x4A0A    LDR	R2, [PC, #40]
0xF776	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4476 :: 		return;
0xF778	0xE007    B	L_end_Process_TP_Up
;Ducati_logger_driver.c, 4477 :: 		}
L_Process_TP_Up208:
;Ducati_logger_driver.c, 4478 :: 		}
L_Process_TP_Up207:
;Ducati_logger_driver.c, 4480 :: 		}
L_Process_TP_Up171:
;Ducati_logger_driver.c, 4481 :: 		PressedObject = 0;
0xF77A	0x2300    MOVS	R3, #0
0xF77C	0x4A07    LDR	R2, [PC, #28]
0xF77E	0x6013    STR	R3, [R2, #0]
;Ducati_logger_driver.c, 4482 :: 		PressedObjectType = -1;
0xF780	0xF64F73FF  MOVW	R3, #65535
0xF784	0xB21B    SXTH	R3, R3
0xF786	0x4A06    LDR	R2, [PC, #24]
0xF788	0x8013    STRH	R3, [R2, #0]
;Ducati_logger_driver.c, 4483 :: 		}
L_end_Process_TP_Up:
0xF78A	0xF8DDE000  LDR	LR, [SP, #0]
0xF78E	0xB003    ADD	SP, SP, #12
0xF790	0x4770    BX	LR
0xF792	0xBF00    NOP
0xF794	0x222A2000  	__object_count+0
0xF798	0x22342000  	_exec_image+0
0xF79C	0x22502000  	_PressedObject+0
0xF7A0	0x224E2000  	_PressedObjectType+0
0xF7A4	0x22582000  	_cimage_order+0
0xF7A8	0x22382000  	_exec_cimage+0
0xF7AC	0x225A2000  	_circle_order+0
0xF7B0	0x223C2000  	_exec_circle+0
0xF7B4	0x225C2000  	_circle_button_order+0
0xF7B8	0x22402000  	_exec_circle_button+0
0xF7BC	0x225E2000  	_box_order+0
0xF7C0	0x22442000  	_exec_box+0
0xF7C4	0x22602000  	_cbox_order+0
0xF7C8	0x22482000  	_exec_cbox+0
; end of _Process_TP_Up
_EnableInterrupts:
;__Lib_System_4XX.c, 104 :: 		
0x17730	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 107 :: 		
0x17732	0xF3EF8C10  MRS	R12, #16
0x17736	0x4660    MOV	R0, R12
; result start address is: 0 (R0)
;__Lib_System_4XX.c, 108 :: 		
0x17738	0xB662    CPSIE	i
;__Lib_System_4XX.c, 110 :: 		
; result end address is: 0 (R0)
;__Lib_System_4XX.c, 111 :: 		
L_end_EnableInterrupts:
0x1773A	0xB001    ADD	SP, SP, #4
0x1773C	0x4770    BX	LR
; end of _EnableInterrupts
_Run_Logger:
;Ducati_logger_events_code.c, 83 :: 		void Run_Logger(){
0x17740	0xB081    SUB	SP, SP, #4
0x17742	0xF8CDE000  STR	LR, [SP, #0]
;Ducati_logger_events_code.c, 84 :: 		switch (Logger_State) {
0x17746	0xE024    B	L_Run_Logger10
;Ducati_logger_events_code.c, 85 :: 		case 0 : {
L_Run_Logger12:
;Ducati_logger_events_code.c, 86 :: 		checkRTC();            // Speedometer screen
0x17748	0xF7F8F840  BL	_checkRTC+0
;Ducati_logger_events_code.c, 87 :: 		checkPowerM();
0x1774C	0xF7F2F9E8  BL	_checkPowerM+0
;Ducati_logger_events_code.c, 88 :: 		Sensors_Read();
0x17750	0xF7FFFE5C  BL	_Sensors_Read+0
;Ducati_logger_events_code.c, 89 :: 		}; break;
0x17754	0xE041    B	L_Run_Logger11
;Ducati_logger_events_code.c, 90 :: 		case 1 : {
L_Run_Logger13:
;Ducati_logger_events_code.c, 91 :: 		checkRTC();            // Tachometer screen
0x17756	0xF7F8F839  BL	_checkRTC+0
;Ducati_logger_events_code.c, 92 :: 		checkPowerM();
0x1775A	0xF7F2F9E1  BL	_checkPowerM+0
;Ducati_logger_events_code.c, 93 :: 		Sensors_Read();
0x1775E	0xF7FFFE55  BL	_Sensors_Read+0
;Ducati_logger_events_code.c, 94 :: 		}; break;
0x17762	0xE03A    B	L_Run_Logger11
;Ducati_logger_events_code.c, 96 :: 		case 2 : {
L_Run_Logger14:
;Ducati_logger_events_code.c, 97 :: 		checkRTC();            // Settings screen
0x17764	0xF7F8F832  BL	_checkRTC+0
;Ducati_logger_events_code.c, 98 :: 		checkPowerM();
0x17768	0xF7F2F9DA  BL	_checkPowerM+0
;Ducati_logger_events_code.c, 99 :: 		}; break;
0x1776C	0xE035    B	L_Run_Logger11
;Ducati_logger_events_code.c, 100 :: 		case 3 : {                       // RTCC screen
L_Run_Logger15:
;Ducati_logger_events_code.c, 101 :: 		if (PenDown == 0)
0x1776E	0x481D    LDR	R0, [PC, #116]
0x17770	0x7800    LDRB	R0, [R0, #0]
0x17772	0x2800    CMP	R0, #0
0x17774	0xD101    BNE	L_Run_Logger16
;Ducati_logger_events_code.c, 102 :: 		doRTC_Example();
0x17776	0xF7FFFDD9  BL	_doRTC_Example+0
L_Run_Logger16:
;Ducati_logger_events_code.c, 103 :: 		}; break;
0x1777A	0xE02E    B	L_Run_Logger11
;Ducati_logger_events_code.c, 104 :: 		case 4 : {
L_Run_Logger17:
;Ducati_logger_events_code.c, 105 :: 		doAccel();
0x1777C	0xF7FFFD94  BL	_doAccel+0
;Ducati_logger_events_code.c, 106 :: 		};   break;                  // Accelerometer Test
0x17780	0xE02B    B	L_Run_Logger11
;Ducati_logger_events_code.c, 107 :: 		case 5 : {
L_Run_Logger18:
;Ducati_logger_events_code.c, 108 :: 		doGyro();                      // Gyro Test
0x17782	0xF7F7F9FB  BL	_doGyro+0
;Ducati_logger_events_code.c, 109 :: 		}; break;
0x17786	0xE028    B	L_Run_Logger11
;Ducati_logger_events_code.c, 110 :: 		case 6 : {
L_Run_Logger19:
;Ducati_logger_events_code.c, 111 :: 		doMagnet();                      // Gyro Test
0x17788	0xF7F7F96C  BL	_doMagnet+0
;Ducati_logger_events_code.c, 112 :: 		}break;                   //Sensor Calibration
0x1778C	0xE025    B	L_Run_Logger11
;Ducati_logger_events_code.c, 113 :: 		case 7 : {                       // Oxygen sensor test
L_Run_Logger20:
;Ducati_logger_events_code.c, 115 :: 		}; break;
0x1778E	0xE024    B	L_Run_Logger11
;Ducati_logger_events_code.c, 116 :: 		case 8 : {                       // Shift Light Adjust
L_Run_Logger21:
;Ducati_logger_events_code.c, 118 :: 		}; break;
0x17790	0xE023    B	L_Run_Logger11
;Ducati_logger_events_code.c, 119 :: 		}
L_Run_Logger10:
0x17792	0x4815    LDR	R0, [PC, #84]
0x17794	0x7800    LDRB	R0, [R0, #0]
0x17796	0x2800    CMP	R0, #0
0x17798	0xD0D6    BEQ	L_Run_Logger12
0x1779A	0x4813    LDR	R0, [PC, #76]
0x1779C	0x7800    LDRB	R0, [R0, #0]
0x1779E	0x2801    CMP	R0, #1
0x177A0	0xD0D9    BEQ	L_Run_Logger13
0x177A2	0x4811    LDR	R0, [PC, #68]
0x177A4	0x7800    LDRB	R0, [R0, #0]
0x177A6	0x2802    CMP	R0, #2
0x177A8	0xD0DC    BEQ	L_Run_Logger14
0x177AA	0x480F    LDR	R0, [PC, #60]
0x177AC	0x7800    LDRB	R0, [R0, #0]
0x177AE	0x2803    CMP	R0, #3
0x177B0	0xD0DD    BEQ	L_Run_Logger15
0x177B2	0x480D    LDR	R0, [PC, #52]
0x177B4	0x7800    LDRB	R0, [R0, #0]
0x177B6	0x2804    CMP	R0, #4
0x177B8	0xD0E0    BEQ	L_Run_Logger17
0x177BA	0x480B    LDR	R0, [PC, #44]
0x177BC	0x7800    LDRB	R0, [R0, #0]
0x177BE	0x2805    CMP	R0, #5
0x177C0	0xD0DF    BEQ	L_Run_Logger18
0x177C2	0x4809    LDR	R0, [PC, #36]
0x177C4	0x7800    LDRB	R0, [R0, #0]
0x177C6	0x2806    CMP	R0, #6
0x177C8	0xD0DE    BEQ	L_Run_Logger19
0x177CA	0x4807    LDR	R0, [PC, #28]
0x177CC	0x7800    LDRB	R0, [R0, #0]
0x177CE	0x2807    CMP	R0, #7
0x177D0	0xD0DD    BEQ	L_Run_Logger20
0x177D2	0x4805    LDR	R0, [PC, #20]
0x177D4	0x7800    LDRB	R0, [R0, #0]
0x177D6	0x2808    CMP	R0, #8
0x177D8	0xD0DA    BEQ	L_Run_Logger21
L_Run_Logger11:
;Ducati_logger_events_code.c, 120 :: 		}
L_end_Run_Logger:
0x177DA	0xF8DDE000  LDR	LR, [SP, #0]
0x177DE	0xB001    ADD	SP, SP, #4
0x177E0	0x4770    BX	LR
0x177E2	0xBF00    NOP
0x177E4	0x22292000  	_PenDown+0
0x177E8	0x22962000  	_Logger_State+0
; end of _Run_Logger
_checkRTC:
;RTCC_main.c, 655 :: 		void checkRTC(){
0xF7CC	0xB081    SUB	SP, SP, #4
0xF7CE	0xF8CDE000  STR	LR, [SP, #0]
;RTCC_main.c, 656 :: 		if (RTCC_Read(&MyTime)){
0xF7D2	0x4818    LDR	R0, [PC, #96]
0xF7D4	0xF7F5FB98  BL	_RTCC_Read+0
0xF7D8	0x2800    CMP	R0, #0
0xF7DA	0xD026    BEQ	L_checkRTC74
;RTCC_main.c, 657 :: 		if ((MyTime.minutes != OldMyTime.minutes) || (MyTime.hours != OldMyTime.hours) || (MyTime.ampm != OldMyTime.ampm)){
0xF7DC	0x4816    LDR	R0, [PC, #88]
0xF7DE	0xF9901000  LDRSB	R1, [R0, #0]
0xF7E2	0x4816    LDR	R0, [PC, #88]
0xF7E4	0xF9900000  LDRSB	R0, [R0, #0]
0xF7E8	0x4288    CMP	R0, R1
0xF7EA	0xD110    BNE	L__checkRTC85
0xF7EC	0x4814    LDR	R0, [PC, #80]
0xF7EE	0xF9901000  LDRSB	R1, [R0, #0]
0xF7F2	0x4814    LDR	R0, [PC, #80]
0xF7F4	0xF9900000  LDRSB	R0, [R0, #0]
0xF7F8	0x4288    CMP	R0, R1
0xF7FA	0xD108    BNE	L__checkRTC84
0xF7FC	0x4812    LDR	R0, [PC, #72]
0xF7FE	0xF9901000  LDRSB	R1, [R0, #0]
0xF802	0x480C    LDR	R0, [PC, #48]
0xF804	0xF9900000  LDRSB	R0, [R0, #0]
0xF808	0x4288    CMP	R0, R1
0xF80A	0xD100    BNE	L__checkRTC83
0xF80C	0xE00D    B	L_checkRTC77
L__checkRTC85:
L__checkRTC84:
L__checkRTC83:
;RTCC_main.c, 658 :: 		UpdateTime(&MyTime);
0xF80E	0x4809    LDR	R0, [PC, #36]
0xF810	0xF7FCFA1C  BL	_UpdateTime+0
;RTCC_main.c, 659 :: 		OldMyTime = MyTime;
0xF814	0x2308    MOVS	R3, #8
0xF816	0x4A0C    LDR	R2, [PC, #48]
0xF818	0x4906    LDR	R1, [PC, #24]
L_checkRTC78:
0xF81A	0x7808    LDRB	R0, [R1, #0]
0xF81C	0x7010    STRB	R0, [R2, #0]
0xF81E	0x1E5B    SUBS	R3, R3, #1
0xF820	0xB2DB    UXTB	R3, R3
0xF822	0x1C49    ADDS	R1, R1, #1
0xF824	0x1C52    ADDS	R2, R2, #1
0xF826	0x2B00    CMP	R3, #0
0xF828	0xD1F7    BNE	L_checkRTC78
;RTCC_main.c, 660 :: 		}
L_checkRTC77:
;RTCC_main.c, 661 :: 		}
L_checkRTC74:
;RTCC_main.c, 662 :: 		}
L_end_checkRTC:
0xF82A	0xF8DDE000  LDR	LR, [SP, #0]
0xF82E	0xB001    ADD	SP, SP, #4
0xF830	0x4770    BX	LR
0xF832	0xBF00    NOP
0xF834	0x27182000  	_MyTime+0
0xF838	0x02E62000  	_OldMyTime+2
0xF83C	0x271A2000  	_MyTime+2
0xF840	0x02E72000  	_OldMyTime+3
0xF844	0x271B2000  	_MyTime+3
0xF848	0x02E42000  	_OldMyTime+0
; end of _checkRTC
_UpdateTime:
;RTCC_main.c, 625 :: 		void UpdateTime(TTime *RTCC_Time){
; RTCC_Time start address is: 0 (R0)
0xBC4C	0xB081    SUB	SP, SP, #4
0xBC4E	0xF8CDE000  STR	LR, [SP, #0]
; RTCC_Time end address is: 0 (R0)
; RTCC_Time start address is: 0 (R0)
;RTCC_main.c, 626 :: 		Label19_Caption[0] = (RTCC_Time->hours / 10) + 48;
0xBC52	0x1CC3    ADDS	R3, R0, #3
0xBC54	0xF9932000  LDRSB	R2, [R3, #0]
0xBC58	0x210A    MOVS	R1, #10
0xBC5A	0xB249    SXTB	R1, R1
0xBC5C	0xFB92F1F1  SDIV	R1, R2, R1
0xBC60	0xB249    SXTB	R1, R1
0xBC62	0xF2010230  ADDW	R2, R1, #48
0xBC66	0x4938    LDR	R1, [PC, #224]
0xBC68	0x700A    STRB	R2, [R1, #0]
;RTCC_main.c, 627 :: 		Label19_Caption[1] = (RTCC_Time->hours % 10) + 48;
0xBC6A	0xF9933000  LDRSB	R3, [R3, #0]
0xBC6E	0x220A    MOVS	R2, #10
0xBC70	0xB252    SXTB	R2, R2
0xBC72	0xFB93F1F2  SDIV	R1, R3, R2
0xBC76	0xFB023111  MLS	R1, R2, R1, R3
0xBC7A	0xB249    SXTB	R1, R1
0xBC7C	0xF2010230  ADDW	R2, R1, #48
0xBC80	0x4932    LDR	R1, [PC, #200]
0xBC82	0x700A    STRB	R2, [R1, #0]
;RTCC_main.c, 628 :: 		Label19_Caption[2] = ':';
0xBC84	0x223A    MOVS	R2, #58
0xBC86	0x4932    LDR	R1, [PC, #200]
0xBC88	0x700A    STRB	R2, [R1, #0]
;RTCC_main.c, 629 :: 		Label19_Caption[3] = (RTCC_Time->minutes / 10) + 48;
0xBC8A	0x1C83    ADDS	R3, R0, #2
0xBC8C	0xF9932000  LDRSB	R2, [R3, #0]
0xBC90	0x210A    MOVS	R1, #10
0xBC92	0xB249    SXTB	R1, R1
0xBC94	0xFB92F1F1  SDIV	R1, R2, R1
0xBC98	0xB249    SXTB	R1, R1
0xBC9A	0xF2010230  ADDW	R2, R1, #48
0xBC9E	0x492D    LDR	R1, [PC, #180]
0xBCA0	0x700A    STRB	R2, [R1, #0]
;RTCC_main.c, 630 :: 		Label19_Caption[4] = (RTCC_Time->minutes % 10) + 48;
0xBCA2	0xF9933000  LDRSB	R3, [R3, #0]
0xBCA6	0x220A    MOVS	R2, #10
0xBCA8	0xB252    SXTB	R2, R2
0xBCAA	0xFB93F1F2  SDIV	R1, R3, R2
0xBCAE	0xFB023111  MLS	R1, R2, R1, R3
0xBCB2	0xB249    SXTB	R1, R1
0xBCB4	0xF2010230  ADDW	R2, R1, #48
0xBCB8	0x4927    LDR	R1, [PC, #156]
0xBCBA	0x700A    STRB	R2, [R1, #0]
;RTCC_main.c, 631 :: 		Label19_Caption[5] = ' ';
0xBCBC	0x2220    MOVS	R2, #32
0xBCBE	0x4927    LDR	R1, [PC, #156]
0xBCC0	0x700A    STRB	R2, [R1, #0]
;RTCC_main.c, 632 :: 		if (RTCC_Time->ampm == 0){
0xBCC2	0xF9901000  LDRSB	R1, [R0, #0]
0xBCC6	0xB931    CBNZ	R1, L_UpdateTime71
; RTCC_Time end address is: 0 (R0)
;RTCC_main.c, 633 :: 		Label19_Caption[6] = 'A';
0xBCC8	0x2241    MOVS	R2, #65
0xBCCA	0x4925    LDR	R1, [PC, #148]
0xBCCC	0x700A    STRB	R2, [R1, #0]
;RTCC_main.c, 634 :: 		Label19_Caption[7] = 'M';
0xBCCE	0x224D    MOVS	R2, #77
0xBCD0	0x4924    LDR	R1, [PC, #144]
0xBCD2	0x700A    STRB	R2, [R1, #0]
;RTCC_main.c, 635 :: 		}
0xBCD4	0xE009    B	L_UpdateTime72
L_UpdateTime71:
;RTCC_main.c, 636 :: 		else if (RTCC_Time->ampm == 1){
; RTCC_Time start address is: 0 (R0)
0xBCD6	0xF9901000  LDRSB	R1, [R0, #0]
; RTCC_Time end address is: 0 (R0)
0xBCDA	0x2901    CMP	R1, #1
0xBCDC	0xD105    BNE	L_UpdateTime73
;RTCC_main.c, 637 :: 		Label19_Caption[6] = 'P';
0xBCDE	0x2250    MOVS	R2, #80
0xBCE0	0x491F    LDR	R1, [PC, #124]
0xBCE2	0x700A    STRB	R2, [R1, #0]
;RTCC_main.c, 638 :: 		Label19_Caption[7] = 'M';
0xBCE4	0x224D    MOVS	R2, #77
0xBCE6	0x491F    LDR	R1, [PC, #124]
0xBCE8	0x700A    STRB	R2, [R1, #0]
;RTCC_main.c, 639 :: 		}
L_UpdateTime73:
L_UpdateTime72:
;RTCC_main.c, 640 :: 		Label19_Caption[8] = 0;
0xBCEA	0x2200    MOVS	R2, #0
0xBCEC	0x491E    LDR	R1, [PC, #120]
0xBCEE	0x700A    STRB	R2, [R1, #0]
;RTCC_main.c, 641 :: 		TFT_Set_Brush(1, Speedometer_graphics.Color, 0, 0, 0, 0);
0xBCF0	0x2300    MOVS	R3, #0
0xBCF2	0x2200    MOVS	R2, #0
0xBCF4	0x491D    LDR	R1, [PC, #116]
0xBCF6	0x8809    LDRH	R1, [R1, #0]
0xBCF8	0xB408    PUSH	(R3)
0xBCFA	0xB404    PUSH	(R2)
0xBCFC	0x2300    MOVS	R3, #0
0xBCFE	0x2200    MOVS	R2, #0
0xBD00	0x2001    MOVS	R0, #1
0xBD02	0xF7FDFB21  BL	_TFT_Set_Brush+0
0xBD06	0xB002    ADD	SP, SP, #8
;RTCC_main.c, 642 :: 		TFT_Set_Pen(Speedometer_graphics.Color, 0);
0xBD08	0x4918    LDR	R1, [PC, #96]
0xBD0A	0x8809    LDRH	R1, [R1, #0]
0xBD0C	0xB288    UXTH	R0, R1
0xBD0E	0x2100    MOVS	R1, #0
0xBD10	0xF7FDFE4E  BL	_TFT_Set_Pen+0
;RTCC_main.c, 643 :: 		TFT_Rectangle(Label19.Left, Label19.Top, Label19.Left + 60, Label19.Top + 20);
0xBD14	0x4A16    LDR	R2, [PC, #88]
0xBD16	0x8811    LDRH	R1, [R2, #0]
0xBD18	0xF2010514  ADDW	R5, R1, #20
0xBD1C	0x4C15    LDR	R4, [PC, #84]
0xBD1E	0x8821    LDRH	R1, [R4, #0]
0xBD20	0xF201033C  ADDW	R3, R1, #60
0xBD24	0x4611    MOV	R1, R2
0xBD26	0x880A    LDRH	R2, [R1, #0]
0xBD28	0x4621    MOV	R1, R4
0xBD2A	0x8809    LDRH	R1, [R1, #0]
0xBD2C	0xB208    SXTH	R0, R1
0xBD2E	0xB211    SXTH	R1, R2
0xBD30	0xB21A    SXTH	R2, R3
0xBD32	0xB22B    SXTH	R3, R5
0xBD34	0xF7FBFF08  BL	_TFT_Rectangle+0
;RTCC_main.c, 644 :: 		DrawLabel(&Label19);
0xBD38	0x480F    LDR	R0, [PC, #60]
0xBD3A	0xF001FD65  BL	_DrawLabel+0
;RTCC_main.c, 645 :: 		}
L_end_UpdateTime:
0xBD3E	0xF8DDE000  LDR	LR, [SP, #0]
0xBD42	0xB001    ADD	SP, SP, #4
0xBD44	0x4770    BX	LR
0xBD46	0xBF00    NOP
0xBD48	0x00652000  	_Label19_Caption+0
0xBD4C	0x00662000  	_Label19_Caption+1
0xBD50	0x00672000  	_Label19_Caption+2
0xBD54	0x00682000  	_Label19_Caption+3
0xBD58	0x00692000  	_Label19_Caption+4
0xBD5C	0x006A2000  	_Label19_Caption+5
0xBD60	0x006B2000  	_Label19_Caption+6
0xBD64	0x006C2000  	_Label19_Caption+7
0xBD68	0x006D2000  	_Label19_Caption+8
0xBD6C	0x08742000  	_Speedometer_graphics+0
0xBD70	0x09102000  	_Label19+8
0xBD74	0x090E2000  	_Label19+6
0xBD78	0x09082000  	_Label19+0
; end of _UpdateTime
_Sensors_Read:
;sensors.c, 176 :: 		void Sensors_Read(){
0x1740C	0xB081    SUB	SP, SP, #4
0x1740E	0xF8CDE000  STR	LR, [SP, #0]
;sensors.c, 178 :: 		Sensors_counter++;
0x17412	0x4909    LDR	R1, [PC, #36]
0x17414	0xF9B10000  LDRSH	R0, [R1, #0]
0x17418	0x1C40    ADDS	R0, R0, #1
0x1741A	0xB200    SXTH	R0, R0
0x1741C	0x8008    STRH	R0, [R1, #0]
;sensors.c, 179 :: 		if (Sensors_counter > 2000){
0x1741E	0xF5B06FFA  CMP	R0, #2000
0x17422	0xDD05    BLE	L_Sensors_Read12
;sensors.c, 180 :: 		Get_Temperature();
0x17424	0xF7F4FE40  BL	sensors_Get_Temperature+0
;sensors.c, 202 :: 		Sensors_counter = 0;
0x17428	0x2100    MOVS	R1, #0
0x1742A	0xB209    SXTH	R1, R1
0x1742C	0x4802    LDR	R0, [PC, #8]
0x1742E	0x8001    STRH	R1, [R0, #0]
;sensors.c, 203 :: 		}
L_Sensors_Read12:
;sensors.c, 204 :: 		}
L_end_Sensors_Read:
0x17430	0xF8DDE000  LDR	LR, [SP, #0]
0x17434	0xB001    ADD	SP, SP, #4
0x17436	0x4770    BX	LR
0x17438	0x279E2000  	sensors_Sensors_counter+0
; end of _Sensors_Read
sensors_Get_Temperature:
;sensors.c, 95 :: 		static void Get_Temperature(){
0xC0A8	0xB081    SUB	SP, SP, #4
0xC0AA	0xF8CDE000  STR	LR, [SP, #0]
;sensors.c, 100 :: 		temp = ADC3_Get_Sample(6);
0xC0AE	0x2006    MOVS	R0, #6
0xC0B0	0xF7F4FE1A  BL	_ADC3_Get_Sample+0
;sensors.c, 109 :: 		}
L_end_Get_Temperature:
0xC0B4	0xF8DDE000  LDR	LR, [SP, #0]
0xC0B8	0xB001    ADD	SP, SP, #4
0xC0BA	0x4770    BX	LR
; end of sensors_Get_Temperature
_doRTC_Example:
;RTCC_main.c, 568 :: 		void doRTC_Example(){
0x1732C	0xB081    SUB	SP, SP, #4
0x1732E	0xF8CDE000  STR	LR, [SP, #0]
;RTCC_main.c, 570 :: 		Roll_Flag = 0;
0x17332	0x2100    MOVS	R1, #0
0x17334	0x4825    LDR	R0, [PC, #148]
0x17336	0x7001    STRB	R1, [R0, #0]
;RTCC_main.c, 572 :: 		if (Hour1Roll.active){
0x17338	0x4825    LDR	R0, [PC, #148]
0x1733A	0xF9B00000  LDRSH	R0, [R0, #0]
0x1733E	0xB148    CBZ	R0, L_doRTC_Example65
;RTCC_main.c, 573 :: 		Roll_Get_Level(&Hour1Roll);
0x17340	0x4824    LDR	R0, [PC, #144]
0x17342	0xF7F4FE99  BL	_Roll_Get_Level+0
;RTCC_main.c, 574 :: 		Set_Roller(&Hour1Roll, Hour1Roll.currentlevel, 1);
0x17346	0x4824    LDR	R0, [PC, #144]
0x17348	0x8800    LDRH	R0, [R0, #0]
0x1734A	0x2201    MOVS	R2, #1
0x1734C	0xB201    SXTH	R1, R0
0x1734E	0x4821    LDR	R0, [PC, #132]
0x17350	0xF7F4FED4  BL	_Set_Roller+0
;RTCC_main.c, 575 :: 		}
L_doRTC_Example65:
;RTCC_main.c, 577 :: 		if (Hour2Roll.active){
0x17354	0x4821    LDR	R0, [PC, #132]
0x17356	0xF9B00000  LDRSH	R0, [R0, #0]
0x1735A	0xB148    CBZ	R0, L_doRTC_Example66
;RTCC_main.c, 578 :: 		Roll_Get_Level(&Hour2Roll);
0x1735C	0x4820    LDR	R0, [PC, #128]
0x1735E	0xF7F4FE8B  BL	_Roll_Get_Level+0
;RTCC_main.c, 579 :: 		Set_Roller(&Hour2Roll, Hour2Roll.currentlevel, 1);
0x17362	0x4820    LDR	R0, [PC, #128]
0x17364	0x8800    LDRH	R0, [R0, #0]
0x17366	0x2201    MOVS	R2, #1
0x17368	0xB201    SXTH	R1, R0
0x1736A	0x481D    LDR	R0, [PC, #116]
0x1736C	0xF7F4FEC6  BL	_Set_Roller+0
;RTCC_main.c, 580 :: 		}
L_doRTC_Example66:
;RTCC_main.c, 582 :: 		if (Minute1Roll.active){
0x17370	0x481D    LDR	R0, [PC, #116]
0x17372	0xF9B00000  LDRSH	R0, [R0, #0]
0x17376	0xB148    CBZ	R0, L_doRTC_Example67
;RTCC_main.c, 583 :: 		Roll_Get_Level(&Minute1Roll);
0x17378	0x481C    LDR	R0, [PC, #112]
0x1737A	0xF7F4FE7D  BL	_Roll_Get_Level+0
;RTCC_main.c, 584 :: 		Set_Roller(&Minute1Roll, Minute1Roll.currentlevel, 1);
0x1737E	0x481C    LDR	R0, [PC, #112]
0x17380	0x8800    LDRH	R0, [R0, #0]
0x17382	0x2201    MOVS	R2, #1
0x17384	0xB201    SXTH	R1, R0
0x17386	0x4819    LDR	R0, [PC, #100]
0x17388	0xF7F4FEB8  BL	_Set_Roller+0
;RTCC_main.c, 585 :: 		}
L_doRTC_Example67:
;RTCC_main.c, 587 :: 		if (Minute2Roll.active){
0x1738C	0x4819    LDR	R0, [PC, #100]
0x1738E	0xF9B00000  LDRSH	R0, [R0, #0]
0x17392	0xB148    CBZ	R0, L_doRTC_Example68
;RTCC_main.c, 588 :: 		Roll_Get_Level(&Minute2Roll);
0x17394	0x4818    LDR	R0, [PC, #96]
0x17396	0xF7F4FE6F  BL	_Roll_Get_Level+0
;RTCC_main.c, 589 :: 		Set_Roller(&Minute2Roll, Minute2Roll.currentlevel, 1);
0x1739A	0x4818    LDR	R0, [PC, #96]
0x1739C	0x8800    LDRH	R0, [R0, #0]
0x1739E	0x2201    MOVS	R2, #1
0x173A0	0xB201    SXTH	R1, R0
0x173A2	0x4815    LDR	R0, [PC, #84]
0x173A4	0xF7F4FEAA  BL	_Set_Roller+0
;RTCC_main.c, 590 :: 		}
L_doRTC_Example68:
;RTCC_main.c, 592 :: 		if (AmPm.active){
0x173A8	0x4815    LDR	R0, [PC, #84]
0x173AA	0xF9B00000  LDRSH	R0, [R0, #0]
0x173AE	0xB148    CBZ	R0, L_doRTC_Example69
;RTCC_main.c, 593 :: 		Roll_Get_Level(&AmPm);
0x173B0	0x4814    LDR	R0, [PC, #80]
0x173B2	0xF7F4FE61  BL	_Roll_Get_Level+0
;RTCC_main.c, 594 :: 		Set_Roller(&AmPm, AmPm.currentlevel, 1);
0x173B6	0x4814    LDR	R0, [PC, #80]
0x173B8	0x8800    LDRH	R0, [R0, #0]
0x173BA	0x2201    MOVS	R2, #1
0x173BC	0xB201    SXTH	R1, R0
0x173BE	0x4811    LDR	R0, [PC, #68]
0x173C0	0xF7F4FE9C  BL	_Set_Roller+0
;RTCC_main.c, 595 :: 		}
L_doRTC_Example69:
;RTCC_main.c, 596 :: 		}
L_end_doRTC_Example:
0x173C4	0xF8DDE000  LDR	LR, [SP, #0]
0x173C8	0xB001    ADD	SP, SP, #4
0x173CA	0x4770    BX	LR
0x173CC	0x26E72000  	_Roll_flag+0
0x173D0	0x27322000  	_Hour1Roll+18
0x173D4	0x27202000  	_Hour1Roll+0
0x173D8	0x27302000  	_Hour1Roll+16
0x173DC	0x274A2000  	_Hour2Roll+18
0x173E0	0x27382000  	_Hour2Roll+0
0x173E4	0x27482000  	_Hour2Roll+16
0x173E8	0x27622000  	_Minute1Roll+18
0x173EC	0x27502000  	_Minute1Roll+0
0x173F0	0x27602000  	_Minute1Roll+16
0x173F4	0x277A2000  	_Minute2Roll+18
0x173F8	0x27682000  	_Minute2Roll+0
0x173FC	0x27782000  	_Minute2Roll+16
0x17400	0x27922000  	_AmPm+18
0x17404	0x27802000  	_AmPm+0
0x17408	0x27902000  	_AmPm+16
; end of _doRTC_Example
_Roll_Get_Level:
;RTCC_main.c, 190 :: 		char Roll_Get_Level(TRoller *Roller){
; Roller start address is: 0 (R0)
; Roller end address is: 0 (R0)
; Roller start address is: 0 (R0)
;RTCC_main.c, 191 :: 		Roller->currentlevel = Roller->position / (Roller->ImageHeight / Roller->levels);
0xC078	0xF2000410  ADDW	R4, R0, #16
0xC07C	0xF2000114  ADDW	R1, R0, #20
0xC080	0xF9B13000  LDRSH	R3, [R1, #0]
0xC084	0xF2000108  ADDW	R1, R0, #8
0xC088	0x880A    LDRH	R2, [R1, #0]
0xC08A	0xF2000116  ADDW	R1, R0, #22
0xC08E	0x7809    LDRB	R1, [R1, #0]
0xC090	0xFBB2F1F1  UDIV	R1, R2, R1
0xC094	0xB289    UXTH	R1, R1
0xC096	0xFBB3F1F1  UDIV	R1, R3, R1
0xC09A	0x8021    STRH	R1, [R4, #0]
;RTCC_main.c, 192 :: 		return Roller->currentlevel;
0xC09C	0xF2000110  ADDW	R1, R0, #16
; Roller end address is: 0 (R0)
0xC0A0	0x8809    LDRH	R1, [R1, #0]
0xC0A2	0xB2C8    UXTB	R0, R1
;RTCC_main.c, 193 :: 		}
L_end_Roll_Get_Level:
0xC0A4	0x4770    BX	LR
; end of _Roll_Get_Level
_Set_Roller:
;RTCC_main.c, 236 :: 		void Set_Roller(TRoller *Roller, int pos, char step){
; step start address is: 8 (R2)
; pos start address is: 4 (R1)
; Roller start address is: 0 (R0)
0xC0FC	0xB084    SUB	SP, SP, #16
0xC0FE	0xF8CDE000  STR	LR, [SP, #0]
; step end address is: 8 (R2)
; pos end address is: 4 (R1)
; Roller end address is: 0 (R0)
; Roller start address is: 0 (R0)
; pos start address is: 4 (R1)
; step start address is: 8 (R2)
;RTCC_main.c, 239 :: 		temp = pos * Roller->ImageHeight / Roller->levels + Roller->ImageHeight / Roller->levels / 2;
0xC102	0xF2000308  ADDW	R3, R0, #8
0xC106	0x881D    LDRH	R5, [R3, #0]
0xC108	0xFB01F405  MUL	R4, R1, R5
0xC10C	0xB2A4    UXTH	R4, R4
; pos end address is: 4 (R1)
0xC10E	0xF2000316  ADDW	R3, R0, #22
0xC112	0x781B    LDRB	R3, [R3, #0]
0xC114	0xFBB4F4F3  UDIV	R4, R4, R3
0xC118	0xB2A4    UXTH	R4, R4
0xC11A	0xFBB5F3F3  UDIV	R3, R5, R3
0xC11E	0xB29B    UXTH	R3, R3
0xC120	0x085B    LSRS	R3, R3, #1
0xC122	0xB29B    UXTH	R3, R3
0xC124	0x18E5    ADDS	R5, R4, R3
;RTCC_main.c, 240 :: 		temp = temp - Roller->position;
0xC126	0xF2000314  ADDW	R3, R0, #20
0xC12A	0xF9B34000  LDRSH	R4, [R3, #0]
0xC12E	0xB22B    SXTH	R3, R5
0xC130	0x1B1B    SUB	R3, R3, R4
0xC132	0xB21B    SXTH	R3, R3
; temp start address is: 16 (R4)
0xC134	0xB21C    SXTH	R4, R3
;RTCC_main.c, 241 :: 		if (temp > 0)
0xC136	0x2B00    CMP	R3, #0
0xC138	0xDD01    BLE	L_Set_Roller26
;RTCC_main.c, 242 :: 		direction = 1;
; direction start address is: 4 (R1)
0xC13A	0x2101    MOVS	R1, #1
; direction end address is: 4 (R1)
0xC13C	0xE002    B	L_Set_Roller27
L_Set_Roller26:
;RTCC_main.c, 244 :: 		direction = 0;
; direction start address is: 4 (R1)
0xC13E	0x2100    MOVS	R1, #0
;RTCC_main.c, 245 :: 		temp = -temp;
0xC140	0x4264    RSBS	R4, R4, #0
0xC142	0xB224    SXTH	R4, R4
; direction end address is: 4 (R1)
; temp end address is: 16 (R4)
;RTCC_main.c, 246 :: 		}
L_Set_Roller27:
;RTCC_main.c, 247 :: 		while (temp > step){
; temp start address is: 16 (R4)
; direction start address is: 4 (R1)
0xC144	0xF88D1004  STRB	R1, [SP, #4]
; Roller end address is: 0 (R0)
; step end address is: 8 (R2)
; direction end address is: 4 (R1)
; temp end address is: 16 (R4)
0xC148	0xB2D1    UXTB	R1, R2
0xC14A	0x4602    MOV	R2, R0
0xC14C	0xF89D0004  LDRB	R0, [SP, #4]
L_Set_Roller28:
; direction start address is: 0 (R0)
; temp start address is: 16 (R4)
; step start address is: 4 (R1)
; Roller start address is: 8 (R2)
0xC150	0x428C    CMP	R4, R1
0xC152	0xDD18    BLE	L_Set_Roller29
;RTCC_main.c, 248 :: 		Roll_Roller(Roller, direction, step);
0xC154	0x9201    STR	R2, [SP, #4]
0xC156	0xF88D1008  STRB	R1, [SP, #8]
0xC15A	0xF8AD400A  STRH	R4, [SP, #10]
0xC15E	0xF88D000C  STRB	R0, [SP, #12]
0xC162	0xF88D000D  STRB	R0, [SP, #13]
0xC166	0x4610    MOV	R0, R2
0xC168	0xB2CA    UXTB	R2, R1
0xC16A	0xF89D100D  LDRB	R1, [SP, #13]
0xC16E	0xF7F6F899  BL	_Roll_Roller+0
0xC172	0xF89D000C  LDRB	R0, [SP, #12]
0xC176	0xF9BD400A  LDRSH	R4, [SP, #10]
0xC17A	0xF89D1008  LDRB	R1, [SP, #8]
0xC17E	0x9A01    LDR	R2, [SP, #4]
;RTCC_main.c, 249 :: 		temp -= step;
0xC180	0x1A64    SUB	R4, R4, R1
0xC182	0xB224    SXTH	R4, R4
;RTCC_main.c, 250 :: 		}
; step end address is: 4 (R1)
0xC184	0xE7E4    B	L_Set_Roller28
L_Set_Roller29:
;RTCC_main.c, 251 :: 		Roll_Roller(Roller, direction, temp);
0xC186	0xB2C1    UXTB	R1, R0
; temp end address is: 16 (R4)
0xC188	0x4610    MOV	R0, R2
; direction end address is: 0 (R0)
0xC18A	0xB2E2    UXTB	R2, R4
; Roller end address is: 8 (R2)
0xC18C	0xF7F6F88A  BL	_Roll_Roller+0
;RTCC_main.c, 252 :: 		}
L_end_Set_Roller:
0xC190	0xF8DDE000  LDR	LR, [SP, #0]
0xC194	0xB004    ADD	SP, SP, #16
0xC196	0x4770    BX	LR
; end of _Set_Roller
_doAccel:
;ADXL345_main.c, 227 :: 		void doAccel(){
0x172A8	0xB081    SUB	SP, SP, #4
0x172AA	0xF8CDE000  STR	LR, [SP, #0]
;ADXL345_main.c, 228 :: 		ACCEL_Test(&Accel_vals);
0x172AE	0x4818    LDR	R0, [PC, #96]
0x172B0	0xF7F4FF04  BL	ADXL345_main_ACCEL_Test+0
;ADXL345_main.c, 229 :: 		Scroll_ACCEL(_ACCEL_UP);
0x172B4	0x2001    MOVS	R0, #1
0x172B6	0xF7F4FDC3  BL	ADXL345_main_Scroll_ACCEL+0
;ADXL345_main.c, 230 :: 		Scroll_Add_Line(_ACCEL_UP);
0x172BA	0x2001    MOVS	R0, #1
0x172BC	0xF7F4FD5E  BL	ADXL345_main_Scroll_Add_Line+0
;ADXL345_main.c, 231 :: 		WriteGraph(&Old_Accel_vals, &Accel_vals);
0x172C0	0x4913    LDR	R1, [PC, #76]
0x172C2	0x4814    LDR	R0, [PC, #80]
0x172C4	0xF7F4FE44  BL	ADXL345_main_WriteGraph+0
;ADXL345_main.c, 232 :: 		Old_accel_vals = Accel_vals;
0x172C8	0x2306    MOVS	R3, #6
0x172CA	0x4A12    LDR	R2, [PC, #72]
0x172CC	0x4910    LDR	R1, [PC, #64]
L_doAccel25:
0x172CE	0x7808    LDRB	R0, [R1, #0]
0x172D0	0x7010    STRB	R0, [R2, #0]
0x172D2	0x1E5B    SUBS	R3, R3, #1
0x172D4	0xB2DB    UXTB	R3, R3
0x172D6	0x1C49    ADDS	R1, R1, #1
0x172D8	0x1C52    ADDS	R2, R2, #1
0x172DA	0x2B00    CMP	R3, #0
0x172DC	0xD1F7    BNE	L_doAccel25
;ADXL345_main.c, 234 :: 		Display_Value(&Label3, Accel_vals.Xvalue);
0x172DE	0x480C    LDR	R0, [PC, #48]
0x172E0	0xF9B00000  LDRSH	R0, [R0, #0]
0x172E4	0xB201    SXTH	R1, R0
0x172E6	0x480C    LDR	R0, [PC, #48]
0x172E8	0xF7F4FDDC  BL	ADXL345_main_Display_Value+0
;ADXL345_main.c, 235 :: 		Display_Value(&Label4, Accel_vals.Yvalue);
0x172EC	0x480B    LDR	R0, [PC, #44]
0x172EE	0xF9B00000  LDRSH	R0, [R0, #0]
0x172F2	0xB201    SXTH	R1, R0
0x172F4	0x480A    LDR	R0, [PC, #40]
0x172F6	0xF7F4FDD5  BL	ADXL345_main_Display_Value+0
;ADXL345_main.c, 236 :: 		Display_Value(&Label7, Accel_vals.Zvalue);
0x172FA	0x480A    LDR	R0, [PC, #40]
0x172FC	0xF9B00000  LDRSH	R0, [R0, #0]
0x17300	0xB201    SXTH	R1, R0
0x17302	0x4809    LDR	R0, [PC, #36]
0x17304	0xF7F4FDCE  BL	ADXL345_main_Display_Value+0
;ADXL345_main.c, 237 :: 		}
L_end_doAccel:
0x17308	0xF8DDE000  LDR	LR, [SP, #0]
0x1730C	0xB001    ADD	SP, SP, #4
0x1730E	0x4770    BX	LR
0x17310	0x03822000  	_Accel_vals+0
0x17314	0x00062000  	_Old_Accel_vals+0
0x17318	0x03882000  	_Label3+0
0x1731C	0x03842000  	_Accel_vals+2
0x17320	0x03B42000  	_Label4+0
0x17324	0x03862000  	_Accel_vals+4
0x17328	0x03E02000  	_Label7+0
; end of _doAccel
ADXL345_main_ACCEL_Test:
;ADXL345_main.c, 210 :: 		static void ACCEL_Test(TAccel_values *values) {
; values start address is: 0 (R0)
0xC0BC	0xB082    SUB	SP, SP, #8
0xC0BE	0xF8CDE000  STR	LR, [SP, #0]
; values end address is: 0 (R0)
; values start address is: 0 (R0)
;ADXL345_main.c, 211 :: 		Accel_Average();               // Calculate average X, Y and Z reads
0xC0C2	0x9001    STR	R0, [SP, #4]
0xC0C4	0xF7FAFEC2  BL	ADXL345_main_Accel_Average+0
0xC0C8	0x9801    LDR	R0, [SP, #4]
;ADXL345_main.c, 213 :: 		values->Xvalue = readings[0];
0xC0CA	0x4909    LDR	R1, [PC, #36]
0xC0CC	0xF9B11000  LDRSH	R1, [R1, #0]
0xC0D0	0x8001    STRH	R1, [R0, #0]
;ADXL345_main.c, 214 :: 		values->Yvalue = readings[1];
0xC0D2	0x1C82    ADDS	R2, R0, #2
0xC0D4	0x4907    LDR	R1, [PC, #28]
0xC0D6	0xF9B11000  LDRSH	R1, [R1, #0]
0xC0DA	0x8011    STRH	R1, [R2, #0]
;ADXL345_main.c, 215 :: 		values->Zvalue = readings[2];
0xC0DC	0x1D02    ADDS	R2, R0, #4
; values end address is: 0 (R0)
0xC0DE	0x4906    LDR	R1, [PC, #24]
0xC0E0	0xF9B11000  LDRSH	R1, [R1, #0]
0xC0E4	0x8011    STRH	R1, [R2, #0]
;ADXL345_main.c, 216 :: 		}
L_end_ACCEL_Test:
0xC0E6	0xF8DDE000  LDR	LR, [SP, #0]
0xC0EA	0xB002    ADD	SP, SP, #8
0xC0EC	0x4770    BX	LR
0xC0EE	0xBF00    NOP
0xC0F0	0x00002000  	_readings+0
0xC0F4	0x00022000  	_readings+2
0xC0F8	0x00042000  	_readings+4
; end of ADXL345_main_ACCEL_Test
ADXL345_main_Accel_Average:
;ADXL345_main.c, 44 :: 		static void Accel_Average() {
0x6E4C	0xB085    SUB	SP, SP, #20
0x6E4E	0xF8CDE000  STR	LR, [SP, #0]
;ADXL345_main.c, 48 :: 		sx = sy = sz = 0;
; sz start address is: 16 (R4)
0x6E52	0x2400    MOVS	R4, #0
0x6E54	0xB224    SXTH	R4, R4
; sy start address is: 20 (R5)
0x6E56	0xF2400500  MOVW	R5, #0
0x6E5A	0xB22D    SXTH	R5, R5
; sx start address is: 24 (R6)
0x6E5C	0xF2400600  MOVW	R6, #0
0x6E60	0xB236    SXTH	R6, R6
;ADXL345_main.c, 51 :: 		for (i=0; i<16; i++) {
; i start address is: 12 (R3)
0x6E62	0x2300    MOVS	R3, #0
0x6E64	0xB21B    SXTH	R3, R3
; sx end address is: 24 (R6)
; sy end address is: 20 (R5)
; sz end address is: 16 (R4)
; i end address is: 12 (R3)
L_ADXL345_main_Accel_Average0:
; i start address is: 12 (R3)
; sx start address is: 24 (R6)
; sy start address is: 20 (R5)
; sz start address is: 16 (R4)
0x6E66	0x2B10    CMP	R3, #16
0x6E68	0xDA24    BGE	L_ADXL345_main_Accel_Average1
;ADXL345_main.c, 52 :: 		ADXL345_Read(&xx, &yy, &zz);
0x6E6A	0xAA04    ADD	R2, SP, #16
0x6E6C	0xF10D010E  ADD	R1, SP, #14
0x6E70	0xA803    ADD	R0, SP, #12
0x6E72	0xF8AD4004  STRH	R4, [SP, #4]
0x6E76	0xF8AD5006  STRH	R5, [SP, #6]
0x6E7A	0xF8AD6008  STRH	R6, [SP, #8]
0x6E7E	0xF8AD300A  STRH	R3, [SP, #10]
0x6E82	0xF7FDFA1B  BL	_ADXL345_Read+0
0x6E86	0xF9BD300A  LDRSH	R3, [SP, #10]
0x6E8A	0xF9BD6008  LDRSH	R6, [SP, #8]
0x6E8E	0xF9BD5006  LDRSH	R5, [SP, #6]
0x6E92	0xF9BD4004  LDRSH	R4, [SP, #4]
;ADXL345_main.c, 53 :: 		sx += xx;
0x6E96	0xF9BD000C  LDRSH	R0, [SP, #12]
0x6E9A	0x1836    ADDS	R6, R6, R0
0x6E9C	0xB236    SXTH	R6, R6
;ADXL345_main.c, 54 :: 		sy += yy;
0x6E9E	0xF9BD000E  LDRSH	R0, [SP, #14]
0x6EA2	0x182D    ADDS	R5, R5, R0
0x6EA4	0xB22D    SXTH	R5, R5
;ADXL345_main.c, 55 :: 		sz += zz;
0x6EA6	0xF9BD0010  LDRSH	R0, [SP, #16]
0x6EAA	0x1824    ADDS	R4, R4, R0
0x6EAC	0xB224    SXTH	R4, R4
;ADXL345_main.c, 51 :: 		for (i=0; i<16; i++) {
0x6EAE	0x1C5B    ADDS	R3, R3, #1
0x6EB0	0xB21B    SXTH	R3, R3
;ADXL345_main.c, 56 :: 		}
; i end address is: 12 (R3)
0x6EB2	0xE7D8    B	L_ADXL345_main_Accel_Average0
L_ADXL345_main_Accel_Average1:
;ADXL345_main.c, 58 :: 		readings[0] = sx >> 4;
0x6EB4	0x1131    ASRS	R1, R6, #4
; sx end address is: 24 (R6)
0x6EB6	0x4806    LDR	R0, [PC, #24]
0x6EB8	0x8001    STRH	R1, [R0, #0]
;ADXL345_main.c, 59 :: 		readings[1] = sy >> 4;
0x6EBA	0x1129    ASRS	R1, R5, #4
; sy end address is: 20 (R5)
0x6EBC	0x4805    LDR	R0, [PC, #20]
0x6EBE	0x8001    STRH	R1, [R0, #0]
;ADXL345_main.c, 60 :: 		readings[2] = sz >> 4;
0x6EC0	0x1121    ASRS	R1, R4, #4
; sz end address is: 16 (R4)
0x6EC2	0x4805    LDR	R0, [PC, #20]
0x6EC4	0x8001    STRH	R1, [R0, #0]
;ADXL345_main.c, 61 :: 		}
L_end_Accel_Average:
0x6EC6	0xF8DDE000  LDR	LR, [SP, #0]
0x6ECA	0xB005    ADD	SP, SP, #20
0x6ECC	0x4770    BX	LR
0x6ECE	0xBF00    NOP
0x6ED0	0x00002000  	_readings+0
0x6ED4	0x00022000  	_readings+2
0x6ED8	0x00042000  	_readings+4
; end of ADXL345_main_Accel_Average
_ADXL345_Read:
;ADXL345_driver.c, 44 :: 		void ADXL345_Read(int *data_X, int *data_Y, int *data_Z){
; data_Y start address is: 4 (R1)
; data_X start address is: 0 (R0)
0x42BC	0xB082    SUB	SP, SP, #8
0x42BE	0xF8CDE000  STR	LR, [SP, #0]
0x42C2	0x4683    MOV	R11, R0
0x42C4	0x468C    MOV	R12, R1
0x42C6	0x9201    STR	R2, [SP, #4]
; data_Y end address is: 4 (R1)
; data_X end address is: 0 (R0)
; data_X start address is: 44 (R11)
; data_Y start address is: 48 (R12)
;ADXL345_driver.c, 45 :: 		acceldata_[0] = _DATAX0;
0x42C8	0x2432    MOVS	R4, #50
0x42CA	0x4B18    LDR	R3, [PC, #96]
0x42CC	0x701C    STRB	R4, [R3, #0]
;ADXL345_driver.c, 46 :: 		I2C2_Start();              // issue I2C start signal
0x42CE	0xF002FAC1  BL	_I2C2_Start+0
;ADXL345_driver.c, 47 :: 		I2C2_Write(_ACCEL_ADDRESS, acceldata_, 1, END_MODE_RESTART);
0x42D2	0xF2400300  MOVW	R3, #0
0x42D6	0x2201    MOVS	R2, #1
0x42D8	0x4914    LDR	R1, [PC, #80]
0x42DA	0x2053    MOVS	R0, #83
0x42DC	0xF7FEF89E  BL	_I2C2_Write+0
;ADXL345_driver.c, 48 :: 		I2C2_Read(_ACCEL_ADDRESS, acceldata_, 6, END_MODE_STOP);
0x42E0	0xF2400301  MOVW	R3, #1
0x42E4	0x2206    MOVS	R2, #6
0x42E6	0x4911    LDR	R1, [PC, #68]
0x42E8	0x2053    MOVS	R0, #83
0x42EA	0xF7FEF8D9  BL	_I2C2_Read+0
;ADXL345_driver.c, 50 :: 		*data_X = acceldata_[0] + (acceldata_[1] << 8);
0x42EE	0x4B10    LDR	R3, [PC, #64]
0x42F0	0x781B    LDRB	R3, [R3, #0]
0x42F2	0x021C    LSLS	R4, R3, #8
0x42F4	0xB2A4    UXTH	R4, R4
0x42F6	0x4B0D    LDR	R3, [PC, #52]
0x42F8	0x781B    LDRB	R3, [R3, #0]
0x42FA	0x191B    ADDS	R3, R3, R4
0x42FC	0xF8AB3000  STRH	R3, [R11, #0]
; data_X end address is: 44 (R11)
;ADXL345_driver.c, 51 :: 		*data_Y = acceldata_[2] + (acceldata_[3] << 8);
0x4300	0x4B0C    LDR	R3, [PC, #48]
0x4302	0x781B    LDRB	R3, [R3, #0]
0x4304	0x021C    LSLS	R4, R3, #8
0x4306	0xB2A4    UXTH	R4, R4
0x4308	0x4B0B    LDR	R3, [PC, #44]
0x430A	0x781B    LDRB	R3, [R3, #0]
0x430C	0x191B    ADDS	R3, R3, R4
0x430E	0xF8AC3000  STRH	R3, [R12, #0]
; data_Y end address is: 48 (R12)
;ADXL345_driver.c, 52 :: 		*data_Z = acceldata_[4] + (acceldata_[5] << 8);
0x4312	0x4B0A    LDR	R3, [PC, #40]
0x4314	0x781B    LDRB	R3, [R3, #0]
0x4316	0x021C    LSLS	R4, R3, #8
0x4318	0xB2A4    UXTH	R4, R4
0x431A	0x4B09    LDR	R3, [PC, #36]
0x431C	0x781B    LDRB	R3, [R3, #0]
0x431E	0x191C    ADDS	R4, R3, R4
0x4320	0x9B01    LDR	R3, [SP, #4]
0x4322	0x801C    STRH	R4, [R3, #0]
;ADXL345_driver.c, 53 :: 		}
L_end_ADXL345_Read:
0x4324	0xF8DDE000  LDR	LR, [SP, #0]
0x4328	0xB002    ADD	SP, SP, #8
0x432A	0x4770    BX	LR
0x432C	0x03782000  	_acceldata_+0
0x4330	0x03792000  	_acceldata_+1
0x4334	0x037B2000  	_acceldata_+3
0x4338	0x037A2000  	_acceldata_+2
0x433C	0x037D2000  	_acceldata_+5
0x4340	0x037C2000  	_acceldata_+4
; end of _ADXL345_Read
ADXL345_main_Scroll_ACCEL:
;ADXL345_main.c, 95 :: 		static void Scroll_ACCEL(char Adir) {
; Adir start address is: 0 (R0)
0xBE40	0xB081    SUB	SP, SP, #4
0xBE42	0xF8CDE000  STR	LR, [SP, #0]
; Adir end address is: 0 (R0)
; Adir start address is: 0 (R0)
;ADXL345_main.c, 98 :: 		if (Adir == _ACCEL_UP) {
0xBE46	0x2801    CMP	R0, #1
0xBE48	0xD10F    BNE	L_ADXL345_main_Scroll_ACCEL3
; Adir end address is: 0 (R0)
;ADXL345_main.c, 99 :: 		if (_disp_accel_scroll != _SCROLL_ACCEL_FIRST_LINE)
0xBE4A	0x4915    LDR	R1, [PC, #84]
0xBE4C	0xF9B11000  LDRSH	R1, [R1, #0]
0xBE50	0x2929    CMP	R1, #41
0xBE52	0xD005    BEQ	L_ADXL345_main_Scroll_ACCEL4
;ADXL345_main.c, 100 :: 		_disp_accel_scroll--;
0xBE54	0x4A12    LDR	R2, [PC, #72]
0xBE56	0xF9B21000  LDRSH	R1, [R2, #0]
0xBE5A	0x1E49    SUBS	R1, R1, #1
0xBE5C	0x8011    STRH	R1, [R2, #0]
0xBE5E	0xE003    B	L_ADXL345_main_Scroll_ACCEL5
L_ADXL345_main_Scroll_ACCEL4:
;ADXL345_main.c, 102 :: 		_disp_accel_scroll = _SCROLL_ACCEL_LAST_LINE - 1;
0xBE60	0x22F5    MOVS	R2, #245
0xBE62	0xB212    SXTH	R2, R2
0xBE64	0x490E    LDR	R1, [PC, #56]
0xBE66	0x800A    STRH	R2, [R1, #0]
;ADXL345_main.c, 103 :: 		}
L_ADXL345_main_Scroll_ACCEL5:
;ADXL345_main.c, 104 :: 		}
0xBE68	0xE00F    B	L_ADXL345_main_Scroll_ACCEL6
L_ADXL345_main_Scroll_ACCEL3:
;ADXL345_main.c, 106 :: 		if (_disp_accel_scroll != _SCROLL_ACCEL_LAST_LINE - 1)
0xBE6A	0x490D    LDR	R1, [PC, #52]
0xBE6C	0xF9B11000  LDRSH	R1, [R1, #0]
0xBE70	0x29F5    CMP	R1, #245
0xBE72	0xD005    BEQ	L_ADXL345_main_Scroll_ACCEL7
;ADXL345_main.c, 107 :: 		_disp_accel_scroll++;
0xBE74	0x4A0A    LDR	R2, [PC, #40]
0xBE76	0xF9B21000  LDRSH	R1, [R2, #0]
0xBE7A	0x1C49    ADDS	R1, R1, #1
0xBE7C	0x8011    STRH	R1, [R2, #0]
0xBE7E	0xE004    B	L_ADXL345_main_Scroll_ACCEL8
L_ADXL345_main_Scroll_ACCEL7:
;ADXL345_main.c, 109 :: 		_disp_accel_scroll = _SCROLL_ACCEL_FIRST_LINE;
0xBE80	0xF2400229  MOVW	R2, #41
0xBE84	0xB212    SXTH	R2, R2
0xBE86	0x4906    LDR	R1, [PC, #24]
0xBE88	0x800A    STRH	R2, [R1, #0]
;ADXL345_main.c, 110 :: 		}
L_ADXL345_main_Scroll_ACCEL8:
;ADXL345_main.c, 111 :: 		}
L_ADXL345_main_Scroll_ACCEL6:
;ADXL345_main.c, 113 :: 		Scroll(_disp_accel_scroll);
0xBE8A	0x4905    LDR	R1, [PC, #20]
0xBE8C	0xF9B11000  LDRSH	R1, [R1, #0]
0xBE90	0xB288    UXTH	R0, R1
0xBE92	0xF7FCF849  BL	_Scroll+0
;ADXL345_main.c, 114 :: 		}
L_end_Scroll_ACCEL:
0xBE96	0xF8DDE000  LDR	LR, [SP, #0]
0xBE9A	0xB001    ADD	SP, SP, #4
0xBE9C	0x4770    BX	LR
0xBE9E	0xBF00    NOP
0xBEA0	0x000C2000  	__disp_accel_scroll+0
; end of ADXL345_main_Scroll_ACCEL
_Scroll:
;Scroll.c, 85 :: 		void Scroll(unsigned int scroll) {
0x7F28	0xB082    SUB	SP, SP, #8
0x7F2A	0xF8CDE000  STR	LR, [SP, #0]
0x7F2E	0xF8AD0004  STRH	R0, [SP, #4]
;Scroll.c, 86 :: 		TFT_CS = 0;
0x7F32	0x2200    MOVS	R2, #0
0x7F34	0xB252    SXTB	R2, R2
0x7F36	0x490F    LDR	R1, [PC, #60]
0x7F38	0x600A    STR	R2, [R1, #0]
;Scroll.c, 88 :: 		Set_Index(0x36);
0x7F3A	0x2036    MOVS	R0, #54
0x7F3C	0xF7FEFE46  BL	_Set_Index+0
;Scroll.c, 89 :: 		Write_Command(0x00);
0x7F40	0x2000    MOVS	R0, #0
0x7F42	0xF7FEFE27  BL	_Write_Command+0
;Scroll.c, 91 :: 		Set_Index(0x37);
0x7F46	0x2037    MOVS	R0, #55
0x7F48	0xF7FEFE40  BL	_Set_Index+0
;Scroll.c, 92 :: 		Write_Command(Hi(scroll));
0x7F4C	0xA901    ADD	R1, SP, #4
0x7F4E	0x1C49    ADDS	R1, R1, #1
0x7F50	0x7809    LDRB	R1, [R1, #0]
0x7F52	0xB2C8    UXTB	R0, R1
0x7F54	0xF7FEFE1E  BL	_Write_Command+0
;Scroll.c, 93 :: 		Write_Command(Lo(scroll));
0x7F58	0xA901    ADD	R1, SP, #4
0x7F5A	0x7809    LDRB	R1, [R1, #0]
0x7F5C	0xB2C8    UXTB	R0, R1
0x7F5E	0xF7FEFE19  BL	_Write_Command+0
;Scroll.c, 95 :: 		TFT_CS = 1;
0x7F62	0x2201    MOVS	R2, #1
0x7F64	0xB252    SXTB	R2, R2
0x7F66	0x4903    LDR	R1, [PC, #12]
0x7F68	0x600A    STR	R2, [R1, #0]
;Scroll.c, 96 :: 		}
L_end_Scroll:
0x7F6A	0xF8DDE000  LDR	LR, [SP, #0]
0x7F6E	0xB002    ADD	SP, SP, #8
0x7F70	0x4770    BX	LR
0x7F72	0xBF00    NOP
0x7F74	0x82B44242  	TFT_CS+0
; end of _Scroll
ADXL345_main_Scroll_Add_Line:
;ADXL345_main.c, 150 :: 		static void Scroll_Add_Line(char ScrollDiection){
; ScrollDiection start address is: 0 (R0)
0xBD7C	0xB082    SUB	SP, SP, #8
0xBD7E	0xF8CDE000  STR	LR, [SP, #0]
; ScrollDiection end address is: 0 (R0)
; ScrollDiection start address is: 0 (R0)
;ADXL345_main.c, 152 :: 		if (ScrollDiection > 0){
0xBD82	0x2800    CMP	R0, #0
0xBD84	0xD94F    BLS	L_ADXL345_main_Scroll_Add_Line12
; ScrollDiection end address is: 0 (R0)
;ADXL345_main.c, 153 :: 		temp = _disp_accel_scroll + 1;
0xBD86	0x492A    LDR	R1, [PC, #168]
0xBD88	0xF9B11000  LDRSH	R1, [R1, #0]
0xBD8C	0x1C49    ADDS	R1, R1, #1
0xBD8E	0xB209    SXTH	R1, R1
; temp start address is: 0 (R0)
0xBD90	0xB208    SXTH	R0, R1
;ADXL345_main.c, 154 :: 		if (temp > _SCROLL_ACCEL_LAST_LINE - 1)
0xBD92	0x29F5    CMP	R1, #245
0xBD94	0xDD03    BLE	L_ADXL345_main_Scroll_Add_Line29
;ADXL345_main.c, 155 :: 		temp = _SCROLL_ACCEL_FIRST_LINE;
0xBD96	0xF2400029  MOVW	R0, #41
0xBD9A	0xB200    SXTH	R0, R0
; temp end address is: 0 (R0)
0xBD9C	0xE7FF    B	L_ADXL345_main_Scroll_Add_Line13
L_ADXL345_main_Scroll_Add_Line29:
;ADXL345_main.c, 154 :: 		if (temp > _SCROLL_ACCEL_LAST_LINE - 1)
;ADXL345_main.c, 155 :: 		temp = _SCROLL_ACCEL_FIRST_LINE;
L_ADXL345_main_Scroll_Add_Line13:
;ADXL345_main.c, 156 :: 		TFT_CS = 0;
; temp start address is: 0 (R0)
0xBD9E	0x2200    MOVS	R2, #0
0xBDA0	0xB252    SXTB	R2, R2
0xBDA2	0x4924    LDR	R1, [PC, #144]
0xBDA4	0x600A    STR	R2, [R1, #0]
;ADXL345_main.c, 157 :: 		TFT_SSD1963_Set_Address_Ptr(0, temp, 480, temp);
0xBDA6	0xB283    UXTH	R3, R0
0xBDA8	0xF24012E0  MOVW	R2, #480
0xBDAC	0xB299    UXTH	R1, R3
; temp end address is: 0 (R0)
0xBDAE	0x2000    MOVS	R0, #0
0xBDB0	0x4C21    LDR	R4, [PC, #132]
0xBDB2	0x6824    LDR	R4, [R4, #0]
0xBDB4	0x47A0    BLX	R4
;ADXL345_main.c, 158 :: 		for (i = 0; i < 480; i++)
; i start address is: 0 (R0)
0xBDB6	0x2000    MOVS	R0, #0
0xBDB8	0xB200    SXTH	R0, R0
; i end address is: 0 (R0)
L_ADXL345_main_Scroll_Add_Line14:
; i start address is: 0 (R0)
0xBDBA	0xF5B07FF0  CMP	R0, #480
0xBDBE	0xDA2E    BGE	L_ADXL345_main_Scroll_Add_Line15
;ADXL345_main.c, 159 :: 		if ((i == 90) | (i == 240) | (i == 390))
0xBDC0	0x285A    CMP	R0, #90
0xBDC2	0xF2400200  MOVW	R2, #0
0xBDC6	0xD100    BNE	L_ADXL345_main_Scroll_Add_Line35
0xBDC8	0x2201    MOVS	R2, #1
L_ADXL345_main_Scroll_Add_Line35:
0xBDCA	0xB2D2    UXTB	R2, R2
0xBDCC	0x28F0    CMP	R0, #240
0xBDCE	0xF2400100  MOVW	R1, #0
0xBDD2	0xD100    BNE	L_ADXL345_main_Scroll_Add_Line36
0xBDD4	0x2101    MOVS	R1, #1
L_ADXL345_main_Scroll_Add_Line36:
0xBDD6	0xB2C9    UXTB	R1, R1
0xBDD8	0x430A    ORRS	R2, R1
0xBDDA	0xB2D2    UXTB	R2, R2
0xBDDC	0xF5B07FC3  CMP	R0, #390
0xBDE0	0xF2400100  MOVW	R1, #0
0xBDE4	0xD100    BNE	L_ADXL345_main_Scroll_Add_Line37
0xBDE6	0x2101    MOVS	R1, #1
L_ADXL345_main_Scroll_Add_Line37:
0xBDE8	0xB2C9    UXTB	R1, R1
0xBDEA	0xEA420101  ORR	R1, R2, R1, LSL #0
0xBDEE	0xB2C9    UXTB	R1, R1
0xBDF0	0xB149    CBZ	R1, L_ADXL345_main_Scroll_Add_Line17
;ADXL345_main.c, 160 :: 		TFT_Write_Data_Ptr(CL_SILVER);
0xBDF2	0xF8AD0004  STRH	R0, [SP, #4]
0xBDF6	0xF24C6018  MOVW	R0, #50712
0xBDFA	0x4C10    LDR	R4, [PC, #64]
0xBDFC	0x6824    LDR	R4, [R4, #0]
0xBDFE	0x47A0    BLX	R4
0xBE00	0xF9BD0004  LDRSH	R0, [SP, #4]
0xBE04	0xE008    B	L_ADXL345_main_Scroll_Add_Line18
L_ADXL345_main_Scroll_Add_Line17:
;ADXL345_main.c, 162 :: 		TFT_Write_Data_Ptr(CL_WHITE);
0xBE06	0xF8AD0004  STRH	R0, [SP, #4]
0xBE0A	0xF64F70FF  MOVW	R0, #65535
0xBE0E	0x4C0B    LDR	R4, [PC, #44]
0xBE10	0x6824    LDR	R4, [R4, #0]
0xBE12	0x47A0    BLX	R4
0xBE14	0xF9BD0004  LDRSH	R0, [SP, #4]
L_ADXL345_main_Scroll_Add_Line18:
;ADXL345_main.c, 158 :: 		for (i = 0; i < 480; i++)
0xBE18	0x1C40    ADDS	R0, R0, #1
0xBE1A	0xB200    SXTH	R0, R0
;ADXL345_main.c, 162 :: 		TFT_Write_Data_Ptr(CL_WHITE);
; i end address is: 0 (R0)
0xBE1C	0xE7CD    B	L_ADXL345_main_Scroll_Add_Line14
L_ADXL345_main_Scroll_Add_Line15:
;ADXL345_main.c, 163 :: 		TFT_CS = 1;
0xBE1E	0x2201    MOVS	R2, #1
0xBE20	0xB252    SXTB	R2, R2
0xBE22	0x4904    LDR	R1, [PC, #16]
0xBE24	0x600A    STR	R2, [R1, #0]
;ADXL345_main.c, 164 :: 		}
L_ADXL345_main_Scroll_Add_Line12:
;ADXL345_main.c, 165 :: 		}
L_end_Scroll_Add_Line:
0xBE26	0xF8DDE000  LDR	LR, [SP, #0]
0xBE2A	0xB002    ADD	SP, SP, #8
0xBE2C	0x4770    BX	LR
0xBE2E	0xBF00    NOP
0xBE30	0x000C2000  	__disp_accel_scroll+0
0xBE34	0x82B44242  	TFT_CS+0
0xBE38	0x045C2000  	_TFT_SSD1963_Set_Address_Ptr+0
0xBE3C	0x04602000  	_TFT_Write_Data_Ptr+0
; end of ADXL345_main_Scroll_Add_Line
ADXL345_main_WriteGraph:
;ADXL345_main.c, 123 :: 		static void WriteGraph(TAccel_values *old, TAccel_values *new){
0xBF50	0xB083    SUB	SP, SP, #12
0xBF52	0xF8CDE000  STR	LR, [SP, #0]
0xBF56	0x9001    STR	R0, [SP, #4]
0xBF58	0x9102    STR	R1, [SP, #8]
;ADXL345_main.c, 125 :: 		if ((_disp_accel_scroll < _SCROLL_ACCEL_LAST_LINE - 2) && (_disp_accel_scroll > _SCROLL_ACCEL_FIRST_LINE)){
0xBF5A	0x4A46    LDR	R2, [PC, #280]
0xBF5C	0xF9B22000  LDRSH	R2, [R2, #0]
0xBF60	0x2AF4    CMP	R2, #244
0xBF62	0xF2808082  BGE	L_ADXL345_main_WriteGraph28
0xBF66	0x4A43    LDR	R2, [PC, #268]
0xBF68	0xF9B22000  LDRSH	R2, [R2, #0]
0xBF6C	0x2A29    CMP	R2, #41
0xBF6E	0xF340807C  BLE	L_ADXL345_main_WriteGraph27
L_ADXL345_main_WriteGraph26:
;ADXL345_main.c, 126 :: 		TFT_Set_Pen(CL_RED, 2);
0xBF72	0x2102    MOVS	R1, #2
0xBF74	0xF64F0000  MOVW	R0, #63488
0xBF78	0xF7FDFD1A  BL	_TFT_Set_Pen+0
;ADXL345_main.c, 127 :: 		temp1 = (old->Xvalue * 30) / 256 + 90;
0xBF7C	0x9A01    LDR	R2, [SP, #4]
0xBF7E	0xF9B23000  LDRSH	R3, [R2, #0]
0xBF82	0x221E    MOVS	R2, #30
0xBF84	0xB212    SXTH	R2, R2
0xBF86	0xFB03F002  MUL	R0, R3, R2
0xBF8A	0xB200    SXTH	R0, R0
0xBF8C	0x1200    ASRS	R0, R0, #8
0xBF8E	0xB200    SXTH	R0, R0
0xBF90	0x305A    ADDS	R0, #90
0xBF92	0xB200    SXTH	R0, R0
; temp1 start address is: 0 (R0)
;ADXL345_main.c, 128 :: 		temp2 = (new->Xvalue * 30) / 256 + 90;
0xBF94	0x9A02    LDR	R2, [SP, #8]
0xBF96	0xF9B23000  LDRSH	R3, [R2, #0]
0xBF9A	0x221E    MOVS	R2, #30
0xBF9C	0xB212    SXTH	R2, R2
0xBF9E	0x435A    MULS	R2, R3, R2
0xBFA0	0xB212    SXTH	R2, R2
0xBFA2	0x1212    ASRS	R2, R2, #8
0xBFA4	0xB212    SXTH	R2, R2
0xBFA6	0xF202055A  ADDW	R5, R2, #90
;ADXL345_main.c, 129 :: 		TFT_Line(temp1, _disp_accel_scroll + 2, temp2, _disp_accel_scroll + 1);
0xBFAA	0x4C32    LDR	R4, [PC, #200]
0xBFAC	0xF9B42000  LDRSH	R2, [R4, #0]
0xBFB0	0x1C53    ADDS	R3, R2, #1
0xBFB2	0x4622    MOV	R2, R4
0xBFB4	0xF9B22000  LDRSH	R2, [R2, #0]
0xBFB8	0x1C92    ADDS	R2, R2, #2
0xBFBA	0xB211    SXTH	R1, R2
0xBFBC	0xB22A    SXTH	R2, R5
; temp1 end address is: 0 (R0)
0xBFBE	0xF7F8FAA5  BL	_TFT_Line+0
;ADXL345_main.c, 131 :: 		TFT_Set_Pen(CL_BLUE, 2);
0xBFC2	0x2102    MOVS	R1, #2
0xBFC4	0xF240001F  MOVW	R0, #31
0xBFC8	0xF7FDFCF2  BL	_TFT_Set_Pen+0
;ADXL345_main.c, 132 :: 		temp1 = (old->Yvalue * 30) / 256 + 240;
0xBFCC	0x9A01    LDR	R2, [SP, #4]
0xBFCE	0x1C92    ADDS	R2, R2, #2
0xBFD0	0xF9B23000  LDRSH	R3, [R2, #0]
0xBFD4	0x221E    MOVS	R2, #30
0xBFD6	0xB212    SXTH	R2, R2
0xBFD8	0xFB03F002  MUL	R0, R3, R2
0xBFDC	0xB200    SXTH	R0, R0
0xBFDE	0x1200    ASRS	R0, R0, #8
0xBFE0	0xB200    SXTH	R0, R0
0xBFE2	0x30F0    ADDS	R0, #240
0xBFE4	0xB200    SXTH	R0, R0
; temp1 start address is: 0 (R0)
;ADXL345_main.c, 133 :: 		temp2 = (new->Yvalue * 30) / 256 + 240;
0xBFE6	0x9A02    LDR	R2, [SP, #8]
0xBFE8	0x1C92    ADDS	R2, R2, #2
0xBFEA	0xF9B23000  LDRSH	R3, [R2, #0]
0xBFEE	0x221E    MOVS	R2, #30
0xBFF0	0xB212    SXTH	R2, R2
0xBFF2	0x435A    MULS	R2, R3, R2
0xBFF4	0xB212    SXTH	R2, R2
0xBFF6	0x1212    ASRS	R2, R2, #8
0xBFF8	0xB212    SXTH	R2, R2
0xBFFA	0xF20205F0  ADDW	R5, R2, #240
;ADXL345_main.c, 134 :: 		TFT_Line(temp1, _disp_accel_scroll + 2, temp2, _disp_accel_scroll + 1);
0xBFFE	0x4C1D    LDR	R4, [PC, #116]
0xC000	0xF9B42000  LDRSH	R2, [R4, #0]
0xC004	0x1C53    ADDS	R3, R2, #1
0xC006	0x4622    MOV	R2, R4
0xC008	0xF9B22000  LDRSH	R2, [R2, #0]
0xC00C	0x1C92    ADDS	R2, R2, #2
0xC00E	0xB211    SXTH	R1, R2
0xC010	0xB22A    SXTH	R2, R5
; temp1 end address is: 0 (R0)
0xC012	0xF7F8FA7B  BL	_TFT_Line+0
;ADXL345_main.c, 136 :: 		TFT_Set_Pen(CL_GREEN, 2);
0xC016	0x2102    MOVS	R1, #2
0xC018	0xF2404000  MOVW	R0, #1024
0xC01C	0xF7FDFCC8  BL	_TFT_Set_Pen+0
;ADXL345_main.c, 137 :: 		temp1 = (old->Zvalue * 30) / 256 + 390;
0xC020	0x9A01    LDR	R2, [SP, #4]
0xC022	0x1D12    ADDS	R2, R2, #4
0xC024	0xF9B23000  LDRSH	R3, [R2, #0]
0xC028	0x221E    MOVS	R2, #30
0xC02A	0xB212    SXTH	R2, R2
0xC02C	0x435A    MULS	R2, R3, R2
0xC02E	0xB212    SXTH	R2, R2
0xC030	0x1212    ASRS	R2, R2, #8
0xC032	0xB212    SXTH	R2, R2
0xC034	0xF50272C3  ADD	R2, R2, #390
; temp1 start address is: 0 (R0)
0xC038	0xB210    SXTH	R0, R2
;ADXL345_main.c, 138 :: 		temp2 = (new->Zvalue * 30) / 256 + 390;
0xC03A	0x9A02    LDR	R2, [SP, #8]
0xC03C	0x1D12    ADDS	R2, R2, #4
0xC03E	0xF9B23000  LDRSH	R3, [R2, #0]
0xC042	0x221E    MOVS	R2, #30
0xC044	0xB212    SXTH	R2, R2
0xC046	0x435A    MULS	R2, R3, R2
0xC048	0xB212    SXTH	R2, R2
0xC04A	0x1212    ASRS	R2, R2, #8
0xC04C	0xB212    SXTH	R2, R2
0xC04E	0xF50275C3  ADD	R5, R2, #390
;ADXL345_main.c, 139 :: 		TFT_Line(temp1, _disp_accel_scroll + 2, temp2, _disp_accel_scroll + 1);
0xC052	0x4C08    LDR	R4, [PC, #32]
0xC054	0xF9B42000  LDRSH	R2, [R4, #0]
0xC058	0x1C53    ADDS	R3, R2, #1
0xC05A	0x4622    MOV	R2, R4
0xC05C	0xF9B22000  LDRSH	R2, [R2, #0]
0xC060	0x1C92    ADDS	R2, R2, #2
0xC062	0xB211    SXTH	R1, R2
0xC064	0xB22A    SXTH	R2, R5
; temp1 end address is: 0 (R0)
0xC066	0xF7F8FA51  BL	_TFT_Line+0
;ADXL345_main.c, 125 :: 		if ((_disp_accel_scroll < _SCROLL_ACCEL_LAST_LINE - 2) && (_disp_accel_scroll > _SCROLL_ACCEL_FIRST_LINE)){
L_ADXL345_main_WriteGraph28:
L_ADXL345_main_WriteGraph27:
;ADXL345_main.c, 141 :: 		}
L_end_WriteGraph:
0xC06A	0xF8DDE000  LDR	LR, [SP, #0]
0xC06E	0xB003    ADD	SP, SP, #12
0xC070	0x4770    BX	LR
0xC072	0xBF00    NOP
0xC074	0x000C2000  	__disp_accel_scroll+0
; end of ADXL345_main_WriteGraph
ADXL345_main_Display_Value:
;ADXL345_main.c, 70 :: 		static void Display_Value(TLabel *label, int val) {
; val start address is: 4 (R1)
0xBEA4	0xB088    SUB	SP, SP, #32
0xBEA6	0xF8CDE000  STR	LR, [SP, #0]
0xBEAA	0x9007    STR	R0, [SP, #28]
0xBEAC	0xB20F    SXTH	R7, R1
; val end address is: 4 (R1)
; val start address is: 28 (R7)
;ADXL345_main.c, 74 :: 		ptr = label->Caption;
0xBEAE	0x9A07    LDR	R2, [SP, #28]
0xBEB0	0x3210    ADDS	R2, #16
0xBEB2	0x6812    LDR	R2, [R2, #0]
0xBEB4	0x9206    STR	R2, [SP, #24]
;ADXL345_main.c, 75 :: 		TFT_Set_Pen(Accelerometer_test.Color,  0);
0xBEB6	0x4A25    LDR	R2, [PC, #148]
0xBEB8	0x8812    LDRH	R2, [R2, #0]
0xBEBA	0x2100    MOVS	R1, #0
0xBEBC	0xB290    UXTH	R0, R2
0xBEBE	0xF7FDFD77  BL	_TFT_Set_Pen+0
;ADXL345_main.c, 76 :: 		TFT_Set_Brush(1, Accelerometer_test.Color, 0, 0, 0, 0);
0xBEC2	0x2400    MOVS	R4, #0
0xBEC4	0x2300    MOVS	R3, #0
0xBEC6	0x4A21    LDR	R2, [PC, #132]
0xBEC8	0x8812    LDRH	R2, [R2, #0]
0xBECA	0xB410    PUSH	(R4)
0xBECC	0xB408    PUSH	(R3)
0xBECE	0x2300    MOVS	R3, #0
0xBED0	0xB291    UXTH	R1, R2
0xBED2	0x2200    MOVS	R2, #0
0xBED4	0x2001    MOVS	R0, #1
0xBED6	0xF7FDFA37  BL	_TFT_Set_Brush+0
0xBEDA	0xB002    ADD	SP, SP, #8
;ADXL345_main.c, 77 :: 		IntToStr(val & 0xFE, text);
0xBEDC	0xAB01    ADD	R3, SP, #4
0xBEDE	0xF00702FE  AND	R2, R7, #254
; val end address is: 28 (R7)
0xBEE2	0x4619    MOV	R1, R3
0xBEE4	0xB210    SXTH	R0, R2
0xBEE6	0xF7FDFDE3  BL	_IntToStr+0
;ADXL345_main.c, 78 :: 		strcpy(text1, ptr);
0xBEEA	0xF10D020B  ADD	R2, SP, #11
0xBEEE	0x9906    LDR	R1, [SP, #24]
0xBEF0	0x4610    MOV	R0, R2
0xBEF2	0xF7FDFA49  BL	_strcpy+0
;ADXL345_main.c, 79 :: 		strcat(text1, text);
0xBEF6	0xAB01    ADD	R3, SP, #4
0xBEF8	0xF10D020B  ADD	R2, SP, #11
0xBEFC	0x4619    MOV	R1, R3
0xBEFE	0x4610    MOV	R0, R2
0xBF00	0xF7FDFC10  BL	_strcat+0
;ADXL345_main.c, 80 :: 		TFT_Rectangle(label->Left, Label->Top, label->Left + 55, Label->Top + 20);
0xBF04	0x9A07    LDR	R2, [SP, #28]
0xBF06	0x3208    ADDS	R2, #8
0xBF08	0x8813    LDRH	R3, [R2, #0]
0xBF0A	0xF2030514  ADDW	R5, R3, #20
0xBF0E	0x9A07    LDR	R2, [SP, #28]
0xBF10	0x1D92    ADDS	R2, R2, #6
0xBF12	0x8812    LDRH	R2, [R2, #0]
0xBF14	0xF2020437  ADDW	R4, R2, #55
0xBF18	0xB21B    SXTH	R3, R3
0xBF1A	0xB212    SXTH	R2, R2
0xBF1C	0xB219    SXTH	R1, R3
0xBF1E	0xB22B    SXTH	R3, R5
0xBF20	0xB210    SXTH	R0, R2
0xBF22	0xB222    SXTH	R2, R4
0xBF24	0xF7FBFE10  BL	_TFT_Rectangle+0
;ADXL345_main.c, 81 :: 		label->Caption = text1;
0xBF28	0x9A07    LDR	R2, [SP, #28]
0xBF2A	0xF2020310  ADDW	R3, R2, #16
0xBF2E	0xF10D020B  ADD	R2, SP, #11
0xBF32	0x601A    STR	R2, [R3, #0]
;ADXL345_main.c, 82 :: 		Drawlabel(label);
0xBF34	0x9807    LDR	R0, [SP, #28]
0xBF36	0xF001FC67  BL	_DrawLabel+0
;ADXL345_main.c, 83 :: 		label->Caption = ptr;
0xBF3A	0x9A07    LDR	R2, [SP, #28]
0xBF3C	0xF2020310  ADDW	R3, R2, #16
0xBF40	0x9A06    LDR	R2, [SP, #24]
0xBF42	0x601A    STR	R2, [R3, #0]
;ADXL345_main.c, 84 :: 		}
L_end_Display_Value:
0xBF44	0xF8DDE000  LDR	LR, [SP, #0]
0xBF48	0xB008    ADD	SP, SP, #32
0xBF4A	0x4770    BX	LR
0xBF4C	0x040C2000  	_Accelerometer_test+0
; end of ADXL345_main_Display_Value
_IntToStr:
;__Lib_Conversions.c, 211 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x9AB0	0xB081    SUB	SP, SP, #4
0x9AB2	0xF8CDE000  STR	LR, [SP, #0]
0x9AB6	0x460E    MOV	R6, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 24 (R6)
;__Lib_Conversions.c, 217 :: 		
; negative start address is: 4 (R1)
0x9AB8	0x2100    MOVS	R1, #0
;__Lib_Conversions.c, 218 :: 		
; inword start address is: 12 (R3)
0x9ABA	0xB283    UXTH	R3, R0
;__Lib_Conversions.c, 219 :: 		
0x9ABC	0x2800    CMP	R0, #0
0x9ABE	0xDA05    BGE	L__IntToStr165
; inword end address is: 12 (R3)
;__Lib_Conversions.c, 220 :: 		
0x9AC0	0x2101    MOVS	R1, #1
;__Lib_Conversions.c, 221 :: 		
0x9AC2	0x4240    RSBS	R0, R0, #0
0x9AC4	0xB280    UXTH	R0, R0
; input end address is: 0 (R0)
; inword start address is: 0 (R0)
0x9AC6	0xB280    UXTH	R0, R0
; negative end address is: 4 (R1)
; inword end address is: 0 (R0)
0x9AC8	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
0x9ACA	0xE001    B	L_IntToStr37
L__IntToStr165:
;__Lib_Conversions.c, 219 :: 		
0x9ACC	0xB298    UXTH	R0, R3
0x9ACE	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
L_IntToStr37:
;__Lib_Conversions.c, 223 :: 		
; inword start address is: 0 (R0)
; negative start address is: 28 (R7)
0x9AD0	0x4631    MOV	R1, R6
; inword end address is: 0 (R0)
0x9AD2	0xF7FCFC7D  BL	_WordToStr+0
;__Lib_Conversions.c, 225 :: 		
; i start address is: 4 (R1)
0x9AD6	0x2106    MOVS	R1, #6
; output end address is: 24 (R6)
; negative end address is: 28 (R7)
; i end address is: 4 (R1)
0x9AD8	0x4634    MOV	R4, R6
0x9ADA	0xB2B8    UXTH	R0, R7
;__Lib_Conversions.c, 226 :: 		
L_IntToStr38:
; i start address is: 4 (R1)
; negative start address is: 0 (R0)
; output start address is: 16 (R4)
0x9ADC	0x2900    CMP	R1, #0
0x9ADE	0xD908    BLS	L_IntToStr39
;__Lib_Conversions.c, 227 :: 		
0x9AE0	0x1863    ADDS	R3, R4, R1
0x9AE2	0x1E4A    SUBS	R2, R1, #1
0x9AE4	0xB292    UXTH	R2, R2
0x9AE6	0x18A2    ADDS	R2, R4, R2
0x9AE8	0x7812    LDRB	R2, [R2, #0]
0x9AEA	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 228 :: 		
0x9AEC	0x1E49    SUBS	R1, R1, #1
0x9AEE	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 229 :: 		
; i end address is: 4 (R1)
0x9AF0	0xE7F4    B	L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c, 230 :: 		
0x9AF2	0x2220    MOVS	R2, #32
0x9AF4	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 231 :: 		
0x9AF6	0xB170    CBZ	R0, L_IntToStr40
; negative end address is: 0 (R0)
;__Lib_Conversions.c, 232 :: 		
; i start address is: 0 (R0)
0x9AF8	0x2000    MOVS	R0, #0
; output end address is: 16 (R4)
; i end address is: 0 (R0)
0x9AFA	0xB281    UXTH	R1, R0
0x9AFC	0x4620    MOV	R0, R4
;__Lib_Conversions.c, 233 :: 		
L_IntToStr41:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x9AFE	0x1842    ADDS	R2, R0, R1
0x9B00	0x7812    LDRB	R2, [R2, #0]
0x9B02	0x2A20    CMP	R2, #32
0x9B04	0xD102    BNE	L_IntToStr42
0x9B06	0x1C49    ADDS	R1, R1, #1
0x9B08	0xB289    UXTH	R1, R1
0x9B0A	0xE7F8    B	L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c, 234 :: 		
0x9B0C	0x1E4A    SUBS	R2, R1, #1
0x9B0E	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 235 :: 		
0x9B10	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x9B12	0x222D    MOVS	R2, #45
0x9B14	0x701A    STRB	R2, [R3, #0]
L_IntToStr40:
;__Lib_Conversions.c, 236 :: 		
L_end_IntToStr:
0x9B16	0xF8DDE000  LDR	LR, [SP, #0]
0x9B1A	0xB001    ADD	SP, SP, #4
0x9B1C	0x4770    BX	LR
; end of _IntToStr
_WordToStr:
;__Lib_Conversions.c, 114 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x63D0	0xB081    SUB	SP, SP, #4
0x63D2	0x460A    MOV	R2, R1
0x63D4	0xB281    UXTH	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 119 :: 		
; len start address is: 0 (R0)
0x63D6	0x2000    MOVS	R0, #0
; output end address is: 8 (R2)
; input end address is: 4 (R1)
; len end address is: 0 (R0)
0x63D8	0x4615    MOV	R5, R2
L_WordToStr11:
; len start address is: 0 (R0)
; output start address is: 20 (R5)
; input start address is: 4 (R1)
0x63DA	0x2805    CMP	R0, #5
0x63DC	0xD205    BCS	L_WordToStr12
;__Lib_Conversions.c, 120 :: 		
0x63DE	0x182B    ADDS	R3, R5, R0
0x63E0	0x2220    MOVS	R2, #32
0x63E2	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 119 :: 		
0x63E4	0x1C40    ADDS	R0, R0, #1
0x63E6	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 120 :: 		
0x63E8	0xE7F7    B	L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c, 121 :: 		
0x63EA	0x182B    ADDS	R3, R5, R0
0x63EC	0x2200    MOVS	R2, #0
0x63EE	0x701A    STRB	R2, [R3, #0]
0x63F0	0x1E40    SUBS	R0, R0, #1
0x63F2	0xB2C0    UXTB	R0, R0
; output end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 123 :: 		
L_WordToStr14:
;__Lib_Conversions.c, 124 :: 		
; len start address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 20 (R5)
0x63F4	0x182C    ADDS	R4, R5, R0
0x63F6	0x230A    MOVS	R3, #10
0x63F8	0xFBB1F2F3  UDIV	R2, R1, R3
0x63FC	0xFB031212  MLS	R2, R3, R2, R1
0x6400	0xB292    UXTH	R2, R2
0x6402	0x3230    ADDS	R2, #48
0x6404	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 125 :: 		
0x6406	0x220A    MOVS	R2, #10
0x6408	0xFBB1F2F2  UDIV	R2, R1, R2
0x640C	0xB292    UXTH	R2, R2
0x640E	0xB291    UXTH	R1, R2
; input end address is: 4 (R1)
;__Lib_Conversions.c, 126 :: 		
0x6410	0xB902    CBNZ	R2, L_WordToStr16
; output end address is: 20 (R5)
; input end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 127 :: 		
0x6412	0xE002    B	L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c, 128 :: 		
; len start address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 20 (R5)
0x6414	0x1E40    SUBS	R0, R0, #1
0x6416	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 129 :: 		
; output end address is: 20 (R5)
; input end address is: 4 (R1)
; len end address is: 0 (R0)
0x6418	0xE7EC    B	L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c, 130 :: 		
L_end_WordToStr:
0x641A	0xB001    ADD	SP, SP, #4
0x641C	0x4770    BX	LR
; end of _WordToStr
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x9388	0xB081    SUB	SP, SP, #4
0x938A	0x9100    STR	R1, [SP, #0]
0x938C	0x4601    MOV	R1, R0
0x938E	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x9390	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x9392	0x461C    MOV	R4, R3
0x9394	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x9396	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x9398	0x4603    MOV	R3, R0
0x939A	0x1C42    ADDS	R2, R0, #1
0x939C	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x939E	0x781A    LDRB	R2, [R3, #0]
0x93A0	0x7022    STRB	R2, [R4, #0]
0x93A2	0x7822    LDRB	R2, [R4, #0]
0x93A4	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x93A6	0x462B    MOV	R3, R5
0x93A8	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x93AA	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x93AC	0xB001    ADD	SP, SP, #4
0x93AE	0x4770    BX	LR
; end of _strcpy
_strcat:
;__Lib_CString.c, 94 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x9724	0xB081    SUB	SP, SP, #4
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 0 (R0)
; from start address is: 4 (R1)
;__Lib_CString.c, 97 :: 		
; cp start address is: 12 (R3)
0x9726	0x4603    MOV	R3, R0
; to end address is: 0 (R0)
; cp end address is: 12 (R3)
; from end address is: 4 (R1)
;__Lib_CString.c, 98 :: 		
L_strcat22:
; cp start address is: 12 (R3)
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x9728	0x781A    LDRB	R2, [R3, #0]
0x972A	0xB10A    CBZ	R2, L_strcat23
;__Lib_CString.c, 99 :: 		
0x972C	0x1C5B    ADDS	R3, R3, #1
0x972E	0xE7FB    B	L_strcat22
L_strcat23:
;__Lib_CString.c, 100 :: 		
; cp end address is: 12 (R3)
L_strcat24:
; to end address is: 0 (R0)
; cp start address is: 20 (R5)
; to start address is: 0 (R0)
; from start address is: 4 (R1)
; cp start address is: 12 (R3)
0x9730	0x461C    MOV	R4, R3
0x9732	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x9734	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x9736	0x460B    MOV	R3, R1
0x9738	0x1C4A    ADDS	R2, R1, #1
0x973A	0x4611    MOV	R1, R2
; from end address is: 4 (R1)
0x973C	0x781A    LDRB	R2, [R3, #0]
0x973E	0x7022    STRB	R2, [R4, #0]
0x9740	0x7822    LDRB	R2, [R4, #0]
0x9742	0xB10A    CBZ	R2, L_strcat25
; cp end address is: 20 (R5)
; from end address is: 4 (R1)
;__Lib_CString.c, 101 :: 		
; from start address is: 4 (R1)
; cp start address is: 20 (R5)
0x9744	0x462B    MOV	R3, R5
; cp end address is: 20 (R5)
; from end address is: 4 (R1)
0x9746	0xE7F3    B	L_strcat24
L_strcat25:
;__Lib_CString.c, 102 :: 		
; to end address is: 0 (R0)
;__Lib_CString.c, 103 :: 		
L_end_strcat:
0x9748	0xB001    ADD	SP, SP, #4
0x974A	0x4770    BX	LR
; end of _strcat
_doGyro:
;ITG3200_main.c, 227 :: 		void doGyro(){
0xEB7C	0xB081    SUB	SP, SP, #4
0xEB7E	0xF8CDE000  STR	LR, [SP, #0]
;ITG3200_main.c, 228 :: 		GYRO_Test(&Gyro_vals);
0xEB82	0x4818    LDR	R0, [PC, #96]
0xEB84	0xF7FDFCDA  BL	ITG3200_main_GYRO_Test+0
;ITG3200_main.c, 229 :: 		Scroll_GYRO(_GYRO_UP);
0xEB88	0x2001    MOVS	R0, #1
0xEB8A	0xF7FDFB1F  BL	ITG3200_main_Scroll_Gyro+0
;ITG3200_main.c, 230 :: 		Scroll_Add_Line(_GYRO_UP);
0xEB8E	0x2001    MOVS	R0, #1
0xEB90	0xF7FDFBA6  BL	ITG3200_main_Scroll_Add_Line+0
;ITG3200_main.c, 231 :: 		WriteGraph(&Old_Gyro_vals, &Gyro_vals);
0xEB94	0x4913    LDR	R1, [PC, #76]
0xEB96	0x4814    LDR	R0, [PC, #80]
0xEB98	0xF7FDFC04  BL	ITG3200_main_WriteGraph+0
;ITG3200_main.c, 232 :: 		Old_gyro_vals = Gyro_vals;
0xEB9C	0x2306    MOVS	R3, #6
0xEB9E	0x4A12    LDR	R2, [PC, #72]
0xEBA0	0x4910    LDR	R1, [PC, #64]
L_doGyro25:
0xEBA2	0x7808    LDRB	R0, [R1, #0]
0xEBA4	0x7010    STRB	R0, [R2, #0]
0xEBA6	0x1E5B    SUBS	R3, R3, #1
0xEBA8	0xB2DB    UXTB	R3, R3
0xEBAA	0x1C49    ADDS	R1, R1, #1
0xEBAC	0x1C52    ADDS	R2, R2, #1
0xEBAE	0x2B00    CMP	R3, #0
0xEBB0	0xD1F7    BNE	L_doGyro25
;ITG3200_main.c, 234 :: 		Display_Value(&Label9, Gyro_vals.GyroXvalue);
0xEBB2	0x480C    LDR	R0, [PC, #48]
0xEBB4	0xF9B00000  LDRSH	R0, [R0, #0]
0xEBB8	0xB201    SXTH	R1, R0
0xEBBA	0x480C    LDR	R0, [PC, #48]
0xEBBC	0xF7FCFA68  BL	ITG3200_main_Display_Value+0
;ITG3200_main.c, 235 :: 		Display_Value(&Label31, Gyro_vals.GyroYvalue);
0xEBC0	0x480B    LDR	R0, [PC, #44]
0xEBC2	0xF9B00000  LDRSH	R0, [R0, #0]
0xEBC6	0xB201    SXTH	R1, R0
0xEBC8	0x480A    LDR	R0, [PC, #40]
0xEBCA	0xF7FCFA61  BL	ITG3200_main_Display_Value+0
;ITG3200_main.c, 236 :: 		Display_Value(&Label33, Gyro_vals.GyroZvalue);
0xEBCE	0x480A    LDR	R0, [PC, #40]
0xEBD0	0xF9B00000  LDRSH	R0, [R0, #0]
0xEBD4	0xB201    SXTH	R1, R0
0xEBD6	0x4809    LDR	R0, [PC, #36]
0xEBD8	0xF7FCFA5A  BL	ITG3200_main_Display_Value+0
;ITG3200_main.c, 237 :: 		}
L_end_doGyro:
0xEBDC	0xF8DDE000  LDR	LR, [SP, #0]
0xEBE0	0xB001    ADD	SP, SP, #4
0xEBE2	0x4770    BX	LR
0xEBE4	0x26E82000  	_Gyro_vals+0
0xEBE8	0x02DC2000  	_Old_Gyro_vals+0
0xEBEC	0x1B502000  	_Label9+0
0xEBF0	0x26EA2000  	_Gyro_vals+2
0xEBF4	0x1B7C2000  	_Label31+0
0xEBF8	0x26EC2000  	_Gyro_vals+4
0xEBFC	0x1BA82000  	_Label33+0
; end of _doGyro
ITG3200_main_GYRO_Test:
;ITG3200_main.c, 210 :: 		static void GYRO_Test(TGyro_values *values) {
; values start address is: 0 (R0)
0xC53C	0xB082    SUB	SP, SP, #8
0xC53E	0xF8CDE000  STR	LR, [SP, #0]
; values end address is: 0 (R0)
; values start address is: 0 (R0)
;ITG3200_main.c, 211 :: 		Gyro_Average();               // Calculate average X, Y and Z reads
0xC542	0x9001    STR	R0, [SP, #4]
0xC544	0xF7FBFC42  BL	ITG3200_main_Gyro_Average+0
0xC548	0x9801    LDR	R0, [SP, #4]
;ITG3200_main.c, 213 :: 		values->GyroXvalue = gyroreadings[0];
0xC54A	0x4909    LDR	R1, [PC, #36]
0xC54C	0xF9B11000  LDRSH	R1, [R1, #0]
0xC550	0x8001    STRH	R1, [R0, #0]
;ITG3200_main.c, 214 :: 		values->GyroYvalue = gyroreadings[1];
0xC552	0x1C82    ADDS	R2, R0, #2
0xC554	0x4907    LDR	R1, [PC, #28]
0xC556	0xF9B11000  LDRSH	R1, [R1, #0]
0xC55A	0x8011    STRH	R1, [R2, #0]
;ITG3200_main.c, 215 :: 		values->GyroZvalue = gyroreadings[2];
0xC55C	0x1D02    ADDS	R2, R0, #4
; values end address is: 0 (R0)
0xC55E	0x4906    LDR	R1, [PC, #24]
0xC560	0xF9B11000  LDRSH	R1, [R1, #0]
0xC564	0x8011    STRH	R1, [R2, #0]
;ITG3200_main.c, 216 :: 		}
L_end_GYRO_Test:
0xC566	0xF8DDE000  LDR	LR, [SP, #0]
0xC56A	0xB002    ADD	SP, SP, #8
0xC56C	0x4770    BX	LR
0xC56E	0xBF00    NOP
0xC570	0x02D62000  	_gyroreadings+0
0xC574	0x02D82000  	_gyroreadings+2
0xC578	0x02DA2000  	_gyroreadings+4
; end of ITG3200_main_GYRO_Test
ITG3200_main_Gyro_Average:
;ITG3200_main.c, 44 :: 		static void Gyro_Average() {
0x7DCC	0xB085    SUB	SP, SP, #20
0x7DCE	0xF8CDE000  STR	LR, [SP, #0]
;ITG3200_main.c, 48 :: 		sx = sy = sz = 0;
; sz start address is: 16 (R4)
0x7DD2	0x2400    MOVS	R4, #0
0x7DD4	0xB224    SXTH	R4, R4
; sy start address is: 20 (R5)
0x7DD6	0xF2400500  MOVW	R5, #0
0x7DDA	0xB22D    SXTH	R5, R5
; sx start address is: 24 (R6)
0x7DDC	0xF2400600  MOVW	R6, #0
0x7DE0	0xB236    SXTH	R6, R6
;ITG3200_main.c, 51 :: 		for (i=0; i<16; i++) {
; i start address is: 12 (R3)
0x7DE2	0x2300    MOVS	R3, #0
0x7DE4	0xB21B    SXTH	R3, R3
; sx end address is: 24 (R6)
; sy end address is: 20 (R5)
; sz end address is: 16 (R4)
; i end address is: 12 (R3)
L_ITG3200_main_Gyro_Average0:
; i start address is: 12 (R3)
; sx start address is: 24 (R6)
; sy start address is: 20 (R5)
; sz start address is: 16 (R4)
0x7DE6	0x2B10    CMP	R3, #16
0x7DE8	0xDA24    BGE	L_ITG3200_main_Gyro_Average1
;ITG3200_main.c, 52 :: 		ITG3200_Read(&xx, &yy, &zz);
0x7DEA	0xAA04    ADD	R2, SP, #16
0x7DEC	0xF10D010E  ADD	R1, SP, #14
0x7DF0	0xA803    ADD	R0, SP, #12
0x7DF2	0xF8AD4004  STRH	R4, [SP, #4]
0x7DF6	0xF8AD5006  STRH	R5, [SP, #6]
0x7DFA	0xF8AD6008  STRH	R6, [SP, #8]
0x7DFE	0xF8AD300A  STRH	R3, [SP, #10]
0x7E02	0xF7FEFC79  BL	_ITG3200_Read+0
0x7E06	0xF9BD300A  LDRSH	R3, [SP, #10]
0x7E0A	0xF9BD6008  LDRSH	R6, [SP, #8]
0x7E0E	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7E12	0xF9BD4004  LDRSH	R4, [SP, #4]
;ITG3200_main.c, 53 :: 		sx += xx;
0x7E16	0xF9BD000C  LDRSH	R0, [SP, #12]
0x7E1A	0x1836    ADDS	R6, R6, R0
0x7E1C	0xB236    SXTH	R6, R6
;ITG3200_main.c, 54 :: 		sy += yy;
0x7E1E	0xF9BD000E  LDRSH	R0, [SP, #14]
0x7E22	0x182D    ADDS	R5, R5, R0
0x7E24	0xB22D    SXTH	R5, R5
;ITG3200_main.c, 55 :: 		sz += zz;
0x7E26	0xF9BD0010  LDRSH	R0, [SP, #16]
0x7E2A	0x1824    ADDS	R4, R4, R0
0x7E2C	0xB224    SXTH	R4, R4
;ITG3200_main.c, 51 :: 		for (i=0; i<16; i++) {
0x7E2E	0x1C5B    ADDS	R3, R3, #1
0x7E30	0xB21B    SXTH	R3, R3
;ITG3200_main.c, 56 :: 		}
; i end address is: 12 (R3)
0x7E32	0xE7D8    B	L_ITG3200_main_Gyro_Average0
L_ITG3200_main_Gyro_Average1:
;ITG3200_main.c, 58 :: 		gyroreadings[0] = sx >> 4;
0x7E34	0x1131    ASRS	R1, R6, #4
; sx end address is: 24 (R6)
0x7E36	0x4806    LDR	R0, [PC, #24]
0x7E38	0x8001    STRH	R1, [R0, #0]
;ITG3200_main.c, 59 :: 		gyroreadings[1] = sy >> 4;
0x7E3A	0x1129    ASRS	R1, R5, #4
; sy end address is: 20 (R5)
0x7E3C	0x4805    LDR	R0, [PC, #20]
0x7E3E	0x8001    STRH	R1, [R0, #0]
;ITG3200_main.c, 60 :: 		gyroreadings[2] = sz >> 4;
0x7E40	0x1121    ASRS	R1, R4, #4
; sz end address is: 16 (R4)
0x7E42	0x4805    LDR	R0, [PC, #20]
0x7E44	0x8001    STRH	R1, [R0, #0]
;ITG3200_main.c, 61 :: 		}
L_end_Gyro_Average:
0x7E46	0xF8DDE000  LDR	LR, [SP, #0]
0x7E4A	0xB005    ADD	SP, SP, #20
0x7E4C	0x4770    BX	LR
0x7E4E	0xBF00    NOP
0x7E50	0x02D62000  	_gyroreadings+0
0x7E54	0x02D82000  	_gyroreadings+2
0x7E58	0x02DA2000  	_gyroreadings+4
; end of ITG3200_main_Gyro_Average
_ITG3200_Read:
;ITG3200_driver.c, 47 :: 		void ITG3200_Read(int *data_X, int *data_Y, int *data_Z){
; data_Y start address is: 4 (R1)
; data_X start address is: 0 (R0)
0x66F8	0xB082    SUB	SP, SP, #8
0x66FA	0xF8CDE000  STR	LR, [SP, #0]
0x66FE	0x4683    MOV	R11, R0
0x6700	0x468C    MOV	R12, R1
0x6702	0x9201    STR	R2, [SP, #4]
; data_Y end address is: 4 (R1)
; data_X end address is: 0 (R0)
; data_X start address is: 44 (R11)
; data_Y start address is: 48 (R12)
;ITG3200_driver.c, 48 :: 		gyrodata_[0] = GYRO_XOUT_H;
0x6704	0x4B19    LDR	R3, [PC, #100]
0x6706	0x781C    LDRB	R4, [R3, #0]
0x6708	0x4B19    LDR	R3, [PC, #100]
0x670A	0x701C    STRB	R4, [R3, #0]
;ITG3200_driver.c, 49 :: 		I2C2_Start();              // issue I2C start signal
0x670C	0xF000F8A2  BL	_I2C2_Start+0
;ITG3200_driver.c, 50 :: 		I2C2_Write(_GYRO_ADDRESS, gyrodata_, 1, END_MODE_RESTART);
0x6710	0xF2400300  MOVW	R3, #0
0x6714	0x2201    MOVS	R2, #1
0x6716	0x4916    LDR	R1, [PC, #88]
0x6718	0x2068    MOVS	R0, #104
0x671A	0xF7FBFE7F  BL	_I2C2_Write+0
;ITG3200_driver.c, 51 :: 		I2C2_Read(_GYRO_ADDRESS, gyrodata_, 6, END_MODE_STOP);
0x671E	0xF2400301  MOVW	R3, #1
0x6722	0x2206    MOVS	R2, #6
0x6724	0x4912    LDR	R1, [PC, #72]
0x6726	0x2068    MOVS	R0, #104
0x6728	0xF7FBFEBA  BL	_I2C2_Read+0
;ITG3200_driver.c, 53 :: 		*data_X = gyrodata_[0] + (gyrodata_[1] << 8);
0x672C	0x4B11    LDR	R3, [PC, #68]
0x672E	0x781B    LDRB	R3, [R3, #0]
0x6730	0x021C    LSLS	R4, R3, #8
0x6732	0xB2A4    UXTH	R4, R4
0x6734	0x4B0E    LDR	R3, [PC, #56]
0x6736	0x781B    LDRB	R3, [R3, #0]
0x6738	0x191B    ADDS	R3, R3, R4
0x673A	0xF8AB3000  STRH	R3, [R11, #0]
; data_X end address is: 44 (R11)
;ITG3200_driver.c, 54 :: 		*data_Y = gyrodata_[2] + (gyrodata_[3] << 8);
0x673E	0x4B0E    LDR	R3, [PC, #56]
0x6740	0x781B    LDRB	R3, [R3, #0]
0x6742	0x021C    LSLS	R4, R3, #8
0x6744	0xB2A4    UXTH	R4, R4
0x6746	0x4B0D    LDR	R3, [PC, #52]
0x6748	0x781B    LDRB	R3, [R3, #0]
0x674A	0x191B    ADDS	R3, R3, R4
0x674C	0xF8AC3000  STRH	R3, [R12, #0]
; data_Y end address is: 48 (R12)
;ITG3200_driver.c, 55 :: 		*data_Z = gyrodata_[4] + (gyrodata_[5] << 8);
0x6750	0x4B0B    LDR	R3, [PC, #44]
0x6752	0x781B    LDRB	R3, [R3, #0]
0x6754	0x021C    LSLS	R4, R3, #8
0x6756	0xB2A4    UXTH	R4, R4
0x6758	0x4B0A    LDR	R3, [PC, #40]
0x675A	0x781B    LDRB	R3, [R3, #0]
0x675C	0x191C    ADDS	R4, R3, R4
0x675E	0x9B01    LDR	R3, [SP, #4]
0x6760	0x801C    STRH	R4, [R3, #0]
;ITG3200_driver.c, 56 :: 		}
L_end_ITG3200_Read:
0x6762	0xF8DDE000  LDR	LR, [SP, #0]
0x6766	0xB002    ADD	SP, SP, #8
0x6768	0x4770    BX	LR
0x676A	0xBF00    NOP
0x676C	0x02D52000  	_GYRO_XOUT_H+0
0x6770	0x26DD2000  	_gyrodata_+0
0x6774	0x26DE2000  	_gyrodata_+1
0x6778	0x26E02000  	_gyrodata_+3
0x677C	0x26DF2000  	_gyrodata_+2
0x6780	0x26E22000  	_gyrodata_+5
0x6784	0x26E12000  	_gyrodata_+4
; end of _ITG3200_Read
ITG3200_main_Scroll_Gyro:
;ITG3200_main.c, 95 :: 		static void Scroll_Gyro(char Adir) {
; Adir start address is: 0 (R0)
0xC1CC	0xB081    SUB	SP, SP, #4
0xC1CE	0xF8CDE000  STR	LR, [SP, #0]
; Adir end address is: 0 (R0)
; Adir start address is: 0 (R0)
;ITG3200_main.c, 98 :: 		if (Adir == _Gyro_UP) {
0xC1D2	0x2801    CMP	R0, #1
0xC1D4	0xD10F    BNE	L_ITG3200_main_Scroll_Gyro3
; Adir end address is: 0 (R0)
;ITG3200_main.c, 99 :: 		if (_disp_gyro_scroll != _SCROLL_GYRO_FIRST_LINE)
0xC1D6	0x4915    LDR	R1, [PC, #84]
0xC1D8	0xF9B11000  LDRSH	R1, [R1, #0]
0xC1DC	0x2929    CMP	R1, #41
0xC1DE	0xD005    BEQ	L_ITG3200_main_Scroll_Gyro4
;ITG3200_main.c, 100 :: 		_disp_gyro_scroll--;
0xC1E0	0x4A12    LDR	R2, [PC, #72]
0xC1E2	0xF9B21000  LDRSH	R1, [R2, #0]
0xC1E6	0x1E49    SUBS	R1, R1, #1
0xC1E8	0x8011    STRH	R1, [R2, #0]
0xC1EA	0xE003    B	L_ITG3200_main_Scroll_Gyro5
L_ITG3200_main_Scroll_Gyro4:
;ITG3200_main.c, 102 :: 		_disp_gyro_scroll = _SCROLL_GYRO_LAST_LINE - 1;
0xC1EC	0x22F5    MOVS	R2, #245
0xC1EE	0xB212    SXTH	R2, R2
0xC1F0	0x490E    LDR	R1, [PC, #56]
0xC1F2	0x800A    STRH	R2, [R1, #0]
;ITG3200_main.c, 103 :: 		}
L_ITG3200_main_Scroll_Gyro5:
;ITG3200_main.c, 104 :: 		}
0xC1F4	0xE00F    B	L_ITG3200_main_Scroll_Gyro6
L_ITG3200_main_Scroll_Gyro3:
;ITG3200_main.c, 106 :: 		if (_disp_gyro_scroll != _SCROLL_GYRO_LAST_LINE - 1)
0xC1F6	0x490D    LDR	R1, [PC, #52]
0xC1F8	0xF9B11000  LDRSH	R1, [R1, #0]
0xC1FC	0x29F5    CMP	R1, #245
0xC1FE	0xD005    BEQ	L_ITG3200_main_Scroll_Gyro7
;ITG3200_main.c, 107 :: 		_disp_gyro_scroll++;
0xC200	0x4A0A    LDR	R2, [PC, #40]
0xC202	0xF9B21000  LDRSH	R1, [R2, #0]
0xC206	0x1C49    ADDS	R1, R1, #1
0xC208	0x8011    STRH	R1, [R2, #0]
0xC20A	0xE004    B	L_ITG3200_main_Scroll_Gyro8
L_ITG3200_main_Scroll_Gyro7:
;ITG3200_main.c, 109 :: 		_disp_gyro_scroll = _SCROLL_GYRO_FIRST_LINE;
0xC20C	0xF2400229  MOVW	R2, #41
0xC210	0xB212    SXTH	R2, R2
0xC212	0x4906    LDR	R1, [PC, #24]
0xC214	0x800A    STRH	R2, [R1, #0]
;ITG3200_main.c, 110 :: 		}
L_ITG3200_main_Scroll_Gyro8:
;ITG3200_main.c, 111 :: 		}
L_ITG3200_main_Scroll_Gyro6:
;ITG3200_main.c, 113 :: 		Scroll(_disp_gyro_scroll);
0xC216	0x4905    LDR	R1, [PC, #20]
0xC218	0xF9B11000  LDRSH	R1, [R1, #0]
0xC21C	0xB288    UXTH	R0, R1
0xC21E	0xF7FBFE83  BL	_Scroll+0
;ITG3200_main.c, 114 :: 		}
L_end_Scroll_Gyro:
0xC222	0xF8DDE000  LDR	LR, [SP, #0]
0xC226	0xB001    ADD	SP, SP, #4
0xC228	0x4770    BX	LR
0xC22A	0xBF00    NOP
0xC22C	0x02E22000  	__disp_gyro_scroll+0
; end of ITG3200_main_Scroll_Gyro
ITG3200_main_Scroll_Add_Line:
;ITG3200_main.c, 150 :: 		static void Scroll_Add_Line(char ScrollDiection){
; ScrollDiection start address is: 0 (R0)
0xC2E0	0xB082    SUB	SP, SP, #8
0xC2E2	0xF8CDE000  STR	LR, [SP, #0]
; ScrollDiection end address is: 0 (R0)
; ScrollDiection start address is: 0 (R0)
;ITG3200_main.c, 152 :: 		if (ScrollDiection > 0){
0xC2E6	0x2800    CMP	R0, #0
0xC2E8	0xD94F    BLS	L_ITG3200_main_Scroll_Add_Line12
; ScrollDiection end address is: 0 (R0)
;ITG3200_main.c, 153 :: 		temp = _disp_gyro_scroll + 1;
0xC2EA	0x492A    LDR	R1, [PC, #168]
0xC2EC	0xF9B11000  LDRSH	R1, [R1, #0]
0xC2F0	0x1C49    ADDS	R1, R1, #1
0xC2F2	0xB209    SXTH	R1, R1
; temp start address is: 0 (R0)
0xC2F4	0xB208    SXTH	R0, R1
;ITG3200_main.c, 154 :: 		if (temp > _SCROLL_GYRO_LAST_LINE - 1)
0xC2F6	0x29F5    CMP	R1, #245
0xC2F8	0xDD03    BLE	L_ITG3200_main_Scroll_Add_Line29
;ITG3200_main.c, 155 :: 		temp = _SCROLL_GYRO_FIRST_LINE;
0xC2FA	0xF2400029  MOVW	R0, #41
0xC2FE	0xB200    SXTH	R0, R0
; temp end address is: 0 (R0)
0xC300	0xE7FF    B	L_ITG3200_main_Scroll_Add_Line13
L_ITG3200_main_Scroll_Add_Line29:
;ITG3200_main.c, 154 :: 		if (temp > _SCROLL_GYRO_LAST_LINE - 1)
;ITG3200_main.c, 155 :: 		temp = _SCROLL_GYRO_FIRST_LINE;
L_ITG3200_main_Scroll_Add_Line13:
;ITG3200_main.c, 156 :: 		TFT_CS = 0;
; temp start address is: 0 (R0)
0xC302	0x2200    MOVS	R2, #0
0xC304	0xB252    SXTB	R2, R2
0xC306	0x4924    LDR	R1, [PC, #144]
0xC308	0x600A    STR	R2, [R1, #0]
;ITG3200_main.c, 157 :: 		TFT_SSD1963_Set_Address_Ptr(0, temp, 480, temp);
0xC30A	0xB283    UXTH	R3, R0
0xC30C	0xF24012E0  MOVW	R2, #480
0xC310	0xB299    UXTH	R1, R3
; temp end address is: 0 (R0)
0xC312	0x2000    MOVS	R0, #0
0xC314	0x4C21    LDR	R4, [PC, #132]
0xC316	0x6824    LDR	R4, [R4, #0]
0xC318	0x47A0    BLX	R4
;ITG3200_main.c, 158 :: 		for (i = 0; i < 480; i++)
; i start address is: 0 (R0)
0xC31A	0x2000    MOVS	R0, #0
0xC31C	0xB200    SXTH	R0, R0
; i end address is: 0 (R0)
L_ITG3200_main_Scroll_Add_Line14:
; i start address is: 0 (R0)
0xC31E	0xF5B07FF0  CMP	R0, #480
0xC322	0xDA2E    BGE	L_ITG3200_main_Scroll_Add_Line15
;ITG3200_main.c, 159 :: 		if ((i == 90) | (i == 240) | (i == 390))
0xC324	0x285A    CMP	R0, #90
0xC326	0xF2400200  MOVW	R2, #0
0xC32A	0xD100    BNE	L_ITG3200_main_Scroll_Add_Line35
0xC32C	0x2201    MOVS	R2, #1
L_ITG3200_main_Scroll_Add_Line35:
0xC32E	0xB2D2    UXTB	R2, R2
0xC330	0x28F0    CMP	R0, #240
0xC332	0xF2400100  MOVW	R1, #0
0xC336	0xD100    BNE	L_ITG3200_main_Scroll_Add_Line36
0xC338	0x2101    MOVS	R1, #1
L_ITG3200_main_Scroll_Add_Line36:
0xC33A	0xB2C9    UXTB	R1, R1
0xC33C	0x430A    ORRS	R2, R1
0xC33E	0xB2D2    UXTB	R2, R2
0xC340	0xF5B07FC3  CMP	R0, #390
0xC344	0xF2400100  MOVW	R1, #0
0xC348	0xD100    BNE	L_ITG3200_main_Scroll_Add_Line37
0xC34A	0x2101    MOVS	R1, #1
L_ITG3200_main_Scroll_Add_Line37:
0xC34C	0xB2C9    UXTB	R1, R1
0xC34E	0xEA420101  ORR	R1, R2, R1, LSL #0
0xC352	0xB2C9    UXTB	R1, R1
0xC354	0xB149    CBZ	R1, L_ITG3200_main_Scroll_Add_Line17
;ITG3200_main.c, 160 :: 		TFT_Write_Data_Ptr(CL_SILVER);
0xC356	0xF8AD0004  STRH	R0, [SP, #4]
0xC35A	0xF24C6018  MOVW	R0, #50712
0xC35E	0x4C10    LDR	R4, [PC, #64]
0xC360	0x6824    LDR	R4, [R4, #0]
0xC362	0x47A0    BLX	R4
0xC364	0xF9BD0004  LDRSH	R0, [SP, #4]
0xC368	0xE008    B	L_ITG3200_main_Scroll_Add_Line18
L_ITG3200_main_Scroll_Add_Line17:
;ITG3200_main.c, 162 :: 		TFT_Write_Data_Ptr(CL_WHITE);
0xC36A	0xF8AD0004  STRH	R0, [SP, #4]
0xC36E	0xF64F70FF  MOVW	R0, #65535
0xC372	0x4C0B    LDR	R4, [PC, #44]
0xC374	0x6824    LDR	R4, [R4, #0]
0xC376	0x47A0    BLX	R4
0xC378	0xF9BD0004  LDRSH	R0, [SP, #4]
L_ITG3200_main_Scroll_Add_Line18:
;ITG3200_main.c, 158 :: 		for (i = 0; i < 480; i++)
0xC37C	0x1C40    ADDS	R0, R0, #1
0xC37E	0xB200    SXTH	R0, R0
;ITG3200_main.c, 162 :: 		TFT_Write_Data_Ptr(CL_WHITE);
; i end address is: 0 (R0)
0xC380	0xE7CD    B	L_ITG3200_main_Scroll_Add_Line14
L_ITG3200_main_Scroll_Add_Line15:
;ITG3200_main.c, 163 :: 		TFT_CS = 1;
0xC382	0x2201    MOVS	R2, #1
0xC384	0xB252    SXTB	R2, R2
0xC386	0x4904    LDR	R1, [PC, #16]
0xC388	0x600A    STR	R2, [R1, #0]
;ITG3200_main.c, 164 :: 		}
L_ITG3200_main_Scroll_Add_Line12:
;ITG3200_main.c, 165 :: 		}
L_end_Scroll_Add_Line:
0xC38A	0xF8DDE000  LDR	LR, [SP, #0]
0xC38E	0xB002    ADD	SP, SP, #8
0xC390	0x4770    BX	LR
0xC392	0xBF00    NOP
0xC394	0x02E22000  	__disp_gyro_scroll+0
0xC398	0x82B44242  	TFT_CS+0
0xC39C	0x045C2000  	_TFT_SSD1963_Set_Address_Ptr+0
0xC3A0	0x04602000  	_TFT_Write_Data_Ptr+0
; end of ITG3200_main_Scroll_Add_Line
ITG3200_main_WriteGraph:
;ITG3200_main.c, 123 :: 		static void WriteGraph(TGyro_values *old, TGyro_values *new){
0xC3A4	0xB083    SUB	SP, SP, #12
0xC3A6	0xF8CDE000  STR	LR, [SP, #0]
0xC3AA	0x9001    STR	R0, [SP, #4]
0xC3AC	0x9102    STR	R1, [SP, #8]
;ITG3200_main.c, 125 :: 		if ((_disp_gyro_scroll < _SCROLL_GYRO_LAST_LINE - 2) && (_disp_gyro_scroll > _SCROLL_GYRO_FIRST_LINE)){
0xC3AE	0x4A46    LDR	R2, [PC, #280]
0xC3B0	0xF9B22000  LDRSH	R2, [R2, #0]
0xC3B4	0x2AF4    CMP	R2, #244
0xC3B6	0xF2808082  BGE	L_ITG3200_main_WriteGraph28
0xC3BA	0x4A43    LDR	R2, [PC, #268]
0xC3BC	0xF9B22000  LDRSH	R2, [R2, #0]
0xC3C0	0x2A29    CMP	R2, #41
0xC3C2	0xF340807C  BLE	L_ITG3200_main_WriteGraph27
L_ITG3200_main_WriteGraph26:
;ITG3200_main.c, 126 :: 		TFT_Set_Pen(CL_RED, 2);
0xC3C6	0x2102    MOVS	R1, #2
0xC3C8	0xF64F0000  MOVW	R0, #63488
0xC3CC	0xF7FDFAF0  BL	_TFT_Set_Pen+0
;ITG3200_main.c, 127 :: 		temp1 = (old->GyroXvalue * 30) / 256 + 90;
0xC3D0	0x9A01    LDR	R2, [SP, #4]
0xC3D2	0xF9B23000  LDRSH	R3, [R2, #0]
0xC3D6	0x221E    MOVS	R2, #30
0xC3D8	0xB212    SXTH	R2, R2
0xC3DA	0xFB03F002  MUL	R0, R3, R2
0xC3DE	0xB200    SXTH	R0, R0
0xC3E0	0x1200    ASRS	R0, R0, #8
0xC3E2	0xB200    SXTH	R0, R0
0xC3E4	0x305A    ADDS	R0, #90
0xC3E6	0xB200    SXTH	R0, R0
; temp1 start address is: 0 (R0)
;ITG3200_main.c, 128 :: 		temp2 = (new->GyroXvalue * 30) / 256 + 90;
0xC3E8	0x9A02    LDR	R2, [SP, #8]
0xC3EA	0xF9B23000  LDRSH	R3, [R2, #0]
0xC3EE	0x221E    MOVS	R2, #30
0xC3F0	0xB212    SXTH	R2, R2
0xC3F2	0x435A    MULS	R2, R3, R2
0xC3F4	0xB212    SXTH	R2, R2
0xC3F6	0x1212    ASRS	R2, R2, #8
0xC3F8	0xB212    SXTH	R2, R2
0xC3FA	0xF202055A  ADDW	R5, R2, #90
;ITG3200_main.c, 129 :: 		TFT_Line(temp1, _disp_gyro_scroll + 2, temp2, _disp_gyro_scroll + 1);
0xC3FE	0x4C32    LDR	R4, [PC, #200]
0xC400	0xF9B42000  LDRSH	R2, [R4, #0]
0xC404	0x1C53    ADDS	R3, R2, #1
0xC406	0x4622    MOV	R2, R4
0xC408	0xF9B22000  LDRSH	R2, [R2, #0]
0xC40C	0x1C92    ADDS	R2, R2, #2
0xC40E	0xB211    SXTH	R1, R2
0xC410	0xB22A    SXTH	R2, R5
; temp1 end address is: 0 (R0)
0xC412	0xF7F8F87B  BL	_TFT_Line+0
;ITG3200_main.c, 131 :: 		TFT_Set_Pen(CL_BLUE, 2);
0xC416	0x2102    MOVS	R1, #2
0xC418	0xF240001F  MOVW	R0, #31
0xC41C	0xF7FDFAC8  BL	_TFT_Set_Pen+0
;ITG3200_main.c, 132 :: 		temp1 = (old->GyroYvalue * 30) / 256 + 240;
0xC420	0x9A01    LDR	R2, [SP, #4]
0xC422	0x1C92    ADDS	R2, R2, #2
0xC424	0xF9B23000  LDRSH	R3, [R2, #0]
0xC428	0x221E    MOVS	R2, #30
0xC42A	0xB212    SXTH	R2, R2
0xC42C	0xFB03F002  MUL	R0, R3, R2
0xC430	0xB200    SXTH	R0, R0
0xC432	0x1200    ASRS	R0, R0, #8
0xC434	0xB200    SXTH	R0, R0
0xC436	0x30F0    ADDS	R0, #240
0xC438	0xB200    SXTH	R0, R0
; temp1 start address is: 0 (R0)
;ITG3200_main.c, 133 :: 		temp2 = (new->GyroYvalue * 30) / 256 + 240;
0xC43A	0x9A02    LDR	R2, [SP, #8]
0xC43C	0x1C92    ADDS	R2, R2, #2
0xC43E	0xF9B23000  LDRSH	R3, [R2, #0]
0xC442	0x221E    MOVS	R2, #30
0xC444	0xB212    SXTH	R2, R2
0xC446	0x435A    MULS	R2, R3, R2
0xC448	0xB212    SXTH	R2, R2
0xC44A	0x1212    ASRS	R2, R2, #8
0xC44C	0xB212    SXTH	R2, R2
0xC44E	0xF20205F0  ADDW	R5, R2, #240
;ITG3200_main.c, 134 :: 		TFT_Line(temp1, _disp_gyro_scroll + 2, temp2, _disp_gyro_scroll + 1);
0xC452	0x4C1D    LDR	R4, [PC, #116]
0xC454	0xF9B42000  LDRSH	R2, [R4, #0]
0xC458	0x1C53    ADDS	R3, R2, #1
0xC45A	0x4622    MOV	R2, R4
0xC45C	0xF9B22000  LDRSH	R2, [R2, #0]
0xC460	0x1C92    ADDS	R2, R2, #2
0xC462	0xB211    SXTH	R1, R2
0xC464	0xB22A    SXTH	R2, R5
; temp1 end address is: 0 (R0)
0xC466	0xF7F8F851  BL	_TFT_Line+0
;ITG3200_main.c, 136 :: 		TFT_Set_Pen(CL_GREEN, 2);
0xC46A	0x2102    MOVS	R1, #2
0xC46C	0xF2404000  MOVW	R0, #1024
0xC470	0xF7FDFA9E  BL	_TFT_Set_Pen+0
;ITG3200_main.c, 137 :: 		temp1 = (old->GyroZvalue * 30) / 256 + 390;
0xC474	0x9A01    LDR	R2, [SP, #4]
0xC476	0x1D12    ADDS	R2, R2, #4
0xC478	0xF9B23000  LDRSH	R3, [R2, #0]
0xC47C	0x221E    MOVS	R2, #30
0xC47E	0xB212    SXTH	R2, R2
0xC480	0x435A    MULS	R2, R3, R2
0xC482	0xB212    SXTH	R2, R2
0xC484	0x1212    ASRS	R2, R2, #8
0xC486	0xB212    SXTH	R2, R2
0xC488	0xF50272C3  ADD	R2, R2, #390
; temp1 start address is: 0 (R0)
0xC48C	0xB210    SXTH	R0, R2
;ITG3200_main.c, 138 :: 		temp2 = (new->GyroZvalue * 30) / 256 + 390;
0xC48E	0x9A02    LDR	R2, [SP, #8]
0xC490	0x1D12    ADDS	R2, R2, #4
0xC492	0xF9B23000  LDRSH	R3, [R2, #0]
0xC496	0x221E    MOVS	R2, #30
0xC498	0xB212    SXTH	R2, R2
0xC49A	0x435A    MULS	R2, R3, R2
0xC49C	0xB212    SXTH	R2, R2
0xC49E	0x1212    ASRS	R2, R2, #8
0xC4A0	0xB212    SXTH	R2, R2
0xC4A2	0xF50275C3  ADD	R5, R2, #390
;ITG3200_main.c, 139 :: 		TFT_Line(temp1, _disp_gyro_scroll + 2, temp2, _disp_gyro_scroll + 1);
0xC4A6	0x4C08    LDR	R4, [PC, #32]
0xC4A8	0xF9B42000  LDRSH	R2, [R4, #0]
0xC4AC	0x1C53    ADDS	R3, R2, #1
0xC4AE	0x4622    MOV	R2, R4
0xC4B0	0xF9B22000  LDRSH	R2, [R2, #0]
0xC4B4	0x1C92    ADDS	R2, R2, #2
0xC4B6	0xB211    SXTH	R1, R2
0xC4B8	0xB22A    SXTH	R2, R5
; temp1 end address is: 0 (R0)
0xC4BA	0xF7F8F827  BL	_TFT_Line+0
;ITG3200_main.c, 125 :: 		if ((_disp_gyro_scroll < _SCROLL_GYRO_LAST_LINE - 2) && (_disp_gyro_scroll > _SCROLL_GYRO_FIRST_LINE)){
L_ITG3200_main_WriteGraph28:
L_ITG3200_main_WriteGraph27:
;ITG3200_main.c, 141 :: 		}
L_end_WriteGraph:
0xC4BE	0xF8DDE000  LDR	LR, [SP, #0]
0xC4C2	0xB003    ADD	SP, SP, #12
0xC4C4	0x4770    BX	LR
0xC4C6	0xBF00    NOP
0xC4C8	0x02E22000  	__disp_gyro_scroll+0
; end of ITG3200_main_WriteGraph
ITG3200_main_Display_Value:
;ITG3200_main.c, 70 :: 		static void Display_Value(TLabel *label, int val) {
; val start address is: 4 (R1)
0xB090	0xB088    SUB	SP, SP, #32
0xB092	0xF8CDE000  STR	LR, [SP, #0]
0xB096	0x9007    STR	R0, [SP, #28]
0xB098	0xB20F    SXTH	R7, R1
; val end address is: 4 (R1)
; val start address is: 28 (R7)
;ITG3200_main.c, 74 :: 		ptr = label->Caption;
0xB09A	0x9A07    LDR	R2, [SP, #28]
0xB09C	0x3210    ADDS	R2, #16
0xB09E	0x6812    LDR	R2, [R2, #0]
0xB0A0	0x9206    STR	R2, [SP, #24]
;ITG3200_main.c, 75 :: 		TFT_Set_Pen(Gyro_test.Color,  0);
0xB0A2	0x4A25    LDR	R2, [PC, #148]
0xB0A4	0x8812    LDRH	R2, [R2, #0]
0xB0A6	0x2100    MOVS	R1, #0
0xB0A8	0xB290    UXTH	R0, R2
0xB0AA	0xF7FEFC81  BL	_TFT_Set_Pen+0
;ITG3200_main.c, 76 :: 		TFT_Set_Brush(1, Gyro_test.Color, 0, 0, 0, 0);
0xB0AE	0x2400    MOVS	R4, #0
0xB0B0	0x2300    MOVS	R3, #0
0xB0B2	0x4A21    LDR	R2, [PC, #132]
0xB0B4	0x8812    LDRH	R2, [R2, #0]
0xB0B6	0xB410    PUSH	(R4)
0xB0B8	0xB408    PUSH	(R3)
0xB0BA	0x2300    MOVS	R3, #0
0xB0BC	0xB291    UXTH	R1, R2
0xB0BE	0x2200    MOVS	R2, #0
0xB0C0	0x2001    MOVS	R0, #1
0xB0C2	0xF7FEF941  BL	_TFT_Set_Brush+0
0xB0C6	0xB002    ADD	SP, SP, #8
;ITG3200_main.c, 77 :: 		IntToStr(val & 0xFE, text);
0xB0C8	0xAB01    ADD	R3, SP, #4
0xB0CA	0xF00702FE  AND	R2, R7, #254
; val end address is: 28 (R7)
0xB0CE	0x4619    MOV	R1, R3
0xB0D0	0xB210    SXTH	R0, R2
0xB0D2	0xF7FEFCED  BL	_IntToStr+0
;ITG3200_main.c, 78 :: 		strcpy(text1, ptr);
0xB0D6	0xF10D020B  ADD	R2, SP, #11
0xB0DA	0x9906    LDR	R1, [SP, #24]
0xB0DC	0x4610    MOV	R0, R2
0xB0DE	0xF7FEF953  BL	_strcpy+0
;ITG3200_main.c, 79 :: 		strcat(text1, text);
0xB0E2	0xAB01    ADD	R3, SP, #4
0xB0E4	0xF10D020B  ADD	R2, SP, #11
0xB0E8	0x4619    MOV	R1, R3
0xB0EA	0x4610    MOV	R0, R2
0xB0EC	0xF7FEFB1A  BL	_strcat+0
;ITG3200_main.c, 80 :: 		TFT_Rectangle(label->Left, Label->Top, label->Left + 55, Label->Top + 20);
0xB0F0	0x9A07    LDR	R2, [SP, #28]
0xB0F2	0x3208    ADDS	R2, #8
0xB0F4	0x8813    LDRH	R3, [R2, #0]
0xB0F6	0xF2030514  ADDW	R5, R3, #20
0xB0FA	0x9A07    LDR	R2, [SP, #28]
0xB0FC	0x1D92    ADDS	R2, R2, #6
0xB0FE	0x8812    LDRH	R2, [R2, #0]
0xB100	0xF2020437  ADDW	R4, R2, #55
0xB104	0xB21B    SXTH	R3, R3
0xB106	0xB212    SXTH	R2, R2
0xB108	0xB219    SXTH	R1, R3
0xB10A	0xB22B    SXTH	R3, R5
0xB10C	0xB210    SXTH	R0, R2
0xB10E	0xB222    SXTH	R2, R4
0xB110	0xF7FCFD1A  BL	_TFT_Rectangle+0
;ITG3200_main.c, 81 :: 		label->Caption = text1;
0xB114	0x9A07    LDR	R2, [SP, #28]
0xB116	0xF2020310  ADDW	R3, R2, #16
0xB11A	0xF10D020B  ADD	R2, SP, #11
0xB11E	0x601A    STR	R2, [R3, #0]
;ITG3200_main.c, 82 :: 		Drawlabel(label);
0xB120	0x9807    LDR	R0, [SP, #28]
0xB122	0xF002FB71  BL	_DrawLabel+0
;ITG3200_main.c, 83 :: 		label->Caption = ptr;
0xB126	0x9A07    LDR	R2, [SP, #28]
0xB128	0xF2020310  ADDW	R3, R2, #16
0xB12C	0x9A06    LDR	R2, [SP, #24]
0xB12E	0x601A    STR	R2, [R3, #0]
;ITG3200_main.c, 84 :: 		}
L_end_Display_Value:
0xB130	0xF8DDE000  LDR	LR, [SP, #0]
0xB134	0xB008    ADD	SP, SP, #32
0xB136	0x4770    BX	LR
0xB138	0x23882000  	_Gyro_test+0
; end of ITG3200_main_Display_Value
_doMagnet:
;HMC5883L_main.c, 227 :: 		void doMagnet(){
0xEA64	0xB081    SUB	SP, SP, #4
0xEA66	0xF8CDE000  STR	LR, [SP, #0]
;HMC5883L_main.c, 228 :: 		MAGNET_Test(&Magnet_vals);
0xEA6A	0x4818    LDR	R0, [PC, #96]
0xEA6C	0xF7FCFB66  BL	HMC5883L_main_MAGNET_Test+0
;HMC5883L_main.c, 229 :: 		Scroll_MAGNET(_MAGNET_UP);
0xEA70	0x2001    MOVS	R0, #1
0xEA72	0xF7FCFC2D  BL	HMC5883L_main_Scroll_MAGNET+0
;HMC5883L_main.c, 230 :: 		Scroll_Add_Line(_MAGNET_UP);
0xEA76	0x2001    MOVS	R0, #1
0xEA78	0xF7FCFC5C  BL	HMC5883L_main_Scroll_Add_Line+0
;HMC5883L_main.c, 231 :: 		WriteGraph(&Old_Magnet_vals, &Magnet_vals);
0xEA7C	0x4913    LDR	R1, [PC, #76]
0xEA7E	0x4814    LDR	R0, [PC, #80]
0xEA80	0xF7FCFB7C  BL	HMC5883L_main_WriteGraph+0
;HMC5883L_main.c, 232 :: 		Old_magnet_vals = Magnet_vals;
0xEA84	0x2306    MOVS	R3, #6
0xEA86	0x4A12    LDR	R2, [PC, #72]
0xEA88	0x4910    LDR	R1, [PC, #64]
L_doMagnet25:
0xEA8A	0x7808    LDRB	R0, [R1, #0]
0xEA8C	0x7010    STRB	R0, [R2, #0]
0xEA8E	0x1E5B    SUBS	R3, R3, #1
0xEA90	0xB2DB    UXTB	R3, R3
0xEA92	0x1C49    ADDS	R1, R1, #1
0xEA94	0x1C52    ADDS	R2, R2, #1
0xEA96	0x2B00    CMP	R3, #0
0xEA98	0xD1F7    BNE	L_doMagnet25
;HMC5883L_main.c, 234 :: 		Display_Value(&Label35, Magnet_vals.Xvalue);
0xEA9A	0x480C    LDR	R0, [PC, #48]
0xEA9C	0xF9B00000  LDRSH	R0, [R0, #0]
0xEAA0	0xB201    SXTH	R1, R0
0xEAA2	0x480C    LDR	R0, [PC, #48]
0xEAA4	0xF7FDF838  BL	HMC5883L_main_Display_Value+0
;HMC5883L_main.c, 235 :: 		Display_Value(&Label36, Magnet_vals.Yvalue);
0xEAA8	0x480B    LDR	R0, [PC, #44]
0xEAAA	0xF9B00000  LDRSH	R0, [R0, #0]
0xEAAE	0xB201    SXTH	R1, R0
0xEAB0	0x480A    LDR	R0, [PC, #40]
0xEAB2	0xF7FDF831  BL	HMC5883L_main_Display_Value+0
;HMC5883L_main.c, 236 :: 		Display_Value(&Label37, Magnet_vals.Zvalue);
0xEAB6	0x480A    LDR	R0, [PC, #40]
0xEAB8	0xF9B00000  LDRSH	R0, [R0, #0]
0xEABC	0xB201    SXTH	R1, R0
0xEABE	0x4809    LDR	R0, [PC, #36]
0xEAC0	0xF7FDF82A  BL	HMC5883L_main_Display_Value+0
;HMC5883L_main.c, 237 :: 		}
L_end_doMagnet:
0xEAC4	0xF8DDE000  LDR	LR, [SP, #0]
0xEAC8	0xB001    ADD	SP, SP, #4
0xEACA	0x4770    BX	LR
0xEACC	0x24D42000  	_Magnet_vals+0
0xEAD0	0x02BE2000  	_Old_Magnet_vals+0
0xEAD4	0x1C902000  	_Label35+0
0xEAD8	0x24D62000  	_Magnet_vals+2
0xEADC	0x1CBC2000  	_Label36+0
0xEAE0	0x24D82000  	_Magnet_vals+4
0xEAE4	0x1CE82000  	_Label37+0
; end of _doMagnet
HMC5883L_main_MAGNET_Test:
;HMC5883L_main.c, 210 :: 		static void MAGNET_Test(TMagnet_values *values) {
; values start address is: 0 (R0)
0xB13C	0xB082    SUB	SP, SP, #8
0xB13E	0xF8CDE000  STR	LR, [SP, #0]
; values end address is: 0 (R0)
; values start address is: 0 (R0)
;HMC5883L_main.c, 211 :: 		Magnet_Average();               // Calculate average X, Y and Z reads
0xB142	0x9001    STR	R0, [SP, #4]
0xB144	0xF7FCFF18  BL	HMC5883L_main_Magnet_Average+0
0xB148	0x9801    LDR	R0, [SP, #4]
;HMC5883L_main.c, 213 :: 		values->Xvalue = magnetreadings[0];
0xB14A	0x4909    LDR	R1, [PC, #36]
0xB14C	0xF9B11000  LDRSH	R1, [R1, #0]
0xB150	0x8001    STRH	R1, [R0, #0]
;HMC5883L_main.c, 214 :: 		values->Yvalue = magnetreadings[1];
0xB152	0x1C82    ADDS	R2, R0, #2
0xB154	0x4907    LDR	R1, [PC, #28]
0xB156	0xF9B11000  LDRSH	R1, [R1, #0]
0xB15A	0x8011    STRH	R1, [R2, #0]
;HMC5883L_main.c, 215 :: 		values->Zvalue = magnetreadings[2];
0xB15C	0x1D02    ADDS	R2, R0, #4
; values end address is: 0 (R0)
0xB15E	0x4906    LDR	R1, [PC, #24]
0xB160	0xF9B11000  LDRSH	R1, [R1, #0]
0xB164	0x8011    STRH	R1, [R2, #0]
;HMC5883L_main.c, 216 :: 		}
L_end_MAGNET_Test:
0xB166	0xF8DDE000  LDR	LR, [SP, #0]
0xB16A	0xB002    ADD	SP, SP, #8
0xB16C	0x4770    BX	LR
0xB16E	0xBF00    NOP
0xB170	0x02B62000  	_magnetreadings+0
0xB174	0x02B82000  	_magnetreadings+2
0xB178	0x02BA2000  	_magnetreadings+4
; end of HMC5883L_main_MAGNET_Test
HMC5883L_main_Magnet_Average:
;HMC5883L_main.c, 44 :: 		static void Magnet_Average() {
0x7F78	0xB085    SUB	SP, SP, #20
0x7F7A	0xF8CDE000  STR	LR, [SP, #0]
;HMC5883L_main.c, 48 :: 		sx = sy = sz = 0;
; sz start address is: 16 (R4)
0x7F7E	0x2400    MOVS	R4, #0
0x7F80	0xB224    SXTH	R4, R4
; sy start address is: 20 (R5)
0x7F82	0xF2400500  MOVW	R5, #0
0x7F86	0xB22D    SXTH	R5, R5
; sx start address is: 24 (R6)
0x7F88	0xF2400600  MOVW	R6, #0
0x7F8C	0xB236    SXTH	R6, R6
;HMC5883L_main.c, 51 :: 		for (i=0; i<16; i++) {
; i start address is: 12 (R3)
0x7F8E	0x2300    MOVS	R3, #0
0x7F90	0xB21B    SXTH	R3, R3
; sx end address is: 24 (R6)
; sy end address is: 20 (R5)
; sz end address is: 16 (R4)
; i end address is: 12 (R3)
L_HMC5883L_main_Magnet_Average0:
; i start address is: 12 (R3)
; sx start address is: 24 (R6)
; sy start address is: 20 (R5)
; sz start address is: 16 (R4)
0x7F92	0x2B10    CMP	R3, #16
0x7F94	0xDA24    BGE	L_HMC5883L_main_Magnet_Average1
;HMC5883L_main.c, 52 :: 		MAGNET_Read(&xx, &yy, &zz);
0x7F96	0xAA04    ADD	R2, SP, #16
0x7F98	0xF10D010E  ADD	R1, SP, #14
0x7F9C	0xA803    ADD	R0, SP, #12
0x7F9E	0xF8AD4004  STRH	R4, [SP, #4]
0x7FA2	0xF8AD5006  STRH	R5, [SP, #6]
0x7FA6	0xF8AD6008  STRH	R6, [SP, #8]
0x7FAA	0xF8AD300A  STRH	R3, [SP, #10]
0x7FAE	0xF7FEFA8B  BL	_MAGNET_Read+0
0x7FB2	0xF9BD300A  LDRSH	R3, [SP, #10]
0x7FB6	0xF9BD6008  LDRSH	R6, [SP, #8]
0x7FBA	0xF9BD5006  LDRSH	R5, [SP, #6]
0x7FBE	0xF9BD4004  LDRSH	R4, [SP, #4]
;HMC5883L_main.c, 53 :: 		sx += xx;
0x7FC2	0xF9BD000C  LDRSH	R0, [SP, #12]
0x7FC6	0x1836    ADDS	R6, R6, R0
0x7FC8	0xB236    SXTH	R6, R6
;HMC5883L_main.c, 54 :: 		sy += yy;
0x7FCA	0xF9BD000E  LDRSH	R0, [SP, #14]
0x7FCE	0x182D    ADDS	R5, R5, R0
0x7FD0	0xB22D    SXTH	R5, R5
;HMC5883L_main.c, 55 :: 		sz += zz;
0x7FD2	0xF9BD0010  LDRSH	R0, [SP, #16]
0x7FD6	0x1824    ADDS	R4, R4, R0
0x7FD8	0xB224    SXTH	R4, R4
;HMC5883L_main.c, 51 :: 		for (i=0; i<16; i++) {
0x7FDA	0x1C5B    ADDS	R3, R3, #1
0x7FDC	0xB21B    SXTH	R3, R3
;HMC5883L_main.c, 56 :: 		}
; i end address is: 12 (R3)
0x7FDE	0xE7D8    B	L_HMC5883L_main_Magnet_Average0
L_HMC5883L_main_Magnet_Average1:
;HMC5883L_main.c, 58 :: 		magnetreadings[0] = sx >> 4;
0x7FE0	0x1131    ASRS	R1, R6, #4
; sx end address is: 24 (R6)
0x7FE2	0x4806    LDR	R0, [PC, #24]
0x7FE4	0x8001    STRH	R1, [R0, #0]
;HMC5883L_main.c, 59 :: 		magnetreadings[1] = sy >> 4;
0x7FE6	0x1129    ASRS	R1, R5, #4
; sy end address is: 20 (R5)
0x7FE8	0x4805    LDR	R0, [PC, #20]
0x7FEA	0x8001    STRH	R1, [R0, #0]
;HMC5883L_main.c, 60 :: 		magnetreadings[2] = sz >> 4;
0x7FEC	0x1121    ASRS	R1, R4, #4
; sz end address is: 16 (R4)
0x7FEE	0x4805    LDR	R0, [PC, #20]
0x7FF0	0x8001    STRH	R1, [R0, #0]
;HMC5883L_main.c, 61 :: 		}
L_end_Magnet_Average:
0x7FF2	0xF8DDE000  LDR	LR, [SP, #0]
0x7FF6	0xB005    ADD	SP, SP, #20
0x7FF8	0x4770    BX	LR
0x7FFA	0xBF00    NOP
0x7FFC	0x02B62000  	_magnetreadings+0
0x8000	0x02B82000  	_magnetreadings+2
0x8004	0x02BA2000  	_magnetreadings+4
; end of HMC5883L_main_Magnet_Average
_MAGNET_Read:
;HMC5883L_driver.c, 41 :: 		void MAGNET_Read(int *data_X, int *data_Y, int *data_Z){
; data_Y start address is: 4 (R1)
; data_X start address is: 0 (R0)
0x64C8	0xB082    SUB	SP, SP, #8
0x64CA	0xF8CDE000  STR	LR, [SP, #0]
0x64CE	0x4683    MOV	R11, R0
0x64D0	0x468C    MOV	R12, R1
0x64D2	0x9201    STR	R2, [SP, #4]
; data_Y end address is: 4 (R1)
; data_X end address is: 0 (R0)
; data_X start address is: 44 (R11)
; data_Y start address is: 48 (R12)
;HMC5883L_driver.c, 42 :: 		Magnetdata_[0] = _MAGNETDATAX0;
0x64D4	0x2403    MOVS	R4, #3
0x64D6	0x4B18    LDR	R3, [PC, #96]
0x64D8	0x701C    STRB	R4, [R3, #0]
;HMC5883L_driver.c, 43 :: 		I2C2_Start();              // issue I2C start signal
0x64DA	0xF000F9BB  BL	_I2C2_Start+0
;HMC5883L_driver.c, 44 :: 		I2C2_Write(_MAGNET_ADDRESS, Magnetdata_, 1, END_MODE_RESTART);
0x64DE	0xF2400300  MOVW	R3, #0
0x64E2	0x2201    MOVS	R2, #1
0x64E4	0x4914    LDR	R1, [PC, #80]
0x64E6	0x2053    MOVS	R0, #83
0x64E8	0xF7FBFF98  BL	_I2C2_Write+0
;HMC5883L_driver.c, 45 :: 		I2C2_Read(_MAGNET_ADDRESS, Magnetdata_, 6, END_MODE_STOP);
0x64EC	0xF2400301  MOVW	R3, #1
0x64F0	0x2206    MOVS	R2, #6
0x64F2	0x4911    LDR	R1, [PC, #68]
0x64F4	0x2053    MOVS	R0, #83
0x64F6	0xF7FBFFD3  BL	_I2C2_Read+0
;HMC5883L_driver.c, 47 :: 		*data_X = Magnetdata_[0] + (Magnetdata_[1] << 8);
0x64FA	0x4B10    LDR	R3, [PC, #64]
0x64FC	0x781B    LDRB	R3, [R3, #0]
0x64FE	0x021C    LSLS	R4, R3, #8
0x6500	0xB2A4    UXTH	R4, R4
0x6502	0x4B0D    LDR	R3, [PC, #52]
0x6504	0x781B    LDRB	R3, [R3, #0]
0x6506	0x191B    ADDS	R3, R3, R4
0x6508	0xF8AB3000  STRH	R3, [R11, #0]
; data_X end address is: 44 (R11)
;HMC5883L_driver.c, 48 :: 		*data_Y = Magnetdata_[2] + (Magnetdata_[3] << 8);
0x650C	0x4B0C    LDR	R3, [PC, #48]
0x650E	0x781B    LDRB	R3, [R3, #0]
0x6510	0x021C    LSLS	R4, R3, #8
0x6512	0xB2A4    UXTH	R4, R4
0x6514	0x4B0B    LDR	R3, [PC, #44]
0x6516	0x781B    LDRB	R3, [R3, #0]
0x6518	0x191B    ADDS	R3, R3, R4
0x651A	0xF8AC3000  STRH	R3, [R12, #0]
; data_Y end address is: 48 (R12)
;HMC5883L_driver.c, 49 :: 		*data_Z = Magnetdata_[4] + (Magnetdata_[5] << 8);
0x651E	0x4B0A    LDR	R3, [PC, #40]
0x6520	0x781B    LDRB	R3, [R3, #0]
0x6522	0x021C    LSLS	R4, R3, #8
0x6524	0xB2A4    UXTH	R4, R4
0x6526	0x4B09    LDR	R3, [PC, #36]
0x6528	0x781B    LDRB	R3, [R3, #0]
0x652A	0x191C    ADDS	R4, R3, R4
0x652C	0x9B01    LDR	R3, [SP, #4]
0x652E	0x801C    STRH	R4, [R3, #0]
;HMC5883L_driver.c, 50 :: 		}
L_end_MAGNET_Read:
0x6530	0xF8DDE000  LDR	LR, [SP, #0]
0x6534	0xB002    ADD	SP, SP, #8
0x6536	0x4770    BX	LR
0x6538	0x24CA2000  	_Magnetdata_+0
0x653C	0x24CB2000  	_Magnetdata_+1
0x6540	0x24CD2000  	_Magnetdata_+3
0x6544	0x24CC2000  	_Magnetdata_+2
0x6548	0x24CF2000  	_Magnetdata_+5
0x654C	0x24CE2000  	_Magnetdata_+4
; end of _MAGNET_Read
HMC5883L_main_Scroll_MAGNET:
;HMC5883L_main.c, 95 :: 		static void Scroll_MAGNET(char Adir) {
; Adir start address is: 0 (R0)
0xB2D0	0xB081    SUB	SP, SP, #4
0xB2D2	0xF8CDE000  STR	LR, [SP, #0]
; Adir end address is: 0 (R0)
; Adir start address is: 0 (R0)
;HMC5883L_main.c, 98 :: 		if (Adir == _MAGNET_UP) {
0xB2D6	0x2801    CMP	R0, #1
0xB2D8	0xD10F    BNE	L_HMC5883L_main_Scroll_MAGNET3
; Adir end address is: 0 (R0)
;HMC5883L_main.c, 99 :: 		if (_disp_magnet_scroll != _SCROLL_MAGNET_FIRST_LINE)
0xB2DA	0x4915    LDR	R1, [PC, #84]
0xB2DC	0xF9B11000  LDRSH	R1, [R1, #0]
0xB2E0	0x2929    CMP	R1, #41
0xB2E2	0xD005    BEQ	L_HMC5883L_main_Scroll_MAGNET4
;HMC5883L_main.c, 100 :: 		_disp_magnet_scroll--;
0xB2E4	0x4A12    LDR	R2, [PC, #72]
0xB2E6	0xF9B21000  LDRSH	R1, [R2, #0]
0xB2EA	0x1E49    SUBS	R1, R1, #1
0xB2EC	0x8011    STRH	R1, [R2, #0]
0xB2EE	0xE003    B	L_HMC5883L_main_Scroll_MAGNET5
L_HMC5883L_main_Scroll_MAGNET4:
;HMC5883L_main.c, 102 :: 		_disp_magnet_scroll = _SCROLL_MAGNET_LAST_LINE - 1;
0xB2F0	0x22F5    MOVS	R2, #245
0xB2F2	0xB212    SXTH	R2, R2
0xB2F4	0x490E    LDR	R1, [PC, #56]
0xB2F6	0x800A    STRH	R2, [R1, #0]
;HMC5883L_main.c, 103 :: 		}
L_HMC5883L_main_Scroll_MAGNET5:
;HMC5883L_main.c, 104 :: 		}
0xB2F8	0xE00F    B	L_HMC5883L_main_Scroll_MAGNET6
L_HMC5883L_main_Scroll_MAGNET3:
;HMC5883L_main.c, 106 :: 		if (_disp_magnet_scroll != _SCROLL_MAGNET_LAST_LINE - 1)
0xB2FA	0x490D    LDR	R1, [PC, #52]
0xB2FC	0xF9B11000  LDRSH	R1, [R1, #0]
0xB300	0x29F5    CMP	R1, #245
0xB302	0xD005    BEQ	L_HMC5883L_main_Scroll_MAGNET7
;HMC5883L_main.c, 107 :: 		_disp_magnet_scroll++;
0xB304	0x4A0A    LDR	R2, [PC, #40]
0xB306	0xF9B21000  LDRSH	R1, [R2, #0]
0xB30A	0x1C49    ADDS	R1, R1, #1
0xB30C	0x8011    STRH	R1, [R2, #0]
0xB30E	0xE004    B	L_HMC5883L_main_Scroll_MAGNET8
L_HMC5883L_main_Scroll_MAGNET7:
;HMC5883L_main.c, 109 :: 		_disp_magnet_scroll = _SCROLL_MAGNET_FIRST_LINE;
0xB310	0xF2400229  MOVW	R2, #41
0xB314	0xB212    SXTH	R2, R2
0xB316	0x4906    LDR	R1, [PC, #24]
0xB318	0x800A    STRH	R2, [R1, #0]
;HMC5883L_main.c, 110 :: 		}
L_HMC5883L_main_Scroll_MAGNET8:
;HMC5883L_main.c, 111 :: 		}
L_HMC5883L_main_Scroll_MAGNET6:
;HMC5883L_main.c, 113 :: 		Scroll(_disp_magnet_scroll);
0xB31A	0x4905    LDR	R1, [PC, #20]
0xB31C	0xF9B11000  LDRSH	R1, [R1, #0]
0xB320	0xB288    UXTH	R0, R1
0xB322	0xF7FCFE01  BL	_Scroll+0
;HMC5883L_main.c, 114 :: 		}
L_end_Scroll_MAGNET:
0xB326	0xF8DDE000  LDR	LR, [SP, #0]
0xB32A	0xB001    ADD	SP, SP, #4
0xB32C	0x4770    BX	LR
0xB32E	0xBF00    NOP
0xB330	0x02BC2000  	__disp_magnet_scroll+0
; end of HMC5883L_main_Scroll_MAGNET
HMC5883L_main_Scroll_Add_Line:
;HMC5883L_main.c, 150 :: 		static void Scroll_Add_Line(char ScrollDirection){
; ScrollDirection start address is: 0 (R0)
0xB334	0xB082    SUB	SP, SP, #8
0xB336	0xF8CDE000  STR	LR, [SP, #0]
; ScrollDirection end address is: 0 (R0)
; ScrollDirection start address is: 0 (R0)
;HMC5883L_main.c, 152 :: 		if (ScrollDirection > 0){
0xB33A	0x2800    CMP	R0, #0
0xB33C	0xD94F    BLS	L_HMC5883L_main_Scroll_Add_Line12
; ScrollDirection end address is: 0 (R0)
;HMC5883L_main.c, 153 :: 		temp = _disp_magnet_scroll + 1;
0xB33E	0x492A    LDR	R1, [PC, #168]
0xB340	0xF9B11000  LDRSH	R1, [R1, #0]
0xB344	0x1C49    ADDS	R1, R1, #1
0xB346	0xB209    SXTH	R1, R1
; temp start address is: 0 (R0)
0xB348	0xB208    SXTH	R0, R1
;HMC5883L_main.c, 154 :: 		if (temp > _SCROLL_MAGNET_LAST_LINE - 1)
0xB34A	0x29F5    CMP	R1, #245
0xB34C	0xDD03    BLE	L_HMC5883L_main_Scroll_Add_Line29
;HMC5883L_main.c, 155 :: 		temp = _SCROLL_MAGNET_FIRST_LINE;
0xB34E	0xF2400029  MOVW	R0, #41
0xB352	0xB200    SXTH	R0, R0
; temp end address is: 0 (R0)
0xB354	0xE7FF    B	L_HMC5883L_main_Scroll_Add_Line13
L_HMC5883L_main_Scroll_Add_Line29:
;HMC5883L_main.c, 154 :: 		if (temp > _SCROLL_MAGNET_LAST_LINE - 1)
;HMC5883L_main.c, 155 :: 		temp = _SCROLL_MAGNET_FIRST_LINE;
L_HMC5883L_main_Scroll_Add_Line13:
;HMC5883L_main.c, 156 :: 		TFT_CS = 0;
; temp start address is: 0 (R0)
0xB356	0x2200    MOVS	R2, #0
0xB358	0xB252    SXTB	R2, R2
0xB35A	0x4924    LDR	R1, [PC, #144]
0xB35C	0x600A    STR	R2, [R1, #0]
;HMC5883L_main.c, 157 :: 		TFT_SSD1963_Set_Address_Ptr(0, temp, 480, temp);
0xB35E	0xB283    UXTH	R3, R0
0xB360	0xF24012E0  MOVW	R2, #480
0xB364	0xB299    UXTH	R1, R3
; temp end address is: 0 (R0)
0xB366	0x2000    MOVS	R0, #0
0xB368	0x4C21    LDR	R4, [PC, #132]
0xB36A	0x6824    LDR	R4, [R4, #0]
0xB36C	0x47A0    BLX	R4
;HMC5883L_main.c, 158 :: 		for (i = 0; i < 480; i++)
; i start address is: 0 (R0)
0xB36E	0x2000    MOVS	R0, #0
0xB370	0xB200    SXTH	R0, R0
; i end address is: 0 (R0)
L_HMC5883L_main_Scroll_Add_Line14:
; i start address is: 0 (R0)
0xB372	0xF5B07FF0  CMP	R0, #480
0xB376	0xDA2E    BGE	L_HMC5883L_main_Scroll_Add_Line15
;HMC5883L_main.c, 159 :: 		if ((i == 90) | (i == 240) | (i == 390))
0xB378	0x285A    CMP	R0, #90
0xB37A	0xF2400200  MOVW	R2, #0
0xB37E	0xD100    BNE	L_HMC5883L_main_Scroll_Add_Line35
0xB380	0x2201    MOVS	R2, #1
L_HMC5883L_main_Scroll_Add_Line35:
0xB382	0xB2D2    UXTB	R2, R2
0xB384	0x28F0    CMP	R0, #240
0xB386	0xF2400100  MOVW	R1, #0
0xB38A	0xD100    BNE	L_HMC5883L_main_Scroll_Add_Line36
0xB38C	0x2101    MOVS	R1, #1
L_HMC5883L_main_Scroll_Add_Line36:
0xB38E	0xB2C9    UXTB	R1, R1
0xB390	0x430A    ORRS	R2, R1
0xB392	0xB2D2    UXTB	R2, R2
0xB394	0xF5B07FC3  CMP	R0, #390
0xB398	0xF2400100  MOVW	R1, #0
0xB39C	0xD100    BNE	L_HMC5883L_main_Scroll_Add_Line37
0xB39E	0x2101    MOVS	R1, #1
L_HMC5883L_main_Scroll_Add_Line37:
0xB3A0	0xB2C9    UXTB	R1, R1
0xB3A2	0xEA420101  ORR	R1, R2, R1, LSL #0
0xB3A6	0xB2C9    UXTB	R1, R1
0xB3A8	0xB149    CBZ	R1, L_HMC5883L_main_Scroll_Add_Line17
;HMC5883L_main.c, 160 :: 		TFT_Write_Data_Ptr(CL_SILVER);
0xB3AA	0xF8AD0004  STRH	R0, [SP, #4]
0xB3AE	0xF24C6018  MOVW	R0, #50712
0xB3B2	0x4C10    LDR	R4, [PC, #64]
0xB3B4	0x6824    LDR	R4, [R4, #0]
0xB3B6	0x47A0    BLX	R4
0xB3B8	0xF9BD0004  LDRSH	R0, [SP, #4]
0xB3BC	0xE008    B	L_HMC5883L_main_Scroll_Add_Line18
L_HMC5883L_main_Scroll_Add_Line17:
;HMC5883L_main.c, 162 :: 		TFT_Write_Data_Ptr(CL_WHITE);
0xB3BE	0xF8AD0004  STRH	R0, [SP, #4]
0xB3C2	0xF64F70FF  MOVW	R0, #65535
0xB3C6	0x4C0B    LDR	R4, [PC, #44]
0xB3C8	0x6824    LDR	R4, [R4, #0]
0xB3CA	0x47A0    BLX	R4
0xB3CC	0xF9BD0004  LDRSH	R0, [SP, #4]
L_HMC5883L_main_Scroll_Add_Line18:
;HMC5883L_main.c, 158 :: 		for (i = 0; i < 480; i++)
0xB3D0	0x1C40    ADDS	R0, R0, #1
0xB3D2	0xB200    SXTH	R0, R0
;HMC5883L_main.c, 162 :: 		TFT_Write_Data_Ptr(CL_WHITE);
; i end address is: 0 (R0)
0xB3D4	0xE7CD    B	L_HMC5883L_main_Scroll_Add_Line14
L_HMC5883L_main_Scroll_Add_Line15:
;HMC5883L_main.c, 163 :: 		TFT_CS = 1;
0xB3D6	0x2201    MOVS	R2, #1
0xB3D8	0xB252    SXTB	R2, R2
0xB3DA	0x4904    LDR	R1, [PC, #16]
0xB3DC	0x600A    STR	R2, [R1, #0]
;HMC5883L_main.c, 164 :: 		}
L_HMC5883L_main_Scroll_Add_Line12:
;HMC5883L_main.c, 165 :: 		}
L_end_Scroll_Add_Line:
0xB3DE	0xF8DDE000  LDR	LR, [SP, #0]
0xB3E2	0xB002    ADD	SP, SP, #8
0xB3E4	0x4770    BX	LR
0xB3E6	0xBF00    NOP
0xB3E8	0x02BC2000  	__disp_magnet_scroll+0
0xB3EC	0x82B44242  	TFT_CS+0
0xB3F0	0x045C2000  	_TFT_SSD1963_Set_Address_Ptr+0
0xB3F4	0x04602000  	_TFT_Write_Data_Ptr+0
; end of HMC5883L_main_Scroll_Add_Line
HMC5883L_main_WriteGraph:
;HMC5883L_main.c, 123 :: 		static void WriteGraph(Tmagnet_values *old, Tmagnet_values *new){
0xB17C	0xB083    SUB	SP, SP, #12
0xB17E	0xF8CDE000  STR	LR, [SP, #0]
0xB182	0x9001    STR	R0, [SP, #4]
0xB184	0x9102    STR	R1, [SP, #8]
;HMC5883L_main.c, 125 :: 		if ((_disp_magnet_scroll < _SCROLL_MAGNET_LAST_LINE - 2) && (_disp_magnet_scroll > _SCROLL_MAGNET_FIRST_LINE)){
0xB186	0x4A46    LDR	R2, [PC, #280]
0xB188	0xF9B22000  LDRSH	R2, [R2, #0]
0xB18C	0x2AF4    CMP	R2, #244
0xB18E	0xF2808082  BGE	L_HMC5883L_main_WriteGraph28
0xB192	0x4A43    LDR	R2, [PC, #268]
0xB194	0xF9B22000  LDRSH	R2, [R2, #0]
0xB198	0x2A29    CMP	R2, #41
0xB19A	0xF340807C  BLE	L_HMC5883L_main_WriteGraph27
L_HMC5883L_main_WriteGraph26:
;HMC5883L_main.c, 126 :: 		TFT_Set_Pen(CL_RED, 2);
0xB19E	0x2102    MOVS	R1, #2
0xB1A0	0xF64F0000  MOVW	R0, #63488
0xB1A4	0xF7FEFC04  BL	_TFT_Set_Pen+0
;HMC5883L_main.c, 127 :: 		temp1 = (old->Xvalue * 30) / 256 + 90;
0xB1A8	0x9A01    LDR	R2, [SP, #4]
0xB1AA	0xF9B23000  LDRSH	R3, [R2, #0]
0xB1AE	0x221E    MOVS	R2, #30
0xB1B0	0xB212    SXTH	R2, R2
0xB1B2	0xFB03F002  MUL	R0, R3, R2
0xB1B6	0xB200    SXTH	R0, R0
0xB1B8	0x1200    ASRS	R0, R0, #8
0xB1BA	0xB200    SXTH	R0, R0
0xB1BC	0x305A    ADDS	R0, #90
0xB1BE	0xB200    SXTH	R0, R0
; temp1 start address is: 0 (R0)
;HMC5883L_main.c, 128 :: 		temp2 = (new->Xvalue * 30) / 256 + 90;
0xB1C0	0x9A02    LDR	R2, [SP, #8]
0xB1C2	0xF9B23000  LDRSH	R3, [R2, #0]
0xB1C6	0x221E    MOVS	R2, #30
0xB1C8	0xB212    SXTH	R2, R2
0xB1CA	0x435A    MULS	R2, R3, R2
0xB1CC	0xB212    SXTH	R2, R2
0xB1CE	0x1212    ASRS	R2, R2, #8
0xB1D0	0xB212    SXTH	R2, R2
0xB1D2	0xF202055A  ADDW	R5, R2, #90
;HMC5883L_main.c, 129 :: 		TFT_Line(temp1, _disp_magnet_scroll + 2, temp2, _disp_magnet_scroll + 1);
0xB1D6	0x4C32    LDR	R4, [PC, #200]
0xB1D8	0xF9B42000  LDRSH	R2, [R4, #0]
0xB1DC	0x1C53    ADDS	R3, R2, #1
0xB1DE	0x4622    MOV	R2, R4
0xB1E0	0xF9B22000  LDRSH	R2, [R2, #0]
0xB1E4	0x1C92    ADDS	R2, R2, #2
0xB1E6	0xB211    SXTH	R1, R2
0xB1E8	0xB22A    SXTH	R2, R5
; temp1 end address is: 0 (R0)
0xB1EA	0xF7F9F98F  BL	_TFT_Line+0
;HMC5883L_main.c, 131 :: 		TFT_Set_Pen(CL_BLUE, 2);
0xB1EE	0x2102    MOVS	R1, #2
0xB1F0	0xF240001F  MOVW	R0, #31
0xB1F4	0xF7FEFBDC  BL	_TFT_Set_Pen+0
;HMC5883L_main.c, 132 :: 		temp1 = (old->Yvalue * 30) / 256 + 240;
0xB1F8	0x9A01    LDR	R2, [SP, #4]
0xB1FA	0x1C92    ADDS	R2, R2, #2
0xB1FC	0xF9B23000  LDRSH	R3, [R2, #0]
0xB200	0x221E    MOVS	R2, #30
0xB202	0xB212    SXTH	R2, R2
0xB204	0xFB03F002  MUL	R0, R3, R2
0xB208	0xB200    SXTH	R0, R0
0xB20A	0x1200    ASRS	R0, R0, #8
0xB20C	0xB200    SXTH	R0, R0
0xB20E	0x30F0    ADDS	R0, #240
0xB210	0xB200    SXTH	R0, R0
; temp1 start address is: 0 (R0)
;HMC5883L_main.c, 133 :: 		temp2 = (new->Yvalue * 30) / 256 + 240;
0xB212	0x9A02    LDR	R2, [SP, #8]
0xB214	0x1C92    ADDS	R2, R2, #2
0xB216	0xF9B23000  LDRSH	R3, [R2, #0]
0xB21A	0x221E    MOVS	R2, #30
0xB21C	0xB212    SXTH	R2, R2
0xB21E	0x435A    MULS	R2, R3, R2
0xB220	0xB212    SXTH	R2, R2
0xB222	0x1212    ASRS	R2, R2, #8
0xB224	0xB212    SXTH	R2, R2
0xB226	0xF20205F0  ADDW	R5, R2, #240
;HMC5883L_main.c, 134 :: 		TFT_Line(temp1, _disp_magnet_scroll + 2, temp2, _disp_magnet_scroll + 1);
0xB22A	0x4C1D    LDR	R4, [PC, #116]
0xB22C	0xF9B42000  LDRSH	R2, [R4, #0]
0xB230	0x1C53    ADDS	R3, R2, #1
0xB232	0x4622    MOV	R2, R4
0xB234	0xF9B22000  LDRSH	R2, [R2, #0]
0xB238	0x1C92    ADDS	R2, R2, #2
0xB23A	0xB211    SXTH	R1, R2
0xB23C	0xB22A    SXTH	R2, R5
; temp1 end address is: 0 (R0)
0xB23E	0xF7F9F965  BL	_TFT_Line+0
;HMC5883L_main.c, 136 :: 		TFT_Set_Pen(CL_GREEN, 2);
0xB242	0x2102    MOVS	R1, #2
0xB244	0xF2404000  MOVW	R0, #1024
0xB248	0xF7FEFBB2  BL	_TFT_Set_Pen+0
;HMC5883L_main.c, 137 :: 		temp1 = (old->Zvalue * 30) / 256 + 390;
0xB24C	0x9A01    LDR	R2, [SP, #4]
0xB24E	0x1D12    ADDS	R2, R2, #4
0xB250	0xF9B23000  LDRSH	R3, [R2, #0]
0xB254	0x221E    MOVS	R2, #30
0xB256	0xB212    SXTH	R2, R2
0xB258	0x435A    MULS	R2, R3, R2
0xB25A	0xB212    SXTH	R2, R2
0xB25C	0x1212    ASRS	R2, R2, #8
0xB25E	0xB212    SXTH	R2, R2
0xB260	0xF50272C3  ADD	R2, R2, #390
; temp1 start address is: 0 (R0)
0xB264	0xB210    SXTH	R0, R2
;HMC5883L_main.c, 138 :: 		temp2 = (new->Zvalue * 30) / 256 + 390;
0xB266	0x9A02    LDR	R2, [SP, #8]
0xB268	0x1D12    ADDS	R2, R2, #4
0xB26A	0xF9B23000  LDRSH	R3, [R2, #0]
0xB26E	0x221E    MOVS	R2, #30
0xB270	0xB212    SXTH	R2, R2
0xB272	0x435A    MULS	R2, R3, R2
0xB274	0xB212    SXTH	R2, R2
0xB276	0x1212    ASRS	R2, R2, #8
0xB278	0xB212    SXTH	R2, R2
0xB27A	0xF50275C3  ADD	R5, R2, #390
;HMC5883L_main.c, 139 :: 		TFT_Line(temp1, _disp_magnet_scroll + 2, temp2, _disp_magnet_scroll + 1);
0xB27E	0x4C08    LDR	R4, [PC, #32]
0xB280	0xF9B42000  LDRSH	R2, [R4, #0]
0xB284	0x1C53    ADDS	R3, R2, #1
0xB286	0x4622    MOV	R2, R4
0xB288	0xF9B22000  LDRSH	R2, [R2, #0]
0xB28C	0x1C92    ADDS	R2, R2, #2
0xB28E	0xB211    SXTH	R1, R2
0xB290	0xB22A    SXTH	R2, R5
; temp1 end address is: 0 (R0)
0xB292	0xF7F9F93B  BL	_TFT_Line+0
;HMC5883L_main.c, 125 :: 		if ((_disp_magnet_scroll < _SCROLL_MAGNET_LAST_LINE - 2) && (_disp_magnet_scroll > _SCROLL_MAGNET_FIRST_LINE)){
L_HMC5883L_main_WriteGraph28:
L_HMC5883L_main_WriteGraph27:
;HMC5883L_main.c, 141 :: 		}
L_end_WriteGraph:
0xB296	0xF8DDE000  LDR	LR, [SP, #0]
0xB29A	0xB003    ADD	SP, SP, #12
0xB29C	0x4770    BX	LR
0xB29E	0xBF00    NOP
0xB2A0	0x02BC2000  	__disp_magnet_scroll+0
; end of HMC5883L_main_WriteGraph
HMC5883L_main_Display_Value:
;HMC5883L_main.c, 70 :: 		static void Display_Value(TLabel *label, int val) {
; val start address is: 4 (R1)
0xBB18	0xB088    SUB	SP, SP, #32
0xBB1A	0xF8CDE000  STR	LR, [SP, #0]
0xBB1E	0x9007    STR	R0, [SP, #28]
0xBB20	0xB20F    SXTH	R7, R1
; val end address is: 4 (R1)
; val start address is: 28 (R7)
;HMC5883L_main.c, 74 :: 		ptr = label->Caption;
0xBB22	0x9A07    LDR	R2, [SP, #28]
0xBB24	0x3210    ADDS	R2, #16
0xBB26	0x6812    LDR	R2, [R2, #0]
0xBB28	0x9206    STR	R2, [SP, #24]
;HMC5883L_main.c, 75 :: 		TFT_Set_Pen(Magnetometer_test.Color,  0);
0xBB2A	0x4A25    LDR	R2, [PC, #148]
0xBB2C	0x8812    LDRH	R2, [R2, #0]
0xBB2E	0x2100    MOVS	R1, #0
0xBB30	0xB290    UXTH	R0, R2
0xBB32	0xF7FDFF3D  BL	_TFT_Set_Pen+0
;HMC5883L_main.c, 76 :: 		TFT_Set_Brush(1, Magnetometer_test.Color, 0, 0, 0, 0);
0xBB36	0x2400    MOVS	R4, #0
0xBB38	0x2300    MOVS	R3, #0
0xBB3A	0x4A21    LDR	R2, [PC, #132]
0xBB3C	0x8812    LDRH	R2, [R2, #0]
0xBB3E	0xB410    PUSH	(R4)
0xBB40	0xB408    PUSH	(R3)
0xBB42	0x2300    MOVS	R3, #0
0xBB44	0xB291    UXTH	R1, R2
0xBB46	0x2200    MOVS	R2, #0
0xBB48	0x2001    MOVS	R0, #1
0xBB4A	0xF7FDFBFD  BL	_TFT_Set_Brush+0
0xBB4E	0xB002    ADD	SP, SP, #8
;HMC5883L_main.c, 77 :: 		IntToStr(val & 0xFE, text);
0xBB50	0xAB01    ADD	R3, SP, #4
0xBB52	0xF00702FE  AND	R2, R7, #254
; val end address is: 28 (R7)
0xBB56	0x4619    MOV	R1, R3
0xBB58	0xB210    SXTH	R0, R2
0xBB5A	0xF7FDFFA9  BL	_IntToStr+0
;HMC5883L_main.c, 78 :: 		strcpy(text1, ptr);
0xBB5E	0xF10D020B  ADD	R2, SP, #11
0xBB62	0x9906    LDR	R1, [SP, #24]
0xBB64	0x4610    MOV	R0, R2
0xBB66	0xF7FDFC0F  BL	_strcpy+0
;HMC5883L_main.c, 79 :: 		strcat(text1, text);
0xBB6A	0xAB01    ADD	R3, SP, #4
0xBB6C	0xF10D020B  ADD	R2, SP, #11
0xBB70	0x4619    MOV	R1, R3
0xBB72	0x4610    MOV	R0, R2
0xBB74	0xF7FDFDD6  BL	_strcat+0
;HMC5883L_main.c, 80 :: 		TFT_Rectangle(label->Left, Label->Top, label->Left + 55, Label->Top + 20);
0xBB78	0x9A07    LDR	R2, [SP, #28]
0xBB7A	0x3208    ADDS	R2, #8
0xBB7C	0x8813    LDRH	R3, [R2, #0]
0xBB7E	0xF2030514  ADDW	R5, R3, #20
0xBB82	0x9A07    LDR	R2, [SP, #28]
0xBB84	0x1D92    ADDS	R2, R2, #6
0xBB86	0x8812    LDRH	R2, [R2, #0]
0xBB88	0xF2020437  ADDW	R4, R2, #55
0xBB8C	0xB21B    SXTH	R3, R3
0xBB8E	0xB212    SXTH	R2, R2
0xBB90	0xB219    SXTH	R1, R3
0xBB92	0xB22B    SXTH	R3, R5
0xBB94	0xB210    SXTH	R0, R2
0xBB96	0xB222    SXTH	R2, R4
0xBB98	0xF7FBFFD6  BL	_TFT_Rectangle+0
;HMC5883L_main.c, 81 :: 		label->Caption = text1;
0xBB9C	0x9A07    LDR	R2, [SP, #28]
0xBB9E	0xF2020310  ADDW	R3, R2, #16
0xBBA2	0xF10D020B  ADD	R2, SP, #11
0xBBA6	0x601A    STR	R2, [R3, #0]
;HMC5883L_main.c, 82 :: 		Drawlabel(label);
0xBBA8	0x9807    LDR	R0, [SP, #28]
0xBBAA	0xF001FE2D  BL	_DrawLabel+0
;HMC5883L_main.c, 83 :: 		label->Caption = ptr;
0xBBAE	0x9A07    LDR	R2, [SP, #28]
0xBBB0	0xF2020310  ADDW	R3, R2, #16
0xBBB4	0x9A06    LDR	R2, [SP, #24]
0xBBB6	0x601A    STR	R2, [R3, #0]
;HMC5883L_main.c, 84 :: 		}
L_end_Display_Value:
0xBBB8	0xF8DDE000  LDR	LR, [SP, #0]
0xBBBC	0xB008    ADD	SP, SP, #32
0xBBBE	0x4770    BX	LR
0xBBC0	0x23D82000  	_Magnetometer_test+0
; end of HMC5883L_main_Display_Value
___FillZeros:
;__Lib_System_4XX.c, 67 :: 		
0x1760C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 69 :: 		
0x1760E	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 70 :: 		
0x17612	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 71 :: 		
0x17616	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 72 :: 		
0x1761A	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 73 :: 		
0x1761C	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 74 :: 		
0x17620	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 75 :: 		
0x17622	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 76 :: 		
0x17624	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 77 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 78 :: 		
0x17626	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 79 :: 		
0x1762A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 80 :: 		
0x1762E	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 81 :: 		
0x17630	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 82 :: 		
0x17634	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 83 :: 		
0x17636	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 84 :: 		
0x17638	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 85 :: 		
0x1763C	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 86 :: 		
0x17640	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 87 :: 		
L_norep:
;__Lib_System_4XX.c, 89 :: 		
L_end___FillZeros:
0x17642	0xB001    ADD	SP, SP, #4
0x17644	0x4770    BX	LR
; end of ___FillZeros
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 404 :: 		
0x17908	0xB082    SUB	SP, SP, #8
0x1790A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 407 :: 		
; ulRCC_CR start address is: 8 (R2)
0x1790E	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 408 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x17910	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 409 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x17912	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 410 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x17914	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 411 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17916	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 413 :: 		
0x17918	0x2803    CMP	R0, #3
0x1791A	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC228
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 414 :: 		
0x1791E	0x4893    LDR	R0, [PC, #588]
0x17920	0x4281    CMP	R1, R0
0x17922	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC229
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 415 :: 		
0x17924	0x4892    LDR	R0, [PC, #584]
0x17926	0x6800    LDR	R0, [R0, #0]
0x17928	0xF0400105  ORR	R1, R0, #5
0x1792C	0x4890    LDR	R0, [PC, #576]
0x1792E	0x6001    STR	R1, [R0, #0]
0x17930	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC230
L___Lib_System_4XX_InitialSetUpRCCRCC229:
;__Lib_System_4XX.c, 416 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17932	0x4890    LDR	R0, [PC, #576]
0x17934	0x4281    CMP	R1, R0
0x17936	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC231
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 417 :: 		
0x17938	0x488D    LDR	R0, [PC, #564]
0x1793A	0x6800    LDR	R0, [R0, #0]
0x1793C	0xF0400104  ORR	R1, R0, #4
0x17940	0x488B    LDR	R0, [PC, #556]
0x17942	0x6001    STR	R1, [R0, #0]
0x17944	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC232
L___Lib_System_4XX_InitialSetUpRCCRCC231:
;__Lib_System_4XX.c, 418 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17946	0x488C    LDR	R0, [PC, #560]
0x17948	0x4281    CMP	R1, R0
0x1794A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC233
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 419 :: 		
0x1794C	0x4888    LDR	R0, [PC, #544]
0x1794E	0x6800    LDR	R0, [R0, #0]
0x17950	0xF0400103  ORR	R1, R0, #3
0x17954	0x4886    LDR	R0, [PC, #536]
0x17956	0x6001    STR	R1, [R0, #0]
0x17958	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC234
L___Lib_System_4XX_InitialSetUpRCCRCC233:
;__Lib_System_4XX.c, 420 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1795A	0xF64E2060  MOVW	R0, #60000
0x1795E	0x4281    CMP	R1, R0
0x17960	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC235
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 421 :: 		
0x17962	0x4883    LDR	R0, [PC, #524]
0x17964	0x6800    LDR	R0, [R0, #0]
0x17966	0xF0400102  ORR	R1, R0, #2
0x1796A	0x4881    LDR	R0, [PC, #516]
0x1796C	0x6001    STR	R1, [R0, #0]
0x1796E	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC236
L___Lib_System_4XX_InitialSetUpRCCRCC235:
;__Lib_System_4XX.c, 422 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17970	0xF2475030  MOVW	R0, #30000
0x17974	0x4281    CMP	R1, R0
0x17976	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC237
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 423 :: 		
0x17978	0x487D    LDR	R0, [PC, #500]
0x1797A	0x6800    LDR	R0, [R0, #0]
0x1797C	0xF0400101  ORR	R1, R0, #1
0x17980	0x487B    LDR	R0, [PC, #492]
0x17982	0x6001    STR	R1, [R0, #0]
0x17984	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC238
L___Lib_System_4XX_InitialSetUpRCCRCC237:
;__Lib_System_4XX.c, 425 :: 		
0x17986	0x487A    LDR	R0, [PC, #488]
0x17988	0x6801    LDR	R1, [R0, #0]
0x1798A	0xF06F0007  MVN	R0, #7
0x1798E	0x4001    ANDS	R1, R0
0x17990	0x4877    LDR	R0, [PC, #476]
0x17992	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC238:
L___Lib_System_4XX_InitialSetUpRCCRCC236:
L___Lib_System_4XX_InitialSetUpRCCRCC234:
L___Lib_System_4XX_InitialSetUpRCCRCC232:
L___Lib_System_4XX_InitialSetUpRCCRCC230:
;__Lib_System_4XX.c, 426 :: 		
0x17994	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC239
L___Lib_System_4XX_InitialSetUpRCCRCC228:
;__Lib_System_4XX.c, 427 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x17996	0x2802    CMP	R0, #2
0x17998	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC240
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 428 :: 		
0x1799C	0x4877    LDR	R0, [PC, #476]
0x1799E	0x4281    CMP	R1, R0
0x179A0	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC241
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 429 :: 		
0x179A2	0x4873    LDR	R0, [PC, #460]
0x179A4	0x6800    LDR	R0, [R0, #0]
0x179A6	0xF0400106  ORR	R1, R0, #6
0x179AA	0x4871    LDR	R0, [PC, #452]
0x179AC	0x6001    STR	R1, [R0, #0]
0x179AE	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC241:
;__Lib_System_4XX.c, 430 :: 		
; Fosc_kHz start address is: 4 (R1)
0x179B0	0x4870    LDR	R0, [PC, #448]
0x179B2	0x4281    CMP	R1, R0
0x179B4	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC243
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 431 :: 		
0x179B6	0x486E    LDR	R0, [PC, #440]
0x179B8	0x6800    LDR	R0, [R0, #0]
0x179BA	0xF0400105  ORR	R1, R0, #5
0x179BE	0x486C    LDR	R0, [PC, #432]
0x179C0	0x6001    STR	R1, [R0, #0]
0x179C2	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC244
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 432 :: 		
; Fosc_kHz start address is: 4 (R1)
0x179C4	0x486E    LDR	R0, [PC, #440]
0x179C6	0x4281    CMP	R1, R0
0x179C8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC245
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 433 :: 		
0x179CA	0x4869    LDR	R0, [PC, #420]
0x179CC	0x6800    LDR	R0, [R0, #0]
0x179CE	0xF0400104  ORR	R1, R0, #4
0x179D2	0x4867    LDR	R0, [PC, #412]
0x179D4	0x6001    STR	R1, [R0, #0]
0x179D6	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC246
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 434 :: 		
; Fosc_kHz start address is: 4 (R1)
0x179D8	0x486A    LDR	R0, [PC, #424]
0x179DA	0x4281    CMP	R1, R0
0x179DC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC247
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 435 :: 		
0x179DE	0x4864    LDR	R0, [PC, #400]
0x179E0	0x6800    LDR	R0, [R0, #0]
0x179E2	0xF0400103  ORR	R1, R0, #3
0x179E6	0x4862    LDR	R0, [PC, #392]
0x179E8	0x6001    STR	R1, [R0, #0]
0x179EA	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC248
L___Lib_System_4XX_InitialSetUpRCCRCC247:
;__Lib_System_4XX.c, 436 :: 		
; Fosc_kHz start address is: 4 (R1)
0x179EC	0xF64B3080  MOVW	R0, #48000
0x179F0	0x4281    CMP	R1, R0
0x179F2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC249
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 437 :: 		
0x179F4	0x485E    LDR	R0, [PC, #376]
0x179F6	0x6800    LDR	R0, [R0, #0]
0x179F8	0xF0400102  ORR	R1, R0, #2
0x179FC	0x485C    LDR	R0, [PC, #368]
0x179FE	0x6001    STR	R1, [R0, #0]
0x17A00	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC250
L___Lib_System_4XX_InitialSetUpRCCRCC249:
;__Lib_System_4XX.c, 438 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17A02	0xF64550C0  MOVW	R0, #24000
0x17A06	0x4281    CMP	R1, R0
0x17A08	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC251
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 439 :: 		
0x17A0A	0x4859    LDR	R0, [PC, #356]
0x17A0C	0x6800    LDR	R0, [R0, #0]
0x17A0E	0xF0400101  ORR	R1, R0, #1
0x17A12	0x4857    LDR	R0, [PC, #348]
0x17A14	0x6001    STR	R1, [R0, #0]
0x17A16	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC252
L___Lib_System_4XX_InitialSetUpRCCRCC251:
;__Lib_System_4XX.c, 441 :: 		
0x17A18	0x4855    LDR	R0, [PC, #340]
0x17A1A	0x6801    LDR	R1, [R0, #0]
0x17A1C	0xF06F0007  MVN	R0, #7
0x17A20	0x4001    ANDS	R1, R0
0x17A22	0x4853    LDR	R0, [PC, #332]
0x17A24	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC252:
L___Lib_System_4XX_InitialSetUpRCCRCC250:
L___Lib_System_4XX_InitialSetUpRCCRCC248:
L___Lib_System_4XX_InitialSetUpRCCRCC246:
L___Lib_System_4XX_InitialSetUpRCCRCC244:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
;__Lib_System_4XX.c, 442 :: 		
0x17A26	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC253
L___Lib_System_4XX_InitialSetUpRCCRCC240:
;__Lib_System_4XX.c, 443 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x17A28	0x2801    CMP	R0, #1
0x17A2A	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC254
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 444 :: 		
0x17A2E	0x4851    LDR	R0, [PC, #324]
0x17A30	0x4281    CMP	R1, R0
0x17A32	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC255
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 445 :: 		
0x17A34	0x484E    LDR	R0, [PC, #312]
0x17A36	0x6800    LDR	R0, [R0, #0]
0x17A38	0xF0400107  ORR	R1, R0, #7
0x17A3C	0x484C    LDR	R0, [PC, #304]
0x17A3E	0x6001    STR	R1, [R0, #0]
0x17A40	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC255:
;__Lib_System_4XX.c, 446 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17A42	0x4851    LDR	R0, [PC, #324]
0x17A44	0x4281    CMP	R1, R0
0x17A46	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC257
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 447 :: 		
0x17A48	0x4849    LDR	R0, [PC, #292]
0x17A4A	0x6800    LDR	R0, [R0, #0]
0x17A4C	0xF0400106  ORR	R1, R0, #6
0x17A50	0x4847    LDR	R0, [PC, #284]
0x17A52	0x6001    STR	R1, [R0, #0]
0x17A54	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC258
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 448 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17A56	0x4848    LDR	R0, [PC, #288]
0x17A58	0x4281    CMP	R1, R0
0x17A5A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC259
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 449 :: 		
0x17A5C	0x4844    LDR	R0, [PC, #272]
0x17A5E	0x6800    LDR	R0, [R0, #0]
0x17A60	0xF0400105  ORR	R1, R0, #5
0x17A64	0x4842    LDR	R0, [PC, #264]
0x17A66	0x6001    STR	R1, [R0, #0]
0x17A68	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC260
L___Lib_System_4XX_InitialSetUpRCCRCC259:
;__Lib_System_4XX.c, 450 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17A6A	0x4846    LDR	R0, [PC, #280]
0x17A6C	0x4281    CMP	R1, R0
0x17A6E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC261
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 451 :: 		
0x17A70	0x483F    LDR	R0, [PC, #252]
0x17A72	0x6800    LDR	R0, [R0, #0]
0x17A74	0xF0400104  ORR	R1, R0, #4
0x17A78	0x483D    LDR	R0, [PC, #244]
0x17A7A	0x6001    STR	R1, [R0, #0]
0x17A7C	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC262
L___Lib_System_4XX_InitialSetUpRCCRCC261:
;__Lib_System_4XX.c, 452 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17A7E	0xF24D20F0  MOVW	R0, #54000
0x17A82	0x4281    CMP	R1, R0
0x17A84	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC263
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 453 :: 		
0x17A86	0x483A    LDR	R0, [PC, #232]
0x17A88	0x6800    LDR	R0, [R0, #0]
0x17A8A	0xF0400103  ORR	R1, R0, #3
0x17A8E	0x4838    LDR	R0, [PC, #224]
0x17A90	0x6001    STR	R1, [R0, #0]
0x17A92	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC264
L___Lib_System_4XX_InitialSetUpRCCRCC263:
;__Lib_System_4XX.c, 454 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17A94	0xF64840A0  MOVW	R0, #36000
0x17A98	0x4281    CMP	R1, R0
0x17A9A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC265
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 455 :: 		
0x17A9C	0x4834    LDR	R0, [PC, #208]
0x17A9E	0x6800    LDR	R0, [R0, #0]
0x17AA0	0xF0400102  ORR	R1, R0, #2
0x17AA4	0x4832    LDR	R0, [PC, #200]
0x17AA6	0x6001    STR	R1, [R0, #0]
0x17AA8	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC266
L___Lib_System_4XX_InitialSetUpRCCRCC265:
;__Lib_System_4XX.c, 456 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17AAA	0xF2446050  MOVW	R0, #18000
0x17AAE	0x4281    CMP	R1, R0
0x17AB0	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC267
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 457 :: 		
0x17AB2	0x482F    LDR	R0, [PC, #188]
0x17AB4	0x6800    LDR	R0, [R0, #0]
0x17AB6	0xF0400101  ORR	R1, R0, #1
0x17ABA	0x482D    LDR	R0, [PC, #180]
0x17ABC	0x6001    STR	R1, [R0, #0]
0x17ABE	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC268
L___Lib_System_4XX_InitialSetUpRCCRCC267:
;__Lib_System_4XX.c, 459 :: 		
0x17AC0	0x482B    LDR	R0, [PC, #172]
0x17AC2	0x6801    LDR	R1, [R0, #0]
0x17AC4	0xF06F0007  MVN	R0, #7
0x17AC8	0x4001    ANDS	R1, R0
0x17ACA	0x4829    LDR	R0, [PC, #164]
0x17ACC	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC268:
L___Lib_System_4XX_InitialSetUpRCCRCC266:
L___Lib_System_4XX_InitialSetUpRCCRCC264:
L___Lib_System_4XX_InitialSetUpRCCRCC262:
L___Lib_System_4XX_InitialSetUpRCCRCC260:
L___Lib_System_4XX_InitialSetUpRCCRCC258:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
;__Lib_System_4XX.c, 460 :: 		
0x17ACE	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC269
L___Lib_System_4XX_InitialSetUpRCCRCC254:
;__Lib_System_4XX.c, 461 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x17AD0	0x2800    CMP	R0, #0
0x17AD2	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC270
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 462 :: 		
0x17AD6	0x482D    LDR	R0, [PC, #180]
0x17AD8	0x4281    CMP	R1, R0
0x17ADA	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC271
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 463 :: 		
0x17ADC	0x4824    LDR	R0, [PC, #144]
0x17ADE	0x6800    LDR	R0, [R0, #0]
0x17AE0	0xF0400107  ORR	R1, R0, #7
0x17AE4	0x4822    LDR	R0, [PC, #136]
0x17AE6	0x6001    STR	R1, [R0, #0]
0x17AE8	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC271:
;__Lib_System_4XX.c, 464 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17AEA	0x4825    LDR	R0, [PC, #148]
0x17AEC	0x4281    CMP	R1, R0
0x17AEE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC273
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 465 :: 		
0x17AF0	0x481F    LDR	R0, [PC, #124]
0x17AF2	0x6800    LDR	R0, [R0, #0]
0x17AF4	0xF0400106  ORR	R1, R0, #6
0x17AF8	0x481D    LDR	R0, [PC, #116]
0x17AFA	0x6001    STR	R1, [R0, #0]
0x17AFC	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC274
L___Lib_System_4XX_InitialSetUpRCCRCC273:
;__Lib_System_4XX.c, 466 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17AFE	0x4824    LDR	R0, [PC, #144]
0x17B00	0x4281    CMP	R1, R0
0x17B02	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC275
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 467 :: 		
0x17B04	0x481A    LDR	R0, [PC, #104]
0x17B06	0x6800    LDR	R0, [R0, #0]
0x17B08	0xF0400105  ORR	R1, R0, #5
0x17B0C	0x4818    LDR	R0, [PC, #96]
0x17B0E	0x6001    STR	R1, [R0, #0]
0x17B10	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC276
L___Lib_System_4XX_InitialSetUpRCCRCC275:
;__Lib_System_4XX.c, 468 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17B12	0xF5B14F7A  CMP	R1, #64000
0x17B16	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC277
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 469 :: 		
0x17B18	0x4815    LDR	R0, [PC, #84]
0x17B1A	0x6800    LDR	R0, [R0, #0]
0x17B1C	0xF0400104  ORR	R1, R0, #4
0x17B20	0x4813    LDR	R0, [PC, #76]
0x17B22	0x6001    STR	R1, [R0, #0]
0x17B24	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC278
L___Lib_System_4XX_InitialSetUpRCCRCC277:
;__Lib_System_4XX.c, 470 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17B26	0xF64B3080  MOVW	R0, #48000
0x17B2A	0x4281    CMP	R1, R0
0x17B2C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC279
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 471 :: 		
0x17B2E	0x4810    LDR	R0, [PC, #64]
0x17B30	0x6800    LDR	R0, [R0, #0]
0x17B32	0xF0400103  ORR	R1, R0, #3
0x17B36	0x480E    LDR	R0, [PC, #56]
0x17B38	0x6001    STR	R1, [R0, #0]
0x17B3A	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC280
L___Lib_System_4XX_InitialSetUpRCCRCC279:
;__Lib_System_4XX.c, 472 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17B3C	0xF5B14FFA  CMP	R1, #32000
0x17B40	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC281
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 473 :: 		
0x17B42	0x480B    LDR	R0, [PC, #44]
0x17B44	0x6800    LDR	R0, [R0, #0]
0x17B46	0xF0400102  ORR	R1, R0, #2
0x17B4A	0x4809    LDR	R0, [PC, #36]
0x17B4C	0x6001    STR	R1, [R0, #0]
0x17B4E	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC282
L___Lib_System_4XX_InitialSetUpRCCRCC281:
;__Lib_System_4XX.c, 474 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17B50	0xF5B15F7A  CMP	R1, #16000
0x17B54	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC283
0x17B56	0xE01D    B	#58
0x17B58	0x00800101  	#16842880
0x17B5C	0x30100640  	#104869904
0x17B60	0x9402C560  	#-983526398
0x17B64	0x00030000  	#3
0x17B68	0x49F00002  	#150000
0x17B6C	0x49F00002  	#150000
0x17B70	0x3C004002  	FLASH_ACR+0
0x17B74	0xD4C00001  	#120000
0x17B78	0x5F900001  	#90000
0x17B7C	0x32800002  	#144000
0x17B80	0x77000001  	#96000
0x17B84	0x19400001  	#72000
0x17B88	0xA5E00001  	#108000
0x17B8C	0xB5800001  	#112000
0x17B90	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 475 :: 		
0x17B94	0x482D    LDR	R0, [PC, #180]
0x17B96	0x6800    LDR	R0, [R0, #0]
0x17B98	0xF0400101  ORR	R1, R0, #1
0x17B9C	0x482B    LDR	R0, [PC, #172]
0x17B9E	0x6001    STR	R1, [R0, #0]
0x17BA0	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC284
L___Lib_System_4XX_InitialSetUpRCCRCC283:
;__Lib_System_4XX.c, 477 :: 		
0x17BA2	0x482A    LDR	R0, [PC, #168]
0x17BA4	0x6801    LDR	R1, [R0, #0]
0x17BA6	0xF06F0007  MVN	R0, #7
0x17BAA	0x4001    ANDS	R1, R0
0x17BAC	0x4827    LDR	R0, [PC, #156]
0x17BAE	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC284:
L___Lib_System_4XX_InitialSetUpRCCRCC282:
L___Lib_System_4XX_InitialSetUpRCCRCC280:
L___Lib_System_4XX_InitialSetUpRCCRCC278:
L___Lib_System_4XX_InitialSetUpRCCRCC276:
L___Lib_System_4XX_InitialSetUpRCCRCC274:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
;__Lib_System_4XX.c, 478 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC270:
L___Lib_System_4XX_InitialSetUpRCCRCC269:
L___Lib_System_4XX_InitialSetUpRCCRCC253:
L___Lib_System_4XX_InitialSetUpRCCRCC239:
;__Lib_System_4XX.c, 480 :: 		
0x17BB0	0x2101    MOVS	R1, #1
0x17BB2	0xB249    SXTB	R1, R1
0x17BB4	0x4826    LDR	R0, [PC, #152]
0x17BB6	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 481 :: 		
0x17BB8	0x4826    LDR	R0, [PC, #152]
0x17BBA	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 483 :: 		
0x17BBC	0xF7FFFD00  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 485 :: 		
0x17BC0	0x4825    LDR	R0, [PC, #148]
0x17BC2	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 486 :: 		
0x17BC4	0x4825    LDR	R0, [PC, #148]
0x17BC6	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 487 :: 		
0x17BC8	0x4825    LDR	R0, [PC, #148]
0x17BCA	0xEA020100  AND	R1, R2, R0, LSL #0
0x17BCE	0x4825    LDR	R0, [PC, #148]
0x17BD0	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 489 :: 		
0x17BD2	0xF0020001  AND	R0, R2, #1
0x17BD6	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x17BD8	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 490 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC286:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x17BDA	0x4822    LDR	R0, [PC, #136]
0x17BDC	0x6800    LDR	R0, [R0, #0]
0x17BDE	0xF0000002  AND	R0, R0, #2
0x17BE2	0x2800    CMP	R0, #0
0x17BE4	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC287
;__Lib_System_4XX.c, 491 :: 		
0x17BE6	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC286
L___Lib_System_4XX_InitialSetUpRCCRCC287:
;__Lib_System_4XX.c, 492 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x17BE8	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC285
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 489 :: 		
0x17BEA	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 492 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC285:
;__Lib_System_4XX.c, 494 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x17BEC	0xF4023080  AND	R0, R2, #65536
0x17BF0	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC297
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 495 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC289:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x17BF2	0x481C    LDR	R0, [PC, #112]
0x17BF4	0x6800    LDR	R0, [R0, #0]
0x17BF6	0xF4003000  AND	R0, R0, #131072
0x17BFA	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC290
;__Lib_System_4XX.c, 496 :: 		
0x17BFC	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC289
L___Lib_System_4XX_InitialSetUpRCCRCC290:
;__Lib_System_4XX.c, 497 :: 		
0x17BFE	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x17C00	0x460A    MOV	R2, R1
0x17C02	0x9901    LDR	R1, [SP, #4]
0x17C04	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC297:
;__Lib_System_4XX.c, 494 :: 		
0x17C06	0x9101    STR	R1, [SP, #4]
0x17C08	0x4611    MOV	R1, R2
0x17C0A	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 497 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC288:
;__Lib_System_4XX.c, 499 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x17C0C	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x17C10	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC298
;__Lib_System_4XX.c, 500 :: 		
0x17C12	0x4814    LDR	R0, [PC, #80]
0x17C14	0x6800    LDR	R0, [R0, #0]
0x17C16	0xF0407180  ORR	R1, R0, #16777216
0x17C1A	0x4812    LDR	R0, [PC, #72]
0x17C1C	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x17C1E	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 501 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CFGR start address is: 4 (R1)
0x17C20	0x4810    LDR	R0, [PC, #64]
0x17C22	0x6800    LDR	R0, [R0, #0]
0x17C24	0xF0007000  AND	R0, R0, #33554432
0x17C28	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 502 :: 		
0x17C2A	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 503 :: 		
0x17C2C	0x460A    MOV	R2, R1
0x17C2E	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC298:
;__Lib_System_4XX.c, 499 :: 		
;__Lib_System_4XX.c, 503 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 506 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC294:
; ulRCC_CFGR start address is: 8 (R2)
0x17C30	0x480A    LDR	R0, [PC, #40]
0x17C32	0x6800    LDR	R0, [R0, #0]
0x17C34	0xF000010C  AND	R1, R0, #12
0x17C38	0x0090    LSLS	R0, R2, #2
0x17C3A	0xF000000C  AND	R0, R0, #12
0x17C3E	0x4281    CMP	R1, R0
0x17C40	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC295
;__Lib_System_4XX.c, 507 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x17C42	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
L___Lib_System_4XX_InitialSetUpRCCRCC295:
;__Lib_System_4XX.c, 509 :: 		
L_end_InitialSetUpRCCRCC2:
0x17C44	0xF8DDE000  LDR	LR, [SP, #0]
0x17C48	0xB002    ADD	SP, SP, #8
0x17C4A	0x4770    BX	LR
0x17C4C	0x3C004002  	FLASH_ACR+0
0x17C50	0x80204247  	FLASH_ACR+0
0x17C54	0x80244247  	FLASH_ACR+0
0x17C58	0x38044002  	RCC_PLLCFGR+0
0x17C5C	0x38084002  	RCC_CFGR+0
0x17C60	0xFFFF000F  	#1048575
0x17C64	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 383 :: 		
0x175C0	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 386 :: 		
0x175C2	0x480D    LDR	R0, [PC, #52]
0x175C4	0x6800    LDR	R0, [R0, #0]
0x175C6	0xF0400101  ORR	R1, R0, #1
0x175CA	0x480B    LDR	R0, [PC, #44]
0x175CC	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 389 :: 		
0x175CE	0x2100    MOVS	R1, #0
0x175D0	0x480A    LDR	R0, [PC, #40]
0x175D2	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 392 :: 		
0x175D4	0x4808    LDR	R0, [PC, #32]
0x175D6	0x6801    LDR	R1, [R0, #0]
0x175D8	0x4809    LDR	R0, [PC, #36]
0x175DA	0x4001    ANDS	R1, R0
0x175DC	0x4806    LDR	R0, [PC, #24]
0x175DE	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 395 :: 		
0x175E0	0x4908    LDR	R1, [PC, #32]
0x175E2	0x4809    LDR	R0, [PC, #36]
0x175E4	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 398 :: 		
0x175E6	0x4804    LDR	R0, [PC, #16]
0x175E8	0x6801    LDR	R1, [R0, #0]
0x175EA	0xF46F2080  MVN	R0, #262144
0x175EE	0x4001    ANDS	R1, R0
0x175F0	0x4801    LDR	R0, [PC, #4]
0x175F2	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 402 :: 		
L_end_SystemClockSetDefault:
0x175F4	0xB001    ADD	SP, SP, #4
0x175F6	0x4770    BX	LR
0x175F8	0x38004002  	RCC_CR+0
0x175FC	0x38084002  	RCC_CFGR+0
0x17600	0xFFFFFEF6  	#-17367041
0x17604	0x30102400  	#603992080
0x17608	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 321 :: 		
0x178E4	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 322 :: 		
0x178E6	0x4904    LDR	R1, [PC, #16]
0x178E8	0x4804    LDR	R0, [PC, #16]
0x178EA	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 323 :: 		
0x178EC	0x4904    LDR	R1, [PC, #16]
0x178EE	0x4805    LDR	R0, [PC, #20]
0x178F0	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 324 :: 		
L_end_InitialSetUpFosc:
0x178F2	0xB001    ADD	SP, SP, #4
0x178F4	0x4770    BX	LR
0x178F6	0xBF00    NOP
0x178F8	0x49F00002  	#150000
0x178FC	0x27A42000  	___System_CLOCK_IN_KHZ+0
0x17900	0x00030000  	#3
0x17904	0x2DE42000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 266 :: 		
0x178B0	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 267 :: 		
L___GenExcept24:
0x178B2	0xE7FE    B	L___GenExcept24
;__Lib_System_4XX.c, 268 :: 		
L_end___GenExcept:
0x178B4	0xB001    ADD	SP, SP, #4
0x178B6	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 299 :: 		
0x178B8	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 302 :: 		
0x178BA	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 303 :: 		
0x178BE	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 305 :: 		
0x178C2	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 307 :: 		
0x178C4	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 309 :: 		
0x178C8	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 311 :: 		
0x178CA	0xBF00    NOP
;__Lib_System_4XX.c, 312 :: 		
0x178CC	0xBF00    NOP
;__Lib_System_4XX.c, 313 :: 		
0x178CE	0xBF00    NOP
;__Lib_System_4XX.c, 314 :: 		
0x178D0	0xBF00    NOP
;__Lib_System_4XX.c, 316 :: 		
0x178D2	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 317 :: 		
0x178D6	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 318 :: 		
0x178DA	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 319 :: 		
L_end___EnableFPU:
0x178DE	0xB001    ADD	SP, SP, #4
0x178E0	0x4770    BX	LR
; end of ___EnableFPU
0x18E68	0xB500    PUSH	(R14)
0x18E6A	0xF8DFB014  LDR	R11, [PC, #20]
0x18E6E	0xF8DFA014  LDR	R10, [PC, #20]
0x18E72	0xF8DFC014  LDR	R12, [PC, #20]
0x18E76	0xF7E7F9CD  BL	532
0x18E7A	0xBD00    POP	(R15)
0x18E7C	0x4770    BX	LR
0x18E7E	0xBF00    NOP
0x18E80	0x00002000  	#536870912
0x18E84	0x03782000  	#536871800
0x18E88	0x85300001  	#99632
0x18EE8	0xB500    PUSH	(R14)
0x18EEA	0xF8DFB010  LDR	R11, [PC, #16]
0x18EEE	0xF8DFA010  LDR	R10, [PC, #16]
0x18EF2	0xF7FEFB8B  BL	95756
0x18EF6	0xBD00    POP	(R15)
0x18EF8	0x4770    BX	LR
0x18EFA	0xBF00    NOP
0x18EFC	0x00002000  	#536870912
0x18F00	0x2E242000  	#536882724
;Ducati_logger_driver.c,840 :: _Screen11_Images [4]
0x035C	0x20001F94 ;_Screen11_Images+0
; end of _Screen11_Images
;Ducati_logger_driver.c,807 :: _Screen10_Images [4]
0x6AB4	0x20001E54 ;_Screen10_Images+0
; end of _Screen10_Images
;Ducati_logger_driver.c,774 :: _Screen9_Images [4]
0x6C04	0x20001D14 ;_Screen9_Images+0
; end of _Screen9_Images
;Ducati_logger_driver.c,741 :: _Screen8_Images [4]
0x6EDC	0x20001BD4 ;_Screen8_Images+0
; end of _Screen8_Images
;Ducati_logger_driver.c,336 :: _Screen2_Lines [4]
0x7E5C	0x20000C74 ;_Screen2_Lines+0
; end of _Screen2_Lines
;Ducati_logger_driver.c,407 :: _Screen3_Buttons_Round [4]
0x8DDC	0x20000CD8 ;_Screen3_Buttons_Round+0
; end of _Screen3_Buttons_Round
;Ducati_logger_driver.c,435 :: _Screen3_CImages [4]
0xEDAC	0x00018C5C ;_Screen3_CImages+0
; end of _Screen3_CImages
;__Lib_TFT.c,4294 :: _TFT_defaultFont [2168]
0x17CB8	0x00200000 ;_TFT_defaultFont+0
0x17CBC	0x0010007F ;_TFT_defaultFont+4
0x17CC0	0x00018801 ;_TFT_defaultFont+8
0x17CC4	0x00019803 ;_TFT_defaultFont+12
0x17CC8	0x0001A805 ;_TFT_defaultFont+16
0x17CCC	0x0001B808 ;_TFT_defaultFont+20
0x17CD0	0x0001C807 ;_TFT_defaultFont+24
0x17CD4	0x0001D80D ;_TFT_defaultFont+28
0x17CD8	0x0001F80A ;_TFT_defaultFont+32
0x17CDC	0x00021803 ;_TFT_defaultFont+36
0x17CE0	0x00022805 ;_TFT_defaultFont+40
0x17CE4	0x00023805 ;_TFT_defaultFont+44
0x17CE8	0x00024807 ;_TFT_defaultFont+48
0x17CEC	0x00025809 ;_TFT_defaultFont+52
0x17CF0	0x00027803 ;_TFT_defaultFont+56
0x17CF4	0x00028805 ;_TFT_defaultFont+60
0x17CF8	0x00029803 ;_TFT_defaultFont+64
0x17CFC	0x0002A806 ;_TFT_defaultFont+68
0x17D00	0x0002B807 ;_TFT_defaultFont+72
0x17D04	0x0002C807 ;_TFT_defaultFont+76
0x17D08	0x0002D807 ;_TFT_defaultFont+80
0x17D0C	0x0002E807 ;_TFT_defaultFont+84
0x17D10	0x0002F807 ;_TFT_defaultFont+88
0x17D14	0x00030807 ;_TFT_defaultFont+92
0x17D18	0x00031807 ;_TFT_defaultFont+96
0x17D1C	0x00032807 ;_TFT_defaultFont+100
0x17D20	0x00033807 ;_TFT_defaultFont+104
0x17D24	0x00034807 ;_TFT_defaultFont+108
0x17D28	0x00035803 ;_TFT_defaultFont+112
0x17D2C	0x00036803 ;_TFT_defaultFont+116
0x17D30	0x00037809 ;_TFT_defaultFont+120
0x17D34	0x00039809 ;_TFT_defaultFont+124
0x17D38	0x0003B809 ;_TFT_defaultFont+128
0x17D3C	0x0003D806 ;_TFT_defaultFont+132
0x17D40	0x0003E809 ;_TFT_defaultFont+136
0x17D44	0x00040809 ;_TFT_defaultFont+140
0x17D48	0x00042807 ;_TFT_defaultFont+144
0x17D4C	0x00043807 ;_TFT_defaultFont+148
0x17D50	0x00044808 ;_TFT_defaultFont+152
0x17D54	0x00045806 ;_TFT_defaultFont+156
0x17D58	0x00046806 ;_TFT_defaultFont+160
0x17D5C	0x00047807 ;_TFT_defaultFont+164
0x17D60	0x00048808 ;_TFT_defaultFont+168
0x17D64	0x00049804 ;_TFT_defaultFont+172
0x17D68	0x0004A805 ;_TFT_defaultFont+176
0x17D6C	0x0004B807 ;_TFT_defaultFont+180
0x17D70	0x0004C806 ;_TFT_defaultFont+184
0x17D74	0x0004D80A ;_TFT_defaultFont+188
0x17D78	0x0004F807 ;_TFT_defaultFont+192
0x17D7C	0x00050808 ;_TFT_defaultFont+196
0x17D80	0x00051807 ;_TFT_defaultFont+200
0x17D84	0x00052808 ;_TFT_defaultFont+204
0x17D88	0x00053808 ;_TFT_defaultFont+208
0x17D8C	0x00054807 ;_TFT_defaultFont+212
0x17D90	0x00055806 ;_TFT_defaultFont+216
0x17D94	0x00056807 ;_TFT_defaultFont+220
0x17D98	0x00057808 ;_TFT_defaultFont+224
0x17D9C	0x0005880C ;_TFT_defaultFont+228
0x17DA0	0x0005A808 ;_TFT_defaultFont+232
0x17DA4	0x0005B808 ;_TFT_defaultFont+236
0x17DA8	0x0005C806 ;_TFT_defaultFont+240
0x17DAC	0x0005D805 ;_TFT_defaultFont+244
0x17DB0	0x0005E806 ;_TFT_defaultFont+248
0x17DB4	0x0005F805 ;_TFT_defaultFont+252
0x17DB8	0x00060809 ;_TFT_defaultFont+256
0x17DBC	0x00062808 ;_TFT_defaultFont+260
0x17DC0	0x00063805 ;_TFT_defaultFont+264
0x17DC4	0x00064807 ;_TFT_defaultFont+268
0x17DC8	0x00065807 ;_TFT_defaultFont+272
0x17DCC	0x00066806 ;_TFT_defaultFont+276
0x17DD0	0x00067807 ;_TFT_defaultFont+280
0x17DD4	0x00068807 ;_TFT_defaultFont+284
0x17DD8	0x00069805 ;_TFT_defaultFont+288
0x17DDC	0x0006A807 ;_TFT_defaultFont+292
0x17DE0	0x0006B807 ;_TFT_defaultFont+296
0x17DE4	0x0006C802 ;_TFT_defaultFont+300
0x17DE8	0x0006D803 ;_TFT_defaultFont+304
0x17DEC	0x0006E806 ;_TFT_defaultFont+308
0x17DF0	0x0006F802 ;_TFT_defaultFont+312
0x17DF4	0x0007080A ;_TFT_defaultFont+316
0x17DF8	0x00072807 ;_TFT_defaultFont+320
0x17DFC	0x00073807 ;_TFT_defaultFont+324
0x17E00	0x00074807 ;_TFT_defaultFont+328
0x17E04	0x00075807 ;_TFT_defaultFont+332
0x17E08	0x00076805 ;_TFT_defaultFont+336
0x17E0C	0x00077806 ;_TFT_defaultFont+340
0x17E10	0x00078805 ;_TFT_defaultFont+344
0x17E14	0x00079807 ;_TFT_defaultFont+348
0x17E18	0x0007A807 ;_TFT_defaultFont+352
0x17E1C	0x0007B80A ;_TFT_defaultFont+356
0x17E20	0x0007D806 ;_TFT_defaultFont+360
0x17E24	0x0007E807 ;_TFT_defaultFont+364
0x17E28	0x0007F806 ;_TFT_defaultFont+368
0x17E2C	0x00080806 ;_TFT_defaultFont+372
0x17E30	0x00081804 ;_TFT_defaultFont+376
0x17E34	0x00082806 ;_TFT_defaultFont+380
0x17E38	0x0008380A ;_TFT_defaultFont+384
0x17E3C	0x0008580B ;_TFT_defaultFont+388
0x17E40	0x00000000 ;_TFT_defaultFont+392
0x17E44	0x00000000 ;_TFT_defaultFont+396
0x17E48	0x00000000 ;_TFT_defaultFont+400
0x17E4C	0x00000000 ;_TFT_defaultFont+404
0x17E50	0x00000000 ;_TFT_defaultFont+408
0x17E54	0x06060606 ;_TFT_defaultFont+412
0x17E58	0x06000606 ;_TFT_defaultFont+416
0x17E5C	0x00000006 ;_TFT_defaultFont+420
0x17E60	0x1B000000 ;_TFT_defaultFont+424
0x17E64	0x001B1B1B ;_TFT_defaultFont+428
0x17E68	0x00000000 ;_TFT_defaultFont+432
0x17E6C	0x00000000 ;_TFT_defaultFont+436
0x17E70	0x00000000 ;_TFT_defaultFont+440
0x17E74	0xFEFE4848 ;_TFT_defaultFont+444
0x17E78	0x127F7F24 ;_TFT_defaultFont+448
0x17E7C	0x00000012 ;_TFT_defaultFont+452
0x17E80	0x08080000 ;_TFT_defaultFont+456
0x17E84	0x0B0B4B3E ;_TFT_defaultFont+460
0x17E88	0x6968683E ;_TFT_defaultFont+464
0x17E8C	0x0008083E ;_TFT_defaultFont+468
0x17E90	0x00000000 ;_TFT_defaultFont+472
0x17E94	0x00000000 ;_TFT_defaultFont+476
0x17E98	0x0233001E ;_TFT_defaultFont+480
0x17E9C	0x00B30133 ;_TFT_defaultFont+484
0x17EA0	0x19A00F5E ;_TFT_defaultFont+488
0x17EA4	0x19881990 ;_TFT_defaultFont+492
0x17EA8	0x00000F00 ;_TFT_defaultFont+496
0x17EAC	0x00000000 ;_TFT_defaultFont+500
0x17EB0	0x00000000 ;_TFT_defaultFont+504
0x17EB4	0x00000000 ;_TFT_defaultFont+508
0x17EB8	0x0066003C ;_TFT_defaultFont+512
0x17EBC	0x00660066 ;_TFT_defaultFont+516
0x17EC0	0x0366033C ;_TFT_defaultFont+520
0x17EC4	0x00C601C6 ;_TFT_defaultFont+524
0x17EC8	0x000003BC ;_TFT_defaultFont+528
0x17ECC	0x00000000 ;_TFT_defaultFont+532
0x17ED0	0x06000000 ;_TFT_defaultFont+536
0x17ED4	0x00060606 ;_TFT_defaultFont+540
0x17ED8	0x00000000 ;_TFT_defaultFont+544
0x17EDC	0x00000000 ;_TFT_defaultFont+548
0x17EE0	0x18000000 ;_TFT_defaultFont+552
0x17EE4	0x06060C0C ;_TFT_defaultFont+556
0x17EE8	0x06060606 ;_TFT_defaultFont+560
0x17EEC	0x180C0C06 ;_TFT_defaultFont+564
0x17EF0	0x06000000 ;_TFT_defaultFont+568
0x17EF4	0x18180C0C ;_TFT_defaultFont+572
0x17EF8	0x18181818 ;_TFT_defaultFont+576
0x17EFC	0x060C0C18 ;_TFT_defaultFont+580
0x17F00	0x18000000 ;_TFT_defaultFont+584
0x17F04	0x185A3C5A ;_TFT_defaultFont+588
0x17F08	0x00000000 ;_TFT_defaultFont+592
0x17F0C	0x00000000 ;_TFT_defaultFont+596
0x17F10	0x00000000 ;_TFT_defaultFont+600
0x17F14	0x00000000 ;_TFT_defaultFont+604
0x17F18	0x00200000 ;_TFT_defaultFont+608
0x17F1C	0x00200020 ;_TFT_defaultFont+612
0x17F20	0x002001FC ;_TFT_defaultFont+616
0x17F24	0x00200020 ;_TFT_defaultFont+620
0x17F28	0x00000000 ;_TFT_defaultFont+624
0x17F2C	0x00000000 ;_TFT_defaultFont+628
0x17F30	0x00000000 ;_TFT_defaultFont+632
0x17F34	0x00000000 ;_TFT_defaultFont+636
0x17F38	0x06000000 ;_TFT_defaultFont+640
0x17F3C	0x00030306 ;_TFT_defaultFont+644
0x17F40	0x00000000 ;_TFT_defaultFont+648
0x17F44	0x00000000 ;_TFT_defaultFont+652
0x17F48	0x0000001F ;_TFT_defaultFont+656
0x17F4C	0x00000000 ;_TFT_defaultFont+660
0x17F50	0x00000000 ;_TFT_defaultFont+664
0x17F54	0x00000000 ;_TFT_defaultFont+668
0x17F58	0x06000000 ;_TFT_defaultFont+672
0x17F5C	0x00000006 ;_TFT_defaultFont+676
0x17F60	0x20000000 ;_TFT_defaultFont+680
0x17F64	0x08101020 ;_TFT_defaultFont+684
0x17F68	0x02040408 ;_TFT_defaultFont+688
0x17F6C	0x00010102 ;_TFT_defaultFont+692
0x17F70	0x00000000 ;_TFT_defaultFont+696
0x17F74	0x6363633E ;_TFT_defaultFont+700
0x17F78	0x63636363 ;_TFT_defaultFont+704
0x17F7C	0x0000003E ;_TFT_defaultFont+708
0x17F80	0x00000000 ;_TFT_defaultFont+712
0x17F84	0x18181E18 ;_TFT_defaultFont+716
0x17F88	0x18181818 ;_TFT_defaultFont+720
0x17F8C	0x0000007E ;_TFT_defaultFont+724
0x17F90	0x00000000 ;_TFT_defaultFont+728
0x17F94	0x6061613E ;_TFT_defaultFont+732
0x17F98	0x060C1830 ;_TFT_defaultFont+736
0x17F9C	0x0000007F ;_TFT_defaultFont+740
0x17FA0	0x00000000 ;_TFT_defaultFont+744
0x17FA4	0x6060613E ;_TFT_defaultFont+748
0x17FA8	0x6160603C ;_TFT_defaultFont+752
0x17FAC	0x0000003E ;_TFT_defaultFont+756
0x17FB0	0x00000000 ;_TFT_defaultFont+760
0x17FB4	0x32343830 ;_TFT_defaultFont+764
0x17FB8	0x30307F31 ;_TFT_defaultFont+768
0x17FBC	0x00000030 ;_TFT_defaultFont+772
0x17FC0	0x00000000 ;_TFT_defaultFont+776
0x17FC4	0x3E06067E ;_TFT_defaultFont+780
0x17FC8	0x61606060 ;_TFT_defaultFont+784
0x17FCC	0x0000003E ;_TFT_defaultFont+788
0x17FD0	0x00000000 ;_TFT_defaultFont+792
0x17FD4	0x3F03063C ;_TFT_defaultFont+796
0x17FD8	0x63636363 ;_TFT_defaultFont+800
0x17FDC	0x0000003E ;_TFT_defaultFont+804
0x17FE0	0x00000000 ;_TFT_defaultFont+808
0x17FE4	0x3030607F ;_TFT_defaultFont+812
0x17FE8	0x0C0C1818 ;_TFT_defaultFont+816
0x17FEC	0x0000000C ;_TFT_defaultFont+820
0x17FF0	0x00000000 ;_TFT_defaultFont+824
0x17FF4	0x6363633E ;_TFT_defaultFont+828
0x17FF8	0x6363633E ;_TFT_defaultFont+832
0x17FFC	0x0000003E ;_TFT_defaultFont+836
0x18000	0x00000000 ;_TFT_defaultFont+840
0x18004	0x6363633E ;_TFT_defaultFont+844
0x18008	0x30607E63 ;_TFT_defaultFont+848
0x1800C	0x0000001E ;_TFT_defaultFont+852
0x18010	0x00000000 ;_TFT_defaultFont+856
0x18014	0x06060000 ;_TFT_defaultFont+860
0x18018	0x06000000 ;_TFT_defaultFont+864
0x1801C	0x00000006 ;_TFT_defaultFont+868
0x18020	0x00000000 ;_TFT_defaultFont+872
0x18024	0x06060000 ;_TFT_defaultFont+876
0x18028	0x06000000 ;_TFT_defaultFont+880
0x1802C	0x00030306 ;_TFT_defaultFont+884
0x18030	0x00000000 ;_TFT_defaultFont+888
0x18034	0x00000000 ;_TFT_defaultFont+892
0x18038	0x01800000 ;_TFT_defaultFont+896
0x1803C	0x00180060 ;_TFT_defaultFont+900
0x18040	0x00060006 ;_TFT_defaultFont+904
0x18044	0x00600018 ;_TFT_defaultFont+908
0x18048	0x00000180 ;_TFT_defaultFont+912
0x1804C	0x00000000 ;_TFT_defaultFont+916
0x18050	0x00000000 ;_TFT_defaultFont+920
0x18054	0x00000000 ;_TFT_defaultFont+924
0x18058	0x00000000 ;_TFT_defaultFont+928
0x1805C	0x000001FE ;_TFT_defaultFont+932
0x18060	0x01FE0000 ;_TFT_defaultFont+936
0x18064	0x00000000 ;_TFT_defaultFont+940
0x18068	0x00000000 ;_TFT_defaultFont+944
0x1806C	0x00000000 ;_TFT_defaultFont+948
0x18070	0x00000000 ;_TFT_defaultFont+952
0x18074	0x00000000 ;_TFT_defaultFont+956
0x18078	0x00060000 ;_TFT_defaultFont+960
0x1807C	0x00600018 ;_TFT_defaultFont+964
0x18080	0x01800180 ;_TFT_defaultFont+968
0x18084	0x00180060 ;_TFT_defaultFont+972
0x18088	0x00000006 ;_TFT_defaultFont+976
0x1808C	0x00000000 ;_TFT_defaultFont+980
0x18090	0x00000000 ;_TFT_defaultFont+984
0x18094	0x1830311E ;_TFT_defaultFont+988
0x18098	0x0C000C0C ;_TFT_defaultFont+992
0x1809C	0x0000000C ;_TFT_defaultFont+996
0x180A0	0x00000000 ;_TFT_defaultFont+1000
0x180A4	0x00000000 ;_TFT_defaultFont+1004
0x180A8	0x0082007C ;_TFT_defaultFont+1008
0x180AC	0x016D0179 ;_TFT_defaultFont+1012
0x180B0	0x016D016D ;_TFT_defaultFont+1016
0x180B4	0x00D9016D ;_TFT_defaultFont+1020
0x180B8	0x00FC0002 ;_TFT_defaultFont+1024
0x180BC	0x00000000 ;_TFT_defaultFont+1028
0x180C0	0x00000000 ;_TFT_defaultFont+1032
0x180C4	0x00000000 ;_TFT_defaultFont+1036
0x180C8	0x00380038 ;_TFT_defaultFont+1040
0x180CC	0x006C006C ;_TFT_defaultFont+1044
0x180D0	0x00FE00C6 ;_TFT_defaultFont+1048
0x180D4	0x018300C6 ;_TFT_defaultFont+1052
0x180D8	0x00000183 ;_TFT_defaultFont+1056
0x180DC	0x00000000 ;_TFT_defaultFont+1060
0x180E0	0x00000000 ;_TFT_defaultFont+1064
0x180E4	0x6363633F ;_TFT_defaultFont+1068
0x180E8	0x6363633F ;_TFT_defaultFont+1072
0x180EC	0x0000003F ;_TFT_defaultFont+1076
0x180F0	0x00000000 ;_TFT_defaultFont+1080
0x180F4	0x0343433E ;_TFT_defaultFont+1084
0x180F8	0x43430303 ;_TFT_defaultFont+1088
0x180FC	0x0000003E ;_TFT_defaultFont+1092
0x18100	0x00000000 ;_TFT_defaultFont+1096
0x18104	0xC3C3633F ;_TFT_defaultFont+1100
0x18108	0x63C3C3C3 ;_TFT_defaultFont+1104
0x1810C	0x0000003F ;_TFT_defaultFont+1108
0x18110	0x00000000 ;_TFT_defaultFont+1112
0x18114	0x0303033F ;_TFT_defaultFont+1116
0x18118	0x0303031F ;_TFT_defaultFont+1120
0x1811C	0x0000003F ;_TFT_defaultFont+1124
0x18120	0x00000000 ;_TFT_defaultFont+1128
0x18124	0x0303033F ;_TFT_defaultFont+1132
0x18128	0x0303031F ;_TFT_defaultFont+1136
0x1812C	0x00000003 ;_TFT_defaultFont+1140
0x18130	0x00000000 ;_TFT_defaultFont+1144
0x18134	0x0343433E ;_TFT_defaultFont+1148
0x18138	0x63636373 ;_TFT_defaultFont+1152
0x1813C	0x0000007E ;_TFT_defaultFont+1156
0x18140	0x00000000 ;_TFT_defaultFont+1160
0x18144	0xC3C3C3C3 ;_TFT_defaultFont+1164
0x18148	0xC3C3C3FF ;_TFT_defaultFont+1168
0x1814C	0x000000C3 ;_TFT_defaultFont+1172
0x18150	0x00000000 ;_TFT_defaultFont+1176
0x18154	0x0606060F ;_TFT_defaultFont+1180
0x18158	0x06060606 ;_TFT_defaultFont+1184
0x1815C	0x0000000F ;_TFT_defaultFont+1188
0x18160	0x00000000 ;_TFT_defaultFont+1192
0x18164	0x1818181E ;_TFT_defaultFont+1196
0x18168	0x18181818 ;_TFT_defaultFont+1200
0x1816C	0x0000000F ;_TFT_defaultFont+1204
0x18170	0x00000000 ;_TFT_defaultFont+1208
0x18174	0x0F1B3363 ;_TFT_defaultFont+1212
0x18178	0x331B0F07 ;_TFT_defaultFont+1216
0x1817C	0x00000063 ;_TFT_defaultFont+1220
0x18180	0x00000000 ;_TFT_defaultFont+1224
0x18184	0x03030303 ;_TFT_defaultFont+1228
0x18188	0x03030303 ;_TFT_defaultFont+1232
0x1818C	0x0000003F ;_TFT_defaultFont+1236
0x18190	0x00000000 ;_TFT_defaultFont+1240
0x18194	0x00000000 ;_TFT_defaultFont+1244
0x18198	0x03870387 ;_TFT_defaultFont+1248
0x1819C	0x034D034D ;_TFT_defaultFont+1252
0x181A0	0x03390339 ;_TFT_defaultFont+1256
0x181A4	0x03110311 ;_TFT_defaultFont+1260
0x181A8	0x00000301 ;_TFT_defaultFont+1264
0x181AC	0x00000000 ;_TFT_defaultFont+1268
0x181B0	0x00000000 ;_TFT_defaultFont+1272
0x181B4	0x4D4D4747 ;_TFT_defaultFont+1276
0x181B8	0x71715959 ;_TFT_defaultFont+1280
0x181BC	0x00000061 ;_TFT_defaultFont+1284
0x181C0	0x00000000 ;_TFT_defaultFont+1288
0x181C4	0xC3C3C37E ;_TFT_defaultFont+1292
0x181C8	0xC3C3C3C3 ;_TFT_defaultFont+1296
0x181CC	0x0000007E ;_TFT_defaultFont+1300
0x181D0	0x00000000 ;_TFT_defaultFont+1304
0x181D4	0x6363633F ;_TFT_defaultFont+1308
0x181D8	0x03033F63 ;_TFT_defaultFont+1312
0x181DC	0x00000003 ;_TFT_defaultFont+1316
0x181E0	0x00000000 ;_TFT_defaultFont+1320
0x181E4	0xC3C3C37E ;_TFT_defaultFont+1324
0x181E8	0xC3C3C3C3 ;_TFT_defaultFont+1328
0x181EC	0x00C0607E ;_TFT_defaultFont+1332
0x181F0	0x00000000 ;_TFT_defaultFont+1336
0x181F4	0x6363633F ;_TFT_defaultFont+1340
0x181F8	0x63331B3F ;_TFT_defaultFont+1344
0x181FC	0x000000C3 ;_TFT_defaultFont+1348
0x18200	0x00000000 ;_TFT_defaultFont+1352
0x18204	0x0343433E ;_TFT_defaultFont+1356
0x18208	0x6161603E ;_TFT_defaultFont+1360
0x1820C	0x0000003E ;_TFT_defaultFont+1364
0x18210	0x00000000 ;_TFT_defaultFont+1368
0x18214	0x0C0C0C3F ;_TFT_defaultFont+1372
0x18218	0x0C0C0C0C ;_TFT_defaultFont+1376
0x1821C	0x0000000C ;_TFT_defaultFont+1380
0x18220	0x00000000 ;_TFT_defaultFont+1384
0x18224	0x63636363 ;_TFT_defaultFont+1388
0x18228	0x63636363 ;_TFT_defaultFont+1392
0x1822C	0x0000003E ;_TFT_defaultFont+1396
0x18230	0x00000000 ;_TFT_defaultFont+1400
0x18234	0x66C3C3C3 ;_TFT_defaultFont+1404
0x18238	0x183C3C66 ;_TFT_defaultFont+1408
0x1823C	0x00000018 ;_TFT_defaultFont+1412
0x18240	0x00000000 ;_TFT_defaultFont+1416
0x18244	0x00000000 ;_TFT_defaultFont+1420
0x18248	0x0C630C63 ;_TFT_defaultFont+1424
0x1824C	0x0CF30C63 ;_TFT_defaultFont+1428
0x18250	0x079E06F6 ;_TFT_defaultFont+1432
0x18254	0x030C079E ;_TFT_defaultFont+1436
0x18258	0x0000030C ;_TFT_defaultFont+1440
0x1825C	0x00000000 ;_TFT_defaultFont+1444
0x18260	0x00000000 ;_TFT_defaultFont+1448
0x18264	0x3C66C3C3 ;_TFT_defaultFont+1452
0x18268	0xC3663C18 ;_TFT_defaultFont+1456
0x1826C	0x000000C3 ;_TFT_defaultFont+1460
0x18270	0x00000000 ;_TFT_defaultFont+1464
0x18274	0x6666C3C3 ;_TFT_defaultFont+1468
0x18278	0x1818183C ;_TFT_defaultFont+1472
0x1827C	0x00000018 ;_TFT_defaultFont+1476
0x18280	0x00000000 ;_TFT_defaultFont+1480
0x18284	0x1830303F ;_TFT_defaultFont+1484
0x18288	0x0303060C ;_TFT_defaultFont+1488
0x1828C	0x0000003F ;_TFT_defaultFont+1492
0x18290	0x1E000000 ;_TFT_defaultFont+1496
0x18294	0x06060606 ;_TFT_defaultFont+1500
0x18298	0x06060606 ;_TFT_defaultFont+1504
0x1829C	0x001E0606 ;_TFT_defaultFont+1508
0x182A0	0x01000000 ;_TFT_defaultFont+1512
0x182A4	0x04020201 ;_TFT_defaultFont+1516
0x182A8	0x10080804 ;_TFT_defaultFont+1520
0x182AC	0x00202010 ;_TFT_defaultFont+1524
0x182B0	0x1E000000 ;_TFT_defaultFont+1528
0x182B4	0x18181818 ;_TFT_defaultFont+1532
0x182B8	0x18181818 ;_TFT_defaultFont+1536
0x182BC	0x001E1818 ;_TFT_defaultFont+1540
0x182C0	0x00000000 ;_TFT_defaultFont+1544
0x182C4	0x00000000 ;_TFT_defaultFont+1548
0x182C8	0x00480030 ;_TFT_defaultFont+1552
0x182CC	0x01020084 ;_TFT_defaultFont+1556
0x182D0	0x00000000 ;_TFT_defaultFont+1560
0x182D4	0x00000000 ;_TFT_defaultFont+1564
0x182D8	0x00000000 ;_TFT_defaultFont+1568
0x182DC	0x00000000 ;_TFT_defaultFont+1572
0x182E0	0x00000000 ;_TFT_defaultFont+1576
0x182E4	0x00000000 ;_TFT_defaultFont+1580
0x182E8	0x00000000 ;_TFT_defaultFont+1584
0x182EC	0x00FF0000 ;_TFT_defaultFont+1588
0x182F0	0x0C000000 ;_TFT_defaultFont+1592
0x182F4	0x00000018 ;_TFT_defaultFont+1596
0x182F8	0x00000000 ;_TFT_defaultFont+1600
0x182FC	0x00000000 ;_TFT_defaultFont+1604
0x18300	0x00000000 ;_TFT_defaultFont+1608
0x18304	0x623C0000 ;_TFT_defaultFont+1612
0x18308	0x63637E60 ;_TFT_defaultFont+1616
0x1830C	0x0000007E ;_TFT_defaultFont+1620
0x18310	0x03000000 ;_TFT_defaultFont+1624
0x18314	0x673B0303 ;_TFT_defaultFont+1628
0x18318	0x63636363 ;_TFT_defaultFont+1632
0x1831C	0x0000003F ;_TFT_defaultFont+1636
0x18320	0x00000000 ;_TFT_defaultFont+1640
0x18324	0x231E0000 ;_TFT_defaultFont+1644
0x18328	0x23030303 ;_TFT_defaultFont+1648
0x1832C	0x0000001E ;_TFT_defaultFont+1652
0x18330	0x60000000 ;_TFT_defaultFont+1656
0x18334	0x637E6060 ;_TFT_defaultFont+1660
0x18338	0x73636363 ;_TFT_defaultFont+1664
0x1833C	0x0000006E ;_TFT_defaultFont+1668
0x18340	0x00000000 ;_TFT_defaultFont+1672
0x18344	0x633E0000 ;_TFT_defaultFont+1676
0x18348	0x43037F63 ;_TFT_defaultFont+1680
0x1834C	0x0000003E ;_TFT_defaultFont+1684
0x18350	0x1C000000 ;_TFT_defaultFont+1688
0x18354	0x060F0606 ;_TFT_defaultFont+1692
0x18358	0x06060606 ;_TFT_defaultFont+1696
0x1835C	0x00000006 ;_TFT_defaultFont+1700
0x18360	0x00000000 ;_TFT_defaultFont+1704
0x18364	0x637E0000 ;_TFT_defaultFont+1708
0x18368	0x73636363 ;_TFT_defaultFont+1712
0x1836C	0x3E61606E ;_TFT_defaultFont+1716
0x18370	0x03000000 ;_TFT_defaultFont+1720
0x18374	0x673B0303 ;_TFT_defaultFont+1724
0x18378	0x63636363 ;_TFT_defaultFont+1728
0x1837C	0x00000063 ;_TFT_defaultFont+1732
0x18380	0x03000000 ;_TFT_defaultFont+1736
0x18384	0x03030003 ;_TFT_defaultFont+1740
0x18388	0x03030303 ;_TFT_defaultFont+1744
0x1838C	0x00000003 ;_TFT_defaultFont+1748
0x18390	0x06000000 ;_TFT_defaultFont+1752
0x18394	0x06070006 ;_TFT_defaultFont+1756
0x18398	0x06060606 ;_TFT_defaultFont+1760
0x1839C	0x03060606 ;_TFT_defaultFont+1764
0x183A0	0x03000000 ;_TFT_defaultFont+1768
0x183A4	0x1B330303 ;_TFT_defaultFont+1772
0x183A8	0x1B0F070F ;_TFT_defaultFont+1776
0x183AC	0x00000033 ;_TFT_defaultFont+1780
0x183B0	0x03000000 ;_TFT_defaultFont+1784
0x183B4	0x03030303 ;_TFT_defaultFont+1788
0x183B8	0x03030303 ;_TFT_defaultFont+1792
0x183BC	0x00000003 ;_TFT_defaultFont+1796
0x183C0	0x00000000 ;_TFT_defaultFont+1800
0x183C4	0x00000000 ;_TFT_defaultFont+1804
0x183C8	0x00000000 ;_TFT_defaultFont+1808
0x183CC	0x033301DF ;_TFT_defaultFont+1812
0x183D0	0x03330333 ;_TFT_defaultFont+1816
0x183D4	0x03330333 ;_TFT_defaultFont+1820
0x183D8	0x00000333 ;_TFT_defaultFont+1824
0x183DC	0x00000000 ;_TFT_defaultFont+1828
0x183E0	0x00000000 ;_TFT_defaultFont+1832
0x183E4	0x673B0000 ;_TFT_defaultFont+1836
0x183E8	0x63636363 ;_TFT_defaultFont+1840
0x183EC	0x00000063 ;_TFT_defaultFont+1844
0x183F0	0x00000000 ;_TFT_defaultFont+1848
0x183F4	0x633E0000 ;_TFT_defaultFont+1852
0x183F8	0x63636363 ;_TFT_defaultFont+1856
0x183FC	0x0000003E ;_TFT_defaultFont+1860
0x18400	0x00000000 ;_TFT_defaultFont+1864
0x18404	0x673B0000 ;_TFT_defaultFont+1868
0x18408	0x63636363 ;_TFT_defaultFont+1872
0x1840C	0x0303033F ;_TFT_defaultFont+1876
0x18410	0x00000000 ;_TFT_defaultFont+1880
0x18414	0x637E0000 ;_TFT_defaultFont+1884
0x18418	0x73636363 ;_TFT_defaultFont+1888
0x1841C	0x6060606E ;_TFT_defaultFont+1892
0x18420	0x00000000 ;_TFT_defaultFont+1896
0x18424	0x1F1B0000 ;_TFT_defaultFont+1900
0x18428	0x03030303 ;_TFT_defaultFont+1904
0x1842C	0x00000003 ;_TFT_defaultFont+1908
0x18430	0x00000000 ;_TFT_defaultFont+1912
0x18434	0x231E0000 ;_TFT_defaultFont+1916
0x18438	0x31381E07 ;_TFT_defaultFont+1920
0x1843C	0x0000001E ;_TFT_defaultFont+1924
0x18440	0x00000000 ;_TFT_defaultFont+1928
0x18444	0x061F0606 ;_TFT_defaultFont+1932
0x18448	0x06060606 ;_TFT_defaultFont+1936
0x1844C	0x0000001C ;_TFT_defaultFont+1940
0x18450	0x00000000 ;_TFT_defaultFont+1944
0x18454	0x63630000 ;_TFT_defaultFont+1948
0x18458	0x73636363 ;_TFT_defaultFont+1952
0x1845C	0x0000006E ;_TFT_defaultFont+1956
0x18460	0x00000000 ;_TFT_defaultFont+1960
0x18464	0x63630000 ;_TFT_defaultFont+1964
0x18468	0x1C363663 ;_TFT_defaultFont+1968
0x1846C	0x0000001C ;_TFT_defaultFont+1972
0x18470	0x00000000 ;_TFT_defaultFont+1976
0x18474	0x00000000 ;_TFT_defaultFont+1980
0x18478	0x00000000 ;_TFT_defaultFont+1984
0x1847C	0x03330333 ;_TFT_defaultFont+1988
0x18480	0x01B601B6 ;_TFT_defaultFont+1992
0x18484	0x00CC01CE ;_TFT_defaultFont+1996
0x18488	0x000000CC ;_TFT_defaultFont+2000
0x1848C	0x00000000 ;_TFT_defaultFont+2004
0x18490	0x00000000 ;_TFT_defaultFont+2008
0x18494	0x33330000 ;_TFT_defaultFont+2012
0x18498	0x331E0C1E ;_TFT_defaultFont+2016
0x1849C	0x00000033 ;_TFT_defaultFont+2020
0x184A0	0x00000000 ;_TFT_defaultFont+2024
0x184A4	0x63630000 ;_TFT_defaultFont+2028
0x184A8	0x1C363663 ;_TFT_defaultFont+2032
0x184AC	0x0C0C181C ;_TFT_defaultFont+2036
0x184B0	0x00000000 ;_TFT_defaultFont+2040
0x184B4	0x303F0000 ;_TFT_defaultFont+2044
0x184B8	0x03060C18 ;_TFT_defaultFont+2048
0x184BC	0x0000003F ;_TFT_defaultFont+2052
0x184C0	0x38000000 ;_TFT_defaultFont+2056
0x184C4	0x0C0C0C0C ;_TFT_defaultFont+2060
0x184C8	0x0C0C0C07 ;_TFT_defaultFont+2064
0x184CC	0x00380C0C ;_TFT_defaultFont+2068
0x184D0	0x0C000000 ;_TFT_defaultFont+2072
0x184D4	0x0C0C0C0C ;_TFT_defaultFont+2076
0x184D8	0x0C0C0C0C ;_TFT_defaultFont+2080
0x184DC	0x000C0C0C ;_TFT_defaultFont+2084
0x184E0	0x07000000 ;_TFT_defaultFont+2088
0x184E4	0x0C0C0C0C ;_TFT_defaultFont+2092
0x184E8	0x0C0C0C38 ;_TFT_defaultFont+2096
0x184EC	0x00070C0C ;_TFT_defaultFont+2100
0x184F0	0x00000000 ;_TFT_defaultFont+2104
0x184F4	0x00000000 ;_TFT_defaultFont+2108
0x184F8	0x00000000 ;_TFT_defaultFont+2112
0x184FC	0x021E0000 ;_TFT_defaultFont+2116
0x18500	0x03F1023F ;_TFT_defaultFont+2120
0x18504	0x000001E1 ;_TFT_defaultFont+2124
0x18508	0x00000000 ;_TFT_defaultFont+2128
0x1850C	0x00000000 ;_TFT_defaultFont+2132
0x18510	0x00000000 ;_TFT_defaultFont+2136
0x18514	0x07FE0000 ;_TFT_defaultFont+2140
0x18518	0x04020402 ;_TFT_defaultFont+2144
0x1851C	0x04020402 ;_TFT_defaultFont+2148
0x18520	0x04020402 ;_TFT_defaultFont+2152
0x18524	0x04020402 ;_TFT_defaultFont+2156
0x18528	0x000007FE ;_TFT_defaultFont+2160
0x1852C	0x00000000 ;_TFT_defaultFont+2164
; end of _TFT_defaultFont
;ADXL345_main.c,0 :: ?ICS_readings [6]
0x18530	0x00000000 ;?ICS_readings+0
0x18534	0x0000 ;?ICS_readings+4
; end of ?ICS_readings
;ADXL345_main.c,0 :: ?ICS_Old_Accel_vals [6]
0x18536	0x00000000 ;?ICS_Old_Accel_vals+0
0x1853A	0x0000 ;?ICS_Old_Accel_vals+4
; end of ?ICS_Old_Accel_vals
;ADXL345_main.c,0 :: ?ICS__disp_accel_scroll [2]
0x1853C	0x0029 ;?ICS__disp_accel_scroll+0
; end of ?ICS__disp_accel_scroll
;,0 :: _initBlock_11 [2]
; Containing: ?ICS_CircleButton1_Caption [1]
;             ?ICS_CircleButton2_Caption [1]
0x1853E	0x0000 ;_initBlock_11+0 : ?ICS_CircleButton1_Caption at 0x1853E : ?ICS_CircleButton2_Caption at 0x1853F
; end of _initBlock_11
;Ducati_logger_driver.c,0 :: ?ICS_currentSector [4]
0x18540	0xFFFFFFFF ;?ICS_currentSector+0
; end of ?ICS_currentSector
;,0 :: _initBlock_13 [68]
; Containing: ?ICS?lstr1_Ducati_logger_driver [35]
;             ?ICS?lstr2_Ducati_logger_driver [33]
0x18544	0x63756F54 ;_initBlock_13+0 : ?ICS?lstr1_Ducati_logger_driver at 0x18544
0x18548	0x6F702068 ;_initBlock_13+4
0x1854C	0x73746E69 ;_initBlock_13+8
0x18550	0x206E6F20 ;_initBlock_13+12
0x18554	0x20656874 ;_initBlock_13+16
0x18558	0x65726373 ;_initBlock_13+20
0x1855C	0x61206E65 ;_initBlock_13+24
0x18560	0x68742073 ;_initBlock_13+28
0x18564	0x61007965 ;_initBlock_13+32 : ?ICS?lstr2_Ducati_logger_driver at 0x18567
0x18568	0x61657070 ;_initBlock_13+36
0x1856C	0x6F742072 ;_initBlock_13+40
0x18570	0x6C616320 ;_initBlock_13+44
0x18574	0x61726269 ;_initBlock_13+48
0x18578	0x74206574 ;_initBlock_13+52
0x1857C	0x6863756F ;_initBlock_13+56
0x18580	0x65726373 ;_initBlock_13+60
0x18584	0x002E6E65 ;_initBlock_13+64
; end of _initBlock_13
;,0 :: _initBlock_14 [22]
; Containing: ?ICS?lstr3_Ducati_logger_driver [13]
;             ?ICS_Label19_Caption [9]
0x18588	0x61637544 ;_initBlock_14+0 : ?ICS?lstr3_Ducati_logger_driver at 0x18588
0x1858C	0x6C5F6974 ;_initBlock_14+4
0x18590	0x5345522E ;_initBlock_14+8
0x18594	0x3A323100 ;_initBlock_14+12 : ?ICS_Label19_Caption at 0x18595
0x18598	0x41203635 ;_initBlock_14+16
0x1859C	0x004D ;_initBlock_14+20
; end of _initBlock_14
;Ducati_logger_driver.c,0 :: ?ICS_Label10_Caption [12]
0x1859E	0x352E3837 ;?ICS_Label10_Caption+0
0x185A2	0x000046B0 ;?ICS_Label10_Caption+4
0x185A6	0x00000000 ;?ICS_Label10_Caption+8
; end of ?ICS_Label10_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label11_Caption [12]
0x185AA	0x352E3837 ;?ICS_Label11_Caption+0
0x185AE	0x000046B0 ;?ICS_Label11_Caption+4
0x185B2	0x00000000 ;?ICS_Label11_Caption+8
; end of ?ICS_Label11_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label12_Caption [4]
0x185B6	0x004D5052 ;?ICS_Label12_Caption+0
; end of ?ICS_Label12_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label13_Caption [6]
0x185BA	0x30303231 ;?ICS_Label13_Caption+0
0x185BE	0x0030 ;?ICS_Label13_Caption+4
; end of ?ICS_Label13_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label14_Caption [10]
0x185C0	0x6E61654C ;?ICS_Label14_Caption+0
0x185C4	0x676E4120 ;?ICS_Label14_Caption+4
0x185C8	0x002E ;?ICS_Label14_Caption+8
; end of ?ICS_Label14_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label15_Caption [8]
0x185CA	0x47474F4C ;?ICS_Label15_Caption+0
0x185CE	0x00474E49 ;?ICS_Label15_Caption+4
; end of ?ICS_Label15_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label16_Caption [6]
0x185D2	0x30303030 ;?ICS_Label16_Caption+0
0x185D6	0x0030 ;?ICS_Label16_Caption+4
; end of ?ICS_Label16_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label17_Caption [2]
0x185D8	0x004E ;?ICS_Label17_Caption+0
; end of ?ICS_Label17_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label18_Caption [2]
0x185DA	0x004E ;?ICS_Label18_Caption+0
; end of ?ICS_Label18_Caption
;Ducati_logger_driver.c,0 :: ?ICS_ButtonRound8_Caption [4]
0x185DC	0x00676F4C ;?ICS_ButtonRound8_Caption+0
; end of ?ICS_ButtonRound8_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label20_Caption [4]
0x185E0	0x0048504D ;?ICS_Label20_Caption+0
; end of ?ICS_Label20_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label21_Caption [4]
0x185E4	0x00303031 ;?ICS_Label21_Caption+0
; end of ?ICS_Label21_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label22_Caption [12]
0x185E8	0x352E3837 ;?ICS_Label22_Caption+0
0x185EC	0x000046B0 ;?ICS_Label22_Caption+4
0x185F0	0x00000000 ;?ICS_Label22_Caption+8
; end of ?ICS_Label22_Caption
;,0 :: _initBlock_28 [36]
; Containing: ?ICS_Label23_Caption [11]
;             ?ICS_ButtonRound9_Caption [4]
;             ?ICS_Label24_Caption [12]
;             ?ICS_Label25_Caption [9]
0x185F4	0x6E61654C ;_initBlock_28+0 : ?ICS_Label23_Caption at 0x185F4
0x185F8	0x676E4120 ;_initBlock_28+4
0x185FC	0x4C00656C ;_initBlock_28+8 : ?ICS_ButtonRound9_Caption at 0x185FF
0x18600	0x3700676F ;_initBlock_28+12 : ?ICS_Label24_Caption at 0x18603
0x18604	0xB0352E38 ;_initBlock_28+16
0x18608	0x00000046 ;_initBlock_28+20
0x1860C	0x31000000 ;_initBlock_28+24 : ?ICS_Label25_Caption at 0x1860F
0x18610	0x36353A32 ;_initBlock_28+28
0x18614	0x004D4120 ;_initBlock_28+32
; end of _initBlock_28
;Ducati_logger_driver.c,0 :: ?ICS_Label26_Caption [8]
0x18618	0x47474F4C ;?ICS_Label26_Caption+0
0x1861C	0x00474E49 ;?ICS_Label26_Caption+4
; end of ?ICS_Label26_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label27_Caption [6]
0x18620	0x30303030 ;?ICS_Label27_Caption+0
0x18624	0x0030 ;?ICS_Label27_Caption+4
; end of ?ICS_Label27_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label28_Caption [2]
0x18626	0x004E ;?ICS_Label28_Caption+0
; end of ?ICS_Label28_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label29_Caption [2]
0x18628	0x004E ;?ICS_Label29_Caption+0
; end of ?ICS_Label29_Caption
;Ducati_logger_driver.c,0 :: ?ICS_ButtonRound1_Caption [10]
0x1862A	0x20746553 ;?ICS_ButtonRound1_Caption+0
0x1862E	0x636F6C43 ;?ICS_ButtonRound1_Caption+4
0x18632	0x006B ;?ICS_ButtonRound1_Caption+8
; end of ?ICS_ButtonRound1_Caption
;,0 :: _initBlock_34 [28]
; Containing: ?ICS_ButtonRound2_Caption [19]
;             ?ICS_ButtonRound3_Caption [9]
0x18634	0x65636341 ;_initBlock_34+0 : ?ICS_ButtonRound2_Caption at 0x18634
0x18638	0x6F72656C ;_initBlock_34+4
0x1863C	0x6574656D ;_initBlock_34+8
0x18640	0x65542072 ;_initBlock_34+12
0x18644	0x47007473 ;_initBlock_34+16 : ?ICS_ButtonRound3_Caption at 0x18647
0x18648	0x54205350 ;_initBlock_34+20
0x1864C	0x00747365 ;_initBlock_34+24
; end of _initBlock_34
;Ducati_logger_driver.c,0 :: ?ICS_ButtonRound4_Caption [18]
0x18650	0x6E67614D ;?ICS_ButtonRound4_Caption+0
0x18654	0x6D6F7465 ;?ICS_ButtonRound4_Caption+4
0x18658	0x72657465 ;?ICS_ButtonRound4_Caption+8
0x1865C	0x73655420 ;?ICS_ButtonRound4_Caption+12
0x18660	0x0074 ;?ICS_ButtonRound4_Caption+16
; end of ?ICS_ButtonRound4_Caption
;,0 :: _initBlock_36 [62]
; Containing: ?ICS_ButtonRound5_Caption [21]
;             ?ICS_ButtonRound6_Caption [10]
;             ?ICS_ButtonRound7_Caption [22]
;             ?ICS_Label30_Caption [9]
0x18662	0x73657250 ;_initBlock_36+0 : ?ICS_ButtonRound5_Caption at 0x18662
0x18666	0x65727573 ;_initBlock_36+4
0x1866A	0x6E655320 ;_initBlock_36+8
0x1866E	0x20726F73 ;_initBlock_36+12
0x18672	0x74736554 ;_initBlock_36+16
0x18676	0x72794700 ;_initBlock_36+20 : ?ICS_ButtonRound6_Caption at 0x18677
0x1867A	0x6554206F ;_initBlock_36+24
0x1867E	0x43007473 ;_initBlock_36+28 : ?ICS_ButtonRound7_Caption at 0x18681
0x18682	0x62696C61 ;_initBlock_36+32
0x18686	0x65746172 ;_initBlock_36+36
0x1868A	0x756F5420 ;_initBlock_36+40
0x1868E	0x63736863 ;_initBlock_36+44
0x18692	0x6E656572 ;_initBlock_36+48
0x18696	0x3A323100 ;_initBlock_36+52 : ?ICS_Label30_Caption at 0x18697
0x1869A	0x41203635 ;_initBlock_36+56
0x1869E	0x004D ;_initBlock_36+60
; end of _initBlock_36
;,0 :: _initBlock_37 [12]
; Containing: ?ICS_Label73_Caption [5]
;             ?ICS_Label2_Caption [2]
;             ?ICS_Label5_Caption [5]
0x186A0	0x656E6F44 ;_initBlock_37+0 : ?ICS_Label73_Caption at 0x186A0
0x186A4	0x44003A00 ;_initBlock_37+4 : ?ICS_Label2_Caption at 0x186A5 : ?ICS_Label5_Caption at 0x186A7
0x186A8	0x00656E6F ;_initBlock_37+8
; end of _initBlock_37
;,0 :: _initBlock_38 [88]
; Containing: ?ICS_Label6_Caption [51]
;             ?ICS_Label1_Caption [20]
;             ?ICS_Label3_Caption [4]
;             ?ICS_Label4_Caption [4]
;             ?ICS_Label7_Caption [4]
;             ?ICS_Label32_Caption [5]
0x186AC	0x00000020 ;_initBlock_38+0 : ?ICS_Label6_Caption at 0x186AC
0x186B0	0x00000000 ;_initBlock_38+4
0x186B4	0x00000000 ;_initBlock_38+8
0x186B8	0x00000000 ;_initBlock_38+12
0x186BC	0x00000000 ;_initBlock_38+16
0x186C0	0x00000000 ;_initBlock_38+20
0x186C4	0x00000000 ;_initBlock_38+24
0x186C8	0x00000000 ;_initBlock_38+28
0x186CC	0x00000000 ;_initBlock_38+32
0x186D0	0x00000000 ;_initBlock_38+36
0x186D4	0x00000000 ;_initBlock_38+40
0x186D8	0x00000000 ;_initBlock_38+44
0x186DC	0x41000000 ;_initBlock_38+48 : ?ICS_Label1_Caption at 0x186DF
0x186E0	0x6C656363 ;_initBlock_38+52
0x186E4	0x6D6F7265 ;_initBlock_38+56
0x186E8	0x72657465 ;_initBlock_38+60
0x186EC	0x61724720 ;_initBlock_38+64
0x186F0	0x58006870 ;_initBlock_38+68 : ?ICS_Label3_Caption at 0x186F3
0x186F4	0x5900203A ;_initBlock_38+72 : ?ICS_Label4_Caption at 0x186F7
0x186F8	0x5A00203A ;_initBlock_38+76 : ?ICS_Label7_Caption at 0x186FB
0x186FC	0x4400203A ;_initBlock_38+80 : ?ICS_Label32_Caption at 0x186FF
0x18700	0x00656E6F ;_initBlock_38+84
; end of _initBlock_38
;Ducati_logger_driver.c,0 :: ?ICS_Label53_Caption [10]
0x18704	0x6974614C ;?ICS_Label53_Caption+0
0x18708	0x65647574 ;?ICS_Label53_Caption+4
0x1870C	0x003A ;?ICS_Label53_Caption+8
; end of ?ICS_Label53_Caption
;,0 :: _initBlock_40 [10]
; Containing: ?ICS_Label54_Caption [5]
;             ?ICS_Label55_Caption [5]
0x1870E	0x30303030 ;_initBlock_40+0 : ?ICS_Label54_Caption at 0x1870E
0x18712	0x30303000 ;_initBlock_40+4 : ?ICS_Label55_Caption at 0x18713
0x18716	0x0030 ;_initBlock_40+8
; end of _initBlock_40
;Ducati_logger_driver.c,0 :: ?ICS_Label56_Caption [2]
0x18718	0x002E ;?ICS_Label56_Caption+0
; end of ?ICS_Label56_Caption
;,0 :: _initBlock_42 [16]
; Containing: ?ICS_Label57_Caption [11]
;             ?ICS_Label58_Caption [5]
0x1871A	0x676E6F4C ;_initBlock_42+0 : ?ICS_Label57_Caption at 0x1871A
0x1871E	0x64757469 ;_initBlock_42+4
0x18722	0x30003A65 ;_initBlock_42+8 : ?ICS_Label58_Caption at 0x18725
0x18726	0x00303030 ;_initBlock_42+12
; end of _initBlock_42
;,0 :: _initBlock_43 [14]
; Containing: ?ICS_Label59_Caption [5]
;             ?ICS_Label60_Caption [2]
;             ?ICS_Label61_Caption [7]
0x1872A	0x30303030 ;_initBlock_43+0 : ?ICS_Label59_Caption at 0x1872A
0x1872E	0x53002E00 ;_initBlock_43+4 : ?ICS_Label60_Caption at 0x1872F : ?ICS_Label61_Caption at 0x18731
0x18732	0x64656570 ;_initBlock_43+8
0x18736	0x003A ;_initBlock_43+12
; end of _initBlock_43
;,0 :: _initBlock_44 [10]
; Containing: ?ICS_Label62_Caption [5]
;             ?ICS_Label63_Caption [5]
0x18738	0x30303030 ;_initBlock_44+0 : ?ICS_Label62_Caption at 0x18738
0x1873C	0x30303000 ;_initBlock_44+4 : ?ICS_Label63_Caption at 0x1873D
0x18740	0x0030 ;_initBlock_44+8
; end of _initBlock_44
;Ducati_logger_driver.c,0 :: ?ICS_Label64_Caption [2]
0x18742	0x002E ;?ICS_Label64_Caption+0
; end of ?ICS_Label64_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label65_Caption [8]
0x18744	0x67696548 ;?ICS_Label65_Caption+0
0x18748	0x003A7468 ;?ICS_Label65_Caption+4
; end of ?ICS_Label65_Caption
;,0 :: _initBlock_47 [10]
; Containing: ?ICS_Label66_Caption [5]
;             ?ICS_Label67_Caption [5]
0x1874C	0x30303030 ;_initBlock_47+0 : ?ICS_Label66_Caption at 0x1874C
0x18750	0x30303000 ;_initBlock_47+4 : ?ICS_Label67_Caption at 0x18751
0x18754	0x0030 ;_initBlock_47+8
; end of _initBlock_47
;Ducati_logger_driver.c,0 :: ?ICS_Label68_Caption [2]
0x18756	0x002E ;?ICS_Label68_Caption+0
; end of ?ICS_Label68_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label69_Caption [6]
0x18758	0x656D6954 ;?ICS_Label69_Caption+0
0x1875C	0x003A ;?ICS_Label69_Caption+4
; end of ?ICS_Label69_Caption
;,0 :: _initBlock_50 [10]
; Containing: ?ICS_Label70_Caption [5]
;             ?ICS_Label71_Caption [5]
0x1875E	0x30303030 ;_initBlock_50+0 : ?ICS_Label70_Caption at 0x1875E
0x18762	0x30303000 ;_initBlock_50+4 : ?ICS_Label71_Caption at 0x18763
0x18766	0x0030 ;_initBlock_50+8
; end of _initBlock_50
;Ducati_logger_driver.c,0 :: ?ICS_Label72_Caption [2]
0x18768	0x002E ;?ICS_Label72_Caption+0
; end of ?ICS_Label72_Caption
;,0 :: _initBlock_52 [42]
; Containing: ?ICS_Label8_Caption [11]
;             ?ICS_Label9_Caption [4]
;             ?ICS_Label31_Caption [4]
;             ?ICS_Label33_Caption [4]
;             ?ICS_Label34_Caption [19]
0x1876A	0x6F727947 ;_initBlock_52+0 : ?ICS_Label8_Caption at 0x1876A
0x1876E	0x61724720 ;_initBlock_52+4
0x18772	0x58006870 ;_initBlock_52+8 : ?ICS_Label9_Caption at 0x18775
0x18776	0x5900203A ;_initBlock_52+12 : ?ICS_Label31_Caption at 0x18779
0x1877A	0x5A00203A ;_initBlock_52+16 : ?ICS_Label33_Caption at 0x1877D
0x1877E	0x4D00203A ;_initBlock_52+20 : ?ICS_Label34_Caption at 0x18781
0x18782	0x656E6761 ;_initBlock_52+24
0x18786	0x656D6F74 ;_initBlock_52+28
0x1878A	0x20726574 ;_initBlock_52+32
0x1878E	0x70617247 ;_initBlock_52+36
0x18792	0x0068 ;_initBlock_52+40
; end of _initBlock_52
;Ducati_logger_driver.c,0 :: ?ICS_Label35_Caption [4]
0x18794	0x00203A58 ;?ICS_Label35_Caption+0
; end of ?ICS_Label35_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label36_Caption [4]
0x18798	0x00203A59 ;?ICS_Label36_Caption+0
; end of ?ICS_Label36_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label37_Caption [4]
0x1879C	0x00203A5A ;?ICS_Label37_Caption+0
; end of ?ICS_Label37_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label38_Caption [22]
0x187A0	0x73657250 ;?ICS_Label38_Caption+0
0x187A4	0x65727573 ;?ICS_Label38_Caption+4
0x187A8	0x6E655320 ;?ICS_Label38_Caption+8
0x187AC	0x20726F73 ;?ICS_Label38_Caption+12
0x187B0	0x70617247 ;?ICS_Label38_Caption+16
0x187B4	0x0068 ;?ICS_Label38_Caption+20
; end of ?ICS_Label38_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label39_Caption [4]
0x187B6	0x00203A58 ;?ICS_Label39_Caption+0
; end of ?ICS_Label39_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label40_Caption [4]
0x187BA	0x00203A59 ;?ICS_Label40_Caption+0
; end of ?ICS_Label40_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label41_Caption [4]
0x187BE	0x00203A5A ;?ICS_Label41_Caption+0
; end of ?ICS_Label41_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label42_Caption [22]
0x187C2	0x696D7548 ;?ICS_Label42_Caption+0
0x187C6	0x79746964 ;?ICS_Label42_Caption+4
0x187CA	0x6E655320 ;?ICS_Label42_Caption+8
0x187CE	0x20726F73 ;?ICS_Label42_Caption+12
0x187D2	0x70617247 ;?ICS_Label42_Caption+16
0x187D6	0x0068 ;?ICS_Label42_Caption+20
; end of ?ICS_Label42_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label43_Caption [4]
0x187D8	0x00203A58 ;?ICS_Label43_Caption+0
; end of ?ICS_Label43_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label44_Caption [4]
0x187DC	0x00203A59 ;?ICS_Label44_Caption+0
; end of ?ICS_Label44_Caption
;Ducati_logger_driver.c,0 :: ?ICS_Label45_Caption [4]
0x187E0	0x00203A5A ;?ICS_Label45_Caption+0
; end of ?ICS_Label45_Caption
;,0 :: _initBlock_64 [2]
; Containing: ?ICS_Display_Bat_Stat [1]
;             ?ICS_DLPF_FS [1]
0x187E4	0x1601 ;_initBlock_64+0 : ?ICS_Display_Bat_Stat at 0x187E4 : ?ICS_DLPF_FS at 0x187E5
; end of _initBlock_64
;HMC5883L_main.c,0 :: ?ICS_magnetreadings [6]
0x187E6	0x00000000 ;?ICS_magnetreadings+0
0x187EA	0x0000 ;?ICS_magnetreadings+4
; end of ?ICS_magnetreadings
;HMC5883L_main.c,0 :: ?ICS__disp_magnet_scroll [2]
0x187EC	0x0029 ;?ICS__disp_magnet_scroll+0
; end of ?ICS__disp_magnet_scroll
;HMC5883L_main.c,0 :: ?ICS_Old_Magnet_vals [6]
0x187EE	0x00000000 ;?ICS_Old_Magnet_vals+0
0x187F2	0x0000 ;?ICS_Old_Magnet_vals+4
; end of ?ICS_Old_Magnet_vals
;,0 :: _initBlock_68 [14]
; Containing: ?ICS?lstr1_Init_routines [13]
;             ?ICS_DLPF_FS_SEL_0 [1]
0x187F4	0x5F747845 ;_initBlock_68+0 : ?ICS?lstr1_Init_routines at 0x187F4
0x187F8	0x6F736572 ;_initBlock_68+4
0x187FC	0x5345522E ;_initBlock_68+8
0x18800	0x0800 ;_initBlock_68+12 : ?ICS_DLPF_FS_SEL_0 at 0x18801
; end of _initBlock_68
;,0 :: _initBlock_69 [2]
; Containing: ?ICS_DLPF_FS_SEL_1 [1]
;             ?ICS_DLPF_CFG_0 [1]
0x18802	0x0110 ;_initBlock_69+0 : ?ICS_DLPF_FS_SEL_1 at 0x18802 : ?ICS_DLPF_CFG_0 at 0x18803
; end of _initBlock_69
;,0 :: _initBlock_70 [2]
; Containing: ?ICS_SMPLRT_DIV [1]
;             ?ICS_GYRO_XOUT_H [1]
0x18804	0x1D15 ;_initBlock_70+0 : ?ICS_SMPLRT_DIV at 0x18804 : ?ICS_GYRO_XOUT_H at 0x18805
; end of _initBlock_70
;ITG3200_main.c,0 :: ?ICS_gyroreadings [6]
0x18806	0x00000000 ;?ICS_gyroreadings+0
0x1880A	0x0000 ;?ICS_gyroreadings+4
; end of ?ICS_gyroreadings
;ITG3200_main.c,0 :: ?ICS_Old_Gyro_vals [6]
0x1880C	0x00000000 ;?ICS_Old_Gyro_vals+0
0x18810	0x0000 ;?ICS_Old_Gyro_vals+4
; end of ?ICS_Old_Gyro_vals
;ITG3200_main.c,0 :: ?ICS__disp_gyro_scroll [2]
0x18812	0x0029 ;?ICS__disp_gyro_scroll+0
; end of ?ICS__disp_gyro_scroll
;RTCC_main.c,0 :: ?ICS_OldMyTime [8]
0x18814	0x00000000 ;?ICS_OldMyTime+0
0x18818	0x00000000 ;?ICS_OldMyTime+4
; end of ?ICS_OldMyTime
;,0 :: _initBlock_75 [6]
; Containing: ?ICS?lstr1_RTCC_main [3]
;             ?ICS?lstr2_RTCC_main [3]
0x1881C	0x50004D41 ;_initBlock_75+0 : ?ICS?lstr1_RTCC_main at 0x1881C : ?ICS?lstr2_RTCC_main at 0x1881F
0x18820	0x004D ;_initBlock_75+4
; end of _initBlock_75
;,0 :: _initBlock_76 [6]
; Containing: ?ICS?lstr1___Lib_MmcFat16 [3]
;             ?ICS?lstr2___Lib_MmcFat16 [2]
;             ?ICS__Lib_Mmc_SDIO_cardType [1]
0x18822	0x2E002E2E ;_initBlock_76+0 : ?ICS?lstr1___Lib_MmcFat16 at 0x18822 : ?ICS?lstr2___Lib_MmcFat16 at 0x18825
0x18826	0x0000 ;_initBlock_76+4 : ?ICS__Lib_Mmc_SDIO_cardType at 0x18827
; end of _initBlock_76
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_Mmc_Init_Ptr [4]
0x18828	0x00005D11 ;?ICS__Lib_Mmc_SDIO_Mmc_Init_Ptr+0
; end of ?ICS__Lib_Mmc_SDIO_Mmc_Init_Ptr
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_Mmc_Read_Sector_Ptr [4]
0x1882C	0x00001EA1 ;?ICS__Lib_Mmc_SDIO_Mmc_Read_Sector_Ptr+0
; end of ?ICS__Lib_Mmc_SDIO_Mmc_Read_Sector_Ptr
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_Mmc_Write_Sector_Ptr [4]
0x18830	0x00002149 ;?ICS__Lib_Mmc_SDIO_Mmc_Write_Sector_Ptr+0
; end of ?ICS__Lib_Mmc_SDIO_Mmc_Write_Sector_Ptr
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_Mmc_Read_Cid_Ptr [4]
0x18834	0x00001B5D ;?ICS__Lib_Mmc_SDIO_Mmc_Read_Cid_Ptr+0
; end of ?ICS__Lib_Mmc_SDIO_Mmc_Read_Cid_Ptr
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_Mmc_Read_Csd_Ptr [4]
0x18838	0x00001BD9 ;?ICS__Lib_Mmc_SDIO_Mmc_Read_Csd_Ptr+0
; end of ?ICS__Lib_Mmc_SDIO_Mmc_Read_Csd_Ptr
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Read_Start_Ptr [4]
0x1883C	0x00000D21 ;?ICS__Lib_Mmc_SDIO_Mmc_Multi_Read_Start_Ptr+0
; end of ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Read_Start_Ptr
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_Ptr [4]
0x18840	0x0000197D ;?ICS__Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_Ptr+0
; end of ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_Ptr
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_Ptr [4]
0x18844	0x00005E49 ;?ICS__Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_Ptr+0
; end of ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_Ptr
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Write_Start_Ptr [4]
0x18848	0x0000192D ;?ICS__Lib_Mmc_SDIO_Mmc_Multi_Write_Start_Ptr+0
; end of ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Write_Start_Ptr
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_Ptr [4]
0x1884C	0x00001D9D ;?ICS__Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_Ptr+0
; end of ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_Ptr
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_Ptr [4]
0x18850	0x00005E19 ;?ICS__Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_Ptr+0
; end of ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_Ptr
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_CardTypeSdio [4]
0x18854	0x00000000 ;?ICS__Lib_Mmc_SDIO_CardTypeSdio+0
; end of ?ICS__Lib_Mmc_SDIO_CardTypeSdio
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_TotalNumberOfBytes [4]
0x18858	0x00000000 ;?ICS__Lib_Mmc_SDIO_TotalNumberOfBytes+0
; end of ?ICS__Lib_Mmc_SDIO_TotalNumberOfBytes
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_RCA [4]
0x1885C	0x00000000 ;?ICS__Lib_Mmc_SDIO_RCA+0
; end of ?ICS__Lib_Mmc_SDIO_RCA
;,0 :: _initBlock_91 [18]
; Containing: ?ICS__Lib_STMPE610_pressed [1]
;             ?ICS__Lib_System_4XX_APBAHBPrescTable [16]
;             ?ICS__Lib_TFT___MM_plus [1]
0x18860	0x00000000 ;_initBlock_91+0 : ?ICS__Lib_STMPE610_pressed at 0x18860 : ?ICS__Lib_System_4XX_APBAHBPrescTable at 0x18861
0x18864	0x03020100 ;_initBlock_91+4
0x18868	0x03020104 ;_initBlock_91+8
0x1886C	0x08070604 ;_initBlock_91+12
0x18870	0x0009 ;_initBlock_91+16 : ?ICS__Lib_TFT___MM_plus at 0x18871
; end of _initBlock_91
;__Lib_TFT.c,0 :: ?ICS__Lib_TFT_Ptr_Set [2]
0x18872	0x0000 ;?ICS__Lib_TFT_Ptr_Set+0
; end of ?ICS__Lib_TFT_Ptr_Set
;,0 :: _initBlock_93 [2]
; Containing: ?ICS__Lib_TFT___no_acceleration [1]
;             ?ICS__Lib_TFT___SSD1963_controller [1]
0x18874	0x0000 ;_initBlock_93+0 : ?ICS__Lib_TFT___no_acceleration at 0x18874 : ?ICS__Lib_TFT___SSD1963_controller at 0x18875
; end of _initBlock_93
;,0 :: _initBlock_94 [2]
; Containing: ?ICS__Lib_TFT_FontInitialized [1]
;             ?ICS__Lib_TFT_Defs_TFT_Rotated_180 [1]
0x18876	0x0000 ;_initBlock_94+0 : ?ICS__Lib_TFT_FontInitialized at 0x18876 : ?ICS__Lib_TFT_Defs_TFT_Rotated_180 at 0x18877
; end of _initBlock_94
;,0 :: _initBlock_95 [2]
; Containing: ?ICS__Lib_TFT_Defs_TFT_Disp_Rotation [1]
;             ?ICSSDIO_Init_firstCall_mark_L0 [1]
0x18878	0x0000 ;_initBlock_95+0 : ?ICS__Lib_TFT_Defs_TFT_Disp_Rotation at 0x18878 : ?ICSSDIO_Init_firstCall_mark_L0 at 0x18879
; end of _initBlock_95
;__Lib_TFT_Defs.c,0 :: ?ICS__Lib_TFT_Defs___controller [2]
0x1887A	0x00FF ;?ICS__Lib_TFT_Defs___controller+0
; end of ?ICS__Lib_TFT_Defs___controller
;__Lib_USB_32F4xx.c,0 :: ?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb [44]
0x1887C	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+0
0x18880	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+4
0x18884	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+8
0x18888	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+12
0x1888C	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+16
0x18890	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+20
0x18894	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+24
0x18898	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+28
0x1889C	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+32
0x188A0	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+36
0x188A4	0xFFFFFFFF ;?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb+40
; end of ?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb
;RTCC_main.c,113 :: _filter [192]
0x188A8	0xC618BDD7 ;_filter+0
0x188AC	0xC618C618 ;_filter+4
0x188B0	0xCE59CE59 ;_filter+8
0x188B4	0xCE59CE59 ;_filter+12
0x188B8	0xCE59CE59 ;_filter+16
0x188BC	0xCE59CE59 ;_filter+20
0x188C0	0xE71CE71C ;_filter+24
0x188C4	0xEF5DE71C ;_filter+28
0x188C8	0xEF5DEF5D ;_filter+32
0x188CC	0xF79EF79E ;_filter+36
0x188D0	0xFFDFF79E ;_filter+40
0x188D4	0xFFDFFFDF ;_filter+44
0x188D8	0xFFFFFFFF ;_filter+48
0x188DC	0xFFFFFFFF ;_filter+52
0x188E0	0xFFFFFFFF ;_filter+56
0x188E4	0xFFFFFFFF ;_filter+60
0x188E8	0xFFFFFFFF ;_filter+64
0x188EC	0xFFFFFFFF ;_filter+68
0x188F0	0xFFFFFFFF ;_filter+72
0x188F4	0xFFFFFFFF ;_filter+76
0x188F8	0xFFFFFFFF ;_filter+80
0x188FC	0xFFFFFFFF ;_filter+84
0x18900	0xFFFFFFFF ;_filter+88
0x18904	0xFFFFFFFF ;_filter+92
0x18908	0xFFFFFFFF ;_filter+96
0x1890C	0xFFFFFFFF ;_filter+100
0x18910	0xFFFFFFFF ;_filter+104
0x18914	0xFFFFFFFF ;_filter+108
0x18918	0xFFFFFFFF ;_filter+112
0x1891C	0xFFFFFFFF ;_filter+116
0x18920	0xFFFFFFFF ;_filter+120
0x18924	0xFFFFFFFF ;_filter+124
0x18928	0xFFFFFFFF ;_filter+128
0x1892C	0xFFFFFFFF ;_filter+132
0x18930	0xFFFFFFFF ;_filter+136
0x18934	0xFFFFFFFF ;_filter+140
0x18938	0xFFFFFFFF ;_filter+144
0x1893C	0xFFFFFFFF ;_filter+148
0x18940	0xFFFFFFFF ;_filter+152
0x18944	0xFFFFFFFF ;_filter+156
0x18948	0xFFFFFFFF ;_filter+160
0x1894C	0xFFFFFFFF ;_filter+164
0x18950	0xFFFFFFFF ;_filter+168
0x18954	0xFFFFFFFF ;_filter+172
0x18958	0xFFFFFFFF ;_filter+176
0x1895C	0xFFFFFFFF ;_filter+180
0x18960	0xFFFFFFFF ;_filter+184
0x18964	0xFFFFFFFF ;_filter+188
; end of _filter
;RTCC_main.c,108 :: _table [192]
0x18968	0x00090009 ;_table+0
0x1896C	0x00080008 ;_table+4
0x18970	0x00070007 ;_table+8
0x18974	0x00060006 ;_table+12
0x18978	0x00050005 ;_table+16
0x1897C	0x00040005 ;_table+20
0x18980	0x00040004 ;_table+24
0x18984	0x00030004 ;_table+28
0x18988	0x00030003 ;_table+32
0x1898C	0x00020003 ;_table+36
0x18990	0x00020002 ;_table+40
0x18994	0x00010002 ;_table+44
0x18998	0x00010001 ;_table+48
0x1899C	0x00010001 ;_table+52
0x189A0	0x00000000 ;_table+56
0x189A4	0x00000000 ;_table+60
0x189A8	0x00000000 ;_table+64
0x189AC	0x00000000 ;_table+68
0x189B0	0x00000000 ;_table+72
0x189B4	0x00000000 ;_table+76
0x189B8	0x00000000 ;_table+80
0x189BC	0x00000000 ;_table+84
0x189C0	0x00000000 ;_table+88
0x189C4	0x00000000 ;_table+92
0x189C8	0x00000000 ;_table+96
0x189CC	0x00000000 ;_table+100
0x189D0	0x00000000 ;_table+104
0x189D4	0x00000000 ;_table+108
0x189D8	0x00000000 ;_table+112
0x189DC	0x00000000 ;_table+116
0x189E0	0x00000000 ;_table+120
0x189E4	0x00000000 ;_table+124
0x189E8	0x00000000 ;_table+128
0x189EC	0x00000000 ;_table+132
0x189F0	0x00000000 ;_table+136
0x189F4	0x00000000 ;_table+140
0x189F8	0x00000000 ;_table+144
0x189FC	0x00000000 ;_table+148
0x18A00	0x00000000 ;_table+152
0x18A04	0x00000000 ;_table+156
0x18A08	0x00000000 ;_table+160
0x18A0C	0x00000000 ;_table+164
0x18A10	0x00000000 ;_table+168
0x18A14	0x00000000 ;_table+172
0x18A18	0x00000000 ;_table+176
0x18A1C	0x00000000 ;_table+180
0x18A20	0x00000000 ;_table+184
0x18A24	0x00000000 ;_table+188
; end of _table
;__Lib_GPIO_32F4xx_Defs.c,717 :: __GPIO_MODULE_SDIO_D0_D3 [108]
0x18A28	0x00000C28 ;__GPIO_MODULE_SDIO_D0_D3+0
0x18A2C	0x00000C29 ;__GPIO_MODULE_SDIO_D0_D3+4
0x18A30	0x00000C2A ;__GPIO_MODULE_SDIO_D0_D3+8
0x18A34	0x00000C2B ;__GPIO_MODULE_SDIO_D0_D3+12
0x18A38	0x00000C2C ;__GPIO_MODULE_SDIO_D0_D3+16
0x18A3C	0x00000C32 ;__GPIO_MODULE_SDIO_D0_D3+20
0x18A40	0xFFFFFFFF ;__GPIO_MODULE_SDIO_D0_D3+24
0x18A44	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+28
0x18A48	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+32
0x18A4C	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+36
0x18A50	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+40
0x18A54	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+44
0x18A58	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+48
0x18A5C	0x00001018 ;__GPIO_MODULE_SDIO_D0_D3+52
0x18A60	0x00001018 ;__GPIO_MODULE_SDIO_D0_D3+56
0x18A64	0x00001018 ;__GPIO_MODULE_SDIO_D0_D3+60
0x18A68	0x00001018 ;__GPIO_MODULE_SDIO_D0_D3+64
0x18A6C	0x00001018 ;__GPIO_MODULE_SDIO_D0_D3+68
0x18A70	0x00001018 ;__GPIO_MODULE_SDIO_D0_D3+72
0x18A74	0xFFFFFFFF ;__GPIO_MODULE_SDIO_D0_D3+76
0x18A78	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+80
0x18A7C	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+84
0x18A80	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+88
0x18A84	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+92
0x18A88	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+96
0x18A8C	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+100
0x18A90	0x00000000 ;__GPIO_MODULE_SDIO_D0_D3+104
; end of __GPIO_MODULE_SDIO_D0_D3
;__Lib_GPIO_32F4xx_Defs.c,757 :: __GPIO_MODULE_I2C1_PB67 [108]
0x18A94	0x00000416 ;__GPIO_MODULE_I2C1_PB67+0
0x18A98	0x00000417 ;__GPIO_MODULE_I2C1_PB67+4
0x18A9C	0xFFFFFFFF ;__GPIO_MODULE_I2C1_PB67+8
0x18AA0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+12
0x18AA4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+16
0x18AA8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+20
0x18AAC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+24
0x18AB0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+28
0x18AB4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+32
0x18AB8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+36
0x18ABC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+40
0x18AC0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+44
0x18AC4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+48
0x18AC8	0x00001028 ;__GPIO_MODULE_I2C1_PB67+52
0x18ACC	0x00001028 ;__GPIO_MODULE_I2C1_PB67+56
0x18AD0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+60
0x18AD4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+64
0x18AD8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+68
0x18ADC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+72
0x18AE0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+76
0x18AE4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+80
0x18AE8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+84
0x18AEC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+88
0x18AF0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+92
0x18AF4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+96
0x18AF8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+100
0x18AFC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+104
; end of __GPIO_MODULE_I2C1_PB67
;__Lib_GPIO_32F4xx_Defs.c,773 :: __GPIO_MODULE_I2C2_PF01 [108]
0x18B00	0x00000451 ;__GPIO_MODULE_I2C2_PF01+0
0x18B04	0x00000450 ;__GPIO_MODULE_I2C2_PF01+4
0x18B08	0xFFFFFFFF ;__GPIO_MODULE_I2C2_PF01+8
0x18B0C	0x00000000 ;__GPIO_MODULE_I2C2_PF01+12
0x18B10	0x00000000 ;__GPIO_MODULE_I2C2_PF01+16
0x18B14	0x00000000 ;__GPIO_MODULE_I2C2_PF01+20
0x18B18	0x00000000 ;__GPIO_MODULE_I2C2_PF01+24
0x18B1C	0x00000000 ;__GPIO_MODULE_I2C2_PF01+28
0x18B20	0x00000000 ;__GPIO_MODULE_I2C2_PF01+32
0x18B24	0x00000000 ;__GPIO_MODULE_I2C2_PF01+36
0x18B28	0x00000000 ;__GPIO_MODULE_I2C2_PF01+40
0x18B2C	0x00000000 ;__GPIO_MODULE_I2C2_PF01+44
0x18B30	0x00000000 ;__GPIO_MODULE_I2C2_PF01+48
0x18B34	0x00001028 ;__GPIO_MODULE_I2C2_PF01+52
0x18B38	0x00001028 ;__GPIO_MODULE_I2C2_PF01+56
0x18B3C	0x00000000 ;__GPIO_MODULE_I2C2_PF01+60
0x18B40	0x00000000 ;__GPIO_MODULE_I2C2_PF01+64
0x18B44	0x00000000 ;__GPIO_MODULE_I2C2_PF01+68
0x18B48	0x00000000 ;__GPIO_MODULE_I2C2_PF01+72
0x18B4C	0x00000000 ;__GPIO_MODULE_I2C2_PF01+76
0x18B50	0x00000000 ;__GPIO_MODULE_I2C2_PF01+80
0x18B54	0x00000000 ;__GPIO_MODULE_I2C2_PF01+84
0x18B58	0x00000000 ;__GPIO_MODULE_I2C2_PF01+88
0x18B5C	0x00000000 ;__GPIO_MODULE_I2C2_PF01+92
0x18B60	0x00000000 ;__GPIO_MODULE_I2C2_PF01+96
0x18B64	0x00000000 ;__GPIO_MODULE_I2C2_PF01+100
0x18B68	0x00000000 ;__GPIO_MODULE_I2C2_PF01+104
; end of __GPIO_MODULE_I2C2_PF01
;Ducati_logger_driver.c,201 :: _Screen1_Images [104]
0x18B6C	0x20000464 ;_Screen1_Images+0
0x18B70	0x2000048C ;_Screen1_Images+4
0x18B74	0x200004B4 ;_Screen1_Images+8
0x18B78	0x200004DC ;_Screen1_Images+12
0x18B7C	0x20000504 ;_Screen1_Images+16
0x18B80	0x2000052C ;_Screen1_Images+20
0x18B84	0x20000554 ;_Screen1_Images+24
0x18B88	0x2000057C ;_Screen1_Images+28
0x18B8C	0x200005A4 ;_Screen1_Images+32
0x18B90	0x200005CC ;_Screen1_Images+36
0x18B94	0x200005F4 ;_Screen1_Images+40
0x18B98	0x2000061C ;_Screen1_Images+44
0x18B9C	0x20000644 ;_Screen1_Images+48
0x18BA0	0x2000066C ;_Screen1_Images+52
0x18BA4	0x20000694 ;_Screen1_Images+56
0x18BA8	0x200006BC ;_Screen1_Images+60
0x18BAC	0x200006E4 ;_Screen1_Images+64
0x18BB0	0x2000070C ;_Screen1_Images+68
0x18BB4	0x20000734 ;_Screen1_Images+72
0x18BB8	0x2000075C ;_Screen1_Images+76
0x18BBC	0x20000784 ;_Screen1_Images+80
0x18BC0	0x200007AC ;_Screen1_Images+84
0x18BC4	0x200007D4 ;_Screen1_Images+88
0x18BC8	0x200007FC ;_Screen1_Images+92
0x18BCC	0x20000824 ;_Screen1_Images+96
0x18BD0	0x2000084C ;_Screen1_Images+100
; end of _Screen1_Images
;Ducati_logger_driver.c,684 :: _Screen7_Labels [84]
0x18BD4	0x200016F8 ;_Screen7_Labels+0
0x18BD8	0x20001724 ;_Screen7_Labels+4
0x18BDC	0x20001750 ;_Screen7_Labels+8
0x18BE0	0x2000177C ;_Screen7_Labels+12
0x18BE4	0x200017A8 ;_Screen7_Labels+16
0x18BE8	0x200017D4 ;_Screen7_Labels+20
0x18BEC	0x20001800 ;_Screen7_Labels+24
0x18BF0	0x2000182C ;_Screen7_Labels+28
0x18BF4	0x20001858 ;_Screen7_Labels+32
0x18BF8	0x20001884 ;_Screen7_Labels+36
0x18BFC	0x200018B0 ;_Screen7_Labels+40
0x18C00	0x200018DC ;_Screen7_Labels+44
0x18C04	0x20001908 ;_Screen7_Labels+48
0x18C08	0x20001934 ;_Screen7_Labels+52
0x18C0C	0x20001960 ;_Screen7_Labels+56
0x18C10	0x2000198C ;_Screen7_Labels+60
0x18C14	0x200019B8 ;_Screen7_Labels+64
0x18C18	0x200019E4 ;_Screen7_Labels+68
0x18C1C	0x20001A10 ;_Screen7_Labels+72
0x18C20	0x20001A3C ;_Screen7_Labels+76
0x18C24	0x20001A68 ;_Screen7_Labels+80
; end of _Screen7_Labels
;Ducati_logger_driver.c,457 :: _Box1 [52]
0x18C28	0x200010CC ;_Box1+0
0x18C2C	0x00000000 ;_Box1+4
0x18C30	0x01E00000 ;_Box1+8
0x18C34	0x00010110 ;_Box1+12
0x18C38	0x01010000 ;_Box1+16
0x18C3C	0x00000101 ;_Box1+20
0x18C40	0x0000F800 ;_Box1+24
0x18C44	0x0000F800 ;_Box1+28
0x18C48	0x0000E71C ;_Box1+32
0x18C4C	0x00000000 ;_Box1+36
0x18C50	0x00000000 ;_Box1+40
0x18C54	0x00000000 ;_Box1+44
0x18C58	0x00000000 ;_Box1+48
; end of _Box1
;Ducati_logger_driver.c,342 :: _Image14 [40]
0x18C5C	0x20000C88 ;_Image14+0
0x18C60	0x00000000 ;_Image14+4
0x18C64	0x01E00000 ;_Image14+8
0x18C68	0x00000110 ;_Image14+12
0x18C6C	0x003998AE ;_Image14+16
0x18C70	0x01000101 ;_Image14+20
0x18C74	0x00000000 ;_Image14+24
0x18C78	0x00000000 ;_Image14+28
0x18C7C	0x00000000 ;_Image14+32
0x18C80	0x00000000 ;_Image14+36
; end of _Image14
;Ducati_logger_driver.c,232 :: _Image13 [40]
0x18C84	0x20000874 ;_Image13+0
0x18C88	0x00000000 ;_Image13+4
0x18C8C	0x01E00000 ;_Image13+8
0x18C90	0x00000110 ;_Image13+12
0x18C94	0x003514DC ;_Image13+16
0x18C98	0x01000101 ;_Image13+20
0x18C9C	0x00000000 ;_Image13+24
0x18CA0	0x00000000 ;_Image13+28
0x18CA4	0x00000000 ;_Image13+32
0x18CA8	0x00000000 ;_Image13+36
; end of _Image13
;Ducati_logger_driver.c,300 :: _Screen2_Labels [40]
0x18CAC	0x20000908 ;_Screen2_Labels+0
0x18CB0	0x20000934 ;_Screen2_Labels+4
0x18CB4	0x20000960 ;_Screen2_Labels+8
0x18CB8	0x2000098C ;_Screen2_Labels+12
0x18CBC	0x200009B8 ;_Screen2_Labels+16
0x18CC0	0x200009E4 ;_Screen2_Labels+20
0x18CC4	0x20000A10 ;_Screen2_Labels+24
0x18CC8	0x20000A3C ;_Screen2_Labels+28
0x18CCC	0x20000A68 ;_Screen2_Labels+32
0x18CD0	0x20000A94 ;_Screen2_Labels+36
; end of _Screen2_Labels
;Ducati_logger_driver.c,411 :: _Screen3_Labels [40]
0x18CD4	0x20000D1C ;_Screen3_Labels+0
0x18CD8	0x20000D48 ;_Screen3_Labels+4
0x18CDC	0x20000D74 ;_Screen3_Labels+8
0x18CE0	0x20000DA0 ;_Screen3_Labels+12
0x18CE4	0x20000DCC ;_Screen3_Labels+16
0x18CE8	0x20000DF8 ;_Screen3_Labels+20
0x18CEC	0x20000E24 ;_Screen3_Labels+24
0x18CF0	0x20000E50 ;_Screen3_Labels+28
0x18CF4	0x20000E7C ;_Screen3_Labels+32
0x18CF8	0x20000EA8 ;_Screen3_Labels+36
; end of _Screen3_Labels
;Ducati_logger_driver.c,424 :: _Screen3_Images [32]
0x18CFC	0x20000ED4 ;_Screen3_Images+0
0x18D00	0x20000EFC ;_Screen3_Images+4
0x18D04	0x20000F24 ;_Screen3_Images+8
0x18D08	0x20000F4C ;_Screen3_Images+12
0x18D0C	0x20000F74 ;_Screen3_Images+16
0x18D10	0x20000F9C ;_Screen3_Images+20
0x18D14	0x20000FC4 ;_Screen3_Images+24
0x18D18	0x20000FEC ;_Screen3_Images+28
; end of _Screen3_Images
;Ducati_logger_driver.c,313 :: _Screen2_Images [32]
0x18D1C	0x20000AC0 ;_Screen2_Images+0
0x18D20	0x20000AE8 ;_Screen2_Images+4
0x18D24	0x20000B10 ;_Screen2_Images+8
0x18D28	0x20000B38 ;_Screen2_Images+12
0x18D2C	0x20000B60 ;_Screen2_Images+16
0x18D30	0x20000B88 ;_Screen2_Images+20
0x18D34	0x20000BB0 ;_Screen2_Images+24
0x18D38	0x20000BD8 ;_Screen2_Images+28
; end of _Screen2_Images
;Ducati_logger_driver.c,512 :: _Screen4_Buttons_Round [28]
0x18D3C	0x2000111C ;_Screen4_Buttons_Round+0
0x18D40	0x20001160 ;_Screen4_Buttons_Round+4
0x18D44	0x200011A4 ;_Screen4_Buttons_Round+8
0x18D48	0x200011E8 ;_Screen4_Buttons_Round+12
0x18D4C	0x2000122C ;_Screen4_Buttons_Round+16
0x18D50	0x20001270 ;_Screen4_Buttons_Round+20
0x18D54	0x200012B4 ;_Screen4_Buttons_Round+24
; end of _Screen4_Buttons_Round
;Ducati_logger_driver.c,573 :: _Screen5_Boxes [28]
0x18D58	0x200014D0 ;_Screen5_Boxes+0
0x18D5C	0x20001504 ;_Screen5_Boxes+4
0x18D60	0x20001538 ;_Screen5_Boxes+8
0x18D64	0x2000156C ;_Screen5_Boxes+12
0x18D68	0x200015A0 ;_Screen5_Boxes+16
0x18D6C	0x200015D4 ;_Screen5_Boxes+20
0x18D70	0x20001608 ;_Screen5_Boxes+24
; end of _Screen5_Boxes
;Ducati_logger_driver.c,767 :: _Screen9_Labels [16]
0x18D74	0x20001C64 ;_Screen9_Labels+0
0x18D78	0x20001C90 ;_Screen9_Labels+4
0x18D7C	0x20001CBC ;_Screen9_Labels+8
0x18D80	0x20001CE8 ;_Screen9_Labels+12
; end of _Screen9_Labels
;Ducati_logger_driver.c,800 :: _Screen10_Labels [16]
0x18D84	0x20001DA4 ;_Screen10_Labels+0
0x18D88	0x20001DD0 ;_Screen10_Labels+4
0x18D8C	0x20001DFC ;_Screen10_Labels+8
0x18D90	0x20001E28 ;_Screen10_Labels+12
; end of _Screen10_Labels
;Ducati_logger_driver.c,600 :: _Screen6_Labels [16]
0x18D94	0x2000163C ;_Screen6_Labels+0
0x18D98	0x20000388 ;_Screen6_Labels+4
0x18D9C	0x200003B4 ;_Screen6_Labels+8
0x18DA0	0x200003E0 ;_Screen6_Labels+12
; end of _Screen6_Labels
;Ducati_logger_driver.c,734 :: _Screen8_Labels [16]
0x18DA4	0x20001B24 ;_Screen8_Labels+0
0x18DA8	0x20001B50 ;_Screen8_Labels+4
0x18DAC	0x20001B7C ;_Screen8_Labels+8
0x18DB0	0x20001BA8 ;_Screen8_Labels+12
; end of _Screen8_Labels
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_FindSCR_index_L0 [4]
0x18DB4	0x00000000 ;?ICS__Lib_Mmc_SDIO_FindSCR_index_L0+0
; end of ?ICS__Lib_Mmc_SDIO_FindSCR_index_L0
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_FindSCR_errorstatus_L0 [1]
0x18DB8	0x00 ;?ICS__Lib_Mmc_SDIO_FindSCR_errorstatus_L0+0
; end of ?ICS__Lib_Mmc_SDIO_FindSCR_errorstatus_L0
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_FindSCR_tempscr_L0 [8]
0x18DBC	0x00000000 ;?ICS__Lib_Mmc_SDIO_FindSCR_tempscr_L0+0
0x18DC0	0x00000000 ;?ICS__Lib_Mmc_SDIO_FindSCR_tempscr_L0+4
; end of ?ICS__Lib_Mmc_SDIO_FindSCR_tempscr_L0
;Ducati_logger_driver.c,833 :: _Screen11_Labels [16]
0x18DC4	0x20001EE4 ;_Screen11_Labels+0
0x18DC8	0x20001F10 ;_Screen11_Labels+4
0x18DCC	0x20001F3C ;_Screen11_Labels+8
0x18DD0	0x20001F68 ;_Screen11_Labels+12
; end of _Screen11_Labels
;Ducati_logger_driver.c,561 :: _Screen5_Labels [12]
0x18DD4	0x200013D4 ;_Screen5_Labels+0
0x18DD8	0x20001400 ;_Screen5_Labels+4
0x18DDC	0x2000142C ;_Screen5_Labels+8
; end of _Screen5_Labels
;Ducati_logger_driver.c,567 :: _Screen5_Images [12]
0x18DE0	0x20001458 ;_Screen5_Images+0
0x18DE4	0x20001480 ;_Screen5_Images+4
0x18DE8	0x200014A8 ;_Screen5_Images+8
; end of _Screen5_Images
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_SDEnWideBus_errorstatus_L0 [1]
0x18DEC	0x00 ;?ICS__Lib_Mmc_SDIO_SDEnWideBus_errorstatus_L0+0
; end of ?ICS__Lib_Mmc_SDIO_SDEnWideBus_errorstatus_L0
;__Lib_Mmc_SDIO.c,0 :: ?ICS__Lib_Mmc_SDIO_SDEnWideBus_scr_L0 [8]
0x18DF0	0x00000000 ;?ICS__Lib_Mmc_SDIO_SDEnWideBus_scr_L0+0
0x18DF4	0x00000000 ;?ICS__Lib_Mmc_SDIO_SDEnWideBus_scr_L0+4
; end of ?ICS__Lib_Mmc_SDIO_SDEnWideBus_scr_L0
;Ducati_logger_driver.c,611 :: _Screen6_Boxes [8]
0x18DF8	0x20001690 ;_Screen6_Boxes+0
0x18DFC	0x200016C4 ;_Screen6_Boxes+4
; end of _Screen6_Boxes
;Ducati_logger_driver.c,712 :: _Screen7_Boxes [8]
0x18E00	0x20001ABC ;_Screen7_Boxes+0
0x18E04	0x20001AF0 ;_Screen7_Boxes+4
; end of _Screen7_Boxes
;Ducati_logger_driver.c,811 :: _Screen10_Boxes [8]
0x18E08	0x20001E7C ;_Screen10_Boxes+0
0x18E0C	0x20001EB0 ;_Screen10_Boxes+4
; end of _Screen10_Boxes
;Ducati_logger_driver.c,844 :: _Screen11_Boxes [8]
0x18E10	0x20001FBC ;_Screen11_Boxes+0
0x18E14	0x20001FF0 ;_Screen11_Boxes+4
; end of _Screen11_Boxes
;Ducati_logger_driver.c,522 :: _Screen4_Labels [8]
0x18E18	0x200012F8 ;_Screen4_Labels+0
0x18E1C	0x20001324 ;_Screen4_Labels+4
; end of _Screen4_Labels
;Ducati_logger_driver.c,745 :: _Screen8_Boxes [8]
0x18E20	0x20001BFC ;_Screen8_Boxes+0
0x18E24	0x20001C30 ;_Screen8_Boxes+4
; end of _Screen8_Boxes
;Ducati_logger_driver.c,778 :: _Screen9_Boxes [8]
0x18E28	0x20001D3C ;_Screen9_Boxes+0
0x18E2C	0x20001D70 ;_Screen9_Boxes+4
; end of _Screen9_Boxes
;Ducati_logger_driver.c,527 :: _Screen4_Images [8]
0x18E30	0x20001350 ;_Screen4_Images+0
0x18E34	0x20001378 ;_Screen4_Images+4
; end of _Screen4_Images
;Ducati_logger_driver.c,332 :: _Screen2_Boxes [4]
0x18E38	0x20000C40 ;_Screen2_Boxes+0
; end of _Screen2_Boxes
;Ducati_logger_driver.c,296 :: _Screen2_Buttons_Round [4]
0x18E3C	0x200008C4 ;_Screen2_Buttons_Round+0
; end of _Screen2_Buttons_Round
;Ducati_logger_driver.c,324 :: _Screen2_CImages [4]
0x18E40	0x00018C84 ;_Screen2_CImages+0
; end of _Screen2_CImages
;Ducati_logger_driver.c,328 :: _Screen2_CircleButtons [4]
0x18E44	0x20000C00 ;_Screen2_CircleButtons+0
; end of _Screen2_CircleButtons
;Ducati_logger_driver.c,439 :: _Screen3_Circles [4]
0x18E48	0x20001014 ;_Screen3_Circles+0
; end of _Screen3_Circles
;Ducati_logger_driver.c,536 :: _Screen4_CBoxes [4]
0x18E4C	0x00018C28 ;_Screen4_CBoxes+0
; end of _Screen4_CBoxes
;Ducati_logger_driver.c,607 :: _Screen6_Images [4]
0x18E50	0x20001668 ;_Screen6_Images+0
; end of _Screen6_Images
;Ducati_logger_driver.c,708 :: _Screen7_Images [4]
0x18E54	0x20001A94 ;_Screen7_Images+0
; end of _Screen7_Images
;Ducati_logger_driver.c,532 :: _Screen4_Boxes [4]
0x18E58	0x200013A0 ;_Screen4_Boxes+0
; end of _Screen4_Boxes
;Ducati_logger_driver.c,443 :: _Screen3_CircleButtons [4]
0x18E5C	0x20001044 ;_Screen3_CircleButtons+0
; end of _Screen3_CircleButtons
;Ducati_logger_driver.c,447 :: _Screen3_Boxes [4]
0x18E60	0x20001084 ;_Screen3_Boxes+0
; end of _Screen3_Boxes
;Ducati_logger_driver.c,451 :: _Screen3_Lines [4]
0x18E64	0x200010B8 ;_Screen3_Lines+0
; end of _Screen3_Lines
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188      [30]    _FAT32_Dev_Multi_Read_Stop
0x01A8      [30]    _FAT32_Dev_Read_Sector
0x01C8      [76]    __Lib_FAT32_STM32_readMStop
0x0214      [20]    ___CC2DW
0x0228      [22]    _FAT32_Dev_Multi_Read_Sector
0x0240      [16]    _SDIO_ReadData
0x0250     [152]    __Lib_FAT32_STM32_readSector
0x02E8      [84]    _SDIO_DataConfig
0x033C      [30]    _FAT32_Dev_Multi_Read_Start
0x0360      [24]    _Delay_1us
0x0378     [128]    __Lib_FAT32_STM32_FAT_getEntry
0x03F8      [34]    __Lib_SPI_123_SPIx_Read
0x041C      [16]    _SDIO_GetCommandResponse
0x042C     [136]    __Lib_ADC_123_32F20x_24ch_ADCx_Get_Sample
0x04B4      [24]    _I2Cx_Is_Idle
0x04CC      [16]    _SDIO_ClearFlag
0x04DC      [32]    __Lib_Mmc_SDIO_Mmc_Wait_Data_Ready_SPI
0x04FC      [24]    _SDIO_GetFlagStatus
0x0514      [40]    _FAT32_ClustToSect
0x053C     [104]    __Lib_FAT32_STM32_readMSector
0x05A4      [16]    _SDIO_SetSDIOReadWaitMode
0x05B4     [164]    __Lib_FAT32_STM32_readMStart
0x0658      [26]    _I2Cx_Get_Status
0x0674     [564]    __Lib_Mmc_SDIO_FindSCR
0x08A8      [56]    __Lib_Mmc_SDIO_CmdError
0x08E0     [312]    __Lib_Mmc_SDIO_CmdResp1Error
0x0A18      [38]    _strcmp
0x0A40      [28]    _isspace
0x0A5C      [64]    _Mmc_Get_File_Write_Sector
0x0A9C      [92]    __Lib_Mmc_SDIO_CmdResp7Error
0x0AF8      [28]    _SPI3_Read
0x0B14      [28]    _SPI2_Read
0x0B30      [16]    _SDIO_ClockCmd
0x0B40      [16]    _SDIO_SetPowerState
0x0B50      [16]    _SDIO_WriteData
0x0B60      [28]    _SPI1_Read
0x0B7C     [264]    _FAT32_Seek
0x0C84      [72]    _SDIO_SendCommand
0x0CCC      [28]    _ADC1_Get_Sample
0x0CE8      [28]    _ADC3_Get_Sample
0x0D04      [28]    _ADC2_Get_Sample
0x0D20      [60]    __Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SPI
0x0D5C      [20]    _SDIO_GetPowerState
0x0D70     [112]    __Lib_Mmc_SDIO_CmdResp2Error
0x0DE0     [180]    __Lib_Mmc_SDIO_CmdResp6Error
0x0E94     [412]    __Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SDIO
0x1030      [88]    __Lib_Mmc_SDIO_CmdResp3Error
0x1088      [16]    _SDIO_DMACmd
0x1098     [640]    _I2Cx_Read
0x1318     [596]    _FAT32_Read
0x156C     [180]    _I2Cx_Write
0x1620      [24]    _Mmc_Write_Sector
0x1638     [364]    __Lib_Mmc_SDIO_SDEnWideBus
0x17A4      [44]    Power_management_ui_ReadBatteryVoltage
0x17D0     [348]    __Lib_Mmc_SDIO_Mmc_Multi_Read_Start_SDIO
0x192C      [80]    __Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SPI
0x197C      [88]    __Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SPI
0x19D4     [392]    __Lib_Mmc_SDIO_Mmc_Multi_Write_Start_SDIO
0x1B5C     [124]    __Lib_Mmc_SDIO_Mmc_Read_Cid_SPI
0x1BD8     [124]    __Lib_Mmc_SDIO_Mmc_Read_Csd_SPI
0x1C54     [264]    __Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_SDIO
0x1D5C      [36]    _ChekXForEvent
0x1D80      [26]    __Lib_I2C_123_I2Cx_Wait_For_Idle
0x1D9C     [132]    __Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_SPI
0x1E20      [64]    __Lib_Mmc_SDIO_Mmc_Read_Cid_SDIO
0x1E60      [64]    __Lib_Mmc_SDIO_Mmc_Read_Csd_SDIO
0x1EA0     [144]    __Lib_Mmc_SDIO_Mmc_Read_Sector_SPI
0x1F30     [536]    __Lib_Mmc_SDIO_Mmc_Read_Sector_SDIO
0x2148     [196]    __Lib_Mmc_SDIO_Mmc_Write_Sector_SPI
0x220C     [152]    _DrawPictureLine
0x22A4     [140]    _Roll_Roller
0x2330      [36]    _I2C3_Read
0x2354      [40]    Power_management_f_ReadBatteryVoltage
0x237C      [60]    ITG3200_driver_ITG3200_Read_Register
0x23B8      [52]    ITG3200_driver_ITG3200_Write
0x23EC      [46]    _Dec2Bcd
0x241C      [36]    _I2C2_Write
0x2440      [24]    __Lib_TFT_Defs_Write_to_Port
0x2458      [36]    _I2C1_Write
0x247C      [36]    _I2C3_Write
0x24A0      [36]    _I2C2_Read
0x24C4      [52]    _Write_to_Data_Lines
0x24F8      [36]    _I2C1_Read
0x251C      [30]    _toupper
0x253C     [164]    _TFT_Get_Data
0x25E0     [208]    __Lib_MmcFat16_f16_normalize
0x26B0     [112]    _MyTFT_Get_Data
0x2720     [800]    __Lib_Mmc_SDIO_Mmc_Write_Sector_SDIO
0x2A40      [20]    __Lib_MmcFat16_f16_toInt
0x2A54      [28]    _strlen
0x2A70     [408]    __Lib_MmcFat16_f16_DirentToDir
0x2C08     [228]    __Lib_MmcFat16_getFatFreeCluster
0x2CEC     [236]    __Lib_MmcFat16_putFatEntry
0x2DD8      [24]    _Mmc_Multi_Read_Stop
0x2DF0      [24]    _Mmc_Multi_Read_Start
0x2E08      [24]    _Mmc_Multi_Read_Sector
0x2E20      [52]    _memcmp
0x2E54     [252]    __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
0x2F50     [140]    _Scroll_Init_Scroll_area
0x2FDC      [60]    ADXL345_driver_ADXL345_Read_Register
0x3018      [12]    __Lib_UART_123_45_6_UARTx_Tx_Idle
0x3024      [22]    __Lib_FAT32_STM32_alt_isdigit
0x303C     [100]    _STMPE610_SetCalibrationConsts
0x30A0      [22]    __Lib_FAT32_STM32_alt_isupper
0x30B8      [22]    __Lib_FAT32_STM32_alt_islower
0x30D0      [52]    HMC5883L_driver_MAGNET_Write
0x3104      [10]    __Lib_FAT32_STM32_UI8
0x3110      [12]    _Get_Fosc_kHz
0x311C      [28]    _Bcd2Dec
0x3138      [20]    __Lib_FAT32_STM32_UI16
0x314C      [68]    _I2Cx_Start
0x3190      [52]    ADXL345_driver_ADXL345_Write
0x31C4      [12]    __Lib_UART_123_45_6_UARTx_Data_Ready
0x31D0      [34]    __Lib_FAT32_STM32_UI32
0x31F4      [22]    __Lib_UART_123_45_6_UARTx_Read
0x320C      [60]    HMC5883L_driver_MAGNET_Read_Register
0x3248     [408]    __Lib_Mmc_SDIO_SD_InitializeCards
0x33E0      [80]    __Lib_Mmc_SDIO_SD_SelectDeselect
0x3430     [496]    __Lib_Mmc_SDIO_SD_PowerON
0x3620     [148]    __Lib_Mmc_SDIO_Mmc_Send_Command_SPI
0x36B4     [288]    __Lib_Mmc_SDIO_Mmc_UnIdle_SPI
0x37D4      [16]    _SDIO_SetSDIOOperation
0x37E4     [400]    __Lib_Mmc_SDIO_IsCardProgramming
0x3974      [16]    _SDIO_StartSDIOReadWait
0x3984     [112]    __Lib_Mmc_SDIO_SD_EnableWideBusOperation
0x39F4      [16]    _SDIO_StopSDIOReadWait
0x3A04      [40]    __Lib_Mmc_SDIO_Mmc_DeSelect_SPI
0x3A2C      [26]    _TFT_Color16bitToRGB
0x3A48      [36]    _TFT_RGBToColor16bit
0x3A6C      [20]    __Lib_Mmc_SDIO_Mmc_Select_SPI
0x3A80     [168]    Power_management_GetPowerStatus
0x3B28      [30]    __Lib_FAT32_STM32_alt_toupper
0x3B48     [104]    _TFT_Set_DBC_SSD1963
0x3BB0     [256]    _Set_RTC
0x3CB0     [500]    _Roller_Init
0x3EA4     [252]    __Lib_FAT32_STM32_readMBR
0x3FA0     [240]    __Lib_FAT32_STM32_name83ToFileName
0x4090     [396]    _Draw_Picture
0x421C     [100]    _STMPE610_ReadReg
0x4280      [48]    __Lib_FAT32_STM32_alt_isalnum
0x42B0      [12]    _Is_TFT_Rotated_180
0x42BC     [136]    _ADXL345_Read
0x4344      [30]    _FAT32_Dev_Write_Sector
0x4364     [244]    _MyBoxOnPress
0x4458      [38]    __Lib_FAT32_STM32_PO2
0x4480      [38]    _MAGNET_Init
0x44A8     [100]    __Lib_STMPE610_STMPE610_SetDispOrientation
0x450C     [664]    _TFT_Line
0x47A4     [112]    __Lib_TFT__TFT_Get_Char_Width
0x4814      [84]    __Lib_TFT__TFT_Get_Char_WidthE
0x4868     [168]    _STMPE610_GetRawXYZ
0x4910     [182]    _TFT_GetCurrentColor
0x49C8     [136]    _TFT_Dot
0x4A50     [404]    _TFT_H_Line
0x4BE4     [100]    _STMPE610_PressDetect
0x4C48     [244]    _TFT_V_Line
0x4D3C      [88]    _Scroll_Undone
0x4D94     [236]    _Roller_Deactivate
0x4E80     [100]    __Lib_TFT__TFT_getHeader
0x4EE4      [36]    _Roll_Set_Level
0x4F08     [264]    _RTCC_Read
0x5010      [88]    _ITG3200_Init
0x5068      [28]    _I2C2_Init_Advanced
0x5084     [660]    __Lib_TFT_TFT_Image1bppE
0x5318      [70]    _ADXL345_Init
0x5360     [672]    __Lib_TFT_TFT_Image4bppE
0x5600     [644]    __Lib_TFT_TFT_Image16bppE
0x5884     [588]    __Lib_TFT_TFT_Image8bppE
0x5AD0      [16]    _Is_TFT_MM_Plus
0x5AE0     [136]    __Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SDIO
0x5B68     [104]    __Lib_Mmc_SDIO_Mmc_Init_SDIO
0x5BD0     [216]    __Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SDIO
0x5CA8      [24]    _Mmc_Read_Sector
0x5CC0      [32]    _memset
0x5CE0      [24]    _UART6_Tx_Idle
0x5CF8      [24]    _UART6_Data_Ready
0x5D10     [264]    __Lib_Mmc_SDIO_Mmc_Init_SPI
0x5E18      [48]    __Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_SPI
0x5E48     [148]    __Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_SPI
0x5EDC     [320]    __Lib_MmcFat16_getBoot
0x601C     [532]    __Lib_MmcFat16_mkNod
0x6230     [296]    __Lib_MmcFat16_stat
0x6358     [120]    __Lib_MmcFat16_getFatEntry
0x63D0      [78]    _WordToStr
0x6420     [168]    _GPIO_Clk_Enable
0x64C8     [136]    _MAGNET_Read
0x6550      [34]    __Lib_MmcFat16_f16_toLong
0x6574     [160]    __Lib_MmcFat16_checkFileName
0x6614      [34]    _memcpy
0x6638      [48]    __Lib_MmcFat16_nameToUpper
0x6668      [24]    _UART6_Read
0x6680      [24]    _UART1_Read
0x6698      [24]    _I2C3_Start
0x66B0      [24]    _UART1_Data_Ready
0x66C8      [24]    _UART2_Read
0x66E0      [24]    _UART1_Tx_Idle
0x66F8     [144]    _ITG3200_Read
0x6788     [132]    _RCC_GetClocksFrequency
0x680C      [70]    _GPIO_Alternate_Function_Enable
0x6854      [24]    _I2C2_Start
0x686C      [24]    _I2C1_Start
0x6884      [24]    _UART2_Data_Ready
0x689C      [24]    _UART4_Tx_Idle
0x68B4      [24]    _UART4_Data_Ready
0x68CC      [24]    _UART5_Read
0x68E4      [24]    _UART5_Tx_Idle
0x68FC      [24]    _UART5_Data_Ready
0x6914      [24]    _UART3_Read
0x692C      [24]    _UART2_Tx_Idle
0x6944      [24]    _UART3_Data_Ready
0x695C      [24]    _UART4_Read
0x6974      [24]    _UART3_Tx_Idle
0x698C      [52]    _TFT_Write_Command
0x69C0      [52]    _TFT_Set_Index
0x69F4      [84]    _TFT_SSD1963YT_8bit_Write_Command
0x6A48      [84]    _TFT_SSD1963_8bit_Set_Index
0x6A9C      [24]    __Lib_USB_32F4xx_USBD_USR_DeviceReset
0x6AB8      [24]    _Delay_100ms
0x6AD0     [196]    __Lib_TFT_Defs_TFT_Set_Pin_Directions
0x6B94      [56]    _Write_Command
0x6BCC      [56]    _Set_Index
0x6C08      [24]    _Delay_50us
0x6C20      [24]    _Delay_10ms
0x6C38     [532]    __Lib_TFT_Defs_TFT_Reset_SSD1963
0x6E4C     [144]    ADXL345_main_Accel_Average
0x6EE0     [112]    _MAGNET_Start
0x6F50      [48]    Ducati_logger_driver_IsInsideObject
0x6F80      [80]    _STMPE610_WriteReg
0x6FD0     [192]    __Lib_STMPE610_load_values
0x7090     [164]    __Lib_FAT32_STM32_DE_setMTime
0x7134    [1528]    __Lib_TFT__TFT_Circle_Fill
0x772C     [356]    __Lib_FAT32_STM32_fileNameToName83
0x7890     [132]    __Lib_FAT32_STM32_writeSector
0x7914     [168]    __Lib_FAT32_STM32_FAT_setEntry
0x79BC     [380]    __Lib_FAT32_STM32_FAT_getFreeClust
0x7B38      [16]    __Lib_STMPE610_STMPE610_TPRotationChange
0x7B48     [620]    _TFT_Rectangle
0x7DB4      [24]    _Mmc_Init
0x7DCC     [144]    ITG3200_main_Gyro_Average
0x7E60      [24]    _Delay_1ms
0x7E78     [132]    _TFT_Ext_Image
0x7EFC      [44]    _STMPE610_ReadID
0x7F28      [80]    _Scroll
0x7F78     [144]    HMC5883L_main_Magnet_Average
0x8008     [132]    _TFT_Set_Ext_Font
0x808C     [276]    __Lib_ADC_123_32F20x_24ch_ADCx_Init
0x81A0    [2968]    _TFT_Rectangle_Round_Edges
0x8D38     [164]    _TFT_Write_Text_Return_Pos
0x8DE0      [72]    _BLED_Fade_In
0x8E28     [112]    _ACCEL_Start
0x8E98     [496]    _STMPE610_GetXYZ
0x9088     [560]    _GPIO_Config
0x92B8      [24]    _TFT_Move_Cursor
0x92D0     [120]    _Set_MyRTCC
0x9348      [64]    _TFT_Set_Brush
0x9388      [40]    _strcpy
0x93B0     [112]    _GYRO_Start
0x9420     [772]    __Lib_TFT__TFT_Write_Char_E
0x9724      [40]    _strcat
0x974C      [48]    __Lib_TFT_Defs_TFT_Set_DataPort_Direction
0x977C     [284]    _Mmc_Fat_Seek
0x9898     [196]    _Deactivate_All_Rollers
0x995C      [32]    __Lib_FAT32_STM32_alt_memset
0x997C      [52]    __Lib_FAT32_STM32_alt_memcmp
0x99B0      [24]    _TFT_Set_Pen
0x99C8     [232]    _HoursTens
0x9AB0     [110]    _IntToStr
0x9B20     [448]    _checkPowerM
0x9CE0      [30]    __Lib_UART_123_45_6_UARTx_Write
0x9D00      [16]    _Is_TFT_Set
0x9D10      [16]    _TFT_Set_SSD1963
0x9D20      [34]    __Lib_FAT32_STM32_alt_memcpy
0x9D44     [248]    _Mmc_Init_Vars
0x9E3C     [468]    _I2Cx_Init_Advanced
0xA010     [416]    __Lib_MmcFat16_Mmc_Fat_Get_Info
0xA1B0      [70]    _BLED_Fade_Out
0xA1F8      [56]    __Lib_FAT32_STM32_DE_setClust
0xA230     [164]    __Lib_FAT32_STM32_DE_setCTime
0xA2D4     [220]    _RTC_Example_init
0xA3B0     [500]    __Lib_TFT__TFT_Write_Char
0xA5A4     [800]    __Lib_FAT32_STM32_readBR
0xA8C4     [232]    _MinutesTens
0xA9AC     [110]    __Lib_FAT32_STM32_DE_getDirEnt
0xAA1C     [232]    _HoursOnes
0xAB04     [180]    __Lib_FAT32_STM32_DE_getCTime
0xABB8     [180]    __Lib_FAT32_STM32_DE_getMTime
0xAC6C     [228]    _AmPmRun
0xAD50     [600]    _Mmc_Fat_Open
0xAFA8     [232]    _MinutesOnes
0xB090     [172]    ITG3200_main_Display_Value
0xB13C      [64]    HMC5883L_main_MAGNET_Test
0xB17C     [296]    HMC5883L_main_WriteGraph
0xB2A4      [44]    _doSettings
0xB2D0     [100]    HMC5883L_main_Scroll_MAGNET
0xB334     [196]    HMC5883L_main_Scroll_Add_Line
0xB3F8    [1728]    _Get_Object
0xBAB8      [96]    _STMPE610_GetCoordinates
0xBB18     [172]    HMC5883L_main_Display_Value
0xBBC4      [44]    _doNextScreen
0xBBF0       [2]    _doLog
0xBBF4       [6]    __Lib_USB_32F4xx_USBD_USR_DeviceResumed
0xBBFC       [6]    __Lib_USB_32F4xx_USBD_USR_DeviceSuspended
0xBC04       [6]    __Lib_USB_32F4xx_USBD_USR_DeviceDisconnected
0xBC0C       [6]    __Lib_USB_32F4xx_USBD_USR_DeviceConnected
0xBC14      [18]    _Box5OnPress
0xBC28      [18]    _Box4OnPress
0xBC3C       [6]    __Lib_USB_32F4xx_USBD_USR_DeviceConfigured
0xBC44       [6]    __Lib_USB_32F4xx_USBD_USR_Init
0xBC4C     [304]    _UpdateTime
0xBD7C     [196]    ADXL345_main_Scroll_Add_Line
0xBE40     [100]    ADXL345_main_Scroll_ACCEL
0xBEA4     [172]    ADXL345_main_Display_Value
0xBF50     [296]    ADXL345_main_WriteGraph
0xC078      [46]    _Roll_Get_Level
0xC0A8      [20]    sensors_Get_Temperature
0xC0BC      [64]    ADXL345_main_ACCEL_Test
0xC0FC     [156]    _Set_Roller
0xC198      [52]    _doAccelerometerTest
0xC1CC     [100]    ITG3200_main_Scroll_Gyro
0xC230      [52]    _doMagnetTest
0xC264      [32]    _doGPSTest
0xC284      [48]    _doSetClock
0xC2B4      [44]    _doPrevScreen
0xC2E0     [196]    ITG3200_main_Scroll_Add_Line
0xC3A4     [296]    ITG3200_main_WriteGraph
0xC4CC      [32]    _doPressureTest
0xC4EC      [18]    _Box10OnPress
0xC500      [18]    _Box8OnClick
0xC514      [18]    _Box3OnPress
0xC528      [18]    _Box11OnPress
0xC53C      [64]    ITG3200_main_GYRO_Test
0xC57C      [52]    _doGyroTest
0xC5B0      [64]    _Image18OnPress
0xC5F0      [56]    _doCalibration
0xC628      [30]    _STMPE610_ZDataFraction
0xC648      [30]    _STMPE610_TSControl
0xC668      [16]    _STMPE610_SetTouchPressureThreshold
0xC678      [16]    __Lib_TFT_Is_SSD1963_Set
0xC688      [30]    _STMPE610_ClearInterrupts
0xC6A8      [30]    _STMPE610_TSIDrive
0xC6C8      [30]    _STMPE610_SetADCClock
0xC6E8      [30]    _STMPE610_SetADC
0xC708      [40]    _STMPE610_ConfigureTSC
0xC730      [48]    _STMPE610_ResetFIFO
0xC760      [46]    _STMPE610_SetFIFOThreshold
0xC790     [328]    _TFT_Set_Address_SSD1963II
0xC8D8      [72]    _Write_Data
0xC920     [104]    _TFT_Set_Address_ILI9340
0xC988      [28]    _SPI1_Write
0xC9A4      [28]    _SPI3_Write
0xC9C0      [28]    _SPI2_Write
0xC9DC     [104]    _TFT_Set_Address_ILI9342
0xCA44     [104]    _TFT_Set_Address_SST7715R
0xCAAC     [120]    _TFT_Set_Address
0xCB24     [212]    _TFT_Set_Address_HX8352A
0xCBF8     [104]    _TFT_Set_Address_ILI9481
0xCC60     [104]    _TFT_Set_Address_R61526
0xCCC8     [280]    _Mmc_Set_Interface
0xCDE0      [84]    _SDIO_Init
0xCE34      [58]    _Mmc_Fat_Init
0xCE70      [68]    _Mmc_Fat_Reset
0xCEB4     [140]    _Mmc_Fat_Assign
0xCF40      [40]    _SDIO_Reset
0xCF68      [28]    _I2C1_Init_Advanced
0xCF84      [28]    _GPIO_Digital_Output
0xCFA0      [36]    _TFT_Set_Default_Mode
0xCFC4      [48]    _STMPE610_SetDefaultMode
0xCFF4      [16]    _TFT_Set_MM_Plus
0xD004      [40]    _TFT_Set_Active
0xD02C      [36]    _STMPE610_SetGPIOPin
0xD050      [66]    _STMPE610_AlternateFunction
0xD094     [156]    _STMPE610_SetSize
0xD130      [30]    _STMPE610_ConfigureInterrupt
0xD150      [84]    _STMPE610_EnableInterrupt
0xD1A4      [66]    _STMPE610_Module
0xD1E8      [16]    _TFT_Set_Ext_Buffer
0xD1F8     [196]    _TFT_Init_SSD1963
0xD2BC      [16]    _STMPE610_SetI2CAddress
0xD2CC      [40]    _STMPE610_Reset
0xD2F4      [32]    _STMPE610_IsOperational
0xD314      [28]    _UART1_Write
0xD330      [16]    __Lib_FAT32_STM32_DE_setAttrib
0xD340     [400]    __Lib_FAT32_STM32_FAT32_MakeNode
0xD4D0     [300]    __Lib_FAT32_STM32_FAT32_Status
0xD5FC      [26]    __Lib_FAT32_STM32_DE_setNameExt
0xD618     [256]    _DrawCBox
0xD718     [240]    _DrawCircle
0xD808      [82]    _DrawLabel
0xD85C     [256]    _DrawBox
0xD95C     [524]    _DrawCircleButton
0xDB68      [52]    _ADC3_Init
0xDB9C      [24]    _GPIO_Analog_Input
0xDBB4      [30]    _FAT32_Dev_Init
0xDBD4      [24]    _GPIO_Digital_Input
0xDBEC     [208]    __Lib_FAT32_STM32_resetFSI
0xDCBC      [62]    _DrawImage
0xDCFC      [90]    _DrawLine
0xDD58     [252]    __Lib_FAT32_STM32_readFSI
0xDE54      [62]    _DrawCImage
0xDE94      [28]    _UART5_Write
0xDEB0     [108]    _TFT_Set_Font
0xDF1C     [136]    _TFT_Write_Text
0xDFA4      [28]    _UART6_Write
0xDFC0      [96]    _TFT_Write_Data
0xE020      [44]    _TFT_16bit_Write_Data
0xE04C      [96]    _TFT_SSD1963_8bit_Write_Data
0xE0AC      [22]    _STMPE610_ClearInterruptFlagsAndFIFO
0xE0C4      [18]    _STMPE610_CalibratePoint
0xE0D8      [28]    _UART2_Write
0xE0F4     [556]    _DrawRoundButton
0xE320     [988]    _TFT_Circle
0xE6FC      [28]    _UART4_Write
0xE718      [28]    _UART3_Write
0xE734      [92]    _FAT32_Init
0xE790      [92]    Ducati_logger_driver_InitializeTouchPanel
0xE7EC      [84]    _STMPE610_GetLastCoordinates
0xE840     [548]    _Process_TP_Press
0xEA64     [132]    _doMagnet
0xEAE8     [148]    _Init_Ext_Mem
0xEB7C     [132]    _doGyro
0xEC00     [428]    _FAT32_Open
0xEDB0     [184]    _Init_MCU
0xEE68     [178]    _STMPE610_Config
0xEF1C     [844]    _Process_TP_Down
0xF268    [1380]    _Process_TP_Up
0xF7CC     [128]    _checkRTC
0xF84C     [996]    _DrawScreen
0xFC30     [556]    _Calibrate
0xFE5C     [144]    _TFT_Fill_Screen
0xFEEC   [29628]    Ducati_logger_driver_InitializeObjects
0x172A8     [132]    _doAccel
0x1732C     [224]    _doRTC_Example
0x1740C      [48]    _Sensors_Read
0x1743C     [100]    _Power_Man_Init
0x174A0     [140]    _Init_SDIO
0x1752C     [148]    _Init_FAT
0x175C0      [76]    __Lib_System_4XX_SystemClockSetDefault
0x1760C      [58]    ___FillZeros
0x17648     [124]    _Start_TP
0x176C4     [108]    _Check_TP
0x17730      [14]    _EnableInterrupts
0x17740     [172]    _Run_Logger
0x177EC      [76]    _Init_GPIO
0x17838      [14]    _DisableInterrupts
0x17848     [104]    _RTC_Init
0x178B0       [8]    ___GenExcept
0x178B8      [42]    ___EnableFPU
0x178E4      [36]    __Lib_System_4XX_InitialSetUpFosc
0x17908     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
0x17C68      [80]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [4]    FARG_TinyGPS_cardinal_course
0x0000       [4]    FARG_TinyGPS_course_to_lat1
0x0000       [4]    FARG_TinyGPS_distance_between_lat1
0x0000       [4]    FARG_atan_f
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x0000       [4]    FARG_acos_x
0x0000       [4]    FARG_pow_x
0x0000       [4]    FARG_atan2_y
0x0000       [4]    FARG_asin_x
0x0000       [4]    FARG_sqrt_x
0x0000       [4]    FARG_sinh_x
0x0000       [4]    FARG_tan_x
0x0000       [4]    FARG_cos_f
0x0000       [4]    FARG_FloatToStr_fnum
0x0000       [4]    FARG_exp_x
0x0000       [4]    FARG_log10_x
0x0000       [4]    FARG_sin_f
0x0000       [4]    FARG_log_x
0x0000       [4]    FARG_ceil_x
0x0000       [4]    FARG_floor_x
0x0000       [4]    FARG_fabs_d
0x0000       [4]    FARG___Lib_CMath_eval_poly_x
0x0000       [4]    FARG_cosh_x
0x0000       [4]    FARG_tanh_x
0x0000       [4]    FARG_modf_val
0x0000       [4]    FARG_frexp_value
0x0000       [4]    FARG_ldexp_value
0x0004       [4]    FARG_atan2_x
0x0004       [4]    FARG_pow_y
0x0004       [4]    FARG_TinyGPS_course_to_long1
0x0004       [4]    FARG_TinyGPS_distance_between_long1
0x0008       [4]    FARG_TinyGPS_course_to_lat2
0x0008       [4]    FARG_TinyGPS_distance_between_lat2
0x000C       [4]    FARG_TinyGPS_course_to_long2
0x000C       [4]    FARG_TinyGPS_distance_between_long2
0x20000000       [6]    _readings
0x20000006       [6]    _Old_Accel_vals
0x2000000C       [2]    __disp_accel_scroll
0x2000000E       [1]    _CircleButton1_Caption
0x2000000F       [1]    _CircleButton2_Caption
0x20000010       [4]    _currentSector
0x20000014      [35]    ?lstr1_Ducati_logger_driver
0x20000037      [33]    ?lstr2_Ducati_logger_driver
0x20000058      [13]    ?lstr3_Ducati_logger_driver
0x20000065       [9]    _Label19_Caption
0x2000006E      [12]    _Label10_Caption
0x2000007A      [12]    _Label11_Caption
0x20000086       [4]    _Label12_Caption
0x2000008A       [6]    _Label13_Caption
0x20000090      [10]    _Label14_Caption
0x2000009A       [8]    _Label15_Caption
0x200000A2       [6]    _Label16_Caption
0x200000A8       [2]    _Label17_Caption
0x200000AA       [2]    _Label18_Caption
0x200000AC       [4]    _ButtonRound8_Caption
0x200000B0       [4]    _Label20_Caption
0x200000B4       [4]    _Label21_Caption
0x200000B8      [12]    _Label22_Caption
0x200000C4      [11]    _Label23_Caption
0x200000CF       [4]    _ButtonRound9_Caption
0x200000D3      [12]    _Label24_Caption
0x200000DF       [9]    _Label25_Caption
0x200000E8       [8]    _Label26_Caption
0x200000F0       [6]    _Label27_Caption
0x200000F6       [2]    _Label28_Caption
0x200000F8       [2]    _Label29_Caption
0x200000FA      [10]    _ButtonRound1_Caption
0x20000104      [19]    _ButtonRound2_Caption
0x20000117       [9]    _ButtonRound3_Caption
0x20000120      [18]    _ButtonRound4_Caption
0x20000132      [21]    _ButtonRound5_Caption
0x20000147      [10]    _ButtonRound6_Caption
0x20000151      [22]    _ButtonRound7_Caption
0x20000167       [9]    _Label30_Caption
0x20000170       [5]    _Label73_Caption
0x20000175       [2]    _Label2_Caption
0x20000177       [5]    _Label5_Caption
0x2000017C      [51]    _Label6_Caption
0x200001AF      [20]    _Label1_Caption
0x200001C3       [4]    _Label3_Caption
0x200001C7       [4]    _Label4_Caption
0x200001CB       [4]    _Label7_Caption
0x200001CF       [5]    _Label32_Caption
0x200001D4      [10]    _Label53_Caption
0x200001DE       [5]    _Label54_Caption
0x200001E3       [5]    _Label55_Caption
0x200001E8       [2]    _Label56_Caption
0x200001EA      [11]    _Label57_Caption
0x200001F5       [5]    _Label58_Caption
0x200001FA       [5]    _Label59_Caption
0x200001FF       [2]    _Label60_Caption
0x20000201       [7]    _Label61_Caption
0x20000208       [5]    _Label62_Caption
0x2000020D       [5]    _Label63_Caption
0x20000212       [2]    _Label64_Caption
0x20000214       [8]    _Label65_Caption
0x2000021C       [5]    _Label66_Caption
0x20000221       [5]    _Label67_Caption
0x20000226       [2]    _Label68_Caption
0x20000228       [6]    _Label69_Caption
0x2000022E       [5]    _Label70_Caption
0x20000233       [5]    _Label71_Caption
0x20000238       [2]    _Label72_Caption
0x2000023A      [11]    _Label8_Caption
0x20000245       [4]    _Label9_Caption
0x20000249       [4]    _Label31_Caption
0x2000024D       [4]    _Label33_Caption
0x20000251      [19]    _Label34_Caption
0x20000264       [4]    _Label35_Caption
0x20000268       [4]    _Label36_Caption
0x2000026C       [4]    _Label37_Caption
0x20000270      [22]    _Label38_Caption
0x20000286       [4]    _Label39_Caption
0x2000028A       [4]    _Label40_Caption
0x2000028E       [4]    _Label41_Caption
0x20000292      [22]    _Label42_Caption
0x200002A8       [4]    _Label43_Caption
0x200002AC       [4]    _Label44_Caption
0x200002B0       [4]    _Label45_Caption
0x200002B4       [1]    _Display_Bat_Stat
0x200002B5       [1]    _DLPF_FS
0x200002B6       [6]    _magnetreadings
0x200002BC       [2]    __disp_magnet_scroll
0x200002BE       [6]    _Old_Magnet_vals
0x200002C4      [13]    ?lstr1_Init_routines
0x200002D1       [1]    _DLPF_FS_SEL_0
0x200002D2       [1]    _DLPF_FS_SEL_1
0x200002D3       [1]    _DLPF_CFG_0
0x200002D4       [1]    _SMPLRT_DIV
0x200002D5       [1]    _GYRO_XOUT_H
0x200002D6       [6]    _gyroreadings
0x200002DC       [6]    _Old_Gyro_vals
0x200002E2       [2]    __disp_gyro_scroll
0x200002E4       [8]    _OldMyTime
0x200002EC       [3]    ?lstr1_RTCC_main
0x200002EF       [3]    ?lstr2_RTCC_main
0x200002F2       [3]    ?lstr1___Lib_MmcFat16
0x200002F5       [2]    ?lstr2___Lib_MmcFat16
0x200002F7       [1]    __Lib_Mmc_SDIO_cardType
0x200002F8       [4]    __Lib_Mmc_SDIO_Mmc_Init_Ptr
0x200002FC       [4]    __Lib_Mmc_SDIO_Mmc_Read_Sector_Ptr
0x20000300       [4]    __Lib_Mmc_SDIO_Mmc_Write_Sector_Ptr
0x20000304       [4]    __Lib_Mmc_SDIO_Mmc_Read_Cid_Ptr
0x20000308       [4]    __Lib_Mmc_SDIO_Mmc_Read_Csd_Ptr
0x2000030C       [4]    __Lib_Mmc_SDIO_Mmc_Multi_Read_Start_Ptr
0x20000310       [4]    __Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_Ptr
0x20000314       [4]    __Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_Ptr
0x20000318       [4]    __Lib_Mmc_SDIO_Mmc_Multi_Write_Start_Ptr
0x2000031C       [4]    __Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_Ptr
0x20000320       [4]    __Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_Ptr
0x20000324       [4]    __Lib_Mmc_SDIO_CardTypeSdio
0x20000328       [4]    __Lib_Mmc_SDIO_TotalNumberOfBytes
0x2000032C       [4]    __Lib_Mmc_SDIO_RCA
0x20000330       [1]    __Lib_STMPE610_pressed
0x20000331      [16]    __Lib_System_4XX_APBAHBPrescTable
0x20000341       [1]    __Lib_TFT___MM_plus
0x20000342       [2]    __Lib_TFT_Ptr_Set
0x20000344       [1]    __Lib_TFT___no_acceleration
0x20000345       [1]    __Lib_TFT___SSD1963_controller
0x20000346       [1]    __Lib_TFT_FontInitialized
0x20000347       [1]    __Lib_TFT_Defs_TFT_Rotated_180
0x20000348       [1]    __Lib_TFT_Defs_TFT_Disp_Rotation
0x20000349       [1]    SDIO_Init_firstCall_mark_L0
0x2000034A       [2]    __Lib_TFT_Defs___controller
0x2000034C      [44]    __Lib_USB_32F4xx_USBD_DCD_INT_cb
0x20000378      [10]    _acceldata_
0x20000382       [6]    _Accel_vals
0x20000388      [44]    _Label3
0x200003B4      [44]    _Label4
0x200003E0      [44]    _Label7
0x2000040C      [80]    _Accelerometer_test
0x2000045C       [4]    _TFT_SSD1963_Set_Address_Ptr
0x20000460       [4]    _TFT_Write_Data_Ptr
0x20000464      [40]    _Image1
0x2000048C      [40]    _Image2
0x200004B4      [40]    _Image10
0x200004DC      [40]    _Image11
0x20000504      [40]    _Image12
0x2000052C      [40]    _Image16
0x20000554      [40]    _Image17
0x2000057C      [40]    _Image21
0x200005A4      [40]    _Image22
0x200005CC      [40]    _Image23
0x200005F4      [40]    _Image24
0x2000061C      [40]    _Image25
0x20000644      [40]    _Image26
0x2000066C      [40]    _Image27
0x20000694      [40]    _Image28
0x200006BC      [40]    _Image29
0x200006E4      [40]    _Image30
0x2000070C      [40]    _Image31
0x20000734      [40]    _Image32
0x2000075C      [40]    _Image33
0x20000784      [40]    _Image34
0x200007AC      [40]    _Image35
0x200007D4      [40]    _Image36
0x200007FC      [40]    _Image37
0x20000824      [40]    _Image38
0x2000084C      [40]    _Image39
0x20000874      [80]    _Speedometer_graphics
0x200008C4      [68]    _ButtonRound8
0x20000908      [44]    _Label19
0x20000934      [44]    _Label10
0x20000960      [44]    _Label11
0x2000098C      [44]    _Label12
0x200009B8      [44]    _Label13
0x200009E4      [44]    _Label14
0x20000A10      [44]    _Label15
0x20000A3C      [44]    _Label16
0x20000A68      [44]    _Label17
0x20000A94      [44]    _Label18
0x20000AC0      [40]    _Image15
0x20000AE8      [40]    _Image3
0x20000B10      [40]    _Image4
0x20000B38      [40]    _Image5
0x20000B60      [40]    _Image6
0x20000B88      [40]    _Image7
0x20000BB0      [40]    _Image8
0x20000BD8      [40]    _Image9
0x20000C00      [64]    _CircleButton1
0x20000C40      [52]    _Box2
0x20000C74      [20]    _Line1
0x20000C88      [80]    _Tachometer_graphics
0x20000CD8      [68]    _ButtonRound9
0x20000D1C      [44]    _Label20
0x20000D48      [44]    _Label21
0x20000D74      [44]    _Label22
0x20000DA0      [44]    _Label23
0x20000DCC      [44]    _Label24
0x20000DF8      [44]    _Label25
0x20000E24      [44]    _Label26
0x20000E50      [44]    _Label27
0x20000E7C      [44]    _Label28
0x20000EA8      [44]    _Label29
0x20000ED4      [40]    _Image40
0x20000EFC      [40]    _Image41
0x20000F24      [40]    _Image42
0x20000F4C      [40]    _Image43
0x20000F74      [40]    _Image44
0x20000F9C      [40]    _Image45
0x20000FC4      [40]    _Image46
0x20000FEC      [40]    _Image47
0x20001014      [48]    _Circle1
0x20001044      [64]    _CircleButton2
0x20001084      [52]    _Box12
0x200010B8      [20]    _Line2
0x200010CC      [80]    _Settings
0x2000111C      [68]    _ButtonRound1
0x20001160      [68]    _ButtonRound2
0x200011A4      [68]    _ButtonRound3
0x200011E8      [68]    _ButtonRound4
0x2000122C      [68]    _ButtonRound5
0x20001270      [68]    _ButtonRound6
0x200012B4      [68]    _ButtonRound7
0x200012F8      [44]    _Label30
0x20001324      [44]    _Label73
0x20001350      [40]    _Image48
0x20001378      [40]    _Image51
0x200013A0      [52]    _Box17
0x200013D4      [44]    _Label2
0x20001400      [44]    _Label5
0x2000142C      [44]    _Label6
0x20001458      [40]    _Image18
0x20001480      [40]    _Image19
0x200014A8      [40]    _Image20
0x200014D0      [52]    _Box7
0x20001504      [52]    _Box8
0x20001538      [52]    _Box10
0x2000156C      [52]    _Box11
0x200015A0      [52]    _Box3
0x200015D4      [52]    _Box4
0x20001608      [52]    _Box5
0x2000163C      [44]    _Label1
0x20001668      [40]    _Image49
0x20001690      [52]    _Box23
0x200016C4      [52]    _Box6
0x200016F8      [44]    _Label32
0x20001724      [44]    _Label53
0x20001750      [44]    _Label54
0x2000177C      [44]    _Label55
0x200017A8      [44]    _Label56
0x200017D4      [44]    _Label57
0x20001800      [44]    _Label58
0x2000182C      [44]    _Label59
0x20001858      [44]    _Label60
0x20001884      [44]    _Label61
0x200018B0      [44]    _Label62
0x200018DC      [44]    _Label63
0x20001908      [44]    _Label64
0x20001934      [44]    _Label65
0x20001960      [44]    _Label66
0x2000198C      [44]    _Label67
0x200019B8      [44]    _Label68
0x200019E4      [44]    _Label69
0x20001A10      [44]    _Label70
0x20001A3C      [44]    _Label71
0x20001A68      [44]    _Label72
0x20001A94      [40]    _Image50
0x20001ABC      [52]    _Box9
0x20001AF0      [52]    _Box16
0x20001B24      [44]    _Label8
0x20001B50      [44]    _Label9
0x20001B7C      [44]    _Label31
0x20001BA8      [44]    _Label33
0x20001BD4      [40]    _Image52
0x20001BFC      [52]    _Box13
0x20001C30      [52]    _Box14
0x20001C64      [44]    _Label34
0x20001C90      [44]    _Label35
0x20001CBC      [44]    _Label36
0x20001CE8      [44]    _Label37
0x20001D14      [40]    _Image53
0x20001D3C      [52]    _Box15
0x20001D70      [52]    _Box18
0x20001DA4      [44]    _Label38
0x20001DD0      [44]    _Label39
0x20001DFC      [44]    _Label40
0x20001E28      [44]    _Label41
0x20001E54      [40]    _Image54
0x20001E7C      [52]    _Box19
0x20001EB0      [52]    _Box20
0x20001EE4      [44]    _Label42
0x20001F10      [44]    _Label43
0x20001F3C      [44]    _Label44
0x20001F68      [44]    _Label45
0x20001F94      [40]    _Image55
0x20001FBC      [52]    _Box21
0x20001FF0      [52]    _Box22
0x20002024     [512]    _Ext_Data_Buffer
0x20002224       [2]    _TFT_DISP_HEIGHT
0x20002226       [2]    _TFT_DISP_WIDTH
0x20002228       [1]    _object_pressed
0x20002229       [1]    _PenDown
0x2000222A       [2]    __object_count
0x2000222C       [4]    _exec_round_button
0x20002230       [4]    _exec_label
0x20002234       [4]    _exec_image
0x20002238       [4]    _exec_cimage
0x2000223C       [4]    _exec_circle
0x20002240       [4]    _exec_circle_button
0x20002244       [4]    _exec_box
0x20002248       [4]    _exec_cbox
0x2000224C       [2]    _round_button_order
0x2000224E       [2]    _PressedObjectType
0x20002250       [4]    _PressedObject
0x20002254       [2]    _label_order
0x20002256       [2]    _image_order
0x20002258       [2]    _cimage_order
0x2000225A       [2]    _circle_order
0x2000225C       [2]    _circle_button_order
0x2000225E       [2]    _box_order
0x20002260       [2]    _cbox_order
0x20002262       [2]    _Xcoord
0x20002264       [4]    _CurrentScreen
0x20002268       [4]    _local_round_button
0x2000226C       [4]    _local_label
0x20002270       [4]    _local_image
0x20002274       [4]    _local_cimage
0x20002278       [4]    _local_circle
0x2000227C       [4]    _local_circle_button
0x20002280       [4]    _local_box
0x20002284       [4]    _local_cbox
0x20002288       [2]    _Ycoord
0x2000228A       [2]    _caption_height
0x2000228C       [4]    _res_file_size
0x20002290       [2]    _caption_length
0x20002292       [2]    _display_width
0x20002294       [2]    _display_height
0x20002296       [1]    _Logger_State
0x20002297       [1]    _cACCEL_test_status
0x20002298      [80]    _Boot
0x200022E8      [80]    _Set_clock
0x20002338      [80]    _GPS_Test
0x20002388      [80]    _Gyro_test
0x200023D8      [80]    _Magnetometer_test
0x20002428      [80]    _Pressure_test
0x20002478      [80]    _Humidity_test
0x200024C8       [1]    _cMAGNET_test_status
0x200024C9       [1]    _cGyro_test_status
0x200024CA      [10]    _Magnetdata_
0x200024D4       [6]    _Magnet_vals
0x200024DA       [1]    _Ext_res_initialized
0x200024DB       [1]    _Fat_Initialized_Flag
0x200024DC       [1]    _Ext_fhandle
0x200024DD     [512]    _My_Ext_Data_Buffer
0x200026DD      [10]    _gyrodata_
0x200026E7       [1]    _Roll_flag
0x200026E8       [6]    _Gyro_vals
0x200026EE       [2]    _OldYcoo
0x200026F0      [12]    _Power_State_Old
0x200026FC      [12]    _Power_State
0x20002708       [4]    _RTC_Time
0x2000270C       [4]    _RTC_Date
0x20002710       [4]    _old_RTC_Time
0x20002714       [4]    _old_RTC_Date
0x20002718       [8]    _MyTime
0x20002720      [24]    _Hour1Roll
0x20002738      [24]    _Hour2Roll
0x20002750      [24]    _Minute1Roll
0x20002768      [24]    _Minute2Roll
0x20002780      [24]    _AmPm
0x20002798       [4]    _pFilter
0x2000279C       [2]    _OldDelta
0x2000279E       [2]    sensors_Sensors_counter
0x200027A0       [4]    _ADC_Get_Sample_Ptr
0x200027A4       [4]    ___System_CLOCK_IN_KHZ
0x200027A8       [1]    __Lib_FAT32_STM32___error
0x200027A9       [1]    __Lib_FAT32_STM32_fCardMultiReadMode
0x200027AA       [8]    __Lib_FAT32_STM32___MT
0x200027B2       [8]    __Lib_FAT32_STM32___CT
0x200027BA       [1]    __Lib_FAT32_STM32_fBytesPClustPO2
0x200027BB       [1]    __Lib_FAT32_STM32_fDoSyncFSI
0x200027BC     [516]    _f32_sector
0x200029C0     [112]    _fat32_fdesc
0x20002A30       [8]    __Lib_FAT32_STM32___TM
0x20002A38      [52]    __Lib_FAT32_STM32___fsi
0x20002A6C       [4]    __Lib_FAT32_STM32_fSectBuffEnd
0x20002A70       [4]    __Lib_FAT32_STM32_fMaxCluster
0x20002A74       [4]    __Lib_FAT32_STM32___currentDir
0x20002A78       [4]    __Lib_FAT32_STM32___currentEntry
0x20002A7C       [4]    __Lib_FAT32_STM32_fDirEntsPClust
0x20002A80       [1]    __Lib_FAT32_STM32_fFatEntsPSectPO2
0x20002A81       [1]    __Lib_FAT32_STM32_fSectPClustPO2
0x20002A82       [1]    __Lib_FAT32_STM32_fBytesPSectPO2
0x20002A83       [1]    __Lib_FAT32_STM32_fDirEntsPSectPO2
0x20002A84       [4]    __Lib_FAT32_STM32_fFatEntsPSect
0x20002A88       [4]    __Lib_FAT32_STM32_fBytesPClust
0x20002A8C       [4]    __Lib_FAT32_STM32_fDirEntsPSect
0x20002A90       [1]    __Lib_FAT32_STM32_fDirEntsPClustPO2
0x20002A91       [1]    ___f16_errno
0x20002A92       [2]    __Lib_MmcFat16_f16_dirEntryPerSect
0x20002A94       [4]    _I2C_Start_Ptr
0x20002A98       [4]    _I2C_Read_Ptr
0x20002A9C       [4]    _I2C_Write_Ptr
0x20002AA0      [32]    __Lib_MmcFat16_f16_cFD
0x20002AC0      [24]    __Lib_MmcFat16_f16_boot
0x20002AD8       [4]    __Lib_MmcFat16_f16_currentDir
0x20002ADC     [516]    _f16_sector
0x20002CE0       [4]    __Lib_MmcFat16_f16_sectBuffEnd
0x20002CE4       [2]    __Lib_MmcFat16_f16_time
0x20002CE6       [2]    __Lib_MmcFat16_f16_date
0x20002CE8       [2]    __Lib_MmcFat16_f16_clustPerSect
0x20002CEA      [13]    __Lib_MmcFat16_tmpBuf
0x20002CF7       [1]    __Lib_MmcFat16_f16_currentHandle
0x20002CF8      [64]    _f16_fileDesc
0x20002D38      [32]    __Lib_MmcFat16_f16_part
0x20002D58       [1]    __Lib_MmcFat16_f16_activePart
0x20002D59       [1]    __Lib_STMPE610_STMPE610_PRESSURE_THRESHOLD
0x20002D5A       [2]    __Lib_MmcFat16_f16_dirEntry
0x20002D5C       [4]    __Lib_MmcFat16_f16_openedDir
0x20002D60       [4]    _SPI_Rd_Ptr
0x20002D64      [24]    __Lib_Mmc_SDIO_SDIO_DataInitStructure
0x20002D7C      [20]    __Lib_Mmc_SDIO_SDIO_CmdInitStructure
0x20002D90       [4]    __Lib_Mmc_SDIO_numberOfBytesSent
0x20002D94      [16]    __Lib_Mmc_SDIO_CSD_TabSdio
0x20002DA4      [16]    __Lib_Mmc_SDIO_CID_TabSdio
0x20002DB4       [2]    __Lib_STMPE610_CAL_X_MIN
0x20002DB6       [2]    __Lib_STMPE610_CAL_Y_MIN
0x20002DB8       [8]    __Lib_STMPE610_TPOrientation
0x20002DC0       [2]    __Lib_STMPE610_STMPE610_TP_WIDTH
0x20002DC2       [2]    __Lib_STMPE610_CAL_X_MAX
0x20002DC4       [2]    __Lib_STMPE610_STMPE610_TP_HEIGHT
0x20002DC6       [2]    __Lib_STMPE610_CAL_Y_MAX
0x20002DC8       [1]    __Lib_STMPE610_STMPE610_I2C_ADDRESS
0x20002DC9       [1]    __Lib_STMPE610_max_idx
0x20002DCA       [2]    __Lib_STMPE610_X_val
0x20002DCC       [2]    __Lib_STMPE610_Y_val
0x20002DCE       [8]    __Lib_STMPE610_X_colection
0x20002DD6       [8]    __Lib_STMPE610_Y_colection
0x20002DDE       [2]    __Lib_STMPE610_Max_val
0x20002DE0       [2]    __Lib_STMPE610_Min_val
0x20002DE2       [1]    __Lib_STMPE610_min_idx
0x20002DE3       [1]    __Lib_TFT_BrushEnabled
0x20002DE4       [4]    __VOLTAGE_RANGE
0x20002DE8      [10]    __Lib_TFT_headerBuffer
0x20002DF2       [2]    __Lib_TFT_x_cord
0x20002DF4       [4]    _TFT_Get_Ext_Data_Ptr
0x20002DF8       [4]    _TFT_Set_Address_Ptr
0x20002DFC       [2]    __Lib_TFT_y_cord
0x20002DFE       [2]    __Lib_TFT_BrushColor
0x20002E00       [1]    __Lib_TFT_GradientEnabled
0x20002E01       [1]    __Lib_TFT_GradientOrientation
0x20002E02       [2]    __Lib_TFT_GradColorFrom
0x20002E04       [2]    __Lib_TFT_GradColorTo
0x20002E06       [2]    __Lib_TFT_PenColor
0x20002E08       [4]    _TFT_Set_Index_Ptr
0x20002E0C       [4]    _TFT_Write_Command_Ptr
0x20002E10       [1]    __Lib_TFT_PenWidth
0x20002E11       [1]    __Lib_TFT_FontOrientation
0x20002E12       [2]    __Lib_TFT__fontFirstChar
0x20002E14       [4]    __Lib_TFT__font
0x20002E18       [2]    __Lib_TFT__fontLastChar
0x20002E1A       [2]    __Lib_TFT__fontHeight
0x20002E1C       [2]    __Lib_TFT_FontColor
0x20002E1E       [1]    _ExternalFontSet
0x20002E20       [4]    __Lib_TFT_activeExtFont
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x035C       [4]    _Screen11_Images
0x6AB4       [4]    _Screen10_Images
0x6C04       [4]    _Screen9_Images
0x6EDC       [4]    _Screen8_Images
0x7E5C       [4]    _Screen2_Lines
0x8DDC       [4]    _Screen3_Buttons_Round
0xEDAC       [4]    _Screen3_CImages
0x17CB8    [2168]    _TFT_defaultFont
0x18530       [6]    ?ICS_readings
0x18536       [6]    ?ICS_Old_Accel_vals
0x1853C       [2]    ?ICS__disp_accel_scroll
0x1853E       [1]    ?ICS_CircleButton1_Caption
0x1853F       [1]    ?ICS_CircleButton2_Caption
0x18540       [4]    ?ICS_currentSector
0x18544      [35]    ?ICS?lstr1_Ducati_logger_driver
0x18567      [33]    ?ICS?lstr2_Ducati_logger_driver
0x18588      [13]    ?ICS?lstr3_Ducati_logger_driver
0x18595       [9]    ?ICS_Label19_Caption
0x1859E      [12]    ?ICS_Label10_Caption
0x185AA      [12]    ?ICS_Label11_Caption
0x185B6       [4]    ?ICS_Label12_Caption
0x185BA       [6]    ?ICS_Label13_Caption
0x185C0      [10]    ?ICS_Label14_Caption
0x185CA       [8]    ?ICS_Label15_Caption
0x185D2       [6]    ?ICS_Label16_Caption
0x185D8       [2]    ?ICS_Label17_Caption
0x185DA       [2]    ?ICS_Label18_Caption
0x185DC       [4]    ?ICS_ButtonRound8_Caption
0x185E0       [4]    ?ICS_Label20_Caption
0x185E4       [4]    ?ICS_Label21_Caption
0x185E8      [12]    ?ICS_Label22_Caption
0x185F4      [11]    ?ICS_Label23_Caption
0x185FF       [4]    ?ICS_ButtonRound9_Caption
0x18603      [12]    ?ICS_Label24_Caption
0x1860F       [9]    ?ICS_Label25_Caption
0x18618       [8]    ?ICS_Label26_Caption
0x18620       [6]    ?ICS_Label27_Caption
0x18626       [2]    ?ICS_Label28_Caption
0x18628       [2]    ?ICS_Label29_Caption
0x1862A      [10]    ?ICS_ButtonRound1_Caption
0x18634      [19]    ?ICS_ButtonRound2_Caption
0x18647       [9]    ?ICS_ButtonRound3_Caption
0x18650      [18]    ?ICS_ButtonRound4_Caption
0x18662      [21]    ?ICS_ButtonRound5_Caption
0x18677      [10]    ?ICS_ButtonRound6_Caption
0x18681      [22]    ?ICS_ButtonRound7_Caption
0x18697       [9]    ?ICS_Label30_Caption
0x186A0       [5]    ?ICS_Label73_Caption
0x186A5       [2]    ?ICS_Label2_Caption
0x186A7       [5]    ?ICS_Label5_Caption
0x186AC      [51]    ?ICS_Label6_Caption
0x186DF      [20]    ?ICS_Label1_Caption
0x186F3       [4]    ?ICS_Label3_Caption
0x186F7       [4]    ?ICS_Label4_Caption
0x186FB       [4]    ?ICS_Label7_Caption
0x186FF       [5]    ?ICS_Label32_Caption
0x18704      [10]    ?ICS_Label53_Caption
0x1870E       [5]    ?ICS_Label54_Caption
0x18713       [5]    ?ICS_Label55_Caption
0x18718       [2]    ?ICS_Label56_Caption
0x1871A      [11]    ?ICS_Label57_Caption
0x18725       [5]    ?ICS_Label58_Caption
0x1872A       [5]    ?ICS_Label59_Caption
0x1872F       [2]    ?ICS_Label60_Caption
0x18731       [7]    ?ICS_Label61_Caption
0x18738       [5]    ?ICS_Label62_Caption
0x1873D       [5]    ?ICS_Label63_Caption
0x18742       [2]    ?ICS_Label64_Caption
0x18744       [8]    ?ICS_Label65_Caption
0x1874C       [5]    ?ICS_Label66_Caption
0x18751       [5]    ?ICS_Label67_Caption
0x18756       [2]    ?ICS_Label68_Caption
0x18758       [6]    ?ICS_Label69_Caption
0x1875E       [5]    ?ICS_Label70_Caption
0x18763       [5]    ?ICS_Label71_Caption
0x18768       [2]    ?ICS_Label72_Caption
0x1876A      [11]    ?ICS_Label8_Caption
0x18775       [4]    ?ICS_Label9_Caption
0x18779       [4]    ?ICS_Label31_Caption
0x1877D       [4]    ?ICS_Label33_Caption
0x18781      [19]    ?ICS_Label34_Caption
0x18794       [4]    ?ICS_Label35_Caption
0x18798       [4]    ?ICS_Label36_Caption
0x1879C       [4]    ?ICS_Label37_Caption
0x187A0      [22]    ?ICS_Label38_Caption
0x187B6       [4]    ?ICS_Label39_Caption
0x187BA       [4]    ?ICS_Label40_Caption
0x187BE       [4]    ?ICS_Label41_Caption
0x187C2      [22]    ?ICS_Label42_Caption
0x187D8       [4]    ?ICS_Label43_Caption
0x187DC       [4]    ?ICS_Label44_Caption
0x187E0       [4]    ?ICS_Label45_Caption
0x187E4       [1]    ?ICS_Display_Bat_Stat
0x187E5       [1]    ?ICS_DLPF_FS
0x187E6       [6]    ?ICS_magnetreadings
0x187EC       [2]    ?ICS__disp_magnet_scroll
0x187EE       [6]    ?ICS_Old_Magnet_vals
0x187F4      [13]    ?ICS?lstr1_Init_routines
0x18801       [1]    ?ICS_DLPF_FS_SEL_0
0x18802       [1]    ?ICS_DLPF_FS_SEL_1
0x18803       [1]    ?ICS_DLPF_CFG_0
0x18804       [1]    ?ICS_SMPLRT_DIV
0x18805       [1]    ?ICS_GYRO_XOUT_H
0x18806       [6]    ?ICS_gyroreadings
0x1880C       [6]    ?ICS_Old_Gyro_vals
0x18812       [2]    ?ICS__disp_gyro_scroll
0x18814       [8]    ?ICS_OldMyTime
0x1881C       [3]    ?ICS?lstr1_RTCC_main
0x1881F       [3]    ?ICS?lstr2_RTCC_main
0x18822       [3]    ?ICS?lstr1___Lib_MmcFat16
0x18825       [2]    ?ICS?lstr2___Lib_MmcFat16
0x18827       [1]    ?ICS__Lib_Mmc_SDIO_cardType
0x18828       [4]    ?ICS__Lib_Mmc_SDIO_Mmc_Init_Ptr
0x1882C       [4]    ?ICS__Lib_Mmc_SDIO_Mmc_Read_Sector_Ptr
0x18830       [4]    ?ICS__Lib_Mmc_SDIO_Mmc_Write_Sector_Ptr
0x18834       [4]    ?ICS__Lib_Mmc_SDIO_Mmc_Read_Cid_Ptr
0x18838       [4]    ?ICS__Lib_Mmc_SDIO_Mmc_Read_Csd_Ptr
0x1883C       [4]    ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Read_Start_Ptr
0x18840       [4]    ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Read_Sector_Ptr
0x18844       [4]    ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Read_Stop_Ptr
0x18848       [4]    ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Write_Start_Ptr
0x1884C       [4]    ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Write_Sector_Ptr
0x18850       [4]    ?ICS__Lib_Mmc_SDIO_Mmc_Multi_Write_Stop_Ptr
0x18854       [4]    ?ICS__Lib_Mmc_SDIO_CardTypeSdio
0x18858       [4]    ?ICS__Lib_Mmc_SDIO_TotalNumberOfBytes
0x1885C       [4]    ?ICS__Lib_Mmc_SDIO_RCA
0x18860       [1]    ?ICS__Lib_STMPE610_pressed
0x18861      [16]    ?ICS__Lib_System_4XX_APBAHBPrescTable
0x18871       [1]    ?ICS__Lib_TFT___MM_plus
0x18872       [2]    ?ICS__Lib_TFT_Ptr_Set
0x18874       [1]    ?ICS__Lib_TFT___no_acceleration
0x18875       [1]    ?ICS__Lib_TFT___SSD1963_controller
0x18876       [1]    ?ICS__Lib_TFT_FontInitialized
0x18877       [1]    ?ICS__Lib_TFT_Defs_TFT_Rotated_180
0x18878       [1]    ?ICS__Lib_TFT_Defs_TFT_Disp_Rotation
0x18879       [1]    ?ICSSDIO_Init_firstCall_mark_L0
0x1887A       [2]    ?ICS__Lib_TFT_Defs___controller
0x1887C      [44]    ?ICS__Lib_USB_32F4xx_USBD_DCD_INT_cb
0x188A8     [192]    _filter
0x18968     [192]    _table
0x18A28     [108]    __GPIO_MODULE_SDIO_D0_D3
0x18A94     [108]    __GPIO_MODULE_I2C1_PB67
0x18B00     [108]    __GPIO_MODULE_I2C2_PF01
0x18B6C     [104]    _Screen1_Images
0x18BD4      [84]    _Screen7_Labels
0x18C28      [52]    _Box1
0x18C5C      [40]    _Image14
0x18C84      [40]    _Image13
0x18CAC      [40]    _Screen2_Labels
0x18CD4      [40]    _Screen3_Labels
0x18CFC      [32]    _Screen3_Images
0x18D1C      [32]    _Screen2_Images
0x18D3C      [28]    _Screen4_Buttons_Round
0x18D58      [28]    _Screen5_Boxes
0x18D74      [16]    _Screen9_Labels
0x18D84      [16]    _Screen10_Labels
0x18D94      [16]    _Screen6_Labels
0x18DA4      [16]    _Screen8_Labels
0x18DB4       [4]    ?ICS__Lib_Mmc_SDIO_FindSCR_index_L0
0x18DB8       [1]    ?ICS__Lib_Mmc_SDIO_FindSCR_errorstatus_L0
0x18DBC       [8]    ?ICS__Lib_Mmc_SDIO_FindSCR_tempscr_L0
0x18DC4      [16]    _Screen11_Labels
0x18DD4      [12]    _Screen5_Labels
0x18DE0      [12]    _Screen5_Images
0x18DEC       [1]    ?ICS__Lib_Mmc_SDIO_SDEnWideBus_errorstatus_L0
0x18DF0       [8]    ?ICS__Lib_Mmc_SDIO_SDEnWideBus_scr_L0
0x18DF8       [8]    _Screen6_Boxes
0x18E00       [8]    _Screen7_Boxes
0x18E08       [8]    _Screen10_Boxes
0x18E10       [8]    _Screen11_Boxes
0x18E18       [8]    _Screen4_Labels
0x18E20       [8]    _Screen8_Boxes
0x18E28       [8]    _Screen9_Boxes
0x18E30       [8]    _Screen4_Images
0x18E38       [4]    _Screen2_Boxes
0x18E3C       [4]    _Screen2_Buttons_Round
0x18E40       [4]    _Screen2_CImages
0x18E44       [4]    _Screen2_CircleButtons
0x18E48       [4]    _Screen3_Circles
0x18E4C       [4]    _Screen4_CBoxes
0x18E50       [4]    _Screen6_Images
0x18E54       [4]    _Screen7_Images
0x18E58       [4]    _Screen4_Boxes
0x18E5C       [4]    _Screen3_CircleButtons
0x18E60       [4]    _Screen3_Boxes
0x18E64       [4]    _Screen3_Lines
