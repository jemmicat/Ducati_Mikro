_Init_GPIO:
  begin   (midx: 0)
//Init_routines.c,55 :: 		void Init_GPIO(){
_Init_GPIO:
  begin   (midx: 0)
//Init_routines.c,60 :: 		GPIO_Digital_Output(&GPIOG_BASE, _GPIO_PINMASK_15);
	R1 <4> <- 32768   (midx: 0)
	R0 <4> <- #GPIOG_BASE   (midx: 0)
	CALL _GPIO_Digital_Output   (midx: 0)
//Init_routines.c,61 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_3 | _GPIO_PINMASK_4);
	R1 <4> <- 24   (midx: 0)
	R0 <4> <- #GPIOB_BASE   (midx: 0)
	CALL _GPIO_Digital_Output   (midx: 0)
//Init_routines.c,64 :: 		Power_Man_Init();
	CALL _Power_Man_Init   (midx: 0)
//Init_routines.c,67 :: 		Fat_Initialized_Flag = 0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_Fat_Initialized_Flag)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//Init_routines.c,68 :: 		Ext_res_initialized = 0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_Ext_res_initialized)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//Init_routines.c,69 :: 		Ext_fhandle = 0xFF;
	R1 <1> <- 255   (midx: 0)
	R0 <4> <- addr(_Ext_fhandle)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
  end
   (midx: 0)
_Init_SDIO:
  begin   (midx: 0)
//Init_routines.c,79 :: 		void Init_SDIO(){
_Init_SDIO:
  begin   (midx: 0)
//Init_routines.c,81 :: 		SDIO_Reset();
	CALL _SDIO_Reset   (midx: 0)
//Init_routines.c,82 :: 		Ext_res_initialized = 0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_Ext_res_initialized)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//Init_routines.c,83 :: 		Fat_Initialized_Flag = 0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_Fat_Initialized_Flag)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//Init_routines.c,84 :: 		Ext_fhandle = 0xFF;
	R1 <1> <- 255   (midx: 0)
	R0 <4> <- addr(_Ext_fhandle)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//Init_routines.c,87 :: 		| _SDIO_CFG_CLOCK_RISING_EDGE | _SDIO_CFG_HW_FLOW_DISABLE, 125, &_GPIO_MODULE_SDIO_D0_D3);
	R2 <4> <- #__GPIO_MODULE_SDIO_D0_D3   (midx: 0)
	R1 <1> <- 125   (midx: 0)
	R0 <4> <- 2048   (midx: 0)
	CALL _SDIO_Init   (midx: 0)
//Init_routines.c,90 :: 		GPIOD_PUPDRbits.PUPDR2 = 1;
	R2 <1> <- 1   (midx: 0)
	R1 <4> <- addr(GPIOD_PUPDRbits+0)   (midx: 0)
	R0 <1> <- [R1]   (midx: 0)
	TI20 <1> <- R2   (midx: 0)
	[R1] <1> <- TI20   (midx: 0)
//Init_routines.c,91 :: 		GPIOC_PUPDRbits.PUPDR8 = 1;
	R2 <4> <- 1   (midx: 0)
	R1 <4> <- addr(GPIOC_PUPDRbits+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	TI24 <4> <- R2   (midx: 0)
	[R1] <4> <- TI24   (midx: 0)
//Init_routines.c,92 :: 		GPIOC_PUPDRbits.PUPDR9 = 1;
	R2 <4> <- 1   (midx: 0)
	R1 <4> <- addr(GPIOC_PUPDRbits+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	TI28 <4> <- R2   (midx: 0)
	[R1] <4> <- TI28   (midx: 0)
//Init_routines.c,93 :: 		GPIOC_PUPDRbits.PUPDR10 = 1;
	R2 <4> <- 1   (midx: 0)
	R1 <4> <- addr(GPIOC_PUPDRbits+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	TI32 <4> <- R2   (midx: 0)
	[R1] <4> <- TI32   (midx: 0)
//Init_routines.c,94 :: 		GPIOC_PUPDRbits.PUPDR11 = 1;
	R2 <4> <- 1   (midx: 0)
	R1 <4> <- addr(GPIOC_PUPDRbits+0)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	TI36 <4> <- R2   (midx: 0)
	[R1] <4> <- TI36   (midx: 0)
//Init_routines.c,96 :: 		Mmc_Set_Interface(_MMC_INTERFACE_SDIO);
	R0 <1> <- 1   (midx: 0)
	CALL _Mmc_Set_Interface   (midx: 0)
  end
   (midx: 0)
_MyTFT_Get_Data:
  begin   (midx: 0)
//Init_routines.c,108 :: 		char* MyTFT_Get_Data(unsigned long offset, unsigned long count, unsigned long *num) {
_MyTFT_Get_Data:
  begin   (midx: 0)
   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	FARG_MyTFT_Get_Data_count <4> <- R1   (midx: 0)
   (midx: 0)
   (midx: 0)
	FARG_MyTFT_Get_Data_num <4> <- R2   (midx: 0)
   (midx: 0)
//Init_routines.c,112 :: 		FAT32_Seek(Ext_fhandle, offset);
	R3 <4> <- addr(_Ext_fhandle)   (midx: 0)
	R3 <1> <- [R3]   (midx: 0)
	R0 <4> <- PUSH(R0)   (midx: 255)
	R1 <4> <- R0   (midx: 0)
	R0 <1> <- R3   (midx: 0)
	CALL _FAT32_Seek   (midx: 0)
	R0 <4> <- POP   (midx: 255)
//Init_routines.c,113 :: 		pos = (unsigned long)offset%512;
	R3 <4> <- 511   (midx: 0)
   (midx: 0)
	R3 <4> <-  R0 & R3   (midx: 2)
   (midx: 0)
	R0 <2> <- R3   (midx: 0)
//Init_routines.c,114 :: 		FAT32_Read(Ext_fhandle, My_Ext_Data_Buffer, 512);
	R3 <4> <- addr(_Ext_fhandle)   (midx: 0)
	R3 <1> <- [R3]   (midx: 0)
	R0 <2> <- PUSH(R0)   (midx: 255)
	R2 <2> <- 512   (midx: 0)
	R1 <4> <- #_My_Ext_Data_Buffer   (midx: 0)
	R0 <1> <- R3   (midx: 0)
	CALL _FAT32_Read   (midx: 0)
	R0 <2> <- POP   (midx: 255)
//Init_routines.c,116 :: 		if(count>512-pos)
	R4 <2> <-  512 - R0   (midx: 1)
	R3 <4> <- FARG_MyTFT_Get_Data_count   (midx: 0)
	if ( R3 <= R4) then goto 0   (midx: 2)
//Init_routines.c,117 :: 		*num = 512-pos;
   (midx: 0)
	R4 <2> <-  512 - R0   (midx: 1)
	R3 <4> <- FARG_MyTFT_Get_Data_num   (midx: 0)
	[R3] <4> <- R4   (midx: 0)
	goto	1   (midx: 0)
0:   (midx: 0)
//Init_routines.c,119 :: 		*num = count;
	R4 <4> <- FARG_MyTFT_Get_Data_count   (midx: 0)
	R3 <4> <- FARG_MyTFT_Get_Data_num   (midx: 0)
	[R3] <4> <- R4   (midx: 0)
1:   (midx: 0)
//Init_routines.c,121 :: 		return My_Ext_Data_Buffer;
	R0 <4> <- #_My_Ext_Data_Buffer   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
_Init_FAT:
  begin   (midx: 0)
//Init_routines.c,132 :: 		char Init_FAT(){
_Init_FAT:
  begin   (midx: 0)
//Init_routines.c,133 :: 		char FAT_cnt = 0;
   (midx: 0)
   (midx: 0)
	R2 <-initialize(0)   (midx: 0)
//Init_routines.c,134 :: 		if (MMC_Card_Detect == 0){
	R1 <4> <- addr(MMC_Card_Detect)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	if (R0) then goto 2   (midx: 21)
//Init_routines.c,135 :: 		if (Fat_Initialized_Flag == 0){
	R0 <4> <- addr(_Fat_Initialized_Flag)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
   (midx: 0)
	if ( R0 != 0) then goto 3   (midx: 0)
	R1 <1> <- R2   (midx: 0)
//Init_routines.c,136 :: 		while ((Fat32_Init() != 0) && (FAT_cnt < 5))
4:   (midx: 0)
   (midx: 0)
	R1 <1> <- PUSH(R1)   (midx: 255)
	CALL _FAT32_Init   (midx: 0)
	R1 <1> <- POP   (midx: 255)
	if ( R0 = 0) then goto 13   (midx: 4)
	if ( R1 >= 5) then goto 12   (midx: 0)
11:   (midx: 0)
//Init_routines.c,137 :: 		Fat_cnt ++;
	R1 <1> <-  R1 + 1   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	goto	4   (midx: 0)
//Init_routines.c,136 :: 		while ((Fat32_Init() != 0) && (FAT_cnt < 5))
13:   (midx: 0)
12:   (midx: 0)
//Init_routines.c,138 :: 		if (FAT_cnt < 5){
   (midx: 0)
	if ( R1 >= 5) then goto 8   (midx: 0)
//Init_routines.c,140 :: 		| _SDIO_CFG_CLOCK_RISING_EDGE | _SDIO_CFG_HW_FLOW_DISABLE, 1, &_GPIO_MODULE_SDIO_D0_D3);
	R2 <4> <- #__GPIO_MODULE_SDIO_D0_D3   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- 2048   (midx: 0)
	CALL _SDIO_Init   (midx: 0)
//Init_routines.c,141 :: 		Fat_Initialized_Flag = 1;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_Fat_Initialized_Flag)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//Init_routines.c,142 :: 		}
8:   (midx: 0)
//Init_routines.c,143 :: 		}
3:   (midx: 0)
//Init_routines.c,144 :: 		if (Ext_res_initialized == 0){
	R0 <4> <- addr(_Ext_res_initialized)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	if ( R0 != 0) then goto 9   (midx: 0)
//Init_routines.c,145 :: 		TFT_Set_Ext_Buffer(MyTFT_Get_Data);
	R0 <4> <- #_MyTFT_Get_Data   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Set_Ext_Buffer   (midx: 0)
//Init_routines.c,146 :: 		Ext_fhandle = FAT32_Open("Ext_reso.RES", 1);
	R0 <4> <- #?lstr1_Init_routines   (midx: 0)
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _FAT32_Open   (midx: 0)
	R1 <4> <- addr(_Ext_fhandle)   (midx: 0)
	[R1] <1> <- R0   (midx: 0)
//Init_routines.c,147 :: 		if (Ext_fhandle != 0xFF)
	if ( R0 = 255) then goto 10   (midx: 5)
//Init_routines.c,148 :: 		Ext_res_initialized = 1;
	R1 <1> <- 1   (midx: 0)
	R0 <4> <- addr(_Ext_res_initialized)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
10:   (midx: 0)
//Init_routines.c,149 :: 		}
9:   (midx: 0)
//Init_routines.c,150 :: 		}
2:   (midx: 0)
//Init_routines.c,152 :: 		return Ext_res_initialized;
	R0 <4> <- addr(_Ext_res_initialized)   (midx: 0)
	R0 <1> <- [R0]   (midx: 0)
	return   (midx: 0)
  end
   (midx: 0)
